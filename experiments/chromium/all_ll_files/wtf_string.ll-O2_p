; ModuleID = '../../third_party/blink/renderer/platform/wtf/text/wtf_string.cc'
source_filename = "../../third_party/blink/renderer/platform/wtf/text/wtf_string.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [256 x i8] }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.8, i32, i8, i8, [2 x i8] }>
%union.anon.8 = type { %"class.WTF::Vector.9" }
%"class.WTF::Vector.9" = type { %"class.WTF::VectorBuffer.10" }
%"class.WTF::VectorBuffer.10" = type { %"class.WTF::VectorBufferBase.11", [16 x i8] }
%"class.WTF::VectorBufferBase.11" = type { i8*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::Vector.19" = type { %"class.WTF::VectorBuffer.20" }
%"class.WTF::VectorBuffer.20" = type { %"class.WTF::VectorBufferBase.21" }
%"class.WTF::VectorBufferBase.21" = type { %"class.WTF::String"*, i32, i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.WTF::Vector.24" = type { %"class.WTF::VectorBuffer.25" }
%"class.WTF::VectorBuffer.25" = type { %"class.WTF::VectorBufferBase", [1024 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.WTF::Vector.28" = type { %"class.WTF::VectorBuffer.29" }
%"class.WTF::VectorBuffer.29" = type { %"class.WTF::VectorBufferBase.16", [2048 x i8] }
%"class.WTF::VectorBufferBase.16" = type { i16*, i32, i32 }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type opaque
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.WTF::StringUTF8Adaptor" = type <{ %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.WTF::Vector.14" = type { %"class.WTF::VectorBuffer.15" }
%"class.WTF::VectorBuffer.15" = type { %"class.WTF::VectorBufferBase.16", [16 x i8] }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3WTF12VectorBufferIcLj256ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPc = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF12VectorBufferIcLj1024ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPc = comdat any

$_ZN3WTF12VectorBufferIDsLj1024ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm = comdat any

$_ZN3WTF6VectorIcLj256ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIcLj256ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZN3WTF10StringImpl12empty16_bit_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str = private unnamed_addr constant [46 x i8] c"static_cast<unsigned>(length) < buffer.size()\00", align 1
@.str.1 = private unnamed_addr constant [65 x i8] c"../../third_party/blink/renderer/platform/wtf/text/wtf_string.cc\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"<null>\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"\5Ct\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"\5Cn\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"\5Cr\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"\5C\22\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"\5C\5C\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"\5Cu%04X\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@_ZN3WTF20g_empty_string16_bitE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str.9 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.10 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.12 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.13 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN3WTF6StringC1EPKDsj = hidden unnamed_addr alias void (%"class.WTF::String"*, i16*, i32), void (%"class.WTF::String"*, i16*, i32)* @_ZN3WTF6StringC2EPKDsj
@_ZN3WTF6StringC1EPKDs = hidden unnamed_addr alias void (%"class.WTF::String"*, i16*), void (%"class.WTF::String"*, i16*)* @_ZN3WTF6StringC2EPKDs
@_ZN3WTF6StringC1EPKhj = hidden unnamed_addr alias void (%"class.WTF::String"*, i8*, i32), void (%"class.WTF::String"*, i8*, i32)* @_ZN3WTF6StringC2EPKhj
@_ZN3WTF6StringC1EPKcj = hidden unnamed_addr alias void (%"class.WTF::String"*, i8*, i32), void (%"class.WTF::String"*, i8*, i32)* @_ZN3WTF6StringC2EPKcj
@_ZN3WTF6StringC1EPKcm = hidden unnamed_addr alias void (%"class.WTF::String"*, i8*, i64), void (%"class.WTF::String"*, i8*, i64)* @_ZN3WTF6StringC2EPKcm

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF6StringC2EPKDsj(%"class.WTF::String"* nocapture, i16*, i32) unnamed_addr #0 align 2 {
  %4 = icmp eq i16* %1, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKDsj(i16* nonnull %1, i32 %2) #5
  br label %7

7:                                                ; preds = %3, %5
  %8 = phi %"class.WTF::StringImpl"* [ %6, %5 ], [ null, %3 ]
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKDsj(i16*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF6StringC2EPKDs(%"class.WTF::String"* nocapture, i16*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %3, align 8
  %4 = icmp eq i16* %1, null
  br i1 %4, label %34, label %5

5:                                                ; preds = %2, %5
  %6 = phi i64 [ %10, %5 ], [ 0, %2 ]
  %7 = getelementptr inbounds i16, i16* %1, i64 %6
  %8 = load i16, i16* %7, align 2
  %9 = icmp eq i16 %8, 0
  %10 = add i64 %6, 1
  br i1 %9, label %11, label %5

11:                                               ; preds = %5
  %12 = icmp ult i64 %6, 4294967296
  br i1 %12, label %14, label %13, !prof !2

13:                                               ; preds = %11
  tail call void @llvm.trap() #5
  unreachable

14:                                               ; preds = %11
  %15 = trunc i64 %6 to i32
  %16 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKDsj(i16* nonnull %1, i32 %15) #5
  %17 = ptrtoint %"class.WTF::StringImpl"* %16 to i64
  %18 = bitcast %"class.WTF::String"* %0 to i64*
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  store i64 %17, i64* %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #5
  br label %34

34:                                               ; preds = %33, %30, %14, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF6StringC2EPKhj(%"class.WTF::String"* nocapture, i8*, i32) unnamed_addr #0 align 2 {
  %4 = icmp eq i8* %1, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* nonnull %1, i32 %2) #5
  br label %7

7:                                                ; preds = %3, %5
  %8 = phi %"class.WTF::StringImpl"* [ %6, %5 ], [ null, %3 ]
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF6StringC2EPKcj(%"class.WTF::String"* nocapture, i8*, i32) unnamed_addr #0 align 2 {
  %4 = icmp eq i8* %1, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* nonnull %1, i32 %2) #5
  br label %7

7:                                                ; preds = %3, %5
  %8 = phi %"class.WTF::StringImpl"* [ %6, %5 ], [ null, %3 ]
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nocapture, i8*, i64) unnamed_addr #0 align 2 {
  %4 = icmp ult i64 %2, 4294967296
  br i1 %4, label %6, label %5, !prof !2

5:                                                ; preds = %3
  tail call void @llvm.trap() #5
  unreachable

6:                                                ; preds = %3
  %7 = icmp eq i8* %1, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %6
  %9 = trunc i64 %2 to i32
  %10 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* nonnull %1, i32 %9) #5
  br label %11

11:                                               ; preds = %6, %8
  %12 = phi %"class.WTF::StringImpl"* [ %10, %8 ], [ null, %6 ]
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN3WTF15CodeUnitCompareERKNS_6StringES2_(%"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %4, null
  %8 = icmp ne %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %9, label %15

9:                                                ; preds = %2
  br i1 %8, label %10, label %168

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp ne i32 %12, 0
  %14 = sext i1 %13 to i32
  br label %168

15:                                               ; preds = %2
  br i1 %8, label %21, label %16

16:                                               ; preds = %15
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp ne i32 %18, 0
  %20 = zext i1 %19 to i32
  br label %168

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 1
  %29 = icmp ne i32 %28, 0
  br i1 %25, label %94, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp ult i32 %32, %34
  %36 = select i1 %35, i32 %32, i32 %34
  %37 = icmp eq i32 %36, 0
  br i1 %29, label %38, label %64

38:                                               ; preds = %30
  br i1 %37, label %59, label %39

39:                                               ; preds = %38
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %51, %39
  %45 = phi i32 [ %54, %51 ], [ 0, %39 ]
  %46 = phi i8* [ %53, %51 ], [ %41, %39 ]
  %47 = phi i8* [ %52, %51 ], [ %43, %39 ]
  %48 = load i8, i8* %47, align 1
  %49 = load i8, i8* %46, align 1
  %50 = icmp eq i8 %48, %49
  br i1 %50, label %51, label %56

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %47, i64 1
  %53 = getelementptr inbounds i8, i8* %46, i64 1
  %54 = add nuw i32 %45, 1
  %55 = icmp ult i32 %54, %36
  br i1 %55, label %44, label %59

56:                                               ; preds = %44
  %57 = icmp ugt i8 %48, %49
  %58 = select i1 %57, i32 1, i32 -1
  br label %168

59:                                               ; preds = %51, %38
  %60 = icmp eq i32 %32, %34
  br i1 %60, label %168, label %61

61:                                               ; preds = %59
  %62 = icmp ugt i32 %32, %34
  %63 = select i1 %62, i32 1, i32 -1
  br label %168

64:                                               ; preds = %30
  br i1 %37, label %89, label %65

65:                                               ; preds = %64
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %67 = bitcast %"class.WTF::StringImpl"* %66 to i16*
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %69 = bitcast %"class.WTF::StringImpl"* %68 to i8*
  br label %70

70:                                               ; preds = %79, %65
  %71 = phi i32 [ %82, %79 ], [ 0, %65 ]
  %72 = phi i16* [ %81, %79 ], [ %67, %65 ]
  %73 = phi i8* [ %80, %79 ], [ %69, %65 ]
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = load i16, i16* %72, align 2
  %77 = zext i16 %76 to i32
  %78 = icmp eq i32 %75, %77
  br i1 %78, label %79, label %84

79:                                               ; preds = %70
  %80 = getelementptr inbounds i8, i8* %73, i64 1
  %81 = getelementptr inbounds i16, i16* %72, i64 1
  %82 = add nuw i32 %71, 1
  %83 = icmp ult i32 %82, %36
  br i1 %83, label %70, label %89

84:                                               ; preds = %70
  %85 = zext i8 %74 to i32
  %86 = zext i16 %76 to i32
  %87 = icmp ugt i32 %85, %86
  %88 = select i1 %87, i32 1, i32 -1
  br label %168

89:                                               ; preds = %79, %64
  %90 = icmp eq i32 %32, %34
  br i1 %90, label %168, label %91

91:                                               ; preds = %89
  %92 = icmp ugt i32 %32, %34
  %93 = select i1 %92, i32 1, i32 -1
  br label %168

94:                                               ; preds = %21
  br i1 %29, label %95, label %135

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp ult i32 %97, %99
  %101 = select i1 %100, i32 %97, i32 %99
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %127, label %103

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %105 = bitcast %"class.WTF::StringImpl"* %104 to i16*
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %107 = bitcast %"class.WTF::StringImpl"* %106 to i8*
  br label %108

108:                                              ; preds = %117, %103
  %109 = phi i32 [ %120, %117 ], [ 0, %103 ]
  %110 = phi i16* [ %119, %117 ], [ %105, %103 ]
  %111 = phi i8* [ %118, %117 ], [ %107, %103 ]
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = load i16, i16* %110, align 2
  %115 = zext i16 %114 to i32
  %116 = icmp eq i32 %113, %115
  br i1 %116, label %117, label %122

117:                                              ; preds = %108
  %118 = getelementptr inbounds i8, i8* %111, i64 1
  %119 = getelementptr inbounds i16, i16* %110, i64 1
  %120 = add nuw i32 %109, 1
  %121 = icmp ult i32 %120, %101
  br i1 %121, label %108, label %127

122:                                              ; preds = %108
  %123 = zext i8 %112 to i32
  %124 = zext i16 %114 to i32
  %125 = icmp ugt i32 %123, %124
  %126 = select i1 %125, i32 1, i32 -1
  br label %132

127:                                              ; preds = %117, %95
  %128 = icmp eq i32 %97, %99
  br i1 %128, label %132, label %129

129:                                              ; preds = %127
  %130 = icmp ugt i32 %97, %99
  %131 = select i1 %130, i32 1, i32 -1
  br label %132

132:                                              ; preds = %129, %127, %122
  %133 = phi i32 [ %126, %122 ], [ %131, %129 ], [ 0, %127 ]
  %134 = sub nsw i32 0, %133
  br label %168

135:                                              ; preds = %94
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = icmp ult i32 %137, %139
  %141 = select i1 %140, i32 %137, i32 %139
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %163, label %143

143:                                              ; preds = %135
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %145 = bitcast %"class.WTF::StringImpl"* %144 to i16*
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %147 = bitcast %"class.WTF::StringImpl"* %146 to i16*
  br label %148

148:                                              ; preds = %155, %143
  %149 = phi i32 [ %158, %155 ], [ 0, %143 ]
  %150 = phi i16* [ %157, %155 ], [ %145, %143 ]
  %151 = phi i16* [ %156, %155 ], [ %147, %143 ]
  %152 = load i16, i16* %151, align 2
  %153 = load i16, i16* %150, align 2
  %154 = icmp eq i16 %152, %153
  br i1 %154, label %155, label %160

155:                                              ; preds = %148
  %156 = getelementptr inbounds i16, i16* %151, i64 1
  %157 = getelementptr inbounds i16, i16* %150, i64 1
  %158 = add nuw i32 %149, 1
  %159 = icmp ult i32 %158, %141
  br i1 %159, label %148, label %163

160:                                              ; preds = %148
  %161 = icmp ugt i16 %152, %153
  %162 = select i1 %161, i32 1, i32 -1
  br label %168

163:                                              ; preds = %155, %135
  %164 = icmp eq i32 %137, %139
  br i1 %164, label %168, label %165

165:                                              ; preds = %163
  %166 = icmp ugt i32 %137, %139
  %167 = select i1 %166, i32 1, i32 -1
  br label %168

168:                                              ; preds = %9, %10, %16, %56, %59, %61, %84, %89, %91, %132, %160, %163, %165
  %169 = phi i32 [ %20, %16 ], [ 0, %9 ], [ %14, %10 ], [ %134, %132 ], [ %58, %56 ], [ %63, %61 ], [ 0, %59 ], [ %88, %84 ], [ %93, %91 ], [ 0, %89 ], [ %162, %160 ], [ %167, %165 ], [ 0, %163 ]
  ret i32 %169
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3WTF32CodeUnitCompareIgnoringASCIICaseERKNS_6StringEPKc(%"class.WTF::String"* nocapture readonly dereferenceable(8), i8*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = tail call i32 @_ZN3WTF32CodeUnitCompareIgnoringASCIICaseEPKNS_10StringImplEPKh(%"class.WTF::StringImpl"* %4, i8* %1) #5
  ret i32 %5
}

declare i32 @_ZN3WTF32CodeUnitCompareIgnoringASCIICaseEPKNS_10StringImplEPKh(%"class.WTF::StringImpl"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3WTF6String4FindEN4base17RepeatingCallbackIFbDsEEEj(%"class.WTF::String"* nocapture readonly, %"class.base::RepeatingCallback"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RepeatingCallback", align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0
  %10 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %9, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %10) #5
  %11 = call i32 @_ZNK3WTF10StringImpl4FindEN4base17RepeatingCallbackIFbDsEEEj(%"class.WTF::StringImpl"* nonnull %6, %"class.base::RepeatingCallback"* nonnull %4, i32 %2) #5
  %12 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %12) #5
  br label %13

13:                                               ; preds = %3, %8
  %14 = phi i32 [ %11, %8 ], [ -1, %3 ]
  ret i32 %14
}

declare i32 @_ZNK3WTF10StringImpl4FindEN4base17RepeatingCallbackIFbDsEEEj(%"class.WTF::StringImpl"*, %"class.base::RepeatingCallback"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3WTF6String19CharacterStartingAtEj(%"class.WTF::String"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %8, %1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = tail call i32 @_ZN3WTF10StringImpl19CharacterStartingAtEj(%"class.WTF::StringImpl"* nonnull %4, i32 %1) #5
  br label %12

12:                                               ; preds = %2, %6, %10
  %13 = phi i32 [ %11, %10 ], [ 0, %6 ], [ 0, %2 ]
  ret i32 %13
}

declare i32 @_ZN3WTF10StringImpl19CharacterStartingAtEj(%"class.WTF::StringImpl"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF6String11Ensure16BitEv(%"class.WTF::String"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca i16*, align 8
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %192, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %192, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %151, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %17 = bitcast %"class.WTF::StringImpl"* %16 to i8*
  %18 = bitcast i16** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #5
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %2, align 8
  %19 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %13, i16** nonnull dereferenceable(8) %2) #5
  %20 = load i16*, i16** %2, align 8
  %21 = zext i32 %13 to i64
  %22 = icmp ult i32 %13, 16
  br i1 %22, label %91, label %23

23:                                               ; preds = %15
  %24 = bitcast i16* %20 to i8*
  %25 = getelementptr i16, i16* %20, i64 %21
  %26 = getelementptr %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1, i32 0
  %27 = bitcast i32* %26 to i8*
  %28 = getelementptr i8, i8* %27, i64 %21
  %29 = icmp ugt i8* %28, %24
  %30 = bitcast i16* %25 to %"class.WTF::StringImpl"*
  %31 = icmp ult %"class.WTF::StringImpl"* %16, %30
  %32 = and i1 %29, %31
  br i1 %32, label %91, label %33

33:                                               ; preds = %23
  %34 = and i64 %21, 4294967280
  %35 = add nsw i64 %34, -16
  %36 = lshr exact i64 %35, 4
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 1
  %39 = icmp eq i64 %35, 0
  br i1 %39, label %73, label %40

40:                                               ; preds = %33
  %41 = sub nuw nsw i64 %37, %38
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi i64 [ 0, %40 ], [ %70, %42 ]
  %44 = phi i64 [ %41, %40 ], [ %71, %42 ]
  %45 = getelementptr inbounds i8, i8* %17, i64 %43
  %46 = bitcast i8* %45 to <8 x i8>*
  %47 = load <8 x i8>, <8 x i8>* %46, align 1, !alias.scope !3
  %48 = getelementptr inbounds i8, i8* %45, i64 8
  %49 = bitcast i8* %48 to <8 x i8>*
  %50 = load <8 x i8>, <8 x i8>* %49, align 1, !alias.scope !3
  %51 = zext <8 x i8> %47 to <8 x i16>
  %52 = zext <8 x i8> %50 to <8 x i16>
  %53 = getelementptr inbounds i16, i16* %20, i64 %43
  %54 = bitcast i16* %53 to <8 x i16>*
  store <8 x i16> %51, <8 x i16>* %54, align 2, !alias.scope !6, !noalias !3
  %55 = getelementptr inbounds i16, i16* %53, i64 8
  %56 = bitcast i16* %55 to <8 x i16>*
  store <8 x i16> %52, <8 x i16>* %56, align 2, !alias.scope !6, !noalias !3
  %57 = or i64 %43, 16
  %58 = getelementptr inbounds i8, i8* %17, i64 %57
  %59 = bitcast i8* %58 to <8 x i8>*
  %60 = load <8 x i8>, <8 x i8>* %59, align 1, !alias.scope !3
  %61 = getelementptr inbounds i8, i8* %58, i64 8
  %62 = bitcast i8* %61 to <8 x i8>*
  %63 = load <8 x i8>, <8 x i8>* %62, align 1, !alias.scope !3
  %64 = zext <8 x i8> %60 to <8 x i16>
  %65 = zext <8 x i8> %63 to <8 x i16>
  %66 = getelementptr inbounds i16, i16* %20, i64 %57
  %67 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %64, <8 x i16>* %67, align 2, !alias.scope !6, !noalias !3
  %68 = getelementptr inbounds i16, i16* %66, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  store <8 x i16> %65, <8 x i16>* %69, align 2, !alias.scope !6, !noalias !3
  %70 = add i64 %43, 32
  %71 = add i64 %44, -2
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %42, !llvm.loop !8

73:                                               ; preds = %42, %33
  %74 = phi i64 [ 0, %33 ], [ %70, %42 ]
  %75 = icmp eq i64 %38, 0
  br i1 %75, label %89, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds i8, i8* %17, i64 %74
  %78 = bitcast i8* %77 to <8 x i8>*
  %79 = load <8 x i8>, <8 x i8>* %78, align 1, !alias.scope !3
  %80 = getelementptr inbounds i8, i8* %77, i64 8
  %81 = bitcast i8* %80 to <8 x i8>*
  %82 = load <8 x i8>, <8 x i8>* %81, align 1, !alias.scope !3
  %83 = zext <8 x i8> %79 to <8 x i16>
  %84 = zext <8 x i8> %82 to <8 x i16>
  %85 = getelementptr inbounds i16, i16* %20, i64 %74
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %86, align 2, !alias.scope !6, !noalias !3
  %87 = getelementptr inbounds i16, i16* %85, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %88, align 2, !alias.scope !6, !noalias !3
  br label %89

89:                                               ; preds = %73, %76
  %90 = icmp eq i64 %34, %21
  br i1 %90, label %133, label %91

91:                                               ; preds = %89, %23, %15
  %92 = phi i64 [ 0, %23 ], [ 0, %15 ], [ %34, %89 ]
  %93 = xor i64 %92, -1
  %94 = add nsw i64 %93, %21
  %95 = and i64 %21, 3
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %107, label %97

97:                                               ; preds = %91, %97
  %98 = phi i64 [ %104, %97 ], [ %92, %91 ]
  %99 = phi i64 [ %105, %97 ], [ %95, %91 ]
  %100 = getelementptr inbounds i8, i8* %17, i64 %98
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i16
  %103 = getelementptr inbounds i16, i16* %20, i64 %98
  store i16 %102, i16* %103, align 2
  %104 = add nuw nsw i64 %98, 1
  %105 = add i64 %99, -1
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %97, !llvm.loop !10

107:                                              ; preds = %97, %91
  %108 = phi i64 [ %92, %91 ], [ %104, %97 ]
  %109 = icmp ult i64 %94, 3
  br i1 %109, label %133, label %110

110:                                              ; preds = %107, %110
  %111 = phi i64 [ %131, %110 ], [ %108, %107 ]
  %112 = getelementptr inbounds i8, i8* %17, i64 %111
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i16
  %115 = getelementptr inbounds i16, i16* %20, i64 %111
  store i16 %114, i16* %115, align 2
  %116 = add nuw nsw i64 %111, 1
  %117 = getelementptr inbounds i8, i8* %17, i64 %116
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i16
  %120 = getelementptr inbounds i16, i16* %20, i64 %116
  store i16 %119, i16* %120, align 2
  %121 = add nuw nsw i64 %111, 2
  %122 = getelementptr inbounds i8, i8* %17, i64 %121
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i16
  %125 = getelementptr inbounds i16, i16* %20, i64 %121
  store i16 %124, i16* %125, align 2
  %126 = add nuw nsw i64 %111, 3
  %127 = getelementptr inbounds i8, i8* %17, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i16
  %130 = getelementptr inbounds i16, i16* %20, i64 %126
  store i16 %129, i16* %130, align 2
  %131 = add nuw nsw i64 %111, 4
  %132 = icmp eq i64 %131, %21
  br i1 %132, label %133, label %110, !llvm.loop !12

133:                                              ; preds = %107, %110, %89
  %134 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #5
  %135 = bitcast %"class.WTF::String"* %0 to i64*
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  store i64 %134, i64* %135, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %137, label %192, label %138

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  br i1 %142, label %145, label %147

145:                                              ; preds = %138
  %146 = add i32 %144, -1
  store i32 %146, i32* %143, align 4
  br label %147

147:                                              ; preds = %145, %138
  %148 = phi i32 [ %146, %145 ], [ %144, %138 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %192

150:                                              ; preds = %147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %136) #5
  br label %192

151:                                              ; preds = %11
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %169, label %154

154:                                              ; preds = %151
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %169

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  %162 = zext i32 %161 to i33
  %163 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %162, i33 1) #5
  %164 = extractvalue { i33, i1 } %163, 1
  %165 = extractvalue { i33, i1 } %163, 0
  %166 = icmp slt i33 %165, 0
  %167 = or i1 %164, %166
  br i1 %167, label %168, label %172, !prof !13

168:                                              ; preds = %159
  tail call void @llvm.trap() #5
  unreachable

169:                                              ; preds = %154, %151
  %170 = ptrtoint %"class.WTF::StringImpl"* %152 to i64
  %171 = bitcast %"class.WTF::String"* %0 to i64*
  store i64 %170, i64* %171, align 8
  br label %178

172:                                              ; preds = %159
  %173 = trunc i33 %165 to i32
  store i32 %173, i32* %160, align 4
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %175 = ptrtoint %"class.WTF::StringImpl"* %152 to i64
  %176 = bitcast %"class.WTF::String"* %0 to i64*
  store i64 %175, i64* %176, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %174, null
  br i1 %177, label %192, label %178

178:                                              ; preds = %169, %172
  %179 = phi %"class.WTF::StringImpl"* [ %4, %169 ], [ %174, %172 ]
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %186, label %188

186:                                              ; preds = %178
  %187 = add i32 %185, -1
  store i32 %187, i32* %184, align 4
  br label %188

188:                                              ; preds = %186, %178
  %189 = phi i32 [ %187, %186 ], [ %185, %178 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #5
  br label %192

192:                                              ; preds = %6, %191, %188, %172, %133, %147, %150, %1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN3WTF6String23Make16BitFrom8BitSourceEPKhj(i8* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i16*, align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %28

5:                                                ; preds = %2
  %6 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF20g_empty_string16_bitE, align 8
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = ptrtoint %"class.WTF::StringImpl"* %8 to i64
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %144, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %144

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #5
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !13

25:                                               ; preds = %16
  tail call void @llvm.trap() #5
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %144

28:                                               ; preds = %2
  %29 = bitcast i16** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #5
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %3, align 8
  %30 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %1, i16** nonnull dereferenceable(8) %3) #5
  %31 = load i16*, i16** %3, align 8
  %32 = zext i32 %1 to i64
  %33 = icmp ult i32 %1, 16
  br i1 %33, label %100, label %34

34:                                               ; preds = %28
  %35 = bitcast i16* %31 to i8*
  %36 = getelementptr i16, i16* %31, i64 %32
  %37 = bitcast i16* %36 to i8*
  %38 = getelementptr i8, i8* %0, i64 %32
  %39 = icmp ugt i8* %38, %35
  %40 = icmp ugt i8* %37, %0
  %41 = and i1 %39, %40
  br i1 %41, label %100, label %42

42:                                               ; preds = %34
  %43 = and i64 %32, 4294967280
  %44 = add nsw i64 %43, -16
  %45 = lshr exact i64 %44, 4
  %46 = add nuw nsw i64 %45, 1
  %47 = and i64 %46, 1
  %48 = icmp eq i64 %44, 0
  br i1 %48, label %82, label %49

49:                                               ; preds = %42
  %50 = sub nuw nsw i64 %46, %47
  br label %51

51:                                               ; preds = %51, %49
  %52 = phi i64 [ 0, %49 ], [ %79, %51 ]
  %53 = phi i64 [ %50, %49 ], [ %80, %51 ]
  %54 = getelementptr inbounds i8, i8* %0, i64 %52
  %55 = bitcast i8* %54 to <8 x i8>*
  %56 = load <8 x i8>, <8 x i8>* %55, align 1, !alias.scope !14
  %57 = getelementptr inbounds i8, i8* %54, i64 8
  %58 = bitcast i8* %57 to <8 x i8>*
  %59 = load <8 x i8>, <8 x i8>* %58, align 1, !alias.scope !14
  %60 = zext <8 x i8> %56 to <8 x i16>
  %61 = zext <8 x i8> %59 to <8 x i16>
  %62 = getelementptr inbounds i16, i16* %31, i64 %52
  %63 = bitcast i16* %62 to <8 x i16>*
  store <8 x i16> %60, <8 x i16>* %63, align 2, !alias.scope !17, !noalias !14
  %64 = getelementptr inbounds i16, i16* %62, i64 8
  %65 = bitcast i16* %64 to <8 x i16>*
  store <8 x i16> %61, <8 x i16>* %65, align 2, !alias.scope !17, !noalias !14
  %66 = or i64 %52, 16
  %67 = getelementptr inbounds i8, i8* %0, i64 %66
  %68 = bitcast i8* %67 to <8 x i8>*
  %69 = load <8 x i8>, <8 x i8>* %68, align 1, !alias.scope !14
  %70 = getelementptr inbounds i8, i8* %67, i64 8
  %71 = bitcast i8* %70 to <8 x i8>*
  %72 = load <8 x i8>, <8 x i8>* %71, align 1, !alias.scope !14
  %73 = zext <8 x i8> %69 to <8 x i16>
  %74 = zext <8 x i8> %72 to <8 x i16>
  %75 = getelementptr inbounds i16, i16* %31, i64 %66
  %76 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %76, align 2, !alias.scope !17, !noalias !14
  %77 = getelementptr inbounds i16, i16* %75, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %78, align 2, !alias.scope !17, !noalias !14
  %79 = add i64 %52, 32
  %80 = add i64 %53, -2
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %51, !llvm.loop !19

82:                                               ; preds = %51, %42
  %83 = phi i64 [ 0, %42 ], [ %79, %51 ]
  %84 = icmp eq i64 %47, 0
  br i1 %84, label %98, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds i8, i8* %0, i64 %83
  %87 = bitcast i8* %86 to <8 x i8>*
  %88 = load <8 x i8>, <8 x i8>* %87, align 1, !alias.scope !14
  %89 = getelementptr inbounds i8, i8* %86, i64 8
  %90 = bitcast i8* %89 to <8 x i8>*
  %91 = load <8 x i8>, <8 x i8>* %90, align 1, !alias.scope !14
  %92 = zext <8 x i8> %88 to <8 x i16>
  %93 = zext <8 x i8> %91 to <8 x i16>
  %94 = getelementptr inbounds i16, i16* %31, i64 %83
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !17, !noalias !14
  %96 = getelementptr inbounds i16, i16* %94, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !17, !noalias !14
  br label %98

98:                                               ; preds = %82, %85
  %99 = icmp eq i64 %43, %32
  br i1 %99, label %142, label %100

100:                                              ; preds = %98, %34, %28
  %101 = phi i64 [ 0, %34 ], [ 0, %28 ], [ %43, %98 ]
  %102 = xor i64 %101, -1
  %103 = add nsw i64 %102, %32
  %104 = and i64 %32, 3
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %116, label %106

106:                                              ; preds = %100, %106
  %107 = phi i64 [ %113, %106 ], [ %101, %100 ]
  %108 = phi i64 [ %114, %106 ], [ %104, %100 ]
  %109 = getelementptr inbounds i8, i8* %0, i64 %107
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i16
  %112 = getelementptr inbounds i16, i16* %31, i64 %107
  store i16 %111, i16* %112, align 2
  %113 = add nuw nsw i64 %107, 1
  %114 = add i64 %108, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %106, !llvm.loop !20

116:                                              ; preds = %106, %100
  %117 = phi i64 [ %101, %100 ], [ %113, %106 ]
  %118 = icmp ult i64 %103, 3
  br i1 %118, label %142, label %119

119:                                              ; preds = %116, %119
  %120 = phi i64 [ %140, %119 ], [ %117, %116 ]
  %121 = getelementptr inbounds i8, i8* %0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i16
  %124 = getelementptr inbounds i16, i16* %31, i64 %120
  store i16 %123, i16* %124, align 2
  %125 = add nuw nsw i64 %120, 1
  %126 = getelementptr inbounds i8, i8* %0, i64 %125
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i16
  %129 = getelementptr inbounds i16, i16* %31, i64 %125
  store i16 %128, i16* %129, align 2
  %130 = add nuw nsw i64 %120, 2
  %131 = getelementptr inbounds i8, i8* %0, i64 %130
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i16
  %134 = getelementptr inbounds i16, i16* %31, i64 %130
  store i16 %133, i16* %134, align 2
  %135 = add nuw nsw i64 %120, 3
  %136 = getelementptr inbounds i8, i8* %0, i64 %135
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i16
  %139 = getelementptr inbounds i16, i16* %31, i64 %135
  store i16 %138, i16* %139, align 2
  %140 = add nuw nsw i64 %120, 4
  %141 = icmp eq i64 %140, %32
  br i1 %141, label %142, label %119, !llvm.loop !21

142:                                              ; preds = %116, %119, %98
  %143 = ptrtoint %"class.WTF::StringImpl"* %30 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #5
  br label %144

144:                                              ; preds = %26, %11, %5, %142
  %145 = phi i64 [ %143, %142 ], [ %9, %5 ], [ %9, %11 ], [ %9, %26 ]
  %146 = inttoptr i64 %145 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %146
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF6String8TruncateEj(%"class.WTF::String"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %2
  %7 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl8TruncateEj(%"class.WTF::StringImpl"* nonnull %4, i32 %1) #5
  %8 = ptrtoint %"class.WTF::StringImpl"* %7 to i64
  %9 = bitcast %"class.WTF::String"* %0 to i64*
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  store i64 %8, i64* %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #5
  br label %25

25:                                               ; preds = %2, %24, %21, %6
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl8TruncateEj(%"class.WTF::StringImpl"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF6String6RemoveEjj(%"class.WTF::String"* nocapture, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %26, label %7

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6RemoveEjj(%"class.WTF::StringImpl"* nonnull %5, i32 %1, i32 %2) #5
  %9 = ptrtoint %"class.WTF::StringImpl"* %8 to i64
  %10 = bitcast %"class.WTF::String"* %0 to i64*
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  store i64 %9, i64* %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %22

20:                                               ; preds = %13
  %21 = add i32 %19, -1
  store i32 %21, i32* %18, align 4
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %21, %20 ], [ %19, %13 ]
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #5
  br label %26

26:                                               ; preds = %3, %25, %22, %7
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6RemoveEjj(%"class.WTF::StringImpl"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF10StringImpl9SubstringEjj(%"class.WTF::StringImpl"* nonnull %5, i32 %1, i32 %2) #5
  br label %9

9:                                                ; preds = %3, %7
  %10 = phi %"class.WTF::StringImpl"* [ %8, %7 ], [ null, %3 ]
  ret %"class.WTF::StringImpl"* %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare %"class.WTF::StringImpl"* @_ZNK3WTF10StringImpl9SubstringEjj(%"class.WTF::StringImpl"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK3WTF6String15DeprecatedLowerEv(%"class.WTF::String"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.WTF::StringImpl"* @_ZN3WTF7CaseMap20FastToLowerInvariantEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %3) #5
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi %"class.WTF::StringImpl"* [ %6, %5 ], [ null, %1 ]
  ret %"class.WTF::StringImpl"* %8
}

declare %"class.WTF::StringImpl"* @_ZN3WTF7CaseMap20FastToLowerInvariantEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK3WTF6String10LowerASCIIEv(%"class.WTF::String"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl10LowerASCIIEv(%"class.WTF::StringImpl"* nonnull %3) #5
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi %"class.WTF::StringImpl"* [ %6, %5 ], [ null, %1 ]
  ret %"class.WTF::StringImpl"* %8
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl10LowerASCIIEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK3WTF6String10UpperASCIIEv(%"class.WTF::String"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl10UpperASCIIEv(%"class.WTF::StringImpl"* nonnull %3) #5
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi %"class.WTF::StringImpl"* [ %6, %5 ], [ null, %1 ]
  ret %"class.WTF::StringImpl"* %8
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl10UpperASCIIEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl15StripWhiteSpaceEv(%"class.WTF::StringImpl"* nonnull %3) #5
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi %"class.WTF::StringImpl"* [ %6, %5 ], [ null, %1 ]
  ret %"class.WTF::StringImpl"* %8
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl15StripWhiteSpaceEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEPFbDsE(%"class.WTF::String"* nocapture readonly, i1 (i16)*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl15StripWhiteSpaceEPFbDsE(%"class.WTF::StringImpl"* nonnull %4, i1 (i16)* %1) #5
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi %"class.WTF::StringImpl"* [ %7, %6 ], [ null, %2 ]
  ret %"class.WTF::StringImpl"* %9
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl15StripWhiteSpaceEPFbDsE(%"class.WTF::StringImpl"*, i1 (i16)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK3WTF6String18SimplifyWhiteSpaceENS_13StripBehaviorE(%"class.WTF::String"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl18SimplifyWhiteSpaceENS_13StripBehaviorE(%"class.WTF::StringImpl"* nonnull %4, i32 %1) #5
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi %"class.WTF::StringImpl"* [ %7, %6 ], [ null, %2 ]
  ret %"class.WTF::StringImpl"* %9
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl18SimplifyWhiteSpaceENS_13StripBehaviorE(%"class.WTF::StringImpl"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK3WTF6String18SimplifyWhiteSpaceEPFbDsENS_13StripBehaviorE(%"class.WTF::String"* nocapture readonly, i1 (i16)*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl18SimplifyWhiteSpaceEPFbDsENS_13StripBehaviorE(%"class.WTF::StringImpl"* nonnull %5, i1 (i16)* %1, i32 %2) #5
  br label %9

9:                                                ; preds = %3, %7
  %10 = phi %"class.WTF::StringImpl"* [ %8, %7 ], [ null, %3 ]
  ret %"class.WTF::StringImpl"* %10
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl18SimplifyWhiteSpaceEPFbDsENS_13StripBehaviorE(%"class.WTF::StringImpl"*, i1 (i16)*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK3WTF6String16RemoveCharactersEPFbDsE(%"class.WTF::String"* nocapture readonly, i1 (i16)*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl16RemoveCharactersEPFbDsE(%"class.WTF::StringImpl"* nonnull %4, i1 (i16)* %1) #5
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi %"class.WTF::StringImpl"* [ %7, %6 ], [ null, %2 ]
  ret %"class.WTF::StringImpl"* %9
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl16RemoveCharactersEPFbDsE(%"class.WTF::StringImpl"*, i1 (i16)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK3WTF6String8FoldCaseEv(%"class.WTF::String"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl8FoldCaseEv(%"class.WTF::StringImpl"* nonnull %3) #5
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi %"class.WTF::StringImpl"* [ %6, %5 ], [ null, %1 ]
  ret %"class.WTF::StringImpl"* %8
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl8FoldCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = alloca %"class.WTF::Vector", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #5
  %8 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %9 = bitcast %"class.WTF::Vector"* %4 to i8*
  %10 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %9) #5
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 1, i64 0
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  store i8* %11, i8** %12, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 1
  store i32 256, i32* %13, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  store i32 256, i32* %14, align 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 256, i1 false) #5
  call void @llvm.va_start(i8* nonnull %7)
  %15 = load i8*, i8** %12, align 8
  %16 = load i32, i32* %14, align 4
  %17 = zext i32 %16 to i64
  %18 = call i64 @llvm.objectsize.i64.p0i8(i8* %15, i1 false, i1 true, i1 false) #5
  %19 = call i32 @__vsnprintf_chk(i8* %15, i64 %17, i32 1, i64 %18, i8* %0, %struct.__va_list_tag* nonnull %8) #5
  call void @llvm.va_end(i8* nonnull %7)
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %68, label %21

21:                                               ; preds = %1
  %22 = load i32, i32* %14, align 4
  %23 = icmp ult i32 %19, %22
  br i1 %23, label %46, label %24

24:                                               ; preds = %21
  %25 = add nuw nsw i32 %19, 1
  %26 = load i32, i32* %13, align 8
  %27 = icmp ugt i32 %26, %19
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  call void @_ZN3WTF6VectorIcLj256ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* nonnull %4, i32 %25) #5
  %29 = load i32, i32* %14, align 4
  br label %30

30:                                               ; preds = %24, %28
  %31 = phi i32 [ %22, %24 ], [ %29, %28 ]
  %32 = load i8*, i8** %12, align 8
  %33 = zext i32 %31 to i64
  %34 = getelementptr inbounds i8, i8* %32, i64 %33
  %35 = zext i32 %25 to i64
  %36 = getelementptr inbounds i8, i8* %32, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = ptrtoint i8* %34 to i64
  %39 = sub i64 %37, %38
  call void @llvm.memset.p0i8.i64(i8* align 1 %34, i8 0, i64 %39, i1 false) #5
  store i32 %25, i32* %14, align 4
  call void @llvm.va_start(i8* nonnull %7)
  %40 = load i8*, i8** %12, align 8
  %41 = load i32, i32* %14, align 4
  %42 = zext i32 %41 to i64
  %43 = call i64 @llvm.objectsize.i64.p0i8(i8* %40, i1 false, i1 true, i1 false) #5
  %44 = call i32 @__vsnprintf_chk(i8* %40, i64 %42, i32 1, i64 %43, i8* %0, %struct.__va_list_tag* nonnull %8) #5
  call void @llvm.va_end(i8* nonnull %7)
  %45 = load i32, i32* %14, align 4
  br label %46

46:                                               ; preds = %21, %30
  %47 = phi i32 [ %45, %30 ], [ %22, %21 ]
  %48 = phi i32 [ %44, %30 ], [ %19, %21 ]
  %49 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #5
  %50 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %50, align 8
  %51 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51)
  %52 = icmp ult i32 %48, %47
  br i1 %52, label %53, label %54

53:                                               ; preds = %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51)
  store i8* null, i8** %50, align 8
  br label %63

54:                                               ; preds = %46
  %55 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %48) #5
  %56 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %47) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i8* %55, i8* %56) #5
  %57 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %58 = load i8*, i8** %57, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51)
  store i8* %58, i8** %50, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %54
  %61 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 222, %"class.logging::CheckOpResult"* nonnull %5) #5
  %62 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #5
  br label %63

63:                                               ; preds = %53, %54, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #5
  %64 = load i8*, i8** %12, align 8
  %65 = icmp eq i8* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %63
  %67 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* nonnull %64, i32 %48) #5
  br label %68

68:                                               ; preds = %66, %63, %1
  %69 = phi %"class.WTF::StringImpl"* [ null, %1 ], [ %67, %66 ], [ null, %63 ]
  %70 = load i32, i32* %14, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %73, label %72, !prof !13

72:                                               ; preds = %68
  store i32 0, i32* %14, align 4
  br label %73

73:                                               ; preds = %72, %68
  %74 = load i8*, i8** %12, align 8
  %75 = icmp eq i8* %11, %74
  br i1 %75, label %78, label %76, !prof !2

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIcLj256ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPc(%"class.WTF::VectorBuffer"* nonnull %77, i8* %74) #5
  br label %78

78:                                               ; preds = %73, %76
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #5
  ret %"class.WTF::StringImpl"* %69
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #5

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #5

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK3WTF6String18EncodeForDebuggingEv(%"class.WTF::String"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %1
  %12 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 6) #5
  br label %106

13:                                               ; preds = %1
  %14 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 48, i1 false)
  %15 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %17 = bitcast %union.anon.8* %16 to i8*
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %19, align 4
  %20 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %20, align 1
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %2, i8 zeroext 34) #5
  %21 = bitcast %"class.WTF::StringView"* %7 to i8*
  %22 = bitcast %"class.WTF::StringView"* %7 to i64*
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %25 = bitcast %"class.WTF::StringView"* %6 to i8*
  %26 = bitcast %"class.WTF::StringView"* %6 to i64*
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %29 = bitcast %"class.WTF::StringView"* %5 to i8*
  %30 = bitcast %"class.WTF::StringView"* %5 to i64*
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %33 = bitcast %"class.WTF::StringView"* %4 to i8*
  %34 = bitcast %"class.WTF::StringView"* %4 to i64*
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %37 = bitcast %"class.WTF::StringView"* %3 to i8*
  %38 = bitcast %"class.WTF::StringView"* %3 to i64*
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  br label %41

41:                                               ; preds = %104, %13
  %42 = phi i64 [ %105, %104 ], [ 0, %13 ]
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  br label %48

48:                                               ; preds = %41, %45
  %49 = phi i32 [ %47, %45 ], [ 0, %41 ]
  %50 = zext i32 %49 to i64
  %51 = icmp ult i64 %42, %50
  br i1 %51, label %70, label %52

52:                                               ; preds = %48
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %2, i8 zeroext 34) #5
  %53 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #5
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #5
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #5
  br label %69

69:                                               ; preds = %52, %65, %68
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #5
  br label %106

70:                                               ; preds = %48
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 1
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 1
  br i1 %74, label %81, label %76

76:                                               ; preds = %70
  %77 = bitcast %"class.WTF::StringImpl"* %75 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 %42
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i16
  br label %85

81:                                               ; preds = %70
  %82 = bitcast %"class.WTF::StringImpl"* %75 to i16*
  %83 = getelementptr inbounds i16, i16* %82, i64 %42
  %84 = load i16, i16* %83, align 2
  br label %85

85:                                               ; preds = %76, %81
  %86 = phi i16 [ %80, %76 ], [ %84, %81 ]
  %87 = zext i16 %86 to i32
  switch i16 %86, label %98 [
    i16 9, label %88
    i16 10, label %90
    i16 13, label %92
    i16 34, label %94
    i16 92, label %96
  ]

88:                                               ; preds = %85
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #5
  %89 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %89, i64* %38, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8** %39, align 8
  store i32 2, i32* %40, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #5
  br label %104

90:                                               ; preds = %85
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #5
  %91 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %91, i64* %34, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i8** %35, align 8
  store i32 2, i32* %36, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #5
  br label %104

92:                                               ; preds = %85
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #5
  %93 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %93, i64* %30, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %31, align 8
  store i32 2, i32* %32, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #5
  br label %104

94:                                               ; preds = %85
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #5
  %95 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %95, i64* %26, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8** %27, align 8
  store i32 2, i32* %28, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #5
  br label %104

96:                                               ; preds = %85
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #5
  %97 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %97, i64* %22, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i8** %23, align 8
  store i32 2, i32* %24, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #5
  br label %104

98:                                               ; preds = %85
  %99 = add i16 %86, -32
  %100 = icmp ult i16 %99, 95
  br i1 %100, label %101, label %103

101:                                              ; preds = %98
  %102 = trunc i16 %86 to i8
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %2, i8 zeroext %102) #5
  br label %104

103:                                              ; preds = %98
  call void (%"class.WTF::StringBuilder"*, i8*, ...) @_ZN3WTF13StringBuilder12AppendFormatEPKcz(%"class.WTF::StringBuilder"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i32 %87) #5
  br label %104

104:                                              ; preds = %101, %103, %96, %94, %92, %90, %88
  %105 = add nuw nsw i64 %42, 1
  br label %41

106:                                              ; preds = %69, %11
  %107 = phi %"class.WTF::StringImpl"* [ %12, %11 ], [ %53, %69 ]
  ret %"class.WTF::StringImpl"* %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !22
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #5
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !13

46:                                               ; preds = %37
  tail call void @llvm.trap() #5
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #5
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #5
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #5
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare void @_ZN3WTF13StringBuilder12AppendFormatEPKcz(%"class.WTF::StringBuilder"*, i8*, ...) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEf(float) local_unnamed_addr #0 align 2 {
  %2 = alloca [96 x i8], align 16
  %3 = fpext float %0 to double
  %4 = getelementptr inbounds [96 x i8], [96 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %4) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 96, i1 false) #5
  %5 = call i8* @_ZN3WTF28NumberToFixedPrecisionStringEdjPc(double %3, i32 6, i8* nonnull %4) #5
  %6 = icmp eq i8* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = call i64 @strlen(i8* nonnull %5) #15
  %9 = icmp ult i64 %8, 4294967296
  br i1 %9, label %11, label %10, !prof !2

10:                                               ; preds = %7
  call void @llvm.trap() #5
  unreachable

11:                                               ; preds = %7
  %12 = trunc i64 %8 to i32
  %13 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* nonnull %5, i32 %12) #5
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi %"class.WTF::StringImpl"* [ %13, %11 ], [ null, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %4) #5
  ret %"class.WTF::StringImpl"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEdj(double, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca [96 x i8], align 16
  %4 = getelementptr inbounds [96 x i8], [96 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %4) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 96, i1 false)
  %5 = call i8* @_ZN3WTF28NumberToFixedPrecisionStringEdjPc(double %0, i32 %1, i8* nonnull %4) #5
  %6 = icmp eq i8* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = call i64 @strlen(i8* nonnull %5) #15
  %9 = icmp ult i64 %8, 4294967296
  br i1 %9, label %11, label %10, !prof !2

10:                                               ; preds = %7
  call void @llvm.trap() #5
  unreachable

11:                                               ; preds = %7
  %12 = trunc i64 %8 to i32
  %13 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* nonnull %5, i32 %12) #5
  br label %14

14:                                               ; preds = %2, %11
  %15 = phi %"class.WTF::StringImpl"* [ %13, %11 ], [ null, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %4) #5
  ret %"class.WTF::StringImpl"* %15
}

declare i8* @_ZN3WTF28NumberToFixedPrecisionStringEdjPc(double, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double) local_unnamed_addr #0 align 2 {
  %2 = alloca [96 x i8], align 16
  %3 = getelementptr inbounds [96 x i8], [96 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %3) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %3, i8 -86, i64 96, i1 false)
  %4 = call i8* @_ZN3WTF14NumberToStringEdPc(double %0, i8* nonnull %3) #5
  %5 = icmp eq i8* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = call i64 @strlen(i8* nonnull %4) #15
  %8 = icmp ult i64 %7, 4294967296
  br i1 %8, label %10, label %9, !prof !2

9:                                                ; preds = %6
  call void @llvm.trap() #5
  unreachable

10:                                               ; preds = %6
  %11 = trunc i64 %7 to i32
  %12 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* nonnull %4, i32 %11) #5
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi %"class.WTF::StringImpl"* [ %12, %10 ], [ null, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %3) #5
  ret %"class.WTF::StringImpl"* %14
}

declare i8* @_ZN3WTF14NumberToStringEdPc(double, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringFixedWidthEdj(double, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca [96 x i8], align 16
  %4 = getelementptr inbounds [96 x i8], [96 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %4) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 96, i1 false)
  %5 = call i8* @_ZN3WTF24NumberToFixedWidthStringEdjPc(double %0, i32 %1, i8* nonnull %4) #5
  %6 = icmp eq i8* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = call i64 @strlen(i8* nonnull %5) #15
  %9 = icmp ult i64 %8, 4294967296
  br i1 %9, label %11, label %10, !prof !2

10:                                               ; preds = %7
  call void @llvm.trap() #5
  unreachable

11:                                               ; preds = %7
  %12 = trunc i64 %8 to i32
  %13 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* nonnull %5, i32 %12) #5
  br label %14

14:                                               ; preds = %2, %11
  %15 = phi %"class.WTF::StringImpl"* [ %13, %11 ], [ null, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %4) #5
  ret %"class.WTF::StringImpl"* %15
}

declare i8* @_ZN3WTF24NumberToFixedWidthStringEdjPc(double, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3WTF6String11ToIntStrictEPb(%"class.WTF::String"* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = icmp eq i8* %1, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %6
  store i8 0, i8* %1, align 1
  br label %11

9:                                                ; preds = %2
  %10 = tail call i32 @_ZNK3WTF10StringImpl5ToIntENS_20NumberParsingOptionsEPb(%"class.WTF::StringImpl"* nonnull %4, i32 6, i8* %1) #5
  br label %11

11:                                               ; preds = %8, %6, %9
  %12 = phi i32 [ %10, %9 ], [ 0, %6 ], [ 0, %8 ]
  ret i32 %12
}

declare i32 @_ZNK3WTF10StringImpl5ToIntENS_20NumberParsingOptionsEPb(%"class.WTF::StringImpl"*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3WTF6String12ToUIntStrictEPb(%"class.WTF::String"* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = icmp eq i8* %1, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %6
  store i8 0, i8* %1, align 1
  br label %11

9:                                                ; preds = %2
  %10 = tail call i32 @_ZNK3WTF10StringImpl6ToUIntENS_20NumberParsingOptionsEPb(%"class.WTF::StringImpl"* nonnull %4, i32 6, i8* %1) #5
  br label %11

11:                                               ; preds = %8, %6, %9
  %12 = phi i32 [ %10, %9 ], [ 0, %6 ], [ 0, %8 ]
  ret i32 %12
}

declare i32 @_ZNK3WTF10StringImpl6ToUIntENS_20NumberParsingOptionsEPb(%"class.WTF::StringImpl"*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3WTF6String15HexToUIntStrictEPb(%"class.WTF::String"* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = icmp eq i8* %1, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %6
  store i8 0, i8* %1, align 1
  br label %11

9:                                                ; preds = %2
  %10 = tail call i32 @_ZN3WTF10StringImpl15HexToUIntStrictEPb(%"class.WTF::StringImpl"* nonnull %4, i8* %1) #5
  br label %11

11:                                               ; preds = %8, %6, %9
  %12 = phi i32 [ %10, %9 ], [ 0, %6 ], [ 0, %8 ]
  ret i32 %12
}

declare i32 @_ZN3WTF10StringImpl15HexToUIntStrictEPb(%"class.WTF::StringImpl"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK3WTF6String17HexToUInt64StrictEPb(%"class.WTF::String"* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = icmp eq i8* %1, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %6
  store i8 0, i8* %1, align 1
  br label %11

9:                                                ; preds = %2
  %10 = tail call i64 @_ZN3WTF10StringImpl17HexToUInt64StrictEPb(%"class.WTF::StringImpl"* nonnull %4, i8* %1) #5
  br label %11

11:                                               ; preds = %8, %6, %9
  %12 = phi i64 [ %10, %9 ], [ 0, %6 ], [ 0, %8 ]
  ret i64 %12
}

declare i64 @_ZN3WTF10StringImpl17HexToUInt64StrictEPb(%"class.WTF::StringImpl"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK3WTF6String13ToInt64StrictEPb(%"class.WTF::String"* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = icmp eq i8* %1, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %6
  store i8 0, i8* %1, align 1
  br label %11

9:                                                ; preds = %2
  %10 = tail call i64 @_ZNK3WTF10StringImpl7ToInt64ENS_20NumberParsingOptionsEPb(%"class.WTF::StringImpl"* nonnull %4, i32 6, i8* %1) #5
  br label %11

11:                                               ; preds = %8, %6, %9
  %12 = phi i64 [ %10, %9 ], [ 0, %6 ], [ 0, %8 ]
  ret i64 %12
}

declare i64 @_ZNK3WTF10StringImpl7ToInt64ENS_20NumberParsingOptionsEPb(%"class.WTF::StringImpl"*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK3WTF6String14ToUInt64StrictEPb(%"class.WTF::String"* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = icmp eq i8* %1, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %6
  store i8 0, i8* %1, align 1
  br label %11

9:                                                ; preds = %2
  %10 = tail call i64 @_ZNK3WTF10StringImpl8ToUInt64ENS_20NumberParsingOptionsEPb(%"class.WTF::StringImpl"* nonnull %4, i32 6, i8* %1) #5
  br label %11

11:                                               ; preds = %8, %6, %9
  %12 = phi i64 [ %10, %9 ], [ 0, %6 ], [ 0, %8 ]
  ret i64 %12
}

declare i64 @_ZNK3WTF10StringImpl8ToUInt64ENS_20NumberParsingOptionsEPb(%"class.WTF::StringImpl"*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3WTF6String5ToIntEPb(%"class.WTF::String"* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = icmp eq i8* %1, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %6
  store i8 0, i8* %1, align 1
  br label %11

9:                                                ; preds = %2
  %10 = tail call i32 @_ZNK3WTF10StringImpl5ToIntENS_20NumberParsingOptionsEPb(%"class.WTF::StringImpl"* nonnull %4, i32 7, i8* %1) #5
  br label %11

11:                                               ; preds = %8, %6, %9
  %12 = phi i32 [ %10, %9 ], [ 0, %6 ], [ 0, %8 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3WTF6String6ToUIntEPb(%"class.WTF::String"* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = icmp eq i8* %1, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %6
  store i8 0, i8* %1, align 1
  br label %11

9:                                                ; preds = %2
  %10 = tail call i32 @_ZNK3WTF10StringImpl6ToUIntENS_20NumberParsingOptionsEPb(%"class.WTF::StringImpl"* nonnull %4, i32 7, i8* %1) #5
  br label %11

11:                                               ; preds = %8, %6, %9
  %12 = phi i32 [ %10, %9 ], [ 0, %6 ], [ 0, %8 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK3WTF6String8ToDoubleEPb(%"class.WTF::String"* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = icmp eq i8* %1, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %6
  store i8 0, i8* %1, align 1
  br label %11

9:                                                ; preds = %2
  %10 = tail call double @_ZN3WTF10StringImpl8ToDoubleEPb(%"class.WTF::StringImpl"* nonnull %4, i8* %1) #5
  br label %11

11:                                               ; preds = %8, %6, %9
  %12 = phi double [ %10, %9 ], [ 0.000000e+00, %6 ], [ 0.000000e+00, %8 ]
  ret double %12
}

declare double @_ZN3WTF10StringImpl8ToDoubleEPb(%"class.WTF::StringImpl"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK3WTF6String7ToFloatEPb(%"class.WTF::String"* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = icmp eq i8* %1, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %6
  store i8 0, i8* %1, align 1
  br label %11

9:                                                ; preds = %2
  %10 = tail call float @_ZN3WTF10StringImpl7ToFloatEPb(%"class.WTF::StringImpl"* nonnull %4, i8* %1) #5
  br label %11

11:                                               ; preds = %8, %6, %9
  %12 = phi float [ %10, %9 ], [ 0.000000e+00, %6 ], [ 0.000000e+00, %8 ]
  ret float %12
}

declare float @_ZN3WTF10StringImpl7ToFloatEPb(%"class.WTF::StringImpl"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %21, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 1
  br i1 %9, label %16, label %11

11:                                               ; preds = %5
  %12 = bitcast %"class.WTF::StringImpl"* %10 to i8*
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %12, i32 %14) #5
  br label %21

16:                                               ; preds = %5
  %17 = bitcast %"class.WTF::StringImpl"* %10 to i16*
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKDsj(i16* %17, i32 %19) #5
  br label %21

21:                                               ; preds = %16, %11, %1
  %22 = phi %"class.WTF::StringImpl"* [ null, %1 ], [ %15, %11 ], [ %20, %16 ]
  ret %"class.WTF::StringImpl"* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3WTF6String27IsSafeToSendToAnotherThreadEv(%"class.WTF::String"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZNK3WTF10StringImpl27IsSafeToSendToAnotherThreadEv(%"class.WTF::StringImpl"* nonnull %3) #5
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i1 [ true, %1 ], [ %6, %5 ]
  ret i1 %8
}

declare zeroext i1 @_ZNK3WTF10StringImpl27IsSafeToSendToAnotherThreadEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3WTF6String5SplitERKNS_10StringViewEbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"* nocapture readonly, %"class.WTF::StringView"* dereferenceable(24), i1 zeroext, %"class.WTF::Vector.19"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %3, i64 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %45, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %3, i64 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %41, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %3, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %17 = zext i32 %12 to i64
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 %17
  br label %19

19:                                               ; preds = %37, %14
  %20 = phi %"class.WTF::String"* [ %38, %37 ], [ %16, %14 ]
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #5
  br label %37

37:                                               ; preds = %36, %33, %19
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 1
  %39 = icmp eq %"class.WTF::String"* %38, %18
  br i1 %39, label %40, label %19

40:                                               ; preds = %37
  store i32 0, i32* %11, align 4
  br label %41

41:                                               ; preds = %40, %10
  %42 = bitcast %"class.WTF::Vector.19"* %3 to i8**
  %43 = load i8*, i8** %42, align 8
  %44 = bitcast %"class.WTF::Vector.19"* %3 to i64*
  store atomic i64 0, i64* %44 monotonic, align 8
  store i32 0, i32* %7, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #5
  br label %45

45:                                               ; preds = %4, %41
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %105, label %49

49:                                               ; preds = %45
  %50 = xor i1 %2, true
  %51 = bitcast %"class.WTF::String"* %5 to i8*
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %3, i64 0, i32 0, i32 0, i32 2
  %54 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %3, i64 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  br label %56

56:                                               ; preds = %49, %100
  %57 = phi %"class.WTF::StringImpl"* [ %47, %49 ], [ %103, %100 ]
  %58 = phi i32 [ 0, %49 ], [ %102, %100 ]
  %59 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %57, %"class.WTF::StringView"* dereferenceable(24) %1, i32 %58) #5
  %60 = icmp eq i32 %59, -1
  br i1 %60, label %105, label %61

61:                                               ; preds = %56
  %62 = icmp eq i32 %59, %58
  %63 = and i1 %62, %50
  br i1 %63, label %100, label %64

64:                                               ; preds = %61
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #5
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %64
  %68 = sub i32 %59, %58
  %69 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringImpl9SubstringEjj(%"class.WTF::StringImpl"* nonnull %65, i32 %58, i32 %68) #5
  br label %70

70:                                               ; preds = %64, %67
  %71 = phi %"class.WTF::StringImpl"* [ %69, %67 ], [ null, %64 ]
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %52, align 8
  %72 = load i32, i32* %53, align 4
  %73 = load i32, i32* %7, align 8
  %74 = icmp eq i32 %72, %73
  br i1 %74, label %83, label %75, !prof !13

75:                                               ; preds = %70
  %76 = ptrtoint %"class.WTF::StringImpl"* %71 to i64
  %77 = load %"class.WTF::String"*, %"class.WTF::String"** %54, align 8
  %78 = zext i32 %72 to i64
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 %78
  %80 = bitcast %"class.WTF::String"* %79 to i64*
  store i64 %76, i64* %80, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %52, align 8
  %81 = load i32, i32* %53, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %53, align 4
  br label %99

83:                                               ; preds = %70
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.19"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #5
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #5
  br label %99

99:                                               ; preds = %75, %83, %95, %98
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #5
  br label %100

100:                                              ; preds = %61, %99
  %101 = load i32, i32* %55, align 8
  %102 = add i32 %101, %59
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %105, label %56

105:                                              ; preds = %56, %100, %45
  %106 = phi i32 [ 0, %45 ], [ %102, %100 ], [ %58, %56 ]
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  br i1 %2, label %116, label %108

108:                                              ; preds = %105
  %109 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %109, label %113, label %110

110:                                              ; preds = %108
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 1
  %112 = load i32, i32* %111, align 4
  br label %113

113:                                              ; preds = %108, %110
  %114 = phi i32 [ %112, %110 ], [ 0, %108 ]
  %115 = icmp eq i32 %106, %114
  br i1 %115, label %154, label %116

116:                                              ; preds = %105, %113
  %117 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #5
  %118 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %116
  %120 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringImpl9SubstringEjj(%"class.WTF::StringImpl"* nonnull %107, i32 %106, i32 -1) #5
  br label %121

121:                                              ; preds = %116, %119
  %122 = phi %"class.WTF::StringImpl"* [ %120, %119 ], [ null, %116 ]
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %123, align 8
  %124 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %3, i64 0, i32 0, i32 0, i32 2
  %125 = load i32, i32* %124, align 4
  %126 = load i32, i32* %7, align 8
  %127 = icmp eq i32 %125, %126
  br i1 %127, label %137, label %128, !prof !13

128:                                              ; preds = %121
  %129 = ptrtoint %"class.WTF::StringImpl"* %122 to i64
  %130 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %3, i64 0, i32 0, i32 0, i32 0
  %131 = load %"class.WTF::String"*, %"class.WTF::String"** %130, align 8
  %132 = zext i32 %125 to i64
  %133 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %131, i64 %132
  %134 = bitcast %"class.WTF::String"* %133 to i64*
  store i64 %129, i64* %134, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %123, align 8
  %135 = load i32, i32* %124, align 4
  %136 = add i32 %135, 1
  store i32 %136, i32* %124, align 4
  br label %153

137:                                              ; preds = %121
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.19"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %6) #5
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %153, label %140

140:                                              ; preds = %137
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #5
  br label %153

153:                                              ; preds = %128, %137, %149, %152
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #5
  br label %154

154:                                              ; preds = %113, %153
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"* nocapture readonly, i16 zeroext, i1 zeroext, %"class.WTF::Vector.19"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %3, i64 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %45, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %3, i64 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %41, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %3, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %17 = zext i32 %12 to i64
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 %17
  br label %19

19:                                               ; preds = %37, %14
  %20 = phi %"class.WTF::String"* [ %38, %37 ], [ %16, %14 ]
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #5
  br label %37

37:                                               ; preds = %36, %33, %19
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 1
  %39 = icmp eq %"class.WTF::String"* %38, %18
  br i1 %39, label %40, label %19

40:                                               ; preds = %37
  store i32 0, i32* %11, align 4
  br label %41

41:                                               ; preds = %40, %10
  %42 = bitcast %"class.WTF::Vector.19"* %3 to i8**
  %43 = load i8*, i8** %42, align 8
  %44 = bitcast %"class.WTF::Vector.19"* %3 to i64*
  store atomic i64 0, i64* %44 monotonic, align 8
  store i32 0, i32* %7, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #5
  br label %45

45:                                               ; preds = %4, %41
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %141, label %49

49:                                               ; preds = %45
  %50 = icmp ult i16 %1, 256
  %51 = and i16 %1, 255
  %52 = zext i16 %51 to i32
  %53 = xor i1 %2, true
  %54 = bitcast %"class.WTF::String"* %5 to i8*
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %3, i64 0, i32 0, i32 0, i32 2
  %57 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %3, i64 0, i32 0, i32 0, i32 0
  br label %58

58:                                               ; preds = %49, %137
  %59 = phi %"class.WTF::StringImpl"* [ %47, %49 ], [ %138, %137 ]
  %60 = phi i32 [ 0, %49 ], [ %139, %137 ]
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 1
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 1
  br i1 %64, label %82, label %66

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = icmp ugt i32 %68, %60
  %70 = and i1 %50, %69
  br i1 %70, label %71, label %141

71:                                               ; preds = %66
  %72 = bitcast %"class.WTF::StringImpl"* %65 to i8*
  %73 = zext i32 %60 to i64
  %74 = getelementptr inbounds i8, i8* %72, i64 %73
  %75 = sub i32 %68, %60
  %76 = zext i32 %75 to i64
  %77 = call i8* @memchr(i8* %74, i32 %52, i64 %76) #15
  %78 = icmp eq i8* %77, null
  %79 = ptrtoint i8* %77 to i64
  %80 = ptrtoint %"class.WTF::StringImpl"* %65 to i64
  %81 = sub i64 %79, %80
  br i1 %78, label %141, label %98

82:                                               ; preds = %58
  %83 = bitcast %"class.WTF::StringImpl"* %65 to i16*
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = icmp ugt i32 %85, %60
  br i1 %86, label %87, label %141

87:                                               ; preds = %82
  %88 = zext i32 %60 to i64
  br label %89

89:                                               ; preds = %94, %87
  %90 = phi i64 [ %88, %87 ], [ %95, %94 ]
  %91 = getelementptr inbounds i16, i16* %83, i64 %90
  %92 = load i16, i16* %91, align 2
  %93 = icmp eq i16 %92, %1
  br i1 %93, label %98, label %94

94:                                               ; preds = %89
  %95 = add nuw nsw i64 %90, 1
  %96 = trunc i64 %95 to i32
  %97 = icmp eq i32 %85, %96
  br i1 %97, label %141, label %89

98:                                               ; preds = %89, %71
  %99 = phi i64 [ %81, %71 ], [ %90, %89 ]
  %100 = trunc i64 %99 to i32
  %101 = icmp eq i32 %100, -1
  br i1 %101, label %141, label %102

102:                                              ; preds = %98
  %103 = icmp eq i32 %60, %100
  %104 = and i1 %103, %53
  br i1 %104, label %137, label %105

105:                                              ; preds = %102
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #5
  %106 = sub i32 %100, %60
  %107 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringImpl9SubstringEjj(%"class.WTF::StringImpl"* nonnull %59, i32 %60, i32 %106) #5
  store %"class.WTF::StringImpl"* %107, %"class.WTF::StringImpl"** %55, align 8
  %108 = load i32, i32* %56, align 4
  %109 = load i32, i32* %7, align 8
  %110 = icmp eq i32 %108, %109
  br i1 %110, label %119, label %111, !prof !13

111:                                              ; preds = %105
  %112 = ptrtoint %"class.WTF::StringImpl"* %107 to i64
  %113 = load %"class.WTF::String"*, %"class.WTF::String"** %57, align 8
  %114 = zext i32 %108 to i64
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %113, i64 %114
  %116 = bitcast %"class.WTF::String"* %115 to i64*
  store i64 %112, i64* %116, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %55, align 8
  %117 = load i32, i32* %56, align 4
  %118 = add i32 %117, 1
  store i32 %118, i32* %56, align 4
  br label %135

119:                                              ; preds = %105
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.19"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #5
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %121, label %135, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  br i1 %126, label %129, label %131

129:                                              ; preds = %122
  %130 = add i32 %128, -1
  store i32 %130, i32* %127, align 4
  br label %131

131:                                              ; preds = %129, %122
  %132 = phi i32 [ %130, %129 ], [ %128, %122 ]
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %120) #5
  br label %135

135:                                              ; preds = %111, %119, %131, %134
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #5
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  br label %137

137:                                              ; preds = %102, %135
  %138 = phi %"class.WTF::StringImpl"* [ %59, %102 ], [ %136, %135 ]
  %139 = add nuw i32 %100, 1
  %140 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %140, label %141, label %58

141:                                              ; preds = %98, %137, %66, %82, %71, %94, %45
  %142 = phi i32 [ 0, %45 ], [ %60, %94 ], [ %60, %98 ], [ %139, %137 ], [ %60, %66 ], [ %60, %82 ], [ %60, %71 ]
  %143 = phi %"class.WTF::StringImpl"* [ null, %45 ], [ %59, %94 ], [ %59, %98 ], [ null, %137 ], [ %59, %66 ], [ %59, %82 ], [ %59, %71 ]
  %144 = phi i1 [ true, %45 ], [ false, %94 ], [ false, %98 ], [ true, %137 ], [ false, %66 ], [ false, %82 ], [ false, %71 ]
  br i1 %2, label %152, label %145

145:                                              ; preds = %141
  br i1 %144, label %149, label %146

146:                                              ; preds = %145
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 1
  %148 = load i32, i32* %147, align 4
  br label %149

149:                                              ; preds = %145, %146
  %150 = phi i32 [ %148, %146 ], [ 0, %145 ]
  %151 = icmp eq i32 %142, %150
  br i1 %151, label %189, label %152

152:                                              ; preds = %149, %141
  %153 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %153) #5
  br i1 %144, label %156, label %154

154:                                              ; preds = %152
  %155 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringImpl9SubstringEjj(%"class.WTF::StringImpl"* nonnull %143, i32 %142, i32 -1) #5
  br label %156

156:                                              ; preds = %152, %154
  %157 = phi %"class.WTF::StringImpl"* [ %155, %154 ], [ null, %152 ]
  %158 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %157, %"class.WTF::StringImpl"** %158, align 8
  %159 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %3, i64 0, i32 0, i32 0, i32 2
  %160 = load i32, i32* %159, align 4
  %161 = load i32, i32* %7, align 8
  %162 = icmp eq i32 %160, %161
  br i1 %162, label %172, label %163, !prof !13

163:                                              ; preds = %156
  %164 = ptrtoint %"class.WTF::StringImpl"* %157 to i64
  %165 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %3, i64 0, i32 0, i32 0, i32 0
  %166 = load %"class.WTF::String"*, %"class.WTF::String"** %165, align 8
  %167 = zext i32 %160 to i64
  %168 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %166, i64 %167
  %169 = bitcast %"class.WTF::String"* %168 to i64*
  store i64 %164, i64* %169, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %158, align 8
  %170 = load i32, i32* %159, align 4
  %171 = add i32 %170, 1
  store i32 %171, i32* %159, align 4
  br label %188

172:                                              ; preds = %156
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.19"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %6) #5
  %173 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  %174 = icmp eq %"class.WTF::StringImpl"* %173, null
  br i1 %174, label %188, label %175

175:                                              ; preds = %172
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = load atomic i32, i32* %176 monotonic, align 4
  %178 = and i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 0
  %181 = load i32, i32* %180, align 4
  br i1 %179, label %182, label %184

182:                                              ; preds = %175
  %183 = add i32 %181, -1
  store i32 %183, i32* %180, align 4
  br label %184

184:                                              ; preds = %182, %175
  %185 = phi i32 [ %183, %182 ], [ %181, %175 ]
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %188

187:                                              ; preds = %184
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %173) #5
  br label %188

188:                                              ; preds = %163, %172, %184, %187
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %153) #5
  br label %189

189:                                              ; preds = %149, %188
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.WTF::String"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %2, %7
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #5
  br label %121

13:                                               ; preds = %7
  %14 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #5
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = zext i32 %9 to i64
  %17 = icmp ult i32 %9, 23
  %18 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false)
  br i1 %17, label %26, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = add nuw nsw i64 %16, 16
  %23 = and i64 %22, 8589934576
  %24 = tail call i8* @_Znwm(i64 %23) #16
  store i8* %24, i8** %15, align 8
  %25 = or i64 %23, -9223372036854775808
  store i64 %25, i64* %20, align 8
  store i64 %16, i64* %21, align 8
  br label %30

26:                                               ; preds = %13
  %27 = trunc i32 %9 to i8
  %28 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 %27, i8* %29, align 1
  br label %30

30:                                               ; preds = %19, %26
  %31 = phi i8* [ %24, %19 ], [ %14, %26 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %31, i8 0, i64 %16, i1 false) #5
  %32 = getelementptr inbounds i8, i8* %31, i64 %16
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 1
  br i1 %36, label %61, label %38

38:                                               ; preds = %30
  %39 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  %40 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  br label %42

42:                                               ; preds = %52, %38
  %43 = phi i64 [ 0, %38 ], [ %59, %52 ]
  %44 = getelementptr inbounds i8, i8* %39, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %42
  %48 = icmp ult i8 %45, 32
  %49 = icmp slt i8 %45, 0
  %50 = or i1 %48, %49
  br i1 %50, label %52, label %51

51:                                               ; preds = %47, %42
  br label %52

52:                                               ; preds = %47, %51
  %53 = phi i8 [ %45, %51 ], [ 63, %47 ]
  %54 = load i8, i8* %41, align 1
  %55 = icmp slt i8 %54, 0
  %56 = load i8*, i8** %15, align 8
  %57 = select i1 %55, i8* %56, i8* %14
  %58 = getelementptr inbounds i8, i8* %57, i64 %43
  store i8 %53, i8* %58, align 1
  %59 = add nuw nsw i64 %43, 1
  %60 = icmp eq i64 %59, %16
  br i1 %60, label %119, label %42

61:                                               ; preds = %30
  %62 = bitcast %"class.WTF::StringImpl"* %37 to i16*
  %63 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = and i64 %16, 1
  %66 = icmp eq i32 %9, 1
  br i1 %66, label %102, label %67

67:                                               ; preds = %61
  %68 = sub nsw i64 %16, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %99, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %100, %69 ]
  %72 = getelementptr inbounds i16, i16* %62, i64 %70
  %73 = load i16, i16* %72, align 2
  %74 = icmp ne i16 %73, 0
  %75 = add i16 %73, -32
  %76 = icmp ugt i16 %75, 95
  %77 = and i1 %74, %76
  %78 = trunc i16 %73 to i8
  %79 = select i1 %77, i8 63, i8 %78
  %80 = load i8, i8* %64, align 1
  %81 = icmp slt i8 %80, 0
  %82 = load i8*, i8** %15, align 8
  %83 = select i1 %81, i8* %82, i8* %14
  %84 = getelementptr inbounds i8, i8* %83, i64 %70
  store i8 %79, i8* %84, align 1
  %85 = or i64 %70, 1
  %86 = getelementptr inbounds i16, i16* %62, i64 %85
  %87 = load i16, i16* %86, align 2
  %88 = icmp ne i16 %87, 0
  %89 = add i16 %87, -32
  %90 = icmp ugt i16 %89, 95
  %91 = and i1 %88, %90
  %92 = trunc i16 %87 to i8
  %93 = select i1 %91, i8 63, i8 %92
  %94 = load i8, i8* %64, align 1
  %95 = icmp slt i8 %94, 0
  %96 = load i8*, i8** %15, align 8
  %97 = select i1 %95, i8* %96, i8* %14
  %98 = getelementptr inbounds i8, i8* %97, i64 %85
  store i8 %93, i8* %98, align 1
  %99 = add nuw nsw i64 %70, 2
  %100 = add i64 %71, -2
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %69

102:                                              ; preds = %69, %61
  %103 = phi i64 [ 0, %61 ], [ %99, %69 ]
  %104 = icmp eq i64 %65, 0
  br i1 %104, label %119, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds i16, i16* %62, i64 %103
  %107 = load i16, i16* %106, align 2
  %108 = icmp ne i16 %107, 0
  %109 = add i16 %107, -32
  %110 = icmp ugt i16 %109, 95
  %111 = and i1 %108, %110
  %112 = trunc i16 %107 to i8
  %113 = select i1 %111, i8 63, i8 %112
  %114 = load i8, i8* %64, align 1
  %115 = icmp slt i8 %114, 0
  %116 = load i8*, i8** %15, align 8
  %117 = select i1 %115, i8* %116, i8* %14
  %118 = getelementptr inbounds i8, i8* %117, i64 %103
  store i8 %113, i8* %118, align 1
  br label %119

119:                                              ; preds = %52, %105, %102
  %120 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 8 %14, i64 24, i1 false) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #5
  br label %121

121:                                              ; preds = %119, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3WTF6String6Latin1Ev(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.WTF::String"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %2, %7
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #5
  br label %109

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 1
  br i1 %17, label %39, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.WTF::StringImpl"* %18 to i8*
  %21 = zext i32 %9 to i64
  %22 = icmp ult i32 %9, 23
  br i1 %22, label %31, label %23

23:                                               ; preds = %19
  %24 = add nuw nsw i64 %21, 16
  %25 = and i64 %24, 8589934576
  %26 = tail call i8* @_Znwm(i64 %25) #16
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %26, i8** %27, align 8
  %28 = or i64 %25, -9223372036854775808
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %21, i64* %30, align 8
  br label %36

31:                                               ; preds = %19
  %32 = trunc i32 %9 to i8
  %33 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  store i8 %32, i8* %34, align 1
  %35 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %36

36:                                               ; preds = %23, %31
  %37 = phi i8* [ %26, %23 ], [ %35, %31 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 1 %20, i64 %21, i1 false) #5
  %38 = getelementptr inbounds i8, i8* %37, i64 %21
  store i8 0, i8* %38, align 1
  br label %109

39:                                               ; preds = %13
  %40 = bitcast %"class.WTF::StringImpl"* %18 to i16*
  %41 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #5
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = zext i32 %9 to i64
  %44 = icmp ult i32 %9, 23
  %45 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 24, i1 false)
  br i1 %44, label %53, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = add nuw nsw i64 %43, 16
  %50 = and i64 %49, 8589934576
  %51 = tail call i8* @_Znwm(i64 %50) #16
  store i8* %51, i8** %42, align 8
  %52 = or i64 %50, -9223372036854775808
  store i64 %52, i64* %47, align 8
  store i64 %43, i64* %48, align 8
  br label %57

53:                                               ; preds = %39
  %54 = trunc i32 %9 to i8
  %55 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  store i8 %54, i8* %56, align 1
  br label %57

57:                                               ; preds = %53, %46
  %58 = phi i8* [ %51, %46 ], [ %41, %53 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %58, i8 0, i64 %43, i1 false) #5
  %59 = getelementptr inbounds i8, i8* %58, i64 %43
  store i8 0, i8* %59, align 1
  %60 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = and i64 %43, 1
  %63 = icmp eq i32 %9, 1
  br i1 %63, label %66, label %64

64:                                               ; preds = %57
  %65 = sub nsw i64 %43, %62
  br label %82

66:                                               ; preds = %82, %57
  %67 = phi i64 [ 0, %57 ], [ %106, %82 ]
  %68 = icmp eq i64 %62, 0
  br i1 %68, label %80, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds i16, i16* %40, i64 %67
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 255
  %73 = trunc i16 %71 to i8
  %74 = select i1 %72, i8 63, i8 %73
  %75 = load i8, i8* %61, align 1
  %76 = icmp slt i8 %75, 0
  %77 = load i8*, i8** %42, align 8
  %78 = select i1 %76, i8* %77, i8* %41
  %79 = getelementptr inbounds i8, i8* %78, i64 %67
  store i8 %74, i8* %79, align 1
  br label %80

80:                                               ; preds = %66, %69
  %81 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* nonnull align 8 %41, i64 24, i1 false) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #5
  br label %109

82:                                               ; preds = %82, %64
  %83 = phi i64 [ 0, %64 ], [ %106, %82 ]
  %84 = phi i64 [ %65, %64 ], [ %107, %82 ]
  %85 = getelementptr inbounds i16, i16* %40, i64 %83
  %86 = load i16, i16* %85, align 2
  %87 = icmp ugt i16 %86, 255
  %88 = trunc i16 %86 to i8
  %89 = select i1 %87, i8 63, i8 %88
  %90 = load i8, i8* %61, align 1
  %91 = icmp slt i8 %90, 0
  %92 = load i8*, i8** %42, align 8
  %93 = select i1 %91, i8* %92, i8* %41
  %94 = getelementptr inbounds i8, i8* %93, i64 %83
  store i8 %89, i8* %94, align 1
  %95 = or i64 %83, 1
  %96 = getelementptr inbounds i16, i16* %40, i64 %95
  %97 = load i16, i16* %96, align 2
  %98 = icmp ugt i16 %97, 255
  %99 = trunc i16 %97 to i8
  %100 = select i1 %98, i8 63, i8 %99
  %101 = load i8, i8* %61, align 1
  %102 = icmp slt i8 %101, 0
  %103 = load i8*, i8** %42, align 8
  %104 = select i1 %102, i8* %103, i8* %41
  %105 = getelementptr inbounds i8, i8* %104, i64 %95
  store i8 %100, i8* %105, align 1
  %106 = add nuw nsw i64 %83, 2
  %107 = add i64 %84, -2
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %66, label %82

109:                                              ; preds = %80, %36, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* noalias sret, %"class.WTF::String"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::Vector.24", align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %3, %11
  %16 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #5
  br label %158

17:                                               ; preds = %11
  %18 = icmp ugt i32 %13, 1431655765
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #5
  br label %158

21:                                               ; preds = %17
  %22 = bitcast %"class.WTF::Vector.24"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1040, i8* nonnull %22) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 1040, i1 false)
  %23 = mul i32 %13, 3
  %24 = getelementptr inbounds %"class.WTF::Vector.24", %"class.WTF::Vector.24"* %4, i64 0, i32 0, i32 1, i64 0
  %25 = getelementptr inbounds %"class.WTF::Vector.24", %"class.WTF::Vector.24"* %4, i64 0, i32 0, i32 0, i32 0
  store i8* %24, i8** %25, align 8
  %26 = getelementptr inbounds %"class.WTF::Vector.24", %"class.WTF::Vector.24"* %4, i64 0, i32 0, i32 0, i32 1
  store i32 1024, i32* %26, align 8
  %27 = icmp ugt i32 %23, 1024
  %28 = zext i32 %23 to i64
  br i1 %27, label %29, label %35

29:                                               ; preds = %21
  %30 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %28) #5
  %31 = call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %30) #5
  %32 = ptrtoint i8* %31 to i64
  %33 = bitcast %"class.WTF::Vector.24"* %4 to i64*
  store atomic i64 %32, i64* %33 monotonic, align 8
  %34 = trunc i64 %30 to i32
  store i32 %34, i32* %26, align 8
  br label %35

35:                                               ; preds = %21, %29
  %36 = phi i8* [ %31, %29 ], [ %24, %21 ]
  %37 = getelementptr inbounds %"class.WTF::Vector.24", %"class.WTF::Vector.24"* %4, i64 0, i32 0, i32 0, i32 2
  store i32 %23, i32* %37, align 4
  call void @llvm.memset.p0i8.i64(i8* align 1 %36, i8 0, i64 %28, i1 false) #5
  %38 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #5
  %39 = load i8*, i8** %25, align 8
  store i8* %39, i8** %5, align 8
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 1
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %57, label %45

45:                                               ; preds = %35
  %46 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #5
  %47 = icmp eq %"class.WTF::StringImpl"* %40, null
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 1
  %49 = bitcast %"class.WTF::StringImpl"* %48 to i8*
  %50 = select i1 %47, i8* null, i8* %49
  store i8* %50, i8** %6, align 8
  %51 = zext i32 %13 to i64
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = load i32, i32* %37, align 4
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %39, i64 %54
  %56 = call i32 @_ZN3WTF7unicode19ConvertLatin1ToUTF8EPPKhS2_PPcS4_(i8** nonnull %6, i8* %52, i8** nonnull %5, i8* %55) #5
  br label %117

57:                                               ; preds = %35
  %58 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #5
  %59 = icmp eq %"class.WTF::StringImpl"* %40, null
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 1
  %61 = bitcast %"class.WTF::StringImpl"* %60 to i16*
  %62 = select i1 %59, i16* null, i16* %61
  store i16* %62, i16** %7, align 8
  %63 = icmp eq i32 %2, 2
  br i1 %63, label %64, label %87

64:                                               ; preds = %57
  %65 = zext i32 %13 to i64
  %66 = getelementptr inbounds i16, i16* %62, i64 %65
  %67 = load i32, i32* %37, align 4
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i8, i8* %39, i64 %68
  br label %70

70:                                               ; preds = %64, %84
  %71 = call i32 @_ZN3WTF7unicode18ConvertUTF16ToUTF8EPPKDsS2_PPcS4_b(i16** nonnull %7, i16* %66, i8** nonnull %5, i8* %69, i1 zeroext true) #5
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %70
  %74 = load i16*, i16** %7, align 8
  br label %84

75:                                               ; preds = %70
  %76 = load i8*, i8** %5, align 8
  %77 = getelementptr inbounds i8, i8* %76, i64 1
  store i8* %77, i8** %5, align 8
  store i8 -17, i8* %76, align 1
  %78 = load i8*, i8** %5, align 8
  %79 = getelementptr inbounds i8, i8* %78, i64 1
  store i8* %79, i8** %5, align 8
  store i8 -65, i8* %78, align 1
  %80 = load i8*, i8** %5, align 8
  %81 = getelementptr inbounds i8, i8* %80, i64 1
  store i8* %81, i8** %5, align 8
  store i8 -67, i8* %80, align 1
  %82 = load i16*, i16** %7, align 8
  %83 = getelementptr inbounds i16, i16* %82, i64 1
  store i16* %83, i16** %7, align 8
  br label %84

84:                                               ; preds = %73, %75
  %85 = phi i16* [ %74, %73 ], [ %83, %75 ]
  %86 = icmp ult i16* %85, %66
  br i1 %86, label %70, label %117

87:                                               ; preds = %57
  %88 = icmp eq i32 %2, 1
  %89 = zext i32 %13 to i64
  %90 = getelementptr inbounds i16, i16* %62, i64 %89
  %91 = load i32, i32* %37, align 4
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds i8, i8* %39, i64 %92
  %94 = call i32 @_ZN3WTF7unicode18ConvertUTF16ToUTF8EPPKDsS2_PPcS4_b(i16** nonnull %7, i16* %90, i8** nonnull %5, i8* %93, i1 zeroext %88) #5
  switch i32 %94, label %117 [
    i32 3, label %115
    i32 1, label %95
  ]

95:                                               ; preds = %87
  br i1 %88, label %115, label %96

96:                                               ; preds = %95
  %97 = load i16*, i16** %7, align 8
  %98 = load i16, i16* %97, align 2
  %99 = lshr i16 %98, 12
  %100 = trunc i16 %99 to i8
  %101 = or i8 %100, -32
  %102 = load i8*, i8** %5, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 1
  store i8* %103, i8** %5, align 8
  store i8 %101, i8* %102, align 1
  %104 = lshr i16 %98, 6
  %105 = trunc i16 %104 to i8
  %106 = and i8 %105, 63
  %107 = or i8 %106, -128
  %108 = load i8*, i8** %5, align 8
  %109 = getelementptr inbounds i8, i8* %108, i64 1
  store i8* %109, i8** %5, align 8
  store i8 %107, i8* %108, align 1
  %110 = trunc i16 %98 to i8
  %111 = and i8 %110, 63
  %112 = or i8 %111, -128
  %113 = load i8*, i8** %5, align 8
  %114 = getelementptr inbounds i8, i8* %113, i64 1
  store i8* %114, i8** %5, align 8
  store i8 %112, i8* %113, align 1
  br label %117

115:                                              ; preds = %95, %87
  %116 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 24, i1 false) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #5
  br label %148

117:                                              ; preds = %84, %96, %87, %45
  %118 = phi i8* [ %46, %45 ], [ %58, %87 ], [ %58, %96 ], [ %58, %84 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #5
  %119 = load i8*, i8** %25, align 8
  %120 = bitcast i8** %5 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = ptrtoint i8* %119 to i64
  %123 = sub i64 %121, %122
  %124 = icmp ugt i64 %123, -17
  br i1 %124, label %125, label %127

125:                                              ; preds = %117
  %126 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %126) #17
  unreachable

127:                                              ; preds = %117
  %128 = icmp ult i64 %123, 23
  br i1 %128, label %137, label %129

129:                                              ; preds = %127
  %130 = add nuw i64 %123, 16
  %131 = and i64 %130, -16
  %132 = call i8* @_Znwm(i64 %131) #16
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %132, i8** %133, align 8
  %134 = or i64 %131, -9223372036854775808
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %123, i64* %136, align 8
  br label %143

137:                                              ; preds = %127
  %138 = trunc i64 %123 to i8
  %139 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  store i8 %138, i8* %140, align 1
  %141 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %142 = icmp eq i64 %123, 0
  br i1 %142, label %145, label %143

143:                                              ; preds = %137, %129
  %144 = phi i8* [ %132, %129 ], [ %141, %137 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %144, i8* align 1 %119, i64 %123, i1 false) #5
  br label %145

145:                                              ; preds = %137, %143
  %146 = phi i8* [ %141, %137 ], [ %144, %143 ]
  %147 = getelementptr inbounds i8, i8* %146, i64 %123
  store i8 0, i8* %147, align 1
  br label %148

148:                                              ; preds = %115, %145
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #5
  %149 = load i32, i32* %37, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %152, label %151, !prof !13

151:                                              ; preds = %148
  store i32 0, i32* %37, align 4
  br label %152

152:                                              ; preds = %151, %148
  %153 = load i8*, i8** %25, align 8
  %154 = icmp eq i8* %24, %153
  br i1 %154, label %157, label %155, !prof !2

155:                                              ; preds = %152
  %156 = getelementptr inbounds %"class.WTF::Vector.24", %"class.WTF::Vector.24"* %4, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIcLj1024ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPc(%"class.WTF::VectorBuffer.25"* nonnull %156, i8* %153) #5
  br label %157

157:                                              ; preds = %152, %155
  call void @llvm.lifetime.end.p0i8(i64 1040, i8* nonnull %22) #5
  br label %158

158:                                              ; preds = %157, %19, %15
  ret void
}

declare i32 @_ZN3WTF7unicode19ConvertLatin1ToUTF8EPPKhS2_PPcS4_(i8**, i8*, i8**, i8*) local_unnamed_addr #1

declare i32 @_ZN3WTF7unicode18ConvertUTF16ToUTF8EPPKDsS2_PPcS4_b(i16**, i16*, i8**, i8*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN3WTF6String23Make8BitFrom16BitSourceEPKDsj(i16* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = bitcast i16* %0 to i8*
  %4 = alloca i8*, align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %29

6:                                                ; preds = %2
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = ptrtoint %"class.WTF::StringImpl"* %9 to i64
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %144, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %144

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #5
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !13

26:                                               ; preds = %17
  tail call void @llvm.trap() #5
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %144

29:                                               ; preds = %2
  %30 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #5
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %31 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %1, i8** nonnull dereferenceable(8) %4) #5
  %32 = load i8*, i8** %4, align 8
  %33 = zext i32 %1 to i64
  %34 = icmp ult i32 %1, 16
  br i1 %34, label %100, label %35

35:                                               ; preds = %29
  %36 = getelementptr i8, i8* %32, i64 %33
  %37 = getelementptr i16, i16* %0, i64 %33
  %38 = bitcast i16* %37 to i8*
  %39 = icmp ult i8* %32, %38
  %40 = icmp ugt i8* %36, %3
  %41 = and i1 %39, %40
  br i1 %41, label %100, label %42

42:                                               ; preds = %35
  %43 = and i64 %33, 4294967280
  %44 = add nsw i64 %43, -16
  %45 = lshr exact i64 %44, 4
  %46 = add nuw nsw i64 %45, 1
  %47 = and i64 %46, 1
  %48 = icmp eq i64 %44, 0
  br i1 %48, label %82, label %49

49:                                               ; preds = %42
  %50 = sub nuw nsw i64 %46, %47
  br label %51

51:                                               ; preds = %51, %49
  %52 = phi i64 [ 0, %49 ], [ %79, %51 ]
  %53 = phi i64 [ %50, %49 ], [ %80, %51 ]
  %54 = getelementptr inbounds i16, i16* %0, i64 %52
  %55 = bitcast i16* %54 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !23
  %57 = getelementptr inbounds i16, i16* %54, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !23
  %60 = trunc <8 x i16> %56 to <8 x i8>
  %61 = trunc <8 x i16> %59 to <8 x i8>
  %62 = getelementptr inbounds i8, i8* %32, i64 %52
  %63 = bitcast i8* %62 to <8 x i8>*
  store <8 x i8> %60, <8 x i8>* %63, align 1, !alias.scope !26, !noalias !23
  %64 = getelementptr inbounds i8, i8* %62, i64 8
  %65 = bitcast i8* %64 to <8 x i8>*
  store <8 x i8> %61, <8 x i8>* %65, align 1, !alias.scope !26, !noalias !23
  %66 = or i64 %52, 16
  %67 = getelementptr inbounds i16, i16* %0, i64 %66
  %68 = bitcast i16* %67 to <8 x i16>*
  %69 = load <8 x i16>, <8 x i16>* %68, align 2, !alias.scope !23
  %70 = getelementptr inbounds i16, i16* %67, i64 8
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !23
  %73 = trunc <8 x i16> %69 to <8 x i8>
  %74 = trunc <8 x i16> %72 to <8 x i8>
  %75 = getelementptr inbounds i8, i8* %32, i64 %66
  %76 = bitcast i8* %75 to <8 x i8>*
  store <8 x i8> %73, <8 x i8>* %76, align 1, !alias.scope !26, !noalias !23
  %77 = getelementptr inbounds i8, i8* %75, i64 8
  %78 = bitcast i8* %77 to <8 x i8>*
  store <8 x i8> %74, <8 x i8>* %78, align 1, !alias.scope !26, !noalias !23
  %79 = add i64 %52, 32
  %80 = add i64 %53, -2
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %51, !llvm.loop !28

82:                                               ; preds = %51, %42
  %83 = phi i64 [ 0, %42 ], [ %79, %51 ]
  %84 = icmp eq i64 %47, 0
  br i1 %84, label %98, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds i16, i16* %0, i64 %83
  %87 = bitcast i16* %86 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !23
  %89 = getelementptr inbounds i16, i16* %86, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !23
  %92 = trunc <8 x i16> %88 to <8 x i8>
  %93 = trunc <8 x i16> %91 to <8 x i8>
  %94 = getelementptr inbounds i8, i8* %32, i64 %83
  %95 = bitcast i8* %94 to <8 x i8>*
  store <8 x i8> %92, <8 x i8>* %95, align 1, !alias.scope !26, !noalias !23
  %96 = getelementptr inbounds i8, i8* %94, i64 8
  %97 = bitcast i8* %96 to <8 x i8>*
  store <8 x i8> %93, <8 x i8>* %97, align 1, !alias.scope !26, !noalias !23
  br label %98

98:                                               ; preds = %82, %85
  %99 = icmp eq i64 %43, %33
  br i1 %99, label %142, label %100

100:                                              ; preds = %98, %35, %29
  %101 = phi i64 [ 0, %35 ], [ 0, %29 ], [ %43, %98 ]
  %102 = xor i64 %101, -1
  %103 = add nsw i64 %102, %33
  %104 = and i64 %33, 3
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %116, label %106

106:                                              ; preds = %100, %106
  %107 = phi i64 [ %113, %106 ], [ %101, %100 ]
  %108 = phi i64 [ %114, %106 ], [ %104, %100 ]
  %109 = getelementptr inbounds i16, i16* %0, i64 %107
  %110 = load i16, i16* %109, align 2
  %111 = trunc i16 %110 to i8
  %112 = getelementptr inbounds i8, i8* %32, i64 %107
  store i8 %111, i8* %112, align 1
  %113 = add nuw nsw i64 %107, 1
  %114 = add i64 %108, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %106, !llvm.loop !29

116:                                              ; preds = %106, %100
  %117 = phi i64 [ %101, %100 ], [ %113, %106 ]
  %118 = icmp ult i64 %103, 3
  br i1 %118, label %142, label %119

119:                                              ; preds = %116, %119
  %120 = phi i64 [ %140, %119 ], [ %117, %116 ]
  %121 = getelementptr inbounds i16, i16* %0, i64 %120
  %122 = load i16, i16* %121, align 2
  %123 = trunc i16 %122 to i8
  %124 = getelementptr inbounds i8, i8* %32, i64 %120
  store i8 %123, i8* %124, align 1
  %125 = add nuw nsw i64 %120, 1
  %126 = getelementptr inbounds i16, i16* %0, i64 %125
  %127 = load i16, i16* %126, align 2
  %128 = trunc i16 %127 to i8
  %129 = getelementptr inbounds i8, i8* %32, i64 %125
  store i8 %128, i8* %129, align 1
  %130 = add nuw nsw i64 %120, 2
  %131 = getelementptr inbounds i16, i16* %0, i64 %130
  %132 = load i16, i16* %131, align 2
  %133 = trunc i16 %132 to i8
  %134 = getelementptr inbounds i8, i8* %32, i64 %130
  store i8 %133, i8* %134, align 1
  %135 = add nuw nsw i64 %120, 3
  %136 = getelementptr inbounds i16, i16* %0, i64 %135
  %137 = load i16, i16* %136, align 2
  %138 = trunc i16 %137 to i8
  %139 = getelementptr inbounds i8, i8* %32, i64 %135
  store i8 %138, i8* %139, align 1
  %140 = add nuw nsw i64 %120, 4
  %141 = icmp eq i64 %140, %33
  br i1 %141, label %142, label %119, !llvm.loop !30

142:                                              ; preds = %116, %119, %98
  %143 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #5
  br label %144

144:                                              ; preds = %27, %12, %6, %142
  %145 = phi i64 [ %143, %142 ], [ %10, %6 ], [ %10, %12 ], [ %10, %27 ]
  %146 = inttoptr i64 %145 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %146
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.28", align 8
  %4 = alloca i16*, align 8
  %5 = alloca i8*, align 8
  %6 = icmp ult i64 %1, 4294967296
  br i1 %6, label %8, label %7, !prof !2

7:                                                ; preds = %2
  tail call void @llvm.trap() #5
  unreachable

8:                                                ; preds = %2
  %9 = trunc i64 %1 to i32
  %10 = icmp eq i8* %0, null
  br i1 %10, label %170, label %11

11:                                               ; preds = %8
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %13, label %36

13:                                               ; preds = %11
  %14 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = ptrtoint %"class.WTF::StringImpl"* %16 to i64
  %18 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %18, label %170, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %170

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i33
  %28 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %27, i33 1) #5
  %29 = extractvalue { i33, i1 } %28, 1
  %30 = extractvalue { i33, i1 } %28, 0
  %31 = icmp slt i33 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %33, label %34, !prof !13

33:                                               ; preds = %24
  tail call void @llvm.trap() #5
  unreachable

34:                                               ; preds = %24
  %35 = trunc i33 %30 to i32
  store i32 %35, i32* %25, align 4
  br label %170

36:                                               ; preds = %11
  %37 = and i64 %1, 4294967295
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %111, label %39

39:                                               ; preds = %36
  %40 = icmp ult i64 %37, 32
  br i1 %40, label %41, label %45

41:                                               ; preds = %70, %39
  %42 = phi i64 [ 0, %39 ], [ %47, %70 ]
  %43 = phi i1 [ false, %39 ], [ %90, %70 ]
  %44 = phi i8 [ 0, %39 ], [ %80, %70 ]
  br label %99

45:                                               ; preds = %39
  %46 = and i64 %1, 31
  %47 = sub nsw i64 %37, %46
  br label %48

48:                                               ; preds = %48, %45
  %49 = phi i64 [ 0, %45 ], [ %68, %48 ]
  %50 = phi <16 x i1> [ zeroinitializer, %45 ], [ %66, %48 ]
  %51 = phi <16 x i1> [ zeroinitializer, %45 ], [ %67, %48 ]
  %52 = phi <16 x i8> [ zeroinitializer, %45 ], [ %60, %48 ]
  %53 = phi <16 x i8> [ zeroinitializer, %45 ], [ %61, %48 ]
  %54 = getelementptr inbounds i8, i8* %0, i64 %49
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = getelementptr inbounds i8, i8* %54, i64 16
  %58 = bitcast i8* %57 to <16 x i8>*
  %59 = load <16 x i8>, <16 x i8>* %58, align 1
  %60 = or <16 x i8> %56, %52
  %61 = or <16 x i8> %59, %53
  %62 = add <16 x i8> %56, <i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65>
  %63 = add <16 x i8> %59, <i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65>
  %64 = icmp ult <16 x i8> %62, <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>
  %65 = icmp ult <16 x i8> %63, <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>
  %66 = or <16 x i1> %50, %64
  %67 = or <16 x i1> %51, %65
  %68 = add i64 %49, 32
  %69 = icmp eq i64 %68, %47
  br i1 %69, label %70, label %48, !llvm.loop !31

70:                                               ; preds = %48
  %71 = or <16 x i8> %61, %60
  %72 = shufflevector <16 x i8> %71, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %73 = or <16 x i8> %71, %72
  %74 = shufflevector <16 x i8> %73, <16 x i8> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %75 = or <16 x i8> %73, %74
  %76 = shufflevector <16 x i8> %75, <16 x i8> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %77 = or <16 x i8> %75, %76
  %78 = shufflevector <16 x i8> %77, <16 x i8> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %79 = or <16 x i8> %77, %78
  %80 = extractelement <16 x i8> %79, i32 0
  %81 = or <16 x i1> %67, %66
  %82 = shufflevector <16 x i1> %81, <16 x i1> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %83 = or <16 x i1> %81, %82
  %84 = shufflevector <16 x i1> %83, <16 x i1> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %85 = or <16 x i1> %83, %84
  %86 = shufflevector <16 x i1> %85, <16 x i1> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %87 = or <16 x i1> %85, %86
  %88 = shufflevector <16 x i1> %87, <16 x i1> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %89 = or <16 x i1> %87, %88
  %90 = extractelement <16 x i1> %89, i32 0
  %91 = icmp eq i64 %46, 0
  br i1 %91, label %92, label %41

92:                                               ; preds = %99, %70
  %93 = phi i8 [ %80, %70 ], [ %105, %99 ]
  %94 = phi i1 [ %90, %70 ], [ %108, %99 ]
  %95 = xor i1 %94, true
  %96 = lshr i8 %93, 7
  %97 = zext i1 %95 to i8
  %98 = shl nuw nsw i8 %97, 1
  br label %111

99:                                               ; preds = %41, %99
  %100 = phi i64 [ %109, %99 ], [ %42, %41 ]
  %101 = phi i1 [ %108, %99 ], [ %43, %41 ]
  %102 = phi i8 [ %105, %99 ], [ %44, %41 ]
  %103 = getelementptr inbounds i8, i8* %0, i64 %100
  %104 = load i8, i8* %103, align 1
  %105 = or i8 %104, %102
  %106 = add i8 %104, -65
  %107 = icmp ult i8 %106, 26
  %108 = or i1 %101, %107
  %109 = add nuw nsw i64 %100, 1
  %110 = icmp eq i64 %109, %37
  br i1 %110, label %92, label %99, !llvm.loop !32

111:                                              ; preds = %36, %92
  %112 = phi i8 [ 0, %36 ], [ %96, %92 ]
  %113 = phi i8 [ 2, %36 ], [ %98, %92 ]
  %114 = or i8 %113, %112
  %115 = xor i8 %114, 1
  %116 = zext i8 %115 to i32
  %117 = and i32 %116, 1
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %122, label %119

119:                                              ; preds = %111
  %120 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhjNS_21ASCIIStringAttributesE(i8* nonnull %0, i32 %9, i32 %116) #5
  %121 = ptrtoint %"class.WTF::StringImpl"* %120 to i64
  br label %170

122:                                              ; preds = %111
  %123 = bitcast %"class.WTF::Vector.28"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2064, i8* nonnull %123) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %123, i8 -86, i64 2064, i1 false)
  %124 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %3, i64 0, i32 0, i32 1, i64 0
  %125 = bitcast %"class.WTF::Vector.28"* %3 to i8**
  store i8* %124, i8** %125, align 8
  %126 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %3, i64 0, i32 0, i32 0, i32 1
  store i32 1024, i32* %126, align 8
  %127 = icmp ugt i32 %9, 1024
  br i1 %127, label %128, label %135

128:                                              ; preds = %122
  %129 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #5
  %130 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %129, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #5
  %131 = ptrtoint i8* %130 to i64
  %132 = bitcast %"class.WTF::Vector.28"* %3 to i64*
  store atomic i64 %131, i64* %132 monotonic, align 8
  %133 = lshr i64 %129, 1
  %134 = trunc i64 %133 to i32
  store i32 %134, i32* %126, align 8
  br label %135

135:                                              ; preds = %122, %128
  %136 = phi i8* [ %130, %128 ], [ %124, %122 ]
  %137 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %3, i64 0, i32 0, i32 0, i32 2
  store i32 %9, i32* %137, align 4
  %138 = shl nuw nsw i64 %37, 1
  call void @llvm.memset.p0i8.i64(i8* align 2 %136, i8 0, i64 %138, i1 false) #5
  %139 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %3, i64 0, i32 0, i32 0, i32 0
  %140 = load i16*, i16** %139, align 8
  %141 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #5
  store i16* %140, i16** %4, align 8
  %142 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #5
  store i8* %0, i8** %5, align 8
  %143 = getelementptr inbounds i8, i8* %0, i64 %37
  %144 = load i32, i32* %137, align 4
  %145 = zext i32 %144 to i64
  %146 = getelementptr inbounds i16, i16* %140, i64 %145
  %147 = call i32 @_ZN3WTF7unicode18ConvertUTF8ToUTF16EPPKcS2_PPDsS4_Pbb(i8** nonnull %5, i8* %143, i16** nonnull %4, i16* %146, i8* null, i1 zeroext true) #5
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %158

149:                                              ; preds = %135
  %150 = bitcast i16** %4 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = ptrtoint i16* %140 to i64
  %153 = sub i64 %151, %152
  %154 = lshr exact i64 %153, 1
  %155 = trunc i64 %154 to i32
  %156 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKDsj(i16* %140, i32 %155) #5
  %157 = ptrtoint %"class.WTF::StringImpl"* %156 to i64
  br label %158

158:                                              ; preds = %135, %149
  %159 = phi i64 [ %157, %149 ], [ 0, %135 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #5
  %160 = load i32, i32* %137, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %163, label %162, !prof !13

162:                                              ; preds = %158
  store i32 0, i32* %137, align 4
  br label %163

163:                                              ; preds = %162, %158
  %164 = load i16*, i16** %139, align 8
  %165 = bitcast i8* %124 to i16*
  %166 = icmp eq i16* %164, %165
  br i1 %166, label %169, label %167, !prof !2

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %3, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIDsLj1024ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.29"* nonnull %168, i16* %164) #5
  br label %169

169:                                              ; preds = %163, %167
  call void @llvm.lifetime.end.p0i8(i64 2064, i8* nonnull %123) #5
  br label %170

170:                                              ; preds = %34, %19, %13, %8, %119, %169
  %171 = phi i64 [ %159, %169 ], [ %121, %119 ], [ 0, %8 ], [ %17, %13 ], [ %17, %19 ], [ %17, %34 ]
  %172 = inttoptr i64 %171 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %172
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhjNS_21ASCIIStringAttributesE(i8*, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare i32 @_ZN3WTF7unicode18ConvertUTF8ToUTF16EPPKcS2_PPDsS4_Pbb(i8**, i8*, i16**, i16*, i8*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKh(i8*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = tail call i64 @strlen(i8* nonnull %0) #15
  %5 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8* nonnull %0, i64 %4)
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi %"class.WTF::StringImpl"* [ %5, %3 ], [ null, %1 ]
  ret %"class.WTF::StringImpl"* %7
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8* %0, i64 %1)
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN3WTF6String26FromUTF8WithLatin1FallbackEPKhm(i8*, i64) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8* %0, i64 %1)
  %4 = ptrtoint %"class.WTF::StringImpl"* %3 to i64
  %5 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %5, label %6, label %15

6:                                                ; preds = %2
  %7 = icmp ult i64 %1, 4294967296
  br i1 %7, label %9, label %8, !prof !2

8:                                                ; preds = %6
  tail call void @llvm.trap() #5
  unreachable

9:                                                ; preds = %6
  %10 = icmp eq i8* %0, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %9
  %12 = trunc i64 %1 to i32
  %13 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* nonnull %0, i32 %12) #5
  %14 = ptrtoint %"class.WTF::StringImpl"* %13 to i64
  br label %15

15:                                               ; preds = %9, %11, %2
  %16 = phi i64 [ %4, %2 ], [ %14, %11 ], [ 0, %9 ]
  %17 = inttoptr i64 %16 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3WTFlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_6StringE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #5
  %6 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String18EncodeForDebuggingEv(%"class.WTF::String"* %1)
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.WTF::String"* nonnull %4, i32 0)
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %11 to i64
  %18 = select i1 %12, i8* %14, i8* %5
  %19 = select i1 %12, i64 %16, i64 %17
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %18, i64 %19) #5
  %21 = load i8, i8* %10, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %2
  %24 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %24) #16
  br label %25

25:                                               ; preds = %2, %23
  %26 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #5
  br label %40

40:                                               ; preds = %25, %36, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #5
  ret %"class.std::__1::basic_ostream"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"*, %"class.perfetto::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %4 = bitcast %"class.WTF::StringUTF8Adaptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 40, i1 false)
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %3, %"class.WTF::String"* dereferenceable(8) %0, i32 0) #5
  %5 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %3, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %3, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = zext i32 %8 to i64
  call void @_ZNO8perfetto11TracedValue11WriteStringEPKcm(%"class.perfetto::TracedValue"* %1, i8* %6, i64 %9) #5
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #5
  ret void
}

declare void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #1

declare void @_ZNO8perfetto11TracedValue11WriteStringEPKcm(%"class.perfetto::TracedValue"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"*) unnamed_addr #3

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nofree
declare i32 @__vsnprintf_chk(i8*, i64, i32, i64, i8*, %struct.__va_list_tag*) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1 immarg, i1 immarg, i1 immarg) #8

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIcLj256ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPc(%"class.WTF::VectorBuffer"*, i8*) local_unnamed_addr #9 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #5
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !22
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !22
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #5
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !13

22:                                               ; preds = %15
  %23 = bitcast %union.anon.8* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.8* %16 to %"class.WTF::Vector.14"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.14"* %30, i16* nonnull dereferenceable(2) %3) #5
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !22
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #5
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !13

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.9"* %41, i8* nonnull dereferenceable(1) %4) #5
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.14"*, i16* dereferenceable(2)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.14"* %0, i32 %5) #5
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.14"* %0, i32 %5) #5
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.14"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #5
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #5
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0), i8* %15, i8* %16) #5
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #5
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #5
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #5
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #5
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #5
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.14"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.14"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.14"* %0, i32 %27) #5
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.14"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.14"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.14"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !13

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #5
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.15"* %19, i16* nonnull %6) #5
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #5
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #5
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !2

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #5
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !2

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.15"* %53, i16* %48) #5
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.14"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #5
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i8* %11, i8* %12) #5
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.13, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #5
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #5
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #5
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.15"*, i16*) local_unnamed_addr #9 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #5
  ret void
}

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.9"*, i8* dereferenceable(1)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.9"* %0, i32 %5) #5
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.9"* %0, i32 %5) #5
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.9"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #5
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #5
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0), i8* %15, i8* %16) #5
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #5
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #5
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #5
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #5
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #5
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.9"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.9"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.9"* %0, i32 %27) #5
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.9"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.9"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.9"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !13

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #5
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.10"* %18, i8* nonnull %6) #5
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #5
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #5
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !2

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #5
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !2

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.10"* %46, i8* %42) #5
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.9"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #5
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i8* %11, i8* %12) #5
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.13, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #5
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #5
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #5
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.10"*, i8*) local_unnamed_addr #9 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #5
  ret void
}

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #11

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIcLj1024ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPc(%"class.WTF::VectorBuffer.25"*, i8*) local_unnamed_addr #9 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #5
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj1024ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.29"*, i16*) local_unnamed_addr #9 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #5
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #12

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #14

declare i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #5
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i8* %11, i8* %12) #5
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.13, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #5
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #5
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #5
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIcLj256ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #5
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #5
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0), i8* %15, i8* %16) #5
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #5
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #5
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #5
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 256
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %37) #5
  %39 = call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %38) #5
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 256, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIcLj256ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %27) #5
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIcLj256ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 257
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 256, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 256, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !13

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #5
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIcLj256ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPc(%"class.WTF::VectorBuffer"* %18, i8* nonnull %6) #5
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %27) #5
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %28) #5
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !2

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #5
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !2

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIcLj256ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPc(%"class.WTF::VectorBuffer"* %46, i8* %42) #5
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #5
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i8* %11, i8* %12) #5
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.13, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #5
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #5
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #5
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.19"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #5
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #5
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.19"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #5
  %47 = bitcast %"class.WTF::Vector.19"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #5
  %51 = bitcast %"class.WTF::Vector.19"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #5
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #5
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.19"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #5
  %87 = bitcast %"class.WTF::Vector.19"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #5
  %91 = bitcast %"class.WTF::Vector.19"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %104 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #5
  %7 = load i8, i8* %6, align 8, !range !22
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #5
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #5
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #5
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #5
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #5
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #5
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #5
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #5
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #5
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #16
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #5
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #5
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #16
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #5
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #5
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind readonly }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !9}
!13 = !{!"branch_weights", i32 1, i32 2000}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !9}
!20 = distinct !{!20, !11}
!21 = distinct !{!21, !9}
!22 = !{i8 0, i8 2}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !9}
!29 = distinct !{!29, !11}
!30 = distinct !{!30, !9}
!31 = distinct !{!31, !9}
!32 = distinct !{!32, !33, !9}
!33 = !{!"llvm.loop.unroll.runtime.disable"}
