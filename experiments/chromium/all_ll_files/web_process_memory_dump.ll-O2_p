; ModuleID = '../../third_party/blink/renderer/platform/instrumentation/tracing/web_process_memory_dump.cc'
source_filename = "../../third_party/blink/renderer/platform/instrumentation/tracing/web_process_memory_dump.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::MemoryDumpArgs" = type { i32, i32, i64 }
%"class.blink::WebProcessMemoryDump" = type { %"class.std::__1::unique_ptr", %"class.base::trace_event::ProcessMemoryDump"*, i32, [4 x i8], %"class.WTF::HashMap", %"class.WTF::Vector" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::trace_event::ProcessMemoryDump"* }
%"class.base::trace_event::ProcessMemoryDump" = type { %"class.base::UnguessableToken", %"class.std::__1::map", %"class.std::__1::map.6", %"struct.base::trace_event::MemoryDumpArgs", %"class.std::__1::unique_ptr.17" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.0", %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i64 }
%"class.std::__1::map.6" = type { %"class.std::__1::__tree.7" }
%"class.std::__1::__tree.7" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.base::trace_event::MemoryAllocatorDump"* }
%"class.base::trace_event::MemoryAllocatorDump" = type { %"class.std::__1::basic_string", %"class.base::trace_event::MemoryAllocatorDumpGuid", i32, i32, %"class.absl::optional", %"class.std::__1::vector" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::trace_event::MemoryAllocatorDumpGuid" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.25 }
%union.anon.25 = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"class.std::__1::__compressed_pair.26" }
%"struct.base::trace_event::MemoryAllocatorDump::Entry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i64, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"* }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.base::trace_event::MemoryAllocatorDump"*, %"class.std::__1::unique_ptr.35" }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.blink::WebMemoryAllocatorDump"* }
%"class.blink::WebMemoryAllocatorDump" = type { %"class.base::trace_event::MemoryAllocatorDump"*, i64 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr.41"*, i32, i32 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.skia::SkiaTraceMemoryDumpImpl"* }
%"class.skia::SkiaTraceMemoryDumpImpl" = type <{ %class.SkTraceMemoryDump, %"class.std::__1::basic_string", %"class.base::trace_event::ProcessMemoryDump"*, i32, [4 x i8] }>
%class.SkTraceMemoryDump = type { i32 (...)** }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.49" }
%"struct.std::__1::__atomic_base.49" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::DiscardableMemory" = type { i32 (...)** }
%"class.std::__1::unordered_map" = type opaque
%"class.base::trace_event::TraceEventMemoryOverhead" = type { [14 x %"struct.base::trace_event::TraceEventMemoryOverhead::ObjectCountAndSize"] }
%"struct.base::trace_event::TraceEventMemoryOverhead::ObjectCountAndSize" = type { i64, i64, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF7HashMapIPN4base11trace_event19MemoryAllocatorDumpENSt3__110unique_ptrIN5blink22WebMemoryAllocatorDumpENS5_14default_deleteIS8_EEEENS_7PtrHashIS3_EENS_10HashTraitsIS4_EENSE_ISB_EENS_18PartitionAllocatorEE4TakeERKS4_ = comdat any

$_ZN3WTF9HashTableIPN4base11trace_event19MemoryAllocatorDumpENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink22WebMemoryAllocatorDumpENS6_14default_deleteIS9_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISL_SG_SM_EERS4_SC_EENS_18HashTableAddResultISN_SD_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPN4base11trace_event19MemoryAllocatorDumpENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink22WebMemoryAllocatorDumpENS6_14default_deleteIS9_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE6ExpandEPSD_ = comdat any

$_ZN3WTF9HashTableIPN4base11trace_event19MemoryAllocatorDumpENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink22WebMemoryAllocatorDumpENS6_14default_deleteIS9_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE8RehashToEPSD_jSO_ = comdat any

$_ZN3WTF9HashTableIPN4base11trace_event19MemoryAllocatorDumpENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink22WebMemoryAllocatorDumpENS6_14default_deleteIS9_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF9HashTableIPN4base11trace_event19MemoryAllocatorDumpENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink22WebMemoryAllocatorDumpENS6_14default_deleteIS9_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE4findERKS4_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN4skia23SkiaTraceMemoryDumpImplENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN4skia23SkiaTraceMemoryDumpImplENS2_14default_deleteIS5_EEEEEEmm = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN4skia23SkiaTraceMemoryDumpImplENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@.ref.tmp = private constant %"struct.base::trace_event::MemoryDumpArgs" { i32 2, i32 0, i64 0 }, align 8
@.str = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN4base11trace_event19MemoryAllocatorDumpENSt3__110unique_ptrIN5blink22WebMemoryAllocatorDumpENS6_14default_deleteIS9_EEEEEEEEPKcv = private unnamed_addr constant [219 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<base::trace_event::MemoryAllocatorDump *, std::__1::unique_ptr<blink::WebMemoryAllocatorDump, std::__1::default_delete<blink::WebMemoryAllocatorDump> > >]\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN4skia23SkiaTraceMemoryDumpImplENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [157 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<skia::SkiaTraceMemoryDumpImpl, std::__1::default_delete<skia::SkiaTraceMemoryDumpImpl> >]\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

@_ZN5blink20WebProcessMemoryDumpC1Ev = hidden unnamed_addr alias void (%"class.blink::WebProcessMemoryDump"*), void (%"class.blink::WebProcessMemoryDump"*)* @_ZN5blink20WebProcessMemoryDumpC2Ev
@_ZN5blink20WebProcessMemoryDumpC1EN4base11trace_event23MemoryDumpLevelOfDetailEPNS2_17ProcessMemoryDumpE = hidden unnamed_addr alias void (%"class.blink::WebProcessMemoryDump"*, i32, %"class.base::trace_event::ProcessMemoryDump"*), void (%"class.blink::WebProcessMemoryDump"*, i32, %"class.base::trace_event::ProcessMemoryDump"*)* @_ZN5blink20WebProcessMemoryDumpC2EN4base11trace_event23MemoryDumpLevelOfDetailEPNS2_17ProcessMemoryDumpE
@_ZN5blink20WebProcessMemoryDumpD1Ev = hidden unnamed_addr alias void (%"class.blink::WebProcessMemoryDump"*), void (%"class.blink::WebProcessMemoryDump"*)* @_ZN5blink20WebProcessMemoryDumpD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20WebProcessMemoryDumpC2Ev(%"class.blink::WebProcessMemoryDump"* nocapture) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 88) #8
  %3 = bitcast i8* %2 to %"class.base::trace_event::ProcessMemoryDump"*
  tail call void @_ZN4base11trace_event17ProcessMemoryDumpC1ERKNS0_14MemoryDumpArgsE(%"class.base::trace_event::ProcessMemoryDump"* nonnull %3, %"struct.base::trace_event::MemoryDumpArgs"* nonnull dereferenceable(16) @.ref.tmp) #9
  %4 = ptrtoint i8* %2 to i64
  %5 = bitcast %"class.blink::WebProcessMemoryDump"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 1
  %7 = bitcast %"class.base::trace_event::ProcessMemoryDump"** %6 to i64*
  store i64 %4, i64* %7, align 8
  %8 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 2
  store i32 2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 4
  %10 = bitcast %"class.WTF::HashMap"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false) #9
  %11 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 5
  %12 = bitcast %"class.WTF::Vector"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #9
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare void @_ZN4base11trace_event17ProcessMemoryDumpC1ERKNS0_14MemoryDumpArgsE(%"class.base::trace_event::ProcessMemoryDump"*, %"struct.base::trace_event::MemoryDumpArgs"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20WebProcessMemoryDumpC2EN4base11trace_event23MemoryDumpLevelOfDetailEPNS2_17ProcessMemoryDumpE(%"class.blink::WebProcessMemoryDump"* nocapture, i32, %"class.base::trace_event::ProcessMemoryDump"*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::WebProcessMemoryDump"* %0 to i64*
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 1
  store %"class.base::trace_event::ProcessMemoryDump"* %2, %"class.base::trace_event::ProcessMemoryDump"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 2
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 4
  %8 = bitcast %"class.WTF::HashMap"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 20, i1 false) #9
  %9 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 5
  %10 = bitcast %"class.WTF::Vector"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20WebProcessMemoryDumpD2Ev(%"class.blink::WebProcessMemoryDump"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr.41"* %4, null
  br i1 %5, label %32, label %6, !prof !2

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr.41"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %30, label %11, !prof !3

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %4, i64 %12
  br label %14

14:                                               ; preds = %24, %11
  %15 = phi %"class.std::__1::unique_ptr.41"* [ %25, %24 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.skia::SkiaTraceMemoryDumpImpl"*, %"class.skia::SkiaTraceMemoryDumpImpl"** %16, align 8
  store %"class.skia::SkiaTraceMemoryDumpImpl"* null, %"class.skia::SkiaTraceMemoryDumpImpl"** %16, align 8
  %18 = icmp eq %"class.skia::SkiaTraceMemoryDumpImpl"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.skia::SkiaTraceMemoryDumpImpl"* %17 to void (%"class.skia::SkiaTraceMemoryDumpImpl"*)***
  %21 = load void (%"class.skia::SkiaTraceMemoryDumpImpl"*)**, void (%"class.skia::SkiaTraceMemoryDumpImpl"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.skia::SkiaTraceMemoryDumpImpl"*)*, void (%"class.skia::SkiaTraceMemoryDumpImpl"*)** %21, i64 8
  %23 = load void (%"class.skia::SkiaTraceMemoryDumpImpl"*)*, void (%"class.skia::SkiaTraceMemoryDumpImpl"*)** %22, align 8
  tail call void %23(%"class.skia::SkiaTraceMemoryDumpImpl"* nonnull %17) #9
  br label %24

24:                                               ; preds = %19, %14
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %15, i64 1
  %26 = icmp eq %"class.std::__1::unique_ptr.41"* %25, %13
  br i1 %26, label %27, label %14

27:                                               ; preds = %24
  store i32 0, i32* %8, align 4
  %28 = bitcast %"class.WTF::Vector"* %2 to i8**
  %29 = load i8*, i8** %28, align 8
  br label %30

30:                                               ; preds = %27, %6
  %31 = phi i8* [ %29, %27 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %31) #9
  store %"class.std::__1::unique_ptr.41"* null, %"class.std::__1::unique_ptr.41"** %3, align 8
  br label %32

32:                                               ; preds = %1, %30
  %33 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 4, i32 0, i32 0
  %34 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %33, align 8
  %35 = icmp eq %"struct.WTF::KeyValuePair"* %34, null
  br i1 %35, label %58, label %36, !prof !2

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 4, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %56, label %40

40:                                               ; preds = %36
  %41 = zext i32 %38 to i64
  br label %42

42:                                               ; preds = %53, %40
  %43 = phi i64 [ 0, %40 ], [ %54, %53 ]
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 %43, i32 0
  %45 = load %"class.base::trace_event::MemoryAllocatorDump"*, %"class.base::trace_event::MemoryAllocatorDump"** %44, align 8
  %46 = icmp eq %"class.base::trace_event::MemoryAllocatorDump"* %45, inttoptr (i64 -1 to %"class.base::trace_event::MemoryAllocatorDump"*)
  br i1 %46, label %53, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 %43, i32 1, i32 0, i32 0, i32 0
  %49 = load %"class.blink::WebMemoryAllocatorDump"*, %"class.blink::WebMemoryAllocatorDump"** %48, align 8
  store %"class.blink::WebMemoryAllocatorDump"* null, %"class.blink::WebMemoryAllocatorDump"** %48, align 8
  %50 = icmp eq %"class.blink::WebMemoryAllocatorDump"* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.blink::WebMemoryAllocatorDump"* %49 to i8*
  tail call void @free(i8* %52) #9
  br label %53

53:                                               ; preds = %51, %47, %42
  %54 = add nuw nsw i64 %43, 1
  %55 = icmp eq i64 %54, %41
  br i1 %55, label %56, label %42

56:                                               ; preds = %53, %36
  %57 = bitcast %"struct.WTF::KeyValuePair"* %34 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %57) #9
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %33, align 8
  br label %58

58:                                               ; preds = %32, %56
  %59 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::ProcessMemoryDump"** %59, align 8
  store %"class.base::trace_event::ProcessMemoryDump"* null, %"class.base::trace_event::ProcessMemoryDump"** %59, align 8
  %61 = icmp eq %"class.base::trace_event::ProcessMemoryDump"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %58
  tail call void @_ZN4base11trace_event17ProcessMemoryDumpD1Ev(%"class.base::trace_event::ProcessMemoryDump"* nonnull %60) #9
  %63 = bitcast %"class.base::trace_event::ProcessMemoryDump"* %60 to i8*
  tail call void @_ZdlPv(i8* %63) #8
  br label %64

64:                                               ; preds = %58, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WebMemoryAllocatorDump"* @_ZN5blink20WebProcessMemoryDump25CreateMemoryAllocatorDumpERKN3WTF6StringE(%"class.blink::WebProcessMemoryDump"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 1
  %5 = load %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::ProcessMemoryDump"** %4, align 8
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.WTF::String"* %1, i32 0) #9
  %7 = call %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"* %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #9
  %8 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %14) #8
  br label %15

15:                                               ; preds = %2, %12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  %16 = call %"class.blink::WebMemoryAllocatorDump"* @_ZN5blink20WebProcessMemoryDump28CreateWebMemoryAllocatorDumpEPN4base11trace_event19MemoryAllocatorDumpE(%"class.blink::WebProcessMemoryDump"* %0, %"class.base::trace_event::MemoryAllocatorDump"* %7)
  ret %"class.blink::WebMemoryAllocatorDump"* %16
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WebMemoryAllocatorDump"* @_ZN5blink20WebProcessMemoryDump28CreateWebMemoryAllocatorDumpEPN4base11trace_event19MemoryAllocatorDumpE(%"class.blink::WebProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDump"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::trace_event::MemoryAllocatorDump"*, align 8
  %4 = alloca %"class.std::__1::unique_ptr.35", align 8
  store %"class.base::trace_event::MemoryAllocatorDump"* %1, %"class.base::trace_event::MemoryAllocatorDump"** %3, align 8
  %5 = icmp eq %"class.base::trace_event::MemoryAllocatorDump"* %1, null
  br i1 %5, label %34, label %6

6:                                                ; preds = %2
  %7 = tail call noalias i8* @malloc(i64 16) #9
  %8 = bitcast i8* %7 to %"class.blink::WebMemoryAllocatorDump"*
  tail call void @_ZN5blink22WebMemoryAllocatorDumpC1EPN4base11trace_event19MemoryAllocatorDumpE(%"class.blink::WebMemoryAllocatorDump"* %8, %"class.base::trace_event::MemoryAllocatorDump"* nonnull %1) #9
  %9 = bitcast %"class.std::__1::unique_ptr.35"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %4, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.std::__1::unique_ptr.35"* %4 to i8**
  store i8* %7, i8** %11, align 8
  %12 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 4, i32 0
  %13 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPN4base11trace_event19MemoryAllocatorDumpENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink22WebMemoryAllocatorDumpENS6_14default_deleteIS9_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISL_SG_SM_EERS4_SC_EENS_18HashTableAddResultISN_SD_EEOT0_OT1_(%"class.WTF::HashTable"* %12, %"class.base::trace_event::MemoryAllocatorDump"** nonnull dereferenceable(8) %3, %"class.std::__1::unique_ptr.35"* nonnull dereferenceable(8) %4) #9
  %14 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %13, 1
  %15 = and i8 %14, 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %28

17:                                               ; preds = %6
  %18 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %13, 0
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 0, i32 1
  %20 = bitcast %"class.std::__1::unique_ptr.35"* %4 to i64*
  %21 = load i64, i64* %20, align 8
  store %"class.blink::WebMemoryAllocatorDump"* null, %"class.blink::WebMemoryAllocatorDump"** %10, align 8
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %19, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::WebMemoryAllocatorDump"*, %"class.blink::WebMemoryAllocatorDump"** %22, align 8
  %24 = bitcast %"class.std::__1::unique_ptr.35"* %19 to i64*
  store i64 %21, i64* %24, align 8
  %25 = icmp eq %"class.blink::WebMemoryAllocatorDump"* %23, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %17
  %27 = bitcast %"class.blink::WebMemoryAllocatorDump"* %23 to i8*
  call void @free(i8* %27) #9
  br label %28

28:                                               ; preds = %6, %17, %26
  %29 = load %"class.blink::WebMemoryAllocatorDump"*, %"class.blink::WebMemoryAllocatorDump"** %10, align 8
  store %"class.blink::WebMemoryAllocatorDump"* null, %"class.blink::WebMemoryAllocatorDump"** %10, align 8
  %30 = icmp eq %"class.blink::WebMemoryAllocatorDump"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %28
  %32 = bitcast %"class.blink::WebMemoryAllocatorDump"* %29 to i8*
  call void @free(i8* %32) #9
  br label %33

33:                                               ; preds = %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  br label %34

34:                                               ; preds = %2, %33
  %35 = phi %"class.blink::WebMemoryAllocatorDump"* [ %8, %33 ], [ null, %2 ]
  ret %"class.blink::WebMemoryAllocatorDump"* %35
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WebMemoryAllocatorDump"* @_ZN5blink20WebProcessMemoryDump25CreateMemoryAllocatorDumpERKN3WTF6StringEm(%"class.blink::WebProcessMemoryDump"*, %"class.WTF::String"* dereferenceable(8), i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::trace_event::MemoryAllocatorDumpGuid", align 8
  %6 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 1
  %7 = load %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::ProcessMemoryDump"** %6, align 8
  %8 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* %1, i32 0) #9
  %9 = bitcast %"class.base::trace_event::MemoryAllocatorDumpGuid"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  call void @_ZN4base11trace_event23MemoryAllocatorDumpGuidC1Em(%"class.base::trace_event::MemoryAllocatorDumpGuid"* nonnull %5, i64 %2) #9
  %10 = call %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS0_23MemoryAllocatorDumpGuidE(%"class.base::trace_event::ProcessMemoryDump"* %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.base::trace_event::MemoryAllocatorDumpGuid"* nonnull dereferenceable(8) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %11 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %17) #8
  br label %18

18:                                               ; preds = %3, %15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9
  %19 = call %"class.blink::WebMemoryAllocatorDump"* @_ZN5blink20WebProcessMemoryDump28CreateWebMemoryAllocatorDumpEPN4base11trace_event19MemoryAllocatorDumpE(%"class.blink::WebProcessMemoryDump"* %0, %"class.base::trace_event::MemoryAllocatorDump"* %10)
  ret %"class.blink::WebMemoryAllocatorDump"* %19
}

declare %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS0_23MemoryAllocatorDumpGuidE(%"class.base::trace_event::ProcessMemoryDump"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN4base11trace_event23MemoryAllocatorDumpGuidC1Em(%"class.base::trace_event::MemoryAllocatorDumpGuid"*, i64) unnamed_addr #2

declare void @_ZN5blink22WebMemoryAllocatorDumpC1EPN4base11trace_event19MemoryAllocatorDumpE(%"class.blink::WebMemoryAllocatorDump"*, %"class.base::trace_event::MemoryAllocatorDump"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WebMemoryAllocatorDump"* @_ZNK5blink20WebProcessMemoryDump22GetMemoryAllocatorDumpERKN3WTF6StringE(%"class.blink::WebProcessMemoryDump"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 1
  %5 = load %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::ProcessMemoryDump"** %4, align 8
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.WTF::String"* %1, i32 0) #9
  %7 = call %"class.base::trace_event::MemoryAllocatorDump"* @_ZNK4base11trace_event17ProcessMemoryDump16GetAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"* %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #9
  %8 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %14) #8
  br label %15

15:                                               ; preds = %2, %12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  %16 = ptrtoint %"class.base::trace_event::MemoryAllocatorDump"* %7 to i64
  %17 = icmp eq %"class.base::trace_event::MemoryAllocatorDump"* %7, null
  br i1 %17, label %86, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 4, i32 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  %21 = icmp eq %"struct.WTF::KeyValuePair"* %20, null
  br i1 %21, label %86, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 4, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = add i32 %24, -1
  %26 = zext i32 %25 to i64
  %27 = shl i64 %16, 32
  %28 = xor i64 %27, -1
  %29 = add i64 %28, %16
  %30 = lshr i64 %29, 22
  %31 = xor i64 %30, %29
  %32 = shl i64 %31, 13
  %33 = xor i64 %32, -1
  %34 = add i64 %31, %33
  %35 = lshr i64 %34, 8
  %36 = xor i64 %35, %34
  %37 = mul i64 %36, 9
  %38 = lshr i64 %37, 15
  %39 = xor i64 %38, %37
  %40 = shl i64 %39, 27
  %41 = xor i64 %40, -1
  %42 = add i64 %39, %41
  %43 = lshr i64 %42, 31
  %44 = xor i64 %43, %42
  %45 = trunc i64 %44 to i32
  %46 = and i32 %25, %45
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 %47
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %48, i64 0, i32 0
  %50 = load %"class.base::trace_event::MemoryAllocatorDump"*, %"class.base::trace_event::MemoryAllocatorDump"** %49, align 8
  %51 = icmp eq %"class.base::trace_event::MemoryAllocatorDump"* %50, %7
  br i1 %51, label %80, label %52

52:                                               ; preds = %22
  %53 = xor i32 %45, -1
  %54 = lshr i32 %45, 23
  %55 = add i32 %54, %53
  %56 = shl i32 %55, 12
  %57 = xor i32 %56, %55
  %58 = lshr i32 %57, 7
  %59 = xor i32 %58, %57
  %60 = shl i32 %59, 2
  %61 = xor i32 %60, %59
  %62 = lshr i32 %61, 20
  %63 = xor i32 %62, %61
  %64 = or i32 %63, 1
  %65 = zext i32 %64 to i64
  br label %66

66:                                               ; preds = %71, %52
  %67 = phi %"class.base::trace_event::MemoryAllocatorDump"* [ %50, %52 ], [ %78, %71 ]
  %68 = phi i64 [ %47, %52 ], [ %75, %71 ]
  %69 = phi i64 [ 0, %52 ], [ %73, %71 ]
  %70 = icmp eq %"class.base::trace_event::MemoryAllocatorDump"* %67, null
  br i1 %70, label %86, label %71

71:                                               ; preds = %66
  %72 = icmp eq i64 %69, 0
  %73 = select i1 %72, i64 %65, i64 %69
  %74 = add i64 %73, %68
  %75 = and i64 %74, %26
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 %75
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %76, i64 0, i32 0
  %78 = load %"class.base::trace_event::MemoryAllocatorDump"*, %"class.base::trace_event::MemoryAllocatorDump"** %77, align 8
  %79 = icmp eq %"class.base::trace_event::MemoryAllocatorDump"* %78, %7
  br i1 %79, label %80, label %66

80:                                               ; preds = %71, %22
  %81 = phi %"struct.WTF::KeyValuePair"* [ %48, %22 ], [ %76, %71 ]
  %82 = icmp eq %"struct.WTF::KeyValuePair"* %81, null
  br i1 %82, label %86, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 1, i32 0, i32 0, i32 0
  %85 = load %"class.blink::WebMemoryAllocatorDump"*, %"class.blink::WebMemoryAllocatorDump"** %84, align 8
  br label %86

86:                                               ; preds = %66, %18, %83, %80, %15
  %87 = phi %"class.blink::WebMemoryAllocatorDump"* [ null, %15 ], [ %85, %83 ], [ null, %80 ], [ null, %18 ], [ null, %66 ]
  ret %"class.blink::WebMemoryAllocatorDump"* %87
}

declare %"class.base::trace_event::MemoryAllocatorDump"* @_ZNK4base11trace_event17ProcessMemoryDump16GetAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20WebProcessMemoryDump5ClearEv(%"class.blink::WebProcessMemoryDump"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %30, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 4, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %26, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %23, %10
  %13 = phi i64 [ 0, %10 ], [ %24, %23 ]
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13, i32 0
  %15 = load %"class.base::trace_event::MemoryAllocatorDump"*, %"class.base::trace_event::MemoryAllocatorDump"** %14, align 8
  %16 = icmp eq %"class.base::trace_event::MemoryAllocatorDump"* %15, inttoptr (i64 -1 to %"class.base::trace_event::MemoryAllocatorDump"*)
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.blink::WebMemoryAllocatorDump"*, %"class.blink::WebMemoryAllocatorDump"** %18, align 8
  store %"class.blink::WebMemoryAllocatorDump"* null, %"class.blink::WebMemoryAllocatorDump"** %18, align 8
  %20 = icmp eq %"class.blink::WebMemoryAllocatorDump"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.blink::WebMemoryAllocatorDump"* %19 to i8*
  tail call void @free(i8* %22) #9
  br label %23

23:                                               ; preds = %21, %17, %12
  %24 = add nuw nsw i64 %13, 1
  %25 = icmp eq i64 %24, %11
  br i1 %25, label %26, label %12

26:                                               ; preds = %23, %6
  %27 = bitcast %"struct.WTF::KeyValuePair"* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %27) #9
  %28 = bitcast %"class.WTF::HashMap"* %2 to i64*
  store atomic i64 0, i64* %28 monotonic, align 8
  store i32 0, i32* %7, align 8
  %29 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 4, i32 0, i32 2
  store i32 0, i32* %29, align 4
  br label %30

30:                                               ; preds = %1, %26
  %31 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 1
  %32 = load %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::ProcessMemoryDump"** %31, align 8
  tail call void @_ZN4base11trace_event17ProcessMemoryDump5ClearEv(%"class.base::trace_event::ProcessMemoryDump"* %32) #9
  ret void
}

declare void @_ZN4base11trace_event17ProcessMemoryDump5ClearEv(%"class.base::trace_event::ProcessMemoryDump"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20WebProcessMemoryDump16TakeAllDumpsFromEPS0_(%"class.blink::WebProcessMemoryDump"*, %"class.blink::WebProcessMemoryDump"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::trace_event::MemoryAllocatorDump"*, align 8
  %4 = alloca %"class.std::__1::unique_ptr.35", align 8
  %5 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 1
  %6 = load %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::ProcessMemoryDump"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %1, i64 0, i32 1
  %8 = load %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::ProcessMemoryDump"** %7, align 8
  tail call void @_ZN4base11trace_event17ProcessMemoryDump16TakeAllDumpsFromEPS1_(%"class.base::trace_event::ProcessMemoryDump"* %6, %"class.base::trace_event::ProcessMemoryDump"* %8) #9
  %9 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %1, i64 0, i32 4
  %10 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %1, i64 0, i32 4, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %62, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %9, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %1, i64 0, i32 4, i32 0, i32 1
  %16 = bitcast %"class.base::trace_event::MemoryAllocatorDump"** %3 to i8*
  %17 = bitcast %"class.base::trace_event::MemoryAllocatorDump"** %3 to i64*
  %18 = bitcast %"class.std::__1::unique_ptr.35"* %4 to i8*
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %4, i64 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 4, i32 0
  %21 = bitcast %"class.std::__1::unique_ptr.35"* %4 to i64*
  br label %22

22:                                               ; preds = %13, %59
  %23 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %14, align 8
  %24 = load i32, i32* %15, align 8
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 %25
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %35, label %28

28:                                               ; preds = %22, %32
  %29 = phi %"struct.WTF::KeyValuePair"* [ %33, %32 ], [ %23, %22 ]
  %30 = bitcast %"struct.WTF::KeyValuePair"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  switch i64 %31, label %35 [
    i64 -1, label %32
    i64 0, label %32
  ]

32:                                               ; preds = %28, %28
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %29, i64 1
  %34 = icmp eq %"struct.WTF::KeyValuePair"* %33, %26
  br i1 %34, label %35, label %28

35:                                               ; preds = %28, %32, %22
  %36 = phi %"struct.WTF::KeyValuePair"* [ %23, %22 ], [ %29, %28 ], [ %26, %32 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  store %"class.base::trace_event::MemoryAllocatorDump"* inttoptr (i64 -6148914691236517206 to %"class.base::trace_event::MemoryAllocatorDump"*), %"class.base::trace_event::MemoryAllocatorDump"** %3, align 8
  %37 = bitcast %"struct.WTF::KeyValuePair"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %39 = call %"class.blink::WebMemoryAllocatorDump"* @_ZN3WTF7HashMapIPN4base11trace_event19MemoryAllocatorDumpENSt3__110unique_ptrIN5blink22WebMemoryAllocatorDumpENS5_14default_deleteIS8_EEEENS_7PtrHashIS3_EENS_10HashTraitsIS4_EENSE_ISB_EENS_18PartitionAllocatorEE4TakeERKS4_(%"class.WTF::HashMap"* %9, %"class.base::trace_event::MemoryAllocatorDump"** nonnull dereferenceable(8) %3)
  store %"class.blink::WebMemoryAllocatorDump"* %39, %"class.blink::WebMemoryAllocatorDump"** %19, align 8
  %40 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPN4base11trace_event19MemoryAllocatorDumpENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink22WebMemoryAllocatorDumpENS6_14default_deleteIS9_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISL_SG_SM_EERS4_SC_EENS_18HashTableAddResultISN_SD_EEOT0_OT1_(%"class.WTF::HashTable"* %20, %"class.base::trace_event::MemoryAllocatorDump"** nonnull dereferenceable(8) %3, %"class.std::__1::unique_ptr.35"* nonnull dereferenceable(8) %4) #9
  %41 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %40, 1
  %42 = and i8 %41, 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %54

44:                                               ; preds = %35
  %45 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %40, 0
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 1
  %47 = load i64, i64* %21, align 8
  store %"class.blink::WebMemoryAllocatorDump"* null, %"class.blink::WebMemoryAllocatorDump"** %19, align 8
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %46, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::WebMemoryAllocatorDump"*, %"class.blink::WebMemoryAllocatorDump"** %48, align 8
  %50 = bitcast %"class.std::__1::unique_ptr.35"* %46 to i64*
  store i64 %47, i64* %50, align 8
  %51 = icmp eq %"class.blink::WebMemoryAllocatorDump"* %49, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %44
  %53 = bitcast %"class.blink::WebMemoryAllocatorDump"* %49 to i8*
  call void @free(i8* %53) #9
  br label %54

54:                                               ; preds = %35, %44, %52
  %55 = load %"class.blink::WebMemoryAllocatorDump"*, %"class.blink::WebMemoryAllocatorDump"** %19, align 8
  store %"class.blink::WebMemoryAllocatorDump"* null, %"class.blink::WebMemoryAllocatorDump"** %19, align 8
  %56 = icmp eq %"class.blink::WebMemoryAllocatorDump"* %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %54
  %58 = bitcast %"class.blink::WebMemoryAllocatorDump"* %55 to i8*
  call void @free(i8* %58) #9
  br label %59

59:                                               ; preds = %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  %60 = load i32, i32* %10, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %22

62:                                               ; preds = %59, %2
  ret void
}

declare void @_ZN4base11trace_event17ProcessMemoryDump16TakeAllDumpsFromEPS1_(%"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::ProcessMemoryDump"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WebMemoryAllocatorDump"* @_ZN3WTF7HashMapIPN4base11trace_event19MemoryAllocatorDumpENSt3__110unique_ptrIN5blink22WebMemoryAllocatorDumpENS5_14default_deleteIS8_EEEENS_7PtrHashIS3_EENS_10HashTraitsIS4_EENSE_ISB_EENS_18PartitionAllocatorEE4TakeERKS4_(%"class.WTF::HashMap"*, %"class.base::trace_event::MemoryAllocatorDump"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIPN4base11trace_event19MemoryAllocatorDumpENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink22WebMemoryAllocatorDumpENS6_14default_deleteIS9_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable"* %3, %"class.base::trace_event::MemoryAllocatorDump"** dereferenceable(8) %1) #9
  %5 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %4, 0
  %6 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 %10
  %12 = icmp eq %"struct.WTF::KeyValuePair"* %5, %11
  br i1 %12, label %47, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.35"* %14 to i64*
  %17 = load i64, i64* %16, align 8
  store %"class.blink::WebMemoryAllocatorDump"* null, %"class.blink::WebMemoryAllocatorDump"** %15, align 8
  %18 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %19 = load i32, i32* %8, align 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 %20
  %22 = icmp eq %"struct.WTF::KeyValuePair"* %21, %5
  br i1 %22, label %47, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.blink::WebMemoryAllocatorDump"* null, %"class.blink::WebMemoryAllocatorDump"** %24, align 8
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 0
  store %"class.base::trace_event::MemoryAllocatorDump"* inttoptr (i64 -1 to %"class.base::trace_event::MemoryAllocatorDump"*), %"class.base::trace_event::MemoryAllocatorDump"** %25, align 8
  %26 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 3
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  %29 = and i32 %28, 2147483647
  %30 = and i32 %27, -2147483648
  %31 = or i32 %29, %30
  store i32 %31, i32* %26, align 8
  %32 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = add i32 %33, -1
  store i32 %34, i32* %32, align 4
  %35 = mul i32 %34, 6
  %36 = load i32, i32* %8, align 8
  %37 = icmp ult i32 %35, %36
  %38 = icmp ugt i32 %36, 8
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47

40:                                               ; preds = %23
  %41 = lshr i32 %36, 1
  %42 = zext i32 %41 to i64
  %43 = shl nuw nsw i64 %42, 4
  %44 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %43, i8* getelementptr inbounds ([219 x i8], [219 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN4base11trace_event19MemoryAllocatorDumpENSt3__110unique_ptrIN5blink22WebMemoryAllocatorDumpENS6_14default_deleteIS9_EEEEEEEEPKcv, i64 0, i64 0)) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %43, i1 false) #9
  %45 = bitcast i8* %44 to %"struct.WTF::KeyValuePair"*
  %46 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPN4base11trace_event19MemoryAllocatorDumpENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink22WebMemoryAllocatorDumpENS6_14default_deleteIS9_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE8RehashToEPSD_jSO_(%"class.WTF::HashTable"* %3, %"struct.WTF::KeyValuePair"* %45, i32 %41, %"struct.WTF::KeyValuePair"* null) #9
  br label %47

47:                                               ; preds = %13, %23, %40, %2
  %48 = phi i64 [ 0, %2 ], [ %17, %40 ], [ %17, %23 ], [ %17, %13 ]
  %49 = inttoptr i64 %48 to %"class.blink::WebMemoryAllocatorDump"*
  ret %"class.blink::WebMemoryAllocatorDump"* %49
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20WebProcessMemoryDump16AddOwnershipEdgeEmmi(%"class.blink::WebProcessMemoryDump"* nocapture readonly, i64, i64, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::trace_event::MemoryAllocatorDumpGuid", align 8
  %6 = alloca %"class.base::trace_event::MemoryAllocatorDumpGuid", align 8
  %7 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 1
  %8 = load %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::ProcessMemoryDump"** %7, align 8
  %9 = bitcast %"class.base::trace_event::MemoryAllocatorDumpGuid"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  call void @_ZN4base11trace_event23MemoryAllocatorDumpGuidC1Em(%"class.base::trace_event::MemoryAllocatorDumpGuid"* nonnull %5, i64 %1) #9
  %10 = bitcast %"class.base::trace_event::MemoryAllocatorDumpGuid"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  call void @_ZN4base11trace_event23MemoryAllocatorDumpGuidC1Em(%"class.base::trace_event::MemoryAllocatorDumpGuid"* nonnull %6, i64 %2) #9
  call void @_ZN4base11trace_event17ProcessMemoryDump16AddOwnershipEdgeERKNS0_23MemoryAllocatorDumpGuidES4_i(%"class.base::trace_event::ProcessMemoryDump"* %8, %"class.base::trace_event::MemoryAllocatorDumpGuid"* nonnull dereferenceable(8) %5, %"class.base::trace_event::MemoryAllocatorDumpGuid"* nonnull dereferenceable(8) %6, i32 %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  ret void
}

declare void @_ZN4base11trace_event17ProcessMemoryDump16AddOwnershipEdgeERKNS0_23MemoryAllocatorDumpGuidES4_i(%"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8), %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20WebProcessMemoryDump16AddOwnershipEdgeEmm(%"class.blink::WebProcessMemoryDump"* nocapture readonly, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::trace_event::MemoryAllocatorDumpGuid", align 8
  %5 = alloca %"class.base::trace_event::MemoryAllocatorDumpGuid", align 8
  %6 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 1
  %7 = load %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::ProcessMemoryDump"** %6, align 8
  %8 = bitcast %"class.base::trace_event::MemoryAllocatorDumpGuid"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  call void @_ZN4base11trace_event23MemoryAllocatorDumpGuidC1Em(%"class.base::trace_event::MemoryAllocatorDumpGuid"* nonnull %4, i64 %1) #9
  %9 = bitcast %"class.base::trace_event::MemoryAllocatorDumpGuid"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  call void @_ZN4base11trace_event23MemoryAllocatorDumpGuidC1Em(%"class.base::trace_event::MemoryAllocatorDumpGuid"* nonnull %5, i64 %2) #9
  call void @_ZN4base11trace_event17ProcessMemoryDump16AddOwnershipEdgeERKNS0_23MemoryAllocatorDumpGuidES4_(%"class.base::trace_event::ProcessMemoryDump"* %7, %"class.base::trace_event::MemoryAllocatorDumpGuid"* nonnull dereferenceable(8) %4, %"class.base::trace_event::MemoryAllocatorDumpGuid"* nonnull dereferenceable(8) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  ret void
}

declare void @_ZN4base11trace_event17ProcessMemoryDump16AddOwnershipEdgeERKNS0_23MemoryAllocatorDumpGuidES4_(%"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8), %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20WebProcessMemoryDump16AddSuballocationEmRKN3WTF6StringE(%"class.blink::WebProcessMemoryDump"* nocapture readonly, i64, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::trace_event::MemoryAllocatorDumpGuid", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 1
  %7 = load %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::ProcessMemoryDump"** %6, align 8
  %8 = bitcast %"class.base::trace_event::MemoryAllocatorDumpGuid"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  call void @_ZN4base11trace_event23MemoryAllocatorDumpGuidC1Em(%"class.base::trace_event::MemoryAllocatorDumpGuid"* nonnull %4, i64 %1) #9
  %9 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #9
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.WTF::String"* %2, i32 0) #9
  call void @_ZN4base11trace_event17ProcessMemoryDump16AddSuballocationERKNS0_23MemoryAllocatorDumpGuidERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"* %7, %"class.base::trace_event::MemoryAllocatorDumpGuid"* nonnull dereferenceable(8) %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #9
  %10 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %16) #8
  br label %17

17:                                               ; preds = %3, %14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  ret void
}

declare void @_ZN4base11trace_event17ProcessMemoryDump16AddSuballocationERKNS0_23MemoryAllocatorDumpGuidERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkTraceMemoryDump* @_ZN5blink20WebProcessMemoryDump24CreateDumpAdapterForSkiaERKN3WTF6StringE(%"class.blink::WebProcessMemoryDump"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.41", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 5
  %6 = bitcast %"class.std::__1::unique_ptr.41"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* %1, i32 0) #9
  %8 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 1
  %10 = call i8* @_Znwm(i64 48) #8
  %11 = bitcast i8* %10 to %"class.skia::SkiaTraceMemoryDumpImpl"*
  %12 = load i32, i32* %8, align 4
  %13 = load %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::ProcessMemoryDump"** %9, align 8
  call void @_ZN4skia23SkiaTraceMemoryDumpImplC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base11trace_event23MemoryDumpLevelOfDetailEPNSB_17ProcessMemoryDumpE(%"class.skia::SkiaTraceMemoryDumpImpl"* nonnull %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i32 %12, %"class.base::trace_event::ProcessMemoryDump"* %13) #9
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %3, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.std::__1::unique_ptr.41"* %3 to i8**
  store i8* %10, i8** %15, align 8
  %16 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %30, label %21, !prof !3

21:                                               ; preds = %2
  %22 = ptrtoint i8* %10 to i64
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %23, align 8
  %25 = zext i32 %17 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %24, i64 %25
  store %"class.skia::SkiaTraceMemoryDumpImpl"* null, %"class.skia::SkiaTraceMemoryDumpImpl"** %14, align 8
  %27 = bitcast %"class.std::__1::unique_ptr.41"* %26 to i64*
  store i64 %22, i64* %27, align 8
  %28 = load i32, i32* %16, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %16, align 4
  br label %31

30:                                               ; preds = %2
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN4skia23SkiaTraceMemoryDumpImplENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector"* %5, %"class.std::__1::unique_ptr.41"* nonnull dereferenceable(8) %3) #9
  br label %31

31:                                               ; preds = %21, %30
  %32 = load %"class.skia::SkiaTraceMemoryDumpImpl"*, %"class.skia::SkiaTraceMemoryDumpImpl"** %14, align 8
  store %"class.skia::SkiaTraceMemoryDumpImpl"* null, %"class.skia::SkiaTraceMemoryDumpImpl"** %14, align 8
  %33 = icmp eq %"class.skia::SkiaTraceMemoryDumpImpl"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %31
  %35 = bitcast %"class.skia::SkiaTraceMemoryDumpImpl"* %32 to void (%"class.skia::SkiaTraceMemoryDumpImpl"*)***
  %36 = load void (%"class.skia::SkiaTraceMemoryDumpImpl"*)**, void (%"class.skia::SkiaTraceMemoryDumpImpl"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.skia::SkiaTraceMemoryDumpImpl"*)*, void (%"class.skia::SkiaTraceMemoryDumpImpl"*)** %36, i64 8
  %38 = load void (%"class.skia::SkiaTraceMemoryDumpImpl"*)*, void (%"class.skia::SkiaTraceMemoryDumpImpl"*)** %37, align 8
  call void %38(%"class.skia::SkiaTraceMemoryDumpImpl"* nonnull %32) #9
  br label %39

39:                                               ; preds = %31, %34
  %40 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %46) #8
  br label %47

47:                                               ; preds = %39, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %48 = load i32, i32* %16, align 4
  %49 = add i32 %48, -1
  %50 = call dereferenceable(8) %"class.std::__1::unique_ptr.41"* @_ZN3WTF6VectorINSt3__110unique_ptrIN4skia23SkiaTraceMemoryDumpImplENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %5, i32 %49) #9
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.skia::SkiaTraceMemoryDumpImpl"*, %"class.skia::SkiaTraceMemoryDumpImpl"** %51, align 8
  %53 = getelementptr inbounds %"class.skia::SkiaTraceMemoryDumpImpl", %"class.skia::SkiaTraceMemoryDumpImpl"* %52, i64 0, i32 0
  ret %class.SkTraceMemoryDump* %53
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WebMemoryAllocatorDump"* @_ZN5blink20WebProcessMemoryDump36CreateDiscardableMemoryAllocatorDumpERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPN4base17DiscardableMemoryE(%"class.blink::WebProcessMemoryDump"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::DiscardableMemory"*) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %11 = select i1 %7, i8* %9, i8* %10
  %12 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 1
  %13 = load %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::ProcessMemoryDump"** %12, align 8
  %14 = bitcast %"class.base::DiscardableMemory"* %2 to %"class.base::trace_event::MemoryAllocatorDump"* (%"class.base::DiscardableMemory"*, i8*, %"class.base::trace_event::ProcessMemoryDump"*)***
  %15 = load %"class.base::trace_event::MemoryAllocatorDump"* (%"class.base::DiscardableMemory"*, i8*, %"class.base::trace_event::ProcessMemoryDump"*)**, %"class.base::trace_event::MemoryAllocatorDump"* (%"class.base::DiscardableMemory"*, i8*, %"class.base::trace_event::ProcessMemoryDump"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::MemoryAllocatorDump"* (%"class.base::DiscardableMemory"*, i8*, %"class.base::trace_event::ProcessMemoryDump"*)*, %"class.base::trace_event::MemoryAllocatorDump"* (%"class.base::DiscardableMemory"*, i8*, %"class.base::trace_event::ProcessMemoryDump"*)** %15, i64 6
  %17 = load %"class.base::trace_event::MemoryAllocatorDump"* (%"class.base::DiscardableMemory"*, i8*, %"class.base::trace_event::ProcessMemoryDump"*)*, %"class.base::trace_event::MemoryAllocatorDump"* (%"class.base::DiscardableMemory"*, i8*, %"class.base::trace_event::ProcessMemoryDump"*)** %16, align 8
  %18 = tail call %"class.base::trace_event::MemoryAllocatorDump"* %17(%"class.base::DiscardableMemory"* %2, i8* %11, %"class.base::trace_event::ProcessMemoryDump"* %13) #9
  %19 = tail call %"class.blink::WebMemoryAllocatorDump"* @_ZN5blink20WebProcessMemoryDump28CreateWebMemoryAllocatorDumpEPN4base11trace_event19MemoryAllocatorDumpE(%"class.blink::WebProcessMemoryDump"* %0, %"class.base::trace_event::MemoryAllocatorDump"* %18)
  ret %"class.blink::WebMemoryAllocatorDump"* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20WebProcessMemoryDump13DumpHeapUsageERKNSt3__113unordered_mapIN4base11trace_event17AllocationContextENS4_17AllocationMetricsENS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_S6_EEEEEERNS4_24TraceEventMemoryOverheadEPKc(%"class.blink::WebProcessMemoryDump"* nocapture readonly, %"class.std::__1::unordered_map"*, %"class.base::trace_event::TraceEventMemoryOverhead"* dereferenceable(336), i8*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::WebProcessMemoryDump", %"class.blink::WebProcessMemoryDump"* %0, i64 0, i32 1
  %6 = load %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::ProcessMemoryDump"** %5, align 8
  tail call void @_ZN4base11trace_event17ProcessMemoryDump13DumpHeapUsageERKNSt3__113unordered_mapINS0_17AllocationContextENS0_17AllocationMetricsENS2_4hashIS4_EENS2_8equal_toIS4_EENS2_9allocatorINS2_4pairIKS4_S5_EEEEEERNS0_24TraceEventMemoryOverheadEPKc(%"class.base::trace_event::ProcessMemoryDump"* %6, %"class.std::__1::unordered_map"* %1, %"class.base::trace_event::TraceEventMemoryOverhead"* dereferenceable(336) %2, i8* %3) #9
  ret void
}

declare void @_ZN4base11trace_event17ProcessMemoryDump13DumpHeapUsageERKNSt3__113unordered_mapINS0_17AllocationContextENS0_17AllocationMetricsENS2_4hashIS4_EENS2_8equal_toIS4_EENS2_9allocatorINS2_4pairIKS4_S5_EEEEEERNS0_24TraceEventMemoryOverheadEPKc(%"class.base::trace_event::ProcessMemoryDump"*, %"class.std::__1::unordered_map"*, %"class.base::trace_event::TraceEventMemoryOverhead"* dereferenceable(336), i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base11trace_event17ProcessMemoryDumpD1Ev(%"class.base::trace_event::ProcessMemoryDump"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPN4base11trace_event19MemoryAllocatorDumpENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink22WebMemoryAllocatorDumpENS6_14default_deleteIS9_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISL_SG_SM_EERS4_SC_EENS_18HashTableAddResultISN_SD_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.base::trace_event::MemoryAllocatorDump"** dereferenceable(8), %"class.std::__1::unique_ptr.35"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPN4base11trace_event19MemoryAllocatorDumpENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink22WebMemoryAllocatorDumpENS6_14default_deleteIS9_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE6ExpandEPSD_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.base::trace_event::MemoryAllocatorDump"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 0, i32 0
  %41 = load %"class.base::trace_event::MemoryAllocatorDump"*, %"class.base::trace_event::MemoryAllocatorDump"** %40, align 8
  %42 = icmp eq %"class.base::trace_event::MemoryAllocatorDump"* %41, null
  %43 = inttoptr i64 %17 to %"class.base::trace_event::MemoryAllocatorDump"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.base::trace_event::MemoryAllocatorDump"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.base::trace_event::MemoryAllocatorDump"* %59, %43
  br i1 %64, label %113, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.base::trace_event::MemoryAllocatorDump"* %59, inttoptr (i64 -1 to %"class.base::trace_event::MemoryAllocatorDump"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair"* %60, %"struct.WTF::KeyValuePair"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 0, i32 0
  %74 = load %"class.base::trace_event::MemoryAllocatorDump"*, %"class.base::trace_event::MemoryAllocatorDump"** %73, align 8
  %75 = icmp eq %"class.base::trace_event::MemoryAllocatorDump"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 16, i1 false) #9
  %80 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair"* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %89, i64 0, i32 1
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %2, i64 0, i32 0, i32 0, i32 0
  %93 = bitcast %"class.std::__1::unique_ptr.35"* %2 to i64*
  %94 = load i64, i64* %93, align 8
  store %"class.blink::WebMemoryAllocatorDump"* null, %"class.blink::WebMemoryAllocatorDump"** %92, align 8
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %91, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.blink::WebMemoryAllocatorDump"*, %"class.blink::WebMemoryAllocatorDump"** %95, align 8
  %97 = bitcast %"class.std::__1::unique_ptr.35"* %91 to i64*
  store i64 %94, i64* %97, align 8
  %98 = icmp eq %"class.blink::WebMemoryAllocatorDump"* %96, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %87
  %100 = bitcast %"class.blink::WebMemoryAllocatorDump"* %96 to i8*
  tail call void @free(i8* %100) #9
  br label %101

101:                                              ; preds = %87, %99
  %102 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = add i32 %103, 1
  store i32 %104, i32* %102, align 4
  %105 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %106 = load i32, i32* %105, align 8
  %107 = add i32 %106, %104
  %108 = shl i32 %107, 1
  %109 = load i32, i32* %12, align 8
  %110 = icmp ult i32 %108, %109
  br i1 %110, label %113, label %111

111:                                              ; preds = %101
  %112 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPN4base11trace_event19MemoryAllocatorDumpENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink22WebMemoryAllocatorDumpENS6_14default_deleteIS9_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE6ExpandEPSD_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %89)
  br label %113

113:                                              ; preds = %58, %101, %111
  %114 = phi i8 [ 1, %101 ], [ 1, %111 ], [ 0, %58 ]
  %115 = phi %"struct.WTF::KeyValuePair"* [ %89, %101 ], [ %112, %111 ], [ %60, %58 ]
  %116 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %115, 0
  %117 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %116, i8 %114, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPN4base11trace_event19MemoryAllocatorDumpENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink22WebMemoryAllocatorDumpENS6_14default_deleteIS9_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE6ExpandEPSD_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #9
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %22, i8* %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([219 x i8], [219 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN4base11trace_event19MemoryAllocatorDumpENSt3__110unique_ptrIN5blink22WebMemoryAllocatorDumpENS6_14default_deleteIS9_EEEEEEEEPKcv, i64 0, i64 0)) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #9
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPN4base11trace_event19MemoryAllocatorDumpENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink22WebMemoryAllocatorDumpENS6_14default_deleteIS9_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE8RehashToEPSD_jSO_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #9
  ret %"struct.WTF::KeyValuePair"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPN4base11trace_event19MemoryAllocatorDumpENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink22WebMemoryAllocatorDumpENS6_14default_deleteIS9_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE8RehashToEPSD_jSO_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %61

24:                                               ; preds = %95
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %96, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %99, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %97, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %57, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %55, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %52, %39
  %42 = phi i64 [ 0, %39 ], [ %53, %52 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 0
  %44 = load %"class.base::trace_event::MemoryAllocatorDump"*, %"class.base::trace_event::MemoryAllocatorDump"** %43, align 8
  %45 = icmp eq %"class.base::trace_event::MemoryAllocatorDump"* %44, inttoptr (i64 -1 to %"class.base::trace_event::MemoryAllocatorDump"*)
  br i1 %45, label %52, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 1, i32 0, i32 0, i32 0
  %48 = load %"class.blink::WebMemoryAllocatorDump"*, %"class.blink::WebMemoryAllocatorDump"** %47, align 8
  store %"class.blink::WebMemoryAllocatorDump"* null, %"class.blink::WebMemoryAllocatorDump"** %47, align 8
  %49 = icmp eq %"class.blink::WebMemoryAllocatorDump"* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.blink::WebMemoryAllocatorDump"* %48 to i8*
  call void @free(i8* %51) #9
  br label %52

52:                                               ; preds = %50, %46, %41
  %53 = add nuw nsw i64 %42, 1
  %54 = icmp eq i64 %53, %40
  br i1 %54, label %55, label %41

55:                                               ; preds = %52, %37
  %56 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %56) #9
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %57

57:                                               ; preds = %28, %55
  %58 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, -2147483648
  store i32 %60, i32* %58, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret %"struct.WTF::KeyValuePair"* %33

61:                                               ; preds = %21, %95
  %62 = phi i64 [ %96, %95 ], [ %23, %21 ]
  %63 = phi i32 [ %97, %95 ], [ %13, %21 ]
  %64 = phi %"struct.WTF::KeyValuePair"* [ %98, %95 ], [ %22, %21 ]
  %65 = phi %"struct.WTF::KeyValuePair"* [ %99, %95 ], [ null, %21 ]
  %66 = phi i32 [ %100, %95 ], [ 0, %21 ]
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 %67
  %69 = bitcast %"struct.WTF::KeyValuePair"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  switch i64 %70, label %71 [
    i64 -1, label %95
    i64 0, label %95
  ]

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 0, i32 0
  %73 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPN4base11trace_event19MemoryAllocatorDumpENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink22WebMemoryAllocatorDumpENS6_14default_deleteIS9_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable"* nonnull %5, %"class.base::trace_event::MemoryAllocatorDump"** dereferenceable(8) %72) #9
  %74 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %73, 0
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %74, i64 0, i32 1, i32 0, i32 0, i32 0
  %76 = load %"class.blink::WebMemoryAllocatorDump"*, %"class.blink::WebMemoryAllocatorDump"** %75, align 8
  store %"class.blink::WebMemoryAllocatorDump"* null, %"class.blink::WebMemoryAllocatorDump"** %75, align 8
  %77 = icmp eq %"class.blink::WebMemoryAllocatorDump"* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %71
  %79 = bitcast %"class.blink::WebMemoryAllocatorDump"* %76 to i8*
  call void @free(i8* %79) #9
  br label %80

80:                                               ; preds = %71, %78
  %81 = load i64, i64* %69, align 8
  %82 = bitcast %"struct.WTF::KeyValuePair"* %74 to i64*
  store i64 %81, i64* %82, align 8
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %74, i64 0, i32 1
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 %67, i32 1
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = bitcast %"class.std::__1::unique_ptr.35"* %84 to i64*
  %87 = load i64, i64* %86, align 8
  store %"class.blink::WebMemoryAllocatorDump"* null, %"class.blink::WebMemoryAllocatorDump"** %85, align 8
  %88 = bitcast %"class.std::__1::unique_ptr.35"* %83 to i64*
  store i64 %87, i64* %88, align 8
  %89 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %89, i64 %67
  %91 = icmp eq %"struct.WTF::KeyValuePair"* %90, %3
  %92 = select i1 %91, %"struct.WTF::KeyValuePair"* %74, %"struct.WTF::KeyValuePair"* %65
  %93 = load i32, i32* %12, align 8
  %94 = ptrtoint %"struct.WTF::KeyValuePair"* %89 to i64
  br label %95

95:                                               ; preds = %61, %61, %80
  %96 = phi i64 [ %62, %61 ], [ %94, %80 ], [ %62, %61 ]
  %97 = phi i32 [ %63, %61 ], [ %93, %80 ], [ %63, %61 ]
  %98 = phi %"struct.WTF::KeyValuePair"* [ %64, %61 ], [ %89, %80 ], [ %64, %61 ]
  %99 = phi %"struct.WTF::KeyValuePair"* [ %65, %61 ], [ %92, %80 ], [ %65, %61 ]
  %100 = add i32 %66, 1
  %101 = icmp eq i32 %100, %97
  br i1 %101, label %24, label %61
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPN4base11trace_event19MemoryAllocatorDumpENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink22WebMemoryAllocatorDumpENS6_14default_deleteIS9_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable"*, %"class.base::trace_event::MemoryAllocatorDump"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.base::trace_event::MemoryAllocatorDump"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %35 = load %"class.base::trace_event::MemoryAllocatorDump"*, %"class.base::trace_event::MemoryAllocatorDump"** %34, align 8
  %36 = icmp eq %"class.base::trace_event::MemoryAllocatorDump"* %35, null
  %37 = inttoptr i64 %10 to %"class.base::trace_event::MemoryAllocatorDump"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.base::trace_event::MemoryAllocatorDump"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.base::trace_event::MemoryAllocatorDump"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.base::trace_event::MemoryAllocatorDump"* %63, inttoptr (i64 -1 to %"class.base::trace_event::MemoryAllocatorDump"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0
  %78 = load %"class.base::trace_event::MemoryAllocatorDump"*, %"class.base::trace_event::MemoryAllocatorDump"** %77, align 8
  %79 = icmp eq %"class.base::trace_event::MemoryAllocatorDump"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %85
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIPN4base11trace_event19MemoryAllocatorDumpENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink22WebMemoryAllocatorDumpENS6_14default_deleteIS9_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable"*, %"class.base::trace_event::MemoryAllocatorDump"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.base::trace_event::MemoryAllocatorDump"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 0, i32 0
  %36 = load %"class.base::trace_event::MemoryAllocatorDump"*, %"class.base::trace_event::MemoryAllocatorDump"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.base::trace_event::MemoryAllocatorDump"*
  %38 = icmp eq %"class.base::trace_event::MemoryAllocatorDump"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %8
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.base::trace_event::MemoryAllocatorDump"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.base::trace_event::MemoryAllocatorDump"* %54, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 0
  %65 = load %"class.base::trace_event::MemoryAllocatorDump"*, %"class.base::trace_event::MemoryAllocatorDump"** %64, align 8
  %66 = icmp eq %"class.base::trace_event::MemoryAllocatorDump"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %53, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79, %"struct.WTF::KeyValuePair"* %78, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %80
}

declare void @_ZN4skia23SkiaTraceMemoryDumpImplC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base11trace_event23MemoryDumpLevelOfDetailEPNSB_17ProcessMemoryDumpE(%"class.skia::SkiaTraceMemoryDumpImpl"*, %"class.std::__1::basic_string"* dereferenceable(24), i32, %"class.base::trace_event::ProcessMemoryDump"*) unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN4skia23SkiaTraceMemoryDumpImplENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector"*, %"class.std::__1::unique_ptr.41"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %6, align 8
  %8 = icmp ugt %"class.std::__1::unique_ptr.41"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %7, i64 %10
  %12 = icmp ugt %"class.std::__1::unique_ptr.41"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.std::__1::unique_ptr.41"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN4skia23SkiaTraceMemoryDumpImplENS2_14default_deleteIS5_EEEEEEmm(i64 %26) #9
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([157 x i8], [157 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN4skia23SkiaTraceMemoryDumpImplENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #9
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.std::__1::unique_ptr.41"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.std::__1::unique_ptr.41"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.std::__1::unique_ptr.41"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #9
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #9
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.std::__1::unique_ptr.41"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.std::__1::unique_ptr.41"* %1 to i64
  %56 = ptrtoint %"class.std::__1::unique_ptr.41"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.std::__1::unique_ptr.41"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN4skia23SkiaTraceMemoryDumpImplENS2_14default_deleteIS5_EEEEEEmm(i64 %71) #9
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([157 x i8], [157 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN4skia23SkiaTraceMemoryDumpImplENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #9
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.std::__1::unique_ptr.41"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.std::__1::unique_ptr.41"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #9
  %87 = bitcast %"class.WTF::Vector"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #9
  %91 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.std::__1::unique_ptr.41"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.std::__1::unique_ptr.41"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.std::__1::unique_ptr.41"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.std::__1::unique_ptr.41"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %100, i64 %103
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.41"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.skia::SkiaTraceMemoryDumpImpl"* null, %"class.skia::SkiaTraceMemoryDumpImpl"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.41"* %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN4skia23SkiaTraceMemoryDumpImplENS2_14default_deleteIS5_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr.41"* @_ZN3WTF6VectorINSt3__110unique_ptrIN4skia23SkiaTraceMemoryDumpImplENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %24, i64 %25
  ret %"class.std::__1::unique_ptr.41"* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
