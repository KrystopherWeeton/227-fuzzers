; ModuleID = '../../native_client/src/trusted/desc/nacl_desc_cond.c'
source_filename = "../../native_client/src/trusted/desc/nacl_desc_cond.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.NaClDescVtbl = type { %struct.NaClRefCountVtbl, i64 (%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i64 (%struct.NaClDesc*, i64, i32)*, i64 (%struct.NaClDesc*, i8*, i64, i64)*, i64 (%struct.NaClDesc*, i8*, i64, i64)*, i32 (%struct.NaClDesc*, %struct.nacl_abi_stat*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i32)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i32 (%struct.NaClDesc*, i64*, i64*)*, i32 (%struct.NaClDesc*, %struct.NaClDescXferState*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, %struct.NaClDesc*)*, i32 (%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)*, i32 (%struct.NaClDesc*, %struct.NaClDesc**)*, i32 (%struct.NaClDesc*, %struct.NaClDesc**)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i32, i32, i8*)*, i32 (%struct.NaClDesc*, i32*, i8*)*, void (%struct.NaClDesc*, i32)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 }
%struct.NaClRefCountVtbl = type { void (%struct.NaClRefCount*)* }
%struct.NaClRefCount = type { %struct.NaClRefCountVtbl*, %struct.NaClFastMutex, i64 }
%struct.NaClFastMutex = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.NaClDesc = type { %struct.NaClRefCount, i32, i32, i32, i8* }
%struct.NaClDescEffector = type opaque
%struct.nacl_abi_stat = type { i64, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i64, i64, i64, i64, i64 }
%struct.NaClDescXferState = type { i8*, i8*, i32*, i32* }
%struct.nacl_abi_timespec = type { i64, i32 }
%struct.NaClImcTypedMsgHdr = type opaque
%struct.NaClMessageHeader = type { %struct.NaClIOVec*, i32, i32*, i32, i32 }
%struct.NaClIOVec = type { i8*, i64 }
%struct.NaClDescCondVar = type { %struct.NaClDesc, %struct.NaClIntrCondVar }
%struct.NaClIntrCondVar = type { %struct.NaClCondVar }
%struct.NaClCondVar = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%struct.NaClIntrMutex = type { i32, %struct.NaClMutex, %struct.NaClCondVar }
%struct.NaClMutex = type { %union.pthread_mutex_t, i32 }

@kNaClDescCondVarVtbl = internal constant %struct.NaClDescVtbl { %struct.NaClRefCountVtbl { void (%struct.NaClRefCount*)* @NaClDescCondVarDtor }, i64 (%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64)* @NaClDescMapNotImplemented, i64 (%struct.NaClDesc*, i8*, i64)* @NaClDescReadNotImplemented, i64 (%struct.NaClDesc*, i8*, i64)* @NaClDescWriteNotImplemented, i64 (%struct.NaClDesc*, i64, i32)* @NaClDescSeekNotImplemented, i64 (%struct.NaClDesc*, i8*, i64, i64)* @NaClDescPReadNotImplemented, i64 (%struct.NaClDesc*, i8*, i64, i64)* @NaClDescPWriteNotImplemented, i32 (%struct.NaClDesc*, %struct.nacl_abi_stat*)* @NaClDescCondVarFstat, i32 (%struct.NaClDesc*)* @NaClDescFchdirNotImplemented, i32 (%struct.NaClDesc*, i32)* @NaClDescFchmodNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescFsyncNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescFdatasyncNotImplemented, i32 (%struct.NaClDesc*, i64)* @NaClDescFtruncateNotImplemented, i64 (%struct.NaClDesc*, i8*, i64)* @NaClDescGetdentsNotImplemented, i32 (%struct.NaClDesc*, i64*, i64*)* @NaClDescExternalizeSizeNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDescXferState*)* @NaClDescExternalizeNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescLockNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescTryLockNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescUnlockNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDesc*)* @NaClDescCondVarWait, i32 (%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*)* @NaClDescCondVarTimedWaitAbs, i32 (%struct.NaClDesc*)* @NaClDescCondVarSignal, i32 (%struct.NaClDesc*)* @NaClDescCondVarBroadcast, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)* @NaClDescSendMsgNotImplemented, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)* @NaClDescRecvMsgNotImplemented, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)* @NaClDescLowLevelSendMsgNotImplemented, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)* @NaClDescLowLevelRecvMsgNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDesc**)* @NaClDescConnectAddrNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDesc**)* @NaClDescAcceptConnNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescPostNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescSemWaitNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescGetValueNotImplemented, i32 (%struct.NaClDesc*, i32, i32, i8*)* @NaClDescSetMetadata, i32 (%struct.NaClDesc*, i32*, i8*)* @NaClDescGetMetadata, void (%struct.NaClDesc*, i32)* @NaClDescSetFlags, i32 (%struct.NaClDesc*)* @NaClDescGetFlags, i32 (%struct.NaClDesc*)* @NaClDescIsattyNotImplemented, i32 10 }, align 8
@.str = private unnamed_addr constant [31 x i8] c"NaClDescCondVarDtor(0x%08lx).\0A\00", align 1
@kNaClDescVtbl = external constant %struct.NaClDescVtbl, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClDescCondVarCtor(%struct.NaClDescCondVar*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.NaClDescCondVar, %struct.NaClDescCondVar* %0, i64 0, i32 0
  %3 = getelementptr inbounds %struct.NaClDescCondVar, %struct.NaClDescCondVar* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %struct.NaClDescCondVar, %struct.NaClDescCondVar* %0, i64 0, i32 0, i32 0, i32 0
  store %struct.NaClRefCountVtbl* null, %struct.NaClRefCountVtbl** %4, align 8
  %5 = tail call i32 @NaClDescCtor(%struct.NaClDesc* %2) #3
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.NaClDescCondVar, %struct.NaClDescCondVar* %0, i64 0, i32 1
  %9 = tail call i32 @NaClIntrCondVarCtor(%struct.NaClIntrCondVar* %8) #3
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %7
  %12 = load %struct.NaClRefCountVtbl*, %struct.NaClRefCountVtbl** %4, align 8
  %13 = getelementptr inbounds %struct.NaClRefCountVtbl, %struct.NaClRefCountVtbl* %12, i64 0, i32 0
  %14 = load void (%struct.NaClRefCount*)*, void (%struct.NaClRefCount*)** %13, align 8
  tail call void %14(%struct.NaClRefCount* %3) #3
  br label %16

15:                                               ; preds = %7
  store %struct.NaClRefCountVtbl* getelementptr inbounds (%struct.NaClDescVtbl, %struct.NaClDescVtbl* @kNaClDescCondVarVtbl, i64 0, i32 0), %struct.NaClRefCountVtbl** %4, align 8
  br label %16

16:                                               ; preds = %1, %15, %11
  %17 = phi i32 [ 1, %15 ], [ 0, %11 ], [ 0, %1 ]
  ret i32 %17
}

declare i32 @NaClDescCtor(%struct.NaClDesc*) local_unnamed_addr #1

declare i32 @NaClIntrCondVarCtor(%struct.NaClIntrCondVar*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @NaClDescCondVarDtor(%struct.NaClRefCount*) #0 {
  %2 = ptrtoint %struct.NaClRefCount* %0 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i64 %2) #3
  %3 = getelementptr inbounds %struct.NaClRefCount, %struct.NaClRefCount* %0, i64 1, i32 1, i32 0, i32 0, i32 4
  %4 = bitcast i32* %3 to %struct.NaClIntrCondVar*
  tail call void @NaClIntrCondVarDtor(%struct.NaClIntrCondVar* %4) #3
  %5 = getelementptr inbounds %struct.NaClRefCount, %struct.NaClRefCount* %0, i64 0, i32 0
  store %struct.NaClRefCountVtbl* getelementptr inbounds (%struct.NaClDescVtbl, %struct.NaClDescVtbl* @kNaClDescVtbl, i64 0, i32 0), %struct.NaClRefCountVtbl** %5, align 8
  %6 = load void (%struct.NaClRefCount*)*, void (%struct.NaClRefCount*)** getelementptr inbounds (%struct.NaClDescVtbl, %struct.NaClDescVtbl* @kNaClDescVtbl, i64 0, i32 0, i32 0), align 8
  tail call void %6(%struct.NaClRefCount* %0) #3
  ret void
}

declare i64 @NaClDescMapNotImplemented(%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64) #1

declare i64 @NaClDescReadNotImplemented(%struct.NaClDesc*, i8*, i64) #1

declare i64 @NaClDescWriteNotImplemented(%struct.NaClDesc*, i8*, i64) #1

declare i64 @NaClDescSeekNotImplemented(%struct.NaClDesc*, i64, i32) #1

declare i64 @NaClDescPReadNotImplemented(%struct.NaClDesc*, i8*, i64, i64) #1

declare i64 @NaClDescPWriteNotImplemented(%struct.NaClDesc*, i8*, i64, i64) #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @NaClDescCondVarFstat(%struct.NaClDesc* nocapture readnone, %struct.nacl_abi_stat* nocapture) #0 {
  %3 = bitcast %struct.nacl_abi_stat* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 104, i1 false)
  %4 = getelementptr inbounds %struct.nacl_abi_stat, %struct.nacl_abi_stat* %1, i64 0, i32 2
  store i32 90560, i32* %4, align 8
  ret i32 0
}

declare i32 @NaClDescFchdirNotImplemented(%struct.NaClDesc*) #1

declare i32 @NaClDescFchmodNotImplemented(%struct.NaClDesc*, i32) #1

declare i32 @NaClDescFsyncNotImplemented(%struct.NaClDesc*) #1

declare i32 @NaClDescFdatasyncNotImplemented(%struct.NaClDesc*) #1

declare i32 @NaClDescFtruncateNotImplemented(%struct.NaClDesc*, i64) #1

declare i64 @NaClDescGetdentsNotImplemented(%struct.NaClDesc*, i8*, i64) #1

declare i32 @NaClDescExternalizeSizeNotImplemented(%struct.NaClDesc*, i64*, i64*) #1

declare i32 @NaClDescExternalizeNotImplemented(%struct.NaClDesc*, %struct.NaClDescXferState*) #1

declare i32 @NaClDescLockNotImplemented(%struct.NaClDesc*) #1

declare i32 @NaClDescTryLockNotImplemented(%struct.NaClDesc*) #1

declare i32 @NaClDescUnlockNotImplemented(%struct.NaClDesc*) #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @NaClDescCondVarWait(%struct.NaClDesc*, %struct.NaClDesc*) #0 {
  %3 = bitcast %struct.NaClDesc* %1 to %struct.NaClDescVtbl**
  %4 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %3, align 8
  %5 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %4, i64 0, i32 37
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 9
  br i1 %7, label %8, label %16

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.NaClDesc, %struct.NaClDesc* %0, i64 1
  %10 = bitcast %struct.NaClDesc* %9 to %struct.NaClIntrCondVar*
  %11 = getelementptr inbounds %struct.NaClDesc, %struct.NaClDesc* %1, i64 1
  %12 = bitcast %struct.NaClDesc* %11 to %struct.NaClIntrMutex*
  %13 = tail call i32 @NaClIntrCondVarWait(%struct.NaClIntrCondVar* %10, %struct.NaClIntrMutex* %12, %struct.nacl_abi_timespec* null) #3
  %14 = tail call i32 @NaClXlateNaClSyncStatus(i32 %13) #3
  %15 = sub nsw i32 0, %14
  br label %16

16:                                               ; preds = %2, %8
  %17 = phi i32 [ %15, %8 ], [ -22, %2 ]
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @NaClDescCondVarTimedWaitAbs(%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*) #0 {
  %4 = bitcast %struct.NaClDesc* %1 to %struct.NaClDescVtbl**
  %5 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %4, align 8
  %6 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %5, i64 0, i32 37
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 9
  br i1 %8, label %9, label %17

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.NaClDesc, %struct.NaClDesc* %0, i64 1
  %11 = bitcast %struct.NaClDesc* %10 to %struct.NaClIntrCondVar*
  %12 = getelementptr inbounds %struct.NaClDesc, %struct.NaClDesc* %1, i64 1
  %13 = bitcast %struct.NaClDesc* %12 to %struct.NaClIntrMutex*
  %14 = tail call i32 @NaClIntrCondVarWait(%struct.NaClIntrCondVar* %11, %struct.NaClIntrMutex* %13, %struct.nacl_abi_timespec* %2) #3
  %15 = tail call i32 @NaClXlateNaClSyncStatus(i32 %14) #3
  %16 = sub nsw i32 0, %15
  br label %17

17:                                               ; preds = %3, %9
  %18 = phi i32 [ %16, %9 ], [ -22, %3 ]
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @NaClDescCondVarSignal(%struct.NaClDesc*) #0 {
  %2 = getelementptr inbounds %struct.NaClDesc, %struct.NaClDesc* %0, i64 1
  %3 = bitcast %struct.NaClDesc* %2 to %struct.NaClIntrCondVar*
  %4 = tail call i32 @NaClIntrCondVarSignal(%struct.NaClIntrCondVar* %3) #3
  %5 = tail call i32 @NaClXlateNaClSyncStatus(i32 %4) #3
  %6 = sub nsw i32 0, %5
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @NaClDescCondVarBroadcast(%struct.NaClDesc*) #0 {
  %2 = getelementptr inbounds %struct.NaClDesc, %struct.NaClDesc* %0, i64 1
  %3 = bitcast %struct.NaClDesc* %2 to %struct.NaClIntrCondVar*
  %4 = tail call i32 @NaClIntrCondVarBroadcast(%struct.NaClIntrCondVar* %3) #3
  %5 = tail call i32 @NaClXlateNaClSyncStatus(i32 %4) #3
  %6 = sub nsw i32 0, %5
  ret i32 %6
}

declare i64 @NaClDescSendMsgNotImplemented(%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32) #1

declare i64 @NaClDescRecvMsgNotImplemented(%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32) #1

declare i64 @NaClDescLowLevelSendMsgNotImplemented(%struct.NaClDesc*, %struct.NaClMessageHeader*, i32) #1

declare i64 @NaClDescLowLevelRecvMsgNotImplemented(%struct.NaClDesc*, %struct.NaClMessageHeader*, i32) #1

declare i32 @NaClDescConnectAddrNotImplemented(%struct.NaClDesc*, %struct.NaClDesc**) #1

declare i32 @NaClDescAcceptConnNotImplemented(%struct.NaClDesc*, %struct.NaClDesc**) #1

declare i32 @NaClDescPostNotImplemented(%struct.NaClDesc*) #1

declare i32 @NaClDescSemWaitNotImplemented(%struct.NaClDesc*) #1

declare i32 @NaClDescGetValueNotImplemented(%struct.NaClDesc*) #1

declare i32 @NaClDescSetMetadata(%struct.NaClDesc*, i32, i32, i8*) #1

declare i32 @NaClDescGetMetadata(%struct.NaClDesc*, i32*, i8*) #1

declare void @NaClDescSetFlags(%struct.NaClDesc*, i32) #1

declare i32 @NaClDescGetFlags(%struct.NaClDesc*) #1

declare i32 @NaClDescIsattyNotImplemented(%struct.NaClDesc*) #1

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #1

declare void @NaClIntrCondVarDtor(%struct.NaClIntrCondVar*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i32 @NaClIntrCondVarWait(%struct.NaClIntrCondVar*, %struct.NaClIntrMutex*, %struct.nacl_abi_timespec*) local_unnamed_addr #1

declare i32 @NaClXlateNaClSyncStatus(i32) local_unnamed_addr #1

declare i32 @NaClIntrCondVarSignal(%struct.NaClIntrCondVar*) local_unnamed_addr #1

declare i32 @NaClIntrCondVarBroadcast(%struct.NaClIntrCondVar*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
