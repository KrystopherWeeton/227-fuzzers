; ModuleID = '../../third_party/blink/renderer/core/streams/miscellaneous_operations.cc'
source_filename = "../../third_party/blink/renderer/core/streams/miscellaneous_operations.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.147", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.165", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.172", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.115", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.39" }
%"struct.std::__1::__atomic_base.39" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::Worklist.46"* }
%"class.blink::Worklist.46" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.blink::Worklist.53"* }
%"class.blink::Worklist.53" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.blink::Worklist.60"* }
%"class.blink::Worklist.60" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::Worklist.67"* }
%"class.blink::Worklist.67" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::Worklist.74"* }
%"class.blink::Worklist.74" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::Worklist.81"* }
%"class.blink::Worklist.81" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::Worklist.88"* }
%"class.blink::Worklist.88" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.95", %"class.std::__1::__compressed_pair.102", %"class.std::__1::__compressed_pair.107", %"class.std::__1::__compressed_pair.109", [4 x i8] }>
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97", %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { i64 }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { float }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.118", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.139" }
%"class.WTF::VectorBuffer.139" = type { %"class.WTF::VectorBufferBase.140" }
%"class.WTF::VectorBufferBase.140" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.153" }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.46"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.53"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.60"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.67"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.74"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.179" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.171 }
%class.scoped_refptr.171 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.172" = type { %"struct.std::__1::__atomic_base.173" }
%"struct.std::__1::__atomic_base.173" = type { %"struct.std::__1::__cxx_atomic_impl.174" }
%"struct.std::__1::__cxx_atomic_impl.174" = type { %"struct.std::__1::__cxx_atomic_base_impl.175" }
%"struct.std::__1::__cxx_atomic_base_impl.175" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.185" }
%"struct.std::__1::atomic.185" = type { %"struct.std::__1::__atomic_base.186" }
%"struct.std::__1::__atomic_base.186" = type { %"struct.std::__1::__atomic_base.187" }
%"struct.std::__1::__atomic_base.187" = type { %"struct.std::__1::__cxx_atomic_impl.188" }
%"struct.std::__1::__cxx_atomic_impl.188" = type { %"struct.std::__1::__cxx_atomic_base_impl.189" }
%"struct.std::__1::__cxx_atomic_base_impl.189" = type { i32 }
%"class.blink::StrategyUnpacker" = type { %"class.v8::Local.193", %"class.v8::Local.193" }
%"class.v8::Local.193" = type { %"class.v8::Value"* }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr, %"class.blink::Member", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member" = type { %"class.blink::MemberBase.176" }
%"class.blink::MemberBase.176" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.177" }
%"class.blink::Persistent.177" = type { %"class.blink::PersistentBase.178" }
%"class.blink::PersistentBase.178" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.190", %class.scoped_refptr.202 }
%"class.blink::TraceWrapperV8Reference.190" = type { %"class.v8::TracedReference.191" }
%"class.v8::TracedReference.191" = type { %"class.v8::BasicTracedReference.192" }
%"class.v8::BasicTracedReference.192" = type { %"class.v8::TracedReferenceBase" }
%class.scoped_refptr.202 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.190" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::String" = type { %class.scoped_refptr.184 }
%class.scoped_refptr.184 = type { %"class.WTF::StringImpl"* }
%"class.blink::StreamAlgorithm" = type { i32 (...)** }
%"class.v8::Object" = type { i8 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.WTF::StringAppend" = type { %"class.WTF::String", i8* }
%"class.v8::String" = type { i8 }
%"class.WTF::StringTypeAdapter" = type { %"class.WTF::StringTypeAdapter.243" }
%"class.WTF::StringTypeAdapter.243" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.244" = type <{ i8*, i32, [4 x i8] }>
%"class.blink::StreamStartAlgorithm" = type { i32 (...)** }
%"class.v8::Local.203" = type { %"class.v8::Name"* }
%"class.v8::Name" = type { i8 }
%"class.v8::Number" = type { i8 }
%"class.v8::Function" = type { i8 }
%"class.v8::Promise" = type { i8 }
%"class.v8::MicrotasksScope" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::MicrotaskQueue"*, i8, [7 x i8] }>
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::Promise::Resolver" = type { i8 }
%"class.blink::StrategySizeAlgorithm" = type { i32 (...)** }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.v8::Local" = type { %"class.v8::Object"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::(anonymous namespace)::TrivialStreamAlgorithm" = type { %"class.blink::StreamAlgorithm" }
%"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithoutExtraArg" = type { %"class.blink::StreamAlgorithm", %"class.blink::TraceWrapperV8Reference", %"class.blink::TraceWrapperV8Reference.196" }
%"class.blink::TraceWrapperV8Reference.196" = type { %"class.v8::TracedReference.197" }
%"class.v8::TracedReference.197" = type { %"class.v8::BasicTracedReference.198" }
%"class.v8::BasicTracedReference.198" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithExtraArg" = type { %"class.blink::StreamAlgorithm", %"class.blink::TraceWrapperV8Reference", %"class.blink::TraceWrapperV8Reference.196", %"class.blink::TraceWrapperV8Reference.190" }
%"class.blink::(anonymous namespace)::JavaScriptStreamStartAlgorithm" = type { %"class.blink::StreamStartAlgorithm", %"class.blink::TraceWrapperV8Reference", i8*, %"class.blink::TraceWrapperV8Reference.190" }
%"class.blink::(anonymous namespace)::JavaScriptByteStreamStartAlgorithm" = type { %"class.blink::StreamStartAlgorithm", %"class.blink::TraceWrapperV8Reference", %"class.blink::TraceWrapperV8Reference.196", %"class.blink::TraceWrapperV8Reference.190" }
%"class.blink::(anonymous namespace)::TrivialStartAlgorithm" = type { %"class.blink::StreamStartAlgorithm" }
%"class.blink::(anonymous namespace)::DefaultSizeAlgorithm" = type { %"class.blink::StrategySizeAlgorithm" }
%"class.blink::(anonymous namespace)::JavaScriptSizeAlgorithm" = type { %"class.blink::StrategySizeAlgorithm", %"class.blink::TraceWrapperV8Reference.196" }

$_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15StreamAlgorithmEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15StreamAlgorithmEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15StreamAlgorithmEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15StreamAlgorithmEE7GetNameEPKv = comdat any

$_ZN5blink15StreamAlgorithmD2Ev = comdat any

$_ZNK5blink15StreamAlgorithm5TraceEPNS_7VisitorE = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_20StreamStartAlgorithmEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_20StreamStartAlgorithmEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20StreamStartAlgorithmEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20StreamStartAlgorithmEE7GetNameEPKv = comdat any

$_ZNK5blink20StreamStartAlgorithm5TraceEPNS_7VisitorE = comdat any

$_ZN5blink20StreamStartAlgorithmD2Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_21StrategySizeAlgorithmEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_21StrategySizeAlgorithmEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_21StrategySizeAlgorithmEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_21StrategySizeAlgorithmEE7GetNameEPKv = comdat any

$_ZNK5blink21StrategySizeAlgorithm5TraceEPNS_7VisitorE = comdat any

$_ZN5blink21StrategySizeAlgorithmD2Ev = comdat any

$_ZZN5blink11GCInfoTraitINS_15StreamAlgorithmEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15StreamAlgorithmEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20StreamStartAlgorithmEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20StreamStartAlgorithmEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_21StrategySizeAlgorithmEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_21StrategySizeAlgorithmEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [33 x i8] c" must be a function or undefined\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"highWaterMark\00", align 1
@.str.2 = private unnamed_addr constant [82 x i8] c"A queuing strategy's highWaterMark property must be a nonnegative, non-NaN number\00", align 1
@.str.3 = private unnamed_addr constant [54 x i8] c"A queuing strategy's size property must be a function\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.5 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.7 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@.str.8 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/core/streams/miscellaneous_operations.cc\00", align 1
@.str.9 = private unnamed_addr constant [50 x i8] c"Recursion depth exceeded in PromiseRejectInternal\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15StreamAlgorithmEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::StreamAlgorithm]\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.12 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15StreamAlgorithmEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15StreamAlgorithmEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15StreamAlgorithmEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15StreamAlgorithmEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15StreamAlgorithmEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.13 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink12_GLOBAL__N_122TrivialStreamAlgorithmE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::StreamAlgorithm"*)* @_ZN5blink15StreamAlgorithmD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::TrivialStreamAlgorithm"*)* @_ZN5blink12_GLOBAL__N_122TrivialStreamAlgorithmD0Ev to i8*), i8* bitcast (%"class.v8::Promise"* (%"class.blink::(anonymous namespace)::TrivialStreamAlgorithm"*, %"class.blink::ScriptState"*, i32, %"class.v8::Local.193"*)* @_ZN5blink12_GLOBAL__N_122TrivialStreamAlgorithm3RunEPNS_11ScriptStateEiPN2v85LocalINS4_5ValueEEE to i8*), i8* bitcast (void (%"class.blink::StreamAlgorithm"*, %"class.blink::Visitor"*)* @_ZNK5blink15StreamAlgorithm5TraceEPNS_7VisitorE to i8*)] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.14 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.15 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.16 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZTVN5blink12_GLOBAL__N_140JavaScriptStreamAlgorithmWithoutExtraArgE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::StreamAlgorithm"*)* @_ZN5blink15StreamAlgorithmD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithoutExtraArg"*)* @_ZN5blink12_GLOBAL__N_140JavaScriptStreamAlgorithmWithoutExtraArgD0Ev to i8*), i8* bitcast (%"class.v8::Promise"* (%"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithoutExtraArg"*, %"class.blink::ScriptState"*, i32, %"class.v8::Local.193"*)* @_ZN5blink12_GLOBAL__N_140JavaScriptStreamAlgorithmWithoutExtraArg3RunEPNS_11ScriptStateEiPN2v85LocalINS4_5ValueEEE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithoutExtraArg"*, %"class.blink::Visitor"*)* @_ZNK5blink12_GLOBAL__N_140JavaScriptStreamAlgorithmWithoutExtraArg5TraceEPNS_7VisitorE to i8*)] }, align 8
@_ZTVN5blink12_GLOBAL__N_137JavaScriptStreamAlgorithmWithExtraArgE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::StreamAlgorithm"*)* @_ZN5blink15StreamAlgorithmD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithExtraArg"*)* @_ZN5blink12_GLOBAL__N_137JavaScriptStreamAlgorithmWithExtraArgD0Ev to i8*), i8* bitcast (%"class.v8::Promise"* (%"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithExtraArg"*, %"class.blink::ScriptState"*, i32, %"class.v8::Local.193"*)* @_ZN5blink12_GLOBAL__N_137JavaScriptStreamAlgorithmWithExtraArg3RunEPNS_11ScriptStateEiPN2v85LocalINS4_5ValueEEE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithExtraArg"*, %"class.blink::Visitor"*)* @_ZNK5blink12_GLOBAL__N_137JavaScriptStreamAlgorithmWithExtraArg5TraceEPNS_7VisitorE to i8*)] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20StreamStartAlgorithmEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::StreamStartAlgorithm]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20StreamStartAlgorithmEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20StreamStartAlgorithmEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20StreamStartAlgorithmEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20StreamStartAlgorithmEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20StreamStartAlgorithmEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink12_GLOBAL__N_130JavaScriptStreamStartAlgorithmE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::StreamStartAlgorithm"*)* @_ZN5blink20StreamStartAlgorithmD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::JavaScriptStreamStartAlgorithm"*)* @_ZN5blink12_GLOBAL__N_130JavaScriptStreamStartAlgorithmD0Ev to i8*), i8* bitcast (%"class.v8::Promise"* (%"class.blink::(anonymous namespace)::JavaScriptStreamStartAlgorithm"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)* @_ZN5blink12_GLOBAL__N_130JavaScriptStreamStartAlgorithm3RunEPNS_11ScriptStateERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::JavaScriptStreamStartAlgorithm"*, %"class.blink::Visitor"*)* @_ZNK5blink12_GLOBAL__N_130JavaScriptStreamStartAlgorithm5TraceEPNS_7VisitorE to i8*)] }, align 8
@.str.17 = private unnamed_addr constant [6 x i8] c"start\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"internal error\00", align 1
@_ZTVN5blink12_GLOBAL__N_134JavaScriptByteStreamStartAlgorithmE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::StreamStartAlgorithm"*)* @_ZN5blink20StreamStartAlgorithmD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::JavaScriptByteStreamStartAlgorithm"*)* @_ZN5blink12_GLOBAL__N_134JavaScriptByteStreamStartAlgorithmD0Ev to i8*), i8* bitcast (%"class.v8::Promise"* (%"class.blink::(anonymous namespace)::JavaScriptByteStreamStartAlgorithm"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)* @_ZN5blink12_GLOBAL__N_134JavaScriptByteStreamStartAlgorithm3RunEPNS_11ScriptStateERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::JavaScriptByteStreamStartAlgorithm"*, %"class.blink::Visitor"*)* @_ZNK5blink12_GLOBAL__N_134JavaScriptByteStreamStartAlgorithm5TraceEPNS_7VisitorE to i8*)] }, align 8
@_ZTVN5blink12_GLOBAL__N_121TrivialStartAlgorithmE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::StreamStartAlgorithm"*)* @_ZN5blink20StreamStartAlgorithmD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::TrivialStartAlgorithm"*)* @_ZN5blink12_GLOBAL__N_121TrivialStartAlgorithmD0Ev to i8*), i8* bitcast (%"class.v8::Promise"* (%"class.blink::(anonymous namespace)::TrivialStartAlgorithm"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)* @_ZN5blink12_GLOBAL__N_121TrivialStartAlgorithm3RunEPNS_11ScriptStateERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::StreamStartAlgorithm"*, %"class.blink::Visitor"*)* @_ZNK5blink20StreamStartAlgorithm5TraceEPNS_7VisitorE to i8*)] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21StrategySizeAlgorithmEEEPKcv = private unnamed_addr constant [76 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::StrategySizeAlgorithm]\00", align 1
@_ZZN5blink11GCInfoTraitINS_21StrategySizeAlgorithmEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_21StrategySizeAlgorithmEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_21StrategySizeAlgorithmEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_21StrategySizeAlgorithmEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_21StrategySizeAlgorithmEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink12_GLOBAL__N_120DefaultSizeAlgorithmE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::StrategySizeAlgorithm"*)* @_ZN5blink21StrategySizeAlgorithmD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::DefaultSizeAlgorithm"*)* @_ZN5blink12_GLOBAL__N_120DefaultSizeAlgorithmD0Ev to i8*), i8* bitcast ({ i8, double } (%"class.blink::(anonymous namespace)::DefaultSizeAlgorithm"*, %"class.blink::ScriptState"*, %"class.v8::Value"*, %"class.blink::ExceptionState"*)* @_ZN5blink12_GLOBAL__N_120DefaultSizeAlgorithm3RunEPNS_11ScriptStateEN2v85LocalINS4_5ValueEEERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::StrategySizeAlgorithm"*, %"class.blink::Visitor"*)* @_ZNK5blink21StrategySizeAlgorithm5TraceEPNS_7VisitorE to i8*)] }, align 8
@_ZTVN5blink12_GLOBAL__N_123JavaScriptSizeAlgorithmE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::StrategySizeAlgorithm"*)* @_ZN5blink21StrategySizeAlgorithmD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::JavaScriptSizeAlgorithm"*)* @_ZN5blink12_GLOBAL__N_123JavaScriptSizeAlgorithmD0Ev to i8*), i8* bitcast ({ i8, double } (%"class.blink::(anonymous namespace)::JavaScriptSizeAlgorithm"*, %"class.blink::ScriptState"*, %"class.v8::Value"*, %"class.blink::ExceptionState"*)* @_ZN5blink12_GLOBAL__N_123JavaScriptSizeAlgorithm3RunEPNS_11ScriptStateEN2v85LocalINS4_5ValueEEERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::JavaScriptSizeAlgorithm"*, %"class.blink::Visitor"*)* @_ZNK5blink12_GLOBAL__N_123JavaScriptSizeAlgorithm5TraceEPNS_7VisitorE to i8*)] }, align 8

@_ZN5blink16StrategyUnpackerC1EPNS_11ScriptStateENS_11ScriptValueERNS_14ExceptionStateE = hidden unnamed_addr alias void (%"class.blink::StrategyUnpacker"*, %"class.blink::ScriptState"*, %"class.blink::ScriptValue"*, %"class.blink::ExceptionState"*), void (%"class.blink::StrategyUnpacker"*, %"class.blink::ScriptState"*, %"class.blink::ScriptValue"*, %"class.blink::ExceptionState"*)* @_ZN5blink16StrategyUnpackerC2EPNS_11ScriptStateENS_11ScriptValueERNS_14ExceptionStateE

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StreamAlgorithm"* @_ZN5blink35CreateAlgorithmFromUnderlyingMethodEPNS_11ScriptStateEN2v85LocalINS2_6ObjectEEEPKcS7_NS2_10MaybeLocalINS2_5ValueEEERNS_14ExceptionStateE(%"class.blink::ScriptState"* nocapture readonly, %"class.v8::Object"*, i8*, i8*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %7 = tail call %"class.v8::Value"* @_ZN5blink13ResolveMethodEPNS_11ScriptStateEN2v85LocalINS2_6ObjectEEEPKcS7_RNS_14ExceptionStateE(%"class.blink::ScriptState"* %0, %"class.v8::Object"* %1, i8* %2, i8* %3, %"class.blink::ExceptionState"* dereferenceable(72) %5)
  %8 = icmp eq %"class.v8::Value"* %7, null
  br i1 %8, label %41, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.v8::Value"* %7 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 3
  %13 = icmp eq i64 %12, 1
  br i1 %13, label %14, label %39

14:                                               ; preds = %9
  %15 = add i64 %11, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = and i64 %11, -4294967296
  %19 = zext i32 %17 to i64
  %20 = or i64 %18, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load i16, i16* %22, align 2
  %24 = icmp eq i16 %23, 67
  br i1 %24, label %25, label %39

25:                                               ; preds = %14
  %26 = add i64 %11, 23
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, -2
  %30 = icmp eq i32 %29, 10
  br i1 %30, label %31, label %39

31:                                               ; preds = %25
  %32 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15StreamAlgorithmEEEPhm(i64 8) #13
  %33 = bitcast i8* %32 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_122TrivialStreamAlgorithmE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds i8, i8* %32, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  %38 = bitcast i8* %32 to %"class.blink::StreamAlgorithm"*
  br label %41

39:                                               ; preds = %14, %9, %25
  %40 = tail call %"class.blink::StreamAlgorithm"* @_ZN5blink33CreateAlgorithmFromResolvedMethodEPNS_11ScriptStateEN2v85LocalINS2_6ObjectEEENS3_INS2_5ValueEEENS2_10MaybeLocalIS6_EE(%"class.blink::ScriptState"* %0, %"class.v8::Object"* %1, %"class.v8::Value"* nonnull %7, %"class.v8::Value"* %4)
  br label %41

41:                                               ; preds = %6, %39, %31
  %42 = phi %"class.blink::StreamAlgorithm"* [ %38, %31 ], [ %40, %39 ], [ null, %6 ]
  ret %"class.blink::StreamAlgorithm"* %42
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZN5blink13ResolveMethodEPNS_11ScriptStateEN2v85LocalINS2_6ObjectEEEPKcS7_RNS_14ExceptionStateE(%"class.blink::ScriptState"* nocapture readonly, %"class.v8::Object"*, i8*, i8*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringAppend", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %11 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %10, align 8
  %12 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %11) #13
  %13 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.v8::Context"*, %"class.v8::Context"** %13, align 8
  %15 = icmp eq %"class.v8::Context"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %5
  %17 = bitcast %"class.blink::ScriptState"* %0 to %"class.v8::internal::Isolate"**
  %18 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %19 = bitcast %"class.v8::Context"* %14 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %18, i64 %20) #13
  %22 = bitcast i64* %21 to %"class.v8::Context"*
  br label %23

23:                                               ; preds = %5, %16
  %24 = phi %"class.v8::Context"* [ %22, %16 ], [ null, %5 ]
  %25 = icmp eq i8* %2, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = load i8, i8* %2, align 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %26, %23
  %30 = ptrtoint %"class.v8::Isolate"* %11 to i64
  %31 = add i64 %30, 200
  %32 = inttoptr i64 %31 to %"class.v8::String"*
  br label %39

33:                                               ; preds = %26
  %34 = call i64 @strlen(i8* nonnull %2) #14
  %35 = trunc i64 %34 to i32
  %36 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %11, i8* nonnull %2, i32 1, i32 %35) #13
  %37 = icmp eq %"class.v8::String"* %36, null
  br i1 %37, label %38, label %39, !prof !2

38:                                               ; preds = %33
  call void @_ZN2v82V812ToLocalEmptyEv() #13
  br label %39

39:                                               ; preds = %29, %33, %38
  %40 = phi %"class.v8::String"* [ %32, %29 ], [ %36, %33 ], [ null, %38 ]
  %41 = bitcast %"class.v8::String"* %40 to %"class.v8::Value"*
  %42 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %24, %"class.v8::Value"* %41) #13
  %43 = icmp eq %"class.v8::Value"* %42, null
  br i1 %43, label %44, label %50

44:                                               ; preds = %39
  %45 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #13
  %46 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %47 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %47, i64 5
  %49 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %48, align 8
  call void %49(%"class.blink::ExceptionState"* %4, %"class.v8::Value"* %45) #13
  br label %187

50:                                               ; preds = %39
  %51 = call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* nonnull %42) #13
  br i1 %51, label %187, label %52

52:                                               ; preds = %50
  %53 = bitcast %"class.v8::Value"* %42 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = and i64 %54, 3
  %56 = icmp eq i64 %55, 1
  br i1 %56, label %57, label %74

57:                                               ; preds = %52
  %58 = add i64 %54, -1
  %59 = inttoptr i64 %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = and i64 %54, -4294967296
  %62 = zext i32 %60 to i64
  %63 = or i64 %61, %62
  %64 = add i64 %63, 7
  %65 = inttoptr i64 %64 to i16*
  %66 = load i16, i16* %65, align 2
  %67 = icmp eq i16 %66, 67
  br i1 %67, label %68, label %74

68:                                               ; preds = %57
  %69 = add i64 %54, 23
  %70 = inttoptr i64 %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = and i32 %71, -2
  %73 = icmp eq i32 %72, 10
  br i1 %73, label %187, label %74

74:                                               ; preds = %57, %52, %68
  %75 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #13
  %76 = bitcast %"class.WTF::StringAppend"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #13
  %77 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #13
  %78 = icmp eq i8* %3, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %74
  %80 = call i64 @strlen(i8* nonnull %3) #14
  br label %81

81:                                               ; preds = %74, %79
  %82 = phi i64 [ %80, %79 ], [ 0, %74 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* %3, i64 %82) #13
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %130, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %103

93:                                               ; preds = %86
  %94 = zext i32 %92 to i33
  %95 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %94, i33 1) #13
  %96 = extractvalue { i33, i1 } %95, 1
  %97 = extractvalue { i33, i1 } %95, 0
  %98 = icmp slt i33 %97, 0
  %99 = or i1 %96, %98
  br i1 %99, label %100, label %101, !prof !2

100:                                              ; preds = %93
  call void @llvm.trap() #13
  unreachable

101:                                              ; preds = %93
  %102 = trunc i33 %97 to i32
  store i32 %102, i32* %91, align 4
  br label %103

103:                                              ; preds = %86, %101
  %104 = phi i32 [ %102, %101 ], [ %92, %86 ]
  %105 = load atomic i32, i32* %87 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  br i1 %107, label %109, label %119

109:                                              ; preds = %103
  %110 = zext i32 %104 to i33
  %111 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %110, i33 1) #13
  %112 = extractvalue { i33, i1 } %111, 1
  %113 = extractvalue { i33, i1 } %111, 0
  %114 = icmp slt i33 %113, 0
  %115 = or i1 %112, %114
  br i1 %115, label %116, label %117, !prof !2

116:                                              ; preds = %109
  call void @llvm.trap() #13
  unreachable

117:                                              ; preds = %109
  %118 = trunc i33 %113 to i32
  store i32 %118, i32* %108, align 4
  br label %119

119:                                              ; preds = %117, %103
  %120 = phi i32 [ %118, %117 ], [ %104, %103 ]
  %121 = load atomic i32, i32* %87 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %119
  %125 = add i32 %120, -1
  store i32 %125, i32* %108, align 4
  br label %126

126:                                              ; preds = %124, %119
  %127 = phi i32 [ %125, %124 ], [ %120, %119 ]
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #13
  br label %130

130:                                              ; preds = %81, %126, %129
  %131 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %84, %"class.WTF::StringImpl"** %131, align 8
  %132 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i8** %132, align 8
  %133 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %8)
  %134 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %133, %"class.WTF::StringImpl"** %134, align 8
  %135 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %136 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %135, align 8
  %137 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %136, i64 3
  %138 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %137, align 8
  call void %138(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %7) #13
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %130
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #13
  br label %154

154:                                              ; preds = %130, %150, %153
  %155 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %156 = icmp eq %"class.WTF::StringImpl"* %155, null
  br i1 %156, label %170, label %157

157:                                              ; preds = %154
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  br i1 %161, label %164, label %166

164:                                              ; preds = %157
  %165 = add i32 %163, -1
  store i32 %165, i32* %162, align 4
  br label %166

166:                                              ; preds = %164, %157
  %167 = phi i32 [ %165, %164 ], [ %163, %157 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %155) #13
  br label %170

170:                                              ; preds = %154, %166, %169
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %171, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %170
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  br i1 %177, label %180, label %182

180:                                              ; preds = %173
  %181 = add i32 %179, -1
  store i32 %181, i32* %178, align 4
  br label %182

182:                                              ; preds = %180, %173
  %183 = phi i32 [ %181, %180 ], [ %179, %173 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %171) #13
  br label %186

186:                                              ; preds = %170, %182, %185
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #13
  br label %187

187:                                              ; preds = %50, %68, %186, %44
  %188 = phi %"class.v8::Value"* [ null, %186 ], [ null, %44 ], [ %42, %68 ], [ %42, %50 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #13
  ret %"class.v8::Value"* %188
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StreamAlgorithm"* @_ZN5blink33CreateAlgorithmFromResolvedMethodEPNS_11ScriptStateEN2v85LocalINS2_6ObjectEEENS3_INS2_5ValueEEENS2_10MaybeLocalIS6_EE(%"class.blink::ScriptState"* nocapture readonly, %"class.v8::Object"*, %"class.v8::Value"*, %"class.v8::Value"*) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = icmp eq %"class.v8::Value"* %3, null
  br i1 %7, label %8, label %31

8:                                                ; preds = %4
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15StreamAlgorithmEEEPhm(i64 24) #13
  %10 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_140JavaScriptStreamAlgorithmWithoutExtraArgE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = bitcast i8* %11 to i64**
  store i64* null, i64** %12, align 8
  %13 = icmp eq %"class.v8::Object"* %1, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %8
  %15 = bitcast %"class.v8::Object"* %1 to i64*
  %16 = bitcast %"class.v8::Isolate"* %6 to %"class.v8::internal::Isolate"*
  %17 = bitcast i8* %11 to i64*
  %18 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %16, i64* nonnull %15, i64* %17, i1 zeroext false) #13
  %19 = ptrtoint i64* %18 to i64
  store atomic i64 %19, i64* %17 monotonic, align 8
  br label %20

20:                                               ; preds = %14, %8
  %21 = bitcast i8* %11 to %"class.blink::TraceWrapperV8Reference.190"*
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.190"* dereferenceable(8) %21) #13
  %22 = getelementptr inbounds i8, i8* %9, i64 16
  %23 = bitcast i8* %22 to i64**
  store i64* null, i64** %23, align 8
  %24 = icmp eq %"class.v8::Value"* %2, null
  br i1 %24, label %65, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.v8::Value"* %2 to i64*
  %27 = bitcast %"class.v8::Isolate"* %6 to %"class.v8::internal::Isolate"*
  %28 = bitcast i8* %22 to i64*
  %29 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %27, i64* nonnull %26, i64* %28, i1 zeroext false) #13
  %30 = ptrtoint i64* %29 to i64
  store atomic i64 %30, i64* %28 monotonic, align 8
  br label %65

31:                                               ; preds = %4
  %32 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15StreamAlgorithmEEEPhm(i64 32) #13
  %33 = bitcast i8* %32 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_137JavaScriptStreamAlgorithmWithExtraArgE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds i8, i8* %32, i64 8
  %35 = bitcast i8* %34 to i64**
  store i64* null, i64** %35, align 8
  %36 = icmp eq %"class.v8::Object"* %1, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %31
  %38 = bitcast %"class.v8::Object"* %1 to i64*
  %39 = bitcast %"class.v8::Isolate"* %6 to %"class.v8::internal::Isolate"*
  %40 = bitcast i8* %34 to i64*
  %41 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %39, i64* nonnull %38, i64* %40, i1 zeroext false) #13
  %42 = ptrtoint i64* %41 to i64
  store atomic i64 %42, i64* %40 monotonic, align 8
  br label %43

43:                                               ; preds = %37, %31
  %44 = bitcast i8* %34 to %"class.blink::TraceWrapperV8Reference.190"*
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.190"* dereferenceable(8) %44) #13
  %45 = getelementptr inbounds i8, i8* %32, i64 16
  %46 = bitcast i8* %45 to i64**
  store i64* null, i64** %46, align 8
  %47 = icmp eq %"class.v8::Value"* %2, null
  br i1 %47, label %48, label %50

48:                                               ; preds = %43
  %49 = bitcast %"class.v8::Isolate"* %6 to %"class.v8::internal::Isolate"*
  br label %56

50:                                               ; preds = %43
  %51 = bitcast %"class.v8::Value"* %2 to i64*
  %52 = bitcast %"class.v8::Isolate"* %6 to %"class.v8::internal::Isolate"*
  %53 = bitcast i8* %45 to i64*
  %54 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %52, i64* nonnull %51, i64* %53, i1 zeroext false) #13
  %55 = ptrtoint i64* %54 to i64
  store atomic i64 %55, i64* %53 monotonic, align 8
  br label %56

56:                                               ; preds = %48, %50
  %57 = phi %"class.v8::internal::Isolate"* [ %49, %48 ], [ %52, %50 ]
  %58 = bitcast i8* %45 to %"class.blink::TraceWrapperV8Reference.190"*
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.190"* dereferenceable(8) %58) #13
  %59 = getelementptr inbounds i8, i8* %32, i64 24
  %60 = bitcast i8* %59 to i64**
  store i64* null, i64** %60, align 8
  %61 = bitcast %"class.v8::Value"* %3 to i64*
  %62 = bitcast i8* %59 to i64*
  %63 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %57, i64* nonnull %61, i64* %62, i1 zeroext false) #13
  %64 = ptrtoint i64* %63 to i64
  store atomic i64 %64, i64* %62 monotonic, align 8
  br label %65

65:                                               ; preds = %25, %20, %56
  %66 = phi i8* [ %59, %56 ], [ %22, %20 ], [ %22, %25 ]
  %67 = phi i8* [ %32, %56 ], [ %9, %20 ], [ %9, %25 ]
  %68 = bitcast i8* %66 to %"class.blink::TraceWrapperV8Reference.190"*
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.190"* dereferenceable(8) %68) #13
  %69 = getelementptr inbounds i8, i8* %67, i64 -4
  %70 = bitcast i8* %69 to i16*
  %71 = load atomic i16, i16* %70 monotonic, align 2
  %72 = or i16 %71, 1
  store atomic i16 %72, i16* %70 release, align 2
  %73 = bitcast i8* %67 to %"class.blink::StreamAlgorithm"*
  ret %"class.blink::StreamAlgorithm"* %73
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.244", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.244", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.244", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = select i1 %11, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %10
  %14 = bitcast %"class.WTF::StringTypeAdapter.244"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #13
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.244"* nonnull %6, i8* %16) #13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #13
  br i1 %20, label %81, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #13
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #13
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false) #13
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %21
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %39

33:                                               ; preds = %21
  %34 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %38 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  br label %39

39:                                               ; preds = %31, %33
  %40 = phi i8* [ null, %31 ], [ %38, %33 ]
  %41 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %42 = phi i32 [ 0, %31 ], [ %36, %33 ]
  %43 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %41, i64* %43, align 8
  store i8* %40, i8** %27, align 8
  store i32 %42, i32* %28, align 8
  %44 = bitcast %"class.WTF::StringTypeAdapter.244"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false) #13
  %45 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.244"* nonnull %5, i8* %45) #13
  %46 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.243"* nonnull %46, i8* %25) #13
  %47 = load i32, i32* %28, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %25, i64 %48
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.244"* nonnull %5, i8* %49) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #13
  %50 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %50, label %141, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #13
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %58
  call void @llvm.trap() #13
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %51, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %71 = load atomic i32, i32* %52 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %76 = add i32 %69, -1
  store i32 %76, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi i32 [ %76, %74 ], [ %69, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %141

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #13
  br label %141

81:                                               ; preds = %1
  %82 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #13
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %83 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %84 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %83, i16** nonnull dereferenceable(8) %8) #13
  %85 = load i16*, i16** %8, align 8
  %86 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #13
  %87 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false) #13
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %99

93:                                               ; preds = %81
  %94 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %98 = bitcast %"class.WTF::StringImpl"* %97 to i8*
  br label %99

99:                                               ; preds = %91, %93
  %100 = phi i8* [ null, %91 ], [ %98, %93 ]
  %101 = phi i64 [ %92, %91 ], [ %94, %93 ]
  %102 = phi i32 [ 0, %91 ], [ %96, %93 ]
  %103 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i64*
  store i64 %101, i64* %103, align 8
  store i8* %100, i8** %87, align 8
  store i32 %102, i32* %88, align 8
  %104 = bitcast %"class.WTF::StringTypeAdapter.244"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 16, i1 false) #13
  %105 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.244"* nonnull %3, i8* %105) #13
  %106 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.243"* nonnull %106, i16* %85) #13
  %107 = load i32, i32* %88, align 8
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i16, i16* %85, i64 %108
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.244"* nonnull %3, i16* %109) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #13
  %110 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %110, label %141, label %111

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %128

118:                                              ; preds = %111
  %119 = zext i32 %117 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #13
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !2

125:                                              ; preds = %118
  call void @llvm.trap() #13
  unreachable

126:                                              ; preds = %118
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %116, align 4
  br label %128

128:                                              ; preds = %111, %126
  %129 = phi i32 [ %127, %126 ], [ %117, %111 ]
  %130 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %131 = load atomic i32, i32* %112 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %136 = add i32 %129, -1
  store i32 %136, i32* %135, align 4
  br label %137

137:                                              ; preds = %134, %128
  %138 = phi i32 [ %136, %134 ], [ %129, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #13
  br label %141

141:                                              ; preds = %140, %137, %99, %80, %77, %39
  %142 = phi i8* [ %22, %39 ], [ %22, %77 ], [ %22, %80 ], [ %82, %99 ], [ %82, %137 ], [ %82, %140 ]
  %143 = phi i64 [ 0, %39 ], [ %70, %77 ], [ %70, %80 ], [ 0, %99 ], [ %130, %137 ], [ %130, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #13
  %144 = inttoptr i64 %143 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %144
}

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StreamStartAlgorithm"* @_ZN5blink20CreateStartAlgorithmEPNS_11ScriptStateEN2v85LocalINS2_6ObjectEEEPKcNS3_INS2_5ValueEEE(%"class.blink::ScriptState"* nocapture readonly, %"class.v8::Object"*, i8*, %"class.v8::Value"*) local_unnamed_addr #0 {
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_20StreamStartAlgorithmEEEPhm(i64 32) #13
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_130JavaScriptStreamStartAlgorithmE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = bitcast i8* %10 to i64**
  store i64* null, i64** %11, align 8
  %12 = icmp eq %"class.v8::Object"* %1, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.v8::Object"* %1 to i64*
  %15 = bitcast %"class.v8::Isolate"* %7 to %"class.v8::internal::Isolate"*
  %16 = bitcast i8* %10 to i64*
  %17 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %15, i64* nonnull %14, i64* %16, i1 zeroext false) #13
  %18 = ptrtoint i64* %17 to i64
  store atomic i64 %18, i64* %16 monotonic, align 8
  br label %19

19:                                               ; preds = %13, %4
  %20 = bitcast i8* %10 to %"class.blink::TraceWrapperV8Reference.190"*
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.190"* dereferenceable(8) %20) #13
  %21 = getelementptr inbounds i8, i8* %8, i64 16
  %22 = bitcast i8* %21 to i64*
  store i64 %5, i64* %22, align 8
  %23 = getelementptr inbounds i8, i8* %8, i64 24
  %24 = bitcast i8* %23 to %"class.blink::TraceWrapperV8Reference.190"*
  %25 = bitcast i8* %23 to i64**
  store i64* null, i64** %25, align 8
  %26 = icmp eq %"class.v8::Value"* %3, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %19
  %28 = bitcast %"class.v8::Value"* %3 to i64*
  %29 = bitcast %"class.v8::Isolate"* %7 to %"class.v8::internal::Isolate"*
  %30 = bitcast i8* %23 to i64*
  %31 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %29, i64* nonnull %28, i64* %30, i1 zeroext false) #13
  %32 = ptrtoint i64* %31 to i64
  store atomic i64 %32, i64* %30 monotonic, align 8
  br label %33

33:                                               ; preds = %19, %27
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.190"* dereferenceable(8) %24) #13
  %34 = getelementptr inbounds i8, i8* %8, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  %38 = bitcast i8* %8 to %"class.blink::StreamStartAlgorithm"*
  ret %"class.blink::StreamStartAlgorithm"* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StreamStartAlgorithm"* @_ZN5blink30CreateByteStreamStartAlgorithmEPNS_11ScriptStateEN2v85LocalINS2_6ObjectEEENS3_INS2_5ValueEEES7_(%"class.blink::ScriptState"* nocapture readonly, %"class.v8::Object"*, %"class.v8::Value"*, %"class.v8::Value"*) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_20StreamStartAlgorithmEEEPhm(i64 32) #13
  %8 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_134JavaScriptByteStreamStartAlgorithmE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to i64**
  store i64* null, i64** %10, align 8
  %11 = icmp eq %"class.v8::Object"* %1, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %4
  %13 = bitcast %"class.v8::Object"* %1 to i64*
  %14 = bitcast %"class.v8::Isolate"* %6 to %"class.v8::internal::Isolate"*
  %15 = bitcast i8* %9 to i64*
  %16 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %14, i64* nonnull %13, i64* %15, i1 zeroext false) #13
  %17 = ptrtoint i64* %16 to i64
  store atomic i64 %17, i64* %15 monotonic, align 8
  br label %18

18:                                               ; preds = %12, %4
  %19 = bitcast i8* %9 to %"class.blink::TraceWrapperV8Reference.190"*
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.190"* dereferenceable(8) %19) #13
  %20 = getelementptr inbounds i8, i8* %7, i64 16
  %21 = bitcast i8* %20 to i64**
  store i64* null, i64** %21, align 8
  %22 = icmp eq %"class.v8::Value"* %2, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.v8::Value"* %2 to i64*
  %25 = bitcast %"class.v8::Isolate"* %6 to %"class.v8::internal::Isolate"*
  %26 = bitcast i8* %20 to i64*
  %27 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %25, i64* nonnull %24, i64* %26, i1 zeroext false) #13
  %28 = ptrtoint i64* %27 to i64
  store atomic i64 %28, i64* %26 monotonic, align 8
  br label %29

29:                                               ; preds = %23, %18
  %30 = bitcast i8* %20 to %"class.blink::TraceWrapperV8Reference.190"*
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.190"* dereferenceable(8) %30) #13
  %31 = getelementptr inbounds i8, i8* %7, i64 24
  %32 = bitcast i8* %31 to %"class.blink::TraceWrapperV8Reference.190"*
  %33 = bitcast i8* %31 to i64**
  store i64* null, i64** %33, align 8
  %34 = icmp eq %"class.v8::Value"* %3, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.v8::Value"* %3 to i64*
  %37 = bitcast %"class.v8::Isolate"* %6 to %"class.v8::internal::Isolate"*
  %38 = bitcast i8* %31 to i64*
  %39 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %37, i64* nonnull %36, i64* %38, i1 zeroext false) #13
  %40 = ptrtoint i64* %39 to i64
  store atomic i64 %40, i64* %38 monotonic, align 8
  br label %41

41:                                               ; preds = %29, %35
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.190"* dereferenceable(8) %32) #13
  %42 = getelementptr inbounds i8, i8* %7, i64 -4
  %43 = bitcast i8* %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = or i16 %44, 1
  store atomic i16 %45, i16* %43 release, align 2
  %46 = bitcast i8* %7 to %"class.blink::StreamStartAlgorithm"*
  ret %"class.blink::StreamStartAlgorithm"* %46
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StreamStartAlgorithm"* @_ZN5blink27CreateTrivialStartAlgorithmEv() local_unnamed_addr #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_20StreamStartAlgorithmEEEPhm(i64 8) #13
  %2 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_121TrivialStartAlgorithmE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds i8, i8* %1, i64 -4
  %4 = bitcast i8* %3 to i16*
  %5 = load atomic i16, i16* %4 monotonic, align 2
  %6 = or i16 %5, 1
  store atomic i16 %6, i16* %4 release, align 2
  %7 = bitcast i8* %1 to %"class.blink::StreamStartAlgorithm"*
  ret %"class.blink::StreamStartAlgorithm"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StreamAlgorithm"* @_ZN5blink28CreateTrivialStreamAlgorithmEv() local_unnamed_addr #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15StreamAlgorithmEEEPhm(i64 8) #13
  %2 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_122TrivialStreamAlgorithmE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds i8, i8* %1, i64 -4
  %4 = bitcast i8* %3 to i16*
  %5 = load atomic i16, i16* %4 monotonic, align 2
  %6 = or i16 %5, 1
  store atomic i16 %6, i16* %4 release, align 2
  %7 = bitcast i8* %1 to %"class.blink::StreamAlgorithm"*
  ret %"class.blink::StreamAlgorithm"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28CreateTrivialQueuingStrategyEPN2v87IsolateEm(%"class.blink::ScriptValue"* noalias sret, %"class.v8::Isolate"*, i64) local_unnamed_addr #0 {
  %4 = alloca %"class.v8::Local.203", align 8
  %5 = alloca %"class.v8::Local.193", align 8
  %6 = bitcast %"class.v8::Local.203"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.v8::Local.203", %"class.v8::Local.203"* %4, i64 0, i32 0
  store %"class.v8::Name"* inttoptr (i64 -6148914691236517206 to %"class.v8::Name"*), %"class.v8::Name"** %7, align 8
  %8 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %1, i8* nonnull getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i32 1, i32 13) #13
  %9 = icmp eq %"class.v8::String"* %8, null
  br i1 %9, label %10, label %11, !prof !2

10:                                               ; preds = %3
  tail call void @_ZN2v82V812ToLocalEmptyEv() #13
  br label %11

11:                                               ; preds = %3, %10
  %12 = bitcast %"class.v8::Local.203"* %4 to %"class.v8::String"**
  store %"class.v8::String"* %8, %"class.v8::String"** %12, align 8
  %13 = bitcast %"class.v8::Local.193"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #13
  %14 = uitofp i64 %2 to double
  %15 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %1, double %14) #13
  %16 = bitcast %"class.v8::Local.193"* %5 to %"class.v8::Number"**
  store %"class.v8::Number"* %15, %"class.v8::Number"** %16, align 8
  %17 = ptrtoint %"class.v8::Isolate"* %1 to i64
  %18 = add i64 %17, 176
  %19 = inttoptr i64 %18 to %"class.v8::Value"*
  %20 = call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateENS_5LocalINS_5ValueEEEPNS3_INS_4NameEEEPS5_m(%"class.v8::Isolate"* %1, %"class.v8::Value"* %19, %"class.v8::Local.203"* nonnull %4, %"class.v8::Local.193"* nonnull %5, i64 1) #13
  %21 = bitcast %"class.v8::Object"* %20 to %"class.v8::Value"*
  %22 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 0
  store %"class.v8::Isolate"* %1, %"class.v8::Isolate"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %23, %"class.v8::Isolate"* %1, %"class.v8::Value"* %21) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  ret void
}

declare %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"*, double) local_unnamed_addr #2

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateENS_5LocalINS_5ValueEEEPNS3_INS_4NameEEEPS5_m(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.v8::Local.203"*, %"class.v8::Local.193"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZN5blink11CallOrNoop1EPNS_11ScriptStateEN2v85LocalINS2_6ObjectEEEPKcS7_NS3_INS2_5ValueEEERNS_14ExceptionStateE(%"class.blink::ScriptState"* nocapture readonly, %"class.v8::Object"*, i8*, i8*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %7 = alloca %"class.v8::Local.193", align 8
  %8 = alloca %"class.v8::TryCatch", align 8
  %9 = getelementptr inbounds %"class.v8::Local.193", %"class.v8::Local.193"* %7, i64 0, i32 0
  store %"class.v8::Value"* %4, %"class.v8::Value"** %9, align 8
  %10 = tail call %"class.v8::Value"* @_ZN5blink13ResolveMethodEPNS_11ScriptStateEN2v85LocalINS2_6ObjectEEEPKcS7_RNS_14ExceptionStateE(%"class.blink::ScriptState"* %0, %"class.v8::Object"* %1, i8* %2, i8* %3, %"class.blink::ExceptionState"* dereferenceable(72) %5)
  %11 = icmp eq %"class.v8::Value"* %10, null
  br i1 %11, label %67, label %12

12:                                               ; preds = %6
  %13 = bitcast %"class.v8::Value"* %10 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, 3
  %16 = icmp eq i64 %15, 1
  br i1 %16, label %17, label %38

17:                                               ; preds = %12
  %18 = add i64 %14, -1
  %19 = inttoptr i64 %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = and i64 %14, -4294967296
  %22 = zext i32 %20 to i64
  %23 = or i64 %21, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load i16, i16* %25, align 2
  %27 = icmp eq i16 %26, 67
  br i1 %27, label %28, label %38

28:                                               ; preds = %17
  %29 = add i64 %14, 23
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, -2
  %33 = icmp eq i32 %32, 10
  br i1 %33, label %34, label %38

34:                                               ; preds = %28
  %35 = bitcast %"class.blink::ScriptState"* %0 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, 160
  br label %67

38:                                               ; preds = %17, %12, %28
  %39 = bitcast %"class.v8::TryCatch"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %39) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 48, i1 false)
  %40 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %41 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %40, align 8
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %8, %"class.v8::Isolate"* %41) #13
  %42 = bitcast %"class.v8::Value"* %10 to %"class.v8::Function"*
  %43 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %44 = load %"class.v8::Context"*, %"class.v8::Context"** %43, align 8
  %45 = icmp eq %"class.v8::Context"* %44, null
  br i1 %45, label %53, label %46

46:                                               ; preds = %38
  %47 = bitcast %"class.blink::ScriptState"* %0 to %"class.v8::internal::Isolate"**
  %48 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %47, align 8
  %49 = bitcast %"class.v8::Context"* %44 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %48, i64 %50) #13
  %52 = bitcast i64* %51 to %"class.v8::Context"*
  br label %53

53:                                               ; preds = %38, %46
  %54 = phi %"class.v8::Context"* [ %52, %46 ], [ null, %38 ]
  %55 = bitcast %"class.v8::Object"* %1 to %"class.v8::Value"*
  %56 = call %"class.v8::Value"* @_ZN2v88Function4CallENS_5LocalINS_7ContextEEENS1_INS_5ValueEEEiPS5_(%"class.v8::Function"* nonnull %42, %"class.v8::Context"* %54, %"class.v8::Value"* %55, i32 1, %"class.v8::Local.193"* nonnull %7) #13
  %57 = ptrtoint %"class.v8::Value"* %56 to i64
  %58 = icmp eq %"class.v8::Value"* %56, null
  br i1 %58, label %59, label %65

59:                                               ; preds = %53
  %60 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %8) #13
  %61 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %62 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %62, i64 5
  %64 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %63, align 8
  call void %64(%"class.blink::ExceptionState"* %5, %"class.v8::Value"* %60) #13
  br label %65

65:                                               ; preds = %53, %59
  %66 = phi i64 [ 0, %59 ], [ %57, %53 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %39) #13
  br label %67

67:                                               ; preds = %6, %65, %34
  %68 = phi i64 [ %37, %34 ], [ %66, %65 ], [ 0, %6 ]
  %69 = inttoptr i64 %68 to %"class.v8::Value"*
  ret %"class.v8::Value"* %69
}

declare %"class.v8::Value"* @_ZN2v88Function4CallENS_5LocalINS_7ContextEEENS1_INS_5ValueEEEiPS5_(%"class.v8::Function"*, %"class.v8::Context"*, %"class.v8::Value"*, i32, %"class.v8::Local.193"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZN5blink5Call1EPNS_11ScriptStateEN2v85LocalINS2_8FunctionEEENS3_INS2_6ObjectEEENS3_INS2_5ValueEEERNS_14ExceptionStateE(%"class.blink::ScriptState"* nocapture readonly, %"class.v8::Function"*, %"class.v8::Object"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %6 = alloca %"class.v8::Local.193", align 8
  %7 = alloca %"class.v8::TryCatch", align 8
  %8 = getelementptr inbounds %"class.v8::Local.193", %"class.v8::Local.193"* %6, i64 0, i32 0
  store %"class.v8::Value"* %3, %"class.v8::Value"** %8, align 8
  %9 = bitcast %"class.v8::TryCatch"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  %10 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %11 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %10, align 8
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %7, %"class.v8::Isolate"* %11) #13
  %12 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.v8::Context"*, %"class.v8::Context"** %12, align 8
  %14 = icmp eq %"class.v8::Context"* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %5
  %16 = bitcast %"class.blink::ScriptState"* %0 to %"class.v8::internal::Isolate"**
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %18 = bitcast %"class.v8::Context"* %13 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %17, i64 %19) #13
  %21 = bitcast i64* %20 to %"class.v8::Context"*
  br label %22

22:                                               ; preds = %5, %15
  %23 = phi %"class.v8::Context"* [ %21, %15 ], [ null, %5 ]
  %24 = bitcast %"class.v8::Object"* %2 to %"class.v8::Value"*
  %25 = call %"class.v8::Value"* @_ZN2v88Function4CallENS_5LocalINS_7ContextEEENS1_INS_5ValueEEEiPS5_(%"class.v8::Function"* %1, %"class.v8::Context"* %23, %"class.v8::Value"* %24, i32 1, %"class.v8::Local.193"* nonnull %6) #13
  %26 = ptrtoint %"class.v8::Value"* %25 to i64
  %27 = icmp eq %"class.v8::Value"* %25, null
  br i1 %27, label %28, label %34

28:                                               ; preds = %22
  %29 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #13
  %30 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %31 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %31, i64 5
  %33 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %32, align 8
  call void %33(%"class.blink::ExceptionState"* %4, %"class.v8::Value"* %29) #13
  br label %34

34:                                               ; preds = %22, %28
  %35 = phi i64 [ 0, %28 ], [ %26, %22 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #13
  %36 = inttoptr i64 %35 to %"class.v8::Value"*
  ret %"class.v8::Value"* %36
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Promise"* @_ZN5blink11PromiseCallEPNS_11ScriptStateEN2v85LocalINS2_8FunctionEEENS3_INS2_6ObjectEEEiPNS3_INS2_5ValueEEE(%"class.blink::ScriptState"* nocapture readonly, %"class.v8::Function"*, %"class.v8::Object"*, i32, %"class.v8::Local.193"*) local_unnamed_addr #0 {
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.v8::MicrotasksScope", align 8
  %8 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %9) #13
  %11 = bitcast %"class.v8::MicrotasksScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #13
  %12 = bitcast %"class.v8::MicrotasksScope"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %7, %"class.v8::Isolate"* %9, i32 1) #13
  %13 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.v8::Context"*, %"class.v8::Context"** %13, align 8
  %15 = icmp eq %"class.v8::Context"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %5
  %17 = bitcast %"class.blink::ScriptState"* %0 to %"class.v8::internal::Isolate"**
  %18 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %19 = bitcast %"class.v8::Context"* %14 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %18, i64 %20) #13
  %22 = bitcast i64* %21 to %"class.v8::Context"*
  br label %23

23:                                               ; preds = %5, %16
  %24 = phi %"class.v8::Context"* [ %22, %16 ], [ null, %5 ]
  %25 = bitcast %"class.v8::Object"* %2 to %"class.v8::Value"*
  %26 = call %"class.v8::Value"* @_ZN2v88Function4CallENS_5LocalINS_7ContextEEENS1_INS_5ValueEEEiPS5_(%"class.v8::Function"* %1, %"class.v8::Context"* %24, %"class.v8::Value"* %25, i32 %3, %"class.v8::Local.193"* %4) #13
  %27 = icmp eq %"class.v8::Value"* %26, null
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #13
  %30 = call fastcc %"class.v8::Promise"* @_ZN5blink12_GLOBAL__N_121PromiseRejectInternalEPNS_11ScriptStateEN2v85LocalINS3_5ValueEEEi(%"class.blink::ScriptState"* %0, %"class.v8::Value"* %29, i32 0) #13
  br label %33

31:                                               ; preds = %23
  %32 = call %"class.v8::Promise"* @_ZN5blink14PromiseResolveEPNS_11ScriptStateEN2v85LocalINS2_5ValueEEE(%"class.blink::ScriptState"* %0, %"class.v8::Value"* nonnull %26)
  br label %33

33:                                               ; preds = %31, %28
  %34 = phi %"class.v8::Promise"* [ %32, %31 ], [ %30, %28 ]
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #13
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #13
  ret %"class.v8::Promise"* %34
}

declare void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"*, %"class.v8::Isolate"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Promise"* @_ZN5blink13PromiseRejectEPNS_11ScriptStateEN2v85LocalINS2_5ValueEEE(%"class.blink::ScriptState"* nocapture readonly, %"class.v8::Value"*) local_unnamed_addr #0 {
  %3 = tail call fastcc %"class.v8::Promise"* @_ZN5blink12_GLOBAL__N_121PromiseRejectInternalEPNS_11ScriptStateEN2v85LocalINS3_5ValueEEEi(%"class.blink::ScriptState"* %0, %"class.v8::Value"* %1, i32 0)
  ret %"class.v8::Promise"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Promise"* @_ZN5blink14PromiseResolveEPNS_11ScriptStateEN2v85LocalINS2_5ValueEEE(%"class.blink::ScriptState"* nocapture readonly, %"class.v8::Value"*) local_unnamed_addr #0 {
  %3 = alloca %"class.v8::MicrotasksScope", align 8
  %4 = alloca %"class.v8::TryCatch", align 8
  %5 = tail call zeroext i1 @_ZNK2v85Value9IsPromiseEv(%"class.v8::Value"* %1) #13
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = bitcast %"class.v8::Value"* %1 to %"class.v8::Promise"*
  br label %40

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.v8::Context"*, %"class.v8::Context"** %9, align 8
  %11 = icmp eq %"class.v8::Context"* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.blink::ScriptState"* %0 to %"class.v8::internal::Isolate"**
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %15 = bitcast %"class.v8::Context"* %10 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %14, i64 %16) #13
  %18 = bitcast i64* %17 to %"class.v8::Context"*
  br label %19

19:                                               ; preds = %8, %12
  %20 = phi %"class.v8::Context"* [ %18, %12 ], [ null, %8 ]
  %21 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %22 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %21, align 8
  %23 = bitcast %"class.v8::MicrotasksScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #13
  %24 = bitcast %"class.v8::MicrotasksScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %3, %"class.v8::Isolate"* %22, i32 1) #13
  %25 = bitcast %"class.v8::TryCatch"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %25) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %4, %"class.v8::Isolate"* %22) #13
  %26 = call %"class.v8::Promise::Resolver"* @_ZN2v87Promise8Resolver3NewENS_5LocalINS_7ContextEEE(%"class.v8::Context"* %20) #13
  %27 = icmp eq %"class.v8::Promise::Resolver"* %26, null
  br i1 %27, label %28, label %29, !prof !2

28:                                               ; preds = %19
  call void @_ZN2v82V812ToLocalEmptyEv() #13
  br label %29

29:                                               ; preds = %19, %28
  %30 = call i16 @_ZN2v87Promise8Resolver7ResolveENS_5LocalINS_7ContextEEENS2_INS_5ValueEEE(%"class.v8::Promise::Resolver"* %26, %"class.v8::Context"* %20, %"class.v8::Value"* %1) #13
  %31 = trunc i16 %30 to i8
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %29
  %34 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %4) #13
  %35 = call fastcc %"class.v8::Promise"* @_ZN5blink12_GLOBAL__N_121PromiseRejectInternalEPNS_11ScriptStateEN2v85LocalINS3_5ValueEEEi(%"class.blink::ScriptState"* %0, %"class.v8::Value"* %34, i32 0) #13
  br label %38

36:                                               ; preds = %29
  %37 = call %"class.v8::Promise"* @_ZN2v87Promise8Resolver10GetPromiseEv(%"class.v8::Promise::Resolver"* %26) #13
  br label %38

38:                                               ; preds = %36, %33
  %39 = phi %"class.v8::Promise"* [ %35, %33 ], [ %37, %36 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %25) #13
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #13
  br label %40

40:                                               ; preds = %38, %6
  %41 = phi %"class.v8::Promise"* [ %7, %6 ], [ %39, %38 ]
  ret %"class.v8::Promise"* %41
}

; Function Attrs: nounwind
declare void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN5blink33ValidateAndNormalizeHighWaterMarkEdRNS_14ExceptionStateE(double, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %3 = fcmp ult double %0, 0.000000e+00
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %1, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.2, i64 0, i64 0)) #13
  br label %5

5:                                                ; preds = %2, %4
  %6 = phi double [ 0.000000e+00, %4 ], [ %0, %2 ]
  ret double %6
}

declare void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StrategySizeAlgorithm"* @_ZN5blink33MakeSizeAlgorithmFromSizeFunctionEPNS_11ScriptStateEN2v85LocalINS2_5ValueEEERNS_14ExceptionStateE(%"class.blink::ScriptState"* nocapture readonly, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %4 = bitcast %"class.v8::Value"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 3
  %7 = icmp eq i64 %6, 1
  br i1 %7, label %8, label %33

8:                                                ; preds = %3
  %9 = add i64 %5, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = and i64 %5, -4294967296
  %13 = zext i32 %11 to i64
  %14 = or i64 %12, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load i16, i16* %16, align 2
  %18 = icmp eq i16 %17, 67
  br i1 %18, label %19, label %33

19:                                               ; preds = %8
  %20 = add i64 %5, 23
  %21 = inttoptr i64 %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %22, -2
  %24 = icmp eq i32 %23, 10
  br i1 %24, label %25, label %33

25:                                               ; preds = %19
  %26 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21StrategySizeAlgorithmEEEPhm(i64 8) #13
  %27 = bitcast i8* %26 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_120DefaultSizeAlgorithmE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds i8, i8* %26, i64 -4
  %29 = bitcast i8* %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = or i16 %30, 1
  store atomic i16 %31, i16* %29 release, align 2
  %32 = bitcast i8* %26 to %"class.blink::StrategySizeAlgorithm"*
  br label %55

33:                                               ; preds = %8, %3, %19
  %34 = tail call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* %1) #13
  br i1 %34, label %36, label %35

35:                                               ; preds = %33
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.3, i64 0, i64 0)) #13
  br label %55

36:                                               ; preds = %33
  %37 = bitcast %"class.blink::ScriptState"* %0 to %"class.v8::internal::Isolate"**
  %38 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %37, align 8
  %39 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21StrategySizeAlgorithmEEEPhm(i64 16) #13
  %40 = bitcast i8* %39 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_123JavaScriptSizeAlgorithmE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds i8, i8* %39, i64 8
  %42 = bitcast i8* %41 to i64**
  store i64* null, i64** %42, align 8
  %43 = icmp eq %"class.v8::Value"* %1, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %36
  %45 = bitcast i8* %41 to i64*
  %46 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %38, i64* nonnull %4, i64* %45, i1 zeroext false) #13
  %47 = ptrtoint i64* %46 to i64
  store atomic i64 %47, i64* %45 monotonic, align 8
  br label %48

48:                                               ; preds = %36, %44
  %49 = bitcast i8* %41 to %"class.blink::TraceWrapperV8Reference.190"*
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.190"* dereferenceable(8) %49) #13
  %50 = getelementptr inbounds i8, i8* %39, i64 -4
  %51 = bitcast i8* %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = or i16 %52, 1
  store atomic i16 %53, i16* %51 release, align 2
  %54 = bitcast i8* %39 to %"class.blink::StrategySizeAlgorithm"*
  br label %55

55:                                               ; preds = %48, %35, %25
  %56 = phi %"class.blink::StrategySizeAlgorithm"* [ %32, %25 ], [ %54, %48 ], [ null, %35 ]
  ret %"class.blink::StrategySizeAlgorithm"* %56
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StrategySizeAlgorithm"* @_ZN5blink26CreateDefaultSizeAlgorithmEv() local_unnamed_addr #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21StrategySizeAlgorithmEEEPhm(i64 8) #13
  %2 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_120DefaultSizeAlgorithmE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds i8, i8* %1, i64 -4
  %4 = bitcast i8* %3 to i16*
  %5 = load atomic i16, i16* %4 monotonic, align 2
  %6 = or i16 %5, 1
  store atomic i16 %6, i16* %4 release, align 2
  %7 = bitcast i8* %1 to %"class.blink::StrategySizeAlgorithm"*
  ret %"class.blink::StrategySizeAlgorithm"* %7
}

declare zeroext i1 @_ZNK2v85Value9IsPromiseEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.v8::Promise::Resolver"* @_ZN2v87Promise8Resolver3NewENS_5LocalINS_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

declare i16 @_ZN2v87Promise8Resolver7ResolveENS_5LocalINS_7ContextEEENS2_INS_5ValueEEE(%"class.v8::Promise::Resolver"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #2

declare %"class.v8::Promise"* @_ZN2v87Promise8Resolver10GetPromiseEv(%"class.v8::Promise::Resolver"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Promise"* @_ZN5blink27PromiseResolveWithUndefinedEPNS_11ScriptStateE(%"class.blink::ScriptState"* nocapture readonly) local_unnamed_addr #0 {
  %2 = bitcast %"class.blink::ScriptState"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 160
  %5 = inttoptr i64 %4 to %"class.v8::Value"*
  %6 = tail call %"class.v8::Promise"* @_ZN5blink14PromiseResolveEPNS_11ScriptStateEN2v85LocalINS2_5ValueEEE(%"class.blink::ScriptState"* %0, %"class.v8::Value"* %5)
  ret %"class.v8::Promise"* %6
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.v8::Promise"* @_ZN5blink12_GLOBAL__N_121PromiseRejectInternalEPNS_11ScriptStateEN2v85LocalINS3_5ValueEEEi(%"class.blink::ScriptState"* nocapture readonly, %"class.v8::Value"*, i32) unnamed_addr #0 {
  %4 = alloca %"class.v8::MicrotasksScope", align 8
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.logging::LogMessage", align 8
  %7 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.v8::Context"*, %"class.v8::Context"** %7, align 8
  %9 = icmp eq %"class.v8::Context"* %8, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::ScriptState"* %0 to %"class.v8::internal::Isolate"**
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = bitcast %"class.v8::Context"* %8 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %12, i64 %14) #13
  %16 = bitcast i64* %15 to %"class.v8::Context"*
  br label %17

17:                                               ; preds = %3, %10
  %18 = phi %"class.v8::Context"* [ %16, %10 ], [ null, %3 ]
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %20 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %19, align 8
  %21 = bitcast %"class.v8::MicrotasksScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #13
  %22 = bitcast %"class.v8::MicrotasksScope"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %4, %"class.v8::Isolate"* %20, i32 1) #13
  %23 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %23) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %20) #13
  %24 = call %"class.v8::Promise::Resolver"* @_ZN2v87Promise8Resolver3NewENS_5LocalINS_7ContextEEE(%"class.v8::Context"* %18) #13
  %25 = icmp eq %"class.v8::Promise::Resolver"* %24, null
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  call void @_ZN2v82V812ToLocalEmptyEv() #13
  br label %27

27:                                               ; preds = %17, %26
  %28 = call i16 @_ZN2v87Promise8Resolver6RejectENS_5LocalINS_7ContextEEENS2_INS_5ValueEEE(%"class.v8::Promise::Resolver"* %24, %"class.v8::Context"* %18, %"class.v8::Value"* %1) #13
  %29 = trunc i16 %28 to i8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %27
  %32 = icmp sgt i32 %2, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %31
  %34 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 3) #13
  br i1 %34, label %35, label %40

35:                                               ; preds = %33
  %36 = bitcast %"class.logging::LogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %36) #13
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %6, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 47, i32 3) #13
  %37 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %6, i64 0, i32 2
  %38 = bitcast %"class.std::__1::basic_ostringstream"* %37 to %"class.std::__1::basic_ostream"*
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.9, i64 0, i64 0), i64 49) #13
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %36) #13
  br label %40

40:                                               ; preds = %35, %33, %31
  %41 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #13
  %42 = add nsw i32 %2, 1
  %43 = call fastcc %"class.v8::Promise"* @_ZN5blink12_GLOBAL__N_121PromiseRejectInternalEPNS_11ScriptStateEN2v85LocalINS3_5ValueEEEi(%"class.blink::ScriptState"* %0, %"class.v8::Value"* %41, i32 %42)
  br label %46

44:                                               ; preds = %27
  %45 = call %"class.v8::Promise"* @_ZN2v87Promise8Resolver10GetPromiseEv(%"class.v8::Promise::Resolver"* %24) #13
  br label %46

46:                                               ; preds = %44, %40
  %47 = phi %"class.v8::Promise"* [ %43, %40 ], [ %45, %44 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %23) #13
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #13
  ret %"class.v8::Promise"* %47
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ScriptValueToObjectEPNS_11ScriptStateENS_11ScriptValueEPN2v85LocalINS3_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptState"* nocapture readonly, %"class.blink::ScriptValue"*, %"class.v8::Local"* nocapture, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %1) #13
  %9 = bitcast %"class.v8::Value"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 3
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %13, label %33

13:                                               ; preds = %4
  %14 = add i64 %10, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i64 %10, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = icmp eq i16 %22, 67
  br i1 %23, label %24, label %33

24:                                               ; preds = %13
  %25 = add i64 %10, 23
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, -2
  %29 = icmp eq i32 %28, 10
  br i1 %29, label %30, label %33

30:                                               ; preds = %24
  %31 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %7) #13
  %32 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %2, i64 0, i32 0
  store %"class.v8::Object"* %31, %"class.v8::Object"** %32, align 8
  br label %58

33:                                               ; preds = %13, %4, %24
  %34 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %34) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %7) #13
  %35 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"class.v8::Context"*, %"class.v8::Context"** %35, align 8
  %37 = icmp eq %"class.v8::Context"* %36, null
  br i1 %37, label %45, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.blink::ScriptState"* %0 to %"class.v8::internal::Isolate"**
  %40 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %39, align 8
  %41 = bitcast %"class.v8::Context"* %36 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %40, i64 %42) #13
  %44 = bitcast i64* %43 to %"class.v8::Context"*
  br label %45

45:                                               ; preds = %33, %38
  %46 = phi %"class.v8::Context"* [ %44, %38 ], [ null, %33 ]
  %47 = call %"class.v8::Object"* @_ZNK2v85Value8ToObjectENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %8, %"class.v8::Context"* %46) #13
  %48 = ptrtoint %"class.v8::Object"* %47 to i64
  %49 = bitcast %"class.v8::Local"* %2 to i64*
  store i64 %48, i64* %49, align 8
  %50 = icmp eq %"class.v8::Object"* %47, null
  br i1 %50, label %51, label %57

51:                                               ; preds = %45
  %52 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #13
  %53 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %54 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %54, i64 5
  %56 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %55, align 8
  call void %56(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %52) #13
  br label %57

57:                                               ; preds = %45, %51
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %34) #13
  br label %58

58:                                               ; preds = %57, %30
  ret void
}

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #2

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Object"* @_ZNK2v85Value8ToObjectENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16StrategyUnpackerC2EPNS_11ScriptStateENS_11ScriptValueERNS_14ExceptionStateE(%"class.blink::StrategyUnpacker"* nocapture, %"class.blink::ScriptState"* nocapture readonly, %"class.blink::ScriptValue"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::Local", align 8
  %6 = alloca %"class.blink::ScriptValue", align 8
  %7 = alloca %"class.v8::TryCatch", align 8
  %8 = getelementptr inbounds %"class.blink::StrategyUnpacker", %"class.blink::StrategyUnpacker"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 0
  %10 = bitcast %"class.blink::StrategyUnpacker"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false)
  %11 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %12 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.v8::Context"*, %"class.v8::Context"** %12, align 8
  %14 = icmp eq %"class.v8::Context"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %4
  %16 = bitcast %"class.v8::Isolate"* %11 to %"class.v8::internal::Isolate"*
  %17 = bitcast %"class.v8::Context"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %16, i64 %18) #13
  %20 = bitcast i64* %19 to %"class.v8::Context"*
  br label %21

21:                                               ; preds = %4, %15
  %22 = phi %"class.v8::Context"* [ %20, %15 ], [ null, %4 ]
  %23 = bitcast %"class.v8::Local"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  %24 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %5, i64 0, i32 0
  store %"class.v8::Object"* null, %"class.v8::Object"** %24, align 8
  %25 = bitcast %"class.blink::ScriptValue"* %2 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.blink::ScriptValue"* %6 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 0, i32 1
  %29 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %28, i64 0, i32 0
  %30 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %30, align 8
  %31 = icmp eq %"class.blink::ScriptValue"* %6, %2
  br i1 %31, label %37, label %32

32:                                               ; preds = %21
  %33 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = icmp eq i64* %34, null
  br i1 %35, label %37, label %36

36:                                               ; preds = %32
  call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %33, i64** %30) #13
  br label %37

37:                                               ; preds = %36, %32, %21
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.190"* dereferenceable(8) %29) #13
  %38 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %2, i64 0, i32 1, i32 1, i32 0
  %39 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 0, i32 1, i32 1, i32 0
  store %"class.blink::DOMWrapperWorld"* %39, %"class.blink::DOMWrapperWorld"** %40, align 8
  %41 = icmp eq %"class.blink::DOMWrapperWorld"* %39, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %39, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %43) #13
  br label %44

44:                                               ; preds = %37, %42
  call void @_ZN5blink19ScriptValueToObjectEPNS_11ScriptStateENS_11ScriptValueEPN2v85LocalINS3_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptState"* %1, %"class.blink::ScriptValue"* nonnull %6, %"class.v8::Local"* nonnull %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %45 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %40, align 8
  %46 = icmp eq %"class.blink::DOMWrapperWorld"* %45, null
  br i1 %46, label %54, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #13
  %49 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %47
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %45) #13
  %53 = bitcast %"class.blink::DOMWrapperWorld"* %45 to i8*
  call void @free(i8* %53) #13
  br label %54

54:                                               ; preds = %44, %47, %52
  %55 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %93

58:                                               ; preds = %54
  %59 = bitcast %"class.v8::TryCatch"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %59) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %7, %"class.v8::Isolate"* %11) #13
  %60 = load %"class.v8::Object"*, %"class.v8::Object"** %24, align 8
  %61 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %11, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i32 1, i32 4) #13
  %62 = icmp eq %"class.v8::String"* %61, null
  br i1 %62, label %63, label %64, !prof !2

63:                                               ; preds = %58
  call void @_ZN2v82V812ToLocalEmptyEv() #13
  br label %64

64:                                               ; preds = %58, %63
  %65 = bitcast %"class.v8::String"* %61 to %"class.v8::Value"*
  %66 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %60, %"class.v8::Context"* %22, %"class.v8::Value"* %65) #13
  %67 = ptrtoint %"class.v8::Value"* %66 to i64
  %68 = bitcast %"class.blink::StrategyUnpacker"* %0 to i64*
  store i64 %67, i64* %68, align 8
  %69 = icmp eq %"class.v8::Value"* %66, null
  br i1 %69, label %70, label %76

70:                                               ; preds = %64
  %71 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #13
  %72 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %73 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %73, i64 5
  %75 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %74, align 8
  call void %75(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %71) #13
  br label %92

76:                                               ; preds = %64
  %77 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %11, i8* nonnull getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i32 1, i32 13) #13
  %78 = icmp eq %"class.v8::String"* %77, null
  br i1 %78, label %79, label %80, !prof !2

79:                                               ; preds = %76
  call void @_ZN2v82V812ToLocalEmptyEv() #13
  br label %80

80:                                               ; preds = %76, %79
  %81 = bitcast %"class.v8::String"* %77 to %"class.v8::Value"*
  %82 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %60, %"class.v8::Context"* %22, %"class.v8::Value"* %81) #13
  %83 = ptrtoint %"class.v8::Value"* %82 to i64
  %84 = bitcast %"class.v8::Local.193"* %8 to i64*
  store i64 %83, i64* %84, align 8
  %85 = icmp eq %"class.v8::Value"* %82, null
  br i1 %85, label %86, label %92

86:                                               ; preds = %80
  %87 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #13
  %88 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %89 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %89, i64 5
  %91 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %90, align 8
  call void %91(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %87) #13
  br label %92

92:                                               ; preds = %80, %86, %70
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %59) #13
  br label %93

93:                                               ; preds = %54, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StrategySizeAlgorithm"* @_ZNK5blink16StrategyUnpacker17MakeSizeAlgorithmEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::StrategyUnpacker"* nocapture readonly, %"class.blink::ScriptState"* nocapture readonly, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::StrategyUnpacker", %"class.blink::StrategyUnpacker"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.v8::Value"*, %"class.v8::Value"** %4, align 8
  %6 = tail call %"class.blink::StrategySizeAlgorithm"* @_ZN5blink33MakeSizeAlgorithmFromSizeFunctionEPNS_11ScriptStateEN2v85LocalINS2_5ValueEEERNS_14ExceptionStateE(%"class.blink::ScriptState"* %1, %"class.v8::Value"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::StrategySizeAlgorithm"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink16StrategyUnpacker16GetHighWaterMarkEPNS_11ScriptStateEiRNS_14ExceptionStateE(%"class.blink::StrategyUnpacker"* nocapture readonly, %"class.blink::ScriptState"* nocapture readonly, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = getelementptr inbounds %"class.blink::StrategyUnpacker", %"class.blink::StrategyUnpacker"* %0, i64 0, i32 1, i32 0
  %7 = bitcast %"class.v8::Value"** %6 to i64**
  %8 = load i64*, i64** %7, align 8
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 3
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %12, label %31

12:                                               ; preds = %4
  %13 = add i64 %9, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i64 %9, -4294967296
  %17 = zext i32 %15 to i64
  %18 = or i64 %16, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 67
  br i1 %22, label %23, label %31

23:                                               ; preds = %12
  %24 = add i64 %9, 23
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i32 %26, -2
  %28 = icmp eq i32 %27, 10
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  %30 = sitofp i32 %2 to double
  br label %62

31:                                               ; preds = %12, %4, %23
  %32 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 48, i1 false)
  %33 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 0
  %34 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %33, align 8
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %34) #13
  %35 = load %"class.v8::Value"*, %"class.v8::Value"** %6, align 8
  %36 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.v8::Context"*, %"class.v8::Context"** %36, align 8
  %38 = icmp eq %"class.v8::Context"* %37, null
  br i1 %38, label %46, label %39

39:                                               ; preds = %31
  %40 = bitcast %"class.blink::ScriptState"* %1 to %"class.v8::internal::Isolate"**
  %41 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %40, align 8
  %42 = bitcast %"class.v8::Context"* %37 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %43) #13
  %45 = bitcast i64* %44 to %"class.v8::Context"*
  br label %46

46:                                               ; preds = %31, %39
  %47 = phi %"class.v8::Context"* [ %45, %39 ], [ null, %31 ]
  %48 = call %"class.v8::Number"* @_ZNK2v85Value8ToNumberENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %35, %"class.v8::Context"* %47) #13
  %49 = icmp eq %"class.v8::Number"* %48, null
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #13
  %52 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %53 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %53, i64 5
  %55 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %54, align 8
  call void %55(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %51) #13
  br label %60

56:                                               ; preds = %46
  %57 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %48) #13
  %58 = fcmp ult double %57, 0.000000e+00
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.2, i64 0, i64 0)) #13
  br label %60

60:                                               ; preds = %59, %56, %50
  %61 = phi double [ 0.000000e+00, %50 ], [ 0.000000e+00, %59 ], [ %57, %56 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #13
  br label %62

62:                                               ; preds = %60, %29
  %63 = phi double [ %30, %29 ], [ %61, %60 ]
  ret double %63
}

declare %"class.v8::Number"* @_ZNK2v85Value8ToNumberENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #2

declare double @_ZNK2v86Number5ValueEv(%"class.v8::Number"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16StrategyUnpacker15IsSizeUndefinedEv(%"class.blink::StrategyUnpacker"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = bitcast %"class.blink::StrategyUnpacker"* %0 to i64**
  %3 = load i64*, i64** %2, align 8
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 3
  %6 = icmp eq i64 %5, 1
  br i1 %6, label %7, label %24

7:                                                ; preds = %1
  %8 = add i64 %4, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = and i64 %4, -4294967296
  %12 = zext i32 %10 to i64
  %13 = or i64 %11, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %16, 67
  br i1 %17, label %18, label %24

18:                                               ; preds = %7
  %19 = add i64 %4, 23
  %20 = inttoptr i64 %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, -2
  %23 = icmp eq i32 %22, 10
  br label %24

24:                                               ; preds = %1, %7, %18
  %25 = phi i1 [ %23, %18 ], [ false, %1 ], [ false, %7 ]
  ret i1 %25
}

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"*, %"class.v8::Isolate"*, %"class.v8::Value"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.scoped_refptr.202, %class.scoped_refptr.202* %4, i64 0, i32 0
  %6 = icmp eq %"class.v8::Value"* %2, null
  %7 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  br i1 %6, label %61, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %10 = bitcast %"class.v8::Value"* %2 to i64*
  %11 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %12 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  %13 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %11, i64* nonnull %10, i64* %12, i1 zeroext false) #13
  %14 = ptrtoint i64* %13 to i64
  store atomic i64 %14, i64* %12 monotonic, align 8
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.190"* dereferenceable(8) %9) #13
  %15 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %1) #13
  br i1 %15, label %16, label %38

16:                                               ; preds = %8
  %17 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #13
  %18 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %17) #13
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %18, i64 0, i32 2, i32 0
  %20 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %19, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #13
  br label %24

24:                                               ; preds = %22, %16
  %25 = ptrtoint %"class.blink::DOMWrapperWorld"* %20 to i64
  %26 = bitcast %class.scoped_refptr.202* %4 to i64*
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %25, i64* %26, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #13
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #13
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #13
  br label %36

36:                                               ; preds = %24, %29, %34
  %37 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  tail call void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32) %37, %"class.v8::Value"* nonnull %2) #13
  br label %61

38:                                               ; preds = %8
  %39 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %2) #13
  br i1 %39, label %40, label %61

40:                                               ; preds = %38
  %41 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %42 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* nonnull %41) #13
  %43 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %42)
  %44 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %43, i64 0, i32 2, i32 0
  %45 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %44, align 8
  %46 = icmp eq %"class.blink::DOMWrapperWorld"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #13
  br label %49

49:                                               ; preds = %47, %40
  %50 = ptrtoint %"class.blink::DOMWrapperWorld"* %45 to i64
  %51 = bitcast %class.scoped_refptr.202* %4 to i64*
  %52 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %50, i64* %51, align 8
  %53 = icmp eq %"class.blink::DOMWrapperWorld"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #13
  %56 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %52) #13
  %60 = bitcast %"class.blink::DOMWrapperWorld"* %52 to i8*
  tail call void @free(i8* %60) #13
  br label %61

61:                                               ; preds = %59, %54, %49, %38, %3, %36
  ret void
}

declare zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.5, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0)) #13
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.5, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0)) #13
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #13
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.190"* dereferenceable(8)) local_unnamed_addr #2

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i16 @_ZN2v87Promise8Resolver6RejectENS_5LocalINS_7ContextEEENS2_INS_5ValueEEE(%"class.v8::Promise::Resolver"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #2

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #15
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

declare void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64**, i64**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15StreamAlgorithmEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15StreamAlgorithmEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15StreamAlgorithmEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.185"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15StreamAlgorithmEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.185"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15StreamAlgorithmEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #8 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #13
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %21, i8* %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #13
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15StreamAlgorithmEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StreamAlgorithm"*
  %4 = bitcast i8* %1 to void (%"class.blink::StreamAlgorithm"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::StreamAlgorithm"*, %"class.blink::Visitor"*)**, void (%"class.blink::StreamAlgorithm"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::StreamAlgorithm"*, %"class.blink::Visitor"*)*, void (%"class.blink::StreamAlgorithm"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::StreamAlgorithm"*, %"class.blink::Visitor"*)*, void (%"class.blink::StreamAlgorithm"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::StreamAlgorithm"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15StreamAlgorithmEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::StreamAlgorithm"*
  %3 = bitcast i8* %0 to void (%"class.blink::StreamAlgorithm"*)***
  %4 = load void (%"class.blink::StreamAlgorithm"*)**, void (%"class.blink::StreamAlgorithm"*)*** %3, align 8
  %5 = load void (%"class.blink::StreamAlgorithm"*)*, void (%"class.blink::StreamAlgorithm"*)** %4, align 8
  tail call void %5(%"class.blink::StreamAlgorithm"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15StreamAlgorithmEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.185"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15StreamAlgorithmD2Ev(%"class.blink::StreamAlgorithm"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122TrivialStreamAlgorithmD0Ev(%"class.blink::(anonymous namespace)::TrivialStreamAlgorithm"* nocapture) unnamed_addr #9 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.v8::Promise"* @_ZN5blink12_GLOBAL__N_122TrivialStreamAlgorithm3RunEPNS_11ScriptStateEiPN2v85LocalINS4_5ValueEEE(%"class.blink::(anonymous namespace)::TrivialStreamAlgorithm"* nocapture readnone, %"class.blink::ScriptState"* nocapture readonly, i32, %"class.v8::Local.193"* nocapture readnone) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.blink::ScriptState"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 160
  %8 = inttoptr i64 %7 to %"class.v8::Value"*
  %9 = tail call %"class.v8::Promise"* @_ZN5blink14PromiseResolveEPNS_11ScriptStateEN2v85LocalINS2_5ValueEEE(%"class.blink::ScriptState"* %1, %"class.v8::Value"* %8) #13
  ret %"class.v8::Promise"* %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink15StreamAlgorithm5TraceEPNS_7VisitorE(%"class.blink::StreamAlgorithm"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #11

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.244", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.244"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.244", %"class.WTF::StringTypeAdapter.244"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.244"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.244"* nonnull %4, i8* %21) #13
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0), i8* %30, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.15, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0), i8* %46, i8* %47) #13
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.15, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #13
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #13
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #13
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.244"*, i8*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.243"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.244"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.243"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.244"*, i16*) local_unnamed_addr #2

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_140JavaScriptStreamAlgorithmWithoutExtraArgD0Ev(%"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithoutExtraArg"* nocapture) unnamed_addr #9 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.v8::Promise"* @_ZN5blink12_GLOBAL__N_140JavaScriptStreamAlgorithmWithoutExtraArg3RunEPNS_11ScriptStateEiPN2v85LocalINS4_5ValueEEE(%"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithoutExtraArg"* nocapture readonly, %"class.blink::ScriptState"* nocapture readonly, i32, %"class.v8::Local.193"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 0
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithoutExtraArg", %"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithoutExtraArg"* %0, i64 0, i32 2
  %8 = bitcast %"class.blink::TraceWrapperV8Reference.196"* %7 to %"class.v8::Function"**
  %9 = load %"class.v8::Function"*, %"class.v8::Function"** %8, align 8
  %10 = icmp eq %"class.v8::Function"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.v8::Function"* %9 to i64*
  %13 = bitcast %"class.v8::Isolate"* %6 to %"class.v8::internal::Isolate"*
  %14 = load i64, i64* %12, align 8
  %15 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %13, i64 %14) #13
  %16 = bitcast i64* %15 to %"class.v8::Function"*
  br label %17

17:                                               ; preds = %4, %11
  %18 = phi %"class.v8::Function"* [ %16, %11 ], [ null, %4 ]
  %19 = getelementptr inbounds %"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithoutExtraArg", %"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithoutExtraArg"* %0, i64 0, i32 1
  %20 = bitcast %"class.blink::TraceWrapperV8Reference"* %19 to %"class.v8::Object"**
  %21 = load %"class.v8::Object"*, %"class.v8::Object"** %20, align 8
  %22 = icmp eq %"class.v8::Object"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %17
  %24 = bitcast %"class.v8::Object"* %21 to i64*
  %25 = bitcast %"class.v8::Isolate"* %6 to %"class.v8::internal::Isolate"*
  %26 = load i64, i64* %24, align 8
  %27 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %25, i64 %26) #13
  %28 = bitcast i64* %27 to %"class.v8::Object"*
  br label %29

29:                                               ; preds = %17, %23
  %30 = phi %"class.v8::Object"* [ %28, %23 ], [ null, %17 ]
  %31 = tail call %"class.v8::Promise"* @_ZN5blink11PromiseCallEPNS_11ScriptStateEN2v85LocalINS2_8FunctionEEENS3_INS2_6ObjectEEEiPNS3_INS2_5ValueEEE(%"class.blink::ScriptState"* %1, %"class.v8::Function"* %18, %"class.v8::Object"* %30, i32 %2, %"class.v8::Local.193"* %3)
  ret %"class.v8::Promise"* %31
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_140JavaScriptStreamAlgorithmWithoutExtraArg5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithoutExtraArg"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithoutExtraArg", %"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithoutExtraArg"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::TraceWrapperV8Reference"* %3 to %"class.blink::TraceWrapperV8Reference.190"*
  %5 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)***
  %6 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)** %6, i64 7
  %8 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)** %7, align 8
  tail call void %8(%"class.blink::Visitor"* %1, %"class.blink::TraceWrapperV8Reference.190"* dereferenceable(8) %4) #13
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithoutExtraArg", %"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithoutExtraArg"* %0, i64 0, i32 2
  %10 = bitcast %"class.blink::TraceWrapperV8Reference.196"* %9 to %"class.blink::TraceWrapperV8Reference.190"*
  %11 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*** %5, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)** %11, i64 7
  %13 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, %"class.blink::TraceWrapperV8Reference.190"* dereferenceable(8) %10) #13
  ret void
}

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_137JavaScriptStreamAlgorithmWithExtraArgD0Ev(%"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithExtraArg"* nocapture) unnamed_addr #9 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.v8::Promise"* @_ZN5blink12_GLOBAL__N_137JavaScriptStreamAlgorithmWithExtraArg3RunEPNS_11ScriptStateEiPN2v85LocalINS4_5ValueEEE(%"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithExtraArg"* nocapture readonly, %"class.blink::ScriptState"* nocapture readonly, i32, %"class.v8::Local.193"* nocapture readonly) unnamed_addr #0 align 2 {
  %5 = alloca [2 x %"class.v8::Local.193"], align 16
  %6 = bitcast [2 x %"class.v8::Local.193"]* %5 to i8*
  %7 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 0
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  %9 = getelementptr inbounds [2 x %"class.v8::Local.193"], [2 x %"class.v8::Local.193"]* %5, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 0, i64 16, i1 false)
  %10 = icmp eq i32 %2, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.v8::Local.193"* %3 to i64*
  %13 = bitcast [2 x %"class.v8::Local.193"]* %5 to i64*
  %14 = load i64, i64* %12, align 8
  store i64 %14, i64* %13, align 16
  br label %15

15:                                               ; preds = %4, %11
  %16 = getelementptr inbounds %"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithExtraArg", %"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithExtraArg"* %0, i64 0, i32 3
  %17 = bitcast %"class.blink::TraceWrapperV8Reference.190"* %16 to %"class.v8::Value"**
  %18 = load %"class.v8::Value"*, %"class.v8::Value"** %17, align 8
  %19 = icmp eq %"class.v8::Value"* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %15
  %21 = bitcast %"class.v8::Value"* %18 to i64*
  %22 = bitcast %"class.v8::Isolate"* %8 to %"class.v8::internal::Isolate"*
  %23 = load i64, i64* %21, align 8
  %24 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %22, i64 %23) #13
  %25 = bitcast i64* %24 to %"class.v8::Value"*
  br label %26

26:                                               ; preds = %15, %20
  %27 = phi %"class.v8::Value"* [ %25, %20 ], [ null, %15 ]
  %28 = sext i32 %2 to i64
  %29 = getelementptr inbounds [2 x %"class.v8::Local.193"], [2 x %"class.v8::Local.193"]* %5, i64 0, i64 %28, i32 0
  store %"class.v8::Value"* %27, %"class.v8::Value"** %29, align 8
  %30 = add nsw i32 %2, 1
  %31 = getelementptr inbounds %"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithExtraArg", %"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithExtraArg"* %0, i64 0, i32 2
  %32 = bitcast %"class.blink::TraceWrapperV8Reference.196"* %31 to %"class.v8::Function"**
  %33 = load %"class.v8::Function"*, %"class.v8::Function"** %32, align 8
  %34 = icmp eq %"class.v8::Function"* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %26
  %36 = bitcast %"class.v8::Function"* %33 to i64*
  %37 = bitcast %"class.v8::Isolate"* %8 to %"class.v8::internal::Isolate"*
  %38 = load i64, i64* %36, align 8
  %39 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %37, i64 %38) #13
  %40 = bitcast i64* %39 to %"class.v8::Function"*
  br label %41

41:                                               ; preds = %26, %35
  %42 = phi %"class.v8::Function"* [ %40, %35 ], [ null, %26 ]
  %43 = getelementptr inbounds %"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithExtraArg", %"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithExtraArg"* %0, i64 0, i32 1
  %44 = bitcast %"class.blink::TraceWrapperV8Reference"* %43 to %"class.v8::Object"**
  %45 = load %"class.v8::Object"*, %"class.v8::Object"** %44, align 8
  %46 = icmp eq %"class.v8::Object"* %45, null
  br i1 %46, label %53, label %47

47:                                               ; preds = %41
  %48 = bitcast %"class.v8::Object"* %45 to i64*
  %49 = bitcast %"class.v8::Isolate"* %8 to %"class.v8::internal::Isolate"*
  %50 = load i64, i64* %48, align 8
  %51 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %49, i64 %50) #13
  %52 = bitcast i64* %51 to %"class.v8::Object"*
  br label %53

53:                                               ; preds = %41, %47
  %54 = phi %"class.v8::Object"* [ %52, %47 ], [ null, %41 ]
  %55 = call %"class.v8::Promise"* @_ZN5blink11PromiseCallEPNS_11ScriptStateEN2v85LocalINS2_8FunctionEEENS3_INS2_6ObjectEEEiPNS3_INS2_5ValueEEE(%"class.blink::ScriptState"* %1, %"class.v8::Function"* %42, %"class.v8::Object"* %54, i32 %30, %"class.v8::Local.193"* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.v8::Promise"* %55
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_137JavaScriptStreamAlgorithmWithExtraArg5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithExtraArg"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithExtraArg", %"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithExtraArg"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::TraceWrapperV8Reference"* %3 to %"class.blink::TraceWrapperV8Reference.190"*
  %5 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)***
  %6 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)** %6, i64 7
  %8 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)** %7, align 8
  tail call void %8(%"class.blink::Visitor"* %1, %"class.blink::TraceWrapperV8Reference.190"* dereferenceable(8) %4) #13
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithExtraArg", %"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithExtraArg"* %0, i64 0, i32 2
  %10 = bitcast %"class.blink::TraceWrapperV8Reference.196"* %9 to %"class.blink::TraceWrapperV8Reference.190"*
  %11 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*** %5, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)** %11, i64 7
  %13 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, %"class.blink::TraceWrapperV8Reference.190"* dereferenceable(8) %10) #13
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithExtraArg", %"class.blink::(anonymous namespace)::JavaScriptStreamAlgorithmWithExtraArg"* %0, i64 0, i32 3
  %15 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*** %5, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)** %15, i64 7
  %17 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, %"class.blink::TraceWrapperV8Reference.190"* dereferenceable(8) %14) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_20StreamStartAlgorithmEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20StreamStartAlgorithmEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20StreamStartAlgorithmEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.185"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20StreamStartAlgorithmEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.185"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20StreamStartAlgorithmEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20StreamStartAlgorithmEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StreamStartAlgorithm"*
  %4 = bitcast i8* %1 to void (%"class.blink::StreamStartAlgorithm"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::StreamStartAlgorithm"*, %"class.blink::Visitor"*)**, void (%"class.blink::StreamStartAlgorithm"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::StreamStartAlgorithm"*, %"class.blink::Visitor"*)*, void (%"class.blink::StreamStartAlgorithm"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::StreamStartAlgorithm"*, %"class.blink::Visitor"*)*, void (%"class.blink::StreamStartAlgorithm"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::StreamStartAlgorithm"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20StreamStartAlgorithmEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::StreamStartAlgorithm"*
  %3 = bitcast i8* %0 to void (%"class.blink::StreamStartAlgorithm"*)***
  %4 = load void (%"class.blink::StreamStartAlgorithm"*)**, void (%"class.blink::StreamStartAlgorithm"*)*** %3, align 8
  %5 = load void (%"class.blink::StreamStartAlgorithm"*)*, void (%"class.blink::StreamStartAlgorithm"*)** %4, align 8
  tail call void %5(%"class.blink::StreamStartAlgorithm"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20StreamStartAlgorithmEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_130JavaScriptStreamStartAlgorithmD0Ev(%"class.blink::(anonymous namespace)::JavaScriptStreamStartAlgorithm"* nocapture) unnamed_addr #9 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.v8::Promise"* @_ZN5blink12_GLOBAL__N_130JavaScriptStreamStartAlgorithm3RunEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::(anonymous namespace)::JavaScriptStreamStartAlgorithm"* nocapture readonly, %"class.blink::ScriptState"* nocapture readonly, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 0
  %5 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::JavaScriptStreamStartAlgorithm", %"class.blink::(anonymous namespace)::JavaScriptStreamStartAlgorithm"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::TraceWrapperV8Reference"* %6 to %"class.v8::Object"**
  %8 = load %"class.v8::Object"*, %"class.v8::Object"** %7, align 8
  %9 = icmp eq %"class.v8::Object"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.v8::Object"* %8 to i64*
  %12 = bitcast %"class.v8::Isolate"* %5 to %"class.v8::internal::Isolate"*
  %13 = load i64, i64* %11, align 8
  %14 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %12, i64 %13) #13
  %15 = bitcast i64* %14 to %"class.v8::Object"*
  br label %16

16:                                               ; preds = %3, %10
  %17 = phi %"class.v8::Object"* [ %15, %10 ], [ null, %3 ]
  %18 = getelementptr inbounds %"class.blink::(anonymous namespace)::JavaScriptStreamStartAlgorithm", %"class.blink::(anonymous namespace)::JavaScriptStreamStartAlgorithm"* %0, i64 0, i32 2
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.blink::(anonymous namespace)::JavaScriptStreamStartAlgorithm", %"class.blink::(anonymous namespace)::JavaScriptStreamStartAlgorithm"* %0, i64 0, i32 3
  %21 = bitcast %"class.blink::TraceWrapperV8Reference.190"* %20 to %"class.v8::Value"**
  %22 = load %"class.v8::Value"*, %"class.v8::Value"** %21, align 8
  %23 = icmp eq %"class.v8::Value"* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %16
  %25 = bitcast %"class.v8::Value"* %22 to i64*
  %26 = bitcast %"class.v8::Isolate"* %5 to %"class.v8::internal::Isolate"*
  %27 = load i64, i64* %25, align 8
  %28 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %26, i64 %27) #13
  %29 = bitcast i64* %28 to %"class.v8::Value"*
  br label %30

30:                                               ; preds = %16, %24
  %31 = phi %"class.v8::Value"* [ %29, %24 ], [ null, %16 ]
  %32 = tail call %"class.v8::Value"* @_ZN5blink11CallOrNoop1EPNS_11ScriptStateEN2v85LocalINS2_6ObjectEEEPKcS7_NS3_INS2_5ValueEEERNS_14ExceptionStateE(%"class.blink::ScriptState"* %1, %"class.v8::Object"* %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0), i8* %19, %"class.v8::Value"* %31, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %30
  %37 = icmp eq %"class.v8::Value"* %32, null
  br i1 %37, label %38, label %39

38:                                               ; preds = %36
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i64 0, i64 0)) #13
  br label %41

39:                                               ; preds = %36
  %40 = tail call %"class.v8::Promise"* @_ZN5blink14PromiseResolveEPNS_11ScriptStateEN2v85LocalINS2_5ValueEEE(%"class.blink::ScriptState"* %1, %"class.v8::Value"* nonnull %32)
  br label %41

41:                                               ; preds = %30, %38, %39
  %42 = phi %"class.v8::Promise"* [ null, %30 ], [ %40, %39 ], [ null, %38 ]
  ret %"class.v8::Promise"* %42
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_130JavaScriptStreamStartAlgorithm5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::JavaScriptStreamStartAlgorithm"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::JavaScriptStreamStartAlgorithm", %"class.blink::(anonymous namespace)::JavaScriptStreamStartAlgorithm"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::TraceWrapperV8Reference"* %3 to %"class.blink::TraceWrapperV8Reference.190"*
  %5 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)***
  %6 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)** %6, i64 7
  %8 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)** %7, align 8
  tail call void %8(%"class.blink::Visitor"* %1, %"class.blink::TraceWrapperV8Reference.190"* dereferenceable(8) %4) #13
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::JavaScriptStreamStartAlgorithm", %"class.blink::(anonymous namespace)::JavaScriptStreamStartAlgorithm"* %0, i64 0, i32 3
  %10 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*** %5, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)** %10, i64 7
  %12 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, %"class.blink::TraceWrapperV8Reference.190"* dereferenceable(8) %9) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink20StreamStartAlgorithm5TraceEPNS_7VisitorE(%"class.blink::StreamStartAlgorithm"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_134JavaScriptByteStreamStartAlgorithmD0Ev(%"class.blink::(anonymous namespace)::JavaScriptByteStreamStartAlgorithm"* nocapture) unnamed_addr #9 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.v8::Promise"* @_ZN5blink12_GLOBAL__N_134JavaScriptByteStreamStartAlgorithm3RunEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::(anonymous namespace)::JavaScriptByteStreamStartAlgorithm"* nocapture readonly, %"class.blink::ScriptState"* nocapture readonly, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 0
  %5 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::JavaScriptByteStreamStartAlgorithm", %"class.blink::(anonymous namespace)::JavaScriptByteStreamStartAlgorithm"* %0, i64 0, i32 2
  %7 = bitcast %"class.blink::TraceWrapperV8Reference.196"* %6 to %"class.v8::Function"**
  %8 = load %"class.v8::Function"*, %"class.v8::Function"** %7, align 8
  %9 = icmp eq %"class.v8::Function"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.v8::Function"* %8 to i64*
  %12 = bitcast %"class.v8::Isolate"* %5 to %"class.v8::internal::Isolate"*
  %13 = load i64, i64* %11, align 8
  %14 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %12, i64 %13) #13
  %15 = bitcast i64* %14 to %"class.v8::Function"*
  br label %16

16:                                               ; preds = %3, %10
  %17 = phi %"class.v8::Function"* [ %15, %10 ], [ null, %3 ]
  %18 = getelementptr inbounds %"class.blink::(anonymous namespace)::JavaScriptByteStreamStartAlgorithm", %"class.blink::(anonymous namespace)::JavaScriptByteStreamStartAlgorithm"* %0, i64 0, i32 1
  %19 = bitcast %"class.blink::TraceWrapperV8Reference"* %18 to %"class.v8::Object"**
  %20 = load %"class.v8::Object"*, %"class.v8::Object"** %19, align 8
  %21 = icmp eq %"class.v8::Object"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.v8::Object"* %20 to i64*
  %24 = bitcast %"class.v8::Isolate"* %5 to %"class.v8::internal::Isolate"*
  %25 = load i64, i64* %23, align 8
  %26 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %24, i64 %25) #13
  %27 = bitcast i64* %26 to %"class.v8::Object"*
  br label %28

28:                                               ; preds = %16, %22
  %29 = phi %"class.v8::Object"* [ %27, %22 ], [ null, %16 ]
  %30 = getelementptr inbounds %"class.blink::(anonymous namespace)::JavaScriptByteStreamStartAlgorithm", %"class.blink::(anonymous namespace)::JavaScriptByteStreamStartAlgorithm"* %0, i64 0, i32 3
  %31 = bitcast %"class.blink::TraceWrapperV8Reference.190"* %30 to %"class.v8::Value"**
  %32 = load %"class.v8::Value"*, %"class.v8::Value"** %31, align 8
  %33 = icmp eq %"class.v8::Value"* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %28
  %35 = bitcast %"class.v8::Value"* %32 to i64*
  %36 = bitcast %"class.v8::Isolate"* %5 to %"class.v8::internal::Isolate"*
  %37 = load i64, i64* %35, align 8
  %38 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %36, i64 %37) #13
  %39 = bitcast i64* %38 to %"class.v8::Value"*
  br label %40

40:                                               ; preds = %28, %34
  %41 = phi %"class.v8::Value"* [ %39, %34 ], [ null, %28 ]
  %42 = tail call %"class.v8::Value"* @_ZN5blink5Call1EPNS_11ScriptStateEN2v85LocalINS2_8FunctionEEENS3_INS2_6ObjectEEENS3_INS2_5ValueEEERNS_14ExceptionStateE(%"class.blink::ScriptState"* %1, %"class.v8::Function"* %17, %"class.v8::Object"* %29, %"class.v8::Value"* %41, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %51

46:                                               ; preds = %40
  %47 = icmp eq %"class.v8::Value"* %42, null
  br i1 %47, label %48, label %49

48:                                               ; preds = %46
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i64 0, i64 0)) #13
  br label %51

49:                                               ; preds = %46
  %50 = tail call %"class.v8::Promise"* @_ZN5blink14PromiseResolveEPNS_11ScriptStateEN2v85LocalINS2_5ValueEEE(%"class.blink::ScriptState"* %1, %"class.v8::Value"* nonnull %42)
  br label %51

51:                                               ; preds = %40, %48, %49
  %52 = phi %"class.v8::Promise"* [ null, %40 ], [ %50, %49 ], [ null, %48 ]
  ret %"class.v8::Promise"* %52
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_134JavaScriptByteStreamStartAlgorithm5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::JavaScriptByteStreamStartAlgorithm"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::JavaScriptByteStreamStartAlgorithm", %"class.blink::(anonymous namespace)::JavaScriptByteStreamStartAlgorithm"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::TraceWrapperV8Reference"* %3 to %"class.blink::TraceWrapperV8Reference.190"*
  %5 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)***
  %6 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)** %6, i64 7
  %8 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)** %7, align 8
  tail call void %8(%"class.blink::Visitor"* %1, %"class.blink::TraceWrapperV8Reference.190"* dereferenceable(8) %4) #13
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::JavaScriptByteStreamStartAlgorithm", %"class.blink::(anonymous namespace)::JavaScriptByteStreamStartAlgorithm"* %0, i64 0, i32 2
  %10 = bitcast %"class.blink::TraceWrapperV8Reference.196"* %9 to %"class.blink::TraceWrapperV8Reference.190"*
  %11 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*** %5, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)** %11, i64 7
  %13 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, %"class.blink::TraceWrapperV8Reference.190"* dereferenceable(8) %10) #13
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::JavaScriptByteStreamStartAlgorithm", %"class.blink::(anonymous namespace)::JavaScriptByteStreamStartAlgorithm"* %0, i64 0, i32 3
  %15 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*** %5, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)** %15, i64 7
  %17 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, %"class.blink::TraceWrapperV8Reference.190"* dereferenceable(8) %14) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20StreamStartAlgorithmD2Ev(%"class.blink::StreamStartAlgorithm"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121TrivialStartAlgorithmD0Ev(%"class.blink::(anonymous namespace)::TrivialStartAlgorithm"* nocapture) unnamed_addr #9 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.v8::Promise"* @_ZN5blink12_GLOBAL__N_121TrivialStartAlgorithm3RunEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::(anonymous namespace)::TrivialStartAlgorithm"* nocapture readnone, %"class.blink::ScriptState"* nocapture readonly, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::ScriptState"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 160
  %7 = inttoptr i64 %6 to %"class.v8::Value"*
  %8 = tail call %"class.v8::Promise"* @_ZN5blink14PromiseResolveEPNS_11ScriptStateEN2v85LocalINS2_5ValueEEE(%"class.blink::ScriptState"* %1, %"class.v8::Value"* %7) #13
  ret %"class.v8::Promise"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_21StrategySizeAlgorithmEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_21StrategySizeAlgorithmEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_21StrategySizeAlgorithmEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.185"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_21StrategySizeAlgorithmEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.185"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21StrategySizeAlgorithmEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21StrategySizeAlgorithmEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StrategySizeAlgorithm"*
  %4 = bitcast i8* %1 to void (%"class.blink::StrategySizeAlgorithm"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::StrategySizeAlgorithm"*, %"class.blink::Visitor"*)**, void (%"class.blink::StrategySizeAlgorithm"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::StrategySizeAlgorithm"*, %"class.blink::Visitor"*)*, void (%"class.blink::StrategySizeAlgorithm"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::StrategySizeAlgorithm"*, %"class.blink::Visitor"*)*, void (%"class.blink::StrategySizeAlgorithm"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::StrategySizeAlgorithm"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_21StrategySizeAlgorithmEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::StrategySizeAlgorithm"*
  %3 = bitcast i8* %0 to void (%"class.blink::StrategySizeAlgorithm"*)***
  %4 = load void (%"class.blink::StrategySizeAlgorithm"*)**, void (%"class.blink::StrategySizeAlgorithm"*)*** %3, align 8
  %5 = load void (%"class.blink::StrategySizeAlgorithm"*)*, void (%"class.blink::StrategySizeAlgorithm"*)** %4, align 8
  tail call void %5(%"class.blink::StrategySizeAlgorithm"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_21StrategySizeAlgorithmEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_120DefaultSizeAlgorithmD0Ev(%"class.blink::(anonymous namespace)::DefaultSizeAlgorithm"* nocapture) unnamed_addr #9 align 2 {
  ret void
}

; Function Attrs: nounwind readnone ssp uwtable
define internal { i8, double } @_ZN5blink12_GLOBAL__N_120DefaultSizeAlgorithm3RunEPNS_11ScriptStateEN2v85LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::(anonymous namespace)::DefaultSizeAlgorithm"* nocapture readnone, %"class.blink::ScriptState"* nocapture readnone, %"class.v8::Value"* nocapture readnone, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) unnamed_addr #12 align 2 {
  ret { i8, double } { i8 1, double 1.000000e+00 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink21StrategySizeAlgorithm5TraceEPNS_7VisitorE(%"class.blink::StrategySizeAlgorithm"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21StrategySizeAlgorithmD2Ev(%"class.blink::StrategySizeAlgorithm"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_123JavaScriptSizeAlgorithmD0Ev(%"class.blink::(anonymous namespace)::JavaScriptSizeAlgorithm"* nocapture) unnamed_addr #9 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal { i8, double } @_ZN5blink12_GLOBAL__N_123JavaScriptSizeAlgorithm3RunEPNS_11ScriptStateEN2v85LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::(anonymous namespace)::JavaScriptSizeAlgorithm"* nocapture readonly, %"class.blink::ScriptState"* nocapture readonly, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca [1 x %"class.v8::Local.193"], align 8
  %7 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 0
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.v8::Context"*, %"class.v8::Context"** %9, align 8
  %11 = icmp eq %"class.v8::Context"* %10, null
  %12 = bitcast %"class.v8::Isolate"* %8 to %"class.v8::internal::Isolate"*
  br i1 %11, label %18, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.v8::Context"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %12, i64 %15) #13
  %17 = bitcast i64* %16 to %"class.v8::Context"*
  br label %18

18:                                               ; preds = %4, %13
  %19 = phi %"class.v8::Context"* [ %17, %13 ], [ null, %4 ]
  %20 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %20) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %8) #13
  %21 = bitcast [1 x %"class.v8::Local.193"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  %22 = getelementptr inbounds [1 x %"class.v8::Local.193"], [1 x %"class.v8::Local.193"]* %6, i64 0, i64 0
  %23 = getelementptr inbounds [1 x %"class.v8::Local.193"], [1 x %"class.v8::Local.193"]* %6, i64 0, i64 0, i32 0
  store %"class.v8::Value"* %2, %"class.v8::Value"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::(anonymous namespace)::JavaScriptSizeAlgorithm", %"class.blink::(anonymous namespace)::JavaScriptSizeAlgorithm"* %0, i64 0, i32 1
  %25 = bitcast %"class.blink::TraceWrapperV8Reference.196"* %24 to %"class.v8::Function"**
  %26 = load %"class.v8::Function"*, %"class.v8::Function"** %25, align 8
  %27 = icmp eq %"class.v8::Function"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::Function"* %26 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %12, i64 %30) #13
  %32 = bitcast i64* %31 to %"class.v8::Function"*
  br label %33

33:                                               ; preds = %18, %28
  %34 = phi %"class.v8::Function"* [ %32, %28 ], [ null, %18 ]
  %35 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %36 = add i64 %35, 160
  %37 = inttoptr i64 %36 to %"class.v8::Value"*
  %38 = call %"class.v8::Value"* @_ZN2v88Function4CallENS_5LocalINS_7ContextEEENS1_INS_5ValueEEEiPS5_(%"class.v8::Function"* %34, %"class.v8::Context"* %19, %"class.v8::Value"* %37, i32 1, %"class.v8::Local.193"* nonnull %22) #13
  %39 = icmp eq %"class.v8::Value"* %38, null
  br i1 %39, label %40, label %46

40:                                               ; preds = %33
  %41 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #13
  %42 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %43 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %43, i64 5
  %45 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %44, align 8
  call void %45(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %41) #13
  br label %57

46:                                               ; preds = %33
  %47 = call %"class.v8::Number"* @_ZNK2v85Value8ToNumberENS_5LocalINS_7ContextEEE(%"class.v8::Value"* nonnull %38, %"class.v8::Context"* %19) #13
  %48 = icmp eq %"class.v8::Number"* %47, null
  br i1 %48, label %49, label %55

49:                                               ; preds = %46
  %50 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #13
  %51 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %52 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %52, i64 5
  %54 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %53, align 8
  call void %54(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %50) #13
  br label %57

55:                                               ; preds = %46
  %56 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %47) #13
  br label %57

57:                                               ; preds = %49, %55, %40
  %58 = phi i8 [ 0, %40 ], [ 1, %55 ], [ 0, %49 ]
  %59 = phi double [ undef, %40 ], [ %56, %55 ], [ undef, %49 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %20) #13
  %60 = insertvalue { i8, double } undef, i8 %58, 0
  %61 = insertvalue { i8, double } %60, double %59, 1
  ret { i8, double } %61
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_123JavaScriptSizeAlgorithm5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::JavaScriptSizeAlgorithm"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::JavaScriptSizeAlgorithm", %"class.blink::(anonymous namespace)::JavaScriptSizeAlgorithm"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::TraceWrapperV8Reference.196"* %3 to %"class.blink::TraceWrapperV8Reference.190"*
  %5 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)***
  %6 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)** %6, i64 7
  %8 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.190"*)** %7, align 8
  tail call void %8(%"class.blink::Visitor"* %1, %"class.blink::TraceWrapperV8Reference.190"* dereferenceable(8) %4) #13
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { nounwind readonly }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
