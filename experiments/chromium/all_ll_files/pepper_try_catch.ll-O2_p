; ModuleID = '../../content/renderer/pepper/pepper_try_catch.cc'
source_filename = "../../content/renderer/pepper/pepper_try_catch.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::PepperTryCatch" = type { i32 (...)**, %class.scoped_refptr, %"class.content::V8VarConverter"* }
%class.scoped_refptr = type { %"class.content::PepperPluginInstanceImpl"* }
%"class.content::PepperPluginInstanceImpl" = type { %"class.content::PepperPluginInstance", %"class.base::RefCounted", %"class.ppapi::PPB_Instance_Shared", %"class.cc::TextureLayerClient", %"class.content::RenderFrameObserver.base", %"class.content::mojom::PepperPluginInstance", %"class.content::RenderFrameImpl"*, %class.scoped_refptr.4, %"class.std::__1::unique_ptr", %class.scoped_refptr.4, %"class.std::__1::unique_ptr", i32, %"class.gfx::PointF", float, %"class.blink::WebPluginContainer"*, %class.scoped_refptr.8, i8, %class.GURL, %class.GURL, i8, i8, %"struct.ppapi::ViewData", %"struct.ppapi::ViewData", %"class.gfx::Rect", float, i8, %class.scoped_refptr.20, %"class.content::PepperGraphics2DHost"*, i8, i32, %"class.std::__1::unique_ptr.21", %struct.PPP_Find_Private_0_3*, %struct.PPP_InputEvent_0_1*, %struct.PPP_MouseLock_1_0*, %struct.PPP_Pdf_1_1*, %struct.PPP_Instance_Private_0_1*, %struct.PPP_TextInput_Dev_0_1*, i8, i8, %struct.PP_PrintSettings_Dev, %"class.printing::MetafileSkia"*, %"class.std::__1::vector", %class.scoped_refptr.32, %class.scoped_refptr.32, %struct.PPP_Printing_Dev_0_6*, %struct.PPP_Graphics3D_1_0*, %"class.std::__1::unique_ptr.34", i8, i8, %"class.blink::WebString", %"class.blink::WebString", %"class.blink::WebString", %"class.blink::WebString", %"class.gfx::Size", %"class.v8::Persistent", %"class.content::MessageChannel"*, %"class.cc::PaintImage", %"class.std::__1::set", i32, i32, %"class.absl::optional", i32, %"class.std::__1::basic_string", i64, i64, %class.scoped_refptr.70, %"class.std::__1::vector.86", %"class.std::__1::vector.86", %"class.blink::WebAssociatedURLLoaderClient"*, %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.99", i8, %"class.std::__1::basic_string.125", %"class.v8::Isolate"*, i8, %"class.std::__1::basic_string.125", %"struct.viz::TransferableResource", %class.scoped_refptr.20, %"struct.gpu::SyncToken", %"class.std::__1::vector.146", i8, i8, %"class.std::__1::unique_ptr.153", %"class.std::__1::basic_string.125", %"class.mojo::AssociatedRemote", %"class.mojo::AssociatedReceiver", %"class.base::WeakPtrFactory.238", %"class.base::WeakPtrFactory.238" }
%"class.content::PepperPluginInstance" = type { i32 (...)** }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.ppapi::PPB_Instance_Shared" = type { %"class.ppapi::thunk::PPB_Instance_API" }
%"class.ppapi::thunk::PPB_Instance_API" = type { i32 (...)** }
%"class.cc::TextureLayerClient" = type { i32 (...)** }
%"class.content::RenderFrameObserver.base" = type <{ %"class.IPC::Listener", %"class.IPC::Sender", %"class.content::RenderFrame"*, i32 }>
%"class.IPC::Listener" = type { i32 (...)** }
%"class.IPC::Sender" = type { i32 (...)** }
%"class.content::RenderFrame" = type <{ %"class.IPC::Listener", %"class.IPC::Sender", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.content::mojom::PepperPluginInstance" = type { i32 (...)** }
%"class.content::RenderFrameImpl" = type opaque
%class.scoped_refptr.4 = type { %"class.content::PluginModule"* }
%"class.content::PluginModule" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.ppapi::PPP_Instance_Combined"* }
%"struct.ppapi::PPP_Instance_Combined" = type opaque
%"class.gfx::PointF" = type { float, float }
%"class.blink::WebPluginContainer" = type opaque
%class.scoped_refptr.8 = type { %"class.cc::TextureLayer"* }
%"class.cc::TextureLayer" = type opaque
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.14" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %class.GURL* }
%"struct.ppapi::ViewData" = type { %struct.PP_Rect, i8, i8, %struct.PP_Rect, float, float, %struct.PP_Point }
%struct.PP_Rect = type { %struct.PP_Point, %struct.PP_Size }
%struct.PP_Size = type { i32, i32 }
%struct.PP_Point = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.content::PepperGraphics2DHost" = type opaque
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.ppapi::thunk::ResourceCreationAPI"* }
%"class.ppapi::thunk::ResourceCreationAPI" = type { i32 (...)** }
%struct.PPP_Find_Private_0_3 = type { i32 (i32, i8*, i32)*, void (i32, i32)*, void (i32)* }
%struct.PPP_InputEvent_0_1 = type { i32 (i32, i32)* }
%struct.PPP_MouseLock_1_0 = type { void (i32)* }
%struct.PPP_Pdf_1_1 = type { { i64, i64 } (i32, i64)*, void (i32, i32)*, i32 (i32, %struct.PP_PdfPrintPresetOptions_Dev*)*, void (i32)*, void (i32, %struct.PP_FloatPoint*)*, void (i32, %struct.PP_FloatPoint*)*, void (i32, %struct.PP_FloatPoint*, %struct.PP_FloatPoint*)*, i32 (i32)*, i32 (i32)*, void (i32, i8*)*, void (i32)*, i32 (i32)*, i32 (i32)*, void (i32)*, void (i32)*, void (i32, %struct.PP_PdfAccessibilityActionData*)*, i32 (i32, %struct.PP_PrintSettings_Dev*, %struct.PP_PdfPrintSettings_Dev*)* }
%struct.PP_PdfPrintPresetOptions_Dev = type { i32, i32, i32, i32, %struct.PP_Size }
%struct.PP_FloatPoint = type { float, float }
%struct.PP_PdfAccessibilityActionData = type { i32, i32, %struct.PP_Point, %struct.PP_Rect, i32, i32, i32, i32, %struct.PP_PdfPageCharacterIndex, %struct.PP_PdfPageCharacterIndex }
%struct.PP_PdfPageCharacterIndex = type { i32, i32 }
%struct.PP_PdfPrintSettings_Dev = type { i32, i32 }
%struct.PPP_Instance_Private_0_1 = type { { i64, i64 } (i32)* }
%struct.PPP_TextInput_Dev_0_1 = type { void (i32, i32)* }
%struct.PP_PrintSettings_Dev = type { %struct.PP_Rect, %struct.PP_Rect, %struct.PP_Size, i32, i32, i32, i32, i32 }
%"class.printing::MetafileSkia" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.PP_PrintPageNumberRange_Dev*, %struct.PP_PrintPageNumberRange_Dev*, %"class.std::__1::__compressed_pair.27" }
%struct.PP_PrintPageNumberRange_Dev = type { i32, i32 }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %struct.PP_PrintPageNumberRange_Dev* }
%class.scoped_refptr.32 = type { %"class.ppapi::Resource"* }
%"class.ppapi::Resource" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i32, %"class.ppapi::HostResource" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.ppapi::HostResource" = type { i32, i32 }
%struct.PPP_Printing_Dev_0_6 = type { i32 (i32)*, i32 (i32, %struct.PP_PrintSettings_Dev*)*, i32 (i32, %struct.PP_PrintPageNumberRange_Dev*, i32)*, void (i32)*, i32 (i32)* }
%struct.PPP_Graphics3D_1_0 = type { void (i32)* }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.ui::Cursor"* }
%"class.ui::Cursor" = type { i32, %class.scoped_refptr.37, float, %"class.gfx::Point", %class.SkBitmap }
%class.scoped_refptr.37 = type { %"class.ui::PlatformCursor"* }
%"class.ui::PlatformCursor" = type <{ i32 (...)**, %"class.base::RefCounted.38", [4 x i8] }>
%"class.base::RefCounted.38" = type { %"class.base::subtle::RefCountedBase" }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.45 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.39, i32, i32 }
%class.sk_sp.39 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.40" }
%"struct.std::__1::atomic.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__cxx_atomic_impl.43" }
%"struct.std::__1::__cxx_atomic_impl.43" = type { %"struct.std::__1::__cxx_atomic_base_impl.44" }
%"struct.std::__1::__cxx_atomic_base_impl.44" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.45 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.49 }
%class.scoped_refptr.49 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type opaque
%"class.gfx::Size" = type { i32, i32 }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Object"* }
%"class.v8::Object" = type { i8 }
%"class.content::MessageChannel" = type opaque
%"class.cc::PaintImage" = type { %class.sk_sp.50, %class.sk_sp.51, %"class.gfx::Rect", i32, %class.sk_sp.56, %class.sk_sp.57, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.50, %class.scoped_refptr.58 }
%class.sk_sp.51 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.52", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { i8* }
%class.sk_sp.56 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.57 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp.50 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.58 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.59", [4 x i8] }>
%"class.base::RefCountedThreadSafe.59" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.60" }
%"class.std::__1::__tree.60" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.69 }
%union.anon.69 = type { %"struct.content::PepperPluginInstanceImpl::TextInputCaretInfo" }
%"struct.content::PepperPluginInstanceImpl::TextInputCaretInfo" = type { %"class.gfx::Rect", %"class.gfx::Rect" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.scoped_refptr.70 = type { %"class.ppapi::TrackedCallback"* }
%"class.ppapi::TrackedCallback" = type { %"class.base::RefCountedThreadSafe.71", %"class.base::Lock", i8, %class.scoped_refptr.72, i32, i8, i8, %struct.PP_CompletionCallback, %"class.base::OnceCallback", %class.scoped_refptr.75, i32, %"class.std::__1::unique_ptr.76" }
%"class.base::RefCountedThreadSafe.71" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%class.scoped_refptr.72 = type { %"class.ppapi::CallbackTracker"* }
%"class.ppapi::CallbackTracker" = type opaque
%struct.PP_CompletionCallback = type { void (i8*, i32)*, i8*, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.73 }
%class.scoped_refptr.73 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.74", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.74" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.75 = type { %"class.ppapi::MessageLoopShared"* }
%"class.ppapi::MessageLoopShared" = type { %"class.ppapi::Resource", %"class.ppapi::thunk::PPB_MessageLoop_API" }
%"class.ppapi::thunk::PPB_MessageLoop_API" = type { i32 (...)** }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.base::ConditionVariable"* }
%"class.base::ConditionVariable" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t*, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.79, %union.anon.81, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.79 = type { i64 }
%union.anon.81 = type { i64 }
%"class.std::__1::vector.86" = type { %"class.std::__1::__vector_base.87" }
%"class.std::__1::__vector_base.87" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.std::__1::basic_string"* }
%"class.blink::WebAssociatedURLLoaderClient" = type { i32 (...)** }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.93", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::ResourceResponse"* }
%"class.blink::ResourceResponse" = type opaque
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.content::PepperPluginInstanceImpl::ExternalDocumentLoader"* }
%"class.content::PepperPluginInstanceImpl::ExternalDocumentLoader" = type { %"class.blink::WebAssociatedURLLoaderClient", %"class.std::__1::list", i8, %"class.std::__1::unique_ptr.106" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.102" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.blink::WebURLError"* }
%"struct.blink::WebURLError" = type { i32, i32, %"struct.net::ResolveErrorInfo", i8, i8, [6 x i8], %"class.blink::WebURL", %"class.absl::optional.109", i8, %"class.absl::optional.114", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"class.absl::optional.109" = type { %"class.absl::optional_internal::optional_data.110" }
%"class.absl::optional_internal::optional_data.110" = type { %"class.absl::optional_internal::optional_data_base.111" }
%"class.absl::optional_internal::optional_data_base.111" = type { %"class.absl::optional_internal::optional_data_dtor_base.112" }
%"class.absl::optional_internal::optional_data_dtor_base.112" = type { i8, [7 x i8], %union.anon.113 }
%union.anon.113 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.114" = type { %"class.absl::optional_internal::optional_data.115" }
%"class.absl::optional_internal::optional_data.115" = type { %"class.absl::optional_internal::optional_data_base.116" }
%"class.absl::optional_internal::optional_data_base.116" = type { %"class.absl::optional_internal::optional_data_dtor_base.117" }
%"class.absl::optional_internal::optional_data_dtor_base.117" = type { i8, %union.anon.118 }
%union.anon.118 = type { i32 }
%"class.v8::Isolate" = type { i8 }
%"struct.viz::TransferableResource" = type { %"class.util::IdType", i8, %"class.gfx::Size", i32, [4 x i8], %"struct.gpu::MailboxHolder", %"class.gfx::ColorSpace", %"class.absl::optional.136", i8, i32, i8, [7 x i8], %"class.absl::optional.141" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.136" = type { %"class.absl::optional_internal::optional_data.137" }
%"class.absl::optional_internal::optional_data.137" = type { %"class.absl::optional_internal::optional_data_base.138" }
%"class.absl::optional_internal::optional_data_base.138" = type { %"class.absl::optional_internal::optional_data_dtor_base.139" }
%"class.absl::optional_internal::optional_data_dtor_base.139" = type { i8, %union.anon.140 }
%union.anon.140 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.absl::optional.141" = type { %"class.absl::optional_internal::optional_data.142" }
%"class.absl::optional_internal::optional_data.142" = type { %"class.absl::optional_internal::optional_data_base.143" }
%"class.absl::optional_internal::optional_data_base.143" = type { %"class.absl::optional_internal::optional_data_dtor_base.144" }
%"class.absl::optional_internal::optional_data_dtor_base.144" = type { i8, [7 x i8], %union.anon.145 }
%union.anon.145 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.20 = type { %"class.content::PPB_Graphics3D_Impl"* }
%"class.content::PPB_Graphics3D_Impl" = type opaque
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType.134", i64 }
%"class.util::IdType.134" = type { %"class.base::StrongAlias.135" }
%"class.base::StrongAlias.135" = type { i64 }
%"class.std::__1::vector.146" = type { %"class.std::__1::__vector_base.147" }
%"class.std::__1::__vector_base.147" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.148" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.content::PepperAudioController"* }
%"class.content::PepperAudioController" = type opaque
%"class.std::__1::basic_string.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.128 }
%union.anon.128 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.231" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.159", i32 }>
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.162", %"class.absl::optional.163", %"class.absl::optional.168", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.184", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.206", %"class.std::__1::map.217", i64, %"class.base::OnceCallback.177", %"class.base::OnceCallback.226", i8, %class.scoped_refptr.173, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.227" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.162" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.163" = type { %"class.absl::optional_internal::optional_data.164" }
%"class.absl::optional_internal::optional_data.164" = type { %"class.absl::optional_internal::optional_data_base.165" }
%"class.absl::optional_internal::optional_data_base.165" = type { %"class.absl::optional_internal::optional_data_dtor_base.166" }
%"class.absl::optional_internal::optional_data_dtor_base.166" = type { i8, %union.anon.167 }
%union.anon.167 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.168" = type { %"class.absl::optional_internal::optional_data.169" }
%"class.absl::optional_internal::optional_data.169" = type { %"class.absl::optional_internal::optional_data_base.170" }
%"class.absl::optional_internal::optional_data_base.170" = type { %"class.absl::optional_internal::optional_data_dtor_base.171" }
%"class.absl::optional_internal::optional_data_dtor_base.171" = type { i8, %union.anon.172 }
%union.anon.172 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.177" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.173, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.175 }
%class.scoped_refptr.175 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.176", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.176" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.40" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.182 }
%class.scoped_refptr.182 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.245", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.173, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.246", [4 x i8] }>
%"class.base::RefCountedThreadSafe.245" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.246" = type { %"struct.std::__1::__atomic_base.247" }
%"struct.std::__1::__atomic_base.247" = type { %"struct.std::__1::__atomic_base.248" }
%"struct.std::__1::__atomic_base.248" = type { %"struct.std::__1::__cxx_atomic_impl.249" }
%"struct.std::__1::__cxx_atomic_impl.249" = type { %"struct.std::__1::__cxx_atomic_base_impl.250" }
%"struct.std::__1::__cxx_atomic_base_impl.250" = type { i32 }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.183 }
%class.scoped_refptr.183 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.187", %class.scoped_refptr.188 }
%"class.base::RepeatingCallback.187" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.188 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.189", [4 x i8] }>
%"class.base::RefCountedThreadSafe.189" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.199", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.205" }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.205" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.206" = type { %"class.std::__1::__tree.207" }
%"class.std::__1::__tree.207" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.208", %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.217" = type { %"class.std::__1::__tree.218" }
%"class.std::__1::__tree.218" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.219", %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::OnceCallback.177" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.226" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.173 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.174" }>
%"class.base::RefCountedThreadSafe.174" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.177" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.227" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.content::mojom::PepperPluginInstanceHostProxy"* }
%"class.content::mojom::PepperPluginInstanceHostProxy" = type { %"class.content::mojom::PepperPluginInstanceHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.content::mojom::PepperPluginInstanceHost" = type { i32 (...)** }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.content::mojom::PepperPluginInstanceStub", %"class.base::WeakPtrFactory.237" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.159" }
%"class.content::mojom::PepperPluginInstanceStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.content::mojom::PepperPluginInstance"* }
%"class.base::WeakPtrFactory.237" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.238" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.content::V8VarConverter" = type { i32, i32, %"class.std::__1::unique_ptr.239" }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.content::ResourceConverter"* }
%"class.content::ResourceConverter" = type opaque
%"class.content::PepperTryCatchV8" = type { %"class.content::PepperTryCatch", %struct.PP_Var }
%struct.PP_Var = type { i32, i32, %union.PP_VarValue }
%union.PP_VarValue = type { double }
%"class.content::PepperTryCatchVar" = type <{ %"class.content::PepperTryCatch", %"class.v8::HandleScope", %"class.v8::Local.251", %"class.v8::TryCatch", %struct.PP_Var*, i8, [7 x i8] }>
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Local.251" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::Value" = type { i8 }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.ppapi::ScopedPPVar" = type { %struct.PP_Var }
%"class.ppapi::PpapiGlobals" = type { i32 (...)**, %class.scoped_refptr.252 }
%class.scoped_refptr.252 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.ppapi::VarTracker" = type { i32 (...)**, %"class.std::__1::unordered_map", i32, %"class.std::__1::unique_ptr.272" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.253", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.268", [4 x i8] }>
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255", %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { float }
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.base::ThreadChecker"* }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.ppapi::StringVar" = type { %"class.ppapi::Var", %"class.std::__1::basic_string" }
%"class.ppapi::Var" = type { i32 (...)**, %"class.base::RefCounted.278", i32 }
%"class.base::RefCounted.278" = type { %"class.base::subtle::RefCountedBase" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.v8::String" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.v8::String::Utf8Value" = type <{ i8*, i32, [4 x i8] }>
%"class.v8::Message" = type { i8 }

@_ZTVN7content14PepperTryCatchE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::PepperTryCatch"*)* @_ZN7content14PepperTryCatchD2Ev to i8*), i8* bitcast (void (%"class.content::PepperTryCatch"*)* @_ZN7content14PepperTryCatchD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZN7content12_GLOBAL__N_120kConversionExceptionE = internal constant [53 x i8] c"Error: Failed conversion between PP_Var and V8 value\00", align 16
@_ZTVN7content16PepperTryCatchV8E = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::PepperTryCatchV8"*)* @_ZN7content16PepperTryCatchV8D2Ev to i8*), i8* bitcast (void (%"class.content::PepperTryCatchV8"*)* @_ZN7content16PepperTryCatchV8D0Ev to i8*), i8* bitcast (void (%"class.content::PepperTryCatchV8"*, i8*)* @_ZN7content16PepperTryCatchV812SetExceptionEPKc to i8*), i8* bitcast (i1 (%"class.content::PepperTryCatchV8"*)* @_ZN7content16PepperTryCatchV812HasExceptionEv to i8*), i8* bitcast (%"class.v8::Context"* (%"class.content::PepperTryCatchV8"*)* @_ZN7content16PepperTryCatchV810GetContextEv to i8*)] }, align 8
@_ZN7content12_GLOBAL__N_117kInvalidExceptionE = internal unnamed_addr constant [40 x i8] c"Error: An invalid exception was thrown.\00", align 16
@_ZTVN7content17PepperTryCatchVarE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::PepperTryCatchVar"*)* @_ZN7content17PepperTryCatchVarD2Ev to i8*), i8* bitcast (void (%"class.content::PepperTryCatchVar"*)* @_ZN7content17PepperTryCatchVarD0Ev to i8*), i8* bitcast (void (%"class.content::PepperTryCatchVar"*, i8*)* @_ZN7content17PepperTryCatchVar12SetExceptionEPKc to i8*), i8* bitcast (i1 (%"class.content::PepperTryCatchVar"*)* @_ZN7content17PepperTryCatchVar12HasExceptionEv to i8*), i8* bitcast (%"class.v8::Context"* (%"class.content::PepperTryCatchVar"*)* @_ZN7content17PepperTryCatchVar10GetContextEv to i8*)] }, align 8
@.str = private unnamed_addr constant [35 x i8] c"The v8 context has been destroyed.\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"There was a v8 exception.\00", align 1

@_ZN7content14PepperTryCatchD1Ev = hidden unnamed_addr alias void (%"class.content::PepperTryCatch"*), void (%"class.content::PepperTryCatch"*)* @_ZN7content14PepperTryCatchD2Ev
@_ZN7content16PepperTryCatchV8C1EPNS_24PepperPluginInstanceImplEPNS_14V8VarConverterEPN2v87IsolateE = hidden unnamed_addr alias void (%"class.content::PepperTryCatchV8"*, %"class.content::PepperPluginInstanceImpl"*, %"class.content::V8VarConverter"*, %"class.v8::Isolate"*), void (%"class.content::PepperTryCatchV8"*, %"class.content::PepperPluginInstanceImpl"*, %"class.content::V8VarConverter"*, %"class.v8::Isolate"*)* @_ZN7content16PepperTryCatchV8C2EPNS_24PepperPluginInstanceImplEPNS_14V8VarConverterEPN2v87IsolateE
@_ZN7content16PepperTryCatchV8D1Ev = hidden unnamed_addr alias void (%"class.content::PepperTryCatchV8"*), void (%"class.content::PepperTryCatchV8"*)* @_ZN7content16PepperTryCatchV8D2Ev
@_ZN7content17PepperTryCatchVarC1EPNS_24PepperPluginInstanceImplEPNS_14V8VarConverterEP6PP_Var = hidden unnamed_addr alias void (%"class.content::PepperTryCatchVar"*, %"class.content::PepperPluginInstanceImpl"*, %"class.content::V8VarConverter"*, %struct.PP_Var*), void (%"class.content::PepperTryCatchVar"*, %"class.content::PepperPluginInstanceImpl"*, %"class.content::V8VarConverter"*, %struct.PP_Var*)* @_ZN7content17PepperTryCatchVarC2EPNS_24PepperPluginInstanceImplEPNS_14V8VarConverterEP6PP_Var
@_ZN7content17PepperTryCatchVarD1Ev = hidden unnamed_addr alias void (%"class.content::PepperTryCatchVar"*), void (%"class.content::PepperTryCatchVar"*)* @_ZN7content17PepperTryCatchVarD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14PepperTryCatchC2EPNS_24PepperPluginInstanceImplEPNS_14V8VarConverterE(%"class.content::PepperTryCatch"* nocapture, %"class.content::PepperPluginInstanceImpl"*, %"class.content::V8VarConverter"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.content::PepperTryCatch", %"class.content::PepperTryCatch"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content14PepperTryCatchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.content::PepperTryCatch", %"class.content::PepperTryCatch"* %0, i64 0, i32 1, i32 0
  store %"class.content::PepperPluginInstanceImpl"* %1, %"class.content::PepperPluginInstanceImpl"** %5, align 8
  %6 = icmp eq %"class.content::PepperPluginInstanceImpl"* %1, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.content::PepperPluginInstanceImpl", %"class.content::PepperPluginInstanceImpl"* %1, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %8) #11
  br label %9

9:                                                ; preds = %3, %7
  %10 = getelementptr inbounds %"class.content::PepperTryCatch", %"class.content::PepperTryCatch"* %0, i64 0, i32 2
  store %"class.content::V8VarConverter"* %2, %"class.content::V8VarConverter"** %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14PepperTryCatchD2Ev(%"class.content::PepperTryCatch"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::PepperTryCatch", %"class.content::PepperTryCatch"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content14PepperTryCatchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::PepperTryCatch", %"class.content::PepperTryCatch"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.content::PepperPluginInstanceImpl"*, %"class.content::PepperPluginInstanceImpl"** %3, align 8
  %5 = icmp eq %"class.content::PepperPluginInstanceImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.content::PepperPluginInstanceImpl", %"class.content::PepperPluginInstanceImpl"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #11
  %9 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 -2
  %14 = bitcast %"class.base::RefCounted"* %13 to %"class.content::PepperPluginInstanceImpl"*
  %15 = bitcast %"class.base::RefCounted"* %13 to void (%"class.content::PepperPluginInstanceImpl"*)***
  %16 = load void (%"class.content::PepperPluginInstanceImpl"*)**, void (%"class.content::PepperPluginInstanceImpl"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.content::PepperPluginInstanceImpl"*)*, void (%"class.content::PepperPluginInstanceImpl"*)** %16, i64 1
  %18 = load void (%"class.content::PepperPluginInstanceImpl"*)*, void (%"class.content::PepperPluginInstanceImpl"*)** %17, align 8
  tail call void %18(%"class.content::PepperPluginInstanceImpl"* nonnull %14) #11
  br label %19

19:                                               ; preds = %1, %6, %12
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN7content14PepperTryCatchD0Ev(%"class.content::PepperTryCatch"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZN7content14PepperTryCatch4ToV8E6PP_Var(%"class.content::PepperTryCatch"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.PP_Var, align 8
  %5 = alloca %"class.v8::Local", align 8
  %6 = bitcast %struct.PP_Var* %4 to i64*
  store i64 %1, i64* %6, align 8
  %7 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %4, i64 0, i32 2
  %8 = bitcast %union.PP_VarValue* %7 to i64*
  store i64 %2, i64* %8, align 8
  %9 = bitcast %"class.content::PepperTryCatch"* %0 to i1 (%"class.content::PepperTryCatch"*)***
  %10 = load i1 (%"class.content::PepperTryCatch"*)**, i1 (%"class.content::PepperTryCatch"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.content::PepperTryCatch"*)*, i1 (%"class.content::PepperTryCatch"*)** %10, i64 3
  %12 = load i1 (%"class.content::PepperTryCatch"*)*, i1 (%"class.content::PepperTryCatch"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.content::PepperTryCatch"* %0) #11
  br i1 %13, label %14, label %19

14:                                               ; preds = %3
  %15 = bitcast %"class.content::PepperTryCatch"* %0 to void (%"class.content::PepperTryCatch"*, i8*)***
  %16 = load void (%"class.content::PepperTryCatch"*, i8*)**, void (%"class.content::PepperTryCatch"*, i8*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.content::PepperTryCatch"*, i8*)*, void (%"class.content::PepperTryCatch"*, i8*)** %16, i64 2
  %18 = load void (%"class.content::PepperTryCatch"*, i8*)*, void (%"class.content::PepperTryCatch"*, i8*)** %17, align 8
  tail call void %18(%"class.content::PepperTryCatch"* %0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @_ZN7content12_GLOBAL__N_120kConversionExceptionE, i64 0, i64 0)) #11
  br label %40

19:                                               ; preds = %3
  %20 = bitcast %"class.v8::Local"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  %21 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %5, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %21, align 8
  %22 = getelementptr inbounds %"class.content::PepperTryCatch", %"class.content::PepperTryCatch"* %0, i64 0, i32 2
  %23 = load %"class.content::V8VarConverter"*, %"class.content::V8VarConverter"** %22, align 8
  %24 = bitcast %"class.content::PepperTryCatch"* %0 to %"class.v8::Context"* (%"class.content::PepperTryCatch"*)***
  %25 = load %"class.v8::Context"* (%"class.content::PepperTryCatch"*)**, %"class.v8::Context"* (%"class.content::PepperTryCatch"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.v8::Context"* (%"class.content::PepperTryCatch"*)*, %"class.v8::Context"* (%"class.content::PepperTryCatch"*)** %25, i64 4
  %27 = load %"class.v8::Context"* (%"class.content::PepperTryCatch"*)*, %"class.v8::Context"* (%"class.content::PepperTryCatch"*)** %26, align 8
  %28 = tail call %"class.v8::Context"* %27(%"class.content::PepperTryCatch"* %0) #11
  %29 = call zeroext i1 @_ZN7content14V8VarConverter9ToV8ValueERK6PP_VarN2v85LocalINS4_7ContextEEEPNS5_INS4_5ValueEEE(%"class.content::V8VarConverter"* %23, %struct.PP_Var* nonnull dereferenceable(16) %4, %"class.v8::Context"* %28, %"class.v8::Local"* nonnull %5) #11
  br i1 %29, label %35, label %30

30:                                               ; preds = %19
  %31 = bitcast %"class.content::PepperTryCatch"* %0 to void (%"class.content::PepperTryCatch"*, i8*)***
  %32 = load void (%"class.content::PepperTryCatch"*, i8*)**, void (%"class.content::PepperTryCatch"*, i8*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.content::PepperTryCatch"*, i8*)*, void (%"class.content::PepperTryCatch"*, i8*)** %32, i64 2
  %34 = load void (%"class.content::PepperTryCatch"*, i8*)*, void (%"class.content::PepperTryCatch"*, i8*)** %33, align 8
  call void %34(%"class.content::PepperTryCatch"* %0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @_ZN7content12_GLOBAL__N_120kConversionExceptionE, i64 0, i64 0)) #11
  br label %38

35:                                               ; preds = %19
  %36 = bitcast %"class.v8::Local"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %35, %30
  %39 = phi i64 [ %37, %35 ], [ 0, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %40

40:                                               ; preds = %38, %14
  %41 = phi i64 [ 0, %14 ], [ %39, %38 ]
  %42 = inttoptr i64 %41 to %"class.v8::Value"*
  ret %"class.v8::Value"* %42
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZN7content14V8VarConverter9ToV8ValueERK6PP_VarN2v85LocalINS4_7ContextEEEPNS5_INS4_5ValueEEE(%"class.content::V8VarConverter"*, %struct.PP_Var* dereferenceable(16), %"class.v8::Context"*, %"class.v8::Local"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14PepperTryCatch6FromV8EN2v85LocalINS1_5ValueEEE(%"class.ppapi::ScopedPPVar"* noalias sret, %"class.content::PepperTryCatch"*, %"class.v8::Value"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.ppapi::ScopedPPVar", align 8
  %5 = bitcast %"class.content::PepperTryCatch"* %1 to i1 (%"class.content::PepperTryCatch"*)***
  %6 = load i1 (%"class.content::PepperTryCatch"*)**, i1 (%"class.content::PepperTryCatch"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.content::PepperTryCatch"*)*, i1 (%"class.content::PepperTryCatch"*)** %6, i64 3
  %8 = load i1 (%"class.content::PepperTryCatch"*)*, i1 (%"class.content::PepperTryCatch"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.content::PepperTryCatch"* %1) #11
  %10 = icmp eq %"class.v8::Value"* %2, null
  %11 = or i1 %10, %9
  br i1 %11, label %12, label %17

12:                                               ; preds = %3
  %13 = bitcast %"class.content::PepperTryCatch"* %1 to void (%"class.content::PepperTryCatch"*, i8*)***
  %14 = load void (%"class.content::PepperTryCatch"*, i8*)**, void (%"class.content::PepperTryCatch"*, i8*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.content::PepperTryCatch"*, i8*)*, void (%"class.content::PepperTryCatch"*, i8*)** %14, i64 2
  %16 = load void (%"class.content::PepperTryCatch"*, i8*)*, void (%"class.content::PepperTryCatch"*, i8*)** %15, align 8
  tail call void %16(%"class.content::PepperTryCatch"* %1, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @_ZN7content12_GLOBAL__N_120kConversionExceptionE, i64 0, i64 0)) #11
  tail call void @_ZN5ppapi11ScopedPPVarC1Ev(%"class.ppapi::ScopedPPVar"* %0) #11
  br label %37

17:                                               ; preds = %3
  %18 = bitcast %"class.ppapi::ScopedPPVar"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.ppapi::ScopedPPVar", %"class.ppapi::ScopedPPVar"* %4, i64 0, i32 0, i32 0
  store i32 -1431655766, i32* %19, align 8
  %20 = getelementptr inbounds %"class.ppapi::ScopedPPVar", %"class.ppapi::ScopedPPVar"* %4, i64 0, i32 0, i32 1
  store i32 -1431655766, i32* %20, align 4
  %21 = getelementptr inbounds %"class.ppapi::ScopedPPVar", %"class.ppapi::ScopedPPVar"* %4, i64 0, i32 0, i32 2, i32 0
  store double 0xFFFFFFFFFFFFFFFF, double* %21, align 8
  call void @_ZN5ppapi11ScopedPPVarC1Ev(%"class.ppapi::ScopedPPVar"* nonnull %4) #11
  %22 = getelementptr inbounds %"class.content::PepperTryCatch", %"class.content::PepperTryCatch"* %1, i64 0, i32 2
  %23 = load %"class.content::V8VarConverter"*, %"class.content::V8VarConverter"** %22, align 8
  %24 = bitcast %"class.content::PepperTryCatch"* %1 to %"class.v8::Context"* (%"class.content::PepperTryCatch"*)***
  %25 = load %"class.v8::Context"* (%"class.content::PepperTryCatch"*)**, %"class.v8::Context"* (%"class.content::PepperTryCatch"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.v8::Context"* (%"class.content::PepperTryCatch"*)*, %"class.v8::Context"* (%"class.content::PepperTryCatch"*)** %25, i64 4
  %27 = load %"class.v8::Context"* (%"class.content::PepperTryCatch"*)*, %"class.v8::Context"* (%"class.content::PepperTryCatch"*)** %26, align 8
  %28 = call %"class.v8::Context"* %27(%"class.content::PepperTryCatch"* %1) #11
  %29 = call zeroext i1 @_ZN7content14V8VarConverter15FromV8ValueSyncEN2v85LocalINS1_5ValueEEENS2_INS1_7ContextEEEPN5ppapi11ScopedPPVarE(%"class.content::V8VarConverter"* %23, %"class.v8::Value"* nonnull %2, %"class.v8::Context"* %28, %"class.ppapi::ScopedPPVar"* nonnull %4) #11
  br i1 %29, label %35, label %30

30:                                               ; preds = %17
  %31 = bitcast %"class.content::PepperTryCatch"* %1 to void (%"class.content::PepperTryCatch"*, i8*)***
  %32 = load void (%"class.content::PepperTryCatch"*, i8*)**, void (%"class.content::PepperTryCatch"*, i8*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.content::PepperTryCatch"*, i8*)*, void (%"class.content::PepperTryCatch"*, i8*)** %32, i64 2
  %34 = load void (%"class.content::PepperTryCatch"*, i8*)*, void (%"class.content::PepperTryCatch"*, i8*)** %33, align 8
  call void %34(%"class.content::PepperTryCatch"* %1, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @_ZN7content12_GLOBAL__N_120kConversionExceptionE, i64 0, i64 0)) #11
  call void @_ZN5ppapi11ScopedPPVarC1Ev(%"class.ppapi::ScopedPPVar"* %0) #11
  br label %36

35:                                               ; preds = %17
  call void @_ZN5ppapi11ScopedPPVarC1ERKS0_(%"class.ppapi::ScopedPPVar"* %0, %"class.ppapi::ScopedPPVar"* nonnull dereferenceable(16) %4) #11
  br label %36

36:                                               ; preds = %35, %30
  call void @_ZN5ppapi11ScopedPPVarD1Ev(%"class.ppapi::ScopedPPVar"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #11
  br label %37

37:                                               ; preds = %36, %12
  ret void
}

declare void @_ZN5ppapi11ScopedPPVarC1Ev(%"class.ppapi::ScopedPPVar"*) unnamed_addr #4

declare zeroext i1 @_ZN7content14V8VarConverter15FromV8ValueSyncEN2v85LocalINS1_5ValueEEENS2_INS1_7ContextEEEPN5ppapi11ScopedPPVarE(%"class.content::V8VarConverter"*, %"class.v8::Value"*, %"class.v8::Context"*, %"class.ppapi::ScopedPPVar"*) local_unnamed_addr #4

declare void @_ZN5ppapi11ScopedPPVarC1ERKS0_(%"class.ppapi::ScopedPPVar"*, %"class.ppapi::ScopedPPVar"* dereferenceable(16)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5ppapi11ScopedPPVarD1Ev(%"class.ppapi::ScopedPPVar"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14PepperTryCatch11FromV8MaybeEN2v810MaybeLocalINS1_5ValueEEE(%"class.ppapi::ScopedPPVar"* noalias sret, %"class.content::PepperTryCatch"*, %"class.v8::Value"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN7content14PepperTryCatch6FromV8EN2v85LocalINS1_5ValueEEE(%"class.ppapi::ScopedPPVar"* sret %0, %"class.content::PepperTryCatch"* %1, %"class.v8::Value"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content16PepperTryCatchV8C2EPNS_24PepperPluginInstanceImplEPNS_14V8VarConverterEPN2v87IsolateE(%"class.content::PepperTryCatchV8"* nocapture, %"class.content::PepperPluginInstanceImpl"*, %"class.content::V8VarConverter"*, %"class.v8::Isolate"* nocapture readnone) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.content::PepperTryCatchV8", %"class.content::PepperTryCatchV8"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content14PepperTryCatchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.content::PepperTryCatchV8", %"class.content::PepperTryCatchV8"* %0, i64 0, i32 0, i32 1, i32 0
  store %"class.content::PepperPluginInstanceImpl"* %1, %"class.content::PepperPluginInstanceImpl"** %6, align 8
  %7 = icmp eq %"class.content::PepperPluginInstanceImpl"* %1, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.content::PepperPluginInstanceImpl", %"class.content::PepperPluginInstanceImpl"* %1, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %9) #11
  br label %10

10:                                               ; preds = %4, %8
  %11 = getelementptr inbounds %"class.content::PepperTryCatchV8", %"class.content::PepperTryCatchV8"* %0, i64 0, i32 0, i32 2
  store %"class.content::V8VarConverter"* %2, %"class.content::V8VarConverter"** %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content16PepperTryCatchV8E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %12 = getelementptr inbounds %"class.content::PepperTryCatchV8", %"class.content::PepperTryCatchV8"* %0, i64 0, i32 1
  %13 = bitcast %struct.PP_Var* %12 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -6148914694099828736>, <2 x i64>* %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content16PepperTryCatchV8D2Ev(%"class.content::PepperTryCatchV8"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::PepperTryCatchV8", %"class.content::PepperTryCatchV8"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content16PepperTryCatchV8E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #11
  %4 = bitcast %"class.ppapi::PpapiGlobals"* %3 to %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %5 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %5, i64 3
  %7 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %6, align 8
  %8 = tail call %"class.ppapi::VarTracker"* %7(%"class.ppapi::PpapiGlobals"* %3) #11
  %9 = getelementptr inbounds %"class.content::PepperTryCatchV8", %"class.content::PepperTryCatchV8"* %0, i64 0, i32 1
  %10 = tail call zeroext i1 @_ZN5ppapi10VarTracker10ReleaseVarERK6PP_Var(%"class.ppapi::VarTracker"* %8, %struct.PP_Var* dereferenceable(16) %9) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content14PepperTryCatchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %11 = getelementptr inbounds %"class.content::PepperTryCatchV8", %"class.content::PepperTryCatchV8"* %0, i64 0, i32 0, i32 1, i32 0
  %12 = load %"class.content::PepperPluginInstanceImpl"*, %"class.content::PepperPluginInstanceImpl"** %11, align 8
  %13 = icmp eq %"class.content::PepperPluginInstanceImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.content::PepperPluginInstanceImpl", %"class.content::PepperPluginInstanceImpl"* %12, i64 0, i32 1
  %16 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %15, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %16) #11
  %17 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %15, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %27

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %15, i64 -2
  %22 = bitcast %"class.base::RefCounted"* %21 to %"class.content::PepperPluginInstanceImpl"*
  %23 = bitcast %"class.base::RefCounted"* %21 to void (%"class.content::PepperPluginInstanceImpl"*)***
  %24 = load void (%"class.content::PepperPluginInstanceImpl"*)**, void (%"class.content::PepperPluginInstanceImpl"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.content::PepperPluginInstanceImpl"*)*, void (%"class.content::PepperPluginInstanceImpl"*)** %24, i64 1
  %26 = load void (%"class.content::PepperPluginInstanceImpl"*)*, void (%"class.content::PepperPluginInstanceImpl"*)** %25, align 8
  tail call void %26(%"class.content::PepperPluginInstanceImpl"* nonnull %22) #11
  br label %27

27:                                               ; preds = %1, %14, %20
  ret void
}

declare %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() local_unnamed_addr #4

declare zeroext i1 @_ZN5ppapi10VarTracker10ReleaseVarERK6PP_Var(%"class.ppapi::VarTracker"*, %struct.PP_Var* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content16PepperTryCatchV8D0Ev(%"class.content::PepperTryCatchV8"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::PepperTryCatchV8", %"class.content::PepperTryCatchV8"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content16PepperTryCatchV8E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #11
  %4 = bitcast %"class.ppapi::PpapiGlobals"* %3 to %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %5 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %5, i64 3
  %7 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %6, align 8
  %8 = tail call %"class.ppapi::VarTracker"* %7(%"class.ppapi::PpapiGlobals"* %3) #11
  %9 = getelementptr inbounds %"class.content::PepperTryCatchV8", %"class.content::PepperTryCatchV8"* %0, i64 0, i32 1
  %10 = tail call zeroext i1 @_ZN5ppapi10VarTracker10ReleaseVarERK6PP_Var(%"class.ppapi::VarTracker"* %8, %struct.PP_Var* dereferenceable(16) %9) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content14PepperTryCatchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %11 = getelementptr inbounds %"class.content::PepperTryCatchV8", %"class.content::PepperTryCatchV8"* %0, i64 0, i32 0, i32 1, i32 0
  %12 = load %"class.content::PepperPluginInstanceImpl"*, %"class.content::PepperPluginInstanceImpl"** %11, align 8
  %13 = icmp eq %"class.content::PepperPluginInstanceImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.content::PepperPluginInstanceImpl", %"class.content::PepperPluginInstanceImpl"* %12, i64 0, i32 1
  %16 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %15, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %16) #11
  %17 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %15, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %27

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %15, i64 -2
  %22 = bitcast %"class.base::RefCounted"* %21 to %"class.content::PepperPluginInstanceImpl"*
  %23 = bitcast %"class.base::RefCounted"* %21 to void (%"class.content::PepperPluginInstanceImpl"*)***
  %24 = load void (%"class.content::PepperPluginInstanceImpl"*)**, void (%"class.content::PepperPluginInstanceImpl"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.content::PepperPluginInstanceImpl"*)*, void (%"class.content::PepperPluginInstanceImpl"*)** %24, i64 1
  %26 = load void (%"class.content::PepperPluginInstanceImpl"*)*, void (%"class.content::PepperPluginInstanceImpl"*)** %25, align 8
  tail call void %26(%"class.content::PepperPluginInstanceImpl"* nonnull %22) #11
  br label %27

27:                                               ; preds = %1, %14, %20
  %28 = bitcast %"class.content::PepperTryCatchV8"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content16PepperTryCatchV812HasExceptionEv(%"class.content::PepperTryCatchV8"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.content::PepperTryCatchV8"* %0 to %"class.v8::Context"* (%"class.content::PepperTryCatchV8"*)***
  %3 = load %"class.v8::Context"* (%"class.content::PepperTryCatchV8"*)**, %"class.v8::Context"* (%"class.content::PepperTryCatchV8"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.v8::Context"* (%"class.content::PepperTryCatchV8"*)*, %"class.v8::Context"* (%"class.content::PepperTryCatchV8"*)** %3, i64 4
  %5 = load %"class.v8::Context"* (%"class.content::PepperTryCatchV8"*)*, %"class.v8::Context"* (%"class.content::PepperTryCatchV8"*)** %4, align 8
  %6 = tail call %"class.v8::Context"* %5(%"class.content::PepperTryCatchV8"* %0) #11
  %7 = icmp eq %"class.v8::Context"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.content::PepperTryCatchV8", %"class.content::PepperTryCatchV8"* %0, i64 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %8, %1
  %13 = phi i1 [ true, %1 ], [ %11, %8 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Context"* @_ZN7content16PepperTryCatchV810GetContextEv(%"class.content::PepperTryCatchV8"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::PepperTryCatchV8", %"class.content::PepperTryCatchV8"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load %"class.content::PepperPluginInstanceImpl"*, %"class.content::PepperPluginInstanceImpl"** %2, align 8
  %4 = bitcast %"class.content::PepperPluginInstanceImpl"* %3 to %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)***
  %5 = load %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)**, %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)*, %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)** %5, i64 4
  %7 = load %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)*, %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)** %6, align 8
  %8 = tail call %"class.v8::Isolate"* %7(%"class.content::PepperPluginInstanceImpl"* %3) #11
  %9 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %8) #11
  ret %"class.v8::Context"* %9
}

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content16PepperTryCatchV814ThrowExceptionEv(%"class.content::PepperTryCatchV8"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = bitcast %"class.content::PepperTryCatchV8"* %0 to i1 (%"class.content::PepperTryCatchV8"*)***
  %5 = load i1 (%"class.content::PepperTryCatchV8"*)**, i1 (%"class.content::PepperTryCatchV8"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.content::PepperTryCatchV8"*)*, i1 (%"class.content::PepperTryCatchV8"*)** %5, i64 3
  %7 = load i1 (%"class.content::PepperTryCatchV8"*)*, i1 (%"class.content::PepperTryCatchV8"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.content::PepperTryCatchV8"* %0) #11
  br i1 %8, label %9, label %91

9:                                                ; preds = %1
  %10 = bitcast %"class.content::PepperTryCatchV8"* %0 to %"class.v8::Context"* (%"class.content::PepperTryCatchV8"*)***
  %11 = load %"class.v8::Context"* (%"class.content::PepperTryCatchV8"*)**, %"class.v8::Context"* (%"class.content::PepperTryCatchV8"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.v8::Context"* (%"class.content::PepperTryCatchV8"*)*, %"class.v8::Context"* (%"class.content::PepperTryCatchV8"*)** %11, i64 4
  %13 = load %"class.v8::Context"* (%"class.content::PepperTryCatchV8"*)*, %"class.v8::Context"* (%"class.content::PepperTryCatchV8"*)** %12, align 8
  %14 = tail call %"class.v8::Context"* %13(%"class.content::PepperTryCatchV8"* %0) #11
  %15 = icmp eq %"class.v8::Context"* %14, null
  br i1 %15, label %91, label %16

16:                                               ; preds = %9
  %17 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = tail call i8* @_Znwm(i64 48) #13
  store i8* %20, i8** %18, align 8
  %21 = bitcast i64* %19 to <2 x i64>*
  store <2 x i64> <i64 39, i64 -9223372036854775760>, <2 x i64>* %21, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %20, i8* align 16 getelementptr inbounds ([40 x i8], [40 x i8]* @_ZN7content12_GLOBAL__N_117kInvalidExceptionE, i64 0, i64 0), i64 39, i1 false) #11
  %22 = getelementptr inbounds i8, i8* %20, i64 39
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %"class.content::PepperTryCatchV8", %"class.content::PepperTryCatchV8"* %0, i64 0, i32 1
  %24 = bitcast %struct.PP_Var* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.content::PepperTryCatchV8", %"class.content::PepperTryCatchV8"* %0, i64 0, i32 1, i32 2
  %27 = bitcast %union.PP_VarValue* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = tail call %"class.ppapi::StringVar"* @_ZN5ppapi9StringVar9FromPPVarE6PP_Var(i64 %25, i64 %28) #11
  %30 = icmp eq %"class.ppapi::StringVar"* %29, null
  br i1 %30, label %48, label %31

31:                                               ; preds = %16
  %32 = getelementptr inbounds %"class.ppapi::StringVar", %"class.ppapi::StringVar"* %29, i64 0, i32 1
  %33 = icmp eq %"class.std::__1::basic_string"* %2, %32
  br i1 %33, label %48, label %34

34:                                               ; preds = %31
  %35 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %"class.ppapi::StringVar", %"class.ppapi::StringVar"* %29, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %44 = zext i8 %37 to i64
  %45 = select i1 %38, i8* %40, i8* %43
  %46 = select i1 %38, i64 %42, i64 %44
  %47 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %2, i8* %45, i64 %46) #11
  br label %48

48:                                               ; preds = %34, %31, %16
  %49 = getelementptr inbounds %"class.content::PepperTryCatchV8", %"class.content::PepperTryCatchV8"* %0, i64 0, i32 0, i32 1, i32 0
  %50 = load %"class.content::PepperPluginInstanceImpl"*, %"class.content::PepperPluginInstanceImpl"** %49, align 8
  %51 = bitcast %"class.content::PepperPluginInstanceImpl"* %50 to %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)***
  %52 = load %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)**, %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)*** %51, align 8
  %53 = getelementptr inbounds %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)*, %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)** %52, i64 4
  %54 = load %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)*, %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)** %53, align 8
  %55 = call %"class.v8::Isolate"* %54(%"class.content::PepperPluginInstanceImpl"* %50) #11
  %56 = load %"class.content::PepperPluginInstanceImpl"*, %"class.content::PepperPluginInstanceImpl"** %49, align 8
  %57 = bitcast %"class.content::PepperPluginInstanceImpl"* %56 to %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)***
  %58 = load %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)**, %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)*** %57, align 8
  %59 = getelementptr inbounds %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)*, %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)** %58, i64 4
  %60 = load %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)*, %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)** %59, align 8
  %61 = call %"class.v8::Isolate"* %60(%"class.content::PepperPluginInstanceImpl"* %56) #11
  %62 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #11
  %63 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  %64 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  %68 = load i8*, i8** %18, align 8
  %69 = select i1 %67, i8* %68, i8* %17
  store i8* %69, i8** %63, align 8
  %70 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  %71 = load i64, i64* %19, align 8
  %72 = zext i8 %66 to i64
  %73 = select i1 %67, i64 %71, i64 %72
  store i64 %73, i64* %70, align 8
  %74 = call %"class.v8::Value"* @_ZN3gin9ConverterIN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEvE4ToV8EPN2v87IsolateERKS6_(%"class.v8::Isolate"* %61, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %3) #11
  %75 = bitcast %"class.v8::Value"* %74 to %"class.v8::String"*
  %76 = call %"class.v8::Value"* @_ZN2v89Exception5ErrorENS_5LocalINS_6StringEEE(%"class.v8::String"* %75) #11
  %77 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %55, %"class.v8::Value"* %76) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #11
  %78 = call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #11
  %79 = bitcast %"class.ppapi::PpapiGlobals"* %78 to %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %80 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*** %79, align 8
  %81 = getelementptr inbounds %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %80, i64 3
  %82 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %81, align 8
  %83 = call %"class.ppapi::VarTracker"* %82(%"class.ppapi::PpapiGlobals"* %78) #11
  %84 = call zeroext i1 @_ZN5ppapi10VarTracker10ReleaseVarERK6PP_Var(%"class.ppapi::VarTracker"* %83, %struct.PP_Var* dereferenceable(16) %23) #11
  %85 = bitcast %struct.PP_Var* %23 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -6148914694099828736>, <2 x i64>* %85, align 8
  %86 = load i8, i8* %65, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %48
  %89 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %89) #13
  br label %90

90:                                               ; preds = %48, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #11
  br label %91

91:                                               ; preds = %9, %1, %90
  %92 = phi i1 [ true, %90 ], [ false, %1 ], [ true, %9 ]
  ret i1 %92
}

declare %"class.ppapi::StringVar"* @_ZN5ppapi9StringVar9FromPPVarE6PP_Var(i64, i64) local_unnamed_addr #4

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #4

declare %"class.v8::Value"* @_ZN2v89Exception5ErrorENS_5LocalINS_6StringEEE(%"class.v8::String"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content16PepperTryCatchV814ThrowExceptionEPKc(%"class.content::PepperTryCatchV8"*, i8*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.content::PepperTryCatchV8"* %0 to void (%"class.content::PepperTryCatchV8"*, i8*)***
  %4 = load void (%"class.content::PepperTryCatchV8"*, i8*)**, void (%"class.content::PepperTryCatchV8"*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.content::PepperTryCatchV8"*, i8*)*, void (%"class.content::PepperTryCatchV8"*, i8*)** %4, i64 2
  %6 = load void (%"class.content::PepperTryCatchV8"*, i8*)*, void (%"class.content::PepperTryCatchV8"*, i8*)** %5, align 8
  tail call void %6(%"class.content::PepperTryCatchV8"* %0, i8* %1) #11
  %7 = tail call zeroext i1 @_ZN7content16PepperTryCatchV814ThrowExceptionEv(%"class.content::PepperTryCatchV8"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content16PepperTryCatchV812SetExceptionEPKc(%"class.content::PepperTryCatchV8"*, i8* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.content::PepperTryCatchV8"* %0 to i1 (%"class.content::PepperTryCatchV8"*)***
  %5 = load i1 (%"class.content::PepperTryCatchV8"*)**, i1 (%"class.content::PepperTryCatchV8"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.content::PepperTryCatchV8"*)*, i1 (%"class.content::PepperTryCatchV8"*)** %5, i64 3
  %7 = load i1 (%"class.content::PepperTryCatchV8"*)*, i1 (%"class.content::PepperTryCatchV8"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.content::PepperTryCatchV8"* %0) #11
  br i1 %8, label %52, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = tail call i64 @strlen(i8* %1) #11
  %12 = icmp ugt i64 %11, -17
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  %14 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %14) #12
  unreachable

15:                                               ; preds = %9
  %16 = icmp ult i64 %11, 23
  br i1 %16, label %26, label %17

17:                                               ; preds = %15
  %18 = add nuw i64 %11, 16
  %19 = and i64 %18, -16
  %20 = tail call i8* @_Znwm(i64 %19) #13
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = or i64 %19, -9223372036854775808
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %11, i64* %24, align 8
  %25 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %31

26:                                               ; preds = %15
  %27 = trunc i64 %11 to i8
  %28 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 %27, i8* %29, align 1
  %30 = icmp eq i64 %11, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %26, %17
  %32 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %28, %26 ], [ %25, %17 ]
  %33 = phi i8* [ %10, %26 ], [ %20, %17 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %33, i8* align 1 %1, i64 %11, i1 false) #11
  br label %34

34:                                               ; preds = %26, %31
  %35 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %28, %26 ], [ %32, %31 ]
  %36 = phi i8* [ %10, %26 ], [ %33, %31 ]
  %37 = getelementptr inbounds i8, i8* %36, i64 %11
  store i8 0, i8* %37, align 1
  %38 = call { i64, i64 } @_ZN5ppapi9StringVar13StringToPPVarERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #11
  %39 = extractvalue { i64, i64 } %38, 0
  %40 = extractvalue { i64, i64 } %38, 1
  %41 = getelementptr inbounds %"class.content::PepperTryCatchV8", %"class.content::PepperTryCatchV8"* %0, i64 0, i32 1
  %42 = bitcast %struct.PP_Var* %41 to i64*
  store i64 %39, i64* %42, align 8
  %43 = getelementptr inbounds %"class.content::PepperTryCatchV8", %"class.content::PepperTryCatchV8"* %0, i64 0, i32 1, i32 2
  %44 = bitcast %union.PP_VarValue* %43 to i64*
  store i64 %40, i64* %44, align 8
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %34
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %50) #13
  br label %51

51:                                               ; preds = %34, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  br label %52

52:                                               ; preds = %2, %51
  ret void
}

declare { i64, i64 } @_ZN5ppapi9StringVar13StringToPPVarERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content17PepperTryCatchVarC2EPNS_24PepperPluginInstanceImplEPNS_14V8VarConverterEP6PP_Var(%"class.content::PepperTryCatchVar"*, %"class.content::PepperPluginInstanceImpl"*, %"class.content::V8VarConverter"*, %struct.PP_Var*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.content::PepperTryCatchVar", %"class.content::PepperTryCatchVar"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content14PepperTryCatchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.content::PepperTryCatchVar", %"class.content::PepperTryCatchVar"* %0, i64 0, i32 0, i32 1, i32 0
  store %"class.content::PepperPluginInstanceImpl"* %1, %"class.content::PepperPluginInstanceImpl"** %6, align 8
  %7 = icmp eq %"class.content::PepperPluginInstanceImpl"* %1, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.content::PepperPluginInstanceImpl", %"class.content::PepperPluginInstanceImpl"* %1, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %9) #11
  %10 = load %"class.content::PepperPluginInstanceImpl"*, %"class.content::PepperPluginInstanceImpl"** %6, align 8
  %11 = bitcast %"class.content::PepperPluginInstanceImpl"* %10 to %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)***
  br label %12

12:                                               ; preds = %4, %8
  %13 = phi %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)*** [ null, %4 ], [ %11, %8 ]
  %14 = phi %"class.content::PepperPluginInstanceImpl"* [ null, %4 ], [ %10, %8 ]
  %15 = getelementptr inbounds %"class.content::PepperTryCatchVar", %"class.content::PepperTryCatchVar"* %0, i64 0, i32 0, i32 2
  store %"class.content::V8VarConverter"* %2, %"class.content::V8VarConverter"** %15, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content17PepperTryCatchVarE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %16 = getelementptr inbounds %"class.content::PepperTryCatchVar", %"class.content::PepperTryCatchVar"* %0, i64 0, i32 1
  %17 = load %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)**, %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)*** %13, align 8
  %18 = getelementptr inbounds %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)*, %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)** %17, i64 4
  %19 = load %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)*, %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)** %18, align 8
  %20 = tail call %"class.v8::Isolate"* %19(%"class.content::PepperPluginInstanceImpl"* %14) #11
  tail call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* %16, %"class.v8::Isolate"* %20) #11
  %21 = getelementptr inbounds %"class.content::PepperTryCatchVar", %"class.content::PepperTryCatchVar"* %0, i64 0, i32 2, i32 0
  store %"class.v8::Context"* null, %"class.v8::Context"** %21, align 8
  %22 = getelementptr inbounds %"class.content::PepperTryCatchVar", %"class.content::PepperTryCatchVar"* %0, i64 0, i32 3
  %23 = load %"class.content::PepperPluginInstanceImpl"*, %"class.content::PepperPluginInstanceImpl"** %6, align 8
  %24 = bitcast %"class.content::PepperPluginInstanceImpl"* %23 to %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)***
  %25 = load %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)**, %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)*, %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)** %25, i64 4
  %27 = load %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)*, %"class.v8::Isolate"* (%"class.content::PepperPluginInstanceImpl"*)** %26, align 8
  %28 = tail call %"class.v8::Isolate"* %27(%"class.content::PepperPluginInstanceImpl"* %23) #11
  tail call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* %22, %"class.v8::Isolate"* %28) #11
  %29 = getelementptr inbounds %"class.content::PepperTryCatchVar", %"class.content::PepperTryCatchVar"* %0, i64 0, i32 4
  store %struct.PP_Var* %3, %struct.PP_Var** %29, align 8
  %30 = getelementptr inbounds %"class.content::PepperTryCatchVar", %"class.content::PepperTryCatchVar"* %0, i64 0, i32 5
  store i8 0, i8* %30, align 8
  %31 = load %"class.content::PepperPluginInstanceImpl"*, %"class.content::PepperPluginInstanceImpl"** %6, align 8
  %32 = tail call %"class.v8::Context"* @_ZN7content24PepperPluginInstanceImpl19GetMainWorldContextEv(%"class.content::PepperPluginInstanceImpl"* %31) #11
  store %"class.v8::Context"* %32, %"class.v8::Context"** %21, align 8
  %33 = icmp eq %"class.v8::Context"* %32, null
  br i1 %33, label %35, label %34

34:                                               ; preds = %12
  tail call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* nonnull %32) #11
  br label %35

35:                                               ; preds = %34, %12
  ret void
}

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #4

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #4

declare %"class.v8::Context"* @_ZN7content24PepperPluginInstanceImpl19GetMainWorldContextEv(%"class.content::PepperPluginInstanceImpl"*) local_unnamed_addr #4

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content17PepperTryCatchVarD2Ev(%"class.content::PepperTryCatchVar"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::PepperTryCatchVar", %"class.content::PepperTryCatchVar"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content17PepperTryCatchVarE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::PepperTryCatchVar", %"class.content::PepperTryCatchVar"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.v8::Context"*, %"class.v8::Context"** %3, align 8
  %5 = icmp eq %"class.v8::Context"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* nonnull %4) #11
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"class.content::PepperTryCatchVar", %"class.content::PepperTryCatchVar"* %0, i64 0, i32 3
  tail call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* %8) #11
  %9 = getelementptr inbounds %"class.content::PepperTryCatchVar", %"class.content::PepperTryCatchVar"* %0, i64 0, i32 1
  tail call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* %9) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content14PepperTryCatchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %10 = getelementptr inbounds %"class.content::PepperTryCatchVar", %"class.content::PepperTryCatchVar"* %0, i64 0, i32 0, i32 1, i32 0
  %11 = load %"class.content::PepperPluginInstanceImpl"*, %"class.content::PepperPluginInstanceImpl"** %10, align 8
  %12 = icmp eq %"class.content::PepperPluginInstanceImpl"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.content::PepperPluginInstanceImpl", %"class.content::PepperPluginInstanceImpl"* %11, i64 0, i32 1
  %15 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %14, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %15) #11
  %16 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %14, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %26

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %14, i64 -2
  %21 = bitcast %"class.base::RefCounted"* %20 to %"class.content::PepperPluginInstanceImpl"*
  %22 = bitcast %"class.base::RefCounted"* %20 to void (%"class.content::PepperPluginInstanceImpl"*)***
  %23 = load void (%"class.content::PepperPluginInstanceImpl"*)**, void (%"class.content::PepperPluginInstanceImpl"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.content::PepperPluginInstanceImpl"*)*, void (%"class.content::PepperPluginInstanceImpl"*)** %23, i64 1
  %25 = load void (%"class.content::PepperPluginInstanceImpl"*)*, void (%"class.content::PepperPluginInstanceImpl"*)** %24, align 8
  tail call void %25(%"class.content::PepperPluginInstanceImpl"* nonnull %21) #11
  br label %26

26:                                               ; preds = %7, %13, %19
  ret void
}

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content17PepperTryCatchVarD0Ev(%"class.content::PepperTryCatchVar"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::PepperTryCatchVar", %"class.content::PepperTryCatchVar"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content17PepperTryCatchVarE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::PepperTryCatchVar", %"class.content::PepperTryCatchVar"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.v8::Context"*, %"class.v8::Context"** %3, align 8
  %5 = icmp eq %"class.v8::Context"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* nonnull %4) #11
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"class.content::PepperTryCatchVar", %"class.content::PepperTryCatchVar"* %0, i64 0, i32 3
  tail call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* %8) #11
  %9 = getelementptr inbounds %"class.content::PepperTryCatchVar", %"class.content::PepperTryCatchVar"* %0, i64 0, i32 1
  tail call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* %9) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content14PepperTryCatchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %10 = getelementptr inbounds %"class.content::PepperTryCatchVar", %"class.content::PepperTryCatchVar"* %0, i64 0, i32 0, i32 1, i32 0
  %11 = load %"class.content::PepperPluginInstanceImpl"*, %"class.content::PepperPluginInstanceImpl"** %10, align 8
  %12 = icmp eq %"class.content::PepperPluginInstanceImpl"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.content::PepperPluginInstanceImpl", %"class.content::PepperPluginInstanceImpl"* %11, i64 0, i32 1
  %15 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %14, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %15) #11
  %16 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %14, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %26

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %14, i64 -2
  %21 = bitcast %"class.base::RefCounted"* %20 to %"class.content::PepperPluginInstanceImpl"*
  %22 = bitcast %"class.base::RefCounted"* %20 to void (%"class.content::PepperPluginInstanceImpl"*)***
  %23 = load void (%"class.content::PepperPluginInstanceImpl"*)**, void (%"class.content::PepperPluginInstanceImpl"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.content::PepperPluginInstanceImpl"*)*, void (%"class.content::PepperPluginInstanceImpl"*)** %23, i64 1
  %25 = load void (%"class.content::PepperPluginInstanceImpl"*)*, void (%"class.content::PepperPluginInstanceImpl"*)** %24, align 8
  tail call void %25(%"class.content::PepperPluginInstanceImpl"* nonnull %21) #11
  br label %26

26:                                               ; preds = %7, %13, %19
  %27 = bitcast %"class.content::PepperTryCatchVar"* %0 to i8*
  tail call void @_ZdlPv(i8* %27) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content17PepperTryCatchVar12HasExceptionEv(%"class.content::PepperTryCatchVar"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.v8::String::Utf8Value", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.content::PepperTryCatchVar", %"class.content::PepperTryCatchVar"* %0, i64 0, i32 5
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %100

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #11
  %12 = getelementptr inbounds %"class.content::PepperTryCatchVar", %"class.content::PepperTryCatchVar"* %0, i64 0, i32 2, i32 0
  %13 = load %"class.v8::Context"*, %"class.v8::Context"** %12, align 8
  %14 = icmp eq %"class.v8::Context"* %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %8
  %16 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* nonnull %2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0), i64 34) #11
  br label %70

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.content::PepperTryCatchVar", %"class.content::PepperTryCatchVar"* %0, i64 0, i32 3
  %19 = tail call zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"* %18) #11
  br i1 %19, label %20, label %70

20:                                               ; preds = %17
  %21 = tail call %"class.v8::Message"* @_ZNK2v88TryCatch7MessageEv(%"class.v8::TryCatch"* %18) #11
  %22 = icmp eq %"class.v8::Message"* %21, null
  br i1 %22, label %68, label %23

23:                                               ; preds = %20
  %24 = bitcast %"class.v8::String::Utf8Value"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #11
  %25 = getelementptr inbounds %"class.v8::String::Utf8Value", %"class.v8::String::Utf8Value"* %3, i64 0, i32 0
  %26 = getelementptr inbounds %"class.v8::String::Utf8Value", %"class.v8::String::Utf8Value"* %3, i64 0, i32 1
  %27 = getelementptr inbounds %"class.content::PepperTryCatchVar", %"class.content::PepperTryCatchVar"* %0, i64 0, i32 1
  %28 = bitcast %"class.v8::HandleScope"* %27 to %"class.v8::Isolate"**
  %29 = bitcast %"class.v8::String::Utf8Value"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 16, i1 false)
  %30 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %28, align 8
  %31 = tail call %"class.v8::Message"* @_ZNK2v88TryCatch7MessageEv(%"class.v8::TryCatch"* %18) #11
  %32 = tail call %"class.v8::String"* @_ZNK2v87Message3GetEv(%"class.v8::Message"* %31) #11
  %33 = bitcast %"class.v8::String"* %32 to %"class.v8::Value"*
  call void @_ZN2v86String9Utf8ValueC1EPNS_7IsolateENS_5LocalINS_5ValueEEE(%"class.v8::String::Utf8Value"* nonnull %3, %"class.v8::Isolate"* %30, %"class.v8::Value"* %33) #11
  %34 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #11
  %35 = load i8*, i8** %25, align 8
  %36 = load i32, i32* %26, align 8
  %37 = sext i32 %36 to i64
  %38 = icmp ugt i32 %36, -17
  br i1 %38, label %39, label %41

39:                                               ; preds = %23
  %40 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %40) #12
  unreachable

41:                                               ; preds = %23
  %42 = icmp ult i32 %36, 23
  br i1 %42, label %51, label %43

43:                                               ; preds = %41
  %44 = add nuw nsw i64 %37, 16
  %45 = and i64 %44, -16
  %46 = call i8* @_Znwm(i64 %45) #13
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %46, i8** %47, align 8
  %48 = or i64 %45, -9223372036854775808
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %37, i64* %50, align 8
  br label %56

51:                                               ; preds = %41
  %52 = trunc i32 %36 to i8
  %53 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  store i8 %52, i8* %54, align 1
  %55 = icmp eq i32 %36, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %51, %43
  %57 = phi i8* [ %46, %43 ], [ %34, %51 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %57, i8* align 1 %35, i64 %37, i1 false) #11
  br label %58

58:                                               ; preds = %51, %56
  %59 = phi i8* [ %34, %51 ], [ %57, %56 ]
  %60 = getelementptr inbounds i8, i8* %59, i64 %37
  store i8 0, i8* %60, align 1
  %61 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %58
  %66 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %66) #13
  br label %67

67:                                               ; preds = %65, %58
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* nonnull align 8 %34, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #11
  call void @_ZN2v86String9Utf8ValueD1Ev(%"class.v8::String::Utf8Value"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #11
  br label %70

68:                                               ; preds = %20
  %69 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* nonnull %2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i64 25) #11
  br label %70

70:                                               ; preds = %67, %68, %15, %17
  %71 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  %75 = load i64, i64* %11, align 8
  %76 = zext i8 %73 to i64
  %77 = select i1 %74, i64 %75, i64 %76
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %92, label %79

79:                                               ; preds = %70
  store i8 1, i8* %5, align 8
  %80 = getelementptr inbounds %"class.content::PepperTryCatchVar", %"class.content::PepperTryCatchVar"* %0, i64 0, i32 4
  %81 = load %struct.PP_Var*, %struct.PP_Var** %80, align 8
  %82 = icmp eq %struct.PP_Var* %81, null
  br i1 %82, label %92, label %83

83:                                               ; preds = %79
  %84 = call { i64, i64 } @_ZN5ppapi9StringVar13StringToPPVarERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #11
  %85 = extractvalue { i64, i64 } %84, 0
  %86 = extractvalue { i64, i64 } %84, 1
  %87 = load %struct.PP_Var*, %struct.PP_Var** %80, align 8
  %88 = bitcast %struct.PP_Var* %87 to i64*
  store i64 %85, i64* %88, align 8
  %89 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %87, i64 0, i32 2
  %90 = bitcast %union.PP_VarValue* %89 to i64*
  store i64 %86, i64* %90, align 8
  %91 = load i8, i8* %72, align 1
  br label %92

92:                                               ; preds = %79, %83, %70
  %93 = phi i8 [ %73, %79 ], [ %91, %83 ], [ %73, %70 ]
  %94 = load i8, i8* %5, align 8, !range !2
  %95 = icmp ne i8 %94, 0
  %96 = icmp slt i8 %93, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %92
  %98 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %98) #13
  br label %99

99:                                               ; preds = %92, %97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  br label %100

100:                                              ; preds = %1, %99
  %101 = phi i1 [ %95, %99 ], [ true, %1 ]
  ret i1 %101
}

declare zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"*) local_unnamed_addr #4

declare %"class.v8::Message"* @_ZNK2v88TryCatch7MessageEv(%"class.v8::TryCatch"*) local_unnamed_addr #4

declare %"class.v8::String"* @_ZNK2v87Message3GetEv(%"class.v8::Message"*) local_unnamed_addr #4

declare void @_ZN2v86String9Utf8ValueC1EPNS_7IsolateENS_5LocalINS_5ValueEEE(%"class.v8::String::Utf8Value"*, %"class.v8::Isolate"*, %"class.v8::Value"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2v86String9Utf8ValueD1Ev(%"class.v8::String::Utf8Value"*) unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::Context"* @_ZN7content17PepperTryCatchVar10GetContextEv(%"class.content::PepperTryCatchVar"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.content::PepperTryCatchVar", %"class.content::PepperTryCatchVar"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.v8::Context"*, %"class.v8::Context"** %2, align 8
  ret %"class.v8::Context"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content17PepperTryCatchVar12SetExceptionEPKc(%"class.content::PepperTryCatchVar"* nocapture, i8*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::PepperTryCatchVar", %"class.content::PepperTryCatchVar"* %0, i64 0, i32 5
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %21

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.content::PepperTryCatchVar", %"class.content::PepperTryCatchVar"* %0, i64 0, i32 4
  %8 = load %struct.PP_Var*, %struct.PP_Var** %7, align 8
  %9 = icmp eq %struct.PP_Var* %8, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %6
  %11 = tail call i64 @strlen(i8* %1) #14
  %12 = trunc i64 %11 to i32
  %13 = tail call { i64, i64 } @_ZN5ppapi9StringVar13StringToPPVarEPKcj(i8* %1, i32 %12) #11
  %14 = extractvalue { i64, i64 } %13, 0
  %15 = extractvalue { i64, i64 } %13, 1
  %16 = load %struct.PP_Var*, %struct.PP_Var** %7, align 8
  %17 = bitcast %struct.PP_Var* %16 to i64*
  store i64 %14, i64* %17, align 8
  %18 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %16, i64 0, i32 2
  %19 = bitcast %union.PP_VarValue* %18 to i64*
  store i64 %15, i64* %19, align 8
  br label %20

20:                                               ; preds = %6, %10
  store i8 1, i8* %3, align 8
  br label %21

21:                                               ; preds = %2, %20
  ret void
}

declare { i64, i64 } @_ZN5ppapi9StringVar13StringToPPVarEPKcj(i8*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

declare void @__cxa_pure_virtual() unnamed_addr

declare %"class.v8::Value"* @_ZN3gin9ConverterIN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEvE4ToV8EPN2v87IsolateERKS6_(%"class.v8::Isolate"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
