; ModuleID = '../../components/services/filesystem/shared_temp_dir.cc'
source_filename = "../../components/services/filesystem/shared_temp_dir.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.filesystem::SharedTempDir" = type { %"class.base::RefCounted", %"class.std::__1::unique_ptr" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::ScopedTempDir"* }
%"class.base::ScopedTempDir" = type { %"class.base::FilePath" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }

@_ZN10filesystem13SharedTempDirC1ENSt3__110unique_ptrIN4base13ScopedTempDirENS1_14default_deleteIS4_EEEE = hidden unnamed_addr alias void (%"class.filesystem::SharedTempDir"*, %"class.base::ScopedTempDir"*), void (%"class.filesystem::SharedTempDir"*, %"class.base::ScopedTempDir"*)* @_ZN10filesystem13SharedTempDirC2ENSt3__110unique_ptrIN4base13ScopedTempDirENS1_14default_deleteIS4_EEEE
@_ZN10filesystem13SharedTempDirD1Ev = hidden unnamed_addr alias void (%"class.filesystem::SharedTempDir"*), void (%"class.filesystem::SharedTempDir"*)* @_ZN10filesystem13SharedTempDirD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10filesystem13SharedTempDirC2ENSt3__110unique_ptrIN4base13ScopedTempDirENS1_14default_deleteIS4_EEEE(%"class.filesystem::SharedTempDir"* nocapture, %"class.base::ScopedTempDir"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.base::ScopedTempDir"* %1 to i64
  %4 = getelementptr inbounds %"class.filesystem::SharedTempDir", %"class.filesystem::SharedTempDir"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.filesystem::SharedTempDir", %"class.filesystem::SharedTempDir"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %3, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10filesystem13SharedTempDirD2Ev(%"class.filesystem::SharedTempDir"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.filesystem::SharedTempDir", %"class.filesystem::SharedTempDir"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.base::ScopedTempDir"*, %"class.base::ScopedTempDir"** %2, align 8
  store %"class.base::ScopedTempDir"* null, %"class.base::ScopedTempDir"** %2, align 8
  %4 = icmp eq %"class.base::ScopedTempDir"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN4base13ScopedTempDirD1Ev(%"class.base::ScopedTempDir"* nonnull %3) #3
  %6 = bitcast %"class.base::ScopedTempDir"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #4
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base13ScopedTempDirD1Ev(%"class.base::ScopedTempDir"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
