; ModuleID = 'gen/media/mojo/mojom/cdm_storage.mojom-blink-test-utils.cc'
source_filename = "gen/media/mojo/mojom/cdm_storage.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::mojom::blink::CdmStorageAsyncWaiter" = type { %"class.media::mojom::blink::CdmStorage"* }
%"class.media::mojom::blink::CdmStorage" = type { i32 (...)** }
%"class.media::mojom::blink::CdmFileAsyncWaiter" = type { %"class.media::mojom::blink::CdmFile"* }
%"class.media::mojom::blink::CdmFile" = type { i32 (...)** }
%"class.media::mojom::blink::CdmStorageInterceptorForTesting" = type { %"class.media::mojom::blink::CdmStorage" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i32 }
%"class.mojo::PendingAssociatedRemote" = type <{ %"class.mojo::ScopedInterfaceEndpointHandle", i32, [4 x i8] }>
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.16, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.9", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.11" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.16 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.17" }>
%"class.base::RefCountedThreadSafe.17" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.18 }
%class.scoped_refptr.18 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.19", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.19" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.20" }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl.23" }
%"struct.std::__1::__cxx_atomic_impl.23" = type { %"struct.std::__1::__cxx_atomic_base_impl.24" }
%"struct.std::__1::__cxx_atomic_base_impl.24" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.media::mojom::blink::CdmFileInterceptorForTesting" = type { %"class.media::mojom::blink::CdmFile" }
%"class.base::OnceCallback.25" = type { %"class.base::internal::CallbackBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.base::OnceCallback.26" = type { %"class.base::internal::CallbackBase" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5media5mojom5blink10CdmStorageD2Ev = comdat any

$_ZN5media5mojom5blink31CdmStorageInterceptorForTestingD0Ev = comdat any

$_ZN5media5mojom5blink7CdmFileD2Ev = comdat any

$_ZN5media5mojom5blink28CdmFileInterceptorForTestingD0Ev = comdat any

$_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEEaSERKS2_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

@.str = private unnamed_addr constant [5 x i8] c"Open\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"gen/media/mojo/mojom/cdm_storage.mojom-blink-test-utils.cc\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"Read\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"Write\00", align 1
@_ZTVN5media5mojom5blink31CdmStorageInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::mojom::blink::CdmStorage"*)* @_ZN5media5mojom5blink10CdmStorageD2Ev to i8*), i8* bitcast (void (%"class.media::mojom::blink::CdmStorageInterceptorForTesting"*)* @_ZN5media5mojom5blink31CdmStorageInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.media::mojom::blink::CdmStorageInterceptorForTesting"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)* @_ZN5media5mojom5blink31CdmStorageInterceptorForTesting4OpenERKN3WTF6StringEN4base12OnceCallbackIFvNS0_17CdmStorage_StatusEN4mojo23PendingAssociatedRemoteINS1_7CdmFileEEEEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5media5mojom5blink28CdmFileInterceptorForTestingE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::mojom::blink::CdmFile"*)* @_ZN5media5mojom5blink7CdmFileD2Ev to i8*), i8* bitcast (void (%"class.media::mojom::blink::CdmFileInterceptorForTesting"*)* @_ZN5media5mojom5blink28CdmFileInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.media::mojom::blink::CdmFileInterceptorForTesting"*, %"class.base::OnceCallback.25"*)* @_ZN5media5mojom5blink28CdmFileInterceptorForTesting4ReadEN4base12OnceCallbackIFvNS0_14CdmFile_StatusERKN3WTF6VectorIhLj0ENS6_18PartitionAllocatorEEEEEE to i8*), i8* bitcast (void (%"class.media::mojom::blink::CdmFileInterceptorForTesting"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.26"*)* @_ZN5media5mojom5blink28CdmFileInterceptorForTesting5WriteERKN3WTF6VectorIhLj0ENS3_18PartitionAllocatorEEEN4base12OnceCallbackIFvNS0_14CdmFile_StatusEEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1

@_ZN5media5mojom5blink21CdmStorageAsyncWaiterC1EPNS1_10CdmStorageE = hidden unnamed_addr alias void (%"class.media::mojom::blink::CdmStorageAsyncWaiter"*, %"class.media::mojom::blink::CdmStorage"*), void (%"class.media::mojom::blink::CdmStorageAsyncWaiter"*, %"class.media::mojom::blink::CdmStorage"*)* @_ZN5media5mojom5blink21CdmStorageAsyncWaiterC2EPNS1_10CdmStorageE
@_ZN5media5mojom5blink21CdmStorageAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.media::mojom::blink::CdmStorageAsyncWaiter"*), void (%"class.media::mojom::blink::CdmStorageAsyncWaiter"*)* @_ZN5media5mojom5blink21CdmStorageAsyncWaiterD2Ev
@_ZN5media5mojom5blink18CdmFileAsyncWaiterC1EPNS1_7CdmFileE = hidden unnamed_addr alias void (%"class.media::mojom::blink::CdmFileAsyncWaiter"*, %"class.media::mojom::blink::CdmFile"*), void (%"class.media::mojom::blink::CdmFileAsyncWaiter"*, %"class.media::mojom::blink::CdmFile"*)* @_ZN5media5mojom5blink18CdmFileAsyncWaiterC2EPNS1_7CdmFileE
@_ZN5media5mojom5blink18CdmFileAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.media::mojom::blink::CdmFileAsyncWaiter"*), void (%"class.media::mojom::blink::CdmFileAsyncWaiter"*)* @_ZN5media5mojom5blink18CdmFileAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media5mojom5blink31CdmStorageInterceptorForTesting4OpenERKN3WTF6StringEN4base12OnceCallbackIFvNS0_17CdmStorage_StatusEN4mojo23PendingAssociatedRemoteINS1_7CdmFileEEEEEE(%"class.media::mojom::blink::CdmStorageInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8), %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.media::mojom::blink::CdmStorageInterceptorForTesting"* %0 to %"class.media::mojom::blink::CdmStorage"* (%"class.media::mojom::blink::CdmStorageInterceptorForTesting"*)***
  %6 = load %"class.media::mojom::blink::CdmStorage"* (%"class.media::mojom::blink::CdmStorageInterceptorForTesting"*)**, %"class.media::mojom::blink::CdmStorage"* (%"class.media::mojom::blink::CdmStorageInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.media::mojom::blink::CdmStorage"* (%"class.media::mojom::blink::CdmStorageInterceptorForTesting"*)*, %"class.media::mojom::blink::CdmStorage"* (%"class.media::mojom::blink::CdmStorageInterceptorForTesting"*)** %6, i64 3
  %8 = load %"class.media::mojom::blink::CdmStorage"* (%"class.media::mojom::blink::CdmStorageInterceptorForTesting"*)*, %"class.media::mojom::blink::CdmStorage"* (%"class.media::mojom::blink::CdmStorageInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.media::mojom::blink::CdmStorage"* %8(%"class.media::mojom::blink::CdmStorageInterceptorForTesting"* %0) #10
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.media::mojom::blink::CdmStorage"* %9 to void (%"class.media::mojom::blink::CdmStorage"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)***
  %15 = load void (%"class.media::mojom::blink::CdmStorage"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)**, void (%"class.media::mojom::blink::CdmStorage"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.media::mojom::blink::CdmStorage"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*, void (%"class.media::mojom::blink::CdmStorage"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)** %15, i64 2
  %17 = load void (%"class.media::mojom::blink::CdmStorage"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*, void (%"class.media::mojom::blink::CdmStorage"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)** %16, align 8
  call void %17(%"class.media::mojom::blink::CdmStorage"* %9, %"class.WTF::String"* dereferenceable(8) %1, %"class.base::OnceCallback"* nonnull %4) #10
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media5mojom5blink21CdmStorageAsyncWaiterC2EPNS1_10CdmStorageE(%"class.media::mojom::blink::CdmStorageAsyncWaiter"* nocapture, %"class.media::mojom::blink::CdmStorage"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.media::mojom::blink::CdmStorageAsyncWaiter", %"class.media::mojom::blink::CdmStorageAsyncWaiter"* %0, i64 0, i32 0
  store %"class.media::mojom::blink::CdmStorage"* %1, %"class.media::mojom::blink::CdmStorage"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media5mojom5blink21CdmStorageAsyncWaiterD2Ev(%"class.media::mojom::blink::CdmStorageAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media5mojom5blink21CdmStorageAsyncWaiter4OpenERKN3WTF6StringEPNS0_17CdmStorage_StatusEPN4mojo23PendingAssociatedRemoteINS1_7CdmFileEEE(%"class.media::mojom::blink::CdmStorageAsyncWaiter"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), i32*, %"class.mojo::PendingAssociatedRemote"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint i32* %2 to i64
  %9 = ptrtoint %"class.mojo::PendingAssociatedRemote"* %3 to i64
  %10 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #10
  %11 = getelementptr inbounds %"class.media::mojom::blink::CdmStorageAsyncWaiter", %"class.media::mojom::blink::CdmStorageAsyncWaiter"* %0, i64 0, i32 0
  %12 = load %"class.media::mojom::blink::CdmStorage"*, %"class.media::mojom::blink::CdmStorage"** %11, align 8
  %13 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %14 = call i8* @_Znwm(i64 64) #11, !noalias !2
  %15 = bitcast i8* %14 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %15, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.mojo::PendingAssociatedRemote"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5media5mojom5blink21CdmStorageAsyncWaiter4OpenERKN3WTF6StringEPNS4_17CdmStorage_StatusEPN4mojo23PendingAssociatedRemoteINS5_7CdmFileEEEE3$_0JPNS_7RunLoopESC_SH_EEEFvSB_SG_EE7RunOnceEPNS0_13BindStateBaseESB_OSG_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5media5mojom5blink21CdmStorageAsyncWaiter4OpenERKN3WTF6StringEPNS3_17CdmStorage_StatusEPN4mojo23PendingAssociatedRemoteINS4_7CdmFileEEEE3$_0JPNS_7RunLoopESB_SG_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !2
  %16 = getelementptr inbounds i8, i8* %14, i64 40
  %17 = bitcast i8* %16 to i64*
  store i64 %13, i64* %17, align 8, !noalias !2
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = bitcast i8* %18 to i64*
  store i64 %8, i64* %19, align 8, !noalias !2
  %20 = getelementptr inbounds i8, i8* %14, i64 56
  %21 = bitcast i8* %20 to i64*
  store i64 %9, i64* %21, align 8, !noalias !2
  %22 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %14, i8** %22, align 8, !alias.scope !2
  %23 = bitcast %"class.media::mojom::blink::CdmStorage"* %12 to void (%"class.media::mojom::blink::CdmStorage"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)***
  %24 = load void (%"class.media::mojom::blink::CdmStorage"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)**, void (%"class.media::mojom::blink::CdmStorage"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.media::mojom::blink::CdmStorage"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*, void (%"class.media::mojom::blink::CdmStorage"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)** %24, i64 2
  %26 = load void (%"class.media::mojom::blink::CdmStorage"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*, void (%"class.media::mojom::blink::CdmStorage"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)** %25, align 8
  call void %26(%"class.media::mojom::blink::CdmStorage"* %12, %"class.WTF::String"* dereferenceable(8) %1, %"class.base::OnceCallback"* nonnull %6) #10
  %27 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %27) #10
  %28 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 58) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media5mojom5blink28CdmFileInterceptorForTesting4ReadEN4base12OnceCallbackIFvNS0_14CdmFile_StatusERKN3WTF6VectorIhLj0ENS6_18PartitionAllocatorEEEEEE(%"class.media::mojom::blink::CdmFileInterceptorForTesting"*, %"class.base::OnceCallback.25"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.25", align 8
  %4 = bitcast %"class.media::mojom::blink::CdmFileInterceptorForTesting"* %0 to %"class.media::mojom::blink::CdmFile"* (%"class.media::mojom::blink::CdmFileInterceptorForTesting"*)***
  %5 = load %"class.media::mojom::blink::CdmFile"* (%"class.media::mojom::blink::CdmFileInterceptorForTesting"*)**, %"class.media::mojom::blink::CdmFile"* (%"class.media::mojom::blink::CdmFileInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.media::mojom::blink::CdmFile"* (%"class.media::mojom::blink::CdmFileInterceptorForTesting"*)*, %"class.media::mojom::blink::CdmFile"* (%"class.media::mojom::blink::CdmFileInterceptorForTesting"*)** %5, i64 4
  %7 = load %"class.media::mojom::blink::CdmFile"* (%"class.media::mojom::blink::CdmFileInterceptorForTesting"*)*, %"class.media::mojom::blink::CdmFile"* (%"class.media::mojom::blink::CdmFileInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.media::mojom::blink::CdmFile"* %7(%"class.media::mojom::blink::CdmFileInterceptorForTesting"* %0) #10
  %9 = getelementptr inbounds %"class.base::OnceCallback.25", %"class.base::OnceCallback.25"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback.25"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.25"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.media::mojom::blink::CdmFile"* %8 to void (%"class.media::mojom::blink::CdmFile"*, %"class.base::OnceCallback.25"*)***
  %14 = load void (%"class.media::mojom::blink::CdmFile"*, %"class.base::OnceCallback.25"*)**, void (%"class.media::mojom::blink::CdmFile"*, %"class.base::OnceCallback.25"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.media::mojom::blink::CdmFile"*, %"class.base::OnceCallback.25"*)*, void (%"class.media::mojom::blink::CdmFile"*, %"class.base::OnceCallback.25"*)** %14, i64 2
  %16 = load void (%"class.media::mojom::blink::CdmFile"*, %"class.base::OnceCallback.25"*)*, void (%"class.media::mojom::blink::CdmFile"*, %"class.base::OnceCallback.25"*)** %15, align 8
  call void %16(%"class.media::mojom::blink::CdmFile"* %8, %"class.base::OnceCallback.25"* nonnull %3) #10
  %17 = getelementptr inbounds %"class.base::OnceCallback.25", %"class.base::OnceCallback.25"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media5mojom5blink28CdmFileInterceptorForTesting5WriteERKN3WTF6VectorIhLj0ENS3_18PartitionAllocatorEEEN4base12OnceCallbackIFvNS0_14CdmFile_StatusEEEE(%"class.media::mojom::blink::CdmFileInterceptorForTesting"*, %"class.WTF::Vector"* dereferenceable(16), %"class.base::OnceCallback.26"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.26", align 8
  %5 = bitcast %"class.media::mojom::blink::CdmFileInterceptorForTesting"* %0 to %"class.media::mojom::blink::CdmFile"* (%"class.media::mojom::blink::CdmFileInterceptorForTesting"*)***
  %6 = load %"class.media::mojom::blink::CdmFile"* (%"class.media::mojom::blink::CdmFileInterceptorForTesting"*)**, %"class.media::mojom::blink::CdmFile"* (%"class.media::mojom::blink::CdmFileInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.media::mojom::blink::CdmFile"* (%"class.media::mojom::blink::CdmFileInterceptorForTesting"*)*, %"class.media::mojom::blink::CdmFile"* (%"class.media::mojom::blink::CdmFileInterceptorForTesting"*)** %6, i64 4
  %8 = load %"class.media::mojom::blink::CdmFile"* (%"class.media::mojom::blink::CdmFileInterceptorForTesting"*)*, %"class.media::mojom::blink::CdmFile"* (%"class.media::mojom::blink::CdmFileInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.media::mojom::blink::CdmFile"* %8(%"class.media::mojom::blink::CdmFileInterceptorForTesting"* %0) #10
  %10 = getelementptr inbounds %"class.base::OnceCallback.26", %"class.base::OnceCallback.26"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback.26"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.26"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.media::mojom::blink::CdmFile"* %9 to void (%"class.media::mojom::blink::CdmFile"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.26"*)***
  %15 = load void (%"class.media::mojom::blink::CdmFile"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.26"*)**, void (%"class.media::mojom::blink::CdmFile"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.26"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.media::mojom::blink::CdmFile"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.26"*)*, void (%"class.media::mojom::blink::CdmFile"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.26"*)** %15, i64 3
  %17 = load void (%"class.media::mojom::blink::CdmFile"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.26"*)*, void (%"class.media::mojom::blink::CdmFile"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.26"*)** %16, align 8
  call void %17(%"class.media::mojom::blink::CdmFile"* %9, %"class.WTF::Vector"* dereferenceable(16) %1, %"class.base::OnceCallback.26"* nonnull %4) #10
  %18 = getelementptr inbounds %"class.base::OnceCallback.26", %"class.base::OnceCallback.26"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media5mojom5blink18CdmFileAsyncWaiterC2EPNS1_7CdmFileE(%"class.media::mojom::blink::CdmFileAsyncWaiter"* nocapture, %"class.media::mojom::blink::CdmFile"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.media::mojom::blink::CdmFileAsyncWaiter", %"class.media::mojom::blink::CdmFileAsyncWaiter"* %0, i64 0, i32 0
  store %"class.media::mojom::blink::CdmFile"* %1, %"class.media::mojom::blink::CdmFile"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media5mojom5blink18CdmFileAsyncWaiterD2Ev(%"class.media::mojom::blink::CdmFileAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media5mojom5blink18CdmFileAsyncWaiter4ReadEPNS0_14CdmFile_StatusEPN3WTF6VectorIhLj0ENS5_18PartitionAllocatorEEE(%"class.media::mojom::blink::CdmFileAsyncWaiter"* nocapture readonly, i32*, %"class.WTF::Vector"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback.25", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint i32* %1 to i64
  %8 = ptrtoint %"class.WTF::Vector"* %2 to i64
  %9 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #10
  %10 = getelementptr inbounds %"class.media::mojom::blink::CdmFileAsyncWaiter", %"class.media::mojom::blink::CdmFileAsyncWaiter"* %0, i64 0, i32 0
  %11 = load %"class.media::mojom::blink::CdmFile"*, %"class.media::mojom::blink::CdmFile"** %10, align 8
  %12 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %13 = call i8* @_Znwm(i64 64) #11, !noalias !7
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.WTF::Vector"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5media5mojom5blink18CdmFileAsyncWaiter4ReadEPNS4_14CdmFile_StatusEPN3WTF6VectorIhLj0ENS9_18PartitionAllocatorEEEE3$_1JPNS_7RunLoopES8_SD_EEEFvS7_RKSC_EE7RunOnceEPNS0_13BindStateBaseES7_SJ_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5media5mojom5blink18CdmFileAsyncWaiter4ReadEPNS3_14CdmFile_StatusEPN3WTF6VectorIhLj0ENS8_18PartitionAllocatorEEEE3$_1JPNS_7RunLoopES7_SC_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !7
  %15 = getelementptr inbounds i8, i8* %13, i64 40
  %16 = bitcast i8* %15 to i64*
  store i64 %12, i64* %16, align 8, !noalias !7
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to i64*
  store i64 %7, i64* %18, align 8, !noalias !7
  %19 = getelementptr inbounds i8, i8* %13, i64 56
  %20 = bitcast i8* %19 to i64*
  store i64 %8, i64* %20, align 8, !noalias !7
  %21 = bitcast %"class.base::OnceCallback.25"* %5 to i8**
  store i8* %13, i8** %21, align 8, !alias.scope !7
  %22 = bitcast %"class.media::mojom::blink::CdmFile"* %11 to void (%"class.media::mojom::blink::CdmFile"*, %"class.base::OnceCallback.25"*)***
  %23 = load void (%"class.media::mojom::blink::CdmFile"*, %"class.base::OnceCallback.25"*)**, void (%"class.media::mojom::blink::CdmFile"*, %"class.base::OnceCallback.25"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.media::mojom::blink::CdmFile"*, %"class.base::OnceCallback.25"*)*, void (%"class.media::mojom::blink::CdmFile"*, %"class.base::OnceCallback.25"*)** %23, i64 2
  %25 = load void (%"class.media::mojom::blink::CdmFile"*, %"class.base::OnceCallback.25"*)*, void (%"class.media::mojom::blink::CdmFile"*, %"class.base::OnceCallback.25"*)** %24, align 8
  call void %25(%"class.media::mojom::blink::CdmFile"* %11, %"class.base::OnceCallback.25"* nonnull %5) #10
  %26 = getelementptr inbounds %"class.base::OnceCallback.25", %"class.base::OnceCallback.25"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #10
  %27 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 91) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media5mojom5blink18CdmFileAsyncWaiter5WriteERKN3WTF6VectorIhLj0ENS3_18PartitionAllocatorEEEPNS0_14CdmFile_StatusE(%"class.media::mojom::blink::CdmFileAsyncWaiter"* nocapture readonly, %"class.WTF::Vector"* dereferenceable(16), i32*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback.26", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint i32* %2 to i64
  %8 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #10
  %9 = getelementptr inbounds %"class.media::mojom::blink::CdmFileAsyncWaiter", %"class.media::mojom::blink::CdmFileAsyncWaiter"* %0, i64 0, i32 0
  %10 = load %"class.media::mojom::blink::CdmFile"*, %"class.media::mojom::blink::CdmFile"** %9, align 8
  %11 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %12 = call i8* @_Znwm(i64 56) #11, !noalias !12
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5media5mojom5blink18CdmFileAsyncWaiter5WriteERKN3WTF6VectorIhLj0ENS7_18PartitionAllocatorEEEPNS4_14CdmFile_StatusEE3$_2JPNS_7RunLoopESE_EEEFvSD_EE7RunOnceEPNS0_13BindStateBaseESD_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5media5mojom5blink18CdmFileAsyncWaiter5WriteERKN3WTF6VectorIhLj0ENS6_18PartitionAllocatorEEEPNS3_14CdmFile_StatusEE3$_2JPNS_7RunLoopESD_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !12
  %14 = getelementptr inbounds i8, i8* %12, i64 40
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8, !noalias !12
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %7, i64* %17, align 8, !noalias !12
  %18 = bitcast %"class.base::OnceCallback.26"* %5 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !12
  %19 = bitcast %"class.media::mojom::blink::CdmFile"* %10 to void (%"class.media::mojom::blink::CdmFile"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.26"*)***
  %20 = load void (%"class.media::mojom::blink::CdmFile"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.26"*)**, void (%"class.media::mojom::blink::CdmFile"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.26"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.media::mojom::blink::CdmFile"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.26"*)*, void (%"class.media::mojom::blink::CdmFile"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.26"*)** %20, i64 3
  %22 = load void (%"class.media::mojom::blink::CdmFile"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.26"*)*, void (%"class.media::mojom::blink::CdmFile"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.26"*)** %21, align 8
  call void %22(%"class.media::mojom::blink::CdmFile"* %10, %"class.WTF::Vector"* dereferenceable(16) %1, %"class.base::OnceCallback.26"* nonnull %5) #10
  %23 = getelementptr inbounds %"class.base::OnceCallback.26", %"class.base::OnceCallback.26"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #10
  %24 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 106) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5media5mojom5blink10CdmStorageD2Ev(%"class.media::mojom::blink::CdmStorage"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5media5mojom5blink31CdmStorageInterceptorForTestingD0Ev(%"class.media::mojom::blink::CdmStorageInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5media5mojom5blink7CdmFileD2Ev(%"class.media::mojom::blink::CdmFile"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5media5mojom5blink28CdmFileInterceptorForTestingD0Ev(%"class.media::mojom::blink::CdmFileInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5media5mojom5blink21CdmStorageAsyncWaiter4OpenERKN3WTF6StringEPNS4_17CdmStorage_StatusEPN4mojo23PendingAssociatedRemoteINS5_7CdmFileEEEE3$_0JPNS_7RunLoopESC_SH_EEEFvSB_SG_EE7RunOnceEPNS0_13BindStateBaseESB_OSG_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32, %"class.mojo::PendingAssociatedRemote"* dereferenceable(16)) #0 align 2 {
  %4 = alloca %"class.mojo::PendingAssociatedRemote", align 8
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast void ()** %5 to %"class.base::RunLoop"**
  %7 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %8 = bitcast void ()** %7 to i32**
  %9 = getelementptr inbounds void ()*, void ()** %5, i64 2
  %10 = bitcast void ()** %9 to %"class.mojo::PendingAssociatedRemote"**
  %11 = bitcast %"class.mojo::PendingAssociatedRemote"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #10
  %12 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %6, align 8
  %13 = load i32*, i32** %8, align 8
  %14 = load %"class.mojo::PendingAssociatedRemote"*, %"class.mojo::PendingAssociatedRemote"** %10, align 8
  %15 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %4, i64 0, i32 0
  %16 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %2, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %15, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %16) #10
  %17 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %4, i64 0, i32 1
  %18 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %2, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %17, align 8
  store i32 %1, i32* %13, align 4
  %20 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %14, i64 0, i32 0
  %21 = call dereferenceable(8) %"class.mojo::ScopedInterfaceEndpointHandle"* @_ZN4mojo29ScopedInterfaceEndpointHandleaSEOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* %20, %"class.mojo::ScopedInterfaceEndpointHandle"* nonnull dereferenceable(8) %15) #10
  %22 = load i32, i32* %17, align 8
  %23 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %14, i64 0, i32 1
  store i32 %22, i32* %23, align 8
  call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %12) #10
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #10
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

declare dereferenceable(8) %"class.mojo::ScopedInterfaceEndpointHandle"* @_ZN4mojo29ScopedInterfaceEndpointHandleaSEOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8)) local_unnamed_addr #5

declare void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"*) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5media5mojom5blink21CdmStorageAsyncWaiter4OpenERKN3WTF6StringEPNS3_17CdmStorage_StatusEPN4mojo23PendingAssociatedRemoteINS4_7CdmFileEEEE3$_0JPNS_7RunLoopESB_SG_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5media5mojom5blink18CdmFileAsyncWaiter4ReadEPNS4_14CdmFile_StatusEPN3WTF6VectorIhLj0ENS9_18PartitionAllocatorEEEE3$_1JPNS_7RunLoopES8_SD_EEEFvS7_RKSC_EE7RunOnceEPNS0_13BindStateBaseES7_SJ_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32, %"class.WTF::Vector"* dereferenceable(16)) #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to i32**
  %8 = getelementptr inbounds void ()*, void ()** %4, i64 2
  %9 = bitcast void ()** %8 to %"class.WTF::Vector"**
  %10 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %9, align 8
  store i32 %1, i32* %11, align 4
  %13 = tail call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEEaSERKS2_(%"class.WTF::Vector"* %12, %"class.WTF::Vector"* dereferenceable(16) %2) #10
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %10) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEEaSERKS2_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector"* %1, %0
  br i1 %3, label %79, label %4, !prof !17

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  store i32 %8, i32* %5, align 4
  br label %54

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ugt i32 %8, %13
  br i1 %14, label %15, label %54

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %15
  %18 = icmp eq i32 %6, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  store i32 0, i32* %5, align 4
  br label %20

20:                                               ; preds = %19, %17
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %22) #10
  %24 = load i32, i32* %7, align 4
  %25 = load i32, i32* %12, align 8
  br label %26

26:                                               ; preds = %15, %20
  %27 = phi i32 [ 0, %15 ], [ %25, %20 ]
  %28 = phi i32 [ %8, %15 ], [ %24, %20 ]
  %29 = icmp ult i32 %27, %28
  br i1 %29, label %30, label %54, !prof !18

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  %34 = zext i32 %28 to i64
  %35 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %34) #10
  %36 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %35, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #10
  %37 = ptrtoint i8* %36 to i64
  br i1 %33, label %38, label %41

38:                                               ; preds = %30
  %39 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %39 monotonic, align 8
  %40 = trunc i64 %35 to i32
  store i32 %40, i32* %12, align 8
  br label %54

41:                                               ; preds = %30
  %42 = load i8*, i8** %31, align 8
  %43 = icmp ne i8* %36, null
  %44 = icmp ne i8* %42, null
  %45 = and i1 %43, %44
  br i1 %45, label %46, label %50, !prof !18

46:                                               ; preds = %41
  %47 = load i32, i32* %5, align 4
  %48 = zext i32 %47 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* nonnull align 1 %42, i64 %48, i1 false) #10
  %49 = load i8*, i8** %31, align 8
  br label %50

50:                                               ; preds = %46, %41
  %51 = phi i8* [ %42, %41 ], [ %49, %46 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #10
  %52 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %52 monotonic, align 8
  %53 = trunc i64 %35 to i32
  store i32 %53, i32* %12, align 8
  br label %54

54:                                               ; preds = %50, %38, %26, %11, %10
  %55 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = load i32, i32* %5, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %60, i8* align 1 %56, i64 %58, i1 false) #10
  %61 = load i8*, i8** %55, align 8
  %62 = load i32, i32* %5, align 4
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds i8, i8* %61, i64 %63
  %65 = load i8*, i8** %59, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %63
  %67 = icmp ne i8* %66, null
  %68 = icmp ne i8* %64, null
  %69 = and i1 %68, %67
  br i1 %69, label %70, label %77, !prof !18

70:                                               ; preds = %54
  %71 = load i32, i32* %7, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %61, i64 %72
  %74 = ptrtoint i8* %73 to i64
  %75 = ptrtoint i8* %64 to i64
  %76 = sub i64 %74, %75
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %66, i8* nonnull align 1 %64, i64 %76, i1 false) #10
  br label %77

77:                                               ; preds = %54, %70
  %78 = load i32, i32* %7, align 4
  store i32 %78, i32* %5, align 4
  br label %79

79:                                               ; preds = %2, %77
  ret %"class.WTF::Vector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #10
  ret i64 %20
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #1

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #5

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5media5mojom5blink18CdmFileAsyncWaiter4ReadEPNS3_14CdmFile_StatusEPN3WTF6VectorIhLj0ENS8_18PartitionAllocatorEEEE3$_1JPNS_7RunLoopES7_SC_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5media5mojom5blink18CdmFileAsyncWaiter5WriteERKN3WTF6VectorIhLj0ENS7_18PartitionAllocatorEEEPNS4_14CdmFile_StatusEE3$_2JPNS_7RunLoopESE_EEEFvSD_EE7RunOnceEPNS0_13BindStateBaseESD_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to i32**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load i32*, i32** %6, align 8
  store i32 %1, i32* %8, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5media5mojom5blink18CdmFileAsyncWaiter5WriteERKN3WTF6VectorIhLj0ENS6_18PartitionAllocatorEEEPNS3_14CdmFile_StatusEE3$_2JPNS_7RunLoopESD_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5media5mojom5blink21CdmStorageAsyncWaiter4OpenERKN3WTF6StringEPNS4_17CdmStorage_StatusEPN4mojo23PendingAssociatedRemoteINS5_7CdmFileEEEE3$_0JPNS_7RunLoopERSC_RSH_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5media5mojom5blink21CdmStorageAsyncWaiter4OpenERKN3WTF6StringEPNS4_17CdmStorage_StatusEPN4mojo23PendingAssociatedRemoteINS5_7CdmFileEEEE3$_0JPNS_7RunLoopERSC_RSH_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN5media5mojom5blink21CdmStorageAsyncWaiter4OpenERKN3WTF6StringEPNS2_17CdmStorage_StatusEPN4mojo23PendingAssociatedRemoteINS3_7CdmFileEEEE3$_0JPNS_7RunLoopERSA_RSF_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSO_DpOSP_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN5media5mojom5blink21CdmStorageAsyncWaiter4OpenERKN3WTF6StringEPNS2_17CdmStorage_StatusEPN4mojo23PendingAssociatedRemoteINS3_7CdmFileEEEE3$_0JPNS_7RunLoopERSA_RSF_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSO_DpOSP_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5media5mojom5blink18CdmFileAsyncWaiter4ReadEPNS4_14CdmFile_StatusEPN3WTF6VectorIhLj0ENS9_18PartitionAllocatorEEEE3$_1JPNS_7RunLoopERS8_RSD_EEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5media5mojom5blink18CdmFileAsyncWaiter4ReadEPNS4_14CdmFile_StatusEPN3WTF6VectorIhLj0ENS9_18PartitionAllocatorEEEE3$_1JPNS_7RunLoopERS8_RSD_EEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIZN5media5mojom5blink18CdmFileAsyncWaiter4ReadEPNS2_14CdmFile_StatusEPN3WTF6VectorIhLj0ENS7_18PartitionAllocatorEEEE3$_1JPNS_7RunLoopERS6_RSB_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIZN5media5mojom5blink18CdmFileAsyncWaiter4ReadEPNS2_14CdmFile_StatusEPN3WTF6VectorIhLj0ENS7_18PartitionAllocatorEEEE3$_1JPNS_7RunLoopERS6_RSB_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5media5mojom5blink18CdmFileAsyncWaiter5WriteERKN3WTF6VectorIhLj0ENS7_18PartitionAllocatorEEEPNS4_14CdmFile_StatusEE3$_2JPNS_7RunLoopERSE_EEEDcOT0_DpOT1_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5media5mojom5blink18CdmFileAsyncWaiter5WriteERKN3WTF6VectorIhLj0ENS7_18PartitionAllocatorEEEPNS4_14CdmFile_StatusEE3$_2JPNS_7RunLoopERSE_EEEDcOT0_DpOT1_"}
!15 = distinct !{!15, !16, !"_ZN4base8BindOnceIZN5media5mojom5blink18CdmFileAsyncWaiter5WriteERKN3WTF6VectorIhLj0ENS5_18PartitionAllocatorEEEPNS2_14CdmFile_StatusEE3$_2JPNS_7RunLoopERSC_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8BindOnceIZN5media5mojom5blink18CdmFileAsyncWaiter5WriteERKN3WTF6VectorIhLj0ENS5_18PartitionAllocatorEEEPNS2_14CdmFile_StatusEE3$_2JPNS_7RunLoopERSC_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_"}
!17 = !{!"branch_weights", i32 1, i32 2000}
!18 = !{!"branch_weights", i32 2000, i32 1}
