; ModuleID = '../../third_party/blink/renderer/modules/webmidi/midi_output.cc'
source_filename = "../../third_party/blink/renderer/modules/webmidi/midi_output.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.489", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.489" = type { %"class.base::RefCounted.490" }
%"class.base::RefCounted.490" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.493" }
%"class.blink::HeapHashMap.493" = type { %"class.WTF::HashMap.496" }
%"class.WTF::HashMap.496" = type { %"class.WTF::HashTable.497" }
%"class.WTF::HashTable.497" = type <{ %"struct.WTF::KeyValuePair.499"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.499" = type { %"class.blink::WeakMember.500", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.500" = type { %"class.blink::MemberBase.501" }
%"class.blink::MemberBase.501" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.300", i32, [4 x i8], %"class.std::__1::unique_ptr.438", %"class.std::__1::unique_ptr.438", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.449", %"class.std::__1::unique_ptr.455", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.467", %"class.std::__1::unique_ptr.473", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.480", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.303", %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.315", %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.327", %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.344", %"class.std::__1::unique_ptr.351", %"class.std::__1::unique_ptr.351", %"class.std::__1::unique_ptr.358", %"class.std::__1::unique_ptr.365", %"class.std::__1::unique_ptr.372", %"class.std::__1::unique_ptr.372", %"class.std::__1::unique_ptr.379", %"class.std::__1::unique_ptr.386", %"class.std::__1::unique_ptr.393", %"class.std::__1::unique_ptr.418", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.336" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.336" = type { %"struct.std::__1::__atomic_base.337" }
%"struct.std::__1::__atomic_base.337" = type { %"struct.std::__1::__atomic_base.338" }
%"struct.std::__1::__atomic_base.338" = type { %"struct.std::__1::__cxx_atomic_impl.339" }
%"struct.std::__1::__cxx_atomic_impl.339" = type { %"struct.std::__1::__cxx_atomic_base_impl.340" }
%"struct.std::__1::__cxx_atomic_base_impl.340" = type { i64 }
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.blink::Worklist.347"* }
%"class.blink::Worklist.347" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.336" }
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.blink::Worklist.354"* }
%"class.blink::Worklist.354" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.336" }
%"class.std::__1::unique_ptr.358" = type { %"class.std::__1::__compressed_pair.359" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"class.blink::Worklist.361"* }
%"class.blink::Worklist.361" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.336" }
%"class.std::__1::unique_ptr.365" = type { %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"class.blink::Worklist.368"* }
%"class.blink::Worklist.368" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.336" }
%"class.std::__1::unique_ptr.372" = type { %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"class.blink::Worklist.375"* }
%"class.blink::Worklist.375" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.336" }
%"class.std::__1::unique_ptr.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"class.blink::Worklist.382"* }
%"class.blink::Worklist.382" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.336" }
%"class.std::__1::unique_ptr.386" = type { %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"class.blink::Worklist.389"* }
%"class.blink::Worklist.389" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.336" }
%"class.std::__1::unique_ptr.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.396", %"class.std::__1::__compressed_pair.404", %"class.std::__1::__compressed_pair.409", %"class.std::__1::__compressed_pair.411", [4 x i8] }>
%"class.std::__1::unique_ptr.396" = type { %"class.std::__1::__compressed_pair.397" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398", %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.398" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { i64 }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.412" }
%"struct.std::__1::__compressed_pair_elem.412" = type { float }
%"class.std::__1::unique_ptr.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.421", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.430" }
%"class.WTF::Vector.430" = type { %"class.WTF::VectorBuffer.431" }
%"class.WTF::VectorBuffer.431" = type { %"class.WTF::VectorBufferBase.432" }
%"class.WTF::VectorBufferBase.432" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.446" }
%"class.WTF::VectorBuffer.446" = type { %"class.WTF::VectorBufferBase.447" }
%"class.WTF::VectorBufferBase.447" = type { %"struct.std::__1::pair.448"*, i32, i32 }
%"struct.std::__1::pair.448" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.449" = type { %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.455" = type { %"class.std::__1::__compressed_pair.456" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.457" }
%"struct.std::__1::__compressed_pair_elem.457" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.461" }
%"class.std::__1::unique_ptr.461" = type { %"class.std::__1::__compressed_pair.462" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.463" }
%"struct.std::__1::__compressed_pair_elem.463" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.347"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.354"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.361"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.368"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.375"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.484" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.467" = type { %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.473" = type { %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.479 }
%class.scoped_refptr.479 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.480" = type { %"struct.std::__1::__atomic_base.481" }
%"struct.std::__1::__atomic_base.481" = type { %"struct.std::__1::__cxx_atomic_impl.482" }
%"struct.std::__1::__cxx_atomic_impl.482" = type { %"struct.std::__1::__cxx_atomic_base_impl.483" }
%"struct.std::__1::__cxx_atomic_base_impl.483" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.193" }
%"struct.std::__1::atomic.193" = type { %"struct.std::__1::__atomic_base.194" }
%"struct.std::__1::__atomic_base.194" = type { %"struct.std::__1::__atomic_base.195" }
%"struct.std::__1::__atomic_base.195" = type { %"struct.std::__1::__cxx_atomic_impl.196" }
%"struct.std::__1::__cxx_atomic_impl.196" = type { %"struct.std::__1::__cxx_atomic_base_impl.197" }
%"struct.std::__1::__cxx_atomic_base_impl.197" = type { i32 }
%"class.blink::MIDIOutput" = type { %"class.blink::MIDIPort.base", i32, %"class.blink::HeapVector.48" }
%"class.blink::MIDIPort.base" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", %"class.blink::Member.13", i32, i32, i32 }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapVector.5"* }
%"class.blink::HeapVector.5" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.6"* }
%"class.WTF::Vector.6" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.12"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.12" = type opaque
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::MIDIAccess"* }
%"class.blink::HeapVector.48" = type { %"class.WTF::Vector.51" }
%"class.WTF::Vector.51" = type { %"class.WTF::VectorBuffer.52" }
%"class.WTF::VectorBuffer.52" = type { %"class.WTF::VectorBufferBase.53" }
%"class.WTF::VectorBufferBase.53" = type { %"struct.std::__1::pair.54"*, i32, i32 }
%"struct.std::__1::pair.54" = type { %"class.blink::Member.55", %"class.base::TimeTicks" }
%"class.blink::Member.55" = type { %"class.blink::MemberBase.56" }
%"class.blink::MemberBase.56" = type { %"class.blink::DOMTypedArray"* }
%"class.blink::DOMTypedArray" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.57" }
%"class.blink::Member.57" = type { %"class.blink::MemberBase.58" }
%"class.blink::MemberBase.58" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.blink::MIDIAccess" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable.15", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::MIDIDispatcher::Client", %"class.blink::Member.16", i8, i8, %"class.blink::HeapVector.32", %"class.blink::HeapVector.40" }
%"class.blink::ActiveScriptWrappable.15" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::MIDIDispatcher::Client" = type { i32 (...)** }
%"class.blink::Member.16" = type { %"class.blink::MemberBase.17" }
%"class.blink::MemberBase.17" = type { %"class.blink::MIDIDispatcher"* }
%"class.blink::MIDIDispatcher" = type { %"class.midi::mojom::blink::MidiSessionClient", %"class.blink::MIDIDispatcher::Client"*, i8, %"class.WTF::Vector.20", %"class.WTF::Vector.20", i64, %"class.blink::HeapMojoRemote", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoRemote.29" }
%"class.midi::mojom::blink::MidiSessionClient" = type { i32 (...)** }
%"class.WTF::Vector.20" = type { %"class.WTF::VectorBuffer.21" }
%"class.WTF::VectorBuffer.21" = type { %"class.WTF::VectorBufferBase.22" }
%"class.WTF::VectorBufferBase.22" = type { %"class.midi::mojom::blink::PortInfo"*, i32, i32 }
%"class.midi::mojom::blink::PortInfo" = type <{ %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8] }>
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.25" }
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::HeapMojoRemote<midi::mojom::blink::MidiSession, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<midi::mojom::blink::MidiSession, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.27" }
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::HeapMojoReceiver<midi::mojom::blink::MidiSessionClient, blink::MIDIDispatcher, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<midi::mojom::blink::MidiSessionClient, blink::MIDIDispatcher, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapMojoRemote.29" = type { %"class.blink::Member.30" }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::HeapMojoRemote<midi::mojom::blink::MidiSessionProvider, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<midi::mojom::blink::MidiSessionProvider, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapVector.32" = type { %"class.WTF::Vector.35" }
%"class.WTF::Vector.35" = type { %"class.WTF::VectorBuffer.36" }
%"class.WTF::VectorBuffer.36" = type { %"class.WTF::VectorBufferBase.37" }
%"class.WTF::VectorBufferBase.37" = type { %"class.blink::Member.38"*, i32, i32 }
%"class.blink::Member.38" = type opaque
%"class.blink::HeapVector.40" = type { %"class.WTF::Vector.43" }
%"class.WTF::Vector.43" = type { %"class.WTF::VectorBuffer.44" }
%"class.WTF::VectorBuffer.44" = type { %"class.WTF::VectorBufferBase.45" }
%"class.WTF::VectorBufferBase.45" = type { %"class.blink::Member.46"*, i32, i32 }
%"class.blink::Member.46" = type opaque
%"class.blink::MIDIPort" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", %"class.blink::Member.13", i32, i32, i32, [4 x i8] }>
%"class.blink::NotShared" = type { %"class.blink::Member.55" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.60" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.60" = type { %"class.v8::TracedReference.61" }
%"class.v8::TracedReference.61" = type { %"class.v8::BasicTracedReference.62" }
%"class.v8::BasicTracedReference.62" = type { %"class.v8::TracedReferenceBase" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.82 }
%union.anon.82 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.117", i32, i8, [3 x i8], %"class.blink::HeapVector.119", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.128", %"class.blink::Member.130", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.139", %"class.blink::Member.280", %"class.blink::Member.282", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.65" }
%"class.WTF::HashTable.65" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.67" }
%"class.blink::Supplementable.67" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.68" }
%"class.blink::HeapHashMap.68" = type { %"class.WTF::HashMap.71" }
%"class.WTF::HashMap.71" = type { %"class.WTF::HashTable.72" }
%"class.WTF::HashTable.72" = type <{ %"struct.WTF::KeyValuePair.74"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.74" = type { i8*, %"class.blink::Member.1982" }
%"class.blink::Member.1982" = type { %"class.blink::MemberBase.1983" }
%"class.blink::MemberBase.1983" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1984" }
%"class.blink::Member.1984" = type { %"class.blink::MemberBase.1985" }
%"class.blink::MemberBase.1985" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.75, %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.105", %"class.blink::Member.111", i32, [4 x i8], %"class.WTF::HashSet.113", i32, i32 }
%class.scoped_refptr.75 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.76 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.76 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.92", %"class.std::__1::map.101"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::map.92" = type { %"class.std::__1::__tree.93" }
%"class.std::__1::__tree.93" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.94", %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::map.101" = type opaque
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.111" = type { %"class.blink::MemberBase.112" }
%"class.blink::MemberBase.112" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.113" = type { %"class.WTF::HashTable.114" }
%"class.WTF::HashTable.114" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.117" = type { %"class.blink::MemberBase.118" }
%"class.blink::MemberBase.118" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.119" = type { %"class.WTF::Vector.122" }
%"class.WTF::Vector.122" = type { %"class.WTF::VectorBuffer.123" }
%"class.WTF::VectorBuffer.123" = type { %"class.WTF::VectorBufferBase.124" }
%"class.WTF::VectorBufferBase.124" = type { %"class.blink::Member.125"*, i32, i32 }
%"class.blink::Member.125" = type { %"class.blink::MemberBase.126" }
%"class.blink::MemberBase.126" = type { %"class.blink::ErrorEvent"* }
%"class.blink::ErrorEvent" = type opaque
%"class.blink::Member.128" = type { %"class.blink::MemberBase.129" }
%"class.blink::MemberBase.129" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.130" = type { %"class.blink::MemberBase.131" }
%"class.blink::MemberBase.131" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.132", i32, i32 }
%"class.blink::HeapHashMap.132" = type { %"class.WTF::HashMap.135" }
%"class.WTF::HashMap.135" = type { %"class.WTF::HashTable.136" }
%"class.WTF::HashTable.136" = type <{ %"struct.WTF::KeyValuePair.138"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.138" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.142" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.145" }
%"class.WTF::Vector.145" = type { %"class.WTF::VectorBuffer.146" }
%"class.WTF::VectorBuffer.146" = type { %"class.WTF::VectorBufferBase.147" }
%"class.WTF::VectorBufferBase.147" = type { %"class.mojo::StructPtr.148"*, i32, i32 }
%"class.mojo::StructPtr.148" = type { %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.152", %"class.WTF::HashMap.159", %"class.WTF::HashMap.164", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.169", i32, %"class.mojo::StructPtr.174", %"class.WTF::Vector.169" }
%"class.mojo::StructPtr.152" = type { %"class.std::__1::unique_ptr.153" }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.159" = type { %"class.WTF::HashTable.160" }
%"class.WTF::HashTable.160" = type <{ %"struct.WTF::KeyValuePair.163"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.163" = type opaque
%"class.WTF::HashMap.164" = type { %"class.WTF::HashTable.165" }
%"class.WTF::HashTable.165" = type <{ %"struct.WTF::KeyValuePair.168"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.168" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.174" = type { %"class.std::__1::unique_ptr.175" }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.169", i8, i8, [6 x i8] }>
%"class.WTF::Vector.169" = type { %"class.WTF::VectorBuffer.170" }
%"class.WTF::VectorBuffer.170" = type { %"class.WTF::VectorBufferBase.171" }
%"class.WTF::VectorBufferBase.171" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.271" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.189", i32 }>
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.198", %"class.absl::optional.203", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.224", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.246", %"class.std::__1::map.257", i64, %"class.base::OnceCallback.217", %"class.base::OnceCallback.266", i8, %class.scoped_refptr.208, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.267" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.192 }
%class.scoped_refptr.192 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.193" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.198" = type { %"class.absl::optional_internal::optional_data.199" }
%"class.absl::optional_internal::optional_data.199" = type { %"class.absl::optional_internal::optional_data_base.200" }
%"class.absl::optional_internal::optional_data_base.200" = type { %"class.absl::optional_internal::optional_data_dtor_base.201" }
%"class.absl::optional_internal::optional_data_dtor_base.201" = type { i8, %union.anon.202 }
%union.anon.202 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.203" = type { %"class.absl::optional_internal::optional_data.204" }
%"class.absl::optional_internal::optional_data.204" = type { %"class.absl::optional_internal::optional_data_base.205" }
%"class.absl::optional_internal::optional_data_base.205" = type { %"class.absl::optional_internal::optional_data_dtor_base.206" }
%"class.absl::optional_internal::optional_data_dtor_base.206" = type { i8, %union.anon.207 }
%union.anon.207 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.217" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.208, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.210 }
%class.scoped_refptr.210 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.211", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.211" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.212" }
%"struct.std::__1::atomic.212" = type { %"struct.std::__1::__atomic_base.213" }
%"struct.std::__1::__atomic_base.213" = type { %"struct.std::__1::__atomic_base.214" }
%"struct.std::__1::__atomic_base.214" = type { %"struct.std::__1::__cxx_atomic_impl.215" }
%"struct.std::__1::__cxx_atomic_impl.215" = type { %"struct.std::__1::__cxx_atomic_base_impl.216" }
%"struct.std::__1::__cxx_atomic_base_impl.216" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.222 }
%class.scoped_refptr.222 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.294", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.208, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.294" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.223 }
%class.scoped_refptr.223 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.227", %class.scoped_refptr.228 }
%"class.base::RepeatingCallback.227" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.228 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.229", [4 x i8] }>
%"class.base::RefCountedThreadSafe.229" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.239", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.245" }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.245" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.246" = type { %"class.std::__1::__tree.247" }
%"class.std::__1::__tree.247" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.248", %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::map.257" = type { %"class.std::__1::__tree.258" }
%"class.std::__1::__tree.258" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.259", %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.base::OnceCallback.217" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.266" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.208 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.209" }>
%"class.base::RefCountedThreadSafe.209" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.217" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.267" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.280" = type { %"class.blink::MemberBase.281" }
%"class.blink::MemberBase.281" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.282" = type { %"class.blink::MemberBase.283" }
%"class.blink::MemberBase.283" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.130", i8, [7 x i8], %"class.WTF::Vector.145", %"class.blink::HeapVector.286", i8, [7 x i8], %"class.WTF::HashSet.113", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.286" = type { %"class.WTF::Vector.289" }
%"class.WTF::Vector.289" = type { %"class.WTF::VectorBuffer.290" }
%"class.WTF::VectorBuffer.290" = type { %"class.WTF::VectorBufferBase.291" }
%"class.WTF::VectorBufferBase.291" = type { %"class.blink::Member.292"*, i32, i32 }
%"class.blink::Member.292" = type opaque
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.789", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.797", %"class.blink::Member.562", %"class.blink::Member.799", i8, %"class.blink::Member.801", %"class.blink::Member.803", %"class.blink::Member.805", %"class.blink::Member.805", %"class.blink::Member.805", %"class.blink::Member.805", %"class.blink::Member.805", %"class.blink::Member.805", %"class.blink::Member.807", %"class.blink::Member.809", %"class.blink::Member.811", %"class.blink::Member.813", %"class.blink::Member.817", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.169", %"class.blink::Member.819", %class.scoped_refptr.821, %"class.blink::HeapHashSet.883", %"class.blink::Member.890", %"class.blink::HeapHashMap.903", %"class.std::__1::unique_ptr.910", %"class.blink::Member.922", %"class.blink::Member.941", %"class.blink::Member.943", %"class.blink::Member.945", %"class.WTF::Vector.948", %"class.util::TokenType.687", %"class.WTF::HashSet.953", %"class.WTF::Deque.957" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.676", %"class.blink::Member.678", %"class.blink::Member.680", %"class.blink::Member.682", i8, %"class.WTF::Vector.684" }
%"class.blink::Member.676" = type { %"class.blink::MemberBase.677" }
%"class.blink::MemberBase.677" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1523", %"class.blink::Member.1525", %"class.blink::Member.1527", i8, i32, i8, i32, %"class.blink::Member.1529", %"class.blink::Member.678", %"class.blink::FrameLifecycle", %"class.blink::Member.676", %"class.blink::Member.676", %"class.blink::Member.676", %"class.blink::Member.676", %"class.blink::Member.676", %"class.blink::Member.676", %"class.blink::Member.926", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1539", i8, %"class.base::UnguessableToken", %"class.absl::optional.1541", %"class.absl::optional.1361", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.676", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1523" = type { %"class.blink::MemberBase.1524" }
%"class.blink::MemberBase.1524" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1525" = type { %"class.blink::MemberBase.1526" }
%"class.blink::MemberBase.1526" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1527" = type { %"class.blink::MemberBase.1528" }
%"class.blink::MemberBase.1528" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.1529" = type { %"class.blink::MemberBase.1530" }
%"class.blink::MemberBase.1530" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.926" = type { %"class.blink::MemberBase.927" }
%"class.blink::MemberBase.927" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1553", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1561", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1569", %"class.blink::FrameLoader", %"class.blink::Member.1586", %"class.blink::Member.579", %"class.blink::Member.1588", %"class.blink::Member.1590", %"class.blink::Member.1592", %"class.blink::Member.1594", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1596", %class.scoped_refptr.1598, %"class.blink::Member.1599", %"class.blink::Member.1610", %"class.blink::Member.1612", %"class.blink::Member.1614", %"class.blink::Member.1616", %"class.blink::Member.1618", %"class.blink::Member.1620", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.1622", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1625", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1646", %"class.std::__1::unique_ptr.1647", %"class.absl::optional.1361", i32, [4 x i8], %"class.std::__1::unique_ptr.1653", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1661", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1666", %"class.blink::HeapMojoReceiver.1669", %"class.blink::HeapMojoAssociatedReceiver.1672", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1675", %"class.blink::Member.1677", %"class.blink::Member.1679", %"class.blink::Member.1681", %"class.mojo::StructPtr.1684", %"class.blink::Member.1692", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1694", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1553" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1554" }
%"class.blink::HeapHashMap.1554" = type { %"class.WTF::HashMap.1557" }
%"class.WTF::HashMap.1557" = type { %"class.WTF::HashTable.1558" }
%"class.WTF::HashTable.1558" = type <{ %"struct.WTF::KeyValuePair.1560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1560" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1561" = type { %"class.std::__1::__compressed_pair.1562" }
%"class.std::__1::__compressed_pair.1562" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"struct.std::__1::__compressed_pair_elem.1563" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.913", %"class.base::WeakPtrFactory.918" }
%"class.WTF::HashMap.913" = type { %"class.WTF::HashTable.914" }
%"class.WTF::HashTable.914" = type <{ %"struct.WTF::KeyValuePair.917"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.917" = type opaque
%"class.base::WeakPtrFactory.918" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1567" }
%"class.blink::Member.1567" = type { %"class.blink::MemberBase.1568" }
%"class.blink::MemberBase.1568" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.1994", i64, %"class.std::__1::map.1995", i8*, i64, %"class.base::WeakPtrFactory.2004" }
%"class.base::RepeatingCallback.1994" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1995" = type { %"class.std::__1::__tree.1996" }
%"class.std::__1::__tree.1996" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1997", %"class.std::__1::__compressed_pair.2001" }
%"class.std::__1::__compressed_pair.1997" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.2001" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.base::WeakPtrFactory.2004" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1569" = type { %"class.WTF::HashSet.1572" }
%"class.WTF::HashSet.1572" = type { %"class.WTF::HashTable.1573" }
%"class.WTF::HashTable.1573" = type <{ %"class.blink::WeakMember.1575"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1575" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.926", %"class.blink::Member.1576", %"class.blink::Member.1578", %"class.std::__1::unique_ptr.1580", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1497" }
%"class.blink::Member.1576" = type { %"class.blink::MemberBase.1577" }
%"class.blink::MemberBase.1577" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1578" = type { %"class.blink::MemberBase.1579" }
%"class.blink::MemberBase.1579" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1580" = type { %"class.std::__1::__compressed_pair.1581" }
%"class.std::__1::__compressed_pair.1581" = type { %"struct.std::__1::__compressed_pair_elem.1582" }
%"struct.std::__1::__compressed_pair_elem.1582" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.970" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.970" = type { %"class.std::__1::__compressed_pair.971" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.972" }
%"struct.std::__1::__compressed_pair_elem.972" = type { %"class.blink::KURL"* }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.WTF::HashSet.1497" = type { %"class.WTF::HashTable.1498" }
%"class.WTF::HashTable.1498" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1586" = type { %"class.blink::MemberBase.1587" }
%"class.blink::MemberBase.1587" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1701", %"class.blink::Member.926", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1706", i8, i32, %"class.blink::Color", %"class.absl::optional.1708", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1713", %"class.blink::Member.1715", %"class.blink::Member.1715", %"class.std::__1::unique_ptr.1718", i32, [4 x i8], %"class.WTF::HashSet.1721", %"class.blink::Member.1728", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1730", %"class.blink::HeapHashSet.1737", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1745", i8, %"class.blink::Member.1751", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1763", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1777", i8, %"class.std::__1::unique_ptr.1783", %"class.std::__1::unique_ptr.1900", %"class.WTF::Vector.1906", i32, %class.scoped_refptr.1911, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1912", %"class.blink::Member.1914", %"class.blink::Member.1916", %"class.blink::HeapHashSet.1918", %"class.blink::HeapHashSet.1925", %"class.std::__1::unique_ptr.1932", %"class.std::__1::unique_ptr.1938", %"class.WTF::Vector.669" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1701" = type { %"class.WTF::HashTable.1702" }
%"class.WTF::HashTable.1702" = type <{ %class.scoped_refptr.1705*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1705 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1706" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1707", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.993, %"class.base::WeakPtrFactory.994" }
%class.scoped_refptr.993 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.994" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1707" = type { %"class.blink::MemberBase.1587" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1708" = type { %"class.absl::optional_internal::optional_data.1709" }
%"class.absl::optional_internal::optional_data.1709" = type { %"class.absl::optional_internal::optional_data_base.1710" }
%"class.absl::optional_internal::optional_data_base.1710" = type { %"class.absl::optional_internal::optional_data_dtor_base.1711" }
%"class.absl::optional_internal::optional_data_dtor_base.1711" = type { i8, %union.anon.1712 }
%union.anon.1712 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1713" = type { %"class.blink::MemberBase.1714" }
%"class.blink::MemberBase.1714" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1715" = type { %"class.blink::MemberBase.1716" }
%"class.blink::MemberBase.1716" = type { %"class.blink::HeapHashSet.1717"* }
%"class.blink::HeapHashSet.1717" = type opaque
%"class.std::__1::unique_ptr.1718" = type { %"class.std::__1::__compressed_pair.1719" }
%"class.std::__1::__compressed_pair.1719" = type { %"struct.std::__1::__compressed_pair_elem.1720" }
%"struct.std::__1::__compressed_pair_elem.1720" = type { %"class.WTF::HashSet.1721"* }
%"class.WTF::HashSet.1721" = type { %"class.WTF::HashTable.1722" }
%"class.WTF::HashTable.1722" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1728" = type { %"class.blink::MemberBase.1729" }
%"class.blink::MemberBase.1729" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1730" = type { %"class.WTF::HashSet.1733" }
%"class.WTF::HashSet.1733" = type { %"class.WTF::HashTable.1734" }
%"class.WTF::HashTable.1734" = type <{ %"class.blink::Member.1736"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1736" = type opaque
%"class.blink::HeapHashSet.1737" = type { %"class.WTF::HashSet.1740" }
%"class.WTF::HashSet.1740" = type { %"class.WTF::HashTable.1741" }
%"class.WTF::HashTable.1741" = type <{ %"class.blink::Member.1743"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1743" = type { %"class.blink::MemberBase.1744" }
%"class.blink::MemberBase.1744" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1967", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1978", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.579" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1967" = type { %"class.blink::MemberBase.1968" }
%"class.blink::MemberBase.1968" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1969", %"class.blink::Member.1970", %"class.blink::Member.1972", %"class.blink::Member.1974", %"class.blink::Member.1976", %"class.WTF::Vector.669", i16, %class.scoped_refptr.993 }
%"class.blink::ThreadState::PrefinalizerRegistration.1969" = type { i8 }
%"class.blink::Member.1970" = type { %"class.blink::MemberBase.1971" }
%"class.blink::MemberBase.1971" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1972" = type { %"class.blink::MemberBase.1973" }
%"class.blink::MemberBase.1973" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1974" = type { %"class.blink::MemberBase.1975" }
%"class.blink::MemberBase.1975" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1976" = type { %"class.blink::MemberBase.1977" }
%"class.blink::MemberBase.1977" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1978" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1979", { i64, i64 } }
%"class.blink::WeakMember.1979" = type { %"class.blink::MemberBase.1744" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1745" = type { %"class.std::__1::__compressed_pair.1746" }
%"class.std::__1::__compressed_pair.1746" = type { %"struct.std::__1::__compressed_pair_elem.1747" }
%"struct.std::__1::__compressed_pair_elem.1747" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1751" = type { %"class.blink::MemberBase.1752" }
%"class.blink::MemberBase.1752" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1755", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1755" = type { %"class.WTF::HashTable.1756" }
%"class.WTF::HashTable.1756" = type <{ %"struct.WTF::KeyValuePair.1758"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1758" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1759", i32, i32 }
%"class.WTF::Vector.1759" = type { %"class.WTF::VectorBuffer.1760" }
%"class.WTF::VectorBuffer.1760" = type { %"class.WTF::VectorBufferBase.1761" }
%"class.WTF::VectorBufferBase.1761" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1763" = type { %"class.WTF::LinkedHashSet.1766" }
%"class.WTF::LinkedHashSet.1766" = type { %"class.WTF::HashMap.1767", %"class.WTF::VectorBackedLinkedList.1771" }
%"class.WTF::HashMap.1767" = type { %"class.WTF::HashTable.1768" }
%"class.WTF::HashTable.1768" = type <{ %"struct.WTF::KeyValuePair.1770"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1770" = type opaque
%"class.WTF::VectorBackedLinkedList.1771" = type { %"class.WTF::Vector.1772", i32, i32 }
%"class.WTF::Vector.1772" = type { %"class.WTF::VectorBuffer.1773" }
%"class.WTF::VectorBuffer.1773" = type { %"class.WTF::VectorBufferBase.1774" }
%"class.WTF::VectorBufferBase.1774" = type { %"class.WTF::VectorBackedLinkedListNode.1775"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1775" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1777" = type { %"class.std::__1::__compressed_pair.1778" }
%"class.std::__1::__compressed_pair.1778" = type { %"struct.std::__1::__compressed_pair_elem.1779" }
%"struct.std::__1::__compressed_pair_elem.1779" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1783" = type { %"class.std::__1::__compressed_pair.1784" }
%"class.std::__1::__compressed_pair.1784" = type { %"struct.std::__1::__compressed_pair_elem.1785" }
%"struct.std::__1::__compressed_pair_elem.1785" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1786, %class.scoped_refptr.1786, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1877", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1882", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1786 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1787", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1794" }
%"class.WTF::RefCounted.1787" = type { %"class.base::RefCounted.1788" }
%"class.base::RefCounted.1788" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1789", i32, [4 x i8] }>
%"class.WTF::Vector.1789" = type { %"class.WTF::VectorBuffer.1790" }
%"class.WTF::VectorBuffer.1790" = type { %"class.WTF::VectorBufferBase.1791" }
%"class.WTF::VectorBufferBase.1791" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1794" = type { %"class.WTF::VectorBuffer.1795" }
%"class.WTF::VectorBuffer.1795" = type { %"class.WTF::VectorBufferBase.1796" }
%"class.WTF::VectorBufferBase.1796" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1800", %"class.std::__1::unique_ptr.1849", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1797, %class.scoped_refptr.1798, %class.scoped_refptr.1799 }
%class.scoped_refptr.1797 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1813", i8, i8, %class.scoped_refptr.1797, i32, i32 }
%"class.WTF::RefCounted.1813" = type { %"class.base::RefCounted.1814" }
%"class.base::RefCounted.1814" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1798 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1962" }
%"class.blink::PaintPropertyNode.1962" = type { %"class.WTF::RefCounted.1963", i8, i8, %class.scoped_refptr.1798, i32, i32 }
%"class.WTF::RefCounted.1963" = type { %"class.base::RefCounted.1964" }
%"class.base::RefCounted.1964" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1799 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1959" }
%"class.blink::PaintPropertyNode.1959" = type { %"class.WTF::RefCounted.1960", i8, i8, %class.scoped_refptr.1799, i32, i32 }
%"class.WTF::RefCounted.1960" = type { %"class.base::RefCounted.1961" }
%"class.base::RefCounted.1961" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1800" = type { %"class.std::__1::__compressed_pair.1801" }
%"class.std::__1::__compressed_pair.1801" = type { %"struct.std::__1::__compressed_pair_elem.1802" }
%"struct.std::__1::__compressed_pair_elem.1802" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1803", %"class.WTF::Vector.1808", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1803" = type { %"class.WTF::VectorBuffer.1804" }
%"class.WTF::VectorBuffer.1804" = type { %"class.WTF::VectorBufferBase.1805" }
%"class.WTF::VectorBufferBase.1805" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1808" = type { %"class.WTF::VectorBuffer.1809" }
%"class.WTF::VectorBuffer.1809" = type { %"class.WTF::VectorBufferBase.1810" }
%"class.WTF::VectorBufferBase.1810" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1828" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1821, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1822", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1815" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1815" = type { %"class.std::__1::__compressed_pair.1816" }
%"class.std::__1::__compressed_pair.1816" = type { %"struct.std::__1::__compressed_pair_elem.1817" }
%"struct.std::__1::__compressed_pair_elem.1817" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1821 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1944", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1944" = type { %"class.WTF::RefCounted.1945", i8, i8, %class.scoped_refptr.1821, i32, i32 }
%"class.WTF::RefCounted.1945" = type { %"class.base::RefCounted.1946" }
%"class.base::RefCounted.1946" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1947" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1947" = type { %"class.absl::optional_internal::optional_data.1948" }
%"class.absl::optional_internal::optional_data.1948" = type { %"class.absl::optional_internal::optional_data_base.1949" }
%"class.absl::optional_internal::optional_data_base.1949" = type { %"class.absl::optional_internal::optional_data_dtor_base.1950" }
%"class.absl::optional_internal::optional_data_dtor_base.1950" = type { i8, %union.anon.1951 }
%union.anon.1951 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1952", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1952" = type { %"class.std::__1::__vector_base.1953" }
%"class.std::__1::__vector_base.1953" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1954" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1954" = type { %"struct.std::__1::__compressed_pair_elem.1955" }
%"struct.std::__1::__compressed_pair_elem.1955" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1822" = type { %"class.std::__1::__compressed_pair.1823" }
%"class.std::__1::__compressed_pair.1823" = type { %"struct.std::__1::__compressed_pair_elem.1824" }
%"struct.std::__1::__compressed_pair_elem.1824" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1828" = type { %"class.std::__1::__compressed_pair.1829" }
%"class.std::__1::__compressed_pair.1829" = type { %"struct.std::__1::__compressed_pair_elem.1830" }
%"struct.std::__1::__compressed_pair_elem.1830" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1831", %"class.std::__1::unique_ptr.1837", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1831" = type { %"class.std::__1::__compressed_pair.1832" }
%"class.std::__1::__compressed_pair.1832" = type { %"struct.std::__1::__compressed_pair_elem.1833" }
%"struct.std::__1::__compressed_pair_elem.1833" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1837" = type { %"class.std::__1::__compressed_pair.1838" }
%"class.std::__1::__compressed_pair.1838" = type { %"struct.std::__1::__compressed_pair_elem.1839" }
%"struct.std::__1::__compressed_pair_elem.1839" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1849" = type { %"class.std::__1::__compressed_pair.1850" }
%"class.std::__1::__compressed_pair.1850" = type { %"struct.std::__1::__compressed_pair_elem.1851" }
%"struct.std::__1::__compressed_pair_elem.1851" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1852", %"class.absl::optional.1852" }
%"class.absl::optional.1852" = type { %"class.absl::optional_internal::optional_data.1853" }
%"class.absl::optional_internal::optional_data.1853" = type { %"class.absl::optional_internal::optional_data_base.1854" }
%"class.absl::optional_internal::optional_data_base.1854" = type { %"class.absl::optional_internal::optional_data_dtor_base.1855" }
%"class.absl::optional_internal::optional_data_dtor_base.1855" = type { i8, [3 x i8], %union.anon.1856 }
%union.anon.1856 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1794"*, %"class.absl::optional.1862", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1862" = type { %"class.absl::optional_internal::optional_data.1863" }
%"class.absl::optional_internal::optional_data.1863" = type { %"class.absl::optional_internal::optional_data_base.1864" }
%"class.absl::optional_internal::optional_data_base.1864" = type { %"class.absl::optional_internal::optional_data_dtor_base.1865" }
%"class.absl::optional_internal::optional_data_dtor_base.1865" = type { i8, %union.anon.1866 }
%union.anon.1866 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1867", %"class.WTF::Vector.1872" }
%"class.WTF::Vector.1867" = type { %"class.WTF::VectorBuffer.1868" }
%"class.WTF::VectorBuffer.1868" = type { %"class.WTF::VectorBufferBase.1869", [128 x i8] }
%"class.WTF::VectorBufferBase.1869" = type { i32*, i32, i32 }
%"class.WTF::Vector.1872" = type { %"class.WTF::VectorBuffer.1873" }
%"class.WTF::VectorBuffer.1873" = type { %"class.WTF::VectorBufferBase.1874", [128 x i8] }
%"class.WTF::VectorBufferBase.1874" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1877" = type { %"class.WTF::VectorBuffer.1878" }
%"class.WTF::VectorBuffer.1878" = type { %"class.WTF::VectorBufferBase.1879" }
%"class.WTF::VectorBufferBase.1879" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1882" = type { %"class.WTF::HashTable.1883" }
%"class.WTF::HashTable.1883" = type <{ %"struct.WTF::KeyValuePair.1886"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1886" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1887", %"class.WTF::Vector.1892" }
%"class.WTF::HashMap.1887" = type { %"class.WTF::HashTable.1888" }
%"class.WTF::HashTable.1888" = type <{ %"struct.WTF::KeyValuePair.1891"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1891" = type opaque
%"class.WTF::Vector.1892" = type { %"class.WTF::VectorBuffer.1893" }
%"class.WTF::VectorBuffer.1893" = type { %"class.WTF::VectorBufferBase.1894" }
%"class.WTF::VectorBufferBase.1894" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1900" = type { %"class.std::__1::__compressed_pair.1901" }
%"class.std::__1::__compressed_pair.1901" = type { %"struct.std::__1::__compressed_pair_elem.1902" }
%"struct.std::__1::__compressed_pair_elem.1902" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1906" = type { %"class.WTF::VectorBuffer.1907" }
%"class.WTF::VectorBuffer.1907" = type { %"class.WTF::VectorBufferBase.1908" }
%"class.WTF::VectorBufferBase.1908" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1911 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1912" = type { %"class.blink::MemberBase.1913" }
%"class.blink::MemberBase.1913" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1914" = type { %"class.blink::MemberBase.1915" }
%"class.blink::MemberBase.1915" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1916" = type { %"class.blink::MemberBase.1917" }
%"class.blink::MemberBase.1917" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1918" = type { %"class.WTF::HashSet.1921" }
%"class.WTF::HashSet.1921" = type { %"class.WTF::HashTable.1922" }
%"class.WTF::HashTable.1922" = type <{ %"class.blink::WeakMember.1924"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1924" = type opaque
%"class.blink::HeapHashSet.1925" = type { %"class.WTF::HashSet.1928" }
%"class.WTF::HashSet.1928" = type { %"class.WTF::HashTable.1929" }
%"class.WTF::HashTable.1929" = type <{ %"class.blink::WeakMember.1931"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1931" = type opaque
%"class.std::__1::unique_ptr.1932" = type { %"class.std::__1::__compressed_pair.1933" }
%"class.std::__1::__compressed_pair.1933" = type { %"struct.std::__1::__compressed_pair_elem.1934" }
%"struct.std::__1::__compressed_pair_elem.1934" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1374" }
%"class.base::time_internal::TimeBase.1374" = type { i64 }
%"class.std::__1::unique_ptr.1938" = type { %"class.std::__1::__compressed_pair.1939" }
%"class.std::__1::__compressed_pair.1939" = type { %"struct.std::__1::__compressed_pair_elem.1940" }
%"struct.std::__1::__compressed_pair_elem.1940" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1391", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1391" = type { %"class.absl::optional_internal::optional_data.1392" }
%"class.absl::optional_internal::optional_data.1392" = type { %"class.absl::optional_internal::optional_data_base.1393" }
%"class.absl::optional_internal::optional_data_base.1393" = type { %"class.absl::optional_internal::optional_data_dtor_base.1394" }
%"class.absl::optional_internal::optional_data_dtor_base.1394" = type { i8, %union.anon.1395 }
%union.anon.1395 = type { %"class.base::Time" }
%"class.WTF::Vector.669" = type { %"class.WTF::VectorBuffer.670" }
%"class.WTF::VectorBuffer.670" = type { %"class.WTF::VectorBufferBase.671" }
%"class.WTF::VectorBufferBase.671" = type { %"class.base::OnceCallback.217"*, i32, i32 }
%"class.blink::Member.579" = type { %"class.blink::MemberBase.580" }
%"class.blink::MemberBase.580" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.584" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.552", %"class.blink::Member.552" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.552", %"class.blink::Member.554", %"class.blink::Member.552", %"class.blink::Member.552", %"class.blink::Member.556" }
%"class.blink::Member.554" = type { %"class.blink::MemberBase.555" }
%"class.blink::MemberBase.555" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.560", %"class.blink::Member.562", %"class.blink::Member.554", %"class.blink::Member.564", %"class.blink::Member.564", %"class.blink::Member.607", %"class.blink::Member.609", %"class.blink::Member.611", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.616", %"class.blink::HeapVector.618" }
%"class.blink::Member.560" = type { %"class.blink::MemberBase.561" }
%"class.blink::MemberBase.561" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.564" = type { %"class.blink::MemberBase.565" }
%"class.blink::MemberBase.565" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.568" }
%"class.blink::HeapHashMap.568" = type { %"class.WTF::HashMap.571" }
%"class.WTF::HashMap.571" = type { %"class.WTF::HashTable.572" }
%"class.WTF::HashTable.572" = type <{ %"struct.WTF::KeyValuePair.574"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.574" = type { %"class.WTF::AtomicString", %"class.blink::Member.575" }
%"class.blink::Member.575" = type { %"class.blink::MemberBase.576" }
%"class.blink::MemberBase.576" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.579", i32, %"class.blink::HeapVector.600" }
%"class.blink::HeapVector.600" = type { %"class.WTF::Vector.603" }
%"class.WTF::Vector.603" = type { %"class.WTF::VectorBuffer.604" }
%"class.WTF::VectorBuffer.604" = type { %"class.WTF::VectorBufferBase.605" }
%"class.WTF::VectorBufferBase.605" = type { %"class.blink::Member.579"*, i32, i32 }
%"class.blink::Member.607" = type { %"class.blink::MemberBase.608" }
%"class.blink::MemberBase.608" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.609" = type { %"class.blink::MemberBase.610" }
%"class.blink::MemberBase.610" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.611" = type { %"class.blink::MemberBase.612" }
%"class.blink::MemberBase.612" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.613" }
%"class.blink::Member.613" = type { %"class.blink::MemberBase.614" }
%"class.blink::MemberBase.614" = type { %"class.blink::HeapHashMap.615"* }
%"class.blink::HeapHashMap.615" = type opaque
%"class.blink::Member.616" = type { %"class.blink::MemberBase.617" }
%"class.blink::MemberBase.617" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.618" = type { %"class.WTF::Vector.621" }
%"class.WTF::Vector.621" = type { %"class.WTF::VectorBuffer.622" }
%"class.WTF::VectorBuffer.622" = type { %"class.WTF::VectorBufferBase.623" }
%"class.WTF::VectorBufferBase.623" = type { %"class.blink::Member.624"*, i32, i32 }
%"class.blink::Member.624" = type { %"class.blink::MemberBase.625" }
%"class.blink::MemberBase.625" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.626", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.628, %"class.WTF::Vector.629", %"class.WTF::Vector.629", %"class.blink::Member.552", %"class.blink::Member.634", %"class.blink::HeapHashSet.638", %"class.blink::Member.562", %"class.WTF::HashSet.645", %"class.WTF::TextPosition", %"class.blink::Member.649", %"class.blink::HeapVector.651", %"class.blink::Member.658" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.626" = type { %"class.blink::MemberBase.627" }
%"class.blink::MemberBase.627" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.628 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.629" = type { %"class.WTF::VectorBuffer.630" }
%"class.WTF::VectorBuffer.630" = type { %"class.WTF::VectorBufferBase.631" }
%"class.WTF::VectorBufferBase.631" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.634" = type { %"class.blink::MemberBase.635" }
%"class.blink::MemberBase.635" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.636" }
%"class.blink::Member.636" = type { %"class.blink::MemberBase.637" }
%"class.blink::MemberBase.637" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.638" = type { %"class.WTF::HashSet.641" }
%"class.WTF::HashSet.641" = type { %"class.WTF::HashTable.642" }
%"class.WTF::HashTable.642" = type <{ %"class.blink::WeakMember.644"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.644" = type { %"class.blink::MemberBase.555" }
%"class.WTF::HashSet.645" = type { %"class.WTF::HashTable.646" }
%"class.WTF::HashTable.646" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.649" = type { %"class.blink::MemberBase.650" }
%"class.blink::MemberBase.650" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.651" = type { %"class.WTF::Vector.654" }
%"class.WTF::Vector.654" = type { %"class.WTF::VectorBuffer.655" }
%"class.WTF::VectorBuffer.655" = type { %"class.WTF::VectorBufferBase.656" }
%"class.WTF::VectorBufferBase.656" = type { %"class.blink::Member.634"*, i32, i32 }
%"class.blink::Member.658" = type { %"class.blink::MemberBase.659" }
%"class.blink::MemberBase.659" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.556" = type { %"class.blink::MemberBase.557" }
%"class.blink::MemberBase.557" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.552" = type { %"class.blink::MemberBase.553" }
%"class.blink::MemberBase.553" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.581 }
%class.scoped_refptr.581 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.582", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.582" = type { %"class.base::RefCounted.583" }
%"class.base::RefCounted.583" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.584" = type { %"class.blink::MemberBase.585" }
%"class.blink::MemberBase.585" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.588", %"class.blink::Member.590", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.588" = type { %"class.WTF::SingleThreadedBitField.589" }
%"class.WTF::SingleThreadedBitField.589" = type { i32 }
%"class.blink::Member.590" = type { %"class.blink::MemberBase.591" }
%"class.blink::MemberBase.591" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.592 }
%class.scoped_refptr.592 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.593", %"class.WTF::AtomicString", %"class.WTF::Vector.595" }
%"class.WTF::RefCounted.593" = type { %"class.base::RefCounted.594" }
%"class.base::RefCounted.594" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.595" = type { %"class.WTF::VectorBuffer.596" }
%"class.WTF::VectorBuffer.596" = type { %"class.WTF::VectorBufferBase.597", [32 x i8] }
%"class.WTF::VectorBufferBase.597" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.1588" = type { %"class.blink::MemberBase.1589" }
%"class.blink::MemberBase.1589" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1594" = type { %"class.blink::MemberBase.1595" }
%"class.blink::MemberBase.1595" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1596" = type { %"class.blink::MemberBase.1597" }
%"class.blink::MemberBase.1597" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.1598 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1599" = type { %"class.blink::MemberBase.1600" }
%"class.blink::MemberBase.1600" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type { %"class.base::sequence_manager::TaskTimeObserver", i8, %"class.base::TimeDelta", i32, i32, i32, i8*, [7 x %"class.base::TimeDelta"], %"class.blink::Member.926", %"class.blink::Member.111", %"class.v8::Isolate"*, i8, i8, [6 x i8], %"class.blink::HeapHashMap.1603" }
%"class.base::sequence_manager::TaskTimeObserver" = type { i32 (...)** }
%"class.blink::HeapHashMap.1603" = type { %"class.WTF::HashMap.1606" }
%"class.WTF::HashMap.1606" = type { %"class.WTF::HashTable.1607" }
%"class.WTF::HashTable.1607" = type <{ %"struct.WTF::KeyValuePair.1609"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1609" = type opaque
%"class.blink::Member.1610" = type { %"class.blink::MemberBase.1611" }
%"class.blink::MemberBase.1611" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1612" = type { %"class.blink::MemberBase.1613" }
%"class.blink::MemberBase.1613" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1614" = type { %"class.blink::MemberBase.1615" }
%"class.blink::MemberBase.1615" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1616" = type { %"class.blink::MemberBase.1617" }
%"class.blink::MemberBase.1617" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1618" = type { %"class.blink::MemberBase.1619" }
%"class.blink::MemberBase.1619" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1620" = type { %"class.blink::MemberBase.1621" }
%"class.blink::MemberBase.1621" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.1622" = type { %"class.blink::Member.1623" }
%"class.blink::Member.1623" = type { %"class.blink::MemberBase.1624" }
%"class.blink::MemberBase.1624" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2007" }
%"class.mojo::Remote.2007" = type { %"class.mojo::internal::InterfacePtrState.2008" }
%"class.mojo::internal::InterfacePtrState.2008" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2009" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.689, %"class.std::__1::unique_ptr.189", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.208, i32 }>
%class.scoped_refptr.689 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.208, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.747", %"class.absl::optional.752", %"class.absl::optional.706", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.772", i8, [7 x i8], %class.scoped_refptr.208, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.229" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.217", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.208, %"class.std::__1::unique_ptr.690", %"class.absl::optional.700", %"struct.std::__1::atomic.480", i8, i8, i8, i8, i32, i32, %"class.absl::optional.706", %"class.std::__1::unique_ptr.711", i8, i64, %class.scoped_refptr.744, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.746" }
%"class.std::__1::unique_ptr.690" = type { %"class.std::__1::__compressed_pair.691" }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.692" }
%"struct.std::__1::__compressed_pair_elem.692" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.208, i8, %"class.mojo::ScopedHandleBase.693", %class.scoped_refptr.694, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.695", i8*, %"class.base::WeakPtrFactory.696" }
%"class.mojo::ScopedHandleBase.693" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.694 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.695" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.696" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.700" = type { %"class.absl::optional_internal::optional_data.701" }
%"class.absl::optional_internal::optional_data.701" = type { %"class.absl::optional_internal::optional_data_base.702" }
%"class.absl::optional_internal::optional_data_base.702" = type { %"class.absl::optional_internal::optional_data_dtor_base.703" }
%"class.absl::optional_internal::optional_data_dtor_base.703" = type { i8, %union.anon.704 }
%union.anon.704 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.705", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.705" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.714", i8, i64, %class.scoped_refptr.715, %class.scoped_refptr.740 }
%"class.base::RepeatingCallback.714" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.715 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.716", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.718", %"class.std::__1::map.729", i8, [7 x i8] }>
%"class.base::RefCounted.716" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.717 }
%class.scoped_refptr.717 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.718" = type { %"class.std::__1::__tree.719" }
%"class.std::__1::__tree.719" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.720", %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.720" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::map.729" = type { %"class.std::__1::__tree.730" }
%"class.std::__1::__tree.730" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.731", %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%class.scoped_refptr.740 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.744 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.745 }
%class.scoped_refptr.745 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.746" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.747" = type { %"class.absl::optional_internal::optional_data.748" }
%"class.absl::optional_internal::optional_data.748" = type { %"class.absl::optional_internal::optional_data_base.749" }
%"class.absl::optional_internal::optional_data_base.749" = type { %"class.absl::optional_internal::optional_data_dtor_base.750" }
%"class.absl::optional_internal::optional_data_dtor_base.750" = type { i8, %union.anon.751 }
%union.anon.751 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.752" = type { %"class.absl::optional_internal::optional_data.753" }
%"class.absl::optional_internal::optional_data.753" = type { %"class.absl::optional_internal::optional_data_base.754" }
%"class.absl::optional_internal::optional_data_base.754" = type { %"class.absl::optional_internal::optional_data_dtor_base.755" }
%"class.absl::optional_internal::optional_data_dtor_base.755" = type { i8, [7 x i8], %union.anon.756 }
%union.anon.756 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.706" = type { %"class.absl::optional_internal::optional_data.707" }
%"class.absl::optional_internal::optional_data.707" = type { %"class.absl::optional_internal::optional_data_base.708" }
%"class.absl::optional_internal::optional_data_base.708" = type { %"class.absl::optional_internal::optional_data_dtor_base.709" }
%"class.absl::optional_internal::optional_data_dtor_base.709" = type { i8, %union.anon.710 }
%union.anon.710 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.757 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.757 = type { %"class.std::__1::map.760" }
%"class.std::__1::map.760" = type { %"class.std::__1::__tree.761" }
%"class.std::__1::__tree.761" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.762", %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.762" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.771"*, i64 }
%"class.std::__1::unique_ptr.771" = type opaque
%"class.std::__1::map.772" = type { %"class.std::__1::__tree.773" }
%"class.std::__1::__tree.773" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.774", %"class.std::__1::__compressed_pair.778" }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2009" = type { %"class.std::__1::__compressed_pair.2010" }
%"class.std::__1::__compressed_pair.2010" = type { %"struct.std::__1::__compressed_pair_elem.2011" }
%"struct.std::__1::__compressed_pair_elem.2011" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1625" = type { %"class.std::__1::__compressed_pair.1626" }
%"class.std::__1::__compressed_pair.1626" = type { %"struct.std::__1::__compressed_pair_elem.1627" }
%"struct.std::__1::__compressed_pair_elem.1627" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.1628, %"class.blink::WebVector.1629", %"class.base::WaitableEvent"* }
%class.scoped_refptr.1628 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type opaque
%"class.blink::WebVector.1629" = type { %"class.std::__1::vector.1630" }
%"class.std::__1::vector.1630" = type { %"class.std::__1::__vector_base.1631" }
%"class.std::__1::__vector_base.1631" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.1632" }
%"class.std::__1::__compressed_pair.1632" = type { %"struct.std::__1::__compressed_pair_elem.1633" }
%"struct.std::__1::__compressed_pair_elem.1633" = type { %"class.blink::WebString"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.1637, i8, [7 x i8] }>
%class.scoped_refptr.1637 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.1638", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.1638" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1639" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1639" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1646" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1647" = type { %"class.std::__1::__compressed_pair.1648" }
%"class.std::__1::__compressed_pair.1648" = type { %"struct.std::__1::__compressed_pair_elem.1649" }
%"struct.std::__1::__compressed_pair_elem.1649" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.1653" = type { %"class.std::__1::__compressed_pair.1654" }
%"class.std::__1::__compressed_pair.1654" = type { %"struct.std::__1::__compressed_pair_elem.1655" }
%"struct.std::__1::__compressed_pair_elem.1655" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1659" }
%"class.blink::Member.1659" = type { %"class.blink::MemberBase.1660" }
%"class.blink::MemberBase.1660" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2017" }
%"class.mojo::AssociatedRemote.2017" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2018" }
%"class.mojo::internal::AssociatedInterfacePtrState.2018" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2019" }
%"class.std::__1::unique_ptr.2019" = type { %"class.std::__1::__compressed_pair.2020" }
%"class.std::__1::__compressed_pair.2020" = type { %"struct.std::__1::__compressed_pair_elem.2021" }
%"struct.std::__1::__compressed_pair_elem.2021" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1661" = type { %"class.blink::Member.1662" }
%"class.blink::Member.1662" = type { %"class.blink::MemberBase.1663" }
%"class.blink::MemberBase.1663" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2027" }
%"class.mojo::AssociatedRemote.2027" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2028" }
%"class.mojo::internal::AssociatedInterfacePtrState.2028" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2029" }
%"class.std::__1::unique_ptr.2029" = type { %"class.std::__1::__compressed_pair.2030" }
%"class.std::__1::__compressed_pair.2030" = type { %"struct.std::__1::__compressed_pair_elem.2031" }
%"struct.std::__1::__compressed_pair_elem.2031" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1664" }
%"class.blink::Member.1664" = type { %"class.blink::MemberBase.1665" }
%"class.blink::MemberBase.1665" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2037", %"class.blink::Member.926", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2037" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2038" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.189" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2038" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1666" = type { %"class.blink::Member.1667" }
%"class.blink::Member.1667" = type { %"class.blink::MemberBase.1668" }
%"class.blink::MemberBase.1668" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2041", %"class.blink::Member.926", %"class.mojo::AssociatedReceiver.2042" }
%"class.blink::ThreadState::PrefinalizerRegistration.2041" = type { i8 }
%"class.mojo::AssociatedReceiver.2042" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2043" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2043" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver.1669" = type { %"class.blink::Member.1670" }
%"class.blink::Member.1670" = type { %"class.blink::MemberBase.1671" }
%"class.blink::MemberBase.1671" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2046", %"class.blink::Member.926", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2046" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.689, %"class.std::__1::unique_ptr.189", %"class.base::WeakPtrFactory.2047" }
%"class.base::WeakPtrFactory.2047" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1672" = type { %"class.blink::Member.1673" }
%"class.blink::Member.1673" = type { %"class.blink::MemberBase.1674" }
%"class.blink::MemberBase.1674" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2050", %"class.blink::Member.926", %"class.mojo::AssociatedReceiver.2051" }
%"class.blink::ThreadState::PrefinalizerRegistration.2050" = type { i8 }
%"class.mojo::AssociatedReceiver.2051" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2052" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2052" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1675" = type { %"class.blink::MemberBase.1676" }
%"class.blink::MemberBase.1676" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1677" = type { %"class.blink::MemberBase.1678" }
%"class.blink::MemberBase.1678" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1679" = type { %"class.blink::MemberBase.1680" }
%"class.blink::MemberBase.1680" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1681" = type { %"class.blink::MemberBase.1682" }
%"class.blink::MemberBase.1682" = type { %"class.blink::HeapHashMap.1683"* }
%"class.blink::HeapHashMap.1683" = type opaque
%"class.mojo::StructPtr.1684" = type { %"class.std::__1::unique_ptr.1685" }
%"class.std::__1::unique_ptr.1685" = type { %"class.std::__1::__compressed_pair.1686" }
%"class.std::__1::__compressed_pair.1686" = type { %"struct.std::__1::__compressed_pair_elem.1687" }
%"struct.std::__1::__compressed_pair_elem.1687" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1688", %"class.mojo::InlinedStructPtr.1281" }
%"class.mojo::InlinedStructPtr.1688" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1281" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1692" = type { %"class.blink::MemberBase.1693" }
%"class.blink::MemberBase.1693" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1694" = type { %"class.absl::optional_internal::optional_data.1695" }
%"class.absl::optional_internal::optional_data.1695" = type { %"class.absl::optional_internal::optional_data_base.1696" }
%"class.absl::optional_internal::optional_data_base.1696" = type { %"class.absl::optional_internal::optional_data_dtor_base.1697" }
%"class.absl::optional_internal::optional_data_dtor_base.1697" = type { i8, %union.anon.1698 }
%union.anon.1698 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.676", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1531" }
%"class.std::__1::vector.1531" = type { %"class.std::__1::__vector_base.1532" }
%"class.std::__1::__vector_base.1532" = type { %"struct.std::__1::pair.1533"*, %"struct.std::__1::pair.1533"*, %"class.std::__1::__compressed_pair.1534" }
%"struct.std::__1::pair.1533" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1534" = type { %"struct.std::__1::__compressed_pair_elem.1535" }
%"struct.std::__1::__compressed_pair_elem.1535" = type { %"struct.std::__1::pair.1533"* }
%"class.blink::Member.1539" = type { %"class.blink::MemberBase.1540" }
%"class.blink::MemberBase.1540" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1541" = type { %"class.absl::optional_internal::optional_data.1542" }
%"class.absl::optional_internal::optional_data.1542" = type { %"class.absl::optional_internal::optional_data_base.1543" }
%"class.absl::optional_internal::optional_data_base.1543" = type { %"class.absl::optional_internal::optional_data_dtor_base.1544" }
%"class.absl::optional_internal::optional_data_dtor_base.1544" = type { i8, %union.anon.1545 }
%union.anon.1545 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.1361" = type { %"class.absl::optional_internal::optional_data.1362" }
%"class.absl::optional_internal::optional_data.1362" = type { %"class.absl::optional_internal::optional_data_base.1363" }
%"class.absl::optional_internal::optional_data_base.1363" = type { %"class.absl::optional_internal::optional_data_dtor_base.1364" }
%"class.absl::optional_internal::optional_data_dtor_base.1364" = type { i8, %union.anon.1365 }
%union.anon.1365 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.986 }
%class.scoped_refptr.986 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1546" }
%"class.blink::HeapHashSet.1546" = type { %"class.WTF::HashSet.1549" }
%"class.WTF::HashSet.1549" = type { %"class.WTF::HashTable.1550" }
%"class.WTF::HashTable.1550" = type <{ %"class.blink::WeakMember.1552"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1552" = type opaque
%"class.blink::Member.678" = type { %"class.blink::MemberBase.679" }
%"class.blink::MemberBase.679" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.680" = type { %"class.blink::MemberBase.681" }
%"class.blink::MemberBase.681" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.682" = type { %"class.blink::MemberBase.683" }
%"class.blink::MemberBase.683" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.684" = type { %"class.WTF::VectorBuffer.685" }
%"class.WTF::VectorBuffer.685" = type { %"class.WTF::VectorBufferBase.686" }
%"class.WTF::VectorBufferBase.686" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType.687", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.781" }
%"class.std::__1::unique_ptr.781" = type { %"class.std::__1::__compressed_pair.782" }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.783" }
%"struct.std::__1::__compressed_pair_elem.783" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.117", i32, i8, [3 x i8], %"class.blink::HeapVector.119", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.128", %"class.blink::Member.130", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.139", %"class.blink::Member.280", %"class.blink::Member.282", i8 }>
%"class.blink::Supplementable.789" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.790" }
%"class.blink::HeapHashMap.790" = type { %"class.WTF::HashMap.793" }
%"class.WTF::HashMap.793" = type { %"class.WTF::HashTable.794" }
%"class.WTF::HashTable.794" = type <{ %"struct.WTF::KeyValuePair.796"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.796" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.797" = type { %"class.blink::MemberBase.798" }
%"class.blink::MemberBase.798" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.562" = type { %"class.blink::MemberBase.563" }
%"class.blink::MemberBase.563" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.661", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.669", %"class.WTF::Vector.669", i8, i32, %"class.blink::Member.674", %"class.blink::Member.111", %"class.blink::Member.962", %"class.blink::Member.964", %"class.blink::Member.966", %"class.blink::Member.968", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.976", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.982", %"class.blink::Member.984", %"class.blink::Member.624", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.987", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.600", %"class.blink::Member.579", %"class.blink::Member.937", %"class.blink::Member.579", %"class.blink::Member.579", %"class.blink::Member.579", %"class.blink::UserActionElementSet", %"class.blink::Member.1003", double, double, i64, i64, %"class.blink::HeapHashSet.1005", %"class.blink::HeapHashSet.1012", i16, i8, %"class.blink::Member.1019", %"class.blink::Member.1021", %"class.blink::Member.1023", %"class.blink::Member.1025", %"class.blink::TextLinkColors", %"class.blink::Member.1027", i8, [7 x i8], %"class.blink::HeapHashMap.1029", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.579", %"class.WTF::Vector.1036", %"class.blink::Member.1041", %"class.blink::Member.1043", i8, %"class.blink::Member.579", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1045", %"class.blink::HeapVector.1047", %"class.std::__1::unique_ptr.1055", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1061", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1074", %"class.WTF::Vector.1076", i8, i8, %"class.std::__1::unique_ptr.1081", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.600", %"class.blink::HeapVector.1087", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1095", i8, i32, %"class.blink::Member.1097", %"class.blink::Member.1099", %"class.blink::Member.1101", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1103", %"class.WTF::HashMap.1105", %"class.blink::Member.1110", %"class.blink::Member.1112", %"class.blink::Member.1114", %"class.blink::Member.1116", %"class.blink::Member.562", %"class.blink::Member.562", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1118", i8, i32, %"class.blink::Member.1125", %"class.blink::Member.1127", i32, %"class.blink::Member.1129", %"class.blink::Member.1131", %"class.blink::Member.1133", %"class.std::__1::unique_ptr.1135", i64, %"class.std::__1::unique_ptr.1141", i32, i32, %"class.blink::Member.1147", %"class.blink::Member.1149", %"class.blink::Member.1151", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1153", %"class.WTF::Vector.948", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1155", %"class.blink::Member.1162", %"class.std::__1::unique_ptr.1164", %"class.blink::Member.1170", i8, i8, %"class.WTF::String", %"class.blink::Member.1172", i8, [7 x i8], %"class.blink::HeapHashMap.1174", %"class.blink::HeapObserverSet.1181", %"class.blink::Member.1189", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1191", i32, i8, i8, %"class.blink::WeakMember.1193", %"class.blink::Member.1194" }
%"class.blink::Supplementable.661" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.662" }
%"class.blink::HeapHashMap.662" = type { %"class.WTF::HashMap.665" }
%"class.WTF::HashMap.665" = type { %"class.WTF::HashTable.666" }
%"class.WTF::HashTable.666" = type <{ %"struct.WTF::KeyValuePair.668"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.668" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.674" = type { %"class.blink::MemberBase.675" }
%"class.blink::MemberBase.675" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::Member.962" = type { %"class.blink::MemberBase.963" }
%"class.blink::MemberBase.963" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.1209", %"class.blink::Member.1210", %"class.blink::Member.1212", %"class.blink::Member.1216", %class.scoped_refptr.993, %class.scoped_refptr.993, %"class.blink::Member.1218", %"class.blink::Member.1220", %"class.blink::Member.1226", %"class.blink::Member.1230", %"class.blink::Member.1282", %"class.blink::HeapHashMap.1284", %"class.blink::HeapHashSet.1291", %"class.blink::HeapHashSet.1291", %"class.blink::HeapHashMap.1456", %"class.blink::HeapVector.1463", %"class.blink::Member.1471", %"class.blink::HeapTaskRunnerTimer.1473", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.1475", %"class.WTF::Vector.1482", %"class.blink::HeapHashSet.1488", %"class.blink::HeapHashSet.1488", %"class.std::__1::unique_ptr.1494", %"class.base::WeakPtr.1275", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote.1504", %"class.blink::Member.1507", i8, i8, %"class.base::WeakPtrFactory.1509" }
%"class.blink::ThreadState::PrefinalizerRegistration.1209" = type { i8 }
%"class.blink::Member.1210" = type { %"class.blink::MemberBase.1211" }
%"class.blink::MemberBase.1211" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.1212" = type { %"class.blink::MemberBase.1213" }
%"class.blink::MemberBase.1213" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type { i32 (...)** }
%"class.blink::Member.1216" = type { %"class.blink::MemberBase.1217" }
%"class.blink::MemberBase.1217" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%"class.blink::Member.1218" = type { %"class.blink::MemberBase.1219" }
%"class.blink::MemberBase.1219" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.1220" = type { %"class.blink::MemberBase.1221" }
%"class.blink::MemberBase.1221" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.1224" }
%"class.blink::Member.1224" = type { %"class.blink::MemberBase.1225" }
%"class.blink::MemberBase.1225" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.1226" = type { %"class.blink::MemberBase.1227" }
%"class.blink::MemberBase.1227" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.1230" = type { %"class.blink::MemberBase.1231" }
%"class.blink::MemberBase.1231" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.1234", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.1236", %"class.WTF::HashSet.1241", i8, [3 x i8], i32, %"class.blink::HeapHashMap.1245", %"class.std::__1::map.1252", %"class.std::__1::map.1263", %"class.std::__1::unique_ptr.1272", %"class.blink::Member.1220", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.1279", %"class.mojo::InlinedStructPtr.1281", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.1234" = type { %"class.blink::MemberBase.1235" }
%"class.blink::MemberBase.1235" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.1236" = type { %"class.WTF::HashTable.1237" }
%"class.WTF::HashTable.1237" = type <{ %"struct.WTF::KeyValuePair.1240"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1240" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.1241" = type { %"class.WTF::HashTable.1242" }
%"class.WTF::HashTable.1242" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1245" = type { %"class.WTF::HashMap.1248" }
%"class.WTF::HashMap.1248" = type { %"class.WTF::HashTable.1249" }
%"class.WTF::HashTable.1249" = type <{ %"struct.WTF::KeyValuePair.1251"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1251" = type opaque
%"class.std::__1::map.1252" = type { %"class.std::__1::__tree.1253" }
%"class.std::__1::__tree.1253" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1254", %"class.std::__1::__compressed_pair.1258" }
%"class.std::__1::__compressed_pair.1254" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.1258" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::map.1263" = type { %"class.std::__1::__tree.1264" }
%"class.std::__1::__tree.1264" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1265", %"class.std::__1::__compressed_pair.1269" }
%"class.std::__1::__compressed_pair.1265" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.1269" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::unique_ptr.1272" = type { %"class.std::__1::__compressed_pair.1273" }
%"class.std::__1::__compressed_pair.1273" = type { %"struct.std::__1::__compressed_pair_elem.1274" }
%"struct.std::__1::__compressed_pair_elem.1274" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.1275", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.1279" = type { %"class.blink::MemberBase.1280" }
%"class.blink::MemberBase.1280" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.blink::Member.1282" = type { %"class.blink::MemberBase.1283" }
%"class.blink::MemberBase.1283" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.1284" = type { %"class.WTF::HashMap.1287" }
%"class.WTF::HashMap.1287" = type { %"class.WTF::HashTable.1288" }
%"class.WTF::HashTable.1288" = type <{ %"struct.WTF::KeyValuePair.1290"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1290" = type opaque
%"class.blink::HeapHashSet.1291" = type { %"class.WTF::HashSet.1294" }
%"class.WTF::HashSet.1294" = type { %"class.WTF::HashTable.1295" }
%"class.WTF::HashTable.1295" = type <{ %"class.blink::WeakMember.1297"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1297" = type { %"class.blink::MemberBase.1298" }
%"class.blink::MemberBase.1298" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.1301", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.1321", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.1414", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.1431", %"class.blink::ResourceResponse", %class.scoped_refptr.1433, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.1301" = type { %"class.absl::optional_internal::optional_data.1302" }
%"class.absl::optional_internal::optional_data.1302" = type { %"class.absl::optional_internal::optional_data_base.1303" }
%"class.absl::optional_internal::optional_data_base.1303" = type { %"class.absl::optional_internal::optional_data_dtor_base.1304" }
%"class.absl::optional_internal::optional_data_dtor_base.1304" = type { i8, %union.anon.1305 }
%union.anon.1305 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.1306", i8, %"class.absl::optional.1311", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.1306" = type { %"class.absl::optional_internal::optional_data.1307" }
%"class.absl::optional_internal::optional_data.1307" = type { %"class.absl::optional_internal::optional_data_base.1308" }
%"class.absl::optional_internal::optional_data_base.1308" = type { %"class.absl::optional_internal::optional_data_dtor_base.1309" }
%"class.absl::optional_internal::optional_data_dtor_base.1309" = type { i8, [7 x i8], %union.anon.1310 }
%union.anon.1310 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.1311" = type { %"class.absl::optional_internal::optional_data.1312" }
%"class.absl::optional_internal::optional_data.1312" = type { %"class.absl::optional_internal::optional_data_base.1313" }
%"class.absl::optional_internal::optional_data_base.1313" = type { %"class.absl::optional_internal::optional_data_dtor_base.1314" }
%"class.absl::optional_internal::optional_data_dtor_base.1314" = type { i8, %union.anon.1315 }
%union.anon.1315 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.1316", %"class.WTF::Vector.169" }
%"class.WTF::Vector.1316" = type { %"class.WTF::VectorBuffer.1317" }
%"class.WTF::VectorBuffer.1317" = type { %"class.WTF::VectorBufferBase.1318" }
%"class.WTF::VectorBufferBase.1318" = type { i32*, i32, i32 }
%"class.WTF::Vector.1321" = type { %"class.WTF::VectorBuffer.1322" }
%"class.WTF::VectorBuffer.1322" = type { %"class.WTF::VectorBufferBase.1323" }
%"class.WTF::VectorBufferBase.1323" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1410" }
%"class.WTF::HashMap.1410" = type { %"class.WTF::HashTable.1411" }
%"class.WTF::HashTable.1411" = type <{ %"struct.WTF::KeyValuePair.1413"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1413" = type <{ %"class.blink::WeakMember.2067", i32, [4 x i8] }>
%"class.blink::WeakMember.2067" = type { %"class.blink::MemberBase.2068" }
%"class.blink::MemberBase.2068" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2069", [7 x i8], %"class.blink::Member.1469", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.2069" = type { i8 }
%"class.blink::Member.1469" = type { %"class.blink::MemberBase.1298" }
%"class.blink::HeapHashSet.1414" = type { %"class.WTF::HashSet.1417" }
%"class.WTF::HashSet.1417" = type { %"class.WTF::HashTable.1418" }
%"class.WTF::HashTable.1418" = type <{ %"class.blink::WeakMember.1420"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1420" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.1421", %"class.WTF::String", %"class.WTF::HashSet.1422", i8, i8, %class.scoped_refptr.990, %class.scoped_refptr.1427, %class.scoped_refptr.1429 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.base::StrongAlias.1421" = type { i8 }
%"class.WTF::HashSet.1422" = type { %"class.WTF::HashTable.1423" }
%"class.WTF::HashTable.1423" = type <{ %"struct.std::__1::pair.1426"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.1426" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.990 = type { %"class.blink::DOMWrapperWorld"* }
%class.scoped_refptr.1427 = type { %"class.base::RefCountedData.1428"* }
%"class.base::RefCountedData.1428" = type opaque
%class.scoped_refptr.1429 = type { %"class.base::RefCountedData.1430"* }
%"class.base::RefCountedData.1430" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.76, %class.scoped_refptr.76, %class.scoped_refptr.76, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.1329, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.1341", %"class.absl::optional.1346", %"class.absl::optional.1356", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.1361", %"class.absl::optional.1356", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.1356", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.1361", %"class.absl::optional.1366", i8, %class.scoped_refptr.1372 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.1324" }
%"class.WTF::HashMap.1324" = type { %"class.WTF::HashTable.1325" }
%"class.WTF::HashTable.1325" = type <{ %"struct.WTF::KeyValuePair.1328"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1328" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.1329 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.1330", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.1339, i8, %"class.url::Origin" }
%"class.base::RefCounted.1330" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.1331" }
%"class.std::__1::vector.1331" = type { %"class.std::__1::__vector_base.1332" }
%"class.std::__1::__vector_base.1332" = type { %"class.std::__1::unique_ptr.1333"*, %"class.std::__1::unique_ptr.1333"*, %"class.std::__1::__compressed_pair.1334" }
%"class.std::__1::unique_ptr.1333" = type { %"class.std::__1::__compressed_pair.2053" }
%"class.std::__1::__compressed_pair.2053" = type { %"struct.std::__1::__compressed_pair_elem.2054" }
%"struct.std::__1::__compressed_pair_elem.2054" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1334" = type { %"struct.std::__1::__compressed_pair_elem.1335" }
%"struct.std::__1::__compressed_pair_elem.1335" = type { %"class.std::__1::unique_ptr.1333"* }
%class.scoped_refptr.1339 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1340", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1340" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.1341" = type { %"class.absl::optional_internal::optional_data.1342" }
%"class.absl::optional_internal::optional_data.1342" = type { %"class.absl::optional_internal::optional_data_base.1343" }
%"class.absl::optional_internal::optional_data_base.1343" = type { %"class.absl::optional_internal::optional_data_dtor_base.1344" }
%"class.absl::optional_internal::optional_data_dtor_base.1344" = type { i8, %union.anon.1345 }
%union.anon.1345 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.1346" = type { %"class.absl::optional_internal::optional_data.1347" }
%"class.absl::optional_internal::optional_data.1347" = type { %"class.absl::optional_internal::optional_data_base.1348" }
%"class.absl::optional_internal::optional_data_base.1348" = type { %"class.absl::optional_internal::optional_data_dtor_base.1349" }
%"class.absl::optional_internal::optional_data_dtor_base.1349" = type { i8, %union.anon.1350 }
%union.anon.1350 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.1351", %"class.WTF::Vector.169", %"class.WTF::String" }
%"class.WTF::Vector.1351" = type { %"class.WTF::VectorBuffer.1352" }
%"class.WTF::VectorBuffer.1352" = type { %"class.WTF::VectorBufferBase.1353" }
%"class.WTF::VectorBufferBase.1353" = type { %class.scoped_refptr.76*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.198", %"class.absl::optional.198" }
%"class.absl::optional.1356" = type { %"class.absl::optional_internal::optional_data.1357" }
%"class.absl::optional_internal::optional_data.1357" = type { %"class.absl::optional_internal::optional_data_base.1358" }
%"class.absl::optional_internal::optional_data_base.1358" = type { %"class.absl::optional_internal::optional_data_dtor_base.1359" }
%"class.absl::optional_internal::optional_data_dtor_base.1359" = type { i8, %union.anon.1360 }
%union.anon.1360 = type { %"class.WTF::String" }
%"class.absl::optional.1366" = type { %"class.absl::optional_internal::optional_data.1367" }
%"class.absl::optional_internal::optional_data.1367" = type { %"class.absl::optional_internal::optional_data_base.1368" }
%"class.absl::optional_internal::optional_data_base.1368" = type { %"class.absl::optional_internal::optional_data_dtor_base.1369" }
%"class.absl::optional_internal::optional_data_dtor_base.1369" = type { i8, %union.anon.1370 }
%union.anon.1370 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1371" }
%"class.mojo::PendingRemote.1371" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%class.scoped_refptr.1372 = type { %"class.base::RefCountedData.1373"* }
%"class.base::RefCountedData.1373" = type { %"class.base::RefCountedThreadSafe.2058", %"class.base::internal::flat_tree.2059" }
%"class.base::RefCountedThreadSafe.2058" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.2059" = type { %"class.std::__1::vector.2060" }
%"class.std::__1::vector.2060" = type { %"class.std::__1::__vector_base.2061" }
%"class.std::__1::__vector_base.2061" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2062" }
%"class.std::__1::__compressed_pair.2062" = type { %"struct.std::__1::__compressed_pair_elem.2063" }
%"struct.std::__1::__compressed_pair_elem.2063" = type { i32* }
%"class.blink::Member.1431" = type { %"class.blink::MemberBase.1432" }
%"class.blink::MemberBase.1432" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1375", %class.scoped_refptr.1389, %class.scoped_refptr.1390, %"struct.blink::CacheControlHeader", %"class.absl::optional.198", %"class.absl::optional.1391", %"class.absl::optional.1391", %"class.absl::optional.1391", i64, %"class.blink::KURL", %"class.WTF::Vector.1396", %"class.WTF::String", %"class.WTF::Vector.169", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.1361", %"class.WTF::Vector.169", %"class.blink::KURL", %"class.absl::optional.1401" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.1375" = type { %"class.absl::optional_internal::optional_data.1376" }
%"class.absl::optional_internal::optional_data.1376" = type { %"class.absl::optional_internal::optional_data_base.1377" }
%"class.absl::optional_internal::optional_data_base.1377" = type { %"class.absl::optional_internal::optional_data_dtor_base.1378" }
%"class.absl::optional_internal::optional_data_dtor_base.1378" = type { i8, %union.anon.1379 }
%union.anon.1379 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.169", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1380", %"class.WTF::Vector.1384" }
%"class.WTF::Vector.1380" = type { %"class.WTF::VectorBuffer.1381" }
%"class.WTF::VectorBuffer.1381" = type { %"class.WTF::VectorBufferBase.597" }
%"class.WTF::Vector.1384" = type { %"class.WTF::VectorBuffer.1385" }
%"class.WTF::VectorBuffer.1385" = type { %"class.WTF::VectorBufferBase.1386" }
%"class.WTF::VectorBufferBase.1386" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1389 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1390 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.WTF::Vector.1396" = type { %"class.WTF::VectorBuffer.1397" }
%"class.WTF::VectorBuffer.1397" = type { %"class.WTF::VectorBufferBase.1398" }
%"class.WTF::VectorBufferBase.1398" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.1401" = type { %"class.absl::optional_internal::optional_data.1402" }
%"class.absl::optional_internal::optional_data.1402" = type { %"class.absl::optional_internal::optional_data_base.1403" }
%"class.absl::optional_internal::optional_data_base.1403" = type { %"class.absl::optional_internal::optional_data_dtor_base.1404" }
%"class.absl::optional_internal::optional_data_dtor_base.1404" = type { i8, %union.anon.1405 }
%union.anon.1405 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.1433 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1434", i64, %"class.WTF::Vector.1436", %"class.WTF::Vector.1441" }
%"class.WTF::RefCounted.1434" = type { %"class.base::RefCounted.1435" }
%"class.base::RefCounted.1435" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1436" = type { %"class.WTF::VectorBuffer.1437" }
%"class.WTF::VectorBuffer.1437" = type { %"class.WTF::VectorBufferBase.1438" }
%"class.WTF::VectorBufferBase.1438" = type { i8*, i32, i32 }
%"class.WTF::Vector.1441" = type { %"class.WTF::VectorBuffer.1442" }
%"class.WTF::VectorBuffer.1442" = type { %"class.WTF::VectorBufferBase.1443" }
%"class.WTF::VectorBufferBase.1443" = type { %"class.std::__1::unique_ptr.1444"*, i32, i32 }
%"class.std::__1::unique_ptr.1444" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.1447" }
%"class.std::__1::__tree.1447" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1448", %"class.std::__1::__compressed_pair.1452" }
%"class.std::__1::__compressed_pair.1448" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.1452" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.blink::HeapHashMap.1456" = type { %"class.WTF::HashMap.1459" }
%"class.WTF::HashMap.1459" = type { %"class.WTF::HashTable.1460" }
%"class.WTF::HashTable.1460" = type <{ %"struct.WTF::KeyValuePair.1462"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1462" = type opaque
%"class.blink::HeapVector.1463" = type { %"class.WTF::Vector.1466" }
%"class.WTF::Vector.1466" = type { %"class.WTF::VectorBuffer.1467" }
%"class.WTF::VectorBuffer.1467" = type { %"class.WTF::VectorBufferBase.1468" }
%"class.WTF::VectorBufferBase.1468" = type { %"class.blink::Member.1469"*, i32, i32 }
%"class.blink::Member.1471" = type { %"class.blink::MemberBase.1472" }
%"class.blink::MemberBase.1472" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer.1473" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1474", { i64, i64 } }
%"class.blink::WeakMember.1474" = type { %"class.blink::MemberBase.963" }
%"class.blink::HeapHashMap.1475" = type { %"class.WTF::HashMap.1478" }
%"class.WTF::HashMap.1478" = type { %"class.WTF::HashTable.1479" }
%"class.WTF::HashTable.1479" = type <{ %"struct.WTF::KeyValuePair.1481"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1481" = type opaque
%"class.WTF::Vector.1482" = type { %"class.WTF::VectorBuffer.1483" }
%"class.WTF::VectorBuffer.1483" = type { %"class.WTF::VectorBufferBase.1484" }
%"class.WTF::VectorBufferBase.1484" = type { %class.scoped_refptr.1485*, i32, i32 }
%class.scoped_refptr.1485 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.1488" = type { %"class.WTF::HashSet.1491" }
%"class.WTF::HashSet.1491" = type { %"class.WTF::HashTable.1492" }
%"class.WTF::HashTable.1492" = type <{ %"class.blink::Member.1431"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1494" = type { %"class.std::__1::__compressed_pair.1495" }
%"class.std::__1::__compressed_pair.1495" = type { %"struct.std::__1::__compressed_pair_elem.1496" }
%"struct.std::__1::__compressed_pair_elem.1496" = type { %"class.WTF::HashSet.1497"* }
%"class.base::WeakPtr.1275" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::HeapMojoRemote.1504" = type { %"class.blink::Member.1505" }
%"class.blink::Member.1505" = type { %"class.blink::MemberBase.1506" }
%"class.blink::MemberBase.1506" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1507" = type { %"class.blink::MemberBase.1508" }
%"class.blink::MemberBase.1508" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.1509" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.964" = type { %"class.blink::MemberBase.965" }
%"class.blink::MemberBase.965" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.966" = type { %"class.blink::MemberBase.967" }
%"class.blink::MemberBase.967" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.968" = type { %"class.blink::MemberBase.969" }
%"class.blink::MemberBase.969" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.976" = type { %"class.std::__1::__compressed_pair.977" }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.978" }
%"struct.std::__1::__compressed_pair_elem.978" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.982" = type { %"class.blink::MemberBase.983" }
%"class.blink::MemberBase.983" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.984" = type { %"class.blink::MemberBase.985" }
%"class.blink::MemberBase.985" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.WTF::Vector.987" = type { %"class.WTF::VectorBuffer.988" }
%"class.WTF::VectorBuffer.988" = type { %"class.WTF::VectorBufferBase.989" }
%"class.WTF::VectorBufferBase.989" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.990 }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.562", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.552", %"class.blink::Member.552", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.996" }
%"class.blink::HeapHashMap.996" = type { %"class.WTF::HashMap.999" }
%"class.WTF::HashMap.999" = type { %"class.WTF::HashTable.1000" }
%"class.WTF::HashTable.1000" = type <{ %"struct.WTF::KeyValuePair.1002"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1002" = type opaque
%"class.blink::Member.1003" = type { %"class.blink::MemberBase.1004" }
%"class.blink::MemberBase.1004" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1005" = type { %"class.WTF::HashSet.1008" }
%"class.WTF::HashSet.1008" = type { %"class.WTF::HashTable.1009" }
%"class.WTF::HashTable.1009" = type <{ %"class.blink::WeakMember.1011"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1011" = type opaque
%"class.blink::HeapHashSet.1012" = type { %"class.WTF::HashSet.1015" }
%"class.WTF::HashSet.1015" = type { %"class.WTF::HashTable.1016" }
%"class.WTF::HashTable.1016" = type <{ %"class.blink::WeakMember.1018"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1018" = type opaque
%"class.blink::Member.1019" = type { %"class.blink::MemberBase.1020" }
%"class.blink::MemberBase.1020" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1021" = type { %"class.blink::MemberBase.1022" }
%"class.blink::MemberBase.1022" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.554", %"class.blink::HeapVector.618" }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1027" = type { %"class.blink::MemberBase.1028" }
%"class.blink::MemberBase.1028" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1029" = type { %"class.WTF::HashMap.1032" }
%"class.WTF::HashMap.1032" = type { %"class.WTF::HashTable.1033" }
%"class.WTF::HashTable.1033" = type <{ %"struct.WTF::KeyValuePair.1035"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1035" = type opaque
%"class.WTF::Vector.1036" = type { %"class.WTF::VectorBuffer.1037" }
%"class.WTF::VectorBuffer.1037" = type { %"class.WTF::VectorBufferBase.1038" }
%"class.WTF::VectorBufferBase.1038" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1041" = type { %"class.blink::MemberBase.1042" }
%"class.blink::MemberBase.1042" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1043" = type { %"class.blink::MemberBase.1044" }
%"class.blink::MemberBase.1044" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1045" = type { %"class.blink::MemberBase.1046" }
%"class.blink::MemberBase.1046" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1047" = type { %"class.WTF::Vector.1050" }
%"class.WTF::Vector.1050" = type { %"class.WTF::VectorBuffer.1051" }
%"class.WTF::VectorBuffer.1051" = type { %"class.WTF::VectorBufferBase.1052" }
%"class.WTF::VectorBufferBase.1052" = type { %"class.blink::Member.1053"*, i32, i32 }
%"class.blink::Member.1053" = type opaque
%"class.std::__1::unique_ptr.1055" = type { %"class.std::__1::__compressed_pair.1056" }
%"class.std::__1::__compressed_pair.1056" = type { %"struct.std::__1::__compressed_pair_elem.1057" }
%"struct.std::__1::__compressed_pair_elem.1057" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1061" = type { %"class.WTF::HashSet.1064" }
%"class.WTF::HashSet.1064" = type { %"class.WTF::HashTable.1065" }
%"class.WTF::HashTable.1065" = type <{ %"class.blink::WeakMember.1067"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1067" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1068", i32, [4 x i8] }>
%"class.WTF::Vector.1068" = type { %"class.WTF::VectorBuffer.1069" }
%"class.WTF::VectorBuffer.1069" = type { %"class.WTF::VectorBufferBase.1070" }
%"class.WTF::VectorBufferBase.1070" = type { %"struct.std::__1::pair.1071"*, i32, i32 }
%"struct.std::__1::pair.1071" = type opaque
%"class.blink::Member.1074" = type { %"class.blink::MemberBase.1075" }
%"class.blink::MemberBase.1075" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1076" = type { %"class.WTF::VectorBuffer.1077" }
%"class.WTF::VectorBuffer.1077" = type { %"class.WTF::VectorBufferBase.1078" }
%"class.WTF::VectorBufferBase.1078" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1081" = type { %"class.std::__1::__compressed_pair.1082" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.1083" }
%"struct.std::__1::__compressed_pair_elem.1083" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1087" = type { %"class.WTF::Vector.1090" }
%"class.WTF::Vector.1090" = type { %"class.WTF::VectorBuffer.1091" }
%"class.WTF::VectorBuffer.1091" = type { %"class.WTF::VectorBufferBase.1092" }
%"class.WTF::VectorBufferBase.1092" = type { %"class.blink::Member.1093"*, i32, i32 }
%"class.blink::Member.1093" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.562" }
%"class.blink::Member.1095" = type { %"class.blink::MemberBase.1096" }
%"class.blink::MemberBase.1096" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1097" = type { %"class.blink::MemberBase.1098" }
%"class.blink::MemberBase.1098" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1099" = type { %"class.blink::MemberBase.1100" }
%"class.blink::MemberBase.1100" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1101" = type { %"class.blink::MemberBase.1102" }
%"class.blink::MemberBase.1102" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1103" = type { %"class.blink::MemberBase.1104" }
%"class.blink::MemberBase.1104" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1105" = type { %"class.WTF::HashTable.1106" }
%"class.WTF::HashTable.1106" = type <{ %"struct.WTF::KeyValuePair.1109"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1109" = type opaque
%"class.blink::Member.1110" = type { %"class.blink::MemberBase.1111" }
%"class.blink::MemberBase.1111" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1112" = type { %"class.blink::MemberBase.1113" }
%"class.blink::MemberBase.1113" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1114" = type { %"class.blink::MemberBase.1115" }
%"class.blink::MemberBase.1115" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1116" = type { %"class.blink::MemberBase.1117" }
%"class.blink::MemberBase.1117" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.995", { i64, i64 } }
%"class.blink::WeakMember.995" = type { %"class.blink::MemberBase.563" }
%"class.blink::HeapHashSet.1118" = type { %"class.WTF::HashSet.1121" }
%"class.WTF::HashSet.1121" = type { %"class.WTF::HashTable.1122" }
%"class.WTF::HashTable.1122" = type <{ %"class.blink::Member.1124"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1124" = type opaque
%"class.blink::Member.1125" = type { %"class.blink::MemberBase.1126" }
%"class.blink::MemberBase.1126" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1127" = type { %"class.blink::MemberBase.1128" }
%"class.blink::MemberBase.1128" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1129" = type { %"class.blink::MemberBase.1130" }
%"class.blink::MemberBase.1130" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1131" = type { %"class.blink::MemberBase.1132" }
%"class.blink::MemberBase.1132" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1133" = type { %"class.blink::MemberBase.1134" }
%"class.blink::MemberBase.1134" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1135" = type { %"class.std::__1::__compressed_pair.1136" }
%"class.std::__1::__compressed_pair.1136" = type { %"struct.std::__1::__compressed_pair_elem.1137" }
%"struct.std::__1::__compressed_pair_elem.1137" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1141" = type { %"class.std::__1::__compressed_pair.1142" }
%"class.std::__1::__compressed_pair.1142" = type { %"struct.std::__1::__compressed_pair_elem.1143" }
%"struct.std::__1::__compressed_pair_elem.1143" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1147" = type { %"class.blink::MemberBase.1148" }
%"class.blink::MemberBase.1148" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1149" = type { %"class.blink::MemberBase.1150" }
%"class.blink::MemberBase.1150" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1151" = type { %"class.blink::MemberBase.1152" }
%"class.blink::MemberBase.1152" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::HeapHashMap.1155" = type { %"class.WTF::HashMap.1158" }
%"class.WTF::HashMap.1158" = type { %"class.WTF::HashTable.1159" }
%"class.WTF::HashTable.1159" = type <{ %"struct.WTF::KeyValuePair.1161"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1161" = type opaque
%"class.blink::Member.1162" = type { %"class.blink::MemberBase.1163" }
%"class.blink::MemberBase.1163" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1164" = type { %"class.std::__1::__compressed_pair.1165" }
%"class.std::__1::__compressed_pair.1165" = type { %"struct.std::__1::__compressed_pair_elem.1166" }
%"struct.std::__1::__compressed_pair_elem.1166" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1170" = type { %"class.blink::MemberBase.1171" }
%"class.blink::MemberBase.1171" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1173" }
%"class.blink::MemberBase.1173" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1174" = type { %"class.WTF::HashMap.1177" }
%"class.WTF::HashMap.1177" = type { %"class.WTF::HashTable.1178" }
%"class.WTF::HashTable.1178" = type <{ %"struct.WTF::KeyValuePair.1180"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1180" = type opaque
%"class.blink::HeapObserverSet.1181" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1182" }
%"class.blink::HeapHashSet.1182" = type { %"class.WTF::HashSet.1185" }
%"class.WTF::HashSet.1185" = type { %"class.WTF::HashTable.1186" }
%"class.WTF::HashTable.1186" = type <{ %"class.blink::WeakMember.1188"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1188" = type opaque
%"class.blink::Member.1189" = type { %"class.blink::MemberBase.1190" }
%"class.blink::MemberBase.1190" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1191" = type { %"class.blink::MemberBase.1192" }
%"class.blink::MemberBase.1192" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.562", %"class.blink::HeapHashSet.1198", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1205", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1198" = type { %"class.WTF::HashSet.1201" }
%"class.WTF::HashSet.1201" = type { %"class.WTF::HashTable.1202" }
%"class.WTF::HashTable.1202" = type <{ %"class.blink::Member.1204"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1204" = type opaque
%"class.blink::HeapTaskRunnerTimer.1205" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1206", { i64, i64 } }
%"class.blink::WeakMember.1206" = type { %"class.blink::MemberBase.1192" }
%"class.blink::WeakMember.1193" = type { %"class.blink::MemberBase.553" }
%"class.blink::Member.1194" = type { %"class.blink::MemberBase.1195" }
%"class.blink::MemberBase.1195" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.799" = type { %"class.blink::MemberBase.800" }
%"class.blink::MemberBase.800" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.801" = type { %"class.blink::MemberBase.802" }
%"class.blink::MemberBase.802" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.803" = type { %"class.blink::MemberBase.804" }
%"class.blink::MemberBase.804" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.805" = type { %"class.blink::MemberBase.806" }
%"class.blink::MemberBase.806" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.807" = type { %"class.blink::MemberBase.808" }
%"class.blink::MemberBase.808" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.809" = type { %"class.blink::MemberBase.810" }
%"class.blink::MemberBase.810" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.811" = type { %"class.blink::MemberBase.812" }
%"class.blink::MemberBase.812" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.813" = type { %"class.blink::MemberBase.814" }
%"class.blink::MemberBase.814" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.817" = type { %"class.blink::MemberBase.818" }
%"class.blink::MemberBase.818" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.819" = type { %"class.blink::MemberBase.820" }
%"class.blink::MemberBase.820" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.821 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.823", i64, %"class.WTF::Vector.827", %"class.WTF::Vector.832", %"class.WTF::Vector.838", %"class.WTF::Vector.856", %class.scoped_refptr.75, %"class.WTF::HashMap.862", %"class.WTF::Vector.867", %"class.WTF::Vector.827", %"class.WTF::Vector.873", %"class.WTF::HashMap.878", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.822" }
%"class.base::RefCountedThreadSafe.822" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.823" = type { %"class.std::__1::__compressed_pair.824" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { i8* }
%"class.WTF::Vector.832" = type { %"class.WTF::VectorBuffer.833" }
%"class.WTF::VectorBuffer.833" = type { %"class.WTF::VectorBufferBase.834", [8 x i8] }
%"class.WTF::VectorBufferBase.834" = type { %class.scoped_refptr.835*, i32, i32 }
%class.scoped_refptr.835 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.838" = type { %"class.WTF::VectorBuffer.839" }
%"class.WTF::VectorBuffer.839" = type { %"class.WTF::VectorBufferBase.840" }
%"class.WTF::VectorBufferBase.840" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.842", %"class.std::__1::unique_ptr.848" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.841 }
%class.scoped_refptr.841 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.842" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.848" = type { %"class.std::__1::__compressed_pair.849" }
%"class.std::__1::__compressed_pair.849" = type { %"struct.std::__1::__compressed_pair_elem.850" }
%"struct.std::__1::__compressed_pair_elem.850" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.856" = type { %"class.WTF::VectorBuffer.857" }
%"class.WTF::VectorBuffer.857" = type { %"class.WTF::VectorBufferBase.858" }
%"class.WTF::VectorBufferBase.858" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.859", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.859" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.WTF::HashMap.862" = type { %"class.WTF::HashTable.863" }
%"class.WTF::HashTable.863" = type <{ %"struct.WTF::KeyValuePair.866"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.866" = type opaque
%"class.WTF::Vector.867" = type { %"class.WTF::VectorBuffer.868" }
%"class.WTF::VectorBuffer.868" = type { %"class.WTF::VectorBufferBase.869" }
%"class.WTF::VectorBufferBase.869" = type { %"class.mojo::ScopedHandleBase.870"*, i32, i32 }
%"class.mojo::ScopedHandleBase.870" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.827" = type { %"class.WTF::VectorBuffer.828" }
%"class.WTF::VectorBuffer.828" = type { %"class.WTF::VectorBufferBase.829", [16 x i8] }
%"class.WTF::VectorBufferBase.829" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.WTF::Vector.873" = type { %"class.WTF::VectorBuffer.874" }
%"class.WTF::VectorBuffer.874" = type { %"class.WTF::VectorBufferBase.875" }
%"class.WTF::VectorBufferBase.875" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::HashMap.878" = type { %"class.WTF::HashTable.879" }
%"class.WTF::HashTable.879" = type <{ %"struct.WTF::KeyValuePair.882"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.882" = type { i8**, %"class.std::__1::unique_ptr.1986" }
%"class.std::__1::unique_ptr.1986" = type { %"class.std::__1::__compressed_pair.1987" }
%"class.std::__1::__compressed_pair.1987" = type { %"struct.std::__1::__compressed_pair_elem.1988" }
%"struct.std::__1::__compressed_pair_elem.1988" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.883" = type { %"class.WTF::HashSet.886" }
%"class.WTF::HashSet.886" = type { %"class.WTF::HashTable.887" }
%"class.WTF::HashTable.887" = type <{ %"class.blink::WeakMember.889"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.889" = type opaque
%"class.blink::Member.890" = type { %"class.blink::MemberBase.891" }
%"class.blink::MemberBase.891" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.897", %"class.blink::Member.897", %"class.blink::Member.899", %"class.blink::Member.901", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.892" }
%"class.absl::optional.892" = type { %"class.absl::optional_internal::optional_data.893" }
%"class.absl::optional_internal::optional_data.893" = type { %"class.absl::optional_internal::optional_data_base.894" }
%"class.absl::optional_internal::optional_data_base.894" = type { %"class.absl::optional_internal::optional_data_dtor_base.895" }
%"class.absl::optional_internal::optional_data_dtor_base.895" = type { i8, %union.anon.896 }
%union.anon.896 = type { i64 }
%"class.blink::Member.897" = type { %"class.blink::MemberBase.898" }
%"class.blink::MemberBase.898" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.899" = type { %"class.blink::MemberBase.900" }
%"class.blink::MemberBase.900" = type { %"class.blink::Event"* }
%"class.blink::Member.901" = type { %"class.blink::MemberBase.902" }
%"class.blink::MemberBase.902" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.903" = type { %"class.WTF::HashMap.906" }
%"class.WTF::HashMap.906" = type { %"class.WTF::HashTable.907" }
%"class.WTF::HashTable.907" = type <{ %"struct.WTF::KeyValuePair.909"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.909" = type opaque
%"class.std::__1::unique_ptr.910" = type { %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.922" = type { %"class.blink::MemberBase.923" }
%"class.blink::MemberBase.923" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.926", %"class.blink::CachedTextInputInfo", %"class.blink::Member.937", %"class.blink::Member.939", i8, i32 }
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.928", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.930", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.928" = type { %"class.blink::MemberBase.929" }
%"class.blink::MemberBase.929" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.930" = type { %"class.WTF::HashMap.933" }
%"class.WTF::HashMap.933" = type { %"class.WTF::HashTable.934" }
%"class.WTF::HashTable.934" = type <{ %"struct.WTF::KeyValuePair.936"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.936" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.552", i32, i32 }
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.941" = type { %"class.blink::MemberBase.942" }
%"class.blink::MemberBase.942" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.674", %"class.blink::Member.1517", %"class.blink::Member.1519" }
%"class.blink::Member.1517" = type { %"class.blink::MemberBase.1518" }
%"class.blink::MemberBase.1518" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1519" = type { %"class.blink::MemberBase.1520" }
%"class.blink::MemberBase.1520" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.943" = type { %"class.blink::MemberBase.944" }
%"class.blink::MemberBase.944" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.674", %"class.blink::HeapMojoRemote.1512" }
%"class.blink::HeapMojoRemote.1512" = type { %"class.blink::Member.1513" }
%"class.blink::Member.1513" = type { %"class.blink::MemberBase.1514" }
%"class.blink::MemberBase.1514" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.945" = type { %"class.blink::MemberBase.946" }
%"class.blink::MemberBase.946" = type { %"class.blink::HeapHashMap.947"* }
%"class.blink::HeapHashMap.947" = type opaque
%"class.WTF::Vector.948" = type { %"class.WTF::VectorBuffer.949" }
%"class.WTF::VectorBuffer.949" = type { %"class.WTF::VectorBufferBase.950" }
%"class.WTF::VectorBufferBase.950" = type { i8*, i32, i32 }
%"class.util::TokenType.687" = type { %"class.base::StrongAlias.688" }
%"class.base::StrongAlias.688" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.953" = type { %"class.WTF::HashTable.954" }
%"class.WTF::HashTable.954" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.957" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.960" }
%"class.WTF::VectorBuffer.960" = type { %"class.WTF::VectorBufferBase.961" }
%"class.WTF::VectorBufferBase.961" = type { i64*, i32, i32 }
%"class.blink::WindowPerformance" = type { %"class.blink::Performance", %"class.blink::PerformanceMonitor::Client", %"class.blink::ExecutionContextClient", %"class.blink::PageVisibilityObserver", i64, i64, i16, %"class.blink::HeapDeque.2109", %"class.WTF::Deque.2116", %"class.blink::Member.2086", %"class.blink::Member.2121", %"class.blink::Member.2128", %"class.blink::Member.2130", %"class.absl::optional.198", %"class.absl::optional.198", %"class.absl::optional.198" }
%"class.blink::Performance" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::HeapVector.2071", %"class.blink::HeapDeque", i32, i8, %"class.blink::HeapVector.2071", i32, %"class.blink::HeapVector.2071", i32, %"class.blink::HeapVector.2071", %"class.blink::HeapVector.2071", %"class.blink::HeapVector.2071", %"class.blink::HeapVector.2071", %"class.blink::Member.2077", %"class.blink::Member.2084", %"class.blink::Member.2077", %"class.blink::Member.2077", %"class.blink::Member.2086", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"*, i8, i32, %"class.blink::HeapLinkedHashSet.2088", %"class.blink::HeapLinkedHashSet.2088", %"class.blink::HeapLinkedHashSet.2088", %class.scoped_refptr.993, %"class.blink::HeapTaskRunnerTimer.2102", %"class.blink::HeapTaskRunnerTimer.2102", %"class.blink::Member.2105" }
%"class.blink::HeapDeque" = type { %"class.WTF::Deque.2082" }
%"class.WTF::Deque.2082" = type { %"class.WTF::Deque<blink::Member<blink::PerformanceEntry>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::PerformanceEntry>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2075" }
%"class.WTF::VectorBuffer.2075" = type { %"class.WTF::VectorBufferBase.2076" }
%"class.WTF::VectorBufferBase.2076" = type { %"class.blink::Member.2077"*, i32, i32 }
%"class.blink::HeapVector.2071" = type { %"class.WTF::Vector.2074" }
%"class.WTF::Vector.2074" = type { %"class.WTF::VectorBuffer.2075" }
%"class.blink::Member.2084" = type { %"class.blink::MemberBase.2085" }
%"class.blink::MemberBase.2085" = type { %"class.blink::UserTiming"* }
%"class.blink::UserTiming" = type opaque
%"class.blink::Member.2077" = type { %"class.blink::MemberBase.2078" }
%"class.blink::MemberBase.2078" = type { %"class.blink::PerformanceEntry"* }
%"class.blink::PerformanceEntry" = type <{ %"class.blink::ScriptWrappable", double, %"class.WTF::AtomicString", double, i32, [4 x i8] }>
%"class.blink::HeapLinkedHashSet.2088" = type { %"class.WTF::LinkedHashSet.2091" }
%"class.WTF::LinkedHashSet.2091" = type { %"class.WTF::HashMap.2092", %"class.WTF::VectorBackedLinkedList.2096" }
%"class.WTF::HashMap.2092" = type { %"class.WTF::HashTable.2093" }
%"class.WTF::HashTable.2093" = type <{ %"struct.WTF::KeyValuePair.2095"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2095" = type opaque
%"class.WTF::VectorBackedLinkedList.2096" = type { %"class.WTF::Vector.2097", i32, i32 }
%"class.WTF::Vector.2097" = type { %"class.WTF::VectorBuffer.2098" }
%"class.WTF::VectorBuffer.2098" = type { %"class.WTF::VectorBufferBase.2099" }
%"class.WTF::VectorBufferBase.2099" = type { %"class.WTF::VectorBackedLinkedListNode.2100"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2100" = type opaque
%"class.blink::HeapTaskRunnerTimer.2102" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2103", { i64, i64 } }
%"class.blink::WeakMember.2103" = type { %"class.blink::MemberBase.2104" }
%"class.blink::MemberBase.2104" = type { %"class.blink::Performance"* }
%"class.blink::Member.2105" = type { %"class.blink::MemberBase.2106" }
%"class.blink::MemberBase.2106" = type { %"class.blink::BackgroundTracingHelper"* }
%"class.blink::BackgroundTracingHelper" = type opaque
%"class.blink::PerformanceMonitor::Client" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2107" }
%"class.blink::WeakMember.2107" = type { %"class.blink::MemberBase.112" }
%"class.blink::PageVisibilityObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2108" }
%"class.blink::WeakMember.2108" = type { %"class.blink::MemberBase.1524" }
%"class.blink::HeapDeque.2109" = type { %"class.WTF::Deque.2112" }
%"class.WTF::Deque.2112" = type { %"class.WTF::Deque<blink::Member<blink::PerformanceEventTiming>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::PerformanceEventTiming>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2114" }
%"class.WTF::VectorBuffer.2114" = type { %"class.WTF::VectorBufferBase.2115" }
%"class.WTF::VectorBufferBase.2115" = type { %"class.blink::Member.2086"*, i32, i32 }
%"class.WTF::Deque.2116" = type { %"class.WTF::Deque<unsigned long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<unsigned long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2119" }
%"class.WTF::VectorBuffer.2119" = type { %"class.WTF::VectorBufferBase.2120" }
%"class.WTF::VectorBufferBase.2120" = type { i64*, i32, i32 }
%"class.blink::Member.2086" = type { %"class.blink::MemberBase.2087" }
%"class.blink::MemberBase.2087" = type { %"class.blink::PerformanceEventTiming"* }
%"class.blink::PerformanceEventTiming" = type opaque
%"class.blink::Member.2121" = type { %"class.blink::MemberBase.2122" }
%"class.blink::MemberBase.2122" = type { %"class.blink::EventCounts"* }
%"class.blink::EventCounts" = type { %"class.blink::ScriptWrappable", %"class.blink::Maplike", %"class.WTF::HashMap.2123" }
%"class.blink::Maplike" = type { %"class.blink::PairIterable" }
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.WTF::HashMap.2123" = type { %"class.WTF::HashTable.2124" }
%"class.WTF::HashTable.2124" = type <{ %"struct.WTF::KeyValuePair.2127"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2127" = type opaque
%"class.blink::Member.2128" = type { %"class.blink::MemberBase.2129" }
%"class.blink::MemberBase.2129" = type { %"class.blink::PerformanceNavigation"* }
%"class.blink::PerformanceNavigation" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::Member.2130" = type { %"class.blink::MemberBase.2131" }
%"class.blink::MemberBase.2131" = type { %"class.blink::PerformanceTiming"* }
%"class.blink::PerformanceTiming" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient", i8, [7 x i8] }>
%"class.blink::WorkerGlobalScope" = type { %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::ActiveScriptWrappable.2172", %"class.blink::Supplementable.2173", %"class.blink::KURL", i32, %"class.WTF::String", %"struct.blink::UserAgentMetadata", %"class.std::__1::unique_ptr.2188", %"class.blink::Member.2206", %"class.blink::Member.2208", %"class.blink::Member.2223", %"class.blink::WorkerThread"*, i8, %"class.base::TimeTicks", %"class.blink::HeapHashMap.2225", i32, %"class.blink::Member.2232", %"class.std::__1::unique_ptr.1141", %"class.blink::BrowserInterfaceBrokerProxy", i32, %"class.blink::Member.2253", %"class.absl::optional.2257", i32, %"class.std::__1::unique_ptr.1135", %"class.std::__1::unique_ptr.2263", i64 }
%"class.blink::WorkerOrWorkletGlobalScope" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContext.base", i8, %"class.WTF::String", %"class.base::UnguessableToken", %"class.blink::CrossThreadPersistent", %"class.std::__1::unique_ptr.2152", %"class.blink::Member.962", %"class.blink::HeapHashSet.2158", %class.scoped_refptr.2164, %"class.blink::Member.2166", %"class.blink::Member.2168", i32, %"class.WTF::Vector.145", %"class.blink::WorkerReportingProxy"*, %"class.std::__1::bitset", %"class.blink::Deprecation", %"class.blink::Member.813" }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase.2132" }
%"class.blink::PersistentBase.2132" = type { %"class.blink::WorkerClients"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerClients" = type { %"class.blink::Supplementable.2135" }
%"class.blink::Supplementable.2135" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2136" }
%"class.blink::HeapHashMap.2136" = type { %"class.WTF::HashMap.2139" }
%"class.WTF::HashMap.2139" = type { %"class.WTF::HashTable.2140" }
%"class.WTF::HashTable.2140" = type <{ %"struct.WTF::KeyValuePair.2142"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2142" = type { i8*, %"class.blink::Member.2143" }
%"class.blink::Member.2143" = type { %"class.blink::MemberBase.2144" }
%"class.blink::MemberBase.2144" = type { %"class.blink::Supplement.2145"* }
%"class.blink::Supplement.2145" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2146" }
%"class.blink::Member.2146" = type { %"class.blink::MemberBase.2147" }
%"class.blink::MemberBase.2147" = type { %"class.blink::WorkerClients"* }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.2148" }
%"struct.std::__1::atomic.2148" = type { %"struct.std::__1::__atomic_base.2149" }
%"struct.std::__1::__atomic_base.2149" = type { %"struct.std::__1::__cxx_atomic_impl.2150" }
%"struct.std::__1::__cxx_atomic_impl.2150" = type { %"struct.std::__1::__cxx_atomic_base_impl.2151" }
%"struct.std::__1::__cxx_atomic_base_impl.2151" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.2152" = type { %"class.std::__1::__compressed_pair.2153" }
%"class.std::__1::__compressed_pair.2153" = type { %"struct.std::__1::__compressed_pair_elem.2154" }
%"struct.std::__1::__compressed_pair_elem.2154" = type { %"class.blink::WebContentSettingsClient"* }
%"class.blink::WebContentSettingsClient" = type { i32 (...)** }
%"class.blink::HeapHashSet.2158" = type { %"class.WTF::HashSet.2161" }
%"class.WTF::HashSet.2161" = type { %"class.WTF::HashTable.2162" }
%"class.WTF::HashTable.2162" = type <{ %"class.blink::WeakMember.1474"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2164 = type { %"class.blink::WebWorkerFetchContext"* }
%"class.blink::WebWorkerFetchContext" = type <{ i32 (...)**, %"class.base::RefCounted.2165", [4 x i8] }>
%"class.base::RefCounted.2165" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.2166" = type { %"class.blink::MemberBase.2167" }
%"class.blink::MemberBase.2167" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"class.blink::Member.2168" = type { %"class.blink::MemberBase.2169" }
%"class.blink::MemberBase.2169" = type { %"class.blink::WorkerOrWorkletScriptController"* }
%"class.blink::WorkerOrWorkletScriptController" = type opaque
%"class.blink::WorkerReportingProxy" = type opaque
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.2170", i32, [4 x i8] }>
%"class.std::__1::bitset.2170" = type { %"class.std::__1::__bitset.2171" }
%"class.std::__1::__bitset.2171" = type { [25 x i64] }
%"class.blink::ActiveScriptWrappable.2172" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Supplementable.2173" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2174" }
%"class.blink::HeapHashMap.2174" = type { %"class.WTF::HashMap.2177" }
%"class.WTF::HashMap.2177" = type { %"class.WTF::HashTable.2178" }
%"class.WTF::HashTable.2178" = type <{ %"struct.WTF::KeyValuePair.2180"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2180" = type opaque
%"struct.blink::UserAgentMetadata" = type <{ %"class.std::__1::vector.2181", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::vector.2181" = type { %"class.std::__1::__vector_base.2182" }
%"class.std::__1::__vector_base.2182" = type { %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"*, %"class.std::__1::__compressed_pair.2183" }
%"struct.blink::UserAgentBrandVersion" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2183" = type { %"struct.std::__1::__compressed_pair_elem.2184" }
%"struct.std::__1::__compressed_pair_elem.2184" = type { %"struct.blink::UserAgentBrandVersion"* }
%"class.std::__1::unique_ptr.2188" = type { %"class.std::__1::__compressed_pair.2189" }
%"class.std::__1::__compressed_pair.2189" = type { %"struct.std::__1::__compressed_pair_elem.2190" }
%"struct.std::__1::__compressed_pair_elem.2190" = type { %"class.blink::WorkerSettings"* }
%"class.blink::WorkerSettings" = type { i8, i8, i8, i8, %"class.blink::GenericFontFamilySettings" }
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.2191", %"class.WTF::HashMap.2191", %"class.WTF::HashMap.2191", %"class.WTF::HashMap.2191", %"class.WTF::HashMap.2191", %"class.WTF::HashMap.2191", %"class.WTF::HashMap.2191", %"class.std::__1::unique_ptr.2196" }
%"class.WTF::HashMap.2191" = type { %"class.WTF::HashTable.2192" }
%"class.WTF::HashTable.2192" = type <{ %"struct.WTF::KeyValuePair.2195"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2195" = type opaque
%"class.std::__1::unique_ptr.2196" = type { %"class.std::__1::__compressed_pair.2197" }
%"class.std::__1::__compressed_pair.2197" = type { %"struct.std::__1::__compressed_pair_elem.2198" }
%"struct.std::__1::__compressed_pair_elem.2198" = type { %"class.WTF::Vector.2199"* }
%"class.WTF::Vector.2199" = type opaque
%"class.blink::Member.2206" = type { %"class.blink::MemberBase.2207" }
%"class.blink::MemberBase.2207" = type { %"class.blink::WorkerLocation"* }
%"class.blink::WorkerLocation" = type opaque
%"class.blink::Member.2208" = type { %"class.blink::MemberBase.2209" }
%"class.blink::MemberBase.2209" = type { %"class.blink::WorkerNavigator"* }
%"class.blink::WorkerNavigator" = type { %"class.blink::NavigatorBase", %"class.blink::AcceptLanguagesWatcher" }
%"class.blink::NavigatorBase" = type { %"class.blink::ScriptWrappable", %"class.blink::NavigatorID", %"class.blink::NavigatorLanguage.base", %"class.blink::NavigatorUA", %"class.blink::ExecutionContextClient", %"class.blink::Supplementable.2210" }
%"class.blink::NavigatorID" = type { i32 (...)** }
%"class.blink::NavigatorLanguage.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2107", %"class.WTF::Vector.169", i8 }>
%"class.blink::NavigatorUA" = type { i32 (...)** }
%"class.blink::Supplementable.2210" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2211" }
%"class.blink::HeapHashMap.2211" = type { %"class.WTF::HashMap.2214" }
%"class.WTF::HashMap.2214" = type { %"class.WTF::HashTable.2215" }
%"class.WTF::HashTable.2215" = type <{ %"struct.WTF::KeyValuePair.2217"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2217" = type { i8*, %"class.blink::Member.2218" }
%"class.blink::Member.2218" = type { %"class.blink::MemberBase.2219" }
%"class.blink::MemberBase.2219" = type { %"class.blink::Supplement.2220"* }
%"class.blink::Supplement.2220" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2221" }
%"class.blink::Member.2221" = type { %"class.blink::MemberBase.2222" }
%"class.blink::MemberBase.2222" = type { %"class.blink::NavigatorBase"* }
%"class.blink::AcceptLanguagesWatcher" = type { i32 (...)** }
%"class.blink::Member.2223" = type { %"class.blink::MemberBase.2224" }
%"class.blink::MemberBase.2224" = type { %"class.blink::TrustedTypePolicyFactory"* }
%"class.blink::TrustedTypePolicyFactory" = type opaque
%"class.blink::WorkerThread" = type opaque
%"class.blink::HeapHashMap.2225" = type { %"class.WTF::HashMap.2228" }
%"class.WTF::HashMap.2228" = type { %"class.WTF::HashTable.2229" }
%"class.WTF::HashTable.2229" = type <{ %"struct.WTF::KeyValuePair.2231"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2231" = type opaque
%"class.blink::Member.2232" = type { %"class.blink::MemberBase.2233" }
%"class.blink::MemberBase.2233" = type { %"class.blink::OffscreenFontSelector"* }
%"class.blink::OffscreenFontSelector" = type opaque
%"class.blink::BrowserInterfaceBrokerProxy" = type { %"class.mojo::Remote.2234", %"class.std::__1::map.2242" }
%"class.mojo::Remote.2234" = type { %"class.mojo::internal::InterfacePtrState.2235" }
%"class.mojo::internal::InterfacePtrState.2235" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2236" }
%"class.std::__1::unique_ptr.2236" = type { %"class.std::__1::__compressed_pair.2237" }
%"class.std::__1::__compressed_pair.2237" = type { %"struct.std::__1::__compressed_pair_elem.2238" }
%"struct.std::__1::__compressed_pair_elem.2238" = type { %"class.blink::mojom::BrowserInterfaceBrokerProxy"* }
%"class.blink::mojom::BrowserInterfaceBrokerProxy" = type { %"class.blink::mojom::BrowserInterfaceBroker", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::BrowserInterfaceBroker" = type { i32 (...)** }
%"class.std::__1::map.2242" = type { %"class.std::__1::__tree.2243" }
%"class.std::__1::__tree.2243" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2244", %"class.std::__1::__compressed_pair.2248" }
%"class.std::__1::__compressed_pair.2244" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.2248" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.blink::Member.2253" = type { %"class.blink::MemberBase.2254" }
%"class.blink::MemberBase.2254" = type { %"class.blink::Script"* }
%"class.blink::Script" = type { i32 (...)**, %"class.blink::ScriptFetchOptions", %"class.blink::KURL" }
%"class.blink::ScriptFetchOptions" = type <{ %"class.WTF::String", %"class.WTF::HashSet.1422", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, i8, %"class.base::StrongAlias.1421", [6 x i8] }>
%"class.absl::optional.2257" = type { %"class.absl::optional_internal::optional_data.2258" }
%"class.absl::optional_internal::optional_data.2258" = type { %"class.absl::optional_internal::optional_data_base.2259" }
%"class.absl::optional_internal::optional_data_base.2259" = type { %"class.absl::optional_internal::optional_data_dtor_base.2260" }
%"class.absl::optional_internal::optional_data_dtor_base.2260" = type { i8, [7 x i8], %union.anon.2261 }
%union.anon.2261 = type { %"struct.v8_inspector::V8StackTraceId" }
%"struct.v8_inspector::V8StackTraceId" = type <{ i64, %"struct.std::__1::pair.2262", i8, [7 x i8] }>
%"struct.std::__1::pair.2262" = type { i64, i64 }
%"class.std::__1::unique_ptr.2263" = type { %"class.std::__1::__compressed_pair.2264" }
%"class.std::__1::__compressed_pair.2264" = type { %"struct.std::__1::__compressed_pair_elem.2265" }
%"struct.std::__1::__compressed_pair_elem.2265" = type { %"struct.blink::WorkerMainScriptLoadParameters"* }
%"struct.blink::WorkerMainScriptLoadParameters" = type { i32, %"class.mojo::StructPtr.2266", %"class.mojo::ScopedHandleBase.2460", %"class.mojo::StructPtr.2461", %"class.std::__1::vector.2469", %"class.std::__1::vector.2476" }
%"class.mojo::StructPtr.2266" = type { %"class.std::__1::unique_ptr.2267" }
%"class.std::__1::unique_ptr.2267" = type { %"class.std::__1::__compressed_pair.2268" }
%"class.std::__1::__compressed_pair.2268" = type { %"struct.std::__1::__compressed_pair_elem.2269" }
%"struct.std::__1::__compressed_pair_elem.2269" = type { %"class.network::mojom::URLResponseHead"* }
%"class.network::mojom::URLResponseHead" = type <{ %"class.base::Time", %"class.base::Time", %class.scoped_refptr.2270, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], i64, i64, i64, i8, [7 x i8], i64, %class.GURL, %"struct.net::LoadTimingInfo", %"class.mojo::StructPtr.2285", i8, i8, i8, i8, i32, %"class.std::__1::basic_string", %"class.net::IPEndPoint", i8, i8, [2 x i8], %"class.net::ProxyServer", i8, [3 x i8], i32, %"class.std::__1::vector.2301", i32, [4 x i8], i64, %"class.std::__1::basic_string", i32, [4 x i8], %"class.absl::optional.2307", %"class.std::__1::vector.2314", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8], %"class.absl::optional.1401", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.mojo::StructPtr.2349", %"class.absl::optional.2446", %"class.absl::optional.1361", %"class.std::__1::vector.2314", %class.GURL, i8, [7 x i8] }>
%class.scoped_refptr.2270 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.2271", %"class.std::__1::vector.2272", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.2271" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.2272" = type { %"class.std::__1::__vector_base.2273" }
%"class.std::__1::__vector_base.2273" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.2274" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.2274" = type { %"struct.std::__1::__compressed_pair_elem.2275" }
%"struct.std::__1::__compressed_pair_elem.2275" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.mojo::StructPtr.2285" = type { %"class.std::__1::unique_ptr.2286" }
%"class.std::__1::unique_ptr.2286" = type { %"class.std::__1::__compressed_pair.2287" }
%"class.std::__1::__compressed_pair.2287" = type { %"struct.std::__1::__compressed_pair_elem.2288" }
%"struct.std::__1::__compressed_pair_elem.2288" = type { %"class.network::mojom::HttpRawRequestResponseInfo"* }
%"class.network::mojom::HttpRawRequestResponseInfo" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.2289", %"class.std::__1::vector.2289", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector.2289" = type { %"class.std::__1::__vector_base.2290" }
%"class.std::__1::__vector_base.2290" = type { %"class.mojo::InlinedStructPtr.2291"*, %"class.mojo::InlinedStructPtr.2291"*, %"class.std::__1::__compressed_pair.2293" }
%"class.mojo::InlinedStructPtr.2291" = type <{ %"class.network::mojom::HttpRawHeaderPair", i32, [4 x i8] }>
%"class.network::mojom::HttpRawHeaderPair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2293" = type { %"struct.std::__1::__compressed_pair_elem.2294" }
%"struct.std::__1::__compressed_pair_elem.2294" = type { %"class.mojo::InlinedStructPtr.2291"* }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::vector.2301" = type { %"class.std::__1::__vector_base.2302" }
%"class.std::__1::__vector_base.2302" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.2303" }
%"class.std::__1::__compressed_pair.2303" = type { %"struct.std::__1::__compressed_pair_elem.2281" }
%"struct.std::__1::__compressed_pair_elem.2281" = type { %class.GURL* }
%"class.absl::optional.2307" = type { %"class.absl::optional_internal::optional_data.2308" }
%"class.absl::optional_internal::optional_data.2308" = type { %"class.absl::optional_internal::optional_data_base.2309" }
%"class.absl::optional_internal::optional_data_base.2309" = type { %"class.absl::optional_internal::optional_data_dtor_base.2310" }
%"class.absl::optional_internal::optional_data_dtor_base.2310" = type { i8, [7 x i8], %union.anon.2311 }
%union.anon.2311 = type { %"class.net::SSLInfo" }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.2312, %class.scoped_refptr.2312, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.2332", %"class.std::__1::basic_string", %"class.std::__1::vector.2340", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.2312 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.2313", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.2321", %"class.std::__1::vector.2325" }
%"class.base::RefCountedThreadSafe.2313" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.2314", %"class.std::__1::vector.2314", %"class.std::__1::vector.2314", %"class.std::__1::vector.2314" }
%"class.std::__1::unique_ptr.2321" = type { %"class.std::__1::__compressed_pair.2322" }
%"class.std::__1::__compressed_pair.2322" = type { %"struct.std::__1::__compressed_pair_elem.2323" }
%"struct.std::__1::__compressed_pair_elem.2323" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.2325" = type { %"class.std::__1::__vector_base.2326" }
%"class.std::__1::__vector_base.2326" = type { %"class.std::__1::unique_ptr.2321"*, %"class.std::__1::unique_ptr.2321"*, %"class.std::__1::__compressed_pair.2327" }
%"class.std::__1::__compressed_pair.2327" = type { %"struct.std::__1::__compressed_pair_elem.2328" }
%"struct.std::__1::__compressed_pair_elem.2328" = type { %"class.std::__1::unique_ptr.2321"* }
%"class.std::__1::vector.2332" = type { %"class.std::__1::__vector_base.2333" }
%"class.std::__1::__vector_base.2333" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.2335" }
%"class.net::HashValue" = type { i32, %union.anon.2334 }
%union.anon.2334 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.2335" = type { %"struct.std::__1::__compressed_pair_elem.2336" }
%"struct.std::__1::__compressed_pair_elem.2336" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.2340" = type { %"class.std::__1::__vector_base.2341" }
%"class.std::__1::__vector_base.2341" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.2344" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.2342, i32, [4 x i8] }>
%class.scoped_refptr.2342 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.2343", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.2343" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2344" = type { %"struct.std::__1::__compressed_pair_elem.2345" }
%"struct.std::__1::__compressed_pair_elem.2345" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.mojo::StructPtr.2349" = type { %"class.std::__1::unique_ptr.2350" }
%"class.std::__1::unique_ptr.2350" = type { %"class.std::__1::__compressed_pair.2351" }
%"class.std::__1::__compressed_pair.2351" = type { %"struct.std::__1::__compressed_pair_elem.2352" }
%"struct.std::__1::__compressed_pair_elem.2352" = type { %"class.network::mojom::ParsedHeaders"* }
%"class.network::mojom::ParsedHeaders" = type <{ %"class.std::__1::vector.2353", %"class.mojo::StructPtr.2403", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.2410", %"class.base::TimeDelta", %"class.absl::optional.2410", i32, [4 x i8], %"class.std::__1::vector.2422", %"class.mojo::StructPtr.2436", i8, [7 x i8] }>
%"class.std::__1::vector.2353" = type { %"class.std::__1::__vector_base.2354" }
%"class.std::__1::__vector_base.2354" = type { %"class.mojo::StructPtr.2355"*, %"class.mojo::StructPtr.2355"*, %"class.std::__1::__compressed_pair.2398" }
%"class.mojo::StructPtr.2355" = type { %"class.std::__1::unique_ptr.2356" }
%"class.std::__1::unique_ptr.2356" = type { %"class.std::__1::__compressed_pair.2357" }
%"class.std::__1::__compressed_pair.2357" = type { %"struct.std::__1::__compressed_pair_elem.2358" }
%"struct.std::__1::__compressed_pair_elem.2358" = type { %"class.network::mojom::ContentSecurityPolicy"* }
%"class.network::mojom::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.2359", %"class.base::flat_map.2366", %"class.base::flat_map.2376", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.2386", i8, %"class.std::__1::vector.2314", i32, %"class.mojo::StructPtr.2388", %"class.std::__1::vector.2314" }
%"class.mojo::StructPtr.2359" = type { %"class.std::__1::unique_ptr.2360" }
%"class.std::__1::unique_ptr.2360" = type { %"class.std::__1::__compressed_pair.2361" }
%"class.std::__1::__compressed_pair.2361" = type { %"struct.std::__1::__compressed_pair_elem.2362" }
%"struct.std::__1::__compressed_pair_elem.2362" = type { %"class.network::mojom::CSPSource"* }
%"class.network::mojom::CSPSource" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.base::flat_map.2366" = type { %"class.base::internal::flat_tree.2367" }
%"class.base::internal::flat_tree.2367" = type { %"class.std::__1::vector.2368" }
%"class.std::__1::vector.2368" = type { %"class.std::__1::__vector_base.2369" }
%"class.std::__1::__vector_base.2369" = type { %"struct.std::__1::pair.2370"*, %"struct.std::__1::pair.2370"*, %"class.std::__1::__compressed_pair.2371" }
%"struct.std::__1::pair.2370" = type opaque
%"class.std::__1::__compressed_pair.2371" = type { %"struct.std::__1::__compressed_pair_elem.2372" }
%"struct.std::__1::__compressed_pair_elem.2372" = type { %"struct.std::__1::pair.2370"* }
%"class.base::flat_map.2376" = type { %"class.base::internal::flat_tree.2377" }
%"class.base::internal::flat_tree.2377" = type { %"class.std::__1::vector.2378" }
%"class.std::__1::vector.2378" = type { %"class.std::__1::__vector_base.2379" }
%"class.std::__1::__vector_base.2379" = type { %"struct.std::__1::pair.2380"*, %"struct.std::__1::pair.2380"*, %"class.std::__1::__compressed_pair.2381" }
%"struct.std::__1::pair.2380" = type opaque
%"class.std::__1::__compressed_pair.2381" = type { %"struct.std::__1::__compressed_pair_elem.2382" }
%"struct.std::__1::__compressed_pair_elem.2382" = type { %"struct.std::__1::pair.2380"* }
%"class.mojo::InlinedStructPtr.2386" = type <{ %"class.network::mojom::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::ContentSecurityPolicyHeader" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.mojo::StructPtr.2388" = type { %"class.std::__1::unique_ptr.2389" }
%"class.std::__1::unique_ptr.2389" = type { %"class.std::__1::__compressed_pair.2390" }
%"class.std::__1::__compressed_pair.2390" = type { %"struct.std::__1::__compressed_pair_elem.2391" }
%"struct.std::__1::__compressed_pair_elem.2391" = type { %"class.network::mojom::CSPTrustedTypes"* }
%"class.network::mojom::CSPTrustedTypes" = type <{ %"class.std::__1::vector.2314", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.2398" = type { %"struct.std::__1::__compressed_pair_elem.2399" }
%"struct.std::__1::__compressed_pair_elem.2399" = type { %"class.mojo::StructPtr.2355"* }
%"class.mojo::StructPtr.2403" = type { %"class.std::__1::unique_ptr.2404" }
%"class.std::__1::unique_ptr.2404" = type { %"class.std::__1::__compressed_pair.2405" }
%"class.std::__1::__compressed_pair.2405" = type { %"struct.std::__1::__compressed_pair_elem.2406" }
%"struct.std::__1::__compressed_pair_elem.2406" = type { %"class.network::mojom::AllowCSPFromHeaderValue"* }
%"class.network::mojom::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::AllowCSPFromHeaderValue::Union_" = type { %"class.url::Origin"* }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.1541", i32, %"class.absl::optional.1541" }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional.1541", i32, %"class.absl::optional.1541" }
%"class.absl::optional.2410" = type { %"class.absl::optional_internal::optional_data.2411" }
%"class.absl::optional_internal::optional_data.2411" = type { %"class.absl::optional_internal::optional_data_base.2412" }
%"class.absl::optional_internal::optional_data_base.2412" = type { %"class.absl::optional_internal::optional_data_dtor_base.2413" }
%"class.absl::optional_internal::optional_data_dtor_base.2413" = type { i8, %union.anon.2414 }
%union.anon.2414 = type { %"class.std::__1::vector.2415" }
%"class.std::__1::vector.2415" = type { %"class.std::__1::__vector_base.2416" }
%"class.std::__1::__vector_base.2416" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2417" }
%"class.std::__1::__compressed_pair.2417" = type { %"struct.std::__1::__compressed_pair_elem.2418" }
%"struct.std::__1::__compressed_pair_elem.2418" = type { i32* }
%"class.std::__1::vector.2422" = type { %"class.std::__1::__vector_base.2423" }
%"class.std::__1::__vector_base.2423" = type { %"class.mojo::StructPtr.2424"*, %"class.mojo::StructPtr.2424"*, %"class.std::__1::__compressed_pair.2431" }
%"class.mojo::StructPtr.2424" = type { %"class.std::__1::unique_ptr.2425" }
%"class.std::__1::unique_ptr.2425" = type { %"class.std::__1::__compressed_pair.2426" }
%"class.std::__1::__compressed_pair.2426" = type { %"struct.std::__1::__compressed_pair_elem.2427" }
%"struct.std::__1::__compressed_pair_elem.2427" = type { %"class.network::mojom::LinkHeader"* }
%"class.network::mojom::LinkHeader" = type { %class.GURL, i32, i32, i32, %"class.absl::optional.1541" }
%"class.std::__1::__compressed_pair.2431" = type { %"struct.std::__1::__compressed_pair_elem.2432" }
%"struct.std::__1::__compressed_pair_elem.2432" = type { %"class.mojo::StructPtr.2424"* }
%"class.mojo::StructPtr.2436" = type { %"class.std::__1::unique_ptr.2437" }
%"class.std::__1::unique_ptr.2437" = type { %"class.std::__1::__compressed_pair.2438" }
%"class.std::__1::__compressed_pair.2438" = type { %"struct.std::__1::__compressed_pair_elem.2439" }
%"struct.std::__1::__compressed_pair_elem.2439" = type { %"class.network::mojom::TimingAllowOrigin"* }
%"class.network::mojom::TimingAllowOrigin" = type { i32, %"union.network::mojom::TimingAllowOrigin::Union_" }
%"union.network::mojom::TimingAllowOrigin::Union_" = type { %"class.std::__1::vector.2314"* }
%"class.absl::optional.2446" = type { %"class.absl::optional_internal::optional_data.2447" }
%"class.absl::optional_internal::optional_data.2447" = type { %"class.absl::optional_internal::optional_data_base.2448" }
%"class.absl::optional_internal::optional_data_base.2448" = type { %"class.absl::optional_internal::optional_data_dtor_base.2449" }
%"class.absl::optional_internal::optional_data_dtor_base.2449" = type { i8, %union.anon.2450 }
%union.anon.2450 = type { %"struct.network::OriginPolicy" }
%"struct.network::OriginPolicy" = type { i32, %class.GURL, %"class.std::__1::unique_ptr.2451" }
%"class.std::__1::unique_ptr.2451" = type { %"class.std::__1::__compressed_pair.2452" }
%"class.std::__1::__compressed_pair.2452" = type { %"struct.std::__1::__compressed_pair_elem.2453" }
%"struct.std::__1::__compressed_pair_elem.2453" = type { %"struct.network::OriginPolicyContents"* }
%"struct.network::OriginPolicyContents" = type { %"class.std::__1::vector.2314", %"class.absl::optional.1541", %"class.std::__1::vector.2314", %"class.std::__1::vector.2314" }
%"class.std::__1::vector.2314" = type { %"class.std::__1::__vector_base.2315" }
%"class.std::__1::__vector_base.2315" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.2316" }
%"class.std::__1::__compressed_pair.2316" = type { %"struct.std::__1::__compressed_pair_elem.2317" }
%"struct.std::__1::__compressed_pair_elem.2317" = type { %"class.std::__1::basic_string"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.2279" }
%"class.std::__1::unique_ptr.2279" = type { %"class.std::__1::__compressed_pair.2280" }
%"class.std::__1::__compressed_pair.2280" = type { %"struct.std::__1::__compressed_pair_elem.2281" }
%"class.mojo::ScopedHandleBase.2460" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::StructPtr.2461" = type { %"class.std::__1::unique_ptr.2462" }
%"class.std::__1::unique_ptr.2462" = type { %"class.std::__1::__compressed_pair.2463" }
%"class.std::__1::__compressed_pair.2463" = type { %"struct.std::__1::__compressed_pair_elem.2464" }
%"struct.std::__1::__compressed_pair_elem.2464" = type { %"class.network::mojom::URLLoaderClientEndpoints"* }
%"class.network::mojom::URLLoaderClientEndpoints" = type { %"class.mojo::PendingRemote.2465", %"class.mojo::PendingReceiver" }
%"class.mojo::PendingRemote.2465" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.std::__1::vector.2469" = type { %"class.std::__1::__vector_base.2470" }
%"class.std::__1::__vector_base.2470" = type { %"struct.net::RedirectInfo"*, %"struct.net::RedirectInfo"*, %"class.std::__1::__compressed_pair.2471" }
%"struct.net::RedirectInfo" = type { i32, %"class.std::__1::basic_string", %class.GURL, %"class.net::SiteForCookies", %"class.std::__1::basic_string", i8, i8, i32 }
%"class.std::__1::__compressed_pair.2471" = type { %"struct.std::__1::__compressed_pair_elem.2472" }
%"struct.std::__1::__compressed_pair_elem.2472" = type { %"struct.net::RedirectInfo"* }
%"class.std::__1::vector.2476" = type { %"class.std::__1::__vector_base.2477" }
%"class.std::__1::__vector_base.2477" = type { %"class.mojo::StructPtr.2266"*, %"class.mojo::StructPtr.2266"*, %"class.std::__1::__compressed_pair.2478" }
%"class.std::__1::__compressed_pair.2478" = type { %"struct.std::__1::__compressed_pair_elem.2479" }
%"struct.std::__1::__compressed_pair_elem.2479" = type { %"class.mojo::StructPtr.2266"* }
%"class.blink::WorkerPerformance" = type { %"class.blink::Performance", %"class.blink::Member.111" }
%"class.WTF::StringAppend.2489" = type { i8*, %"class.WTF::String" }
%"class.blink::(anonymous namespace)::MessageValidator" = type { i8*, i64, i64 }
%"class.WTF::Vector.295" = type { %"class.WTF::VectorBuffer.296" }
%"class.WTF::VectorBuffer.296" = type { %"class.WTF::VectorBufferBase.297" }
%"class.WTF::VectorBufferBase.297" = type { i32*, i32, i32 }
%"class.WTF::StringAppend.2487" = type { %"class.WTF::StringAppend.2488", %"class.WTF::String" }
%"class.WTF::StringAppend.2488" = type { %"class.WTF::StringAppend.2489", i8* }
%"class.WTF::IntegerToStringConverter" = type <{ [12 x i8], [4 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.2487", i8* }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.506, %"class.blink::Member.507", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.506 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.511", %"class.blink::HeapHashMap.518", %"class.std::__1::unique_ptr.528", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.540", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.543" }
%"class.blink::HeapHashMap.511" = type { %"class.WTF::HashMap.514" }
%"class.WTF::HashMap.514" = type { %"class.WTF::HashTable.515" }
%"class.WTF::HashTable.515" = type <{ %"struct.WTF::KeyValuePair.517"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.517" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"class.blink::HeapHashMap.518" = type { %"class.WTF::HashMap.521" }
%"class.WTF::HashMap.521" = type { %"class.WTF::HashTable.522" }
%"class.WTF::HashTable.522" = type <{ %"struct.WTF::KeyValuePair.524"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.524" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.525" }
%"class.blink::TraceWrapperV8Reference.525" = type { %"class.v8::TracedReference.526" }
%"class.v8::TracedReference.526" = type { %"class.v8::BasicTracedReference.527" }
%"class.v8::BasicTracedReference.527" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.528" = type { %"class.std::__1::__compressed_pair.529" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.530" }
%"struct.std::__1::__compressed_pair_elem.530" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.531" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.531" = type { %"class.std::__1::__compressed_pair.532" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.533" }
%"struct.std::__1::__compressed_pair_elem.533" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.540" = type { %"class.v8::Persistent.541" }
%"class.v8::Persistent.541" = type { %"class.v8::PersistentBase.542" }
%"class.v8::PersistentBase.542" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.543" = type { %"class.WTF::HashMap.546" }
%"class.WTF::HashMap.546" = type { %"class.WTF::HashTable.547" }
%"class.WTF::HashTable.547" = type <{ %"struct.WTF::KeyValuePair.549"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.549" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.550" }
%"class.blink::Persistent.550" = type { %"class.blink::PersistentBase.551" }
%"class.blink::PersistentBase.551" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::EventListener" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.1980", i8, [7 x i8] }>
%"class.blink::Member.1980" = type { %"class.blink::MemberBase.1981" }
%"class.blink::MemberBase.1981" = type { %"class.blink::EventListener"* }
%"class.blink::ExecutionContextLifecycleObserver" = type <{ %"class.blink::ContextLifecycleObserver", i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.2511" = type <{ i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::StringTypeAdapter.2513" = type { %"class.WTF::StringTypeAdapter.2514" }
%"class.WTF::StringTypeAdapter.2514" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::IntegerToStringConverter.2518" = type <{ [6 x i8], [2 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::IntegerToStringConverter.2516" = type <{ [24 x i8], i8*, i32, [4 x i8] }>
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZN5blink8MIDIPortD2Ev = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink10MIDIOutput18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink8MIDIPort13InterfaceNameEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv = comdat any

$_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_8MIDIPortEE18IsContextDestroyedEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_8MIDIPortEE26DispatchHasPendingActivityEv = comdat any

$_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv = comdat any

$_ZN5blink25EventTargetWithInlineDataD2Ev = comdat any

$_ZN5blink25EventTargetWithInlineDataD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink11EventTarget18GetWrapperTypeInfoEv = comdat any

$_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev = comdat any

$_ZN5blink14DOMArrayBuffer6CreateEmm = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink18DOMArrayBufferBaseD2Ev = comdat any

$_ZN5blink18DOMArrayBufferBaseD0Ev = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZN5blink18DOMArrayBufferBase4WrapEPNS_11ScriptStateE = comdat any

$_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink6MemberINS3_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEELj0ENS3_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEEEEmm = comdat any

$_ZN5blink10TraceTraitINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEEN3WTF12VectorTraitsISC_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINSt3__14pairINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEEN3WTF12VectorTraitsISB_EEE14AllocateObjectISF_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEEN3WTF12VectorTraitsISC_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINSt3__14pairINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEEN3WTF12VectorTraitsISC_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink6MemberINS3_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEELj0ENS3_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZTVN5blink25EventTargetWithInlineDataE = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink18DOMArrayBufferBaseE = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEEN3WTF12VectorTraitsISC_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEEN3WTF12VectorTraitsISC_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink10MIDIOutputE = hidden unnamed_addr constant { [31 x i8*], [7 x i8*], [8 x i8*] } { [31 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::MIDIOutput"*)* @_ZN5blink10MIDIOutputD2Ev to i8*), i8* bitcast (void (%"class.blink::MIDIOutput"*)* @_ZN5blink10MIDIOutputD0Ev to i8*), i8* bitcast (i1 (%"class.blink::MIDIPort"*)* @_ZNK5blink8MIDIPort18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::MIDIOutput"*, %"class.blink::Visitor"*)* @_ZNK5blink10MIDIOutput5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::MIDIOutput"*)* @_ZNK5blink10MIDIOutput18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::MIDIPort"*)* @_ZNK5blink8MIDIPort13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::MIDIPort"*)* @_ZNK5blink8MIDIPort19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*), i8* bitcast (void (%"class.blink::MIDIPort"*)* @_ZN5blink8MIDIPort16ContextDestroyedEv to i8*), i8* bitcast (void (%"class.blink::MIDIOutput"*, i1)* @_ZN5blink10MIDIOutput7DidOpenEb to i8*)], [7 x i8*] [i8* inttoptr (i64 -72 to i8*), i8* null, i8* bitcast (void (%"class.blink::MIDIOutput"*, %"class.blink::Visitor"*)* @_ZThn72_NK5blink10MIDIOutput5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::MIDIOutput"*)* @_ZThn72_N5blink10MIDIOutputD1Ev to i8*), i8* bitcast (void (%"class.blink::MIDIOutput"*)* @_ZThn72_N5blink10MIDIOutputD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_8MIDIPortEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_8MIDIPortEE26DispatchHasPendingActivityEv to i8*)], [8 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.blink::MIDIOutput"*, %"class.blink::Visitor"*)* @_ZThn80_NK5blink10MIDIOutput5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::MIDIOutput"*)* @_ZThn80_N5blink10MIDIOutputD1Ev to i8*), i8* bitcast (void (%"class.blink::MIDIOutput"*)* @_ZThn80_N5blink10MIDIOutputD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContextLifecycleObserver"*)* @_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv to i8*), i8* bitcast (void (%"class.blink::MIDIPort"*)* @_ZThn80_N5blink8MIDIPort16ContextDestroyedEv to i8*), i8* bitcast (void (%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::ExecutionContext"*)* @_ZN5blink33ExecutionContextLifecycleObserver19SetExecutionContextEPNS_16ExecutionContextE to i8*)] }, align 8
@_ZTVN5blink8MIDIPortE = external unnamed_addr constant { [31 x i8*], [7 x i8*], [8 x i8*] }, align 8
@_ZTVN5blink25EventTargetWithInlineDataE = linkonce_odr hidden unnamed_addr constant { [29 x i8*] } { [29 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineDataD2Ev to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineDataD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*, %"class.blink::Visitor"*)* @_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [23 x i8] c"blink_gc_plugin_ignore\00", section "llvm.metadata"
@.str.1 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/dom/events/event_target.h\00", section "llvm.metadata"
@_ZN5blink11EventTarget18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.2 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"The value at index \00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.6 = private unnamed_addr constant [24 x i8] c") is greater than 0xFF.\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.8 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink14DOMArrayBufferE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZTVN5blink18DOMArrayBufferBaseE = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::DOMArrayBufferBase"*)* @_ZN5blink18DOMArrayBufferBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::DOMArrayBufferBase"*)* @_ZN5blink18DOMArrayBufferBaseD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)* @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::DOMArrayBufferBase"*, %"class.blink::ScriptState"*)* @_ZN5blink18DOMArrayBufferBase4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, comdat, align 8
@.str.11 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.12 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.13 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.14 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.15 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.16 = private unnamed_addr constant [42 x i8] c"Data exceeds the maximum supported length\00", align 1
@.str.17 = private unnamed_addr constant [31 x i8] c"Running status is not allowed \00", align 1
@.str.18 = private unnamed_addr constant [44 x i8] c"Unexpected end of system exclusive message \00", align 1
@.str.19 = private unnamed_addr constant [32 x i8] c"Reserved status is not allowed \00", align 1
@.str.20 = private unnamed_addr constant [41 x i8] c"System exclusive message is not allowed \00", align 1
@.str.21 = private unnamed_addr constant [74 x i8] c"System exclusive message is not ended by end of system exclusive message.\00", align 1
@.str.22 = private unnamed_addr constant [49 x i8] c"System exclusive message contains a status byte \00", align 1
@.str.23 = private unnamed_addr constant [23 x i8] c"Message is incomplete.\00", align 1
@.str.24 = private unnamed_addr constant [24 x i8] c"Unexpected status byte \00", align 1
@.str.25 = private unnamed_addr constant [10 x i8] c"at index \00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c").\00", align 1
@_ZZN5blink12_GLOBAL__N_116MessageValidator20AcceptCurrentMessageEvE21kChannelMessageLength = internal unnamed_addr constant [7 x i32] [i32 3, i32 3, i32 3, i32 3, i32 2, i32 2, i32 3], align 16
@_ZZN5blink12_GLOBAL__N_116MessageValidator20AcceptCurrentMessageEvE20kSystemMessageLength = internal unnamed_addr constant [7 x i32] [i32 2, i32 3, i32 2, i32 0, i32 0, i32 1, i32 0], align 16
@_ZN5blink10MIDIOutput18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink18event_target_names9kMIDIPortE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.27 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.28 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.29 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.30 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEEN3WTF12VectorTraitsISC_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEEN3WTF12VectorTraitsISC_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINSt3__14pairINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEEN3WTF12VectorTraitsISC_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEEN3WTF12VectorTraitsISC_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.31 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINSt3__14pairINS1_6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEENS_12VectorTraitsISD_EEEEEEPKcv = private unnamed_addr constant [285 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<std::__1::pair<blink::Member<blink::DOMTypedArray<uint8_t, v8::Uint8Array> >, base::TimeTicks>, WTF::VectorTraits<std::__1::pair<blink::Member<blink::DOMTypedArray<uint8_t, v8::Uint8Array> >, base::TimeTicks> > >]\00", align 1
@.str.32 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1

@_ZN5blink10MIDIOutputC1EPNS_10MIDIAccessEjRKN3WTF6StringES6_S6_S6_N4midi5mojom9PortStateE = hidden unnamed_addr alias void (%"class.blink::MIDIOutput"*, %"class.blink::MIDIAccess"*, i32, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32), void (%"class.blink::MIDIOutput"*, %"class.blink::MIDIAccess"*, i32, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32)* @_ZN5blink10MIDIOutputC2EPNS_10MIDIAccessEjRKN3WTF6StringES6_S6_S6_N4midi5mojom9PortStateE
@_ZN5blink10MIDIOutputD1Ev = hidden unnamed_addr alias void (%"class.blink::MIDIOutput"*), void (%"class.blink::MIDIOutput"*)* @_ZN5blink10MIDIOutputD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10MIDIOutputC2EPNS_10MIDIAccessEjRKN3WTF6StringES6_S6_S6_N4midi5mojom9PortStateE(%"class.blink::MIDIOutput"*, %"class.blink::MIDIAccess"*, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %9 = bitcast %"class.blink::MIDIOutput"* %0 to %"class.blink::MIDIPort"*
  tail call void @_ZN5blink8MIDIPortC2EPNS_10MIDIAccessERKN3WTF6StringES6_S6_NS0_8TypeCodeES6_N4midi5mojom9PortStateE(%"class.blink::MIDIPort"* %9, %"class.blink::MIDIAccess"* %1, %"class.WTF::String"* dereferenceable(8) %3, %"class.WTF::String"* dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %5, i32 1, %"class.WTF::String"* dereferenceable(8) %6, i32 %7) #5
  %10 = getelementptr inbounds %"class.blink::MIDIOutput", %"class.blink::MIDIOutput"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [7 x i8*], [8 x i8*] }, { [31 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink10MIDIOutputE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::MIDIOutput", %"class.blink::MIDIOutput"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = bitcast i32 (...)*** %11 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [7 x i8*], [8 x i8*] }, { [31 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink10MIDIOutputE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [7 x i8*], [8 x i8*] }, { [31 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink10MIDIOutputE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %12, align 8
  %13 = getelementptr inbounds %"class.blink::MIDIOutput", %"class.blink::MIDIOutput"* %0, i64 0, i32 1
  store i32 %2, i32* %13, align 4
  %14 = getelementptr inbounds %"class.blink::MIDIOutput", %"class.blink::MIDIOutput"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::HeapVector.48"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #5
  ret void
}

declare void @_ZN5blink8MIDIPortC2EPNS_10MIDIAccessERKN3WTF6StringES6_S6_NS0_8TypeCodeES6_N4midi5mojom9PortStateE(%"class.blink::MIDIPort"*, %"class.blink::MIDIAccess"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i32, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8MIDIPortD2Ev(%"class.blink::MIDIPort"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::MIDIPort", %"class.blink::MIDIPort"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [7 x i8*], [8 x i8*] }, { [31 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink8MIDIPortE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::MIDIPort", %"class.blink::MIDIPort"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = bitcast i32 (...)*** %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [7 x i8*], [8 x i8*] }, { [31 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink8MIDIPortE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [7 x i8*], [8 x i8*] }, { [31 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink8MIDIPortE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.blink::MIDIPort", %"class.blink::MIDIPort"* %0, i64 0, i32 9, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #5
  br label %21

21:                                               ; preds = %1, %17, %20
  %22 = getelementptr inbounds %"class.blink::MIDIPort", %"class.blink::MIDIPort"* %0, i64 0, i32 6, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #5
  br label %38

38:                                               ; preds = %21, %34, %37
  %39 = getelementptr inbounds %"class.blink::MIDIPort", %"class.blink::MIDIPort"* %0, i64 0, i32 5, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #5
  br label %55

55:                                               ; preds = %38, %51, %54
  %56 = getelementptr inbounds %"class.blink::MIDIPort", %"class.blink::MIDIPort"* %0, i64 0, i32 4, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #5
  br label %72

72:                                               ; preds = %55, %68, %71
  %73 = getelementptr inbounds %"class.blink::MIDIPort", %"class.blink::MIDIPort"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"* %73) #5
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %74 = getelementptr inbounds %"class.blink::MIDIPort", %"class.blink::MIDIPort"* %0, i64 0, i32 0, i32 1
  %75 = bitcast %"class.blink::EventTargetData"* %74 to i8*
  %76 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %75, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 261) #5
  %77 = bitcast i8* %76 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"* %77) #5
  %78 = getelementptr inbounds %"class.blink::MIDIPort", %"class.blink::MIDIPort"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"* %78) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10MIDIOutputD2Ev(%"class.blink::MIDIOutput"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::MIDIOutput"* %0 to %"class.blink::MIDIPort"*
  tail call void @_ZN5blink8MIDIPortD2Ev(%"class.blink::MIDIPort"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink10MIDIOutputD1Ev(%"class.blink::MIDIOutput"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MIDIOutput", %"class.blink::MIDIOutput"* %0, i64 -1, i32 0, i32 5
  %3 = bitcast %"class.WTF::String"* %2 to %"class.blink::MIDIPort"*
  tail call void @_ZN5blink8MIDIPortD2Ev(%"class.blink::MIDIPort"* %3) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink10MIDIOutputD1Ev(%"class.blink::MIDIOutput"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MIDIOutput", %"class.blink::MIDIOutput"* %0, i64 -1, i32 0, i32 4
  %3 = bitcast %"class.WTF::String"* %2 to %"class.blink::MIDIPort"*
  tail call void @_ZN5blink8MIDIPortD2Ev(%"class.blink::MIDIPort"* %3) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10MIDIOutputD0Ev(%"class.blink::MIDIOutput"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::MIDIOutput"* %0 to %"class.blink::MIDIPort"*
  tail call void @_ZN5blink8MIDIPortD2Ev(%"class.blink::MIDIPort"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink10MIDIOutputD0Ev(%"class.blink::MIDIOutput"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MIDIOutput", %"class.blink::MIDIOutput"* %0, i64 -1, i32 0, i32 5
  %3 = bitcast %"class.WTF::String"* %2 to %"class.blink::MIDIPort"*
  tail call void @_ZN5blink8MIDIPortD2Ev(%"class.blink::MIDIPort"* %3) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink10MIDIOutputD0Ev(%"class.blink::MIDIOutput"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MIDIOutput", %"class.blink::MIDIOutput"* %0, i64 -1, i32 0, i32 4
  %3 = bitcast %"class.WTF::String"* %2 to %"class.blink::MIDIPort"*
  tail call void @_ZN5blink8MIDIPortD2Ev(%"class.blink::MIDIPort"* %3) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10MIDIOutput4sendENS_9NotSharedINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEdRNS_14ExceptionStateE(%"class.blink::MIDIOutput"*, %"class.blink::NotShared"* nocapture readonly, double, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.blink::MIDIOutput"* %0 to %"class.blink::MIDIPort"*
  %7 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8MIDIPort19GetExecutionContextEv(%"class.blink::MIDIPort"* %6) #5
  %8 = icmp eq %"class.blink::ExecutionContext"* %7, null
  br i1 %8, label %80, label %9

9:                                                ; preds = %4
  %10 = fcmp oeq double %2, 0.000000e+00
  br i1 %10, label %11, label %13

11:                                               ; preds = %9
  %12 = tail call i64 @_ZN4base9TimeTicks3NowEv() #5
  br label %76

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ExecutionContext"* %7 to i1 (%"class.blink::ExecutionContext"*)***
  %15 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %15, i64 1
  %17 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.blink::ExecutionContext"* nonnull %7) #5
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %7, i64 -1, i32 8
  %21 = bitcast i32* %20 to %"class.blink::LocalDOMWindow"*
  %22 = tail call %"class.blink::WindowPerformance"* @_ZN5blink20DOMWindowPerformance11performanceERNS_14LocalDOMWindowE(%"class.blink::LocalDOMWindow"* nonnull dereferenceable(904) %21) #5
  %23 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %22, i64 0, i32 0
  br label %29

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %7, i64 -1, i32 22
  %26 = bitcast %"class.blink::DOMTimerCoordinator"* %25 to %"class.blink::WorkerGlobalScope"*
  %27 = tail call %"class.blink::WorkerPerformance"* @_ZN5blink28WorkerGlobalScopePerformance11performanceERNS_17WorkerGlobalScopeE(%"class.blink::WorkerGlobalScope"* dereferenceable(2376) %26) #5
  %28 = getelementptr inbounds %"class.blink::WorkerPerformance", %"class.blink::WorkerPerformance"* %27, i64 0, i32 0
  br label %29

29:                                               ; preds = %24, %19
  %30 = phi %"class.blink::Performance"* [ %23, %19 ], [ %28, %24 ]
  %31 = getelementptr inbounds %"class.blink::Performance", %"class.blink::Performance"* %30, i64 0, i32 18, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, -9223372036854775807
  %34 = icmp ult i64 %33, 2
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = sitofp i64 %32 to double
  %37 = fdiv double %36, 1.000000e+06
  br label %41

38:                                               ; preds = %29
  %39 = icmp slt i64 %32, 0
  %40 = select i1 %39, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %41

41:                                               ; preds = %35, %38
  %42 = phi double [ %40, %38 ], [ %37, %35 ]
  %43 = fmul double %42, 1.000000e+06
  %44 = fcmp ult double %43, 0xC3E0000000000000
  %45 = fcmp ugt double %43, 0x43DFFFFFFFFFFFFF
  %46 = fcmp ogt double %43, 0xC3E0000000000000
  %47 = select i1 %46, double %43, double 0xC3E0000000000000
  %48 = fptosi double %47 to i64
  %49 = select i1 %44, i64 0, i64 9223372036854775807
  %50 = select i1 %45, i64 %49, i64 %48
  %51 = fmul double %2, 1.000000e+03
  %52 = fcmp ult double %51, 0xC3E0000000000000
  %53 = fcmp ugt double %51, 0x43DFFFFFFFFFFFFF
  %54 = fcmp ogt double %51, 0xC3E0000000000000
  %55 = select i1 %54, double %51, double 0xC3E0000000000000
  %56 = fptosi double %55 to i64
  %57 = select i1 %52, i64 0, i64 9223372036854775807
  %58 = select i1 %53, i64 %57, i64 %56
  %59 = add i64 %58, -9223372036854775807
  %60 = icmp ult i64 %59, 2
  br i1 %60, label %68, label %61

61:                                               ; preds = %41
  %62 = icmp slt i64 %58, 0
  %63 = select i1 %62, i64 -9223372036854775808, i64 9223372036854775807
  %64 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %50, i64 %58) #5
  %65 = extractvalue { i64, i1 } %64, 1
  %66 = extractvalue { i64, i1 } %64, 0
  %67 = select i1 %65, i64 %63, i64 %66, !prof !2
  br label %76

68:                                               ; preds = %41
  %69 = add i64 %50, -9223372036854775807
  %70 = icmp ugt i64 %69, 1
  %71 = icmp eq i64 %50, %58
  %72 = or i1 %71, %70
  br i1 %72, label %76, label %73

73:                                               ; preds = %68
  %74 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #5
  %75 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #5
  br label %76

76:                                               ; preds = %73, %68, %61, %11
  %77 = phi i64 [ %12, %11 ], [ %67, %61 ], [ %58, %68 ], [ %58, %73 ]
  %78 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %1, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.blink::DOMTypedArray"*, %"class.blink::DOMTypedArray"** %78, align 8
  call void @_ZN5blink10MIDIOutput12SendInternalEPNS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEN4base9TimeTicksERNS_14ExceptionStateE(%"class.blink::MIDIOutput"* %0, %"class.blink::DOMTypedArray"* %79, i64 %77, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %80

80:                                               ; preds = %4, %76
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink8MIDIPort19GetExecutionContextEv(%"class.blink::MIDIPort"*) unnamed_addr #1

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10MIDIOutput12SendInternalEPNS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEN4base9TimeTicksERNS_14ExceptionStateE(%"class.blink::MIDIOutput"*, %"class.blink::DOMTypedArray"*, i64, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringAppend.2489", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringAppend.2489", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::StringAppend.2489", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::StringAppend.2489", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::StringAppend.2489", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::StringAppend.2489", align 8
  %17 = alloca %"class.blink::(anonymous namespace)::MessageValidator", align 8
  %18 = ptrtoint %"class.blink::DOMTypedArray"* %1 to i64
  %19 = bitcast %"class.blink::MIDIOutput"* %0 to %"class.blink::MIDIPort"*
  %20 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8MIDIPort19GetExecutionContextEv(%"class.blink::MIDIPort"* %19) #5
  %21 = icmp eq %"class.blink::ExecutionContext"* %20, null
  %22 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %20, i64 0, i32 3
  %23 = icmp eq %"class.blink::UseCounter"* %22, null
  %24 = or i1 %21, %23
  br i1 %24, label %30, label %25

25:                                               ; preds = %4
  %26 = bitcast %"class.blink::UseCounter"* %22 to void (%"class.blink::UseCounter"*, i32)***
  %27 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %27, i64 3
  %29 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %28, align 8
  tail call void %29(%"class.blink::UseCounter"* nonnull %22, i32 2030) #5
  br label %30

30:                                               ; preds = %4, %25
  tail call void @_ZN5blink8MIDIPort4openEv(%"class.blink::MIDIPort"* %19) #5
  %31 = getelementptr inbounds %"class.blink::MIDIOutput", %"class.blink::MIDIOutput"* %0, i64 0, i32 0, i32 10, i32 0, i32 0
  %32 = load %"class.blink::MIDIAccess"*, %"class.blink::MIDIAccess"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::MIDIAccess", %"class.blink::MIDIAccess"* %32, i64 0, i32 5
  %34 = load i8, i8* %33, align 8, !range !3
  %35 = icmp eq i8 %34, 0
  %36 = bitcast %"class.blink::(anonymous namespace)::MessageValidator"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #5
  %37 = getelementptr inbounds %"class.blink::(anonymous namespace)::MessageValidator", %"class.blink::(anonymous namespace)::MessageValidator"* %17, i64 0, i32 2
  %38 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false) #5
  %39 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %39, i64 0, i32 2
  %41 = load i8, i8* %40, align 8, !range !3
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %30
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 24, i1 false) #5
  br label %756

44:                                               ; preds = %30
  %45 = getelementptr inbounds %"class.blink::(anonymous namespace)::MessageValidator", %"class.blink::(anonymous namespace)::MessageValidator"* %17, i64 0, i32 0
  %46 = getelementptr inbounds %"class.blink::(anonymous namespace)::MessageValidator", %"class.blink::(anonymous namespace)::MessageValidator"* %17, i64 0, i32 1
  %47 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %1, i64 0, i32 0, i32 1
  %48 = load i8*, i8** %47, align 8
  store i8* %48, i8** %45, align 8
  %49 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %1, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* %46, align 8
  store i64 0, i64* %37, align 8
  %51 = icmp ult i64 %50, 4294967296
  br i1 %51, label %52, label %54

52:                                               ; preds = %44
  %53 = icmp eq i64 %50, 0
  br i1 %53, label %756, label %55

54:                                               ; preds = %44
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.16, i64 0, i64 0)) #5
  br label %755

55:                                               ; preds = %52, %64
  %56 = phi i64 [ %65, %64 ], [ 0, %52 ]
  %57 = getelementptr inbounds i8, i8* %48, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = icmp ugt i8 %58, -9
  br i1 %59, label %60, label %66

60:                                               ; preds = %55
  switch i8 %58, label %61 [
    i8 -7, label %275
    i8 -3, label %275
  ]

61:                                               ; preds = %60
  %62 = add nuw i64 %56, 1
  %63 = icmp ult i64 %62, %50
  br i1 %63, label %64, label %753

64:                                               ; preds = %61, %750
  %65 = phi i64 [ %62, %61 ], [ %751, %750 ]
  br label %55

66:                                               ; preds = %55
  %67 = icmp slt i8 %58, 0
  br i1 %67, label %171, label %68

68:                                               ; preds = %66
  store i64 %56, i64* %37, align 8
  %69 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #5
  %70 = bitcast %"class.WTF::StringAppend.2489"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #5
  %71 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_116MessageValidator17GetPositionStringEv(%"class.blink::(anonymous namespace)::MessageValidator"* nonnull %17) #5
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %116, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %90

80:                                               ; preds = %73
  %81 = zext i32 %79 to i33
  %82 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #5
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !2

87:                                               ; preds = %80
  tail call void @llvm.trap() #5
  unreachable

88:                                               ; preds = %80
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %78, align 4
  br label %90

90:                                               ; preds = %88, %73
  %91 = phi i32 [ %89, %88 ], [ %79, %73 ]
  %92 = load atomic i32, i32* %74 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %105

95:                                               ; preds = %90
  %96 = zext i32 %91 to i33
  %97 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %96, i33 1) #5
  %98 = extractvalue { i33, i1 } %97, 1
  %99 = extractvalue { i33, i1 } %97, 0
  %100 = icmp slt i33 %99, 0
  %101 = or i1 %98, %100
  br i1 %101, label %102, label %103, !prof !2

102:                                              ; preds = %95
  tail call void @llvm.trap() #5
  unreachable

103:                                              ; preds = %95
  %104 = trunc i33 %99 to i32
  store i32 %104, i32* %78, align 4
  br label %105

105:                                              ; preds = %103, %90
  %106 = phi i32 [ %104, %103 ], [ %91, %90 ]
  %107 = load atomic i32, i32* %74 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %105
  %111 = add i32 %106, -1
  store i32 %111, i32* %78, align 4
  br label %112

112:                                              ; preds = %110, %105
  %113 = phi i32 [ %111, %110 ], [ %106, %105 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #5
  br label %116

116:                                              ; preds = %115, %112, %68
  %117 = getelementptr inbounds %"class.WTF::StringAppend.2489", %"class.WTF::StringAppend.2489"* %6, i64 0, i32 0
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.17, i64 0, i64 0), i8** %117, align 8
  %118 = getelementptr inbounds %"class.WTF::StringAppend.2489", %"class.WTF::StringAppend.2489"* %6, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %118, align 8
  %119 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend.2489"* nonnull %6) #5
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %119, %"class.WTF::StringImpl"** %120, align 8
  %121 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %122 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %121, align 8
  %123 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %122, i64 3
  %124 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %123, align 8
  call void %124(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #5
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %126, label %140, label %127

127:                                              ; preds = %116
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = and i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  br i1 %131, label %134, label %136

134:                                              ; preds = %127
  %135 = add i32 %133, -1
  store i32 %135, i32* %132, align 4
  br label %136

136:                                              ; preds = %134, %127
  %137 = phi i32 [ %135, %134 ], [ %133, %127 ]
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %136
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %125) #5
  br label %140

140:                                              ; preds = %139, %136, %116
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %140
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #5
  br label %156

156:                                              ; preds = %155, %152, %140
  br i1 %72, label %170, label %157

157:                                              ; preds = %156
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  br i1 %161, label %164, label %166

164:                                              ; preds = %157
  %165 = add i32 %163, -1
  store i32 %165, i32* %162, align 4
  br label %166

166:                                              ; preds = %164, %157
  %167 = phi i32 [ %165, %164 ], [ %163, %157 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #5
  br label %170

170:                                              ; preds = %169, %166, %156
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #5
  br label %755

171:                                              ; preds = %66
  switch i8 %58, label %608 [
    i8 -9, label %172
    i8 -12, label %275
    i8 -11, label %275
    i8 -16, label %378
  ]

172:                                              ; preds = %171
  store i64 %56, i64* %37, align 8
  %173 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #5
  %174 = bitcast %"class.WTF::StringAppend.2489"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %174) #5
  %175 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_116MessageValidator17GetPositionStringEv(%"class.blink::(anonymous namespace)::MessageValidator"* nonnull %17) #5
  %176 = icmp eq %"class.WTF::StringImpl"* %175, null
  br i1 %176, label %220, label %177

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load atomic i32, i32* %178 monotonic, align 4
  %180 = and i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 0
  %183 = load i32, i32* %182, align 4
  br i1 %181, label %184, label %194

184:                                              ; preds = %177
  %185 = zext i32 %183 to i33
  %186 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %185, i33 1) #5
  %187 = extractvalue { i33, i1 } %186, 1
  %188 = extractvalue { i33, i1 } %186, 0
  %189 = icmp slt i33 %188, 0
  %190 = or i1 %187, %189
  br i1 %190, label %191, label %192, !prof !2

191:                                              ; preds = %184
  tail call void @llvm.trap() #5
  unreachable

192:                                              ; preds = %184
  %193 = trunc i33 %188 to i32
  store i32 %193, i32* %182, align 4
  br label %194

194:                                              ; preds = %192, %177
  %195 = phi i32 [ %193, %192 ], [ %183, %177 ]
  %196 = load atomic i32, i32* %178 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %209

199:                                              ; preds = %194
  %200 = zext i32 %195 to i33
  %201 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %200, i33 1) #5
  %202 = extractvalue { i33, i1 } %201, 1
  %203 = extractvalue { i33, i1 } %201, 0
  %204 = icmp slt i33 %203, 0
  %205 = or i1 %202, %204
  br i1 %205, label %206, label %207, !prof !2

206:                                              ; preds = %199
  tail call void @llvm.trap() #5
  unreachable

207:                                              ; preds = %199
  %208 = trunc i33 %203 to i32
  store i32 %208, i32* %182, align 4
  br label %209

209:                                              ; preds = %207, %194
  %210 = phi i32 [ %208, %207 ], [ %195, %194 ]
  %211 = load atomic i32, i32* %178 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %216

214:                                              ; preds = %209
  %215 = add i32 %210, -1
  store i32 %215, i32* %182, align 4
  br label %216

216:                                              ; preds = %214, %209
  %217 = phi i32 [ %215, %214 ], [ %210, %209 ]
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %216
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %175) #5
  br label %220

220:                                              ; preds = %219, %216, %172
  %221 = getelementptr inbounds %"class.WTF::StringAppend.2489", %"class.WTF::StringAppend.2489"* %8, i64 0, i32 0
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.18, i64 0, i64 0), i8** %221, align 8
  %222 = getelementptr inbounds %"class.WTF::StringAppend.2489", %"class.WTF::StringAppend.2489"* %8, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %175, %"class.WTF::StringImpl"** %222, align 8
  %223 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend.2489"* nonnull %8) #5
  %224 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %223, %"class.WTF::StringImpl"** %224, align 8
  %225 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %226 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %225, align 8
  %227 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %226, i64 3
  %228 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %227, align 8
  call void %228(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %7) #5
  %229 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  %230 = icmp eq %"class.WTF::StringImpl"* %229, null
  br i1 %230, label %244, label %231

231:                                              ; preds = %220
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = load atomic i32, i32* %232 monotonic, align 4
  %234 = and i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 0
  %237 = load i32, i32* %236, align 4
  br i1 %235, label %238, label %240

238:                                              ; preds = %231
  %239 = add i32 %237, -1
  store i32 %239, i32* %236, align 4
  br label %240

240:                                              ; preds = %238, %231
  %241 = phi i32 [ %239, %238 ], [ %237, %231 ]
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %244

243:                                              ; preds = %240
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %229) #5
  br label %244

244:                                              ; preds = %243, %240, %220
  %245 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  %246 = icmp eq %"class.WTF::StringImpl"* %245, null
  br i1 %246, label %260, label %247

247:                                              ; preds = %244
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = load atomic i32, i32* %248 monotonic, align 4
  %250 = and i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 0
  %253 = load i32, i32* %252, align 4
  br i1 %251, label %254, label %256

254:                                              ; preds = %247
  %255 = add i32 %253, -1
  store i32 %255, i32* %252, align 4
  br label %256

256:                                              ; preds = %254, %247
  %257 = phi i32 [ %255, %254 ], [ %253, %247 ]
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %260

259:                                              ; preds = %256
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %245) #5
  br label %260

260:                                              ; preds = %259, %256, %244
  br i1 %176, label %274, label %261

261:                                              ; preds = %260
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = load atomic i32, i32* %262 monotonic, align 4
  %264 = and i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 0
  %267 = load i32, i32* %266, align 4
  br i1 %265, label %268, label %270

268:                                              ; preds = %261
  %269 = add i32 %267, -1
  store i32 %269, i32* %266, align 4
  br label %270

270:                                              ; preds = %268, %261
  %271 = phi i32 [ %269, %268 ], [ %267, %261 ]
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %274

273:                                              ; preds = %270
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %175) #5
  br label %274

274:                                              ; preds = %273, %270, %260
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %174) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #5
  br label %755

275:                                              ; preds = %171, %171, %60, %60
  store i64 %56, i64* %37, align 8
  %276 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %276) #5
  %277 = bitcast %"class.WTF::StringAppend.2489"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %277) #5
  %278 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_116MessageValidator17GetPositionStringEv(%"class.blink::(anonymous namespace)::MessageValidator"* nonnull %17) #5
  %279 = icmp eq %"class.WTF::StringImpl"* %278, null
  br i1 %279, label %323, label %280

280:                                              ; preds = %275
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = and i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  br i1 %284, label %287, label %297

287:                                              ; preds = %280
  %288 = zext i32 %286 to i33
  %289 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %288, i33 1) #5
  %290 = extractvalue { i33, i1 } %289, 1
  %291 = extractvalue { i33, i1 } %289, 0
  %292 = icmp slt i33 %291, 0
  %293 = or i1 %290, %292
  br i1 %293, label %294, label %295, !prof !2

294:                                              ; preds = %287
  tail call void @llvm.trap() #5
  unreachable

295:                                              ; preds = %287
  %296 = trunc i33 %291 to i32
  store i32 %296, i32* %285, align 4
  br label %297

297:                                              ; preds = %295, %280
  %298 = phi i32 [ %296, %295 ], [ %286, %280 ]
  %299 = load atomic i32, i32* %281 monotonic, align 4
  %300 = and i32 %299, 2
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %312

302:                                              ; preds = %297
  %303 = zext i32 %298 to i33
  %304 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %303, i33 1) #5
  %305 = extractvalue { i33, i1 } %304, 1
  %306 = extractvalue { i33, i1 } %304, 0
  %307 = icmp slt i33 %306, 0
  %308 = or i1 %305, %307
  br i1 %308, label %309, label %310, !prof !2

309:                                              ; preds = %302
  tail call void @llvm.trap() #5
  unreachable

310:                                              ; preds = %302
  %311 = trunc i33 %306 to i32
  store i32 %311, i32* %285, align 4
  br label %312

312:                                              ; preds = %310, %297
  %313 = phi i32 [ %311, %310 ], [ %298, %297 ]
  %314 = load atomic i32, i32* %281 monotonic, align 4
  %315 = and i32 %314, 2
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %319

317:                                              ; preds = %312
  %318 = add i32 %313, -1
  store i32 %318, i32* %285, align 4
  br label %319

319:                                              ; preds = %317, %312
  %320 = phi i32 [ %318, %317 ], [ %313, %312 ]
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %322, label %323

322:                                              ; preds = %319
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %278) #5
  br label %323

323:                                              ; preds = %322, %319, %275
  %324 = getelementptr inbounds %"class.WTF::StringAppend.2489", %"class.WTF::StringAppend.2489"* %10, i64 0, i32 0
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.19, i64 0, i64 0), i8** %324, align 8
  %325 = getelementptr inbounds %"class.WTF::StringAppend.2489", %"class.WTF::StringAppend.2489"* %10, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %278, %"class.WTF::StringImpl"** %325, align 8
  %326 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend.2489"* nonnull %10) #5
  %327 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %326, %"class.WTF::StringImpl"** %327, align 8
  %328 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %329 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %328, align 8
  %330 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %329, i64 3
  %331 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %330, align 8
  call void %331(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %9) #5
  %332 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %327, align 8
  %333 = icmp eq %"class.WTF::StringImpl"* %332, null
  br i1 %333, label %347, label %334

334:                                              ; preds = %323
  %335 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %332, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %336 = load atomic i32, i32* %335 monotonic, align 4
  %337 = and i32 %336, 2
  %338 = icmp eq i32 %337, 0
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %332, i64 0, i32 0
  %340 = load i32, i32* %339, align 4
  br i1 %338, label %341, label %343

341:                                              ; preds = %334
  %342 = add i32 %340, -1
  store i32 %342, i32* %339, align 4
  br label %343

343:                                              ; preds = %341, %334
  %344 = phi i32 [ %342, %341 ], [ %340, %334 ]
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %346, label %347

346:                                              ; preds = %343
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %332) #5
  br label %347

347:                                              ; preds = %346, %343, %323
  %348 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %325, align 8
  %349 = icmp eq %"class.WTF::StringImpl"* %348, null
  br i1 %349, label %363, label %350

350:                                              ; preds = %347
  %351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %352 = load atomic i32, i32* %351 monotonic, align 4
  %353 = and i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 0
  %356 = load i32, i32* %355, align 4
  br i1 %354, label %357, label %359

357:                                              ; preds = %350
  %358 = add i32 %356, -1
  store i32 %358, i32* %355, align 4
  br label %359

359:                                              ; preds = %357, %350
  %360 = phi i32 [ %358, %357 ], [ %356, %350 ]
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %363

362:                                              ; preds = %359
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %348) #5
  br label %363

363:                                              ; preds = %362, %359, %347
  br i1 %279, label %377, label %364

364:                                              ; preds = %363
  %365 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %366 = load atomic i32, i32* %365 monotonic, align 4
  %367 = and i32 %366, 2
  %368 = icmp eq i32 %367, 0
  %369 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 0
  %370 = load i32, i32* %369, align 4
  br i1 %368, label %371, label %373

371:                                              ; preds = %364
  %372 = add i32 %370, -1
  store i32 %372, i32* %369, align 4
  br label %373

373:                                              ; preds = %371, %364
  %374 = phi i32 [ %372, %371 ], [ %370, %364 ]
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %376, label %377

376:                                              ; preds = %373
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %278) #5
  br label %377

377:                                              ; preds = %376, %373, %363
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %277) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %276) #5
  br label %755

378:                                              ; preds = %171
  br i1 %35, label %379, label %481

379:                                              ; preds = %378
  store i64 %56, i64* %37, align 8
  %380 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %380) #5
  %381 = bitcast %"class.WTF::StringAppend.2489"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %381) #5
  %382 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_116MessageValidator17GetPositionStringEv(%"class.blink::(anonymous namespace)::MessageValidator"* nonnull %17) #5
  %383 = icmp eq %"class.WTF::StringImpl"* %382, null
  br i1 %383, label %427, label %384

384:                                              ; preds = %379
  %385 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %386 = load atomic i32, i32* %385 monotonic, align 4
  %387 = and i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 0
  %390 = load i32, i32* %389, align 4
  br i1 %388, label %391, label %401

391:                                              ; preds = %384
  %392 = zext i32 %390 to i33
  %393 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %392, i33 1) #5
  %394 = extractvalue { i33, i1 } %393, 1
  %395 = extractvalue { i33, i1 } %393, 0
  %396 = icmp slt i33 %395, 0
  %397 = or i1 %394, %396
  br i1 %397, label %398, label %399, !prof !2

398:                                              ; preds = %391
  tail call void @llvm.trap() #5
  unreachable

399:                                              ; preds = %391
  %400 = trunc i33 %395 to i32
  store i32 %400, i32* %389, align 4
  br label %401

401:                                              ; preds = %399, %384
  %402 = phi i32 [ %400, %399 ], [ %390, %384 ]
  %403 = load atomic i32, i32* %385 monotonic, align 4
  %404 = and i32 %403, 2
  %405 = icmp eq i32 %404, 0
  br i1 %405, label %406, label %416

406:                                              ; preds = %401
  %407 = zext i32 %402 to i33
  %408 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %407, i33 1) #5
  %409 = extractvalue { i33, i1 } %408, 1
  %410 = extractvalue { i33, i1 } %408, 0
  %411 = icmp slt i33 %410, 0
  %412 = or i1 %409, %411
  br i1 %412, label %413, label %414, !prof !2

413:                                              ; preds = %406
  tail call void @llvm.trap() #5
  unreachable

414:                                              ; preds = %406
  %415 = trunc i33 %410 to i32
  store i32 %415, i32* %389, align 4
  br label %416

416:                                              ; preds = %414, %401
  %417 = phi i32 [ %415, %414 ], [ %402, %401 ]
  %418 = load atomic i32, i32* %385 monotonic, align 4
  %419 = and i32 %418, 2
  %420 = icmp eq i32 %419, 0
  br i1 %420, label %421, label %423

421:                                              ; preds = %416
  %422 = add i32 %417, -1
  store i32 %422, i32* %389, align 4
  br label %423

423:                                              ; preds = %421, %416
  %424 = phi i32 [ %422, %421 ], [ %417, %416 ]
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %426, label %427

426:                                              ; preds = %423
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %382) #5
  br label %427

427:                                              ; preds = %426, %423, %379
  %428 = getelementptr inbounds %"class.WTF::StringAppend.2489", %"class.WTF::StringAppend.2489"* %12, i64 0, i32 0
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.20, i64 0, i64 0), i8** %428, align 8
  %429 = getelementptr inbounds %"class.WTF::StringAppend.2489", %"class.WTF::StringAppend.2489"* %12, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %382, %"class.WTF::StringImpl"** %429, align 8
  %430 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend.2489"* nonnull %12) #5
  %431 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %430, %"class.WTF::StringImpl"** %431, align 8
  %432 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %433 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %432, align 8
  %434 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %433, align 8
  call void %434(%"class.blink::ExceptionState"* %3, i32 15, %"class.WTF::String"* nonnull dereferenceable(8) %11) #5
  %435 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %431, align 8
  %436 = icmp eq %"class.WTF::StringImpl"* %435, null
  br i1 %436, label %450, label %437

437:                                              ; preds = %427
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %435, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %439 = load atomic i32, i32* %438 monotonic, align 4
  %440 = and i32 %439, 2
  %441 = icmp eq i32 %440, 0
  %442 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %435, i64 0, i32 0
  %443 = load i32, i32* %442, align 4
  br i1 %441, label %444, label %446

444:                                              ; preds = %437
  %445 = add i32 %443, -1
  store i32 %445, i32* %442, align 4
  br label %446

446:                                              ; preds = %444, %437
  %447 = phi i32 [ %445, %444 ], [ %443, %437 ]
  %448 = icmp eq i32 %447, 0
  br i1 %448, label %449, label %450

449:                                              ; preds = %446
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %435) #5
  br label %450

450:                                              ; preds = %449, %446, %427
  %451 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %429, align 8
  %452 = icmp eq %"class.WTF::StringImpl"* %451, null
  br i1 %452, label %466, label %453

453:                                              ; preds = %450
  %454 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %451, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %455 = load atomic i32, i32* %454 monotonic, align 4
  %456 = and i32 %455, 2
  %457 = icmp eq i32 %456, 0
  %458 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %451, i64 0, i32 0
  %459 = load i32, i32* %458, align 4
  br i1 %457, label %460, label %462

460:                                              ; preds = %453
  %461 = add i32 %459, -1
  store i32 %461, i32* %458, align 4
  br label %462

462:                                              ; preds = %460, %453
  %463 = phi i32 [ %461, %460 ], [ %459, %453 ]
  %464 = icmp eq i32 %463, 0
  br i1 %464, label %465, label %466

465:                                              ; preds = %462
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %451) #5
  br label %466

466:                                              ; preds = %465, %462, %450
  br i1 %383, label %480, label %467

467:                                              ; preds = %466
  %468 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %469 = load atomic i32, i32* %468 monotonic, align 4
  %470 = and i32 %469, 2
  %471 = icmp eq i32 %470, 0
  %472 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 0
  %473 = load i32, i32* %472, align 4
  br i1 %471, label %474, label %476

474:                                              ; preds = %467
  %475 = add i32 %473, -1
  store i32 %475, i32* %472, align 4
  br label %476

476:                                              ; preds = %474, %467
  %477 = phi i32 [ %475, %474 ], [ %473, %467 ]
  %478 = icmp eq i32 %477, 0
  br i1 %478, label %479, label %480

479:                                              ; preds = %476
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %382) #5
  br label %480

480:                                              ; preds = %479, %476, %466
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %381) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %380) #5
  br label %755

481:                                              ; preds = %378
  %482 = add nuw i64 %56, 1
  %483 = icmp ult i64 %482, %50
  br i1 %483, label %484, label %500

484:                                              ; preds = %481, %495
  %485 = phi i64 [ %496, %495 ], [ %482, %481 ]
  %486 = phi i64 [ %485, %495 ], [ %56, %481 ]
  %487 = getelementptr inbounds i8, i8* %48, i64 %485
  %488 = load i8, i8* %487, align 1
  switch i8 %488, label %489 [
    i8 -12, label %500
    i8 -11, label %500
    i8 -7, label %500
    i8 -3, label %500
  ]

489:                                              ; preds = %484
  %490 = icmp ugt i8 %488, -9
  br i1 %490, label %495, label %491

491:                                              ; preds = %489
  %492 = icmp eq i8 %488, -9
  br i1 %492, label %498, label %493

493:                                              ; preds = %491
  %494 = icmp slt i8 %488, 0
  br i1 %494, label %500, label %495

495:                                              ; preds = %493, %489
  %496 = add i64 %485, 1
  %497 = icmp eq i64 %496, %50
  br i1 %497, label %503, label %484

498:                                              ; preds = %491
  %499 = add i64 %486, 2
  br label %750

500:                                              ; preds = %481, %493, %484, %484, %484, %484
  %501 = phi i64 [ %485, %484 ], [ %485, %484 ], [ %485, %484 ], [ %485, %484 ], [ %485, %493 ], [ %482, %481 ]
  store i64 %501, i64* %37, align 8
  %502 = icmp ult i64 %501, %50
  br i1 %502, label %505, label %504

503:                                              ; preds = %495
  store i64 %50, i64* %37, align 8
  br label %504

504:                                              ; preds = %503, %500
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.21, i64 0, i64 0)) #5
  br label %755

505:                                              ; preds = %500
  %506 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %506) #5
  %507 = bitcast %"class.WTF::StringAppend.2489"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %507) #5
  %508 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_116MessageValidator17GetPositionStringEv(%"class.blink::(anonymous namespace)::MessageValidator"* nonnull %17) #5
  %509 = icmp eq %"class.WTF::StringImpl"* %508, null
  br i1 %509, label %553, label %510

510:                                              ; preds = %505
  %511 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %508, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %512 = load atomic i32, i32* %511 monotonic, align 4
  %513 = and i32 %512, 2
  %514 = icmp eq i32 %513, 0
  %515 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %508, i64 0, i32 0
  %516 = load i32, i32* %515, align 4
  br i1 %514, label %517, label %527

517:                                              ; preds = %510
  %518 = zext i32 %516 to i33
  %519 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %518, i33 1) #5
  %520 = extractvalue { i33, i1 } %519, 1
  %521 = extractvalue { i33, i1 } %519, 0
  %522 = icmp slt i33 %521, 0
  %523 = or i1 %520, %522
  br i1 %523, label %524, label %525, !prof !2

524:                                              ; preds = %517
  tail call void @llvm.trap() #5
  unreachable

525:                                              ; preds = %517
  %526 = trunc i33 %521 to i32
  store i32 %526, i32* %515, align 4
  br label %527

527:                                              ; preds = %525, %510
  %528 = phi i32 [ %526, %525 ], [ %516, %510 ]
  %529 = load atomic i32, i32* %511 monotonic, align 4
  %530 = and i32 %529, 2
  %531 = icmp eq i32 %530, 0
  br i1 %531, label %532, label %542

532:                                              ; preds = %527
  %533 = zext i32 %528 to i33
  %534 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %533, i33 1) #5
  %535 = extractvalue { i33, i1 } %534, 1
  %536 = extractvalue { i33, i1 } %534, 0
  %537 = icmp slt i33 %536, 0
  %538 = or i1 %535, %537
  br i1 %538, label %539, label %540, !prof !2

539:                                              ; preds = %532
  tail call void @llvm.trap() #5
  unreachable

540:                                              ; preds = %532
  %541 = trunc i33 %536 to i32
  store i32 %541, i32* %515, align 4
  br label %542

542:                                              ; preds = %540, %527
  %543 = phi i32 [ %541, %540 ], [ %528, %527 ]
  %544 = load atomic i32, i32* %511 monotonic, align 4
  %545 = and i32 %544, 2
  %546 = icmp eq i32 %545, 0
  br i1 %546, label %547, label %549

547:                                              ; preds = %542
  %548 = add i32 %543, -1
  store i32 %548, i32* %515, align 4
  br label %549

549:                                              ; preds = %547, %542
  %550 = phi i32 [ %548, %547 ], [ %543, %542 ]
  %551 = icmp eq i32 %550, 0
  br i1 %551, label %552, label %553

552:                                              ; preds = %549
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %508) #5
  br label %553

553:                                              ; preds = %552, %549, %505
  %554 = getelementptr inbounds %"class.WTF::StringAppend.2489", %"class.WTF::StringAppend.2489"* %14, i64 0, i32 0
  store i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22, i64 0, i64 0), i8** %554, align 8
  %555 = getelementptr inbounds %"class.WTF::StringAppend.2489", %"class.WTF::StringAppend.2489"* %14, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %508, %"class.WTF::StringImpl"** %555, align 8
  %556 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend.2489"* nonnull %14) #5
  %557 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %556, %"class.WTF::StringImpl"** %557, align 8
  %558 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %559 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %558, align 8
  %560 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %559, i64 3
  %561 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %560, align 8
  call void %561(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %13) #5
  %562 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %557, align 8
  %563 = icmp eq %"class.WTF::StringImpl"* %562, null
  br i1 %563, label %577, label %564

564:                                              ; preds = %553
  %565 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %562, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %566 = load atomic i32, i32* %565 monotonic, align 4
  %567 = and i32 %566, 2
  %568 = icmp eq i32 %567, 0
  %569 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %562, i64 0, i32 0
  %570 = load i32, i32* %569, align 4
  br i1 %568, label %571, label %573

571:                                              ; preds = %564
  %572 = add i32 %570, -1
  store i32 %572, i32* %569, align 4
  br label %573

573:                                              ; preds = %571, %564
  %574 = phi i32 [ %572, %571 ], [ %570, %564 ]
  %575 = icmp eq i32 %574, 0
  br i1 %575, label %576, label %577

576:                                              ; preds = %573
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %562) #5
  br label %577

577:                                              ; preds = %576, %573, %553
  %578 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %555, align 8
  %579 = icmp eq %"class.WTF::StringImpl"* %578, null
  br i1 %579, label %593, label %580

580:                                              ; preds = %577
  %581 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %578, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %582 = load atomic i32, i32* %581 monotonic, align 4
  %583 = and i32 %582, 2
  %584 = icmp eq i32 %583, 0
  %585 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %578, i64 0, i32 0
  %586 = load i32, i32* %585, align 4
  br i1 %584, label %587, label %589

587:                                              ; preds = %580
  %588 = add i32 %586, -1
  store i32 %588, i32* %585, align 4
  br label %589

589:                                              ; preds = %587, %580
  %590 = phi i32 [ %588, %587 ], [ %586, %580 ]
  %591 = icmp eq i32 %590, 0
  br i1 %591, label %592, label %593

592:                                              ; preds = %589
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %578) #5
  br label %593

593:                                              ; preds = %592, %589, %577
  br i1 %509, label %607, label %594

594:                                              ; preds = %593
  %595 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %508, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %596 = load atomic i32, i32* %595 monotonic, align 4
  %597 = and i32 %596, 2
  %598 = icmp eq i32 %597, 0
  %599 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %508, i64 0, i32 0
  %600 = load i32, i32* %599, align 4
  br i1 %598, label %601, label %603

601:                                              ; preds = %594
  %602 = add i32 %600, -1
  store i32 %602, i32* %599, align 4
  br label %603

603:                                              ; preds = %601, %594
  %604 = phi i32 [ %602, %601 ], [ %600, %594 ]
  %605 = icmp eq i32 %604, 0
  br i1 %605, label %606, label %607

606:                                              ; preds = %603
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %508) #5
  br label %607

607:                                              ; preds = %606, %603, %593
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %507) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %506) #5
  br label %755

608:                                              ; preds = %171
  %609 = icmp ugt i8 %58, -17
  %610 = zext i8 %58 to i32
  %611 = lshr i32 %610, 4
  %612 = add nsw i32 %611, -8
  %613 = add nsw i32 %610, -241
  %614 = select i1 %609, i32 %613, i32 %612
  %615 = select i1 %609, [7 x i32]* @_ZZN5blink12_GLOBAL__N_116MessageValidator20AcceptCurrentMessageEvE20kSystemMessageLength, [7 x i32]* @_ZZN5blink12_GLOBAL__N_116MessageValidator20AcceptCurrentMessageEvE21kChannelMessageLength
  %616 = sext i32 %614 to i64
  %617 = getelementptr inbounds [7 x i32], [7 x i32]* %615, i64 0, i64 %616
  %618 = load i32, i32* %617, align 4
  %619 = sext i32 %618 to i64
  %620 = add nuw i64 %56, 1
  %621 = icmp eq i32 %618, 1
  br i1 %621, label %750, label %622

622:                                              ; preds = %608
  %623 = icmp ult i64 %620, %50
  br i1 %623, label %624, label %642

624:                                              ; preds = %622, %638
  %625 = phi i64 [ %640, %638 ], [ %620, %622 ]
  %626 = phi i64 [ %639, %638 ], [ 1, %622 ]
  %627 = getelementptr inbounds i8, i8* %48, i64 %625
  %628 = load i8, i8* %627, align 1
  switch i8 %628, label %629 [
    i8 -12, label %642
    i8 -11, label %642
    i8 -7, label %642
    i8 -3, label %642
  ]

629:                                              ; preds = %624
  %630 = icmp ugt i8 %628, -9
  br i1 %630, label %638, label %631

631:                                              ; preds = %629
  %632 = icmp slt i8 %628, 0
  br i1 %632, label %642, label %633

633:                                              ; preds = %631
  %634 = add i64 %626, 1
  %635 = icmp eq i64 %634, %619
  br i1 %635, label %636, label %638

636:                                              ; preds = %633
  %637 = add nuw i64 %625, 1
  br label %750

638:                                              ; preds = %633, %629
  %639 = phi i64 [ %626, %629 ], [ %634, %633 ]
  %640 = add i64 %625, 1
  %641 = icmp eq i64 %640, %50
  br i1 %641, label %645, label %624

642:                                              ; preds = %622, %631, %624, %624, %624, %624
  %643 = phi i64 [ %625, %624 ], [ %625, %624 ], [ %625, %624 ], [ %625, %624 ], [ %625, %631 ], [ %620, %622 ]
  store i64 %643, i64* %37, align 8
  %644 = icmp ult i64 %643, %50
  br i1 %644, label %647, label %646

645:                                              ; preds = %638
  store i64 %50, i64* %37, align 8
  br label %646

646:                                              ; preds = %645, %642
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0)) #5
  br label %755

647:                                              ; preds = %642
  %648 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %648) #5
  %649 = bitcast %"class.WTF::StringAppend.2489"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %649) #5
  %650 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_116MessageValidator17GetPositionStringEv(%"class.blink::(anonymous namespace)::MessageValidator"* nonnull %17) #5
  %651 = icmp eq %"class.WTF::StringImpl"* %650, null
  br i1 %651, label %695, label %652

652:                                              ; preds = %647
  %653 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %650, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %654 = load atomic i32, i32* %653 monotonic, align 4
  %655 = and i32 %654, 2
  %656 = icmp eq i32 %655, 0
  %657 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %650, i64 0, i32 0
  %658 = load i32, i32* %657, align 4
  br i1 %656, label %659, label %669

659:                                              ; preds = %652
  %660 = zext i32 %658 to i33
  %661 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %660, i33 1) #5
  %662 = extractvalue { i33, i1 } %661, 1
  %663 = extractvalue { i33, i1 } %661, 0
  %664 = icmp slt i33 %663, 0
  %665 = or i1 %662, %664
  br i1 %665, label %666, label %667, !prof !2

666:                                              ; preds = %659
  tail call void @llvm.trap() #5
  unreachable

667:                                              ; preds = %659
  %668 = trunc i33 %663 to i32
  store i32 %668, i32* %657, align 4
  br label %669

669:                                              ; preds = %667, %652
  %670 = phi i32 [ %668, %667 ], [ %658, %652 ]
  %671 = load atomic i32, i32* %653 monotonic, align 4
  %672 = and i32 %671, 2
  %673 = icmp eq i32 %672, 0
  br i1 %673, label %674, label %684

674:                                              ; preds = %669
  %675 = zext i32 %670 to i33
  %676 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %675, i33 1) #5
  %677 = extractvalue { i33, i1 } %676, 1
  %678 = extractvalue { i33, i1 } %676, 0
  %679 = icmp slt i33 %678, 0
  %680 = or i1 %677, %679
  br i1 %680, label %681, label %682, !prof !2

681:                                              ; preds = %674
  tail call void @llvm.trap() #5
  unreachable

682:                                              ; preds = %674
  %683 = trunc i33 %678 to i32
  store i32 %683, i32* %657, align 4
  br label %684

684:                                              ; preds = %682, %669
  %685 = phi i32 [ %683, %682 ], [ %670, %669 ]
  %686 = load atomic i32, i32* %653 monotonic, align 4
  %687 = and i32 %686, 2
  %688 = icmp eq i32 %687, 0
  br i1 %688, label %689, label %691

689:                                              ; preds = %684
  %690 = add i32 %685, -1
  store i32 %690, i32* %657, align 4
  br label %691

691:                                              ; preds = %689, %684
  %692 = phi i32 [ %690, %689 ], [ %685, %684 ]
  %693 = icmp eq i32 %692, 0
  br i1 %693, label %694, label %695

694:                                              ; preds = %691
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %650) #5
  br label %695

695:                                              ; preds = %694, %691, %647
  %696 = getelementptr inbounds %"class.WTF::StringAppend.2489", %"class.WTF::StringAppend.2489"* %16, i64 0, i32 0
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.24, i64 0, i64 0), i8** %696, align 8
  %697 = getelementptr inbounds %"class.WTF::StringAppend.2489", %"class.WTF::StringAppend.2489"* %16, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %650, %"class.WTF::StringImpl"** %697, align 8
  %698 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend.2489"* nonnull %16) #5
  %699 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %698, %"class.WTF::StringImpl"** %699, align 8
  %700 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %701 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %700, align 8
  %702 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %701, i64 3
  %703 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %702, align 8
  call void %703(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %15) #5
  %704 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %699, align 8
  %705 = icmp eq %"class.WTF::StringImpl"* %704, null
  br i1 %705, label %719, label %706

706:                                              ; preds = %695
  %707 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %704, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %708 = load atomic i32, i32* %707 monotonic, align 4
  %709 = and i32 %708, 2
  %710 = icmp eq i32 %709, 0
  %711 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %704, i64 0, i32 0
  %712 = load i32, i32* %711, align 4
  br i1 %710, label %713, label %715

713:                                              ; preds = %706
  %714 = add i32 %712, -1
  store i32 %714, i32* %711, align 4
  br label %715

715:                                              ; preds = %713, %706
  %716 = phi i32 [ %714, %713 ], [ %712, %706 ]
  %717 = icmp eq i32 %716, 0
  br i1 %717, label %718, label %719

718:                                              ; preds = %715
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %704) #5
  br label %719

719:                                              ; preds = %718, %715, %695
  %720 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %697, align 8
  %721 = icmp eq %"class.WTF::StringImpl"* %720, null
  br i1 %721, label %735, label %722

722:                                              ; preds = %719
  %723 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %720, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %724 = load atomic i32, i32* %723 monotonic, align 4
  %725 = and i32 %724, 2
  %726 = icmp eq i32 %725, 0
  %727 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %720, i64 0, i32 0
  %728 = load i32, i32* %727, align 4
  br i1 %726, label %729, label %731

729:                                              ; preds = %722
  %730 = add i32 %728, -1
  store i32 %730, i32* %727, align 4
  br label %731

731:                                              ; preds = %729, %722
  %732 = phi i32 [ %730, %729 ], [ %728, %722 ]
  %733 = icmp eq i32 %732, 0
  br i1 %733, label %734, label %735

734:                                              ; preds = %731
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %720) #5
  br label %735

735:                                              ; preds = %734, %731, %719
  br i1 %651, label %749, label %736

736:                                              ; preds = %735
  %737 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %650, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %738 = load atomic i32, i32* %737 monotonic, align 4
  %739 = and i32 %738, 2
  %740 = icmp eq i32 %739, 0
  %741 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %650, i64 0, i32 0
  %742 = load i32, i32* %741, align 4
  br i1 %740, label %743, label %745

743:                                              ; preds = %736
  %744 = add i32 %742, -1
  store i32 %744, i32* %741, align 4
  br label %745

745:                                              ; preds = %743, %736
  %746 = phi i32 [ %744, %743 ], [ %742, %736 ]
  %747 = icmp eq i32 %746, 0
  br i1 %747, label %748, label %749

748:                                              ; preds = %745
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %650) #5
  br label %749

749:                                              ; preds = %748, %745, %735
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %649) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %648) #5
  br label %755

750:                                              ; preds = %636, %608, %498
  %751 = phi i64 [ %637, %636 ], [ %620, %608 ], [ %499, %498 ]
  %752 = icmp ult i64 %751, %50
  br i1 %752, label %64, label %754

753:                                              ; preds = %61
  store i64 %62, i64* %37, align 8
  br label %756

754:                                              ; preds = %750
  store i64 %751, i64* %37, align 8
  br label %756

755:                                              ; preds = %54, %274, %377, %480, %170, %607, %504, %749, %646
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #5
  br label %836

756:                                              ; preds = %754, %753, %52, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #5
  %757 = getelementptr inbounds %"class.blink::MIDIOutput", %"class.blink::MIDIOutput"* %0, i64 0, i32 0, i32 13
  %758 = load i32, i32* %757, align 8
  %759 = icmp eq i32 %758, 0
  br i1 %759, label %822, label %760

760:                                              ; preds = %756
  %761 = getelementptr inbounds %"class.blink::MIDIOutput", %"class.blink::MIDIOutput"* %0, i64 0, i32 2, i32 0
  %762 = getelementptr inbounds %"class.blink::MIDIOutput", %"class.blink::MIDIOutput"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %763 = load i32, i32* %762, align 4
  %764 = getelementptr inbounds %"class.blink::MIDIOutput", %"class.blink::MIDIOutput"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %765 = load i32, i32* %764, align 8
  %766 = icmp eq i32 %763, %765
  br i1 %766, label %767, label %776, !prof !2

767:                                              ; preds = %760
  %768 = add i32 %763, 1
  %769 = lshr i32 %763, 2
  %770 = add i32 %768, %769
  %771 = icmp ugt i32 %770, 4
  %772 = select i1 %771, i32 %770, i32 4
  %773 = icmp ugt i32 %772, %768
  %774 = select i1 %773, i32 %772, i32 %768
  tail call void @_ZN3WTF6VectorINSt3__14pairIN5blink6MemberINS3_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEELj0ENS3_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.51"* %761, i32 %774) #5
  %775 = load i32, i32* %762, align 4
  br label %776

776:                                              ; preds = %760, %767
  %777 = phi i32 [ %775, %767 ], [ %763, %760 ]
  %778 = getelementptr inbounds %"class.WTF::Vector.51", %"class.WTF::Vector.51"* %761, i64 0, i32 0, i32 0, i32 0
  %779 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %778, align 8
  %780 = zext i32 %777 to i64
  %781 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %779, i64 %780
  %782 = bitcast %"struct.std::__1::pair.54"* %781 to i64*
  store i64 %18, i64* %782, align 8
  %783 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %779, i64 %780, i32 1, i32 0, i32 0
  store i64 %2, i64* %783, align 8
  %784 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %785 = icmp eq i32 %784, 0
  br i1 %785, label %819, label %786

786:                                              ; preds = %776
  %787 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %788 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %787, i64 0, i32 1
  %789 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %788) #5
  %790 = icmp eq i8* %789, null
  br i1 %790, label %791, label %793, !prof !2

791:                                              ; preds = %786
  %792 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #5
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %788, i8* %792) #5
  br label %793

793:                                              ; preds = %791, %786
  %794 = phi i8* [ %792, %791 ], [ %789, %786 ]
  %795 = bitcast i8* %794 to %"class.blink::ThreadState"**
  %796 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %795, align 8
  %797 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %796, i64 0, i32 9
  %798 = load i8, i8* %797, align 1, !range !3
  %799 = icmp eq i8 %798, 0
  br i1 %799, label %819, label %800

800:                                              ; preds = %793
  %801 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %796, i64 0, i32 13
  %802 = load i64, i64* %801, align 8
  %803 = add i64 %802, 1
  store i64 %803, i64* %801, align 8
  %804 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %796, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %805 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %804, align 8
  %806 = load atomic i64, i64* %782 monotonic, align 8
  %807 = icmp eq i64 %806, 0
  br i1 %807, label %816, label %808

808:                                              ; preds = %800
  %809 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %805, i64 0, i32 0, i32 0
  %810 = inttoptr i64 %806 to i8*
  %811 = bitcast %"class.blink::MarkingVisitor"* %805 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %812 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %811, align 8
  %813 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %812, i64 5
  %814 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %813, align 8
  tail call void %814(%"class.blink::Visitor"* %809, i8* nonnull %810, i8* %810, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEE5TraceEPNS_7VisitorEPKv) #5
  %815 = load i64, i64* %801, align 8
  br label %816

816:                                              ; preds = %808, %800
  %817 = phi i64 [ %803, %800 ], [ %815, %808 ]
  %818 = add i64 %817, -1
  store i64 %818, i64* %801, align 8
  br label %819

819:                                              ; preds = %776, %793, %816
  %820 = load i32, i32* %762, align 4
  %821 = add i32 %820, 1
  store i32 %821, i32* %762, align 4
  br label %836

822:                                              ; preds = %756
  %823 = getelementptr inbounds %"class.blink::MIDIOutput", %"class.blink::MIDIOutput"* %0, i64 0, i32 1
  %824 = load i32, i32* %823, align 4
  br i1 %42, label %825, label %832

825:                                              ; preds = %822
  %826 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %1, i64 0, i32 0, i32 1
  %827 = load i8*, i8** %826, align 8
  %828 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %1, i64 0, i32 1
  %829 = load i64, i64* %828, align 8
  %830 = icmp ult i64 %829, 4294967296
  br i1 %830, label %832, label %831, !prof !4

831:                                              ; preds = %825
  tail call void @llvm.trap() #5
  unreachable

832:                                              ; preds = %822, %825
  %833 = phi i64 [ %829, %825 ], [ 0, %822 ]
  %834 = phi i8* [ %827, %825 ], [ null, %822 ]
  %835 = trunc i64 %833 to i32
  tail call void @_ZN5blink10MIDIAccess12SendMIDIDataEjPKhjN4base9TimeTicksE(%"class.blink::MIDIAccess"* %32, i32 %824, i8* %834, i32 %835, i64 %2) #5
  br label %836

836:                                              ; preds = %755, %832, %819
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10MIDIOutput4sendEN3WTF6VectorIjLj0ENS1_18PartitionAllocatorEEEdRNS_14ExceptionStateE(%"class.blink::MIDIOutput"*, %"class.WTF::Vector.295"* nocapture, double, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::Vector.295", align 8
  %6 = alloca %"class.blink::NotShared", align 8
  %7 = bitcast %"class.blink::MIDIOutput"* %0 to %"class.blink::MIDIPort"*
  %8 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8MIDIPort19GetExecutionContextEv(%"class.blink::MIDIPort"* %7) #5
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  br i1 %9, label %35, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector.295", %"class.WTF::Vector.295"* %5, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector.295", %"class.WTF::Vector.295"* %5, i64 0, i32 0, i32 0, i32 2
  %13 = bitcast %"class.WTF::Vector.295"* %1 to i64*
  %14 = bitcast %"class.WTF::Vector.295"* %5 to i64*
  store i64 0, i64* %14, align 8
  %15 = load i64, i64* %13, align 8
  %16 = bitcast %"class.WTF::Vector.295"* %5 to i64*
  store atomic i64 0, i64* %13 monotonic, align 8
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = getelementptr inbounds %"class.WTF::Vector.295", %"class.WTF::Vector.295"* %1, i64 0, i32 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %11, align 8
  store i32 0, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.295", %"class.WTF::Vector.295"* %1, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %12, align 4
  store i32 0, i32* %19, align 4
  %21 = call fastcc %"class.blink::DOMTypedArray"* @_ZN5blink12_GLOBAL__N_131ConvertUnsignedDataToUint8ArrayEN3WTF6VectorIjLj0ENS1_18PartitionAllocatorEEERNS_14ExceptionStateE(%"class.WTF::Vector.295"* nonnull %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %22 = getelementptr inbounds %"class.WTF::Vector.295", %"class.WTF::Vector.295"* %5, i64 0, i32 0, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = icmp eq i32* %23, null
  %25 = bitcast i32* %23 to i8*
  br i1 %24, label %31, label %26, !prof !4

26:                                               ; preds = %10
  %27 = load i32, i32* %12, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %30, label %29, !prof !2

29:                                               ; preds = %26
  store i32 0, i32* %12, align 4
  br label %30

30:                                               ; preds = %29, %26
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %25) #5
  store i32* null, i32** %22, align 8
  br label %31

31:                                               ; preds = %10, %30
  %32 = icmp eq %"class.blink::DOMTypedArray"* %21, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray"* %21, %"class.blink::DOMTypedArray"** %34, align 8
  call void @_ZN5blink10MIDIOutput4sendENS_9NotSharedINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEdRNS_14ExceptionStateE(%"class.blink::MIDIOutput"* %0, %"class.blink::NotShared"* nonnull %6, double %2, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %35

35:                                               ; preds = %33, %31, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::DOMTypedArray"* @_ZN5blink12_GLOBAL__N_131ConvertUnsignedDataToUint8ArrayEN3WTF6VectorIjLj0ENS1_18PartitionAllocatorEEERNS_14ExceptionStateE(%"class.WTF::Vector.295"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %3 = alloca %"class.WTF::StringAppend.2487", align 8
  %4 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %5 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringAppend", align 8
  %8 = alloca %"class.WTF::StringAppend.2487", align 8
  %9 = alloca %"class.WTF::StringAppend.2488", align 8
  %10 = getelementptr inbounds %"class.WTF::Vector.295", %"class.WTF::Vector.295"* %0, i64 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = tail call %"class.blink::DOMArrayBuffer"* @_ZN5blink14DOMArrayBuffer6CreateEmm(i64 %12, i64 1) #5
  %14 = bitcast %"class.blink::DOMArrayBuffer"* %13 to %"class.blink::DOMArrayBufferBase"*
  %15 = tail call %"class.blink::DOMTypedArray"* @_ZN5blink13DOMTypedArrayIhN2v810Uint8ArrayELb0EE6CreateEPNS_18DOMArrayBufferBaseEmm(%"class.blink::DOMArrayBufferBase"* %14, i64 0, i64 %12) #5
  %16 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %15, i64 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %17, i64 0, i32 2
  %19 = load i8, i8* %18, align 8, !range !3
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %15, i64 0, i32 0, i32 1
  %23 = load i8*, i8** %22, align 8
  br label %24

24:                                               ; preds = %2, %21
  %25 = phi i8* [ %23, %21 ], [ null, %2 ]
  %26 = load i32, i32* %10, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %420, label %28

28:                                               ; preds = %24, %410
  %29 = phi i64 [ %415, %410 ], [ 0, %24 ]
  %30 = trunc i64 %29 to i32
  %31 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.295"* %0, i32 %30) #5
  %32 = load i32, i32* %31, align 4
  %33 = icmp ugt i32 %32, 255
  br i1 %33, label %34, label %410

34:                                               ; preds = %28
  %35 = trunc i64 %29 to i32
  %36 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #5
  %37 = bitcast %"class.WTF::StringAppend"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %37) #5
  %38 = bitcast %"class.WTF::StringAppend.2487"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #5
  %39 = bitcast %"class.WTF::StringAppend.2488"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #5
  %40 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #5
  %41 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 11
  %42 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 2
  %43 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 3
  %44 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 32, i1 false) #5
  store i8* %41, i8** %42, align 8
  %45 = urem i32 %35, 10
  %46 = udiv i32 %35, 10
  %47 = trunc i32 %45 to i8
  %48 = or i8 %47, 48
  store i8 %48, i8* %41, align 1
  %49 = icmp ugt i32 %35, 9
  br i1 %49, label %50, label %65

50:                                               ; preds = %34
  %51 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 10
  store i8* %51, i8** %42, align 8
  %52 = urem i32 %46, 10
  %53 = trunc i32 %52 to i8
  %54 = or i8 %53, 48
  store i8 %54, i8* %51, align 2
  %55 = icmp ugt i32 %35, 99
  br i1 %55, label %56, label %63

56:                                               ; preds = %50
  %57 = udiv i32 %35, 100
  %58 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 9
  store i8* %58, i8** %42, align 8
  %59 = urem i32 %57, 10
  %60 = trunc i32 %59 to i8
  %61 = or i8 %60, 48
  store i8 %61, i8* %58, align 1
  %62 = icmp ugt i32 %35, 999
  br i1 %62, label %67, label %76

63:                                               ; preds = %50
  %64 = ptrtoint i8* %51 to i64
  br label %79

65:                                               ; preds = %34
  %66 = ptrtoint i8* %41 to i64
  br label %79

67:                                               ; preds = %56, %67
  %68 = phi i32 [ %70, %67 ], [ %57, %56 ]
  %69 = load i8*, i8** %42, align 8
  %70 = udiv i32 %68, 10
  %71 = getelementptr inbounds i8, i8* %69, i64 -1
  store i8* %71, i8** %42, align 8
  %72 = urem i32 %70, 10
  %73 = trunc i32 %72 to i8
  %74 = or i8 %73, 48
  store i8 %74, i8* %71, align 1
  %75 = icmp ugt i32 %68, 99
  br i1 %75, label %67, label %76

76:                                               ; preds = %67, %56
  %77 = bitcast i8** %42 to i64*
  %78 = load i64, i64* %77, align 8
  br label %79

79:                                               ; preds = %76, %63, %65
  %80 = phi i64 [ %66, %65 ], [ %78, %76 ], [ %64, %63 ]
  %81 = ptrtoint i8* %44 to i64
  %82 = sub i64 %81, %80
  %83 = trunc i64 %82 to i32
  store i32 %83, i32* %43, align 8
  %84 = inttoptr i64 %80 to i8*
  %85 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %84, i32 %83) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40) #5
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %162, label %87

87:                                               ; preds = %79
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %104

94:                                               ; preds = %87
  %95 = zext i32 %93 to i33
  %96 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %95, i33 1) #5
  %97 = extractvalue { i33, i1 } %96, 1
  %98 = extractvalue { i33, i1 } %96, 0
  %99 = icmp slt i33 %98, 0
  %100 = or i1 %97, %99
  br i1 %100, label %101, label %102, !prof !2

101:                                              ; preds = %94
  call void @llvm.trap() #5
  unreachable

102:                                              ; preds = %94
  %103 = trunc i33 %98 to i32
  store i32 %103, i32* %92, align 4
  br label %104

104:                                              ; preds = %102, %87
  %105 = phi i32 [ %103, %102 ], [ %93, %87 ]
  %106 = load atomic i32, i32* %88 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %119

109:                                              ; preds = %104
  %110 = zext i32 %105 to i33
  %111 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %110, i33 1) #5
  %112 = extractvalue { i33, i1 } %111, 1
  %113 = extractvalue { i33, i1 } %111, 0
  %114 = icmp slt i33 %113, 0
  %115 = or i1 %112, %114
  br i1 %115, label %116, label %117, !prof !2

116:                                              ; preds = %109
  call void @llvm.trap() #5
  unreachable

117:                                              ; preds = %109
  %118 = trunc i33 %113 to i32
  store i32 %118, i32* %92, align 4
  br label %119

119:                                              ; preds = %117, %104
  %120 = phi i32 [ %118, %117 ], [ %105, %104 ]
  %121 = load atomic i32, i32* %88 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %119
  %125 = add i32 %120, -1
  store i32 %125, i32* %92, align 4
  br label %126

126:                                              ; preds = %124, %119
  %127 = phi i32 [ %125, %124 ], [ %120, %119 ]
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #5
  br label %130

130:                                              ; preds = %126, %129
  %131 = load atomic i32, i32* %88 monotonic, align 4, !noalias !5
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = load i32, i32* %92, align 4
  br i1 %133, label %135, label %145

135:                                              ; preds = %130
  %136 = zext i32 %134 to i33
  %137 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %136, i33 1) #5
  %138 = extractvalue { i33, i1 } %137, 1
  %139 = extractvalue { i33, i1 } %137, 0
  %140 = icmp slt i33 %139, 0
  %141 = or i1 %138, %140
  br i1 %141, label %142, label %143, !prof !2

142:                                              ; preds = %135
  call void @llvm.trap() #5, !noalias !5
  unreachable

143:                                              ; preds = %135
  %144 = trunc i33 %139 to i32
  store i32 %144, i32* %92, align 4, !noalias !5
  br label %145

145:                                              ; preds = %130, %143
  %146 = phi i32 [ %144, %143 ], [ %134, %130 ]
  %147 = bitcast %"class.WTF::StringAppend.2488"* %9 to i64*
  store i64 ptrtoint ([20 x i8]* @.str.4 to i64), i64* %147, align 8, !alias.scope !5
  %148 = getelementptr inbounds %"class.WTF::StringAppend.2488", %"class.WTF::StringAppend.2488"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %85, %"class.WTF::StringImpl"** %148, align 8, !alias.scope !5
  %149 = load atomic i32, i32* %88 monotonic, align 4, !noalias !5
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %166

152:                                              ; preds = %145
  %153 = zext i32 %146 to i33
  %154 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %153, i33 1) #5
  %155 = extractvalue { i33, i1 } %154, 1
  %156 = extractvalue { i33, i1 } %154, 0
  %157 = icmp slt i33 %156, 0
  %158 = or i1 %155, %157
  br i1 %158, label %159, label %160, !prof !2

159:                                              ; preds = %152
  call void @llvm.trap() #5, !noalias !5
  unreachable

160:                                              ; preds = %152
  %161 = trunc i33 %156 to i32
  store i32 %161, i32* %92, align 4, !noalias !5
  br label %166

162:                                              ; preds = %79
  %163 = bitcast %"class.WTF::StringAppend.2488"* %9 to i64*
  store i64 ptrtoint ([20 x i8]* @.str.4 to i64), i64* %163, align 8, !alias.scope !5
  %164 = getelementptr inbounds %"class.WTF::StringAppend.2488", %"class.WTF::StringAppend.2488"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %164, align 8, !alias.scope !5
  %165 = getelementptr inbounds %"class.WTF::StringAppend.2488", %"class.WTF::StringAppend.2488"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %165, align 8, !alias.scope !5
  br label %178

166:                                              ; preds = %160, %145
  %167 = phi i32 [ %161, %160 ], [ %146, %145 ]
  %168 = getelementptr inbounds %"class.WTF::StringAppend.2488", %"class.WTF::StringAppend.2488"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %168, align 8, !alias.scope !5
  %169 = load atomic i32, i32* %88 monotonic, align 4, !noalias !5
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %174

172:                                              ; preds = %166
  %173 = add i32 %167, -1
  store i32 %173, i32* %92, align 4, !noalias !5
  br label %174

174:                                              ; preds = %172, %166
  %175 = phi i32 [ %173, %172 ], [ %167, %166 ]
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %174
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #5, !noalias !5
  br label %178

178:                                              ; preds = %162, %174, %177
  %179 = call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.295"* %0, i32 %35) #5
  %180 = load i32, i32* %179, align 4
  %181 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %181) #5
  %182 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 11
  %183 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 2
  %184 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 3
  %185 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %181, i8 -86, i64 32, i1 false) #5
  store i8* %182, i8** %183, align 8
  %186 = urem i32 %180, 10
  %187 = udiv i32 %180, 10
  %188 = trunc i32 %186 to i8
  %189 = or i8 %188, 48
  store i8 %189, i8* %182, align 1
  %190 = icmp ugt i32 %180, 9
  br i1 %190, label %191, label %206

191:                                              ; preds = %178
  %192 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 10
  store i8* %192, i8** %183, align 8
  %193 = urem i32 %187, 10
  %194 = trunc i32 %193 to i8
  %195 = or i8 %194, 48
  store i8 %195, i8* %192, align 2
  %196 = icmp ugt i32 %180, 99
  br i1 %196, label %197, label %204

197:                                              ; preds = %191
  %198 = udiv i32 %180, 100
  %199 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 9
  store i8* %199, i8** %183, align 8
  %200 = urem i32 %198, 10
  %201 = trunc i32 %200 to i8
  %202 = or i8 %201, 48
  store i8 %202, i8* %199, align 1
  %203 = icmp ugt i32 %180, 999
  br i1 %203, label %208, label %217

204:                                              ; preds = %191
  %205 = ptrtoint i8* %192 to i64
  br label %220

206:                                              ; preds = %178
  %207 = ptrtoint i8* %182 to i64
  br label %220

208:                                              ; preds = %197, %208
  %209 = phi i32 [ %211, %208 ], [ %198, %197 ]
  %210 = load i8*, i8** %183, align 8
  %211 = udiv i32 %209, 10
  %212 = getelementptr inbounds i8, i8* %210, i64 -1
  store i8* %212, i8** %183, align 8
  %213 = urem i32 %211, 10
  %214 = trunc i32 %213 to i8
  %215 = or i8 %214, 48
  store i8 %215, i8* %212, align 1
  %216 = icmp ugt i32 %209, 99
  br i1 %216, label %208, label %217

217:                                              ; preds = %208, %197
  %218 = bitcast i8** %183 to i64*
  %219 = load i64, i64* %218, align 8
  br label %220

220:                                              ; preds = %217, %204, %206
  %221 = phi i64 [ %207, %206 ], [ %219, %217 ], [ %205, %204 ]
  %222 = ptrtoint i8* %185 to i64
  %223 = sub i64 %222, %221
  %224 = trunc i64 %223 to i32
  store i32 %224, i32* %184, align 8
  %225 = inttoptr i64 %221 to i8*
  %226 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %225, i32 %224) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %181) #5
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.2487"* nonnull sret %8, %"class.WTF::StringAppend.2488"* nonnull dereferenceable(24) %9, %"class.WTF::StringImpl"* %226)
  %227 = bitcast %"class.WTF::StringAppend.2487"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %227)
  %228 = bitcast %"class.WTF::StringAppend.2487"* %8 to i64*
  %229 = load i64, i64* %228, align 8, !noalias !8
  %230 = bitcast %"class.WTF::StringAppend.2487"* %3 to i64*
  store i64 %229, i64* %230, align 8, !noalias !8
  %231 = getelementptr inbounds %"class.WTF::StringAppend.2487", %"class.WTF::StringAppend.2487"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %232 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %231, align 8, !noalias !8
  %233 = getelementptr inbounds %"class.WTF::StringAppend.2487", %"class.WTF::StringAppend.2487"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %232, %"class.WTF::StringImpl"** %233, align 8, !noalias !8
  %234 = icmp eq %"class.WTF::StringImpl"* %232, null
  br i1 %234, label %252, label %235

235:                                              ; preds = %220
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load atomic i32, i32* %236 monotonic, align 4
  %238 = and i32 %237, 2
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %252

240:                                              ; preds = %235
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 0
  %242 = load i32, i32* %241, align 4
  %243 = zext i32 %242 to i33
  %244 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %243, i33 1) #5
  %245 = extractvalue { i33, i1 } %244, 1
  %246 = extractvalue { i33, i1 } %244, 0
  %247 = icmp slt i33 %246, 0
  %248 = or i1 %245, %247
  br i1 %248, label %249, label %250, !prof !2

249:                                              ; preds = %240
  call void @llvm.trap() #5
  unreachable

250:                                              ; preds = %240
  %251 = trunc i33 %246 to i32
  store i32 %251, i32* %241, align 4
  br label %252

252:                                              ; preds = %250, %235, %220
  %253 = getelementptr inbounds %"class.WTF::StringAppend.2487", %"class.WTF::StringAppend.2487"* %3, i64 0, i32 0, i32 1
  %254 = getelementptr inbounds %"class.WTF::StringAppend.2487", %"class.WTF::StringAppend.2487"* %8, i64 0, i32 0, i32 1
  %255 = bitcast i8** %254 to i64*
  %256 = load i64, i64* %255, align 8, !noalias !8
  %257 = bitcast i8** %253 to i64*
  store i64 %256, i64* %257, align 8, !noalias !8
  %258 = getelementptr inbounds %"class.WTF::StringAppend.2487", %"class.WTF::StringAppend.2487"* %8, i64 0, i32 1, i32 0, i32 0
  %259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %258, align 8, !noalias !8
  %260 = getelementptr inbounds %"class.WTF::StringAppend.2487", %"class.WTF::StringAppend.2487"* %3, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %259, %"class.WTF::StringImpl"** %260, align 8, !noalias !8
  %261 = icmp eq %"class.WTF::StringImpl"* %259, null
  br i1 %261, label %279, label %262

262:                                              ; preds = %252
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = load atomic i32, i32* %263 monotonic, align 4
  %265 = and i32 %264, 2
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %279

267:                                              ; preds = %262
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 0
  %269 = load i32, i32* %268, align 4
  %270 = zext i32 %269 to i33
  %271 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %270, i33 1) #5
  %272 = extractvalue { i33, i1 } %271, 1
  %273 = extractvalue { i33, i1 } %271, 0
  %274 = icmp slt i33 %273, 0
  %275 = or i1 %272, %274
  br i1 %275, label %276, label %277, !prof !2

276:                                              ; preds = %267
  call void @llvm.trap() #5
  unreachable

277:                                              ; preds = %267
  %278 = trunc i33 %273 to i32
  store i32 %278, i32* %268, align 4
  br label %279

279:                                              ; preds = %252, %262, %277
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend"* nonnull %7, %"class.WTF::StringAppend.2487"* nonnull byval(%"class.WTF::StringAppend.2487") align 8 %3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0)) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %227)
  %280 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %7)
  %281 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %280, %"class.WTF::StringImpl"** %281, align 8
  %282 = bitcast %"class.blink::ExceptionState"* %1 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %283 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %282, align 8
  %284 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %283, i64 3
  %285 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %284, align 8
  call void %285(%"class.blink::ExceptionState"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %6) #5
  %286 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %281, align 8
  %287 = icmp eq %"class.WTF::StringImpl"* %286, null
  br i1 %287, label %301, label %288

288:                                              ; preds = %279
  %289 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %286, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = load atomic i32, i32* %289 monotonic, align 4
  %291 = and i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %286, i64 0, i32 0
  %294 = load i32, i32* %293, align 4
  br i1 %292, label %295, label %297

295:                                              ; preds = %288
  %296 = add i32 %294, -1
  store i32 %296, i32* %293, align 4
  br label %297

297:                                              ; preds = %295, %288
  %298 = phi i32 [ %296, %295 ], [ %294, %288 ]
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %301

300:                                              ; preds = %297
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %286) #5
  br label %301

301:                                              ; preds = %279, %297, %300
  %302 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %303 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %302, align 8
  %304 = icmp eq %"class.WTF::StringImpl"* %303, null
  br i1 %304, label %318, label %305

305:                                              ; preds = %301
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %307 = load atomic i32, i32* %306 monotonic, align 4
  %308 = and i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 0
  %311 = load i32, i32* %310, align 4
  br i1 %309, label %312, label %314

312:                                              ; preds = %305
  %313 = add i32 %311, -1
  store i32 %313, i32* %310, align 4
  br label %314

314:                                              ; preds = %312, %305
  %315 = phi i32 [ %313, %312 ], [ %311, %305 ]
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %318

317:                                              ; preds = %314
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %303) #5
  br label %318

318:                                              ; preds = %317, %314, %301
  %319 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %320 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %319, align 8
  %321 = icmp eq %"class.WTF::StringImpl"* %320, null
  br i1 %321, label %335, label %322

322:                                              ; preds = %318
  %323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %320, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %324 = load atomic i32, i32* %323 monotonic, align 4
  %325 = and i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %320, i64 0, i32 0
  %328 = load i32, i32* %327, align 4
  br i1 %326, label %329, label %331

329:                                              ; preds = %322
  %330 = add i32 %328, -1
  store i32 %330, i32* %327, align 4
  br label %331

331:                                              ; preds = %329, %322
  %332 = phi i32 [ %330, %329 ], [ %328, %322 ]
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %334, label %335

334:                                              ; preds = %331
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %320) #5
  br label %335

335:                                              ; preds = %318, %331, %334
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %258, align 8
  %337 = icmp eq %"class.WTF::StringImpl"* %336, null
  br i1 %337, label %351, label %338

338:                                              ; preds = %335
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %340 = load atomic i32, i32* %339 monotonic, align 4
  %341 = and i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 0
  %344 = load i32, i32* %343, align 4
  br i1 %342, label %345, label %347

345:                                              ; preds = %338
  %346 = add i32 %344, -1
  store i32 %346, i32* %343, align 4
  br label %347

347:                                              ; preds = %345, %338
  %348 = phi i32 [ %346, %345 ], [ %344, %338 ]
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %351

350:                                              ; preds = %347
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %336) #5
  br label %351

351:                                              ; preds = %350, %347, %335
  %352 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %231, align 8
  %353 = icmp eq %"class.WTF::StringImpl"* %352, null
  br i1 %353, label %367, label %354

354:                                              ; preds = %351
  %355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %352, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load atomic i32, i32* %355 monotonic, align 4
  %357 = and i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %352, i64 0, i32 0
  %360 = load i32, i32* %359, align 4
  br i1 %358, label %361, label %363

361:                                              ; preds = %354
  %362 = add i32 %360, -1
  store i32 %362, i32* %359, align 4
  br label %363

363:                                              ; preds = %361, %354
  %364 = phi i32 [ %362, %361 ], [ %360, %354 ]
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %366, label %367

366:                                              ; preds = %363
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %352) #5
  br label %367

367:                                              ; preds = %351, %363, %366
  %368 = getelementptr inbounds %"class.WTF::StringAppend.2488", %"class.WTF::StringAppend.2488"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %369 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %368, align 8
  %370 = icmp eq %"class.WTF::StringImpl"* %369, null
  br i1 %370, label %384, label %371

371:                                              ; preds = %367
  %372 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %369, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %373 = load atomic i32, i32* %372 monotonic, align 4
  %374 = and i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %369, i64 0, i32 0
  %377 = load i32, i32* %376, align 4
  br i1 %375, label %378, label %380

378:                                              ; preds = %371
  %379 = add i32 %377, -1
  store i32 %379, i32* %376, align 4
  br label %380

380:                                              ; preds = %378, %371
  %381 = phi i32 [ %379, %378 ], [ %377, %371 ]
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %383, label %384

383:                                              ; preds = %380
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %369) #5
  br label %384

384:                                              ; preds = %367, %380, %383
  br i1 %86, label %419, label %385

385:                                              ; preds = %384
  %386 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %387 = load atomic i32, i32* %386 monotonic, align 4
  %388 = and i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %391 = load i32, i32* %390, align 4
  br i1 %389, label %392, label %394

392:                                              ; preds = %385
  %393 = add i32 %391, -1
  store i32 %393, i32* %390, align 4
  br label %394

394:                                              ; preds = %392, %385
  %395 = phi i32 [ %393, %392 ], [ %391, %385 ]
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %397, label %399

397:                                              ; preds = %394
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #5
  %398 = load i32, i32* %390, align 4
  br label %399

399:                                              ; preds = %394, %397
  %400 = phi i32 [ %395, %394 ], [ %398, %397 ]
  %401 = load atomic i32, i32* %386 monotonic, align 4
  %402 = and i32 %401, 2
  %403 = icmp eq i32 %402, 0
  br i1 %403, label %404, label %406

404:                                              ; preds = %399
  %405 = add i32 %400, -1
  store i32 %405, i32* %390, align 4
  br label %406

406:                                              ; preds = %404, %399
  %407 = phi i32 [ %405, %404 ], [ %400, %399 ]
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %409, label %419

409:                                              ; preds = %406
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #5
  br label %419

410:                                              ; preds = %28
  %411 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.295"* %0, i32 %30) #5
  %412 = load i32, i32* %411, align 4
  %413 = trunc i32 %412 to i8
  %414 = getelementptr inbounds i8, i8* %25, i64 %29
  store i8 %413, i8* %414, align 1
  %415 = add nuw nsw i64 %29, 1
  %416 = load i32, i32* %10, align 4
  %417 = zext i32 %416 to i64
  %418 = icmp ult i64 %415, %417
  br i1 %418, label %28, label %420

419:                                              ; preds = %409, %406, %384
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %37) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #5
  br label %420

420:                                              ; preds = %410, %24, %419
  %421 = phi %"class.blink::DOMTypedArray"* [ null, %419 ], [ %15, %24 ], [ %15, %410 ]
  ret %"class.blink::DOMTypedArray"* %421
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10MIDIOutput4sendENS_9NotSharedINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEERNS_14ExceptionStateE(%"class.blink::MIDIOutput"*, %"class.blink::NotShared"* nocapture readonly, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::MIDIOutput"* %0 to %"class.blink::MIDIPort"*
  %5 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8MIDIPort19GetExecutionContextEv(%"class.blink::MIDIPort"* %4) #5
  %6 = icmp eq %"class.blink::ExecutionContext"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::DOMTypedArray"*, %"class.blink::DOMTypedArray"** %8, align 8
  %10 = tail call i64 @_ZN4base9TimeTicks3NowEv() #5
  tail call void @_ZN5blink10MIDIOutput12SendInternalEPNS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEN4base9TimeTicksERNS_14ExceptionStateE(%"class.blink::MIDIOutput"* %0, %"class.blink::DOMTypedArray"* %9, i64 %10, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  br label %11

11:                                               ; preds = %3, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10MIDIOutput4sendEN3WTF6VectorIjLj0ENS1_18PartitionAllocatorEEERNS_14ExceptionStateE(%"class.blink::MIDIOutput"*, %"class.WTF::Vector.295"* nocapture, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::Vector.295", align 8
  %5 = bitcast %"class.blink::MIDIOutput"* %0 to %"class.blink::MIDIPort"*
  %6 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8MIDIPort19GetExecutionContextEv(%"class.blink::MIDIPort"* %5) #5
  %7 = icmp eq %"class.blink::ExecutionContext"* %6, null
  br i1 %7, label %33, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::Vector.295", %"class.WTF::Vector.295"* %4, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::Vector.295", %"class.WTF::Vector.295"* %4, i64 0, i32 0, i32 0, i32 2
  %11 = bitcast %"class.WTF::Vector.295"* %1 to i64*
  %12 = bitcast %"class.WTF::Vector.295"* %4 to i64*
  store i64 0, i64* %12, align 8
  %13 = load i64, i64* %11, align 8
  %14 = bitcast %"class.WTF::Vector.295"* %4 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.295", %"class.WTF::Vector.295"* %1, i64 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %9, align 8
  store i32 0, i32* %15, align 4
  %17 = getelementptr inbounds %"class.WTF::Vector.295", %"class.WTF::Vector.295"* %1, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %10, align 4
  store i32 0, i32* %17, align 4
  %19 = call fastcc %"class.blink::DOMTypedArray"* @_ZN5blink12_GLOBAL__N_131ConvertUnsignedDataToUint8ArrayEN3WTF6VectorIjLj0ENS1_18PartitionAllocatorEEERNS_14ExceptionStateE(%"class.WTF::Vector.295"* nonnull %4, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %20 = getelementptr inbounds %"class.WTF::Vector.295", %"class.WTF::Vector.295"* %4, i64 0, i32 0, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = icmp eq i32* %21, null
  %23 = bitcast i32* %21 to i8*
  br i1 %22, label %29, label %24, !prof !4

24:                                               ; preds = %8
  %25 = load i32, i32* %10, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %28, label %27, !prof !2

27:                                               ; preds = %24
  store i32 0, i32* %10, align 4
  br label %28

28:                                               ; preds = %27, %24
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %23) #5
  store i32* null, i32** %20, align 8
  br label %29

29:                                               ; preds = %8, %28
  %30 = icmp eq %"class.blink::DOMTypedArray"* %19, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = call i64 @_ZN4base9TimeTicks3NowEv() #5
  call void @_ZN5blink10MIDIOutput12SendInternalEPNS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEN4base9TimeTicksERNS_14ExceptionStateE(%"class.blink::MIDIOutput"* %0, %"class.blink::DOMTypedArray"* nonnull %19, i64 %32, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  br label %33

33:                                               ; preds = %31, %29, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10MIDIOutput7DidOpenEb(%"class.blink::MIDIOutput"* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  br i1 %1, label %20, label %3

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.blink::MIDIOutput", %"class.blink::MIDIOutput"* %0, i64 0, i32 2, i32 0
  %5 = getelementptr inbounds %"class.blink::MIDIOutput", %"class.blink::MIDIOutput"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::MIDIOutput", %"class.blink::MIDIOutput"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  %12 = bitcast %"class.WTF::Vector.51"* %4 to i8**
  br i1 %11, label %17, label %13

13:                                               ; preds = %8
  %14 = load i8*, i8** %12, align 8
  %15 = zext i32 %10 to i64
  %16 = shl nuw nsw i64 %15, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %14, i64 %16) #5
  store i32 0, i32* %9, align 4
  br label %17

17:                                               ; preds = %13, %8
  %18 = load i8*, i8** %12, align 8
  %19 = bitcast %"class.WTF::Vector.51"* %4 to i64*
  store atomic i64 0, i64* %19 monotonic, align 8
  store i32 0, i32* %5, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %18) #5
  br label %20

20:                                               ; preds = %17, %3, %2
  %21 = getelementptr inbounds %"class.blink::MIDIOutput", %"class.blink::MIDIOutput"* %0, i64 0, i32 2, i32 0
  %22 = bitcast %"class.WTF::Vector.51"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  store atomic i64 0, i64* %22 monotonic, align 8
  %24 = getelementptr inbounds %"class.blink::MIDIOutput", %"class.blink::MIDIOutput"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 4
  store i32 0, i32* %24, align 4
  %26 = getelementptr inbounds %"class.blink::MIDIOutput", %"class.blink::MIDIOutput"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  store i32 0, i32* %26, align 4
  %28 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %20
  %31 = inttoptr i64 %23 to i8*
  %32 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %31) #5
  br label %33

33:                                               ; preds = %30, %20
  %34 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %33
  %37 = bitcast %"class.WTF::Vector.51"* %21 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %38) #5
  br label %40

40:                                               ; preds = %33, %36
  %41 = inttoptr i64 %23 to %"struct.std::__1::pair.54"*
  %42 = zext i32 %27 to i64
  %43 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %41, i64 %42
  %44 = icmp eq i32 %27, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::MIDIOutput", %"class.blink::MIDIOutput"* %0, i64 0, i32 0, i32 10, i32 0, i32 0
  %47 = getelementptr inbounds %"class.blink::MIDIOutput", %"class.blink::MIDIOutput"* %0, i64 0, i32 1
  br label %56

48:                                               ; preds = %74, %40
  %49 = icmp eq i32 %25, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %48
  %51 = inttoptr i64 %23 to i8*
  br i1 %44, label %54, label %52

52:                                               ; preds = %50
  %53 = shl nuw nsw i64 %42, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %51, i64 %53) #5
  br label %54

54:                                               ; preds = %50, %52
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %51) #5
  br label %55

55:                                               ; preds = %48, %54
  ret void

56:                                               ; preds = %45, %74
  %57 = phi %"struct.std::__1::pair.54"* [ %41, %45 ], [ %80, %74 ]
  %58 = load %"class.blink::MIDIAccess"*, %"class.blink::MIDIAccess"** %46, align 8
  %59 = load i32, i32* %47, align 4
  %60 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %57, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.blink::DOMTypedArray"*, %"class.blink::DOMTypedArray"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %61, i64 0, i32 0, i32 3, i32 0, i32 0
  %63 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %63, i64 0, i32 2
  %65 = load i8, i8* %64, align 8, !range !3
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %74

67:                                               ; preds = %56
  %68 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %61, i64 0, i32 0, i32 1
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %61, i64 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = icmp ult i64 %71, 4294967296
  br i1 %72, label %74, label %73, !prof !4

73:                                               ; preds = %67
  tail call void @llvm.trap() #5
  unreachable

74:                                               ; preds = %56, %67
  %75 = phi i64 [ %71, %67 ], [ 0, %56 ]
  %76 = phi i8* [ %69, %67 ], [ null, %56 ]
  %77 = trunc i64 %75 to i32
  %78 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %57, i64 0, i32 1, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  tail call void @_ZN5blink10MIDIAccess12SendMIDIDataEjPKhjN4base9TimeTicksE(%"class.blink::MIDIAccess"* %58, i32 %59, i8* %76, i32 %77, i64 %79) #5
  %80 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %57, i64 1
  %81 = icmp eq %"struct.std::__1::pair.54"* %80, %43
  br i1 %81, label %48, label %56
}

declare void @_ZN5blink10MIDIAccess12SendMIDIDataEjPKhjN4base9TimeTicksE(%"class.blink::MIDIAccess"*, i32, i8*, i32, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10MIDIOutput5TraceEPNS_7VisitorE(%"class.blink::MIDIOutput"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::MIDIOutput"* %0 to %"class.blink::MIDIPort"*
  tail call void @_ZNK5blink8MIDIPort5TraceEPNS_7VisitorE(%"class.blink::MIDIPort"* %3, %"class.blink::Visitor"* %1) #5
  %4 = getelementptr inbounds %"class.blink::MIDIOutput", %"class.blink::MIDIOutput"* %0, i64 0, i32 2
  %5 = bitcast %"class.blink::HeapVector.48"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  %8 = bitcast %"class.blink::HeapVector.48"* %4 to i8**
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %10 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, i64 11
  %12 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8** %8) #5
  br i1 %7, label %19, label %13

13:                                               ; preds = %2
  %14 = inttoptr i64 %6 to i8*
  %15 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, i64 5
  %18 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %17, align 8
  tail call void %18(%"class.blink::Visitor"* %1, i8* nonnull %14, i8* nonnull %14, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEEN3WTF12VectorTraitsISC_EEEEE5TraceEPNS_7VisitorEPKv) #5
  br label %19

19:                                               ; preds = %2, %13
  ret void
}

declare void @_ZNK5blink8MIDIPort5TraceEPNS_7VisitorE(%"class.blink::MIDIPort"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_NK5blink10MIDIOutput5TraceEPNS_7VisitorE(%"class.blink::MIDIOutput"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MIDIOutput", %"class.blink::MIDIOutput"* %0, i64 -1, i32 0, i32 5
  %4 = bitcast %"class.WTF::String"* %3 to %"class.blink::MIDIPort"*
  tail call void @_ZNK5blink8MIDIPort5TraceEPNS_7VisitorE(%"class.blink::MIDIPort"* %4, %"class.blink::Visitor"* %1) #5
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 21
  %6 = bitcast %"class.WTF::String"* %5 to i64*
  %7 = load atomic i64, i64* %6 monotonic, align 8
  %8 = icmp eq i64 %7, 0
  %9 = bitcast %"class.WTF::String"* %5 to i8**
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %11 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %11, i64 11
  %13 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8** %9) #5
  br i1 %8, label %20, label %14

14:                                               ; preds = %2
  %15 = inttoptr i64 %7 to i8*
  %16 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %17, i64 5
  %19 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %18, align 8
  tail call void %19(%"class.blink::Visitor"* %1, i8* nonnull %15, i8* nonnull %15, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEEN3WTF12VectorTraitsISC_EEEEE5TraceEPNS_7VisitorEPKv) #5
  br label %20

20:                                               ; preds = %2, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_NK5blink10MIDIOutput5TraceEPNS_7VisitorE(%"class.blink::MIDIOutput"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MIDIOutput", %"class.blink::MIDIOutput"* %0, i64 -1, i32 0, i32 4
  %4 = bitcast %"class.WTF::String"* %3 to %"class.blink::MIDIPort"*
  tail call void @_ZNK5blink8MIDIPort5TraceEPNS_7VisitorE(%"class.blink::MIDIPort"* %4, %"class.blink::Visitor"* %1) #5
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 21
  %6 = bitcast %"class.WTF::String"* %5 to i64*
  %7 = load atomic i64, i64* %6 monotonic, align 8
  %8 = icmp eq i64 %7, 0
  %9 = bitcast %"class.WTF::String"* %5 to i8**
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %11 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %11, i64 11
  %13 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8** %9) #5
  br i1 %8, label %20, label %14

14:                                               ; preds = %2
  %15 = inttoptr i64 %7 to i8*
  %16 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %17, i64 5
  %19 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %18, align 8
  tail call void %19(%"class.blink::Visitor"* %1, i8* nonnull %15, i8* nonnull %15, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEEN3WTF12VectorTraitsISC_EEEEE5TraceEPNS_7VisitorEPKv) #5
  br label %20

20:                                               ; preds = %2, %14
  ret void
}

declare void @_ZN5blink8MIDIPort4openEv(%"class.blink::MIDIPort"*) local_unnamed_addr #1

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8MIDIPort18HasPendingActivityEv(%"class.blink::MIDIPort"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #5
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink10MIDIOutput18GetWrapperTypeInfoEv(%"class.blink::MIDIOutput"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink10MIDIOutput18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8MIDIPort13InterfaceNameEv(%"class.blink::MIDIPort"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink18event_target_names9kMIDIPortE, align 8
  ret %"class.WTF::AtomicString"* %2
}

declare %"class.blink::Node"* @_ZN5blink11EventTarget6ToNodeEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink11EventTarget23RemoveAllEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

declare void @_ZN5blink8MIDIPort16ContextDestroyedEv(%"class.blink::MIDIPort"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_8MIDIPortEE18IsContextDestroyedEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 -9
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::MIDIPort"*
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8MIDIPort19GetExecutionContextEv(%"class.blink::MIDIPort"* %3) #5
  %5 = tail call zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %4) #5
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_8MIDIPortEE26DispatchHasPendingActivityEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 -9
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::MIDIPort"*
  %4 = tail call zeroext i1 @_ZNK5blink8MIDIPort18HasPendingActivityEv(%"class.blink::MIDIPort"* %3) #5
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv(%"class.blink::ExecutionContextLifecycleObserver"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn80_N5blink8MIDIPort16ContextDestroyedEv(%"class.blink::MIDIPort"*) unnamed_addr #0 align 2

declare void @_ZN5blink33ExecutionContextLifecycleObserver19SetExecutionContextEPNS_16ExecutionContextE(%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::ExecutionContext"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"*) unnamed_addr #4

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i8* @llvm.ptr.annotation.p0i8(i8*, i8*, i8*, i32) #5

; Function Attrs: nounwind
declare void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25EventTargetWithInlineDataD2Ev(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::EventTargetData"* %3 to i8*
  %5 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 261)
  %6 = bitcast i8* %5 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"* %6) #5
  %7 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0
  tail call void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"* %7) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25EventTargetWithInlineDataD0Ev(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE(%"class.blink::EventTargetWithInlineData"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::EventTargetData"* %3 to i8*
  %5 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 261)
  %6 = bitcast i8* %5 to %"class.blink::EventTargetData"*
  tail call void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"* %6, %"class.blink::Visitor"* %1) #5
  %7 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %7, %"class.blink::Visitor"* %1) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink11EventTarget18GetWrapperTypeInfoEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11EventTarget18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare %"class.blink::WindowPerformance"* @_ZN5blink20DOMWindowPerformance11performanceERNS_14LocalDOMWindowE(%"class.blink::LocalDOMWindow"* dereferenceable(904)) local_unnamed_addr #1

declare %"class.blink::WorkerPerformance"* @_ZN5blink28WorkerGlobalScopePerformance11performanceERNS_17WorkerGlobalScopeE(%"class.blink::WorkerGlobalScope"* dereferenceable(2376)) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.2487"* noalias sret, %"class.WTF::StringAppend.2488"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.2488", align 8
  %5 = bitcast %"class.WTF::StringAppend.2488"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.2488"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2488", %"class.WTF::StringAppend.2488"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2488", %"class.WTF::StringAppend.2488"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #5
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #5
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2488", %"class.WTF::StringAppend.2488"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.2488", %"class.WTF::StringAppend.2488"* %1, i64 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #5
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %41
  tail call void @llvm.trap() #5
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %54

53:                                               ; preds = %29
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.2487"* %0, %"class.WTF::StringAppend.2488"* nonnull byval(%"class.WTF::StringAppend.2488") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %66

54:                                               ; preds = %36, %51
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.2487"* %0, %"class.WTF::StringAppend.2488"* nonnull byval(%"class.WTF::StringAppend.2488") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %54
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i32 [ %61, %60 ], [ %59, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #5
  br label %66

66:                                               ; preds = %53, %62, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2511", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2511", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2511", align 8
  %5 = alloca i8*, align 8
  %6 = alloca i16*, align 8
  %7 = bitcast %"class.WTF::StringTypeAdapter.2511"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #5
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false) #5
  %9 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2511"* nonnull %4, i8* %9) #5
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = bitcast %"class.WTF::StringTypeAdapter.2511"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #5
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #5
  %15 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2511"* nonnull %3, i8* %15) #5
  %16 = bitcast %"class.WTF::StringTypeAdapter.2511"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #5
  %17 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #5
  %18 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2511"* nonnull %2, i8* %18) #5
  %19 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %23 = select i1 %21, %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"* %20
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #5
  br i1 %27, label %28, label %29

28:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #5
  br label %72

29:                                               ; preds = %1
  %30 = icmp eq %"class.WTF::StringImpl"* %11, null
  %31 = select i1 %30, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %11
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #5
  br i1 %35, label %72, label %36

36:                                               ; preds = %29
  %37 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #5
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %38 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %39 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %38, i8** nonnull dereferenceable(8) %5) #5
  %40 = load i8*, i8** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %40)
  %41 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %41, label %108, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %59

49:                                               ; preds = %42
  %50 = zext i32 %48 to i33
  %51 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #5
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !2

56:                                               ; preds = %49
  call void @llvm.trap() #5
  unreachable

57:                                               ; preds = %49
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %47, align 4
  br label %59

59:                                               ; preds = %42, %57
  %60 = phi i32 [ %58, %57 ], [ %48, %42 ]
  %61 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %62 = load atomic i32, i32* %43 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %67 = add i32 %60, -1
  store i32 %67, i32* %66, align 4
  br label %68

68:                                               ; preds = %65, %59
  %69 = phi i32 [ %67, %65 ], [ %60, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %108

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #5
  br label %108

72:                                               ; preds = %29, %28
  %73 = bitcast i16** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #5
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %6, align 8
  %74 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %75 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %74, i16** nonnull dereferenceable(8) %6) #5
  %76 = load i16*, i16** %6, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %76)
  %77 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %77, label %108, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %95

85:                                               ; preds = %78
  %86 = zext i32 %84 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #5
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !2

92:                                               ; preds = %85
  call void @llvm.trap() #5
  unreachable

93:                                               ; preds = %85
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %83, align 4
  br label %95

95:                                               ; preds = %78, %93
  %96 = phi i32 [ %94, %93 ], [ %84, %78 ]
  %97 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %98 = load atomic i32, i32* %79 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %103 = add i32 %96, -1
  store i32 %103, i32* %102, align 4
  br label %104

104:                                              ; preds = %101, %95
  %105 = phi i32 [ %103, %101 ], [ %96, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #5
  br label %108

108:                                              ; preds = %107, %104, %72, %71, %68, %36
  %109 = phi i8* [ %37, %36 ], [ %37, %68 ], [ %37, %71 ], [ %73, %72 ], [ %73, %104 ], [ %73, %107 ]
  %110 = phi i64 [ 0, %36 ], [ %61, %68 ], [ %61, %71 ], [ 0, %72 ], [ %97, %104 ], [ %97, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #5
  %111 = inttoptr i64 %110 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %111
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DOMArrayBuffer"* @_ZN5blink14DOMArrayBuffer6CreateEmm(i64, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::ArrayBufferContents", align 8
  %4 = alloca %"class.blink::ArrayBufferContents", align 8
  %5 = alloca %"class.blink::ArrayBufferContents", align 8
  %6 = alloca %"class.blink::ArrayBufferContents", align 8
  %7 = bitcast %"class.blink::ArrayBufferContents"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #5
  %8 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %5, i64 0, i32 0, i32 1
  %10 = bitcast %"class.blink::ArrayBufferContents"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  call void @_ZN5blink19ArrayBufferContentsC1EmmNS0_11SharingTypeENS0_20InitializationPolicyE(%"class.blink::ArrayBufferContents"* nonnull %5, i64 %0, i64 %1, i32 0, i32 0) #5
  %11 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %8, align 8
  %12 = icmp eq %"class.v8::BackingStore"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %11) #5
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18, !prof !2

16:                                               ; preds = %2, %13
  %17 = mul i64 %1, %0
  notail call fastcc void @_ZN12_GLOBAL__N_110OnNoMemoryEm(i64 %17) #10
  unreachable

18:                                               ; preds = %13
  %19 = bitcast %"class.blink::ArrayBufferContents"* %5 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.blink::ArrayBufferContents"* %6 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %6, i64 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::__shared_weak_count"** %9 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::__shared_weak_count"** %22 to i64*
  store i64 %24, i64* %25, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #5
  %26 = bitcast %"class.blink::ArrayBufferContents"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #5
  %27 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 40) #5
  %28 = bitcast i8* %27 to %"class.blink::DOMArrayBuffer"*
  %29 = bitcast %"class.blink::ArrayBufferContents"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 16, i1 false) #5
  %30 = bitcast %"class.blink::ArrayBufferContents"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 16, i1 false) #5
  %31 = bitcast i8* %27 to i32 (...)***
  %32 = getelementptr inbounds i8, i8* %27, i64 8
  %33 = bitcast i8* %32 to i64**
  store i64* null, i64** %33, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink18DOMArrayBufferBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %34 = getelementptr inbounds i8, i8* %27, i64 16
  %35 = bitcast i8* %34 to i64*
  store i64 %20, i64* %35, align 8
  %36 = getelementptr inbounds i8, i8* %27, i64 24
  %37 = bitcast i8* %36 to i64*
  store i64 %24, i64* %37, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 16, i1 false) #5
  %38 = getelementptr inbounds i8, i8* %27, i64 32
  store i8 0, i8* %38, align 8
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %3) #5
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink14DOMArrayBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #5
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %4) #5
  %39 = getelementptr inbounds i8, i8* %27, i64 -4
  %40 = bitcast i8* %39 to i16*
  %41 = load atomic i16, i16* %40 monotonic, align 2
  %42 = or i16 %41, 1
  store atomic i16 %42, i16* %40 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #5
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %6) #5
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #5
  ret %"class.blink::DOMArrayBuffer"* %28
}

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::DOMTypedArray"* @_ZN5blink13DOMTypedArrayIhN2v810Uint8ArrayELb0EE6CreateEPNS_18DOMArrayBufferBaseEmm(%"class.blink::DOMArrayBufferBase"*, i64, i64) local_unnamed_addr #0 align 2

declare void @_ZN5blink19ArrayBufferContentsC1EmmNS0_11SharingTypeENS0_20InitializationPolicyE(%"class.blink::ArrayBufferContents"*, i64, i64, i32, i32) unnamed_addr #1

; Function Attrs: noinline noreturn nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_110OnNoMemoryEm(i64) unnamed_addr #8 {
  tail call void @_ZN4base8internal28RunPartitionAllocOomCallbackEv() #5
  tail call void @_ZN4base27TerminateBecauseOutOfMemoryEm(i64 %0) #5
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !11
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !12
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"*) unnamed_addr #4

declare i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"*) local_unnamed_addr #1

declare void @_ZN4base8internal28RunPartitionAllocOomCallbackEv() local_unnamed_addr #1

declare void @_ZN4base27TerminateBecauseOutOfMemoryEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #5
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #5
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #5
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #5
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #3 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #5
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #5
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #5
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #5
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %21, i8* %22) #5
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #5
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #5
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #5
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #5
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #5
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #5
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18DOMArrayBufferBaseD2Ev(%"class.blink::DOMArrayBufferBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink18DOMArrayBufferBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %0, i64 0, i32 1
  tail call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* %3) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18DOMArrayBufferBaseD0Ev(%"class.blink::DOMArrayBufferBase"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Value"* @_ZN5blink18DOMArrayBufferBase4WrapEPNS_11ScriptStateE(%"class.blink::DOMArrayBufferBase"*, %"class.blink::ScriptState"*) unnamed_addr #0 comdat align 2 {
  ret %"class.v8::Value"* null
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.295"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.295", %"class.WTF::Vector.295"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #5
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #5
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #5
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #5
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  %23 = getelementptr inbounds %"class.WTF::Vector.295", %"class.WTF::Vector.295"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend"*, %"class.WTF::StringAppend.2487"* byval(%"class.WTF::StringAppend.2487") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.2487"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2487", %"class.WTF::StringAppend.2487"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #5
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #5
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2487", %"class.WTF::StringAppend.2487"* %1, i64 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.2487", %"class.WTF::StringAppend.2487"* %1, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #5
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  tail call void @llvm.trap() #5
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %57

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  store i8* %2, i8** %56, align 8
  br label %70

57:                                               ; preds = %38, %53
  %58 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  store i8* %2, i8** %58, align 8
  %59 = load atomic i32, i32* %39 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #5
  br label %70

70:                                               ; preds = %55, %69, %66
  br i1 %10, label %84, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #5
  br label %84

84:                                               ; preds = %70, %80, %83
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.2487"*, %"class.WTF::StringAppend.2488"* byval(%"class.WTF::StringAppend.2488") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.2488"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.2487"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2488", %"class.WTF::StringAppend.2488"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2487", %"class.WTF::StringAppend.2487"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #5
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #5
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %3, %11, %26
  %29 = getelementptr inbounds %"class.WTF::StringAppend.2487", %"class.WTF::StringAppend.2487"* %0, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2488", %"class.WTF::StringAppend.2488"* %1, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.2487", %"class.WTF::StringAppend.2487"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #5
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %43
  tail call void @llvm.trap() #5
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %36, %51
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %60 = add i32 %54, -1
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i32 [ %60, %58 ], [ %54, %53 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #5
  br label %65

65:                                               ; preds = %28, %61, %64
  br i1 %10, label %79, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #5
  br label %79

79:                                               ; preds = %65, %75, %78
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2511", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2511"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #5
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2511", %"class.WTF::StringTypeAdapter.2511"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2511"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2511"* nonnull %4, i8* %14) #5
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2487"* %9) #5
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #5
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2487"* %9) #5
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #5
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0), i8* %25, i8* %26) #5
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.14, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #5
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #5
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #5
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #5
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #5
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0), i8* %41, i8* %42) #5
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.14, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #5
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #5
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #5
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2513", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2511", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.2511"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.2511"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2511"* nonnull %4, i8* %9) #5
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2513"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #5
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2513", %"class.WTF::StringTypeAdapter.2513"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2513", %"class.WTF::StringTypeAdapter.2513"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #5
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.2513"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.2488"* %10, i8* %1) #5
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2513", %"class.WTF::StringTypeAdapter.2513"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2488"* %10) #5
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2514"* nonnull %30, i8* %33) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #5
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2487"* %5) #5
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2511"* nonnull %4, i8* %36) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #5
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2513", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2511", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.2511"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.2511"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2511"* nonnull %4, i8* %9) #5
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2513"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #5
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2513", %"class.WTF::StringTypeAdapter.2513"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2513", %"class.WTF::StringTypeAdapter.2513"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #5
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.2513"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.2488"* %10, i16* %1) #5
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2513", %"class.WTF::StringTypeAdapter.2513"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2488"* %10) #5
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2514"* nonnull %30, i16* %33) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #5
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2487"* %5) #5
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2511"* nonnull %4, i16* %36) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #5
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2511"*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2487"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2487", %"class.WTF::StringAppend.2487"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2487", %"class.WTF::StringAppend.2487"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2488"* %8) #5
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #5
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2488"* %8) #5
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #5
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0), i8* %26, i8* %27) #5
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.14, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #5
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #5
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #5
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #5
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #5
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0), i8* %41, i8* %42) #5
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.14, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #5
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #5
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #5
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2488"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2511", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2488", %"class.WTF::StringAppend.2488"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2511"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #5
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2511", %"class.WTF::StringTypeAdapter.2511"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.2488", %"class.WTF::StringAppend.2488"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2511"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2511"* nonnull %4, i8* %14) #5
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2489"* %9) #5
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #5
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2489"* %9) #5
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #5
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0), i8* %25, i8* %26) #5
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.14, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #5
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #5
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #5
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #5
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #5
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0), i8* %41, i8* %42) #5
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.14, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #5
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #5
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #5
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2489"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2511", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.2511"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #5
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2511", %"class.WTF::StringTypeAdapter.2511"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.2489", %"class.WTF::StringAppend.2489"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.2511"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2511"* nonnull %4, i8* %13) #5
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2489", %"class.WTF::StringAppend.2489"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #5
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #5
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0), i8* %30, i8* %31) #5
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.14, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #5
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #5
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #5
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #5
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #5
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0), i8* %45, i8* %46) #5
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.14, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #5
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #5
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #5
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2511"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2514"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.2488"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2511", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2513", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2511", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2488", %"class.WTF::StringAppend.2488"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2511"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #5
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2488", %"class.WTF::StringAppend.2488"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2511"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2511"* nonnull %5, i8* %10) #5
  %11 = bitcast %"class.WTF::StringTypeAdapter.2511"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #5
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2511", %"class.WTF::StringTypeAdapter.2511"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.2488", %"class.WTF::StringAppend.2488"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #5
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2511"* nonnull %3, i8* %14) #5
  %15 = bitcast %"class.WTF::StringTypeAdapter.2513"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #5
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2513", %"class.WTF::StringTypeAdapter.2513"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2513", %"class.WTF::StringTypeAdapter.2513"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.2488", %"class.WTF::StringAppend.2488"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #5
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2513"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2511"* nonnull %3, i8* %1) #5
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2513", %"class.WTF::StringTypeAdapter.2513"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2514"* nonnull %34, i8* %37) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #5
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2489"* %6) #5
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2511"* nonnull %5, i8* %40) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #5
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2511"*, i16*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2514"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.2488"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2511", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2513", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2511", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2488", %"class.WTF::StringAppend.2488"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2511"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #5
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2488", %"class.WTF::StringAppend.2488"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2511"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2511"* nonnull %5, i8* %10) #5
  %11 = bitcast %"class.WTF::StringTypeAdapter.2511"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #5
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2511", %"class.WTF::StringTypeAdapter.2511"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.2488", %"class.WTF::StringAppend.2488"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #5
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2511"* nonnull %3, i8* %14) #5
  %15 = bitcast %"class.WTF::StringTypeAdapter.2513"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #5
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2513", %"class.WTF::StringTypeAdapter.2513"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2513", %"class.WTF::StringTypeAdapter.2513"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.2488", %"class.WTF::StringAppend.2488"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #5
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2513"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2511"* nonnull %3, i16* %1) #5
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2513", %"class.WTF::StringTypeAdapter.2513"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2514"* nonnull %34, i16* %37) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #5
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2489"* %6) #5
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2511"* nonnull %5, i16* %40) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #5
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_116MessageValidator17GetPositionStringEv(%"class.blink::(anonymous namespace)::MessageValidator"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringAppend.2487", align 8
  %3 = alloca %"class.WTF::IntegerToStringConverter.2518", align 8
  %4 = alloca %"class.WTF::IntegerToStringConverter.2516", align 8
  %5 = alloca %"class.WTF::StringAppend", align 8
  %6 = alloca %"class.WTF::StringAppend.2487", align 8
  %7 = alloca %"class.WTF::StringAppend.2488", align 8
  %8 = bitcast %"class.WTF::StringAppend"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #5
  %9 = bitcast %"class.WTF::StringAppend.2487"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #5
  %10 = bitcast %"class.WTF::StringAppend.2488"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #5
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::MessageValidator", %"class.blink::(anonymous namespace)::MessageValidator"* %0, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2516", %"class.WTF::IntegerToStringConverter.2516"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 40, i1 false) #5
  %14 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2516", %"class.WTF::IntegerToStringConverter.2516"* %4, i64 0, i32 0, i64 24
  %15 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2516", %"class.WTF::IntegerToStringConverter.2516"* %4, i64 0, i32 1
  %16 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2516", %"class.WTF::IntegerToStringConverter.2516"* %4, i64 0, i32 0, i64 23
  store i8* %16, i8** %15, align 8
  %17 = urem i64 %12, 10
  %18 = udiv i64 %12, 10
  %19 = trunc i64 %17 to i8
  %20 = or i8 %19, 48
  store i8 %20, i8* %16, align 1
  %21 = icmp ugt i64 %12, 9
  br i1 %21, label %22, label %37

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2516", %"class.WTF::IntegerToStringConverter.2516"* %4, i64 0, i32 0, i64 22
  store i8* %23, i8** %15, align 8
  %24 = urem i64 %18, 10
  %25 = trunc i64 %24 to i8
  %26 = or i8 %25, 48
  store i8 %26, i8* %23, align 2
  %27 = icmp ugt i64 %12, 99
  br i1 %27, label %28, label %35

28:                                               ; preds = %22
  %29 = udiv i64 %12, 100
  %30 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2516", %"class.WTF::IntegerToStringConverter.2516"* %4, i64 0, i32 0, i64 21
  store i8* %30, i8** %15, align 8
  %31 = urem i64 %29, 10
  %32 = trunc i64 %31 to i8
  %33 = or i8 %32, 48
  store i8 %33, i8* %30, align 1
  %34 = icmp ugt i64 %12, 999
  br i1 %34, label %39, label %48

35:                                               ; preds = %22
  %36 = ptrtoint i8* %23 to i64
  br label %51

37:                                               ; preds = %1
  %38 = ptrtoint i8* %16 to i64
  br label %51

39:                                               ; preds = %28, %39
  %40 = phi i64 [ %42, %39 ], [ %29, %28 ]
  %41 = load i8*, i8** %15, align 8
  %42 = udiv i64 %40, 10
  %43 = getelementptr inbounds i8, i8* %41, i64 -1
  store i8* %43, i8** %15, align 8
  %44 = urem i64 %42, 10
  %45 = trunc i64 %44 to i8
  %46 = or i8 %45, 48
  store i8 %46, i8* %43, align 1
  %47 = icmp ugt i64 %40, 99
  br i1 %47, label %39, label %48

48:                                               ; preds = %39, %28
  %49 = bitcast i8** %15 to i64*
  %50 = load i64, i64* %49, align 8
  br label %51

51:                                               ; preds = %48, %35, %37
  %52 = phi i64 [ %38, %37 ], [ %50, %48 ], [ %36, %35 ]
  %53 = ptrtoint i8* %14 to i64
  %54 = sub i64 %53, %52
  %55 = trunc i64 %54 to i32
  %56 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2516", %"class.WTF::IntegerToStringConverter.2516"* %4, i64 0, i32 2
  store i32 %55, i32* %56, align 8
  %57 = inttoptr i64 %52 to i8*
  %58 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %57, i32 %55) #5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #5
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %135, label %60

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %77

67:                                               ; preds = %60
  %68 = zext i32 %66 to i33
  %69 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %68, i33 1) #5
  %70 = extractvalue { i33, i1 } %69, 1
  %71 = extractvalue { i33, i1 } %69, 0
  %72 = icmp slt i33 %71, 0
  %73 = or i1 %70, %72
  br i1 %73, label %74, label %75, !prof !2

74:                                               ; preds = %67
  call void @llvm.trap() #5
  unreachable

75:                                               ; preds = %67
  %76 = trunc i33 %71 to i32
  store i32 %76, i32* %65, align 4
  br label %77

77:                                               ; preds = %75, %60
  %78 = phi i32 [ %76, %75 ], [ %66, %60 ]
  %79 = load atomic i32, i32* %61 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %92

82:                                               ; preds = %77
  %83 = zext i32 %78 to i33
  %84 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %83, i33 1) #5
  %85 = extractvalue { i33, i1 } %84, 1
  %86 = extractvalue { i33, i1 } %84, 0
  %87 = icmp slt i33 %86, 0
  %88 = or i1 %85, %87
  br i1 %88, label %89, label %90, !prof !2

89:                                               ; preds = %82
  call void @llvm.trap() #5
  unreachable

90:                                               ; preds = %82
  %91 = trunc i33 %86 to i32
  store i32 %91, i32* %65, align 4
  br label %92

92:                                               ; preds = %90, %77
  %93 = phi i32 [ %91, %90 ], [ %78, %77 ]
  %94 = load atomic i32, i32* %61 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %92
  %98 = add i32 %93, -1
  store i32 %98, i32* %65, align 4
  br label %99

99:                                               ; preds = %97, %92
  %100 = phi i32 [ %98, %97 ], [ %93, %92 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #5
  br label %103

103:                                              ; preds = %99, %102
  %104 = load atomic i32, i32* %61 monotonic, align 4, !noalias !13
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = load i32, i32* %65, align 4
  br i1 %106, label %108, label %118

108:                                              ; preds = %103
  %109 = zext i32 %107 to i33
  %110 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %109, i33 1) #5
  %111 = extractvalue { i33, i1 } %110, 1
  %112 = extractvalue { i33, i1 } %110, 0
  %113 = icmp slt i33 %112, 0
  %114 = or i1 %111, %113
  br i1 %114, label %115, label %116, !prof !2

115:                                              ; preds = %108
  call void @llvm.trap() #5, !noalias !13
  unreachable

116:                                              ; preds = %108
  %117 = trunc i33 %112 to i32
  store i32 %117, i32* %65, align 4, !noalias !13
  br label %118

118:                                              ; preds = %103, %116
  %119 = phi i32 [ %117, %116 ], [ %107, %103 ]
  %120 = bitcast %"class.WTF::StringAppend.2488"* %7 to i64*
  store i64 ptrtoint ([10 x i8]* @.str.25 to i64), i64* %120, align 8, !alias.scope !13
  %121 = getelementptr inbounds %"class.WTF::StringAppend.2488", %"class.WTF::StringAppend.2488"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %121, align 8, !alias.scope !13
  %122 = load atomic i32, i32* %61 monotonic, align 4, !noalias !13
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %139

125:                                              ; preds = %118
  %126 = zext i32 %119 to i33
  %127 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %126, i33 1) #5
  %128 = extractvalue { i33, i1 } %127, 1
  %129 = extractvalue { i33, i1 } %127, 0
  %130 = icmp slt i33 %129, 0
  %131 = or i1 %128, %130
  br i1 %131, label %132, label %133, !prof !2

132:                                              ; preds = %125
  call void @llvm.trap() #5, !noalias !13
  unreachable

133:                                              ; preds = %125
  %134 = trunc i33 %129 to i32
  store i32 %134, i32* %65, align 4, !noalias !13
  br label %139

135:                                              ; preds = %51
  %136 = bitcast %"class.WTF::StringAppend.2488"* %7 to i64*
  store i64 ptrtoint ([10 x i8]* @.str.25 to i64), i64* %136, align 8, !alias.scope !13
  %137 = getelementptr inbounds %"class.WTF::StringAppend.2488", %"class.WTF::StringAppend.2488"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %137, align 8, !alias.scope !13
  %138 = getelementptr inbounds %"class.WTF::StringAppend.2488", %"class.WTF::StringAppend.2488"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %138, align 8, !alias.scope !13
  br label %151

139:                                              ; preds = %133, %118
  %140 = phi i32 [ %134, %133 ], [ %119, %118 ]
  %141 = getelementptr inbounds %"class.WTF::StringAppend.2488", %"class.WTF::StringAppend.2488"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %141, align 8, !alias.scope !13
  %142 = load atomic i32, i32* %61 monotonic, align 4, !noalias !13
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %147

145:                                              ; preds = %139
  %146 = add i32 %140, -1
  store i32 %146, i32* %65, align 4, !noalias !13
  br label %147

147:                                              ; preds = %145, %139
  %148 = phi i32 [ %146, %145 ], [ %140, %139 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #5, !noalias !13
  br label %151

151:                                              ; preds = %135, %147, %150
  %152 = getelementptr inbounds %"class.blink::(anonymous namespace)::MessageValidator", %"class.blink::(anonymous namespace)::MessageValidator"* %0, i64 0, i32 0
  %153 = load i8*, i8** %152, align 8
  %154 = load i64, i64* %11, align 8
  %155 = getelementptr inbounds i8, i8* %153, i64 %154
  %156 = load i8, i8* %155, align 1
  %157 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2518", %"class.WTF::IntegerToStringConverter.2518"* %3, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %157) #5
  %158 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2518", %"class.WTF::IntegerToStringConverter.2518"* %3, i64 0, i32 0, i64 5
  %159 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2518", %"class.WTF::IntegerToStringConverter.2518"* %3, i64 0, i32 2
  %160 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2518", %"class.WTF::IntegerToStringConverter.2518"* %3, i64 0, i32 3
  %161 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2518", %"class.WTF::IntegerToStringConverter.2518"* %3, i64 0, i32 0, i64 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %157, i8 -86, i64 24, i1 false) #5
  store i8* %158, i8** %159, align 8
  %162 = urem i8 %156, 10
  %163 = udiv i8 %156, 10
  %164 = or i8 %162, 48
  store i8 %164, i8* %158, align 1
  %165 = icmp ugt i8 %156, 9
  br i1 %165, label %166, label %175

166:                                              ; preds = %151
  %167 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2518", %"class.WTF::IntegerToStringConverter.2518"* %3, i64 0, i32 0, i64 4
  store i8* %167, i8** %159, align 8
  %168 = urem i8 %163, 10
  %169 = or i8 %168, 48
  store i8 %169, i8* %167, align 4
  %170 = icmp ugt i8 %156, 99
  br i1 %170, label %171, label %175

171:                                              ; preds = %166
  %172 = udiv i8 %156, 100
  %173 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2518", %"class.WTF::IntegerToStringConverter.2518"* %3, i64 0, i32 0, i64 3
  store i8* %173, i8** %159, align 8
  %174 = or i8 %172, 48
  store i8 %174, i8* %173, align 1
  br label %175

175:                                              ; preds = %151, %166, %171
  %176 = phi i8* [ %173, %171 ], [ %167, %166 ], [ %158, %151 ]
  %177 = ptrtoint i8* %176 to i64
  %178 = ptrtoint i8* %161 to i64
  %179 = sub i64 %178, %177
  %180 = trunc i64 %179 to i32
  store i32 %180, i32* %160, align 8
  %181 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %176, i32 %180) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %157) #5
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.2487"* nonnull sret %6, %"class.WTF::StringAppend.2488"* nonnull dereferenceable(24) %7, %"class.WTF::StringImpl"* %181)
  %182 = bitcast %"class.WTF::StringAppend.2487"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %182)
  %183 = bitcast %"class.WTF::StringAppend.2487"* %6 to i64*
  %184 = load i64, i64* %183, align 8, !noalias !16
  %185 = bitcast %"class.WTF::StringAppend.2487"* %2 to i64*
  store i64 %184, i64* %185, align 8, !noalias !16
  %186 = getelementptr inbounds %"class.WTF::StringAppend.2487", %"class.WTF::StringAppend.2487"* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %187 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %186, align 8, !noalias !16
  %188 = getelementptr inbounds %"class.WTF::StringAppend.2487", %"class.WTF::StringAppend.2487"* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %187, %"class.WTF::StringImpl"** %188, align 8, !noalias !16
  %189 = icmp eq %"class.WTF::StringImpl"* %187, null
  br i1 %189, label %207, label %190

190:                                              ; preds = %175
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = and i32 %192, 2
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %207

195:                                              ; preds = %190
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 0
  %197 = load i32, i32* %196, align 4
  %198 = zext i32 %197 to i33
  %199 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %198, i33 1) #5
  %200 = extractvalue { i33, i1 } %199, 1
  %201 = extractvalue { i33, i1 } %199, 0
  %202 = icmp slt i33 %201, 0
  %203 = or i1 %200, %202
  br i1 %203, label %204, label %205, !prof !2

204:                                              ; preds = %195
  call void @llvm.trap() #5
  unreachable

205:                                              ; preds = %195
  %206 = trunc i33 %201 to i32
  store i32 %206, i32* %196, align 4
  br label %207

207:                                              ; preds = %205, %190, %175
  %208 = getelementptr inbounds %"class.WTF::StringAppend.2487", %"class.WTF::StringAppend.2487"* %2, i64 0, i32 0, i32 1
  %209 = getelementptr inbounds %"class.WTF::StringAppend.2487", %"class.WTF::StringAppend.2487"* %6, i64 0, i32 0, i32 1
  %210 = bitcast i8** %209 to i64*
  %211 = load i64, i64* %210, align 8, !noalias !16
  %212 = bitcast i8** %208 to i64*
  store i64 %211, i64* %212, align 8, !noalias !16
  %213 = getelementptr inbounds %"class.WTF::StringAppend.2487", %"class.WTF::StringAppend.2487"* %6, i64 0, i32 1, i32 0, i32 0
  %214 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %213, align 8, !noalias !16
  %215 = getelementptr inbounds %"class.WTF::StringAppend.2487", %"class.WTF::StringAppend.2487"* %2, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %214, %"class.WTF::StringImpl"** %215, align 8, !noalias !16
  %216 = icmp eq %"class.WTF::StringImpl"* %214, null
  br i1 %216, label %234, label %217

217:                                              ; preds = %207
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load atomic i32, i32* %218 monotonic, align 4
  %220 = and i32 %219, 2
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %234

222:                                              ; preds = %217
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 0
  %224 = load i32, i32* %223, align 4
  %225 = zext i32 %224 to i33
  %226 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %225, i33 1) #5
  %227 = extractvalue { i33, i1 } %226, 1
  %228 = extractvalue { i33, i1 } %226, 0
  %229 = icmp slt i33 %228, 0
  %230 = or i1 %227, %229
  br i1 %230, label %231, label %232, !prof !2

231:                                              ; preds = %222
  call void @llvm.trap() #5
  unreachable

232:                                              ; preds = %222
  %233 = trunc i33 %228 to i32
  store i32 %233, i32* %223, align 4
  br label %234

234:                                              ; preds = %207, %217, %232
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend"* nonnull %5, %"class.WTF::StringAppend.2487"* nonnull byval(%"class.WTF::StringAppend.2487") align 8 %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0)) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %182)
  %235 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %5)
  %236 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %236, align 8
  %238 = icmp eq %"class.WTF::StringImpl"* %237, null
  br i1 %238, label %252, label %239

239:                                              ; preds = %234
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load atomic i32, i32* %240 monotonic, align 4
  %242 = and i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 0
  %245 = load i32, i32* %244, align 4
  br i1 %243, label %246, label %248

246:                                              ; preds = %239
  %247 = add i32 %245, -1
  store i32 %247, i32* %244, align 4
  br label %248

248:                                              ; preds = %246, %239
  %249 = phi i32 [ %247, %246 ], [ %245, %239 ]
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %252

251:                                              ; preds = %248
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %237) #5
  br label %252

252:                                              ; preds = %251, %248, %234
  %253 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %254 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %253, align 8
  %255 = icmp eq %"class.WTF::StringImpl"* %254, null
  br i1 %255, label %269, label %256

256:                                              ; preds = %252
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %258 = load atomic i32, i32* %257 monotonic, align 4
  %259 = and i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 0
  %262 = load i32, i32* %261, align 4
  br i1 %260, label %263, label %265

263:                                              ; preds = %256
  %264 = add i32 %262, -1
  store i32 %264, i32* %261, align 4
  br label %265

265:                                              ; preds = %263, %256
  %266 = phi i32 [ %264, %263 ], [ %262, %256 ]
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %268, label %269

268:                                              ; preds = %265
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %254) #5
  br label %269

269:                                              ; preds = %252, %265, %268
  %270 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %213, align 8
  %271 = icmp eq %"class.WTF::StringImpl"* %270, null
  br i1 %271, label %285, label %272

272:                                              ; preds = %269
  %273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %274 = load atomic i32, i32* %273 monotonic, align 4
  %275 = and i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 0
  %278 = load i32, i32* %277, align 4
  br i1 %276, label %279, label %281

279:                                              ; preds = %272
  %280 = add i32 %278, -1
  store i32 %280, i32* %277, align 4
  br label %281

281:                                              ; preds = %279, %272
  %282 = phi i32 [ %280, %279 ], [ %278, %272 ]
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %285

284:                                              ; preds = %281
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %270) #5
  br label %285

285:                                              ; preds = %284, %281, %269
  %286 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %186, align 8
  %287 = icmp eq %"class.WTF::StringImpl"* %286, null
  br i1 %287, label %301, label %288

288:                                              ; preds = %285
  %289 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %286, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = load atomic i32, i32* %289 monotonic, align 4
  %291 = and i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %286, i64 0, i32 0
  %294 = load i32, i32* %293, align 4
  br i1 %292, label %295, label %297

295:                                              ; preds = %288
  %296 = add i32 %294, -1
  store i32 %296, i32* %293, align 4
  br label %297

297:                                              ; preds = %295, %288
  %298 = phi i32 [ %296, %295 ], [ %294, %288 ]
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %301

300:                                              ; preds = %297
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %286) #5
  br label %301

301:                                              ; preds = %285, %297, %300
  %302 = getelementptr inbounds %"class.WTF::StringAppend.2488", %"class.WTF::StringAppend.2488"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %303 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %302, align 8
  %304 = icmp eq %"class.WTF::StringImpl"* %303, null
  br i1 %304, label %318, label %305

305:                                              ; preds = %301
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %307 = load atomic i32, i32* %306 monotonic, align 4
  %308 = and i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 0
  %311 = load i32, i32* %310, align 4
  br i1 %309, label %312, label %314

312:                                              ; preds = %305
  %313 = add i32 %311, -1
  store i32 %313, i32* %310, align 4
  br label %314

314:                                              ; preds = %312, %305
  %315 = phi i32 [ %313, %312 ], [ %311, %305 ]
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %318

317:                                              ; preds = %314
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %303) #5
  br label %318

318:                                              ; preds = %301, %314, %317
  br i1 %59, label %344, label %319

319:                                              ; preds = %318
  %320 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %321 = load atomic i32, i32* %320 monotonic, align 4
  %322 = and i32 %321, 2
  %323 = icmp eq i32 %322, 0
  %324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %325 = load i32, i32* %324, align 4
  br i1 %323, label %326, label %328

326:                                              ; preds = %319
  %327 = add i32 %325, -1
  store i32 %327, i32* %324, align 4
  br label %328

328:                                              ; preds = %326, %319
  %329 = phi i32 [ %327, %326 ], [ %325, %319 ]
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %331, label %333

331:                                              ; preds = %328
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #5
  %332 = load i32, i32* %324, align 4
  br label %333

333:                                              ; preds = %328, %331
  %334 = phi i32 [ %329, %328 ], [ %332, %331 ]
  %335 = load atomic i32, i32* %320 monotonic, align 4
  %336 = and i32 %335, 2
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %338, label %340

338:                                              ; preds = %333
  %339 = add i32 %334, -1
  store i32 %339, i32* %324, align 4
  br label %340

340:                                              ; preds = %338, %333
  %341 = phi i32 [ %339, %338 ], [ %334, %333 ]
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %340
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #5
  br label %344

344:                                              ; preds = %318, %340, %343
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #5
  ret %"class.WTF::StringImpl"* %235
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend.2489"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2511", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2513", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2511", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2513", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.2511", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.2511"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #5
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2489", %"class.WTF::StringAppend.2489"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #5
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2511"* nonnull %6, i8* %11) #5
  %12 = getelementptr inbounds %"class.WTF::StringAppend.2489", %"class.WTF::StringAppend.2489"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #5
  br i1 %20, label %82, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #5
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2489"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #5
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter.2511"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #5
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2511", %"class.WTF::StringTypeAdapter.2511"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false) #5
  %28 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2511"* nonnull %4, i8* %28) #5
  %29 = bitcast %"class.WTF::StringTypeAdapter.2513"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #5
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2513", %"class.WTF::StringTypeAdapter.2513"* %5, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2513", %"class.WTF::StringTypeAdapter.2513"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false) #5
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %21
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %42

36:                                               ; preds = %21
  %37 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  br label %42

42:                                               ; preds = %34, %36
  %43 = phi i8* [ null, %34 ], [ %41, %36 ]
  %44 = phi i64 [ %35, %34 ], [ %37, %36 ]
  %45 = phi i32 [ 0, %34 ], [ %39, %36 ]
  %46 = bitcast %"class.WTF::StringTypeAdapter.2513"* %5 to i64*
  store i64 %44, i64* %46, align 8
  store i8* %43, i8** %30, align 8
  store i32 %45, i32* %31, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2511"* nonnull %4, i8* %25) #5
  %47 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2513", %"class.WTF::StringTypeAdapter.2513"* %5, i64 0, i32 0
  %48 = load i32, i32* %27, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %25, i64 %49
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2514"* nonnull %47, i8* %50) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #5
  %51 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %51, label %143, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %69

59:                                               ; preds = %52
  %60 = zext i32 %58 to i33
  %61 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #5
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !2

66:                                               ; preds = %59
  call void @llvm.trap() #5
  unreachable

67:                                               ; preds = %59
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %57, align 4
  br label %69

69:                                               ; preds = %52, %67
  %70 = phi i32 [ %68, %67 ], [ %58, %52 ]
  %71 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %72 = load atomic i32, i32* %53 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %77 = add i32 %70, -1
  store i32 %77, i32* %76, align 4
  br label %78

78:                                               ; preds = %75, %69
  %79 = phi i32 [ %77, %75 ], [ %70, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %143

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #5
  br label %143

82:                                               ; preds = %1
  %83 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #5
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %84 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2489"* %0)
  %85 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %84, i16** nonnull dereferenceable(8) %8) #5
  %86 = load i16*, i16** %8, align 8
  %87 = bitcast %"class.WTF::StringTypeAdapter.2511"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #5
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2511", %"class.WTF::StringTypeAdapter.2511"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 16, i1 false) #5
  %89 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2511"* nonnull %2, i8* %89) #5
  %90 = bitcast %"class.WTF::StringTypeAdapter.2513"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #5
  %91 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2513", %"class.WTF::StringTypeAdapter.2513"* %3, i64 0, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2513", %"class.WTF::StringTypeAdapter.2513"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 24, i1 false) #5
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %82
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %103

97:                                               ; preds = %82
  %98 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 1
  %102 = bitcast %"class.WTF::StringImpl"* %101 to i8*
  br label %103

103:                                              ; preds = %95, %97
  %104 = phi i8* [ null, %95 ], [ %102, %97 ]
  %105 = phi i64 [ %96, %95 ], [ %98, %97 ]
  %106 = phi i32 [ 0, %95 ], [ %100, %97 ]
  %107 = bitcast %"class.WTF::StringTypeAdapter.2513"* %3 to i64*
  store i64 %105, i64* %107, align 8
  store i8* %104, i8** %91, align 8
  store i32 %106, i32* %92, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2511"* nonnull %2, i16* %86) #5
  %108 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2513", %"class.WTF::StringTypeAdapter.2513"* %3, i64 0, i32 0
  %109 = load i32, i32* %88, align 8
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i16, i16* %86, i64 %110
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2514"* nonnull %108, i16* %111) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #5
  %112 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %112, label %143, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %130

120:                                              ; preds = %113
  %121 = zext i32 %119 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #5
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !2

127:                                              ; preds = %120
  call void @llvm.trap() #5
  unreachable

128:                                              ; preds = %120
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %118, align 4
  br label %130

130:                                              ; preds = %113, %128
  %131 = phi i32 [ %129, %128 ], [ %119, %113 ]
  %132 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %133 = load atomic i32, i32* %114 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %138 = add i32 %131, -1
  store i32 %138, i32* %137, align 4
  br label %139

139:                                              ; preds = %136, %130
  %140 = phi i32 [ %138, %136 ], [ %131, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #5
  br label %143

143:                                              ; preds = %142, %139, %103, %81, %78, %42
  %144 = phi i8* [ %22, %42 ], [ %22, %78 ], [ %22, %81 ], [ %83, %103 ], [ %83, %139 ], [ %83, %142 ]
  %145 = phi i64 [ 0, %42 ], [ %71, %78 ], [ %71, %81 ], [ 0, %103 ], [ %132, %139 ], [ %132, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #5
  %146 = inttoptr i64 %145 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %146
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIN5blink6MemberINS3_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEELj0ENS3_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.51"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.51"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.51", %"class.WTF::Vector.51"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.51"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.51", %"class.WTF::Vector.51"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #5
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #5
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEEEEmm(i64 %14) #5
  %16 = lshr i64 %15, 4
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEEN3WTF12VectorTraitsISC_EEEEE4CallEm(i64 %16) #5
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.51", %"class.WTF::Vector.51"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.51", %"class.WTF::Vector.51"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"struct.std::__1::pair.54"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"struct.std::__1::pair.54"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.51"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 4
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #5
  %33 = bitcast %"class.WTF::Vector.51"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #5
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #5
  %42 = bitcast %"class.WTF::Vector.51"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.51", %"class.WTF::Vector.51"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #5
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 8388608
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #5
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 8388608) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.27, i64 0, i64 0), i8* %11, i8* %12) #5
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.28, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #5
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #5
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  %20 = shl i64 %0, 4
  ret i64 %20
}

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 32
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv) #5
  br label %13

13:                                               ; preds = %2, %7
  %14 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %14, %"class.blink::Visitor"* %0) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEEN3WTF12VectorTraitsISC_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #5
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0), i8* %11, i8* %12) #5
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.30, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #5
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #5
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink17HeapVectorBackingINSt3__14pairINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEEN3WTF12VectorTraitsISB_EEE14AllocateObjectISF_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINSt3__14pairINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEEN3WTF12VectorTraitsISB_EEE14AllocateObjectISF_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #5
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #5
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #5
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEEN3WTF12VectorTraitsISC_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEEN3WTF12VectorTraitsISC_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEEN3WTF12VectorTraitsISC_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #5
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([285 x i8], [285 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINSt3__14pairINS1_6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEENS_12VectorTraitsISD_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEEN3WTF12VectorTraitsISC_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEEN3WTF12VectorTraitsISC_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #5
  br i1 %28, label %68, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"struct.std::__1::pair.54"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !2

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = lshr i64 %49, 4
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %68, label %52

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %54

54:                                               ; preds = %65, %52
  %55 = phi i64 [ 0, %52 ], [ %66, %65 ]
  %56 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %30, i64 %55
  %57 = bitcast %"struct.std::__1::pair.54"* %56 to i64*
  %58 = load atomic i64, i64* %57 monotonic, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %54
  %61 = inttoptr i64 %58 to i8*
  %62 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %63 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %62, i64 5
  %64 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, align 8
  tail call void %64(%"class.blink::Visitor"* %0, i8* nonnull %61, i8* nonnull %61, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEE5TraceEPNS_7VisitorEPKv) #5
  br label %65

65:                                               ; preds = %60, %54
  %66 = add nuw nsw i64 %55, 1
  %67 = icmp eq i64 %66, %50
  br i1 %67, label %68, label %54

68:                                               ; preds = %65, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINSt3__14pairINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEEN3WTF12VectorTraitsISC_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIN5blink6MemberINS3_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEELj0ENS3_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.51"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.51", %"class.WTF::Vector.51"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.51", %"class.WTF::Vector.51"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %8, align 8
  %10 = icmp eq %"struct.std::__1::pair.54"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEEEEmm(i64 %11) #5
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 4
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEEN3WTF12VectorTraitsISC_EEEEE4CallEm(i64 %14) #5
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.51"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #5
  br label %59

24:                                               ; preds = %7
  %25 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %8, align 8
  %26 = icmp eq %"struct.std::__1::pair.54"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"struct.std::__1::pair.54"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #5
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 4
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #5
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #5
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #5
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.32, i64 0, i64 0)) #5
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #5
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorINSt3__14pairIN5blink6MemberINS3_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN4base9TimeTicksEEELj0ENS3_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.51"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noinline noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind }
attributes #10 = { noreturn }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!7 = distinct !{!7, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!10 = distinct !{!10, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!11 = !{i32 -2142722834}
!12 = !{i32 -2142722813}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!15 = distinct !{!15, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!18 = distinct !{!18, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
