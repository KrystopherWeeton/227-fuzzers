; ModuleID = '../../third_party/skia/src/core/SkMaskCache.cpp'
source_filename = "../../third_party/skia/src/core/SkMaskCache.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.(anonymous namespace)::RRectBlurKey" = type <{ %"struct.SkResourceCache::Key", float, i32, %class.SkRRect, [4 x i8] }>
%"struct.SkResourceCache::Key" = type { i32, i32, i32, i32, i8* }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%class.SkCachedData = type <{ i32 (...)**, %class.SkMutex, %union.anon, i8*, i64, i32, i32, i8, i8, [6 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%union.anon = type { %class.SkDiscardableMemory* }
%class.SkDiscardableMemory = type opaque
%struct.SkMask = type <{ i8*, %struct.SkIRect, i32, i8, [3 x i8] }>
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkResourceCache = type { %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"*, %"class.SkResourceCache::Hash"*, %class.SkDiscardableMemory* (i64)*, i64, i64, i64, i32, [4 x i8], %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox" }
%"struct.SkResourceCache::Rec" = type { i32 (...)**, %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"* }
%"class.SkResourceCache::Hash" = type opaque
%"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray = type { %"struct.SkResourceCache::PurgeSharedIDMessage"*, i64 }
%"struct.SkResourceCache::PurgeSharedIDMessage" = type { i64 }
%struct.MaskValue = type { %struct.SkMask, %class.SkCachedData* }
%"struct.(anonymous namespace)::RectsBlurKey" = type { %"struct.SkResourceCache::Key", float, i32, [4 x %struct.SkSize] }
%struct.SkSize = type { float, float }
%"struct.(anonymous namespace)::RRectBlurRec" = type { %"struct.SkResourceCache::Rec", %"struct.(anonymous namespace)::RRectBlurKey", %struct.MaskValue }
%"struct.(anonymous namespace)::RectsBlurRec" = type { %"struct.SkResourceCache::Rec", %"struct.(anonymous namespace)::RectsBlurKey", %struct.MaskValue }

$_ZN15SkResourceCache3Rec11canBePurgedEv = comdat any

$_ZN15SkResourceCache3Rec14postAddInstallEPv = comdat any

@__const._ZN11SkMaskCache3AddEf11SkBlurStyleRK7SkRRectRK6SkMaskP12SkCachedDataP15SkResourceCache.key = private unnamed_addr constant %"struct.(anonymous namespace)::RRectBlurKey" <{ %"struct.SkResourceCache::Key" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8* inttoptr (i64 -6148914691236517206 to i8*) }, float 0xFFFFFFFFE0000000, i32 -1431655766, %class.SkRRect { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x %struct.SkPoint] [%struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }], i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZN12_GLOBAL__N_127gRRectBlurKeyNamespaceLabelE = internal global i32 0, align 4
@_ZTVN12_GLOBAL__N_112RRectBlurRecE = internal unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.(anonymous namespace)::RRectBlurRec"*)* @_ZN12_GLOBAL__N_112RRectBlurRecD2Ev to i8*), i8* bitcast (void (%"struct.(anonymous namespace)::RRectBlurRec"*)* @_ZN12_GLOBAL__N_112RRectBlurRecD0Ev to i8*), i8* bitcast (%"struct.SkResourceCache::Key"* (%"struct.(anonymous namespace)::RRectBlurRec"*)* @_ZNK12_GLOBAL__N_112RRectBlurRec6getKeyEv to i8*), i8* bitcast (i64 (%"struct.(anonymous namespace)::RRectBlurRec"*)* @_ZNK12_GLOBAL__N_112RRectBlurRec9bytesUsedEv to i8*), i8* bitcast (i1 (%"struct.SkResourceCache::Rec"*)* @_ZN15SkResourceCache3Rec11canBePurgedEv to i8*), i8* bitcast (void (%"struct.SkResourceCache::Rec"*, i8*)* @_ZN15SkResourceCache3Rec14postAddInstallEPv to i8*), i8* bitcast (i8* (%"struct.(anonymous namespace)::RRectBlurRec"*)* @_ZNK12_GLOBAL__N_112RRectBlurRec11getCategoryEv to i8*), i8* bitcast (%class.SkDiscardableMemory* (%"struct.(anonymous namespace)::RRectBlurRec"*)* @_ZNK12_GLOBAL__N_112RRectBlurRec30diagnostic_only_getDiscardableEv to i8*)] }, align 8
@.str = private unnamed_addr constant [11 x i8] c"rrect-blur\00", align 1
@_ZN12_GLOBAL__N_127gRectsBlurKeyNamespaceLabelE = internal global i32 0, align 4
@_ZTVN12_GLOBAL__N_112RectsBlurRecE = internal unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.(anonymous namespace)::RectsBlurRec"*)* @_ZN12_GLOBAL__N_112RectsBlurRecD2Ev to i8*), i8* bitcast (void (%"struct.(anonymous namespace)::RectsBlurRec"*)* @_ZN12_GLOBAL__N_112RectsBlurRecD0Ev to i8*), i8* bitcast (%"struct.SkResourceCache::Key"* (%"struct.(anonymous namespace)::RectsBlurRec"*)* @_ZNK12_GLOBAL__N_112RectsBlurRec6getKeyEv to i8*), i8* bitcast (i64 (%"struct.(anonymous namespace)::RectsBlurRec"*)* @_ZNK12_GLOBAL__N_112RectsBlurRec9bytesUsedEv to i8*), i8* bitcast (i1 (%"struct.SkResourceCache::Rec"*)* @_ZN15SkResourceCache3Rec11canBePurgedEv to i8*), i8* bitcast (void (%"struct.SkResourceCache::Rec"*, i8*)* @_ZN15SkResourceCache3Rec14postAddInstallEPv to i8*), i8* bitcast (i8* (%"struct.(anonymous namespace)::RectsBlurRec"*)* @_ZNK12_GLOBAL__N_112RectsBlurRec11getCategoryEv to i8*), i8* bitcast (%class.SkDiscardableMemory* (%"struct.(anonymous namespace)::RectsBlurRec"*)* @_ZNK12_GLOBAL__N_112RectsBlurRec30diagnostic_only_getDiscardableEv to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [11 x i8] c"rects-blur\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkCachedData* @_ZN11SkMaskCache10FindAndRefEf11SkBlurStyleRK7SkRRectP6SkMaskP15SkResourceCache(float, i32, %class.SkRRect* nocapture readonly dereferenceable(52), %struct.SkMask* nocapture, %class.SkResourceCache*) local_unnamed_addr #0 align 2 {
  %6 = alloca %struct.MaskValue, align 8
  %7 = alloca %"struct.(anonymous namespace)::RRectBlurKey", align 8
  %8 = bitcast %struct.MaskValue* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #8
  %9 = getelementptr inbounds %struct.MaskValue, %struct.MaskValue* %6, i64 0, i32 0, i32 1
  %10 = bitcast %struct.SkIRect* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %11 = getelementptr inbounds %struct.MaskValue, %struct.MaskValue* %6, i64 0, i32 0, i32 0
  store i8* null, i8** %11, align 8
  %12 = bitcast %"struct.(anonymous namespace)::RRectBlurKey"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %12) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 bitcast (%"struct.(anonymous namespace)::RRectBlurKey"* @__const._ZN11SkMaskCache3AddEf11SkBlurStyleRK7SkRRectRK6SkMaskP12SkCachedDataP15SkResourceCache.key to i8*), i64 88, i1 false)
  %13 = getelementptr inbounds %"struct.(anonymous namespace)::RRectBlurKey", %"struct.(anonymous namespace)::RRectBlurKey"* %7, i64 0, i32 1
  store float %0, float* %13, align 8
  %14 = getelementptr inbounds %"struct.(anonymous namespace)::RRectBlurKey", %"struct.(anonymous namespace)::RRectBlurKey"* %7, i64 0, i32 2
  store i32 %1, i32* %14, align 4
  %15 = getelementptr inbounds %"struct.(anonymous namespace)::RRectBlurKey", %"struct.(anonymous namespace)::RRectBlurKey"* %7, i64 0, i32 3
  %16 = bitcast %class.SkRRect* %15 to i8*
  %17 = bitcast %class.SkRRect* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 4 %17, i64 52, i1 false) #8
  %18 = getelementptr inbounds %"struct.(anonymous namespace)::RRectBlurKey", %"struct.(anonymous namespace)::RRectBlurKey"* %7, i64 0, i32 0
  call void @_ZN15SkResourceCache3Key4initEPvmm(%"struct.SkResourceCache::Key"* nonnull %18, i8* bitcast (i32* @_ZN12_GLOBAL__N_127gRRectBlurKeyNamespaceLabelE to i8*), i64 0, i64 60) #8
  %19 = icmp eq %class.SkResourceCache* %4, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %5
  %21 = call zeroext i1 @_ZN15SkResourceCache4findERKNS_3KeyEPFbRKNS_3RecEPvES6_(%class.SkResourceCache* nonnull %4, %"struct.SkResourceCache::Key"* nonnull dereferenceable(24) %18, i1 (%"struct.SkResourceCache::Rec"*, i8*)* nonnull @_ZN12_GLOBAL__N_112RRectBlurRec7VisitorERKN15SkResourceCache3RecEPv, i8* nonnull %8) #8
  br i1 %21, label %24, label %32

22:                                               ; preds = %5
  %23 = call zeroext i1 @_ZN15SkResourceCache4FindERKNS_3KeyEPFbRKNS_3RecEPvES6_(%"struct.SkResourceCache::Key"* nonnull dereferenceable(24) %18, i1 (%"struct.SkResourceCache::Rec"*, i8*)* nonnull @_ZN12_GLOBAL__N_112RRectBlurRec7VisitorERKN15SkResourceCache3RecEPv, i8* nonnull %8) #8
  br i1 %23, label %24, label %32

24:                                               ; preds = %22, %20
  %25 = bitcast %struct.SkMask* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* nonnull align 8 %8, i64 29, i1 false)
  %26 = getelementptr inbounds %struct.MaskValue, %struct.MaskValue* %6, i64 0, i32 1
  %27 = load %class.SkCachedData*, %class.SkCachedData** %26, align 8
  %28 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %27, i64 0, i32 3
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %struct.SkMask* %3 to i64*
  store i64 %30, i64* %31, align 8
  br label %32

32:                                               ; preds = %20, %22, %24
  %33 = phi %class.SkCachedData* [ %27, %24 ], [ null, %22 ], [ null, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #8
  ret %class.SkCachedData* %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZN15SkResourceCache4findERKNS_3KeyEPFbRKNS_3RecEPvES6_(%class.SkResourceCache*, %"struct.SkResourceCache::Key"* dereferenceable(24), i1 (%"struct.SkResourceCache::Rec"*, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN12_GLOBAL__N_112RRectBlurRec7VisitorERKN15SkResourceCache3RecEPv(%"struct.SkResourceCache::Rec"* nocapture readonly dereferenceable(24), i8* nocapture) #0 align 2 {
  %3 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %0, i64 4, i32 2
  %4 = getelementptr inbounds %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %3, i64 4
  %5 = bitcast %"struct.SkResourceCache::Rec"** %4 to %class.SkCachedData**
  %6 = load %class.SkCachedData*, %class.SkCachedData** %5, align 8
  tail call void @_ZNK12SkCachedData11internalRefEb(%class.SkCachedData* %6, i1 zeroext false) #8
  %7 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %6, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  tail call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* %6, i1 zeroext false) #8
  br label %13

11:                                               ; preds = %2
  %12 = bitcast %"struct.SkResourceCache::Rec"** %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %12, i64 40, i1 false)
  br label %13

13:                                               ; preds = %11, %10
  %14 = phi i1 [ false, %10 ], [ true, %11 ]
  ret i1 %14
}

declare zeroext i1 @_ZN15SkResourceCache4FindERKNS_3KeyEPFbRKNS_3RecEPvES6_(%"struct.SkResourceCache::Key"* dereferenceable(24), i1 (%"struct.SkResourceCache::Rec"*, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkMaskCache3AddEf11SkBlurStyleRK7SkRRectRK6SkMaskP12SkCachedDataP15SkResourceCache(float, i32, %class.SkRRect* nocapture readonly dereferenceable(52), %struct.SkMask* nocapture readonly dereferenceable(32), %class.SkCachedData*, %class.SkResourceCache*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"struct.(anonymous namespace)::RRectBlurKey", align 8
  %8 = bitcast %"struct.(anonymous namespace)::RRectBlurKey"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %8) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast (%"struct.(anonymous namespace)::RRectBlurKey"* @__const._ZN11SkMaskCache3AddEf11SkBlurStyleRK7SkRRectRK6SkMaskP12SkCachedDataP15SkResourceCache.key to i8*), i64 88, i1 false)
  %9 = getelementptr inbounds %"struct.(anonymous namespace)::RRectBlurKey", %"struct.(anonymous namespace)::RRectBlurKey"* %7, i64 0, i32 1
  store float %0, float* %9, align 8
  %10 = getelementptr inbounds %"struct.(anonymous namespace)::RRectBlurKey", %"struct.(anonymous namespace)::RRectBlurKey"* %7, i64 0, i32 2
  store i32 %1, i32* %10, align 4
  %11 = getelementptr inbounds %"struct.(anonymous namespace)::RRectBlurKey", %"struct.(anonymous namespace)::RRectBlurKey"* %7, i64 0, i32 3
  %12 = bitcast %class.SkRRect* %11 to i8*
  %13 = bitcast %class.SkRRect* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 4 %13, i64 52, i1 false) #8
  %14 = getelementptr inbounds %"struct.(anonymous namespace)::RRectBlurKey", %"struct.(anonymous namespace)::RRectBlurKey"* %7, i64 0, i32 0
  call void @_ZN15SkResourceCache3Key4initEPvmm(%"struct.SkResourceCache::Key"* nonnull %14, i8* bitcast (i32* @_ZN12_GLOBAL__N_127gRRectBlurKeyNamespaceLabelE to i8*), i64 0, i64 60) #8
  %15 = icmp eq %class.SkResourceCache* %5, null
  %16 = call i8* @_Znwm(i64 152) #9
  %17 = bitcast i8* %16 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12_GLOBAL__N_112RRectBlurRecE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds i8, i8* %16, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* nonnull align 8 %8, i64 88, i1 false)
  %19 = getelementptr inbounds i8, i8* %16, i64 112
  %20 = bitcast %struct.SkMask* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 29, i1 false) #8
  %21 = getelementptr inbounds i8, i8* %16, i64 144
  %22 = bitcast i8* %21 to %class.SkCachedData**
  store %class.SkCachedData* %4, %class.SkCachedData** %22, align 8
  call void @_ZNK12SkCachedData11internalRefEb(%class.SkCachedData* %4, i1 zeroext true) #8
  %23 = bitcast i8* %16 to %"struct.SkResourceCache::Rec"*
  br i1 %15, label %25, label %24

24:                                               ; preds = %6
  call void @_ZN15SkResourceCache3addEPNS_3RecEPv(%class.SkResourceCache* nonnull %5, %"struct.SkResourceCache::Rec"* nonnull %23, i8* null) #8
  br label %26

25:                                               ; preds = %6
  call void @_ZN15SkResourceCache3AddEPNS_3RecEPv(%"struct.SkResourceCache::Rec"* nonnull %23, i8* null) #8
  br label %26

26:                                               ; preds = %25, %24
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %8) #8
  ret void
}

declare void @_ZN15SkResourceCache3addEPNS_3RecEPv(%class.SkResourceCache*, %"struct.SkResourceCache::Rec"*, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN15SkResourceCache3AddEPNS_3RecEPv(%"struct.SkResourceCache::Rec"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkCachedData* @_ZN11SkMaskCache10FindAndRefEf11SkBlurStylePK6SkRectiP6SkMaskP15SkResourceCache(float, i32, %struct.SkRect* nocapture readonly, i32, %struct.SkMask* nocapture, %class.SkResourceCache*) local_unnamed_addr #0 align 2 {
  %7 = alloca %struct.MaskValue, align 8
  %8 = alloca %"struct.(anonymous namespace)::RectsBlurKey", align 8
  %9 = bitcast %struct.MaskValue* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #8
  %10 = getelementptr inbounds %struct.MaskValue, %struct.MaskValue* %7, i64 0, i32 0, i32 1
  %11 = bitcast %struct.SkIRect* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  %12 = getelementptr inbounds %struct.MaskValue, %struct.MaskValue* %7, i64 0, i32 0, i32 0
  store i8* null, i8** %12, align 8
  %13 = bitcast %"struct.(anonymous namespace)::RectsBlurKey"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %13) #8
  %14 = getelementptr inbounds %"struct.(anonymous namespace)::RectsBlurKey", %"struct.(anonymous namespace)::RectsBlurKey"* %8, i64 0, i32 1
  %15 = bitcast %"struct.(anonymous namespace)::RectsBlurKey"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  store float 0xFFFFFFFFE0000000, float* %14, align 8
  %16 = getelementptr inbounds %"struct.(anonymous namespace)::RectsBlurKey", %"struct.(anonymous namespace)::RectsBlurKey"* %8, i64 0, i32 2
  store i32 -1431655766, i32* %16, align 4
  %17 = getelementptr inbounds %"struct.(anonymous namespace)::RectsBlurKey", %"struct.(anonymous namespace)::RectsBlurKey"* %8, i64 0, i32 3, i64 0, i32 0
  %18 = bitcast float* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 -1, i64 32, i1 false)
  call fastcc void @_ZN12_GLOBAL__N_112RectsBlurKeyC2Ef11SkBlurStylePK6SkRecti(%"struct.(anonymous namespace)::RectsBlurKey"* nonnull %8, float %0, i32 %1, %struct.SkRect* %2, i32 %3)
  %19 = icmp eq %class.SkResourceCache* %5, null
  %20 = getelementptr inbounds %"struct.(anonymous namespace)::RectsBlurKey", %"struct.(anonymous namespace)::RectsBlurKey"* %8, i64 0, i32 0
  br i1 %19, label %23, label %21

21:                                               ; preds = %6
  %22 = call zeroext i1 @_ZN15SkResourceCache4findERKNS_3KeyEPFbRKNS_3RecEPvES6_(%class.SkResourceCache* nonnull %5, %"struct.SkResourceCache::Key"* nonnull dereferenceable(24) %20, i1 (%"struct.SkResourceCache::Rec"*, i8*)* nonnull @_ZN12_GLOBAL__N_112RectsBlurRec7VisitorERKN15SkResourceCache3RecEPv, i8* nonnull %9) #8
  br i1 %22, label %25, label %33

23:                                               ; preds = %6
  %24 = call zeroext i1 @_ZN15SkResourceCache4FindERKNS_3KeyEPFbRKNS_3RecEPvES6_(%"struct.SkResourceCache::Key"* nonnull dereferenceable(24) %20, i1 (%"struct.SkResourceCache::Rec"*, i8*)* nonnull @_ZN12_GLOBAL__N_112RectsBlurRec7VisitorERKN15SkResourceCache3RecEPv, i8* nonnull %9) #8
  br i1 %24, label %25, label %33

25:                                               ; preds = %23, %21
  %26 = bitcast %struct.SkMask* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* nonnull align 8 %9, i64 29, i1 false)
  %27 = getelementptr inbounds %struct.MaskValue, %struct.MaskValue* %7, i64 0, i32 1
  %28 = load %class.SkCachedData*, %class.SkCachedData** %27, align 8
  %29 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %28, i64 0, i32 3
  %30 = bitcast i8** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %struct.SkMask* %4 to i64*
  store i64 %31, i64* %32, align 8
  br label %33

33:                                               ; preds = %21, %23, %25
  %34 = phi %class.SkCachedData* [ %28, %25 ], [ null, %23 ], [ null, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #8
  ret %class.SkCachedData* %34
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_112RectsBlurKeyC2Ef11SkBlurStylePK6SkRecti(%"struct.(anonymous namespace)::RectsBlurKey"*, float, i32, %struct.SkRect* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"struct.(anonymous namespace)::RectsBlurKey", %"struct.(anonymous namespace)::RectsBlurKey"* %0, i64 0, i32 1
  store float %1, float* %6, align 8
  %7 = getelementptr inbounds %"struct.(anonymous namespace)::RectsBlurKey", %"struct.(anonymous namespace)::RectsBlurKey"* %0, i64 0, i32 2
  store i32 %2, i32* %7, align 4
  %8 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = tail call float @llvm.floor.f32(float %9) #8
  %11 = fcmp olt float %10, 0x41DFFFFFE0000000
  %12 = select i1 %11, float %10, float 0x41DFFFFFE0000000
  %13 = fcmp ogt float %12, 0xC1DFFFFFE0000000
  %14 = select i1 %13, float %12, float 0xC1DFFFFFE0000000
  %15 = fptosi float %14 to i32
  %16 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 1
  %17 = load float, float* %16, align 4
  %18 = tail call float @llvm.floor.f32(float %17) #8
  %19 = fcmp olt float %18, 0x41DFFFFFE0000000
  %20 = select i1 %19, float %18, float 0x41DFFFFFE0000000
  %21 = fcmp ogt float %20, 0xC1DFFFFFE0000000
  %22 = select i1 %21, float %20, float 0xC1DFFFFFE0000000
  %23 = fptosi float %22 to i32
  %24 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 2
  %25 = load float, float* %24, align 4
  %26 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 3
  %27 = load float, float* %26, align 4
  %28 = fsub float %25, %9
  %29 = fsub float %27, %17
  %30 = getelementptr inbounds %"struct.(anonymous namespace)::RectsBlurKey", %"struct.(anonymous namespace)::RectsBlurKey"* %0, i64 0, i32 3, i64 0, i32 0
  store float %28, float* %30, align 8
  %31 = getelementptr inbounds %"struct.(anonymous namespace)::RectsBlurKey", %"struct.(anonymous namespace)::RectsBlurKey"* %0, i64 0, i32 3, i64 0, i32 1
  store float %29, float* %31, align 4
  %32 = icmp eq i32 %4, 2
  br i1 %32, label %33, label %51

33:                                               ; preds = %5
  %34 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 1, i32 2
  %35 = load float, float* %34, align 4
  %36 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 1, i32 0
  %37 = load float, float* %36, align 4
  %38 = fsub float %35, %37
  %39 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 1, i32 3
  %40 = load float, float* %39, align 4
  %41 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 1, i32 1
  %42 = load float, float* %41, align 4
  %43 = fsub float %40, %42
  %44 = getelementptr inbounds %"struct.(anonymous namespace)::RectsBlurKey", %"struct.(anonymous namespace)::RectsBlurKey"* %0, i64 0, i32 3, i64 1, i32 0
  store float %38, float* %44, align 8
  %45 = getelementptr inbounds %"struct.(anonymous namespace)::RectsBlurKey", %"struct.(anonymous namespace)::RectsBlurKey"* %0, i64 0, i32 3, i64 1, i32 1
  store float %43, float* %45, align 4
  %46 = bitcast %struct.SkRect* %3 to <2 x float>*
  %47 = load <2 x float>, <2 x float>* %46, align 4
  %48 = bitcast float* %36 to <2 x float>*
  %49 = load <2 x float>, <2 x float>* %48, align 4
  %50 = fsub <2 x float> %47, %49
  br label %54

51:                                               ; preds = %5
  %52 = getelementptr inbounds %"struct.(anonymous namespace)::RectsBlurKey", %"struct.(anonymous namespace)::RectsBlurKey"* %0, i64 0, i32 3, i64 1, i32 0
  store float 0.000000e+00, float* %52, align 8
  %53 = getelementptr inbounds %"struct.(anonymous namespace)::RectsBlurKey", %"struct.(anonymous namespace)::RectsBlurKey"* %0, i64 0, i32 3, i64 1, i32 1
  store float 0.000000e+00, float* %53, align 4
  br label %54

54:                                               ; preds = %51, %33
  %55 = phi <2 x float> [ zeroinitializer, %51 ], [ %50, %33 ]
  %56 = getelementptr inbounds %"struct.(anonymous namespace)::RectsBlurKey", %"struct.(anonymous namespace)::RectsBlurKey"* %0, i64 0, i32 3, i64 2, i32 0
  %57 = extractelement <2 x float> %55, i32 0
  store float %57, float* %56, align 8
  %58 = getelementptr inbounds %"struct.(anonymous namespace)::RectsBlurKey", %"struct.(anonymous namespace)::RectsBlurKey"* %0, i64 0, i32 3, i64 2, i32 1
  %59 = extractelement <2 x float> %55, i32 1
  store float %59, float* %58, align 4
  %60 = load float, float* %8, align 4
  %61 = sitofp i32 %15 to float
  %62 = fsub float %60, %61
  %63 = load float, float* %16, align 4
  %64 = sitofp i32 %23 to float
  %65 = fsub float %63, %64
  %66 = getelementptr inbounds %"struct.(anonymous namespace)::RectsBlurKey", %"struct.(anonymous namespace)::RectsBlurKey"* %0, i64 0, i32 3, i64 3, i32 0
  store float %62, float* %66, align 8
  %67 = getelementptr inbounds %"struct.(anonymous namespace)::RectsBlurKey", %"struct.(anonymous namespace)::RectsBlurKey"* %0, i64 0, i32 3, i64 3, i32 1
  store float %65, float* %67, align 4
  %68 = getelementptr inbounds %"struct.(anonymous namespace)::RectsBlurKey", %"struct.(anonymous namespace)::RectsBlurKey"* %0, i64 0, i32 0
  tail call void @_ZN15SkResourceCache3Key4initEPvmm(%"struct.SkResourceCache::Key"* %68, i8* bitcast (i32* @_ZN12_GLOBAL__N_127gRectsBlurKeyNamespaceLabelE to i8*), i64 0, i64 40) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN12_GLOBAL__N_112RectsBlurRec7VisitorERKN15SkResourceCache3RecEPv(%"struct.SkResourceCache::Rec"* nocapture readonly dereferenceable(24), i8* nocapture) #0 align 2 {
  %3 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %0, i64 3, i32 2
  %4 = getelementptr inbounds %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %3, i64 4
  %5 = bitcast %"struct.SkResourceCache::Rec"** %4 to %class.SkCachedData**
  %6 = load %class.SkCachedData*, %class.SkCachedData** %5, align 8
  tail call void @_ZNK12SkCachedData11internalRefEb(%class.SkCachedData* %6, i1 zeroext false) #8
  %7 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %6, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  tail call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* %6, i1 zeroext false) #8
  br label %13

11:                                               ; preds = %2
  %12 = bitcast %"struct.SkResourceCache::Rec"** %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %12, i64 40, i1 false)
  br label %13

13:                                               ; preds = %11, %10
  %14 = phi i1 [ false, %10 ], [ true, %11 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkMaskCache3AddEf11SkBlurStylePK6SkRectiRK6SkMaskP12SkCachedDataP15SkResourceCache(float, i32, %struct.SkRect* nocapture readonly, i32, %struct.SkMask* nocapture readonly dereferenceable(32), %class.SkCachedData*, %class.SkResourceCache*) local_unnamed_addr #0 align 2 {
  %8 = alloca %"struct.(anonymous namespace)::RectsBlurKey", align 8
  %9 = bitcast %"struct.(anonymous namespace)::RectsBlurKey"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"struct.(anonymous namespace)::RectsBlurKey", %"struct.(anonymous namespace)::RectsBlurKey"* %8, i64 0, i32 1
  %11 = bitcast %"struct.(anonymous namespace)::RectsBlurKey"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store float 0xFFFFFFFFE0000000, float* %10, align 8
  %12 = getelementptr inbounds %"struct.(anonymous namespace)::RectsBlurKey", %"struct.(anonymous namespace)::RectsBlurKey"* %8, i64 0, i32 2
  store i32 -1431655766, i32* %12, align 4
  %13 = getelementptr inbounds %"struct.(anonymous namespace)::RectsBlurKey", %"struct.(anonymous namespace)::RectsBlurKey"* %8, i64 0, i32 3, i64 0, i32 0
  %14 = bitcast float* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 -1, i64 32, i1 false)
  call fastcc void @_ZN12_GLOBAL__N_112RectsBlurKeyC2Ef11SkBlurStylePK6SkRecti(%"struct.(anonymous namespace)::RectsBlurKey"* nonnull %8, float %0, i32 %1, %struct.SkRect* %2, i32 %3)
  %15 = icmp eq %class.SkResourceCache* %6, null
  %16 = call i8* @_Znwm(i64 128) #9
  %17 = bitcast i8* %16 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12_GLOBAL__N_112RectsBlurRecE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds i8, i8* %16, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* nonnull align 8 %9, i64 64, i1 false)
  %19 = getelementptr inbounds i8, i8* %16, i64 88
  %20 = bitcast %struct.SkMask* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 29, i1 false) #8
  %21 = getelementptr inbounds i8, i8* %16, i64 120
  %22 = bitcast i8* %21 to %class.SkCachedData**
  store %class.SkCachedData* %5, %class.SkCachedData** %22, align 8
  call void @_ZNK12SkCachedData11internalRefEb(%class.SkCachedData* %5, i1 zeroext true) #8
  %23 = bitcast i8* %16 to %"struct.SkResourceCache::Rec"*
  br i1 %15, label %25, label %24

24:                                               ; preds = %7
  call void @_ZN15SkResourceCache3addEPNS_3RecEPv(%class.SkResourceCache* nonnull %6, %"struct.SkResourceCache::Rec"* nonnull %23, i8* null) #8
  br label %26

25:                                               ; preds = %7
  call void @_ZN15SkResourceCache3AddEPNS_3RecEPv(%"struct.SkResourceCache::Rec"* nonnull %23, i8* null) #8
  br label %26

26:                                               ; preds = %25, %24
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #8
  ret void
}

declare void @_ZN15SkResourceCache3Key4initEPvmm(%"struct.SkResourceCache::Key"*, i8*, i64, i64) local_unnamed_addr #2

declare void @_ZNK12SkCachedData11internalRefEb(%class.SkCachedData*, i1 zeroext) local_unnamed_addr #2

declare void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_112RRectBlurRecD2Ev(%"struct.(anonymous namespace)::RRectBlurRec"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::RRectBlurRec", %"struct.(anonymous namespace)::RRectBlurRec"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12_GLOBAL__N_112RRectBlurRecE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.(anonymous namespace)::RRectBlurRec", %"struct.(anonymous namespace)::RRectBlurRec"* %0, i64 0, i32 2, i32 1
  %4 = load %class.SkCachedData*, %class.SkCachedData** %3, align 8
  tail call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* %4, i1 zeroext true) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_112RRectBlurRecD0Ev(%"struct.(anonymous namespace)::RRectBlurRec"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::RRectBlurRec", %"struct.(anonymous namespace)::RRectBlurRec"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12_GLOBAL__N_112RRectBlurRecE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.(anonymous namespace)::RRectBlurRec", %"struct.(anonymous namespace)::RRectBlurRec"* %0, i64 0, i32 2, i32 1
  %4 = load %class.SkCachedData*, %class.SkCachedData** %3, align 8
  tail call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* %4, i1 zeroext true) #8
  %5 = bitcast %"struct.(anonymous namespace)::RRectBlurRec"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #9
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal dereferenceable(24) %"struct.SkResourceCache::Key"* @_ZNK12_GLOBAL__N_112RRectBlurRec6getKeyEv(%"struct.(anonymous namespace)::RRectBlurRec"* readnone) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::RRectBlurRec", %"struct.(anonymous namespace)::RRectBlurRec"* %0, i64 0, i32 1, i32 0
  ret %"struct.SkResourceCache::Key"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZNK12_GLOBAL__N_112RRectBlurRec9bytesUsedEv(%"struct.(anonymous namespace)::RRectBlurRec"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::RRectBlurRec", %"struct.(anonymous namespace)::RRectBlurRec"* %0, i64 0, i32 2, i32 1
  %3 = load %class.SkCachedData*, %class.SkCachedData** %2, align 8
  %4 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %3, i64 0, i32 4
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 152
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN15SkResourceCache3Rec11canBePurgedEv(%"struct.SkResourceCache::Rec"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15SkResourceCache3Rec14postAddInstallEPv(%"struct.SkResourceCache::Rec"*, i8*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_112RRectBlurRec11getCategoryEv(%"struct.(anonymous namespace)::RRectBlurRec"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %class.SkDiscardableMemory* @_ZNK12_GLOBAL__N_112RRectBlurRec30diagnostic_only_getDiscardableEv(%"struct.(anonymous namespace)::RRectBlurRec"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::RRectBlurRec", %"struct.(anonymous namespace)::RRectBlurRec"* %0, i64 0, i32 2, i32 1
  %3 = load %class.SkCachedData*, %class.SkCachedData** %2, align 8
  %4 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %3, i64 0, i32 6
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %3, i64 0, i32 2, i32 0
  %9 = load %class.SkDiscardableMemory*, %class.SkDiscardableMemory** %8, align 8
  br label %10

10:                                               ; preds = %1, %7
  %11 = phi %class.SkDiscardableMemory* [ %9, %7 ], [ null, %1 ]
  ret %class.SkDiscardableMemory* %11
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #7

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_112RectsBlurRecD2Ev(%"struct.(anonymous namespace)::RectsBlurRec"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::RectsBlurRec", %"struct.(anonymous namespace)::RectsBlurRec"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12_GLOBAL__N_112RectsBlurRecE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.(anonymous namespace)::RectsBlurRec", %"struct.(anonymous namespace)::RectsBlurRec"* %0, i64 0, i32 2, i32 1
  %4 = load %class.SkCachedData*, %class.SkCachedData** %3, align 8
  tail call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* %4, i1 zeroext true) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_112RectsBlurRecD0Ev(%"struct.(anonymous namespace)::RectsBlurRec"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::RectsBlurRec", %"struct.(anonymous namespace)::RectsBlurRec"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12_GLOBAL__N_112RectsBlurRecE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.(anonymous namespace)::RectsBlurRec", %"struct.(anonymous namespace)::RectsBlurRec"* %0, i64 0, i32 2, i32 1
  %4 = load %class.SkCachedData*, %class.SkCachedData** %3, align 8
  tail call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* %4, i1 zeroext true) #8
  %5 = bitcast %"struct.(anonymous namespace)::RectsBlurRec"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #9
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal dereferenceable(24) %"struct.SkResourceCache::Key"* @_ZNK12_GLOBAL__N_112RectsBlurRec6getKeyEv(%"struct.(anonymous namespace)::RectsBlurRec"* readnone) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::RectsBlurRec", %"struct.(anonymous namespace)::RectsBlurRec"* %0, i64 0, i32 1, i32 0
  ret %"struct.SkResourceCache::Key"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZNK12_GLOBAL__N_112RectsBlurRec9bytesUsedEv(%"struct.(anonymous namespace)::RectsBlurRec"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::RectsBlurRec", %"struct.(anonymous namespace)::RectsBlurRec"* %0, i64 0, i32 2, i32 1
  %3 = load %class.SkCachedData*, %class.SkCachedData** %2, align 8
  %4 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %3, i64 0, i32 4
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 128
  ret i64 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_112RectsBlurRec11getCategoryEv(%"struct.(anonymous namespace)::RectsBlurRec"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %class.SkDiscardableMemory* @_ZNK12_GLOBAL__N_112RectsBlurRec30diagnostic_only_getDiscardableEv(%"struct.(anonymous namespace)::RectsBlurRec"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::RectsBlurRec", %"struct.(anonymous namespace)::RectsBlurRec"* %0, i64 0, i32 2, i32 1
  %3 = load %class.SkCachedData*, %class.SkCachedData** %2, align 8
  %4 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %3, i64 0, i32 6
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %3, i64 0, i32 2, i32 0
  %9 = load %class.SkDiscardableMemory*, %class.SkDiscardableMemory** %8, align 8
  br label %10

10:                                               ; preds = %1, %7
  %11 = phi %class.SkDiscardableMemory* [ %9, %7 ], [ null, %1 ]
  ret %class.SkDiscardableMemory* %11
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
