; ModuleID = '../../third_party/blink/renderer/core/execution_context/window_agent_factory.cc'
source_filename = "../../third_party/blink/renderer/core/execution_context/window_agent_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<blink::Persistent<blink::HeapHashMap<blink::WindowAgentFactory::SchemeAndRegistrableDomain, blink::WeakMember<blink::WindowAgent>, blink::WindowAgentFactory::SchemeAndRegistrableDomainHash, blink::WindowAgentFactory::SchemeAndRegistrableDomainTraits, WTF::HashTraits<blink::WeakMember<blink::WindowAgent> > > > >::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::Persistent<blink::HeapHashMap<blink::WindowAgentFactory::SchemeAndRegistrableDomain, blink::WeakMember<blink::WindowAgent>, blink::WindowAgentFactory::SchemeAndRegistrableDomainHash, blink::WindowAgentFactory::SchemeAndRegistrableDomainTraits, WTF::HashTraits<blink::WeakMember<blink::WindowAgent> > > > >::InstanceStorage" = type { [16 x i8] }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.143", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.159", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.177", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.184", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.127", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.47" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__atomic_base.49" }
%"struct.std::__1::__atomic_base.49" = type { %"struct.std::__1::__cxx_atomic_impl.50" }
%"struct.std::__1::__cxx_atomic_impl.50" = type { %"struct.std::__1::__cxx_atomic_base_impl.51" }
%"struct.std::__1::__cxx_atomic_base_impl.51" = type { i64 }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::Worklist.58"* }
%"class.blink::Worklist.58" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.47" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::Worklist.65"* }
%"class.blink::Worklist.65" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.47" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::Worklist.72"* }
%"class.blink::Worklist.72" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.47" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::Worklist.79"* }
%"class.blink::Worklist.79" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.47" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::Worklist.86"* }
%"class.blink::Worklist.86" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.47" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::Worklist.93"* }
%"class.blink::Worklist.93" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.47" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::Worklist.100"* }
%"class.blink::Worklist.100" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.47" }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.107", %"class.std::__1::__compressed_pair.114", %"class.std::__1::__compressed_pair.119", %"class.std::__1::__compressed_pair.121", [4 x i8] }>
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109", %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { i64 }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { float }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.130", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.151" }
%"class.WTF::VectorBuffer.151" = type { %"class.WTF::VectorBufferBase.152" }
%"class.WTF::VectorBufferBase.152" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.165" }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.58"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.65"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.72"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.79"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.86"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.188" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.183 }
%class.scoped_refptr.183 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.184" = type { %"struct.std::__1::__atomic_base.185" }
%"struct.std::__1::__atomic_base.185" = type { %"struct.std::__1::__cxx_atomic_impl.186" }
%"struct.std::__1::__cxx_atomic_impl.186" = type { %"struct.std::__1::__cxx_atomic_base_impl.187" }
%"struct.std::__1::__cxx_atomic_base_impl.187" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.224" }
%"struct.std::__1::atomic.224" = type { %"struct.std::__1::__atomic_base.225" }
%"struct.std::__1::__atomic_base.225" = type { %"struct.std::__1::__atomic_base.226" }
%"struct.std::__1::__atomic_base.226" = type { %"struct.std::__1::__cxx_atomic_impl.227" }
%"struct.std::__1::__cxx_atomic_impl.227" = type { %"struct.std::__1::__cxx_atomic_base_impl.228" }
%"struct.std::__1::__cxx_atomic_base_impl.228" = type { i32 }
%"class.blink::WindowAgentFactory" = type { %"class.blink::WeakMember", %"class.blink::WeakMember", %"class.blink::HeapHashMap", %"class.blink::HeapHashMap", %"class.blink::HeapHashMap.5" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::WindowAgent"* }
%"class.blink::WindowAgent" = type { %"class.blink::Agent.base", [7 x i8] }
%"class.blink::Agent.base" = type <{ i32 (...)**, %class.scoped_refptr, %"class.base::UnguessableToken", i8 }>
%class.scoped_refptr = type { %"class.blink::scheduler::EventLoop"* }
%"class.blink::scheduler::EventLoop" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %class.scoped_refptr.4, %"class.blink::WeakMember" }
%class.scoped_refptr.4 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.4 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.WTF::StringImpl"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.blink::HeapHashMap.5" = type { %"class.WTF::HashMap.8" }
%"class.WTF::HashMap.8" = type { %"class.WTF::HashTable.9" }
%"class.WTF::HashTable.9" = type <{ %"struct.WTF::KeyValuePair.11"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.11" = type { %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain", %"class.blink::WeakMember" }
%"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::Agent" = type <{ i32 (...)**, %class.scoped_refptr, %"class.base::UnguessableToken", i8, [7 x i8] }>
%"class.blink::PersistentBase" = type { %"class.blink::HeapHashMap.5"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.216 }
%union.anon.216 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.absl::optional.229" = type { %"class.absl::optional_internal::optional_data.230" }
%"class.absl::optional_internal::optional_data.230" = type { %"class.absl::optional_internal::optional_data_base.231" }
%"class.absl::optional_internal::optional_data_base.231" = type { %"class.absl::optional_internal::optional_data_dtor_base.232" }
%"class.absl::optional_internal::optional_data_dtor_base.232" = type { i8, %union.anon.233 }
%union.anon.233 = type { %"class.base::UnguessableToken" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.blink::HeapHashTableBacking.254" = type { i8 }

$_ZN5blink10ThreadHeap8AllocateINS_5AgentEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_5AgentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_5AgentEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_5AgentEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableI13scoped_refptrIKN5blink14SecurityOriginEENS_12KeyValuePairIS5_NS2_10WeakMemberINS2_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_18SecurityOriginHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS9_EEEESF_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERPS4_DnEENS_18HashTableAddResultISJ_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableI13scoped_refptrIKN5blink14SecurityOriginEENS_12KeyValuePairIS5_NS2_10WeakMemberINS2_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_18SecurityOriginHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS9_EEEESF_NS2_13HeapAllocatorEE6ExpandEPSA_ = comdat any

$_ZN5blink18SecurityOriginHash7GetHashEPKNS_14SecurityOriginE = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN5blink10TraceTraitINS_11WindowAgentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableI13scoped_refptrIKN5blink14SecurityOriginEENS_12KeyValuePairIS5_NS2_10WeakMemberINS2_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_18SecurityOriginHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS9_EEEESF_NS2_13HeapAllocatorEE12ExpandBufferEjPSA_Rb = comdat any

$_ZN3WTF9HashTableI13scoped_refptrIKN5blink14SecurityOriginEENS_12KeyValuePairIS5_NS2_10WeakMemberINS2_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_18SecurityOriginHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS9_EEEESF_NS2_13HeapAllocatorEE8RehashToEPSA_jSK_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableI13scoped_refptrIKNS_14SecurityOriginEENS2_12KeyValuePairIS7_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS_18SecurityOriginHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableI13scoped_refptrIKNS_14SecurityOriginEENS1_12KeyValuePairIS6_NS_10WeakMemberINS_11WindowAgentEEEEENS1_24KeyValuePairKeyExtractorENS_18SecurityOriginHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS6_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEE14AllocateObjectISL_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableI13scoped_refptrIKNS_14SecurityOriginEENS2_12KeyValuePairIS7_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS_18SecurityOriginHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableI13scoped_refptrIKNS_14SecurityOriginEENS3_12KeyValuePairIS8_NS_10WeakMemberINS_11WindowAgentEEEEENS3_24KeyValuePairKeyExtractorENS_18SecurityOriginHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS8_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableI13scoped_refptrIKNS_14SecurityOriginEENS2_12KeyValuePairIS7_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS_18SecurityOriginHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableI13scoped_refptrIKN5blink14SecurityOriginEENS_12KeyValuePairIS7_NS4_10WeakMemberINS4_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS4_18SecurityOriginHashENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSG_ISB_EEEESH_NS4_13HeapAllocatorEEEE5TraceEPNS4_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableI13scoped_refptrIKN5blink14SecurityOriginEENS_12KeyValuePairIS5_NS2_10WeakMemberINS2_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_18SecurityOriginHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS9_EEEESF_NS2_13HeapAllocatorEE16LookupForWritingERKS5_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11HeapHashMapINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS_10WeakMemberINS_11WindowAgentEEENS3_30SchemeAndRegistrableDomainHashENS3_32SchemeAndRegistrableDomainTraitsEN3WTF10HashTraitsIS7_EEEEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_11HeapHashMapINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS_10WeakMemberINS_11WindowAgentEEENS2_30SchemeAndRegistrableDomainHashENS2_32SchemeAndRegistrableDomainTraitsEN3WTF10HashTraitsIS6_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_11HeapHashMapINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS_10WeakMemberINS_11WindowAgentEEENS2_30SchemeAndRegistrableDomainHashENS2_32SchemeAndRegistrableDomainTraitsEN3WTF10HashTraitsIS6_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS4_NS2_10WeakMemberINS2_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS3_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS3_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS8_EEEESD_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS2_12KeyValuePairIS5_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS4_30SchemeAndRegistrableDomainHashENS2_18HashMapValueTraitsINS4_32SchemeAndRegistrableDomainTraitsENS2_10HashTraitsIS9_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS5_NS3_10WeakMemberINS3_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS4_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS4_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS9_EEEESE_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11HeapHashMapINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS_10WeakMemberINS_11WindowAgentEEENS3_30SchemeAndRegistrableDomainHashENS3_32SchemeAndRegistrableDomainTraitsEN3WTF10HashTraitsIS7_EEEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSG_15TracePersistentEPNS_7VisitorEEEE10TrampolineESI_PKv = comdat any

$_ZN3WTF9HashTableIN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS3_NS1_10WeakMemberINS1_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS2_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS7_EEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERS3_DnEENS_18HashTableAddResultISH_S8_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS3_NS1_10WeakMemberINS1_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS2_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS7_EEEESC_NS1_13HeapAllocatorEE6ExpandEPS8_ = comdat any

$_ZN5blink18WindowAgentFactory26SchemeAndRegistrableDomainaSERKS1_ = comdat any

$_ZN3WTF9HashTableIN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS3_NS1_10WeakMemberINS1_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS2_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS7_EEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS8_Rb = comdat any

$_ZN3WTF9HashTableIN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS3_NS1_10WeakMemberINS1_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS2_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS7_EEEESC_NS1_13HeapAllocatorEE8RehashToEPS8_jSI_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS2_12KeyValuePairIS5_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS4_30SchemeAndRegistrableDomainHashENS2_18HashMapValueTraitsINS4_32SchemeAndRegistrableDomainTraitsENS2_10HashTraitsIS9_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS1_12KeyValuePairIS4_NS_10WeakMemberINS_11WindowAgentEEEEENS1_24KeyValuePairKeyExtractorENS3_30SchemeAndRegistrableDomainHashENS1_18HashMapValueTraitsINS3_32SchemeAndRegistrableDomainTraitsENS1_10HashTraitsIS8_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS3_12KeyValuePairIS6_NS_10WeakMemberINS_11WindowAgentEEEEENS3_24KeyValuePairKeyExtractorENS5_30SchemeAndRegistrableDomainHashENS3_18HashMapValueTraitsINS5_32SchemeAndRegistrableDomainTraitsENS3_10HashTraitsISA_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS2_12KeyValuePairIS5_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS4_30SchemeAndRegistrableDomainHashENS2_18HashMapValueTraitsINS4_32SchemeAndRegistrableDomainTraitsENS2_10HashTraitsIS9_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS3_NS1_10WeakMemberINS1_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS2_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS7_EEEESC_NS1_13HeapAllocatorEE8ReinsertEOS8_ = comdat any

$_ZN3WTF9HashTableIN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS3_NS1_10WeakMemberINS1_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS2_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS7_EEEESC_NS1_13HeapAllocatorEE5clearEv = comdat any

$_ZN3WTF9HashTableIN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS3_NS1_10WeakMemberINS1_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS2_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS7_EEEESC_NS1_13HeapAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISA_SF_SG_EES3_EENSt3__14pairIPS8_bEERKT0_ = comdat any

$_ZN5blink7Visitor14HandleWeakCellINS_11WindowAgentEEEvRKNS_14LivenessBrokerEPKv = comdat any

$_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1E13scoped_refptrIKN5blink14SecurityOriginEENS_12KeyValuePairIS6_NS3_10WeakMemberINS3_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS3_18SecurityOriginHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE7ProcessERKNS3_14LivenessBrokerEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_5AgentEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_5AgentEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableI13scoped_refptrIKNS_14SecurityOriginEENS2_12KeyValuePairIS7_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS_18SecurityOriginHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableI13scoped_refptrIKNS_14SecurityOriginEENS2_12KeyValuePairIS7_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS_18SecurityOriginHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS_10WeakMemberINS_11WindowAgentEEENS2_30SchemeAndRegistrableDomainHashENS2_32SchemeAndRegistrableDomainTraitsEN3WTF10HashTraitsIS6_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS_10WeakMemberINS_11WindowAgentEEENS2_30SchemeAndRegistrableDomainHashENS2_32SchemeAndRegistrableDomainTraitsEN3WTF10HashTraitsIS6_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS2_12KeyValuePairIS5_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS4_30SchemeAndRegistrableDomainHashENS2_18HashMapValueTraitsINS4_32SchemeAndRegistrableDomainTraitsENS2_10HashTraitsIS9_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS2_12KeyValuePairIS5_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS4_30SchemeAndRegistrableDomainHashENS2_18HashMapValueTraitsINS4_32SchemeAndRegistrableDomainTraitsENS2_10HashTraitsIS9_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [17 x i8] c"chrome-extension\00", align 1
@_ZZN5blink18WindowAgentFactory17GetAgentForOriginEbPN2v87IsolateEPKNS_14SecurityOriginEbE22s_static_origin_agents = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink18WindowAgentFactory17GetAgentForOriginEbPN2v87IsolateEPKNS_14SecurityOriginEbE22s_static_origin_agents = internal global i64 0, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5AgentEEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Agent]\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.2 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_5AgentEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_5AgentEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_5AgentEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_5AgentEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_5AgentEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.3 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.4 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.8 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableI13scoped_refptrIKNS_14SecurityOriginEENS2_12KeyValuePairIS7_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS_18SecurityOriginHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableI13scoped_refptrIKNS_14SecurityOriginEENS2_12KeyValuePairIS7_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS_18SecurityOriginHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableI13scoped_refptrIKNS_14SecurityOriginEENS3_12KeyValuePairIS8_NS_10WeakMemberINS_11WindowAgentEEEEENS3_24KeyValuePairKeyExtractorENS_18SecurityOriginHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS8_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableI13scoped_refptrIKNS_14SecurityOriginEENS2_12KeyValuePairIS7_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS_18SecurityOriginHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableI13scoped_refptrIKNS_14SecurityOriginEENS2_12KeyValuePairIS7_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS_18SecurityOriginHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableI13scoped_refptrIKNS1_14SecurityOriginEENS_12KeyValuePairIS7_NS1_10WeakMemberINS1_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS1_18SecurityOriginHashENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSG_ISB_EEEESH_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [526 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<scoped_refptr<const blink::SecurityOrigin>, WTF::KeyValuePair<scoped_refptr<const blink::SecurityOrigin>, blink::WeakMember<blink::WindowAgent> >, WTF::KeyValuePairKeyExtractor, blink::SecurityOriginHash, WTF::HashMapValueTraits<WTF::HashTraits<scoped_refptr<const blink::SecurityOrigin> >, WTF::HashTraits<blink::WeakMember<blink::WindowAgent> > >, WTF::HashTraits<scoped_refptr<const blink::SecurityOrigin> >, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11HeapHashMapINS1_18WindowAgentFactory26SchemeAndRegistrableDomainENS1_10WeakMemberINS1_11WindowAgentEEENS3_30SchemeAndRegistrableDomainHashENS3_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS7_EEEEEEPKcv = private unnamed_addr constant [338 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashMap<blink::WindowAgentFactory::SchemeAndRegistrableDomain, blink::WeakMember<blink::WindowAgent>, blink::WindowAgentFactory::SchemeAndRegistrableDomainHash, blink::WindowAgentFactory::SchemeAndRegistrableDomainTraits, WTF::HashTraits<blink::WeakMember<blink::WindowAgent> > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS_10WeakMemberINS_11WindowAgentEEENS2_30SchemeAndRegistrableDomainHashENS2_32SchemeAndRegistrableDomainTraitsEN3WTF10HashTraitsIS6_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11HeapHashMapINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS_10WeakMemberINS_11WindowAgentEEENS2_30SchemeAndRegistrableDomainHashENS2_32SchemeAndRegistrableDomainTraitsEN3WTF10HashTraitsIS6_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11HeapHashMapINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS_10WeakMemberINS_11WindowAgentEEENS2_30SchemeAndRegistrableDomainHashENS2_32SchemeAndRegistrableDomainTraitsEN3WTF10HashTraitsIS6_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS_10WeakMemberINS_11WindowAgentEEENS2_30SchemeAndRegistrableDomainHashENS2_32SchemeAndRegistrableDomainTraitsEN3WTF10HashTraitsIS6_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS2_12KeyValuePairIS5_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS4_30SchemeAndRegistrableDomainHashENS2_18HashMapValueTraitsINS4_32SchemeAndRegistrableDomainTraitsENS2_10HashTraitsIS9_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS2_12KeyValuePairIS5_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS4_30SchemeAndRegistrableDomainHashENS2_18HashMapValueTraitsINS4_32SchemeAndRegistrableDomainTraitsENS2_10HashTraitsIS9_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS3_12KeyValuePairIS6_NS_10WeakMemberINS_11WindowAgentEEEEENS3_24KeyValuePairKeyExtractorENS5_30SchemeAndRegistrableDomainHashENS3_18HashMapValueTraitsINS5_32SchemeAndRegistrableDomainTraitsENS3_10HashTraitsISA_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS2_12KeyValuePairIS5_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS4_30SchemeAndRegistrableDomainHashENS2_18HashMapValueTraitsINS4_32SchemeAndRegistrableDomainTraitsENS2_10HashTraitsIS9_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS2_12KeyValuePairIS5_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS4_30SchemeAndRegistrableDomainHashENS2_18HashMapValueTraitsINS4_32SchemeAndRegistrableDomainTraitsENS2_10HashTraitsIS9_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS5_NS1_10WeakMemberINS1_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS4_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS4_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS9_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [578 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::WindowAgentFactory::SchemeAndRegistrableDomain, WTF::KeyValuePair<blink::WindowAgentFactory::SchemeAndRegistrableDomain, blink::WeakMember<blink::WindowAgent> >, WTF::KeyValuePairKeyExtractor, blink::WindowAgentFactory::SchemeAndRegistrableDomainHash, WTF::HashMapValueTraits<blink::WindowAgentFactory::SchemeAndRegistrableDomainTraits, WTF::HashTraits<blink::WeakMember<blink::WindowAgent> > >, blink::WindowAgentFactory::SchemeAndRegistrableDomainTraits, blink::HeapAllocator> >]\00", align 1

@_ZN5blink18WindowAgentFactoryC1Ev = hidden unnamed_addr alias void (%"class.blink::WindowAgentFactory"*), void (%"class.blink::WindowAgentFactory"*)* @_ZN5blink18WindowAgentFactoryC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18WindowAgentFactoryC2Ev(%"class.blink::WindowAgentFactory"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WindowAgentFactory", %"class.blink::WindowAgentFactory"* %0, i64 0, i32 3
  %3 = bitcast %"class.blink::HeapHashMap"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 20, i1 false) #10
  %4 = getelementptr inbounds %"class.blink::WindowAgentFactory", %"class.blink::WindowAgentFactory"* %0, i64 0, i32 4
  %5 = bitcast %"class.blink::HeapHashMap.5"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #10
  %6 = bitcast %"class.blink::WindowAgentFactory"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 36, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WindowAgent"* @_ZN5blink18WindowAgentFactory17GetAgentForOriginEbPN2v87IsolateEPKNS_14SecurityOriginEb(%"class.blink::WindowAgentFactory"*, i1 zeroext, %"class.v8::Isolate"*, %"class.blink::SecurityOrigin"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.blink::SecurityOrigin"*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain", align 8
  %12 = alloca i8*, align 8
  store %"class.blink::SecurityOrigin"* %3, %"class.blink::SecurityOrigin"** %8, align 8
  br i1 %1, label %13, label %32

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.blink::WindowAgentFactory", %"class.blink::WindowAgentFactory"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::WindowAgent"*, %"class.blink::WindowAgent"** %14, align 8
  %16 = icmp eq %"class.blink::WindowAgent"* %15, null
  br i1 %16, label %17, label %391

17:                                               ; preds = %13
  %18 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5AgentEEEPhm(i64 40) #10
  %19 = bitcast i8* %18 to %"class.blink::WindowAgent"*
  tail call void @_ZN5blink11WindowAgentC1EPN2v87IsolateE(%"class.blink::WindowAgent"* %19, %"class.v8::Isolate"* %2) #10
  %20 = getelementptr inbounds i8, i8* %18, i64 -4
  %21 = bitcast i8* %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = or i16 %22, 1
  store atomic i16 %23, i16* %21 release, align 2
  %24 = ptrtoint i8* %18 to i64
  %25 = bitcast %"class.blink::WindowAgentFactory"* %0 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  %26 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %27 = icmp eq i32 %26, 0
  %28 = bitcast i8* %18 to %"class.blink::WindowAgent"*
  br i1 %27, label %391, label %29

29:                                               ; preds = %17
  %30 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %18) #10
  %31 = load %"class.blink::WindowAgent"*, %"class.blink::WindowAgent"** %14, align 8
  br label %391

32:                                               ; preds = %5
  %33 = tail call zeroext i1 @_ZNK5blink14SecurityOrigin7IsLocalEv(%"class.blink::SecurityOrigin"* %3) #10
  br i1 %33, label %34, label %54

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.blink::WindowAgentFactory", %"class.blink::WindowAgentFactory"* %0, i64 0, i32 1
  %36 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.blink::WindowAgent"*, %"class.blink::WindowAgent"** %36, align 8
  %38 = icmp eq %"class.blink::WindowAgent"* %37, null
  br i1 %38, label %39, label %391

39:                                               ; preds = %34
  %40 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5AgentEEEPhm(i64 40) #10
  %41 = bitcast i8* %40 to %"class.blink::WindowAgent"*
  tail call void @_ZN5blink11WindowAgentC1EPN2v87IsolateE(%"class.blink::WindowAgent"* %41, %"class.v8::Isolate"* %2) #10
  %42 = getelementptr inbounds i8, i8* %40, i64 -4
  %43 = bitcast i8* %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = or i16 %44, 1
  store atomic i16 %45, i16* %43 release, align 2
  %46 = ptrtoint i8* %40 to i64
  %47 = bitcast %"class.blink::WeakMember"* %35 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  %48 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %49 = icmp eq i32 %48, 0
  %50 = bitcast i8* %40 to %"class.blink::WindowAgent"*
  br i1 %49, label %391, label %51

51:                                               ; preds = %39
  %52 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %40) #10
  %53 = load %"class.blink::WindowAgent"*, %"class.blink::WindowAgent"** %36, align 8
  br label %391

54:                                               ; preds = %32
  %55 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %56 = load i8, i8* %55, align 8, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %83, label %58

58:                                               ; preds = %54
  %59 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #10
  store i8* null, i8** %9, align 8
  %60 = getelementptr inbounds %"class.blink::WindowAgentFactory", %"class.blink::WindowAgentFactory"* %0, i64 0, i32 2, i32 0, i32 0
  %61 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableI13scoped_refptrIKN5blink14SecurityOriginEENS_12KeyValuePairIS5_NS2_10WeakMemberINS2_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_18SecurityOriginHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS9_EEEESF_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERPS4_DnEENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable"* %60, %"class.blink::SecurityOrigin"** nonnull dereferenceable(8) %8, i8** nonnull dereferenceable(8) %9) #10
  %62 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %61, 0
  %63 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %61, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #10
  %64 = and i8 %63, 1
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %80, label %66

66:                                               ; preds = %58
  %67 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5AgentEEEPhm(i64 40) #10
  %68 = bitcast i8* %67 to %"class.blink::WindowAgent"*
  call void @_ZN5blink11WindowAgentC1EPN2v87IsolateE(%"class.blink::WindowAgent"* %68, %"class.v8::Isolate"* %2) #10
  %69 = getelementptr inbounds i8, i8* %67, i64 -4
  %70 = bitcast i8* %69 to i16*
  %71 = load atomic i16, i16* %70 monotonic, align 2
  %72 = or i16 %71, 1
  store atomic i16 %72, i16* %70 release, align 2
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 1
  %74 = ptrtoint i8* %67 to i64
  %75 = bitcast %"class.blink::WeakMember"* %73 to i64*
  store atomic i64 %74, i64* %75 monotonic, align 8
  %76 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %66
  %79 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %67) #10
  br label %80

80:                                               ; preds = %78, %66, %58
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 1, i32 0, i32 0
  %82 = load %"class.blink::WindowAgent"*, %"class.blink::WindowAgent"** %81, align 8
  br label %391

83:                                               ; preds = %54
  br i1 %4, label %84, label %115

84:                                               ; preds = %83
  %85 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #10
  store i8* null, i8** %10, align 8
  %86 = getelementptr inbounds %"class.blink::WindowAgentFactory", %"class.blink::WindowAgentFactory"* %0, i64 0, i32 3, i32 0, i32 0
  %87 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableI13scoped_refptrIKN5blink14SecurityOriginEENS_12KeyValuePairIS5_NS2_10WeakMemberINS2_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_18SecurityOriginHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS9_EEEESF_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERPS4_DnEENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable"* %86, %"class.blink::SecurityOrigin"** nonnull dereferenceable(8) %8, i8** nonnull dereferenceable(8) %10) #10
  %88 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %87, 0
  %89 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %87, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #10
  %90 = and i8 %89, 1
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %112, label %92

92:                                               ; preds = %84
  %93 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5AgentEEEPhm(i64 40) #10
  %94 = bitcast i8* %93 to %"class.blink::WindowAgent"*
  call void @_ZN5blink11WindowAgentC1EPN2v87IsolateE(%"class.blink::WindowAgent"* %94, %"class.v8::Isolate"* %2) #10
  %95 = getelementptr inbounds i8, i8* %93, i64 -4
  %96 = bitcast i8* %95 to i16*
  %97 = load atomic i16, i16* %96 monotonic, align 2
  %98 = or i16 %97, 1
  store atomic i16 %98, i16* %96 release, align 2
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 1
  %100 = ptrtoint i8* %93 to i64
  %101 = bitcast %"class.blink::WeakMember"* %99 to i64*
  store atomic i64 %100, i64* %101 monotonic, align 8
  %102 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %92
  %105 = bitcast i8* %93 to %"class.blink::Agent"*
  br label %110

106:                                              ; preds = %92
  %107 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %93) #10
  %108 = bitcast %"class.blink::WeakMember"* %99 to %"class.blink::Agent"**
  %109 = load %"class.blink::Agent"*, %"class.blink::Agent"** %108, align 8
  br label %110

110:                                              ; preds = %104, %106
  %111 = phi %"class.blink::Agent"* [ %105, %104 ], [ %109, %106 ]
  call void @_ZN5blink5Agent26SetIsExplicitlyOriginKeyedEb(%"class.blink::Agent"* %111, i1 zeroext true) #10
  br label %112

112:                                              ; preds = %84, %110
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 1, i32 0, i32 0
  %114 = load %"class.blink::WindowAgent"*, %"class.blink::WindowAgent"** %113, align 8
  br label %391

115:                                              ; preds = %83
  %116 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin17RegistrableDomainEv(%"class.blink::SecurityOrigin"* %3) #10
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %118, label %140

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 2, i32 0, i32 0
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %121, label %140, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %140

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = zext i32 %129 to i33
  %131 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %130, i33 1) #10
  %132 = extractvalue { i33, i1 } %131, 1
  %133 = extractvalue { i33, i1 } %131, 0
  %134 = icmp slt i33 %133, 0
  %135 = or i1 %132, %134
  br i1 %135, label %136, label %137, !prof !3

136:                                              ; preds = %127
  tail call void @llvm.trap() #10
  unreachable

137:                                              ; preds = %127
  %138 = trunc i33 %133 to i32
  store i32 %138, i32* %128, align 4
  %139 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %8, align 8
  br label %140

140:                                              ; preds = %137, %122, %118, %115
  %141 = phi %"class.blink::SecurityOrigin"* [ %3, %115 ], [ %3, %118 ], [ %3, %122 ], [ %139, %137 ]
  %142 = phi %"class.WTF::StringImpl"* [ %116, %115 ], [ null, %118 ], [ %120, %122 ], [ %120, %137 ]
  %143 = getelementptr inbounds %"class.blink::WindowAgentFactory", %"class.blink::WindowAgentFactory"* %0, i64 0, i32 4
  %144 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %141, i64 0, i32 1, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %164, label %147

147:                                              ; preds = %140
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %169

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  %155 = zext i32 %154 to i33
  %156 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %155, i33 1) #10
  %157 = extractvalue { i33, i1 } %156, 1
  %158 = extractvalue { i33, i1 } %156, 0
  %159 = icmp slt i33 %158, 0
  %160 = or i1 %157, %159
  br i1 %160, label %161, label %162, !prof !3

161:                                              ; preds = %152
  tail call void @llvm.trap() #10
  unreachable

162:                                              ; preds = %152
  %163 = trunc i33 %158 to i32
  store i32 %163, i32* %153, align 4
  br label %169

164:                                              ; preds = %140
  %165 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %165) #10
  %166 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %166, align 8
  %167 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %168 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %167, i64* %168, align 8
  br label %178

169:                                              ; preds = %147, %162
  %170 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %170) #10
  %171 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %145, %"class.WTF::StringImpl"** %171, align 8
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 1
  %173 = load i32, i32* %172, align 4
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 1
  %175 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %176 = bitcast i8** %175 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %174, %"class.WTF::StringImpl"** %176, align 8
  %177 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %178

178:                                              ; preds = %169, %164
  %179 = phi i64 [ %177, %169 ], [ %167, %164 ]
  %180 = phi i8* [ %170, %169 ], [ %165, %164 ]
  %181 = phi i32 [ %173, %169 ], [ 0, %164 ]
  %182 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %181, i32* %182, align 8
  %183 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %183) #10
  %184 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %179, i64* %184, align 8
  %185 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8** %185, align 8
  %186 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 16, i32* %186, align 8
  %187 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %183) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %180) #10
  br i1 %146, label %201, label %188

188:                                              ; preds = %178
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load atomic i32, i32* %189 monotonic, align 4
  %191 = and i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %194 = load i32, i32* %193, align 4
  br i1 %192, label %195, label %197

195:                                              ; preds = %188
  %196 = add i32 %194, -1
  store i32 %196, i32* %193, align 4
  br label %197

197:                                              ; preds = %195, %188
  %198 = phi i32 [ %196, %195 ], [ %194, %188 ]
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %197
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #10
  br label %201

201:                                              ; preds = %178, %197, %200
  br i1 %187, label %202, label %244

202:                                              ; preds = %201
  %203 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink18WindowAgentFactory17GetAgentForOriginEbPN2v87IsolateEPKNS_14SecurityOriginEbE22s_static_origin_agents to i8*) acquire, align 8
  %204 = icmp eq i8 %203, 0
  br i1 %204, label %205, label %242, !prof !4

205:                                              ; preds = %202
  %206 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink18WindowAgentFactory17GetAgentForOriginEbPN2v87IsolateEPKNS_14SecurityOriginEbE22s_static_origin_agents) #10
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %242, label %208

208:                                              ; preds = %205
  %209 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashMapINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS_10WeakMemberINS_11WindowAgentEEENS3_30SchemeAndRegistrableDomainHashENS3_32SchemeAndRegistrableDomainTraitsEN3WTF10HashTraitsIS7_EEEEEEPhm(i64 24) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %209, i8 0, i64 20, i1 false) #10
  %210 = getelementptr inbounds i8, i8* %209, i64 -4
  %211 = bitcast i8* %210 to i16*
  %212 = load atomic i16, i16* %211 monotonic, align 2
  %213 = or i16 %212, 1
  store atomic i16 %213, i16* %211 release, align 2
  store i8* %209, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18WindowAgentFactory17GetAgentForOriginEbPN2v87IsolateEPKNS_14SecurityOriginEbE22s_static_origin_agents to i8**), align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink18WindowAgentFactory17GetAgentForOriginEbPN2v87IsolateEPKNS_14SecurityOriginEbE22s_static_origin_agents, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  %214 = ptrtoint i8* %209 to i64
  switch i64 %214, label %215 [
    i64 0, label %241
    i64 -1, label %241
  ]

215:                                              ; preds = %208
  %216 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %217 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %216, i64 0, i32 1
  %218 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %217) #10
  %219 = icmp eq i8* %218, null
  br i1 %219, label %220, label %222, !prof !3

220:                                              ; preds = %215
  %221 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %217, i8* %221) #10
  br label %222

222:                                              ; preds = %220, %215
  %223 = phi i8* [ %221, %220 ], [ %218, %215 ]
  %224 = bitcast i8* %223 to %"class.blink::ThreadState"**
  %225 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %224, align 8
  %226 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %225, i64 0, i32 3, i32 0, i32 0, i32 0
  %227 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %226, align 8
  %228 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %227, i64 0, i32 0, i32 0
  %229 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %228, align 8
  %230 = icmp eq %"class.blink::PersistentNode"* %229, null
  br i1 %230, label %231, label %234, !prof !3

231:                                              ; preds = %222
  %232 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %227, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %232) #10
  %233 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %228, align 8
  br label %234

234:                                              ; preds = %231, %222
  %235 = phi %"class.blink::PersistentNode"* [ %233, %231 ], [ %229, %222 ]
  %236 = bitcast %"class.blink::PersistentNode"* %235 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = bitcast %"class.blink::PersistentRegion"* %227 to i64*
  store i64 %237, i64* %238, align 8
  %239 = bitcast %"class.blink::PersistentNode"* %235 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18WindowAgentFactory17GetAgentForOriginEbPN2v87IsolateEPKNS_14SecurityOriginEbE22s_static_origin_agents to %"class.blink::PersistentBase"*), %"class.blink::PersistentBase"** %239, align 8
  %240 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %235, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11HeapHashMapINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS_10WeakMemberINS_11WindowAgentEEENS3_30SchemeAndRegistrableDomainHashENS3_32SchemeAndRegistrableDomainTraitsEN3WTF10HashTraitsIS7_EEEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSG_15TracePersistentEPNS_7VisitorEEEE10TrampolineESI_PKv, void (%"class.blink::Visitor"*, i8*)** %240, align 8
  store %"class.blink::PersistentNode"* %235, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink18WindowAgentFactory17GetAgentForOriginEbPN2v87IsolateEPKNS_14SecurityOriginEbE22s_static_origin_agents, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  br label %241

241:                                              ; preds = %208, %208, %234
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink18WindowAgentFactory17GetAgentForOriginEbPN2v87IsolateEPKNS_14SecurityOriginEbE22s_static_origin_agents) #10
  br label %242

242:                                              ; preds = %205, %241, %202
  %243 = load %"class.blink::HeapHashMap.5"*, %"class.blink::HeapHashMap.5"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18WindowAgentFactory17GetAgentForOriginEbPN2v87IsolateEPKNS_14SecurityOriginEbE22s_static_origin_agents to %"class.blink::HeapHashMap.5"**), align 8
  br label %244

244:                                              ; preds = %242, %201
  %245 = phi %"class.blink::HeapHashMap.5"* [ %243, %242 ], [ %143, %201 ]
  %246 = bitcast %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %246) #10
  %247 = getelementptr inbounds %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain", %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* %11, i64 0, i32 0, i32 0, i32 0
  %248 = getelementptr inbounds %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain", %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* %11, i64 0, i32 1, i32 0, i32 0
  %249 = bitcast %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %249, i8 -86, i64 16, i1 false)
  %250 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %8, align 8
  %251 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %250, i64 0, i32 1, i32 0, i32 0
  %252 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %251, align 8
  %253 = icmp eq %"class.WTF::StringImpl"* %252, null
  br i1 %253, label %271, label %254

254:                                              ; preds = %244
  %255 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %252, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %256 = load atomic i32, i32* %255 monotonic, align 4
  %257 = and i32 %256, 2
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %272

259:                                              ; preds = %254
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %252, i64 0, i32 0
  %261 = load i32, i32* %260, align 4
  %262 = zext i32 %261 to i33
  %263 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %262, i33 1) #10
  %264 = extractvalue { i33, i1 } %263, 1
  %265 = extractvalue { i33, i1 } %263, 0
  %266 = icmp slt i33 %265, 0
  %267 = or i1 %264, %266
  br i1 %267, label %268, label %269, !prof !3

268:                                              ; preds = %259
  call void @llvm.trap() #10
  unreachable

269:                                              ; preds = %259
  %270 = trunc i33 %265 to i32
  store i32 %270, i32* %260, align 4
  br label %272

271:                                              ; preds = %244
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %247, align 8
  br label %288

272:                                              ; preds = %254, %269
  store %"class.WTF::StringImpl"* %252, %"class.WTF::StringImpl"** %247, align 8
  %273 = load atomic i32, i32* %255 monotonic, align 4
  %274 = and i32 %273, 2
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %288

276:                                              ; preds = %272
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %252, i64 0, i32 0
  %278 = load i32, i32* %277, align 4
  %279 = zext i32 %278 to i33
  %280 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %279, i33 1) #10
  %281 = extractvalue { i33, i1 } %280, 1
  %282 = extractvalue { i33, i1 } %280, 0
  %283 = icmp slt i33 %282, 0
  %284 = or i1 %281, %283
  br i1 %284, label %285, label %286, !prof !3

285:                                              ; preds = %276
  call void @llvm.trap() #10
  unreachable

286:                                              ; preds = %276
  %287 = trunc i33 %282 to i32
  store i32 %287, i32* %277, align 4
  br label %288

288:                                              ; preds = %271, %286, %272
  store %"class.WTF::StringImpl"* %142, %"class.WTF::StringImpl"** %248, align 8
  %289 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %289, label %307, label %290

290:                                              ; preds = %288
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %292 = load atomic i32, i32* %291 monotonic, align 4
  %293 = and i32 %292, 2
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %307

295:                                              ; preds = %290
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %297 = load i32, i32* %296, align 4
  %298 = zext i32 %297 to i33
  %299 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %298, i33 1) #10
  %300 = extractvalue { i33, i1 } %299, 1
  %301 = extractvalue { i33, i1 } %299, 0
  %302 = icmp slt i33 %301, 0
  %303 = or i1 %300, %302
  br i1 %303, label %304, label %305, !prof !3

304:                                              ; preds = %295
  call void @llvm.trap() #10
  unreachable

305:                                              ; preds = %295
  %306 = trunc i33 %301 to i32
  store i32 %306, i32* %296, align 4
  br label %307

307:                                              ; preds = %288, %290, %305
  br i1 %253, label %321, label %308

308:                                              ; preds = %307
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %252, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %310 = load atomic i32, i32* %309 monotonic, align 4
  %311 = and i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %252, i64 0, i32 0
  %314 = load i32, i32* %313, align 4
  br i1 %312, label %315, label %317

315:                                              ; preds = %308
  %316 = add i32 %314, -1
  store i32 %316, i32* %313, align 4
  br label %317

317:                                              ; preds = %315, %308
  %318 = phi i32 [ %316, %315 ], [ %314, %308 ]
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %320, label %321

320:                                              ; preds = %317
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %252) #10
  br label %321

321:                                              ; preds = %307, %317, %320
  %322 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %322) #10
  store i8* null, i8** %12, align 8
  %323 = getelementptr inbounds %"class.blink::HeapHashMap.5", %"class.blink::HeapHashMap.5"* %245, i64 0, i32 0, i32 0
  %324 = call { %"struct.WTF::KeyValuePair.11"*, i8 } @_ZN3WTF9HashTableIN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS3_NS1_10WeakMemberINS1_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS2_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS7_EEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERS3_DnEENS_18HashTableAddResultISH_S8_EEOT0_OT1_(%"class.WTF::HashTable.9"* %323, %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* nonnull dereferenceable(16) %11, i8** nonnull dereferenceable(8) %12) #10
  %325 = extractvalue { %"struct.WTF::KeyValuePair.11"*, i8 } %324, 0
  %326 = extractvalue { %"struct.WTF::KeyValuePair.11"*, i8 } %324, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %322) #10
  %327 = and i8 %326, 1
  %328 = icmp eq i8 %327, 0
  br i1 %328, label %343, label %329

329:                                              ; preds = %321
  %330 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5AgentEEEPhm(i64 40) #10
  %331 = bitcast i8* %330 to %"class.blink::WindowAgent"*
  call void @_ZN5blink11WindowAgentC1EPN2v87IsolateE(%"class.blink::WindowAgent"* %331, %"class.v8::Isolate"* %2) #10
  %332 = getelementptr inbounds i8, i8* %330, i64 -4
  %333 = bitcast i8* %332 to i16*
  %334 = load atomic i16, i16* %333 monotonic, align 2
  %335 = or i16 %334, 1
  store atomic i16 %335, i16* %333 release, align 2
  %336 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %325, i64 0, i32 1
  %337 = ptrtoint i8* %330 to i64
  %338 = bitcast %"class.blink::WeakMember"* %336 to i64*
  store atomic i64 %337, i64* %338 monotonic, align 8
  %339 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %343, label %341

341:                                              ; preds = %329
  %342 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %330) #10
  br label %343

343:                                              ; preds = %341, %329, %321
  %344 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %325, i64 0, i32 1, i32 0, i32 0
  %345 = load %"class.blink::WindowAgent"*, %"class.blink::WindowAgent"** %344, align 8
  %346 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %248, align 8
  %347 = icmp eq %"class.WTF::StringImpl"* %346, null
  br i1 %347, label %361, label %348

348:                                              ; preds = %343
  %349 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %346, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %350 = load atomic i32, i32* %349 monotonic, align 4
  %351 = and i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %346, i64 0, i32 0
  %354 = load i32, i32* %353, align 4
  br i1 %352, label %355, label %357

355:                                              ; preds = %348
  %356 = add i32 %354, -1
  store i32 %356, i32* %353, align 4
  br label %357

357:                                              ; preds = %355, %348
  %358 = phi i32 [ %356, %355 ], [ %354, %348 ]
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %360, label %361

360:                                              ; preds = %357
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %346) #10
  br label %361

361:                                              ; preds = %360, %357, %343
  %362 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %247, align 8
  %363 = icmp eq %"class.WTF::StringImpl"* %362, null
  br i1 %363, label %377, label %364

364:                                              ; preds = %361
  %365 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %362, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %366 = load atomic i32, i32* %365 monotonic, align 4
  %367 = and i32 %366, 2
  %368 = icmp eq i32 %367, 0
  %369 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %362, i64 0, i32 0
  %370 = load i32, i32* %369, align 4
  br i1 %368, label %371, label %373

371:                                              ; preds = %364
  %372 = add i32 %370, -1
  store i32 %372, i32* %369, align 4
  br label %373

373:                                              ; preds = %371, %364
  %374 = phi i32 [ %372, %371 ], [ %370, %364 ]
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %376, label %377

376:                                              ; preds = %373
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %362) #10
  br label %377

377:                                              ; preds = %361, %373, %376
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %246) #10
  br i1 %289, label %391, label %378

378:                                              ; preds = %377
  %379 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %380 = load atomic i32, i32* %379 monotonic, align 4
  %381 = and i32 %380, 2
  %382 = icmp eq i32 %381, 0
  %383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %384 = load i32, i32* %383, align 4
  br i1 %382, label %385, label %387

385:                                              ; preds = %378
  %386 = add i32 %384, -1
  store i32 %386, i32* %383, align 4
  br label %387

387:                                              ; preds = %385, %378
  %388 = phi i32 [ %386, %385 ], [ %384, %378 ]
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %390, label %391

390:                                              ; preds = %387
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %142) #10
  br label %391

391:                                              ; preds = %39, %51, %34, %17, %29, %13, %390, %387, %377, %112, %80
  %392 = phi %"class.blink::WindowAgent"* [ %82, %80 ], [ %114, %112 ], [ %345, %377 ], [ %345, %387 ], [ %345, %390 ], [ %15, %13 ], [ %31, %29 ], [ %28, %17 ], [ %37, %34 ], [ %53, %51 ], [ %50, %39 ]
  ret %"class.blink::WindowAgent"* %392
}

declare zeroext i1 @_ZNK5blink14SecurityOrigin7IsLocalEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink5Agent26SetIsExplicitlyOriginKeyedEb(%"class.blink::Agent"*, i1 zeroext) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin17RegistrableDomainEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18WindowAgentFactory5TraceEPNS_7VisitorE(%"class.blink::WindowAgentFactory"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::TraceDescriptor", align 8
  %4 = alloca %"struct.blink::TraceDescriptor", align 8
  %5 = alloca %"struct.blink::TraceDescriptor", align 8
  %6 = bitcast %"class.blink::WindowAgentFactory"* %0 to i64*
  %7 = load atomic i64, i64* %6 monotonic, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %2
  %10 = inttoptr i64 %7 to i8*
  %11 = bitcast %"class.blink::WindowAgentFactory"* %0 to i8*
  %12 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %13, i64 6
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %14, align 8
  tail call void %15(%"class.blink::Visitor"* %1, i8* nonnull %10, i8* %11, i8* %10, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11WindowAgentEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_11WindowAgentEEEvRKNS_14LivenessBrokerEPKv) #10
  br label %16

16:                                               ; preds = %2, %9
  %17 = getelementptr inbounds %"class.blink::WindowAgentFactory", %"class.blink::WindowAgentFactory"* %0, i64 0, i32 1
  %18 = bitcast %"class.blink::WeakMember"* %17 to i64*
  %19 = load atomic i64, i64* %18 monotonic, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %16
  %22 = inttoptr i64 %19 to i8*
  %23 = bitcast %"class.blink::WeakMember"* %17 to i8*
  %24 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %25 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %25, i64 6
  %27 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %26, align 8
  tail call void %27(%"class.blink::Visitor"* %1, i8* nonnull %22, i8* %23, i8* %22, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11WindowAgentEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_11WindowAgentEEEvRKNS_14LivenessBrokerEPKv) #10
  br label %28

28:                                               ; preds = %16, %21
  %29 = getelementptr inbounds %"class.blink::WindowAgentFactory", %"class.blink::WindowAgentFactory"* %0, i64 0, i32 2
  %30 = bitcast %"class.blink::HeapHashMap"* %29 to i8*
  %31 = bitcast %"class.blink::HeapHashMap"* %29 to i64*
  %32 = load atomic i64, i64* %31 monotonic, align 8
  %33 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair"*
  %34 = bitcast %"class.blink::HeapHashMap"* %29 to i8**
  %35 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %36 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %36, i64 11
  %38 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %1, i8** %34) #10
  %39 = inttoptr i64 %32 to i8*
  %40 = bitcast %"struct.blink::TraceDescriptor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #10
  %41 = bitcast %"struct.blink::TraceDescriptor"* %5 to %"struct.WTF::KeyValuePair"**
  store %"struct.WTF::KeyValuePair"* %33, %"struct.WTF::KeyValuePair"** %41, align 8
  %42 = getelementptr inbounds %"struct.blink::TraceDescriptor", %"struct.blink::TraceDescriptor"* %5, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %42, align 8
  %43 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %44 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %44, i64 10
  %46 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %45, align 8
  tail call void %46(%"class.blink::Visitor"* %1, i8* %39, i8** %34, i8* %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableI13scoped_refptrIKNS_14SecurityOriginEENS2_12KeyValuePairIS7_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS_18SecurityOriginHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, %"struct.blink::TraceDescriptor"* nonnull byval(%"struct.blink::TraceDescriptor") align 8 %5, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1E13scoped_refptrIKN5blink14SecurityOriginEENS_12KeyValuePairIS6_NS3_10WeakMemberINS3_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS3_18SecurityOriginHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE7ProcessERKNS3_14LivenessBrokerEPKv, i8* %30) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #10
  %47 = getelementptr inbounds %"class.blink::WindowAgentFactory", %"class.blink::WindowAgentFactory"* %0, i64 0, i32 3
  %48 = bitcast %"class.blink::HeapHashMap"* %47 to i8*
  %49 = bitcast %"class.blink::HeapHashMap"* %47 to i64*
  %50 = load atomic i64, i64* %49 monotonic, align 8
  %51 = inttoptr i64 %50 to %"struct.WTF::KeyValuePair"*
  %52 = bitcast %"class.blink::HeapHashMap"* %47 to i8**
  %53 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %35, align 8
  %54 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %53, i64 11
  %55 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %54, align 8
  tail call void %55(%"class.blink::Visitor"* %1, i8** %52) #10
  %56 = inttoptr i64 %50 to i8*
  %57 = bitcast %"struct.blink::TraceDescriptor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #10
  %58 = bitcast %"struct.blink::TraceDescriptor"* %4 to %"struct.WTF::KeyValuePair"**
  store %"struct.WTF::KeyValuePair"* %51, %"struct.WTF::KeyValuePair"** %58, align 8
  %59 = getelementptr inbounds %"struct.blink::TraceDescriptor", %"struct.blink::TraceDescriptor"* %4, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %59, align 8
  %60 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %43, align 8
  %61 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %60, i64 10
  %62 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %61, align 8
  tail call void %62(%"class.blink::Visitor"* %1, i8* %56, i8** %52, i8* %56, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableI13scoped_refptrIKNS_14SecurityOriginEENS2_12KeyValuePairIS7_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS_18SecurityOriginHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, %"struct.blink::TraceDescriptor"* nonnull byval(%"struct.blink::TraceDescriptor") align 8 %4, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1E13scoped_refptrIKN5blink14SecurityOriginEENS_12KeyValuePairIS6_NS3_10WeakMemberINS3_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS3_18SecurityOriginHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE7ProcessERKNS3_14LivenessBrokerEPKv, i8* %48) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #10
  %63 = getelementptr inbounds %"class.blink::WindowAgentFactory", %"class.blink::WindowAgentFactory"* %0, i64 0, i32 4
  %64 = bitcast %"class.blink::HeapHashMap.5"* %63 to i8*
  %65 = bitcast %"class.blink::HeapHashMap.5"* %63 to i64*
  %66 = load atomic i64, i64* %65 monotonic, align 8
  %67 = inttoptr i64 %66 to %"struct.WTF::KeyValuePair.11"*
  %68 = bitcast %"class.blink::HeapHashMap.5"* %63 to i8**
  %69 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %35, align 8
  %70 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %69, i64 11
  %71 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %70, align 8
  tail call void %71(%"class.blink::Visitor"* %1, i8** %68) #10
  %72 = inttoptr i64 %66 to i8*
  %73 = bitcast %"struct.blink::TraceDescriptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #10
  %74 = bitcast %"struct.blink::TraceDescriptor"* %3 to %"struct.WTF::KeyValuePair.11"**
  store %"struct.WTF::KeyValuePair.11"* %67, %"struct.WTF::KeyValuePair.11"** %74, align 8
  %75 = getelementptr inbounds %"struct.blink::TraceDescriptor", %"struct.blink::TraceDescriptor"* %3, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %75, align 8
  %76 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %43, align 8
  %77 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %76, i64 10
  %78 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %77, align 8
  tail call void %78(%"class.blink::Visitor"* %1, i8* %72, i8** %68, i8* %72, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS2_12KeyValuePairIS5_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS4_30SchemeAndRegistrableDomainHashENS2_18HashMapValueTraitsINS4_32SchemeAndRegistrableDomainTraitsENS2_10HashTraitsIS9_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, %"struct.blink::TraceDescriptor"* nonnull byval(%"struct.blink::TraceDescriptor") align 8 %3, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS4_NS2_10WeakMemberINS2_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS3_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS3_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS8_EEEESD_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv, i8* %64) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18WindowAgentFactory30SchemeAndRegistrableDomainHash7GetHashERKNS0_26SchemeAndRegistrableDomainE(%"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain", %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load atomic i32, i32* %4 monotonic, align 4
  %6 = lshr i32 %5, 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %3) #10
  br label %10

10:                                               ; preds = %1, %8
  %11 = phi i32 [ %9, %8 ], [ %6, %1 ]
  %12 = getelementptr inbounds %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain", %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = lshr i32 %15, 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %10
  %19 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %13) #10
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i32 [ %19, %18 ], [ %16, %10 ]
  %22 = zext i32 %11 to i64
  %23 = mul i64 %22, 5146158508761418231
  %24 = zext i32 %21 to i64
  %25 = mul i64 %24, -682818954288075998
  %26 = add i64 %25, %23
  %27 = lshr i64 %26, 32
  %28 = trunc i64 %27 to i32
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink18WindowAgentFactory30SchemeAndRegistrableDomainHash5EqualERKNS0_26SchemeAndRegistrableDomainES4_(%"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* nocapture readonly dereferenceable(16), %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain", %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = getelementptr inbounds %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain", %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %4, %"class.WTF::StringImpl"* %6) #10
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain", %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain", %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* %1, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"* %12) #10
  br label %14

14:                                               ; preds = %8, %2
  %15 = phi i1 [ false, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink18WindowAgentFactory32SchemeAndRegistrableDomainTraits12IsEmptyValueERKNS0_26SchemeAndRegistrableDomainE(%"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* nocapture readonly dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain", %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink18WindowAgentFactory32SchemeAndRegistrableDomainTraits14IsDeletedValueERKNS0_26SchemeAndRegistrableDomainE(%"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* nocapture readonly dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %2 = bitcast %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, inttoptr (i64 -1 to i8*)
  ret i1 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink18WindowAgentFactory32SchemeAndRegistrableDomainTraits21ConstructDeletedValueERNS0_26SchemeAndRegistrableDomainEb(%"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* nocapture dereferenceable(16), i1 zeroext) local_unnamed_addr #5 align 2 {
  %3 = bitcast %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* %0 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %3, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN5blink11WindowAgentC1EPN2v87IsolateE(%"class.blink::WindowAgent"*, %"class.v8::Isolate"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_5AgentEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_5AgentEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_5AgentEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_5AgentEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5AgentEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #8 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #9

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_5AgentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Agent"*
  %4 = bitcast i8* %1 to void (%"class.blink::Agent"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Agent"*, %"class.blink::Visitor"*)**, void (%"class.blink::Agent"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Agent"*, %"class.blink::Visitor"*)*, void (%"class.blink::Agent"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::Agent"*, %"class.blink::Visitor"*)*, void (%"class.blink::Agent"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Agent"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_5AgentEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::Agent"*
  %3 = bitcast i8* %0 to void (%"class.blink::Agent"*)***
  %4 = load void (%"class.blink::Agent"*)**, void (%"class.blink::Agent"*)*** %3, align 8
  %5 = load void (%"class.blink::Agent"*)*, void (%"class.blink::Agent"*)** %4, align 8
  tail call void %5(%"class.blink::Agent"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_5AgentEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableI13scoped_refptrIKN5blink14SecurityOriginEENS_12KeyValuePairIS5_NS2_10WeakMemberINS2_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_18SecurityOriginHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS9_EEEESF_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERPS4_DnEENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::SecurityOrigin"** dereferenceable(8), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableI13scoped_refptrIKN5blink14SecurityOriginEENS_12KeyValuePairIS5_NS2_10WeakMemberINS2_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_18SecurityOriginHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS9_EEEESF_NS2_13HeapAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %1, align 8
  %17 = tail call i32 @_ZN5blink18SecurityOriginHash7GetHashEPKNS_14SecurityOriginE(%"class.blink::SecurityOrigin"* %16) #10
  %18 = and i32 %17, %14
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %19
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %21, align 8
  %23 = icmp eq %"class.blink::SecurityOrigin"* %22, null
  br i1 %23, label %76, label %24

24:                                               ; preds = %10
  %25 = xor i32 %17, -1
  %26 = lshr i32 %17, 23
  %27 = add i32 %26, %25
  %28 = shl i32 %27, 12
  %29 = xor i32 %28, %27
  %30 = lshr i32 %29, 7
  %31 = xor i32 %30, %29
  %32 = shl i32 %31, 2
  %33 = xor i32 %32, %31
  %34 = lshr i32 %33, 20
  %35 = xor i32 %34, %33
  %36 = or i32 %35, 1
  %37 = zext i32 %36 to i64
  br label %38

38:                                               ; preds = %24, %56
  %39 = phi %"struct.WTF::KeyValuePair"* [ %20, %24 ], [ %62, %56 ]
  %40 = phi %"struct.WTF::KeyValuePair"* [ null, %24 ], [ %57, %56 ]
  %41 = phi i64 [ %19, %24 ], [ %61, %56 ]
  %42 = phi i64 [ 0, %24 ], [ %59, %56 ]
  %43 = bitcast %"struct.WTF::KeyValuePair"* %39 to i8**
  %44 = load i8*, i8** %43, align 8
  %45 = icmp eq i8* %44, inttoptr (i64 -1 to i8*)
  %46 = bitcast i8* %44 to %"class.blink::SecurityOrigin"*
  br i1 %45, label %56, label %47

47:                                               ; preds = %38
  %48 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %1, align 8
  %49 = icmp ne i8* %44, null
  %50 = icmp ne %"class.blink::SecurityOrigin"* %48, null
  %51 = and i1 %50, %49
  br i1 %51, label %52, label %54

52:                                               ; preds = %47
  %53 = tail call zeroext i1 @_ZNK5blink14SecurityOrigin16IsSameOriginWithEPKS0_(%"class.blink::SecurityOrigin"* nonnull %46, %"class.blink::SecurityOrigin"* nonnull %48) #10
  br i1 %53, label %179, label %56

54:                                               ; preds = %47
  %55 = icmp eq %"class.blink::SecurityOrigin"* %48, %46
  br i1 %55, label %179, label %56

56:                                               ; preds = %38, %52, %54
  %57 = phi %"struct.WTF::KeyValuePair"* [ %40, %54 ], [ %39, %38 ], [ %40, %52 ]
  %58 = icmp eq i64 %42, 0
  %59 = select i1 %58, i64 %37, i64 %42
  %60 = add i64 %59, %41
  %61 = and i64 %60, %15
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0
  %64 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %63, align 8
  %65 = icmp eq %"class.blink::SecurityOrigin"* %64, null
  br i1 %65, label %66, label %38

66:                                               ; preds = %56
  %67 = icmp eq %"struct.WTF::KeyValuePair"* %57, null
  br i1 %67, label %76, label %68

68:                                               ; preds = %66
  %69 = bitcast %"struct.WTF::KeyValuePair"* %57 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %69, i64 16) #10
  %70 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = add i32 %71, 2147483647
  %73 = and i32 %72, 2147483647
  %74 = and i32 %71, -2147483648
  %75 = or i32 %73, %74
  store i32 %75, i32* %70, align 8
  br label %76

76:                                               ; preds = %10, %66, %68
  %77 = phi %"struct.WTF::KeyValuePair"* [ %57, %68 ], [ %62, %66 ], [ %20, %10 ]
  %78 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %1, align 8
  %79 = icmp eq %"class.blink::SecurityOrigin"* %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %78, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %81) #10
  br label %82

82:                                               ; preds = %80, %76
  %83 = ptrtoint %"class.blink::SecurityOrigin"* %78 to i64
  %84 = bitcast %"struct.WTF::KeyValuePair"* %77 to i64*
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 0, i32 0, i32 0
  %86 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %85, align 8
  store i64 %83, i64* %84, align 8
  %87 = icmp eq %"class.blink::SecurityOrigin"* %86, null
  br i1 %87, label %95, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %86, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %89) #10
  %90 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %86, i64 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %88
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %86) #10
  %94 = bitcast %"class.blink::SecurityOrigin"* %86 to i8*
  tail call void @free(i8* %94) #10
  br label %95

95:                                               ; preds = %82, %88, %93
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 0, i32 1
  %97 = bitcast %"class.blink::WeakMember"* %96 to i64*
  store atomic i64 0, i64* %97 monotonic, align 8
  %98 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %133, label %100

100:                                              ; preds = %95
  %101 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %102 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %101, i64 0, i32 1
  %103 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %102) #10
  %104 = icmp eq i8* %103, null
  br i1 %104, label %105, label %107, !prof !3

105:                                              ; preds = %100
  %106 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %102, i8* %106) #10
  br label %107

107:                                              ; preds = %105, %100
  %108 = phi i8* [ %106, %105 ], [ %103, %100 ]
  %109 = bitcast i8* %108 to %"class.blink::ThreadState"**
  %110 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %110, i64 0, i32 9
  %112 = load i8, i8* %111, align 1, !range !2
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %133, label %114

114:                                              ; preds = %107
  %115 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %110, i64 0, i32 13
  %116 = load i64, i64* %115, align 8
  %117 = add i64 %116, 1
  store i64 %117, i64* %115, align 8
  %118 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %110, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %119 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %118, align 8
  %120 = load atomic i64, i64* %97 monotonic, align 8
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %130, label %122

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %119, i64 0, i32 0, i32 0
  %124 = inttoptr i64 %120 to i8*
  %125 = bitcast %"class.blink::MarkingVisitor"* %119 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %126 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %125, align 8
  %127 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %126, i64 5
  %128 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %127, align 8
  tail call void %128(%"class.blink::Visitor"* %123, i8* nonnull %124, i8* %124, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11WindowAgentEE5TraceEPNS_7VisitorEPKv) #10
  %129 = load i64, i64* %115, align 8
  br label %130

130:                                              ; preds = %122, %114
  %131 = phi i64 [ %117, %114 ], [ %129, %122 ]
  %132 = add i64 %131, -1
  store i64 %132, i64* %115, align 8
  br label %133

133:                                              ; preds = %95, %107, %130
  %134 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %135 = load i32, i32* %134, align 4
  %136 = add i32 %135, 1
  store i32 %136, i32* %134, align 4
  %137 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %138 = load i32, i32* %137, align 8
  %139 = add i32 %138, %136
  %140 = shl i32 %139, 1
  %141 = load i32, i32* %12, align 8
  %142 = icmp ult i32 %140, %141
  br i1 %142, label %145, label %143

143:                                              ; preds = %133
  %144 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableI13scoped_refptrIKN5blink14SecurityOriginEENS_12KeyValuePairIS5_NS2_10WeakMemberINS2_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_18SecurityOriginHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS9_EEEESF_NS2_13HeapAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %77)
  br label %179

145:                                              ; preds = %133
  %146 = mul i32 %136, 6
  %147 = icmp ult i32 %146, %141
  %148 = icmp ugt i32 %141, 8
  %149 = and i1 %147, %148
  br i1 %149, label %150, label %179

150:                                              ; preds = %145
  %151 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %152 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %151, i64 0, i32 1
  %153 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %152) #10
  %154 = icmp eq i8* %153, null
  br i1 %154, label %155, label %157, !prof !3

155:                                              ; preds = %150
  %156 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %152, i8* %156) #10
  br label %157

157:                                              ; preds = %155, %150
  %158 = phi i8* [ %156, %155 ], [ %153, %150 ]
  %159 = bitcast i8* %158 to %"class.blink::ThreadState"**
  %160 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %159, align 8
  %161 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %160, i64 0, i32 6
  %162 = load i8, i8* %161, align 8, !range !2
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %168, label %164

164:                                              ; preds = %157
  %165 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %160, i64 0, i32 16
  %166 = load i32, i32* %165, align 4
  %167 = icmp eq i32 %166, 1
  br i1 %167, label %179, label %168

168:                                              ; preds = %157, %164
  %169 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %160, i64 0, i32 13
  %170 = load i64, i64* %169, align 8
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %179

172:                                              ; preds = %168
  %173 = load i32, i32* %12, align 8
  %174 = lshr i32 %173, 1
  %175 = zext i32 %174 to i64
  %176 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableI13scoped_refptrIKNS_14SecurityOriginEENS2_12KeyValuePairIS7_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS_18SecurityOriginHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64 %175) #10
  %177 = bitcast %"class.blink::HeapHashTableBacking"* %176 to %"struct.WTF::KeyValuePair"*
  %178 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableI13scoped_refptrIKN5blink14SecurityOriginEENS_12KeyValuePairIS5_NS2_10WeakMemberINS2_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_18SecurityOriginHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS9_EEEESF_NS2_13HeapAllocatorEE8RehashToEPSA_jSK_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %177, i32 %174, %"struct.WTF::KeyValuePair"* %77) #10
  br label %179

179:                                              ; preds = %54, %52, %164, %145, %143, %172, %168
  %180 = phi i8 [ 1, %168 ], [ 1, %172 ], [ 1, %143 ], [ 1, %145 ], [ 1, %164 ], [ 0, %52 ], [ 0, %54 ]
  %181 = phi %"struct.WTF::KeyValuePair"* [ %77, %168 ], [ %178, %172 ], [ %144, %143 ], [ %77, %145 ], [ %77, %164 ], [ %39, %52 ], [ %39, %54 ]
  %182 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %181, 0
  %183 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %182, i8 %180, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %183
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableI13scoped_refptrIKN5blink14SecurityOriginEENS_12KeyValuePairIS5_NS2_10WeakMemberINS2_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_18SecurityOriginHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS9_EEEESF_NS2_13HeapAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #10
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %23, i8* %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #10
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableI13scoped_refptrIKN5blink14SecurityOriginEENS_12KeyValuePairIS5_NS2_10WeakMemberINS2_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_18SecurityOriginHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS9_EEEESF_NS2_13HeapAllocatorEE12ExpandBufferEjPSA_Rb(%"class.WTF::HashTable"* %0, i32 %35, %"struct.WTF::KeyValuePair"* %1, i8* nonnull dereferenceable(1) %4) #10
  %37 = load i8, i8* %4, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableI13scoped_refptrIKNS_14SecurityOriginEENS2_12KeyValuePairIS7_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS_18SecurityOriginHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #10
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair"*
  %44 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableI13scoped_refptrIKN5blink14SecurityOriginEENS_12KeyValuePairIS5_NS2_10WeakMemberINS2_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_18SecurityOriginHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS9_EEEESF_NS2_13HeapAllocatorEE8RehashToEPSA_jSK_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %43, i32 %40, %"struct.WTF::KeyValuePair"* %1) #10
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair"* %46
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink18SecurityOriginHash7GetHashEPKNS_14SecurityOriginE(%"class.blink::SecurityOrigin"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.absl::optional.229", align 8
  %3 = getelementptr inbounds %"class.absl::optional.229", %"class.absl::optional.229"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink14SecurityOrigin24GetNonceForSerializationEv(%"class.absl::optional.229"* nonnull sret %2, %"class.blink::SecurityOrigin"* %0) #10
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.absl::optional.229", %"class.absl::optional.229"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.absl::optional.229", %"class.absl::optional.229"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = call i64 @_ZN4base10HashInts64Emm(i64 %8, i64 %10) #10
  br label %12

12:                                               ; preds = %1, %6
  %13 = phi i64 [ %11, %6 ], [ 0, %1 ]
  %14 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %62, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %36

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i33
  %26 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %25, i33 1) #10
  %27 = extractvalue { i33, i1 } %26, 1
  %28 = extractvalue { i33, i1 } %26, 0
  %29 = icmp slt i33 %28, 0
  %30 = or i1 %27, %29
  br i1 %30, label %31, label %32, !prof !3

31:                                               ; preds = %22
  call void @llvm.trap() #10
  unreachable

32:                                               ; preds = %22
  %33 = trunc i33 %28 to i32
  store i32 %33, i32* %23, align 4
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %54, label %36

36:                                               ; preds = %17, %32
  %37 = phi %"class.WTF::StringImpl"* [ %34, %32 ], [ %15, %17 ]
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i33
  %46 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #10
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !3

51:                                               ; preds = %42
  call void @llvm.trap() #10
  unreachable

52:                                               ; preds = %42
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %43, align 4
  br label %54

54:                                               ; preds = %32, %36, %52
  %55 = phi %"class.WTF::StringImpl"* [ null, %32 ], [ %37, %36 ], [ %37, %52 ]
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = lshr i32 %57, 8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %54
  %61 = call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %55) #10
  br label %62

62:                                               ; preds = %60, %54, %12
  %63 = phi %"class.WTF::StringImpl"* [ undef, %12 ], [ %55, %54 ], [ %55, %60 ]
  %64 = phi i1 [ true, %12 ], [ false, %54 ], [ false, %60 ]
  %65 = phi i32 [ 0, %12 ], [ %58, %54 ], [ %61, %60 ]
  %66 = lshr i32 %65, 16
  %67 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %115, label %70

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %89

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i33
  %79 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %78, i33 1) #10
  %80 = extractvalue { i33, i1 } %79, 1
  %81 = extractvalue { i33, i1 } %79, 0
  %82 = icmp slt i33 %81, 0
  %83 = or i1 %80, %82
  br i1 %83, label %84, label %85, !prof !3

84:                                               ; preds = %75
  call void @llvm.trap() #10
  unreachable

85:                                               ; preds = %75
  %86 = trunc i33 %81 to i32
  store i32 %86, i32* %76, align 4
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %107, label %89

89:                                               ; preds = %70, %85
  %90 = phi %"class.WTF::StringImpl"* [ %87, %85 ], [ %68, %70 ]
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %107

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i33
  %99 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %98, i33 1) #10
  %100 = extractvalue { i33, i1 } %99, 1
  %101 = extractvalue { i33, i1 } %99, 0
  %102 = icmp slt i33 %101, 0
  %103 = or i1 %100, %102
  br i1 %103, label %104, label %105, !prof !3

104:                                              ; preds = %95
  call void @llvm.trap() #10
  unreachable

105:                                              ; preds = %95
  %106 = trunc i33 %101 to i32
  store i32 %106, i32* %96, align 4
  br label %107

107:                                              ; preds = %85, %89, %105
  %108 = phi %"class.WTF::StringImpl"* [ null, %85 ], [ %90, %89 ], [ %90, %105 ]
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = lshr i32 %110, 8
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %107
  %114 = call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %108) #10
  br label %115

115:                                              ; preds = %113, %107, %62
  %116 = phi %"class.WTF::StringImpl"* [ undef, %62 ], [ %108, %107 ], [ %108, %113 ]
  %117 = phi i1 [ true, %62 ], [ false, %107 ], [ false, %113 ]
  %118 = phi i32 [ 0, %62 ], [ %111, %107 ], [ %114, %113 ]
  %119 = lshr i32 %118, 16
  %120 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 4
  %121 = load i16, i16* %120, align 8
  %122 = zext i16 %121 to i32
  %123 = trunc i64 %13 to i32
  %124 = lshr i32 %123, 16
  %125 = lshr i64 %13, 32
  %126 = icmp eq %"class.WTF::StringImpl"* %116, null
  %127 = or i1 %117, %126
  br i1 %127, label %141, label %128

128:                                              ; preds = %115
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  br i1 %132, label %135, label %137

135:                                              ; preds = %128
  %136 = add i32 %134, -1
  store i32 %136, i32* %133, align 4
  br label %137

137:                                              ; preds = %135, %128
  %138 = phi i32 [ %136, %135 ], [ %134, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #10
  br label %141

141:                                              ; preds = %115, %140, %137
  br i1 %69, label %155, label %142

142:                                              ; preds = %141
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load atomic i32, i32* %143 monotonic, align 4
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  br i1 %146, label %149, label %151

149:                                              ; preds = %142
  %150 = add i32 %148, -1
  store i32 %150, i32* %147, align 4
  br label %151

151:                                              ; preds = %149, %142
  %152 = phi i32 [ %150, %149 ], [ %148, %142 ]
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %151
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #10
  br label %155

155:                                              ; preds = %141, %151, %154
  %156 = icmp eq %"class.WTF::StringImpl"* %63, null
  %157 = or i1 %64, %156
  br i1 %157, label %171, label %158

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #10
  br label %171

171:                                              ; preds = %155, %170, %167
  br i1 %16, label %185, label %172

172:                                              ; preds = %171
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load atomic i32, i32* %173 monotonic, align 4
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  br i1 %176, label %179, label %181

179:                                              ; preds = %172
  %180 = add i32 %178, -1
  store i32 %180, i32* %177, align 4
  br label %181

181:                                              ; preds = %179, %172
  %182 = phi i32 [ %180, %179 ], [ %178, %172 ]
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %185

184:                                              ; preds = %181
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #10
  br label %185

185:                                              ; preds = %171, %181, %184
  %186 = and i32 %65, 65535
  %187 = add nuw nsw i32 %186, -1640531527
  %188 = shl i32 %187, 16
  %189 = shl nuw nsw i32 %66, 11
  %190 = xor i32 %189, %187
  %191 = xor i32 %190, %188
  %192 = lshr i32 %191, 11
  %193 = add i32 %192, %191
  %194 = and i32 %118, 65535
  %195 = add i32 %193, %194
  %196 = shl i32 %195, 16
  %197 = shl nuw nsw i32 %119, 11
  %198 = xor i32 %197, %195
  %199 = xor i32 %198, %196
  %200 = lshr i32 %199, 11
  %201 = add i32 %199, %122
  %202 = add i32 %201, %200
  %203 = shl i32 %202, 16
  %204 = xor i32 %203, %202
  %205 = lshr i32 %204, 11
  %206 = and i32 %123, 65535
  %207 = add i32 %204, %206
  %208 = add i32 %207, %205
  %209 = shl i32 %208, 16
  %210 = shl nuw nsw i32 %124, 11
  %211 = xor i32 %208, %210
  %212 = xor i32 %211, %209
  %213 = lshr i32 %212, 11
  %214 = trunc i64 %125 to i32
  %215 = and i32 %214, 65535
  %216 = add i32 %212, %215
  %217 = add i32 %216, %213
  %218 = shl i32 %217, 16
  %219 = lshr i64 %13, 37
  %220 = trunc i64 %219 to i32
  %221 = and i32 %220, 134215680
  %222 = xor i32 %217, %221
  %223 = xor i32 %222, %218
  %224 = lshr i32 %223, 11
  %225 = add i32 %224, %223
  %226 = shl i32 %225, 3
  %227 = xor i32 %226, %225
  %228 = lshr i32 %227, 5
  %229 = add i32 %228, %227
  %230 = shl i32 %229, 2
  %231 = xor i32 %230, %229
  %232 = lshr i32 %231, 15
  %233 = add i32 %232, %231
  %234 = shl i32 %233, 10
  %235 = xor i32 %234, %233
  %236 = and i32 %235, 16777215
  %237 = icmp eq i32 %236, 0
  %238 = select i1 %237, i32 8388608, i32 %236
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #10
  ret i32 %238
}

declare void @_ZNK5blink14SecurityOrigin24GetNonceForSerializationEv(%"class.absl::optional.229"* sret, %"class.blink::SecurityOrigin"*) local_unnamed_addr #1

declare i64 @_ZN4base10HashInts64Emm(i64, i64) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink14SecurityOrigin16IsSameOriginWithEPKS0_(%"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"*) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #10
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #10
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #10
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #10
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #10
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #10
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11WindowAgentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WindowAgent"*
  tail call void @_ZNK5blink11WindowAgent5TraceEPNS_7VisitorE(%"class.blink::WindowAgent"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink11WindowAgent5TraceEPNS_7VisitorE(%"class.blink::WindowAgent"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableI13scoped_refptrIKN5blink14SecurityOriginEENS_12KeyValuePairIS5_NS2_10WeakMemberINS2_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_18SecurityOriginHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS9_EEEESF_NS2_13HeapAllocatorEE12ExpandBufferEjPSA_Rb(%"class.WTF::HashTable"*, i32, %"struct.WTF::KeyValuePair"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #10
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #10
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0)) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair"* %32, null
  br i1 %33, label %104, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #10
  br i1 %38, label %39, label %104

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableI13scoped_refptrIKNS_14SecurityOriginEENS2_12KeyValuePairIS7_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS_18SecurityOriginHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #10
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %101, %39
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %39 ], [ %65, %101 ]
  %49 = bitcast %"class.WTF::HashTable"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #10
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableI13scoped_refptrIKN5blink14SecurityOriginEENS_12KeyValuePairIS5_NS2_10WeakMemberINS2_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_18SecurityOriginHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS9_EEEESF_NS2_13HeapAllocatorEE8RehashToEPSA_jSK_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %42, i32 %1, %"struct.WTF::KeyValuePair"* %48)
  br label %104

58:                                               ; preds = %39, %101
  %59 = phi i64 [ %102, %101 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %65, %101 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair"* %64, %"struct.WTF::KeyValuePair"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0
  %67 = bitcast %"struct.WTF::KeyValuePair"* %62 to i64*
  %68 = load i64, i64* %67, align 8
  switch i64 %68, label %71 [
    i64 -1, label %69
    i64 0, label %69
  ]

69:                                               ; preds = %58, %58
  %70 = bitcast %"struct.WTF::KeyValuePair"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false)
  br label %101

71:                                               ; preds = %58
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0, i32 0
  %73 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %72, align 8
  %74 = icmp eq %"class.blink::SecurityOrigin"* %73, null
  br i1 %74, label %82, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %73, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %76) #10
  %77 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %75
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %73) #10
  %81 = bitcast %"class.blink::SecurityOrigin"* %73 to i8*
  call void @free(i8* %81) #10
  br label %82

82:                                               ; preds = %71, %75, %80
  %83 = load i64, i64* %67, align 8
  %84 = bitcast %"struct.WTF::KeyValuePair"* %64 to i64*
  store i64 %83, i64* %84, align 8
  store %"class.blink::SecurityOrigin"* null, %"class.blink::SecurityOrigin"** %66, align 8
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %59, i32 1
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %59, i32 1
  %87 = bitcast %"class.blink::WeakMember"* %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"class.blink::WeakMember"* %85 to i64*
  store i64 %88, i64* %89, align 8
  %90 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %90, i64 %59, i32 0, i32 0
  %92 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %91, align 8
  %93 = icmp eq %"class.blink::SecurityOrigin"* %92, null
  br i1 %93, label %101, label %94

94:                                               ; preds = %82
  %95 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %92, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %95) #10
  %96 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %92, i64 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %101

99:                                               ; preds = %94
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %92) #10
  %100 = bitcast %"class.blink::SecurityOrigin"* %92 to i8*
  call void @free(i8* %100) #10
  br label %101

101:                                              ; preds = %99, %94, %82, %69
  %102 = add nuw nsw i64 %59, 1
  %103 = icmp eq i64 %102, %43
  br i1 %103, label %47, label %58

104:                                              ; preds = %34, %30, %55
  %105 = phi %"struct.WTF::KeyValuePair"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair"* %105
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableI13scoped_refptrIKN5blink14SecurityOriginEENS_12KeyValuePairIS5_NS2_10WeakMemberINS2_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_18SecurityOriginHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS9_EEEESF_NS2_13HeapAllocatorEE8RehashToEPSA_jSK_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  br label %82

21:                                               ; preds = %119
  %22 = bitcast %"class.WTF::HashTable"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %120, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair"* [ null, %15 ], [ %122, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #10
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #10
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair"*
  %51 = icmp eq i64 %43, 0
  br i1 %51, label %78, label %52

52:                                               ; preds = %49
  %53 = icmp eq i32 %41, 0
  br i1 %53, label %76, label %54

54:                                               ; preds = %52
  %55 = zext i32 %41 to i64
  br label %56

56:                                               ; preds = %73, %54
  %57 = phi i64 [ 0, %54 ], [ %74, %73 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %50, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %58, i64 0, i32 0, i32 0
  %60 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %59, align 8
  %61 = ptrtoint %"class.blink::SecurityOrigin"* %60 to i64
  switch i64 %61, label %62 [
    i64 -1, label %73
    i64 0, label %73
  ]

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %60, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %63) #10
  %64 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %60) #10
  %68 = bitcast %"class.blink::SecurityOrigin"* %60 to i8*
  call void @free(i8* %68) #10
  br label %69

69:                                               ; preds = %67, %62
  %70 = bitcast %"struct.WTF::KeyValuePair"* %58 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %70, align 8
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %50, i64 %57, i32 1
  %72 = bitcast %"class.blink::WeakMember"* %71 to i64*
  store atomic i64 0, i64* %72 monotonic, align 8
  br label %73

73:                                               ; preds = %69, %56, %56
  %74 = add nuw nsw i64 %57, 1
  %75 = icmp eq i64 %74, %55
  br i1 %75, label %76, label %56

76:                                               ; preds = %73, %52
  %77 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* %77) #10
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %78

78:                                               ; preds = %49, %76
  %79 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %80 = load i32, i32* %79, align 8
  %81 = and i32 %80, -2147483648
  store i32 %81, i32* %79, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"struct.WTF::KeyValuePair"* %29

82:                                               ; preds = %18, %119
  %83 = phi i32 [ %13, %18 ], [ %120, %119 ]
  %84 = phi %"struct.WTF::KeyValuePair"* [ %20, %18 ], [ %121, %119 ]
  %85 = phi %"struct.WTF::KeyValuePair"* [ null, %18 ], [ %122, %119 ]
  %86 = phi i32 [ 0, %18 ], [ %123, %119 ]
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %84, i64 %87
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 0, i32 0
  %90 = bitcast %"struct.WTF::KeyValuePair"* %88 to i64*
  %91 = load i64, i64* %90, align 8
  switch i64 %91, label %92 [
    i64 -1, label %119
    i64 0, label %119
  ]

92:                                               ; preds = %82
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 0
  %94 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableI13scoped_refptrIKN5blink14SecurityOriginEENS_12KeyValuePairIS5_NS2_10WeakMemberINS2_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_18SecurityOriginHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS9_EEEESF_NS2_13HeapAllocatorEE16LookupForWritingERKS5_(%"class.WTF::HashTable"* nonnull %5, %class.scoped_refptr.4* dereferenceable(8) %93) #10
  %95 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %94, 0
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %95, i64 0, i32 0, i32 0
  %97 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %96, align 8
  %98 = icmp eq %"class.blink::SecurityOrigin"* %97, null
  br i1 %98, label %106, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %97, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %100) #10
  %101 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %99
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %97) #10
  %105 = bitcast %"class.blink::SecurityOrigin"* %97 to i8*
  call void @free(i8* %105) #10
  br label %106

106:                                              ; preds = %92, %99, %104
  %107 = load i64, i64* %90, align 8
  %108 = bitcast %"struct.WTF::KeyValuePair"* %95 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.blink::SecurityOrigin"* null, %"class.blink::SecurityOrigin"** %89, align 8
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %95, i64 0, i32 1
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %84, i64 %87, i32 1
  %111 = bitcast %"class.blink::WeakMember"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %"class.blink::WeakMember"* %109 to i64*
  store i64 %112, i64* %113, align 8
  %114 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %114, i64 %87
  %116 = icmp eq %"struct.WTF::KeyValuePair"* %115, %3
  %117 = select i1 %116, %"struct.WTF::KeyValuePair"* %95, %"struct.WTF::KeyValuePair"* %85
  %118 = load i32, i32* %12, align 8
  br label %119

119:                                              ; preds = %82, %82, %106
  %120 = phi i32 [ %83, %82 ], [ %118, %106 ], [ %83, %82 ]
  %121 = phi %"struct.WTF::KeyValuePair"* [ %84, %82 ], [ %114, %106 ], [ %84, %82 ]
  %122 = phi %"struct.WTF::KeyValuePair"* [ %85, %82 ], [ %117, %106 ], [ %85, %82 ]
  %123 = add i32 %86, 1
  %124 = icmp eq i32 %123, %120
  br i1 %124, label %21, label %82
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableI13scoped_refptrIKNS_14SecurityOriginEENS2_12KeyValuePairIS7_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS_18SecurityOriginHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.8, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableI13scoped_refptrIKNS_14SecurityOriginEENS1_12KeyValuePairIS6_NS_10WeakMemberINS_11WindowAgentEEEEENS1_24KeyValuePairKeyExtractorENS_18SecurityOriginHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS6_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEE14AllocateObjectISL_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableI13scoped_refptrIKNS_14SecurityOriginEENS1_12KeyValuePairIS6_NS_10WeakMemberINS_11WindowAgentEEEEENS1_24KeyValuePairKeyExtractorENS_18SecurityOriginHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS6_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEE14AllocateObjectISL_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableI13scoped_refptrIKNS_14SecurityOriginEENS2_12KeyValuePairIS7_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS_18SecurityOriginHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableI13scoped_refptrIKNS_14SecurityOriginEENS2_12KeyValuePairIS7_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS_18SecurityOriginHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableI13scoped_refptrIKNS_14SecurityOriginEENS2_12KeyValuePairIS7_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS_18SecurityOriginHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([526 x i8], [526 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableI13scoped_refptrIKNS1_14SecurityOriginEENS_12KeyValuePairIS7_NS1_10WeakMemberINS1_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS1_18SecurityOriginHashENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSG_ISB_EEEESH_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableI13scoped_refptrIKNS_14SecurityOriginEENS2_12KeyValuePairIS7_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS_18SecurityOriginHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableI13scoped_refptrIKNS_14SecurityOriginEENS2_12KeyValuePairIS7_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS_18SecurityOriginHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #10
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableI13scoped_refptrIKN5blink14SecurityOriginEENS_12KeyValuePairIS7_NS4_10WeakMemberINS4_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS4_18SecurityOriginHashENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSG_ISB_EEEESH_NS4_13HeapAllocatorEEEE5TraceEPNS4_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #10
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableI13scoped_refptrIKNS_14SecurityOriginEENS3_12KeyValuePairIS8_NS_10WeakMemberINS_11WindowAgentEEEEENS3_24KeyValuePairKeyExtractorENS_18SecurityOriginHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS8_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 4
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %41, label %24

24:                                               ; preds = %18, %37
  %25 = phi i64 [ %39, %37 ], [ 0, %18 ]
  %26 = phi i32 [ %38, %37 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 %25, i32 0, i32 0
  %28 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %27, align 8
  %29 = ptrtoint %"class.blink::SecurityOrigin"* %28 to i64
  switch i64 %29, label %30 [
    i64 -1, label %37
    i64 0, label %37
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %28, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %31) #10
  %32 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %28) #10
  %36 = bitcast %"class.blink::SecurityOrigin"* %28 to i8*
  tail call void @free(i8* %36) #10
  br label %37

37:                                               ; preds = %35, %30, %24, %24
  %38 = add i32 %26, 1
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %21, %39
  br i1 %40, label %24, label %41

41:                                               ; preds = %37, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableI13scoped_refptrIKNS_14SecurityOriginEENS2_12KeyValuePairIS7_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS_18SecurityOriginHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableI13scoped_refptrIKN5blink14SecurityOriginEENS_12KeyValuePairIS7_NS4_10WeakMemberINS4_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS4_18SecurityOriginHashENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSG_ISB_EEEESH_NS4_13HeapAllocatorEEEE5TraceEPNS4_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #10
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %61, %20
  ret void

33:                                               ; preds = %61, %30
  %34 = phi i64 [ 0, %30 ], [ %62, %61 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair"* %35 to i64*
  br i1 %28, label %37, label %49

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %61
    i64 0, label %61
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::WeakMember"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %61, label %44

44:                                               ; preds = %39
  %45 = inttoptr i64 %42 to i8*
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, i64 5
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %0, i8* nonnull %45, i8* nonnull %45, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11WindowAgentEE5TraceEPNS_7VisitorEPKv) #10
  br label %61

49:                                               ; preds = %33
  %50 = load i64, i64* %36, align 8
  switch i64 %50, label %51 [
    i64 -1, label %61
    i64 0, label %61
  ]

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34, i32 1
  %53 = bitcast %"class.blink::WeakMember"* %52 to i64*
  %54 = load atomic i64, i64* %53 monotonic, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %54 to i8*
  %58 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %59 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %58, i64 5
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, align 8
  tail call void %60(%"class.blink::Visitor"* %0, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11WindowAgentEE5TraceEPNS_7VisitorEPKv) #10
  br label %61

61:                                               ; preds = %49, %49, %37, %37, %56, %51, %39, %44
  %62 = add nuw nsw i64 %34, 1
  %63 = icmp eq i64 %62, %23
  br i1 %63, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableI13scoped_refptrIKN5blink14SecurityOriginEENS_12KeyValuePairIS5_NS2_10WeakMemberINS2_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_18SecurityOriginHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS9_EEEESF_NS2_13HeapAllocatorEE16LookupForWritingERKS5_(%"class.WTF::HashTable"*, %class.scoped_refptr.4* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %class.scoped_refptr.4, %class.scoped_refptr.4* %1, i64 0, i32 0
  %10 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %9, align 8
  %11 = tail call i32 @_ZN5blink18SecurityOriginHash7GetHashEPKNS_14SecurityOriginE(%"class.blink::SecurityOrigin"* %10) #10
  %12 = and i32 %11, %7
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13
  %15 = ptrtoint %"struct.WTF::KeyValuePair"* %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 0, i32 0, i32 0
  %17 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %16, align 8
  %18 = icmp eq %"class.blink::SecurityOrigin"* %17, null
  br i1 %18, label %35, label %19

19:                                               ; preds = %2
  %20 = xor i32 %11, -1
  %21 = lshr i32 %11, 23
  %22 = add i32 %21, %20
  %23 = shl i32 %22, 12
  %24 = xor i32 %23, %22
  %25 = lshr i32 %24, 7
  %26 = xor i32 %25, %24
  %27 = shl i32 %26, 2
  %28 = xor i32 %27, %26
  %29 = lshr i32 %28, 20
  %30 = xor i32 %29, %28
  %31 = or i32 %30, 1
  %32 = zext i32 %31 to i64
  br label %41

33:                                               ; preds = %60
  %34 = ptrtoint %"struct.WTF::KeyValuePair"* %66 to i64
  br label %35

35:                                               ; preds = %33, %2
  %36 = phi i64 [ %15, %2 ], [ %34, %33 ]
  %37 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %61, %33 ]
  %38 = icmp eq %"struct.WTF::KeyValuePair"* %37, null
  %39 = ptrtoint %"struct.WTF::KeyValuePair"* %37 to i64
  %40 = select i1 %38, i64 %36, i64 %39
  br label %71

41:                                               ; preds = %60, %19
  %42 = phi %"struct.WTF::KeyValuePair"* [ null, %19 ], [ %61, %60 ]
  %43 = phi i64 [ %15, %19 ], [ %67, %60 ]
  %44 = phi %"struct.WTF::KeyValuePair"* [ %14, %19 ], [ %66, %60 ]
  %45 = phi i64 [ %13, %19 ], [ %65, %60 ]
  %46 = phi i64 [ 0, %19 ], [ %63, %60 ]
  %47 = bitcast %"struct.WTF::KeyValuePair"* %44 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, inttoptr (i64 -1 to i8*)
  %50 = bitcast i8* %48 to %"class.blink::SecurityOrigin"*
  br i1 %49, label %60, label %51

51:                                               ; preds = %41
  %52 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %9, align 8
  %53 = icmp ne i8* %48, null
  %54 = icmp ne %"class.blink::SecurityOrigin"* %52, null
  %55 = and i1 %53, %54
  br i1 %55, label %56, label %58

56:                                               ; preds = %51
  %57 = tail call zeroext i1 @_ZNK5blink14SecurityOrigin16IsSameOriginWithEPKS0_(%"class.blink::SecurityOrigin"* nonnull %50, %"class.blink::SecurityOrigin"* nonnull %52) #10
  br i1 %57, label %71, label %60

58:                                               ; preds = %51
  %59 = icmp eq %"class.blink::SecurityOrigin"* %52, %50
  br i1 %59, label %71, label %60

60:                                               ; preds = %58, %56, %41
  %61 = phi %"struct.WTF::KeyValuePair"* [ %42, %56 ], [ %42, %58 ], [ %44, %41 ]
  %62 = icmp eq i64 %46, 0
  %63 = select i1 %62, i64 %32, i64 %46
  %64 = add i64 %63, %45
  %65 = and i64 %64, %8
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %65
  %67 = ptrtoint %"struct.WTF::KeyValuePair"* %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 0, i32 0, i32 0
  %69 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %68, align 8
  %70 = icmp eq %"class.blink::SecurityOrigin"* %69, null
  br i1 %70, label %33, label %41

71:                                               ; preds = %56, %58, %35
  %72 = phi i64 [ %40, %35 ], [ %43, %58 ], [ %43, %56 ]
  %73 = phi i8 [ 0, %35 ], [ 1, %58 ], [ 1, %56 ]
  %74 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair"*
  %75 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %74, 0
  %76 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %75, i8 %73, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %76
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashMapINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS_10WeakMemberINS_11WindowAgentEEENS3_30SchemeAndRegistrableDomainHashENS3_32SchemeAndRegistrableDomainTraitsEN3WTF10HashTraitsIS7_EEEEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS_10WeakMemberINS_11WindowAgentEEENS2_30SchemeAndRegistrableDomainHashENS2_32SchemeAndRegistrableDomainTraitsEN3WTF10HashTraitsIS6_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS_10WeakMemberINS_11WindowAgentEEENS2_30SchemeAndRegistrableDomainHashENS2_32SchemeAndRegistrableDomainTraitsEN3WTF10HashTraitsIS6_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS_10WeakMemberINS_11WindowAgentEEENS2_30SchemeAndRegistrableDomainHashENS2_32SchemeAndRegistrableDomainTraitsEN3WTF10HashTraitsIS6_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([338 x i8], [338 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11HeapHashMapINS1_18WindowAgentFactory26SchemeAndRegistrableDomainENS1_10WeakMemberINS1_11WindowAgentEEENS3_30SchemeAndRegistrableDomainHashENS3_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS7_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11HeapHashMapINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS_10WeakMemberINS_11WindowAgentEEENS2_30SchemeAndRegistrableDomainHashENS2_32SchemeAndRegistrableDomainTraitsEN3WTF10HashTraitsIS6_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"struct.blink::TraceDescriptor", align 8
  %4 = bitcast i8* %1 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = inttoptr i64 %5 to %"struct.WTF::KeyValuePair.11"*
  %7 = bitcast i8* %1 to i8**
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8** %7) #10
  %12 = inttoptr i64 %5 to i8*
  %13 = bitcast %"struct.blink::TraceDescriptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #10
  %14 = bitcast %"struct.blink::TraceDescriptor"* %3 to %"struct.WTF::KeyValuePair.11"**
  store %"struct.WTF::KeyValuePair.11"* %6, %"struct.WTF::KeyValuePair.11"** %14, align 8
  %15 = getelementptr inbounds %"struct.blink::TraceDescriptor", %"struct.blink::TraceDescriptor"* %3, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %15, align 8
  %16 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %17 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %17, i64 10
  %19 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %18, align 8
  tail call void %19(%"class.blink::Visitor"* %0, i8* %12, i8** %7, i8* %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS2_12KeyValuePairIS5_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS4_30SchemeAndRegistrableDomainHashENS2_18HashMapValueTraitsINS4_32SchemeAndRegistrableDomainTraitsENS2_10HashTraitsIS9_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, %"struct.blink::TraceDescriptor"* nonnull byval(%"struct.blink::TraceDescriptor") align 8 %3, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS4_NS2_10WeakMemberINS2_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS3_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS3_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS8_EEEESD_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv, i8* %1) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11HeapHashMapINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS_10WeakMemberINS_11WindowAgentEEENS2_30SchemeAndRegistrableDomainHashENS2_32SchemeAndRegistrableDomainTraitsEN3WTF10HashTraitsIS6_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS4_NS2_10WeakMemberINS2_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS3_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS3_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS8_EEEESD_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.11"**
  %4 = load %"struct.WTF::KeyValuePair.11"*, %"struct.WTF::KeyValuePair.11"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.11"* %4, null
  br i1 %5, label %96, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %1, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %4, i64 %10
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %11, i64 -1
  %13 = icmp ult %"struct.WTF::KeyValuePair.11"* %12, %4
  br i1 %13, label %96, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds i8, i8* %1, i64 16
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds i8, i8* %1, i64 12
  %18 = bitcast i8* %17 to i32*
  br label %19

19:                                               ; preds = %14, %92
  %20 = phi %"struct.WTF::KeyValuePair.11"* [ %12, %14 ], [ %93, %92 ]
  %21 = phi %"struct.WTF::KeyValuePair.11"* [ %11, %14 ], [ %20, %92 ]
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = bitcast %"struct.WTF::KeyValuePair.11"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  switch i64 %24, label %25 [
    i64 -1, label %92
    i64 0, label %92
  ]

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %21, i64 -1, i32 1, i32 0, i32 0
  %27 = load %"class.blink::WindowAgent"*, %"class.blink::WindowAgent"** %26, align 8
  %28 = icmp eq %"class.blink::WindowAgent"* %27, null
  br i1 %28, label %92, label %29

29:                                               ; preds = %25
  %30 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %31 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %30, i64 0, i32 1
  %32 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %31) #10
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %36, !prof !3

34:                                               ; preds = %29
  %35 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %31, i8* %35) #10
  br label %36

36:                                               ; preds = %34, %29
  %37 = phi i8* [ %35, %34 ], [ %32, %29 ]
  %38 = bitcast i8* %37 to %"class.blink::ThreadState"**
  %39 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %38, align 8
  %40 = icmp eq %"class.blink::ThreadState"* %39, null
  br i1 %40, label %92, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::WindowAgent", %"class.blink::WindowAgent"* %27, i64 -1, i32 0, i32 3
  %43 = getelementptr inbounds i8, i8* %42, i64 6
  %44 = bitcast i8* %43 to i16*
  %45 = load i16, i16* %44, align 2
  %46 = and i16 %45, 1
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %92

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %21, i64 -1, i32 0, i32 1, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #10
  br label %65

65:                                               ; preds = %64, %61, %48
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #10
  br label %81

81:                                               ; preds = %65, %77, %80
  %82 = bitcast %"struct.WTF::KeyValuePair.11"* %20 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %82, align 8
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %21, i64 -1, i32 1
  %84 = bitcast %"class.blink::WeakMember"* %83 to i64*
  store atomic i64 0, i64* %84 monotonic, align 8
  %85 = load i32, i32* %16, align 8
  %86 = add i32 %85, 1
  %87 = and i32 %86, 2147483647
  %88 = and i32 %85, -2147483648
  %89 = or i32 %87, %88
  store i32 %89, i32* %16, align 8
  %90 = load i32, i32* %18, align 4
  %91 = add i32 %90, -1
  store i32 %91, i32* %18, align 4
  br label %92

92:                                               ; preds = %41, %19, %19, %25, %36, %81
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %20, i64 -1
  %94 = load %"struct.WTF::KeyValuePair.11"*, %"struct.WTF::KeyValuePair.11"** %3, align 8
  %95 = icmp ult %"struct.WTF::KeyValuePair.11"* %93, %94
  br i1 %95, label %96, label %19

96:                                               ; preds = %92, %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS2_12KeyValuePairIS5_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS4_30SchemeAndRegistrableDomainHashENS2_18HashMapValueTraitsINS4_32SchemeAndRegistrableDomainTraitsENS2_10HashTraitsIS9_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS2_12KeyValuePairIS5_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS4_30SchemeAndRegistrableDomainHashENS2_18HashMapValueTraitsINS4_32SchemeAndRegistrableDomainTraitsENS2_10HashTraitsIS9_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #10
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS5_NS3_10WeakMemberINS3_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS4_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS4_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS9_EEEESE_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #10
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS5_NS3_10WeakMemberINS3_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS4_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS4_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS9_EEEESE_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.11"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = udiv i64 %22, 24
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #10
  %29 = icmp ugt i64 %22, 23
  br i1 %29, label %30, label %32

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %64, %20
  ret void

33:                                               ; preds = %30, %64
  %34 = phi i64 [ 0, %30 ], [ %65, %64 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.11"* %35 to i64*
  br i1 %28, label %37, label %52

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %3, i64 %34, i32 0, i32 1
  %40 = bitcast %"class.WTF::String"* %39 to i64*
  %41 = load atomic i64, i64* %40 monotonic, align 8
  switch i64 %38, label %42 [
    i64 -1, label %64
    i64 0, label %64
  ]

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %3, i64 %34, i32 1
  %44 = bitcast %"class.blink::WeakMember"* %43 to i64*
  %45 = load atomic i64, i64* %44 monotonic, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = inttoptr i64 %45 to i8*
  %49 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %50 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %49, i64 5
  %51 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, align 8
  tail call void %51(%"class.blink::Visitor"* %0, i8* nonnull %48, i8* nonnull %48, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11WindowAgentEE5TraceEPNS_7VisitorEPKv) #10
  br label %64

52:                                               ; preds = %33
  %53 = load i64, i64* %36, align 8
  switch i64 %53, label %54 [
    i64 -1, label %64
    i64 0, label %64
  ]

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %3, i64 %34, i32 1
  %56 = bitcast %"class.blink::WeakMember"* %55 to i64*
  %57 = load atomic i64, i64* %56 monotonic, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %64, label %59

59:                                               ; preds = %54
  %60 = inttoptr i64 %57 to i8*
  %61 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %62 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %61, i64 5
  %63 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %62, align 8
  tail call void %63(%"class.blink::Visitor"* %0, i8* nonnull %60, i8* nonnull %60, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11WindowAgentEE5TraceEPNS_7VisitorEPKv) #10
  br label %64

64:                                               ; preds = %52, %52, %37, %37, %59, %54, %42, %47
  %65 = add nuw nsw i64 %34, 1
  %66 = icmp ult i64 %65, %23
  br i1 %66, label %33, label %32
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11HeapHashMapINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS_10WeakMemberINS_11WindowAgentEEENS3_30SchemeAndRegistrableDomainHashENS3_32SchemeAndRegistrableDomainTraitsEN3WTF10HashTraitsIS7_EEEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSG_15TracePersistentEPNS_7VisitorEEEE10TrampolineESI_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::HeapHashMap.5"**
  %5 = load %"class.blink::HeapHashMap.5"*, %"class.blink::HeapHashMap.5"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #10
  %7 = icmp eq %"class.blink::HeapHashMap.5"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::HeapHashMap.5"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashMapINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS_10WeakMemberINS_11WindowAgentEEENS2_30SchemeAndRegistrableDomainHashENS2_32SchemeAndRegistrableDomainTraitsEN3WTF10HashTraitsIS6_EEEEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #10
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #1

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.11"*, i8 } @_ZN3WTF9HashTableIN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS3_NS1_10WeakMemberINS1_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS2_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS7_EEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERS3_DnEENS_18HashTableAddResultISH_S8_EEOT0_OT1_(%"class.WTF::HashTable.9"*, %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* dereferenceable(16), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.11"*, %"struct.WTF::KeyValuePair.11"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.11"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.11"* @_ZN3WTF9HashTableIN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS3_NS1_10WeakMemberINS1_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS2_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS7_EEEESC_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.9"* %0, %"struct.WTF::KeyValuePair.11"* null)
  %9 = load %"struct.WTF::KeyValuePair.11"*, %"struct.WTF::KeyValuePair.11"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.11"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain", %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #10
  br label %24

24:                                               ; preds = %22, %10
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = getelementptr inbounds %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain", %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* %1, i64 0, i32 1, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = lshr i32 %29, 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %24
  %33 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %27) #10
  br label %34

34:                                               ; preds = %24, %32
  %35 = phi i32 [ %33, %32 ], [ %30, %24 ]
  %36 = zext i32 %25 to i64
  %37 = mul i64 %36, 5146158508761418231
  %38 = zext i32 %35 to i64
  %39 = mul i64 %38, -682818954288075998
  %40 = add i64 %39, %37
  %41 = lshr i64 %40, 32
  %42 = trunc i64 %41 to i32
  %43 = and i32 %14, %42
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %11, i64 %44
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %101, label %49

49:                                               ; preds = %34
  %50 = xor i32 %42, -1
  %51 = lshr i64 %40, 55
  %52 = trunc i64 %51 to i32
  %53 = add i32 %52, %50
  %54 = shl i32 %53, 12
  %55 = xor i32 %54, %53
  %56 = lshr i32 %55, 7
  %57 = xor i32 %56, %55
  %58 = shl i32 %57, 2
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 20
  %61 = xor i32 %60, %59
  %62 = or i32 %61, 1
  %63 = zext i32 %62 to i64
  br label %64

64:                                               ; preds = %49, %81
  %65 = phi %"struct.WTF::KeyValuePair.11"* [ %45, %49 ], [ %87, %81 ]
  %66 = phi %"struct.WTF::KeyValuePair.11"* [ null, %49 ], [ %82, %81 ]
  %67 = phi i64 [ %44, %49 ], [ %86, %81 ]
  %68 = phi i64 [ 0, %49 ], [ %84, %81 ]
  %69 = bitcast %"struct.WTF::KeyValuePair.11"* %65 to i8**
  %70 = load i8*, i8** %69, align 8
  %71 = icmp eq i8* %70, inttoptr (i64 -1 to i8*)
  br i1 %71, label %81, label %72

72:                                               ; preds = %64
  %73 = bitcast i8* %70 to %"class.WTF::StringImpl"*
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %75 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %73, %"class.WTF::StringImpl"* %74) #10
  br i1 %75, label %76, label %81

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %11, i64 %67, i32 0, i32 1, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %80 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %78, %"class.WTF::StringImpl"* %79) #10
  br i1 %80, label %188, label %81

81:                                               ; preds = %64, %72, %76
  %82 = phi %"struct.WTF::KeyValuePair.11"* [ %66, %76 ], [ %65, %64 ], [ %66, %72 ]
  %83 = icmp eq i64 %68, 0
  %84 = select i1 %83, i64 %63, i64 %68
  %85 = add i64 %84, %67
  %86 = and i64 %85, %15
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %11, i64 %86
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %87, i64 0, i32 0, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %64

91:                                               ; preds = %81
  %92 = icmp eq %"struct.WTF::KeyValuePair.11"* %82, null
  br i1 %92, label %101, label %93

93:                                               ; preds = %91
  %94 = bitcast %"struct.WTF::KeyValuePair.11"* %82 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %94, i64 24) #10
  %95 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, 2147483647
  %98 = and i32 %97, 2147483647
  %99 = and i32 %96, -2147483648
  %100 = or i32 %98, %99
  store i32 %100, i32* %95, align 8
  br label %101

101:                                              ; preds = %34, %91, %93
  %102 = phi %"struct.WTF::KeyValuePair.11"* [ %82, %93 ], [ %87, %91 ], [ %45, %34 ]
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %102, i64 0, i32 0
  %104 = tail call dereferenceable(16) %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* @_ZN5blink18WindowAgentFactory26SchemeAndRegistrableDomainaSERKS1_(%"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* %103, %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* dereferenceable(16) %1) #10
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %102, i64 0, i32 1
  %106 = bitcast %"class.blink::WeakMember"* %105 to i64*
  store atomic i64 0, i64* %106 monotonic, align 8
  %107 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %142, label %109

109:                                              ; preds = %101
  %110 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %111 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %110, i64 0, i32 1
  %112 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %111) #10
  %113 = icmp eq i8* %112, null
  br i1 %113, label %114, label %116, !prof !3

114:                                              ; preds = %109
  %115 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %111, i8* %115) #10
  br label %116

116:                                              ; preds = %114, %109
  %117 = phi i8* [ %115, %114 ], [ %112, %109 ]
  %118 = bitcast i8* %117 to %"class.blink::ThreadState"**
  %119 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %119, i64 0, i32 9
  %121 = load i8, i8* %120, align 1, !range !2
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %142, label %123

123:                                              ; preds = %116
  %124 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %119, i64 0, i32 13
  %125 = load i64, i64* %124, align 8
  %126 = add i64 %125, 1
  store i64 %126, i64* %124, align 8
  %127 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %119, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %128 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %127, align 8
  %129 = load atomic i64, i64* %106 monotonic, align 8
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %139, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %128, i64 0, i32 0, i32 0
  %133 = inttoptr i64 %129 to i8*
  %134 = bitcast %"class.blink::MarkingVisitor"* %128 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %135 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %135, i64 5
  %137 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %136, align 8
  tail call void %137(%"class.blink::Visitor"* %132, i8* nonnull %133, i8* %133, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11WindowAgentEE5TraceEPNS_7VisitorEPKv) #10
  %138 = load i64, i64* %124, align 8
  br label %139

139:                                              ; preds = %131, %123
  %140 = phi i64 [ %126, %123 ], [ %138, %131 ]
  %141 = add i64 %140, -1
  store i64 %141, i64* %124, align 8
  br label %142

142:                                              ; preds = %101, %116, %139
  %143 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 2
  %144 = load i32, i32* %143, align 4
  %145 = add i32 %144, 1
  store i32 %145, i32* %143, align 4
  %146 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 3
  %147 = load i32, i32* %146, align 8
  %148 = add i32 %147, %145
  %149 = shl i32 %148, 1
  %150 = load i32, i32* %12, align 8
  %151 = icmp ult i32 %149, %150
  br i1 %151, label %154, label %152

152:                                              ; preds = %142
  %153 = tail call %"struct.WTF::KeyValuePair.11"* @_ZN3WTF9HashTableIN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS3_NS1_10WeakMemberINS1_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS2_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS7_EEEESC_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.9"* %0, %"struct.WTF::KeyValuePair.11"* %102)
  br label %188

154:                                              ; preds = %142
  %155 = mul i32 %145, 6
  %156 = icmp ult i32 %155, %150
  %157 = icmp ugt i32 %150, 8
  %158 = and i1 %156, %157
  br i1 %158, label %159, label %188

159:                                              ; preds = %154
  %160 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %161 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %160, i64 0, i32 1
  %162 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %161) #10
  %163 = icmp eq i8* %162, null
  br i1 %163, label %164, label %166, !prof !3

164:                                              ; preds = %159
  %165 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %161, i8* %165) #10
  br label %166

166:                                              ; preds = %164, %159
  %167 = phi i8* [ %165, %164 ], [ %162, %159 ]
  %168 = bitcast i8* %167 to %"class.blink::ThreadState"**
  %169 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %168, align 8
  %170 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %169, i64 0, i32 6
  %171 = load i8, i8* %170, align 8, !range !2
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %177, label %173

173:                                              ; preds = %166
  %174 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %169, i64 0, i32 16
  %175 = load i32, i32* %174, align 4
  %176 = icmp eq i32 %175, 1
  br i1 %176, label %188, label %177

177:                                              ; preds = %166, %173
  %178 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %169, i64 0, i32 13
  %179 = load i64, i64* %178, align 8
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %188

181:                                              ; preds = %177
  %182 = load i32, i32* %12, align 8
  %183 = lshr i32 %182, 1
  %184 = zext i32 %183 to i64
  %185 = tail call %"class.blink::HeapHashTableBacking.254"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS2_12KeyValuePairIS5_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS4_30SchemeAndRegistrableDomainHashENS2_18HashMapValueTraitsINS4_32SchemeAndRegistrableDomainTraitsENS2_10HashTraitsIS9_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %184) #10
  %186 = bitcast %"class.blink::HeapHashTableBacking.254"* %185 to %"struct.WTF::KeyValuePair.11"*
  %187 = tail call %"struct.WTF::KeyValuePair.11"* @_ZN3WTF9HashTableIN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS3_NS1_10WeakMemberINS1_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS2_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS7_EEEESC_NS1_13HeapAllocatorEE8RehashToEPS8_jSI_(%"class.WTF::HashTable.9"* %0, %"struct.WTF::KeyValuePair.11"* %186, i32 %183, %"struct.WTF::KeyValuePair.11"* %102) #10
  br label %188

188:                                              ; preds = %76, %173, %154, %152, %181, %177
  %189 = phi i8 [ 1, %177 ], [ 1, %181 ], [ 1, %152 ], [ 1, %154 ], [ 1, %173 ], [ 0, %76 ]
  %190 = phi %"struct.WTF::KeyValuePair.11"* [ %102, %177 ], [ %187, %181 ], [ %153, %152 ], [ %102, %154 ], [ %102, %173 ], [ %65, %76 ]
  %191 = insertvalue { %"struct.WTF::KeyValuePair.11"*, i8 } undef, %"struct.WTF::KeyValuePair.11"* %190, 0
  %192 = insertvalue { %"struct.WTF::KeyValuePair.11"*, i8 } %191, i8 %189, 1
  ret { %"struct.WTF::KeyValuePair.11"*, i8 } %192
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.11"* @_ZN3WTF9HashTableIN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS3_NS1_10WeakMemberINS1_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS2_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS7_EEEESC_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.9"*, %"struct.WTF::KeyValuePair.11"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #10
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %23, i8* %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #10
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.11"* @_ZN3WTF9HashTableIN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS3_NS1_10WeakMemberINS1_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS2_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS7_EEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS8_Rb(%"class.WTF::HashTable.9"* %0, i32 %35, %"struct.WTF::KeyValuePair.11"* %1, i8* nonnull dereferenceable(1) %4) #10
  %37 = load i8, i8* %4, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.254"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS2_12KeyValuePairIS5_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS4_30SchemeAndRegistrableDomainHashENS2_18HashMapValueTraitsINS4_32SchemeAndRegistrableDomainTraitsENS2_10HashTraitsIS9_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #10
  %43 = bitcast %"class.blink::HeapHashTableBacking.254"* %42 to %"struct.WTF::KeyValuePair.11"*
  %44 = call %"struct.WTF::KeyValuePair.11"* @_ZN3WTF9HashTableIN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS3_NS1_10WeakMemberINS1_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS2_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS7_EEEESC_NS1_13HeapAllocatorEE8RehashToEPS8_jSI_(%"class.WTF::HashTable.9"* %0, %"struct.WTF::KeyValuePair.11"* %43, i32 %40, %"struct.WTF::KeyValuePair.11"* %1) #10
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.11"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.11"* %46
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* @_ZN5blink18WindowAgentFactory26SchemeAndRegistrableDomainaSERKS1_(%"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"*, %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* dereferenceable(16)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain", %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #10
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !3

20:                                               ; preds = %11
  tail call void @llvm.trap() #10
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %21, %6, %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %4 to i64
  %25 = bitcast %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* %0 to i64*
  %26 = getelementptr inbounds %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain", %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #10
  br label %42

42:                                               ; preds = %23, %38, %41
  %43 = getelementptr inbounds %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain", %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain", %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* %1, i64 0, i32 1, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #10
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !3

61:                                               ; preds = %52
  tail call void @llvm.trap() #10
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %62, %47, %42
  %65 = ptrtoint %"class.WTF::StringImpl"* %45 to i64
  %66 = bitcast %"class.WTF::String"* %43 to i64*
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  store i64 %65, i64* %66, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #10
  br label %83

83:                                               ; preds = %64, %79, %82
  ret %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.11"* @_ZN3WTF9HashTableIN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS3_NS1_10WeakMemberINS1_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS2_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS7_EEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS8_Rb(%"class.WTF::HashTable.9"*, i32, %"struct.WTF::KeyValuePair.11"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #10
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #10
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0)) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.11"*, %"struct.WTF::KeyValuePair.11"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.11"* %32, null
  br i1 %33, label %156, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = mul nuw nsw i64 %35, 24
  %37 = bitcast %"struct.WTF::KeyValuePair.11"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #10
  br i1 %38, label %39, label %156

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.11"*, %"struct.WTF::KeyValuePair.11"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.254"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS2_12KeyValuePairIS5_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS4_30SchemeAndRegistrableDomainHashENS2_18HashMapValueTraitsINS4_32SchemeAndRegistrableDomainTraitsENS2_10HashTraitsIS9_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #10
  %45 = bitcast %"class.blink::HeapHashTableBacking.254"* %44 to %"struct.WTF::KeyValuePair.11"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %153, %39
  %48 = phi %"struct.WTF::KeyValuePair.11"* [ null, %39 ], [ %65, %153 ]
  %49 = bitcast %"class.WTF::HashTable.9"* %0 to %"class.blink::HeapHashTableBacking.254"**
  store %"class.blink::HeapHashTableBacking.254"* %44, %"class.blink::HeapHashTableBacking.254"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.254", %"class.blink::HeapHashTableBacking.254"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #10
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.11"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.11"* @_ZN3WTF9HashTableIN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS3_NS1_10WeakMemberINS1_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS2_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS7_EEEESC_NS1_13HeapAllocatorEE8RehashToEPS8_jSI_(%"class.WTF::HashTable.9"* %0, %"struct.WTF::KeyValuePair.11"* %42, i32 %1, %"struct.WTF::KeyValuePair.11"* %48)
  br label %156

58:                                               ; preds = %39, %153
  %59 = phi i64 [ %154, %153 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.11"* [ %65, %153 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.11"*, %"struct.WTF::KeyValuePair.11"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.11"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.11"* %64, %"struct.WTF::KeyValuePair.11"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = bitcast %"struct.WTF::KeyValuePair.11"* %62 to i64*
  %68 = load i64, i64* %67, align 8
  switch i64 %68, label %71 [
    i64 -1, label %69
    i64 0, label %69
  ]

69:                                               ; preds = %58, %58
  %70 = bitcast %"struct.WTF::KeyValuePair.11"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 24, i1 false)
  br label %153

71:                                               ; preds = %58
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %45, i64 %59, i32 0, i32 1, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #10
  br label %88

88:                                               ; preds = %87, %84, %71
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %101

99:                                               ; preds = %92
  %100 = add i32 %98, -1
  store i32 %100, i32* %97, align 4
  br label %101

101:                                              ; preds = %99, %92
  %102 = phi i32 [ %100, %99 ], [ %98, %92 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #10
  br label %105

105:                                              ; preds = %88, %101, %104
  %106 = load i64, i64* %67, align 8
  %107 = bitcast %"struct.WTF::KeyValuePair.11"* %64 to i64*
  store i64 %106, i64* %107, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %66, align 8
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %45, i64 %59, i32 0, i32 1
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %61, i64 %59, i32 0, i32 1
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %109, i64 0, i32 0, i32 0
  %111 = bitcast %"class.WTF::String"* %109 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %"class.WTF::String"* %108 to i64*
  store i64 %112, i64* %113, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %110, align 8
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %45, i64 %59, i32 1
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %61, i64 %59, i32 1
  %116 = bitcast %"class.blink::WeakMember"* %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.blink::WeakMember"* %114 to i64*
  store i64 %117, i64* %118, align 8
  %119 = load %"struct.WTF::KeyValuePair.11"*, %"struct.WTF::KeyValuePair.11"** %31, align 8
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %119, i64 %59, i32 0, i32 1, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %105
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #10
  br label %136

136:                                              ; preds = %135, %132, %105
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %119, i64 %59, i32 0, i32 0, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %153, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #10
  br label %153

153:                                              ; preds = %152, %149, %136, %69
  %154 = add nuw nsw i64 %59, 1
  %155 = icmp eq i64 %154, %43
  br i1 %155, label %47, label %58

156:                                              ; preds = %34, %30, %55
  %157 = phi %"struct.WTF::KeyValuePair.11"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.11"* %157
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.11"* @_ZN3WTF9HashTableIN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS3_NS1_10WeakMemberINS1_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS2_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS7_EEEESC_NS1_13HeapAllocatorEE8RehashToEPS8_jSI_(%"class.WTF::HashTable.9"*, %"struct.WTF::KeyValuePair.11"*, i32, %"struct.WTF::KeyValuePair.11"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.9", align 8
  %6 = bitcast %"class.WTF::HashTable.9"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.9"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.11"* %1, %"struct.WTF::KeyValuePair.11"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.11"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.11"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.11"*, %"struct.WTF::KeyValuePair.11"** %19, align 8
  br label %53

21:                                               ; preds = %69
  %22 = bitcast %"class.WTF::HashTable.9"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %70, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.11"* [ null, %15 ], [ %72, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.9"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #10
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.9"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.9"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #10
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  call void @_ZN3WTF9HashTableIN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS3_NS1_10WeakMemberINS1_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS2_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS7_EEEESC_NS1_13HeapAllocatorEE5clearEv(%"class.WTF::HashTable.9"* nonnull %5)
  %50 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = and i32 %51, -2147483648
  store i32 %52, i32* %50, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"struct.WTF::KeyValuePair.11"* %29

53:                                               ; preds = %18, %69
  %54 = phi i32 [ %13, %18 ], [ %70, %69 ]
  %55 = phi %"struct.WTF::KeyValuePair.11"* [ %20, %18 ], [ %71, %69 ]
  %56 = phi %"struct.WTF::KeyValuePair.11"* [ null, %18 ], [ %72, %69 ]
  %57 = phi i32 [ 0, %18 ], [ %73, %69 ]
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %55, i64 %58
  %60 = bitcast %"struct.WTF::KeyValuePair.11"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  switch i64 %61, label %62 [
    i64 -1, label %69
    i64 0, label %69
  ]

62:                                               ; preds = %53
  %63 = call %"struct.WTF::KeyValuePair.11"* @_ZN3WTF9HashTableIN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS3_NS1_10WeakMemberINS1_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS2_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS7_EEEESC_NS1_13HeapAllocatorEE8ReinsertEOS8_(%"class.WTF::HashTable.9"* nonnull %5, %"struct.WTF::KeyValuePair.11"* dereferenceable(24) %59)
  %64 = load %"struct.WTF::KeyValuePair.11"*, %"struct.WTF::KeyValuePair.11"** %19, align 8
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %64, i64 %58
  %66 = icmp eq %"struct.WTF::KeyValuePair.11"* %65, %3
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.11"* %63, %"struct.WTF::KeyValuePair.11"* %56
  %68 = load i32, i32* %12, align 8
  br label %69

69:                                               ; preds = %53, %53, %62
  %70 = phi i32 [ %54, %53 ], [ %68, %62 ], [ %54, %53 ]
  %71 = phi %"struct.WTF::KeyValuePair.11"* [ %55, %53 ], [ %64, %62 ], [ %55, %53 ]
  %72 = phi %"struct.WTF::KeyValuePair.11"* [ %56, %53 ], [ %67, %62 ], [ %56, %53 ]
  %73 = add i32 %57, 1
  %74 = icmp eq i32 %73, %70
  br i1 %74, label %21, label %53
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.254"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS2_12KeyValuePairIS5_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS4_30SchemeAndRegistrableDomainHashENS2_18HashMapValueTraitsINS4_32SchemeAndRegistrableDomainTraitsENS2_10HashTraitsIS9_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.8, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = mul i64 %0, 24
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS1_12KeyValuePairIS4_NS_10WeakMemberINS_11WindowAgentEEEEENS1_24KeyValuePairKeyExtractorENS3_30SchemeAndRegistrableDomainHashENS1_18HashMapValueTraitsINS3_32SchemeAndRegistrableDomainTraitsENS1_10HashTraitsIS8_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.254"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.254"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS1_12KeyValuePairIS4_NS_10WeakMemberINS_11WindowAgentEEEEENS1_24KeyValuePairKeyExtractorENS3_30SchemeAndRegistrableDomainHashENS1_18HashMapValueTraitsINS3_32SchemeAndRegistrableDomainTraitsENS1_10HashTraitsIS8_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS2_12KeyValuePairIS5_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS4_30SchemeAndRegistrableDomainHashENS2_18HashMapValueTraitsINS4_32SchemeAndRegistrableDomainTraitsENS2_10HashTraitsIS9_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS2_12KeyValuePairIS5_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS4_30SchemeAndRegistrableDomainHashENS2_18HashMapValueTraitsINS4_32SchemeAndRegistrableDomainTraitsENS2_10HashTraitsIS9_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS2_12KeyValuePairIS5_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS4_30SchemeAndRegistrableDomainHashENS2_18HashMapValueTraitsINS4_32SchemeAndRegistrableDomainTraitsENS2_10HashTraitsIS9_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([578 x i8], [578 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS5_NS1_10WeakMemberINS1_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS4_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS4_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS9_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS3_12KeyValuePairIS6_NS_10WeakMemberINS_11WindowAgentEEEEENS3_24KeyValuePairKeyExtractorENS5_30SchemeAndRegistrableDomainHashENS3_18HashMapValueTraitsINS5_32SchemeAndRegistrableDomainTraitsENS3_10HashTraitsISA_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = udiv i64 %20, 24
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.11"*
  %23 = icmp ugt i64 %20, 23
  br i1 %23, label %24, label %68

24:                                               ; preds = %18, %64
  %25 = phi i64 [ %66, %64 ], [ 0, %18 ]
  %26 = phi i32 [ %65, %64 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %22, i64 %25
  %28 = bitcast %"struct.WTF::KeyValuePair.11"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  switch i64 %29, label %30 [
    i64 -1, label %64
    i64 0, label %64
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %22, i64 %25, i32 0, i32 1, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #10
  br label %47

47:                                               ; preds = %46, %43, %30
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #10
  br label %64

64:                                               ; preds = %63, %60, %47, %24, %24
  %65 = add i32 %26, 1
  %66 = zext i32 %65 to i64
  %67 = icmp ugt i64 %21, %66
  br i1 %67, label %24, label %68

68:                                               ; preds = %64, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_18WindowAgentFactory26SchemeAndRegistrableDomainENS2_12KeyValuePairIS5_NS_10WeakMemberINS_11WindowAgentEEEEENS2_24KeyValuePairKeyExtractorENS4_30SchemeAndRegistrableDomainHashENS2_18HashMapValueTraitsINS4_32SchemeAndRegistrableDomainTraitsENS2_10HashTraitsIS9_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.11"* @_ZN3WTF9HashTableIN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS3_NS1_10WeakMemberINS1_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS2_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS7_EEEESC_NS1_13HeapAllocatorEE8ReinsertEOS8_(%"class.WTF::HashTable.9"*, %"struct.WTF::KeyValuePair.11"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %1, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair.11"*, i8 } @_ZN3WTF9HashTableIN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS3_NS1_10WeakMemberINS1_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS2_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS7_EEEESC_NS1_13HeapAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISA_SF_SG_EES3_EENSt3__14pairIPS8_bEERKT0_(%"class.WTF::HashTable.9"* %0, %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* dereferenceable(16) %3) #10
  %5 = extractvalue { %"struct.WTF::KeyValuePair.11"*, i8 } %4, 0
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #10
  br label %22

22:                                               ; preds = %21, %18, %2
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #10
  br label %39

39:                                               ; preds = %22, %35, %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast %"struct.WTF::KeyValuePair.11"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"struct.WTF::KeyValuePair.11"* %5 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %5, i64 0, i32 0, i32 1
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %1, i64 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 0, i32 0, i32 0
  %47 = bitcast %"class.WTF::String"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.WTF::String"* %44 to i64*
  store i64 %48, i64* %49, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %46, align 8
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %5, i64 0, i32 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %1, i64 0, i32 1
  %52 = bitcast %"class.blink::WeakMember"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.blink::WeakMember"* %50 to i64*
  store i64 %53, i64* %54, align 8
  ret %"struct.WTF::KeyValuePair.11"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS3_NS1_10WeakMemberINS1_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS2_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS7_EEEESC_NS1_13HeapAllocatorEE5clearEv(%"class.WTF::HashTable.9"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair.11"*, %"struct.WTF::KeyValuePair.11"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair.11"* %3, null
  br i1 %4, label %61, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %57, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %54, %9
  %12 = phi i64 [ 0, %9 ], [ %55, %54 ]
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %3, i64 %12
  %14 = bitcast %"struct.WTF::KeyValuePair.11"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  switch i64 %15, label %16 [
    i64 -1, label %54
    i64 0, label %54
  ]

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %3, i64 %12, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #10
  br label %33

33:                                               ; preds = %32, %29, %16
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #10
  br label %50

50:                                               ; preds = %33, %46, %49
  %51 = bitcast %"struct.WTF::KeyValuePair.11"* %13 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %51, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %3, i64 %12, i32 1
  %53 = bitcast %"class.blink::WeakMember"* %52 to i64*
  store atomic i64 0, i64* %53 monotonic, align 8
  br label %54

54:                                               ; preds = %50, %11, %11
  %55 = add nuw nsw i64 %12, 1
  %56 = icmp eq i64 %55, %10
  br i1 %56, label %57, label %11

57:                                               ; preds = %54, %5
  %58 = bitcast %"struct.WTF::KeyValuePair.11"* %3 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %58) #10
  %59 = bitcast %"class.WTF::HashTable.9"* %0 to i64*
  store atomic i64 0, i64* %59 monotonic, align 8
  store i32 0, i32* %6, align 8
  %60 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 2
  store i32 0, i32* %60, align 4
  br label %61

61:                                               ; preds = %1, %57
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.11"*, i8 } @_ZN3WTF9HashTableIN5blink18WindowAgentFactory26SchemeAndRegistrableDomainENS_12KeyValuePairIS3_NS1_10WeakMemberINS1_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS2_30SchemeAndRegistrableDomainHashENS_18HashMapValueTraitsINS2_32SchemeAndRegistrableDomainTraitsENS_10HashTraitsIS7_EEEESC_NS1_13HeapAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISA_SF_SG_EES3_EENSt3__14pairIPS8_bEERKT0_(%"class.WTF::HashTable.9"*, %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* dereferenceable(16)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.11"*, %"struct.WTF::KeyValuePair.11"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.9", %"class.WTF::HashTable.9"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain", %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #10
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = getelementptr inbounds %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain", %"struct.blink::WindowAgentFactory::SchemeAndRegistrableDomain"* %1, i64 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = lshr i32 %22, 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %17
  %26 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %20) #10
  br label %27

27:                                               ; preds = %17, %25
  %28 = phi i32 [ %26, %25 ], [ %23, %17 ]
  %29 = zext i32 %18 to i64
  %30 = mul i64 %29, 5146158508761418231
  %31 = zext i32 %28 to i64
  %32 = mul i64 %31, -682818954288075998
  %33 = add i64 %32, %30
  %34 = lshr i64 %33, 32
  %35 = trunc i64 %34 to i32
  %36 = and i32 %7, %35
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %4, i64 %37
  %39 = ptrtoint %"struct.WTF::KeyValuePair.11"* %38 to i64
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %60, label %43

43:                                               ; preds = %27
  %44 = xor i32 %35, -1
  %45 = lshr i64 %33, 55
  %46 = trunc i64 %45 to i32
  %47 = add i32 %46, %44
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %66

58:                                               ; preds = %84
  %59 = ptrtoint %"struct.WTF::KeyValuePair.11"* %90 to i64
  br label %60

60:                                               ; preds = %58, %27
  %61 = phi i64 [ %39, %27 ], [ %59, %58 ]
  %62 = phi %"struct.WTF::KeyValuePair.11"* [ null, %27 ], [ %85, %58 ]
  %63 = icmp eq %"struct.WTF::KeyValuePair.11"* %62, null
  %64 = ptrtoint %"struct.WTF::KeyValuePair.11"* %62 to i64
  %65 = select i1 %63, i64 %61, i64 %64
  br label %95

66:                                               ; preds = %43, %84
  %67 = phi %"struct.WTF::KeyValuePair.11"* [ null, %43 ], [ %85, %84 ]
  %68 = phi i64 [ %39, %43 ], [ %91, %84 ]
  %69 = phi %"struct.WTF::KeyValuePair.11"* [ %38, %43 ], [ %90, %84 ]
  %70 = phi i64 [ %37, %43 ], [ %89, %84 ]
  %71 = phi i64 [ 0, %43 ], [ %87, %84 ]
  %72 = bitcast %"struct.WTF::KeyValuePair.11"* %69 to i8**
  %73 = load i8*, i8** %72, align 8
  %74 = icmp eq i8* %73, inttoptr (i64 -1 to i8*)
  br i1 %74, label %84, label %75

75:                                               ; preds = %66
  %76 = bitcast i8* %73 to %"class.WTF::StringImpl"*
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %78 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"* %77) #10
  br i1 %78, label %79, label %84

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %4, i64 %70, i32 0, i32 1, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %83 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %81, %"class.WTF::StringImpl"* %82) #10
  br i1 %83, label %95, label %84

84:                                               ; preds = %66, %75, %79
  %85 = phi %"struct.WTF::KeyValuePair.11"* [ %67, %75 ], [ %67, %79 ], [ %69, %66 ]
  %86 = icmp eq i64 %71, 0
  %87 = select i1 %86, i64 %57, i64 %71
  %88 = add i64 %87, %70
  %89 = and i64 %88, %8
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %4, i64 %89
  %91 = ptrtoint %"struct.WTF::KeyValuePair.11"* %90 to i64
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.11", %"struct.WTF::KeyValuePair.11"* %90, i64 0, i32 0, i32 0, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %58, label %66

95:                                               ; preds = %79, %60
  %96 = phi i64 [ %65, %60 ], [ %68, %79 ]
  %97 = phi i8 [ 0, %60 ], [ 1, %79 ]
  %98 = inttoptr i64 %96 to %"struct.WTF::KeyValuePair.11"*
  %99 = insertvalue { %"struct.WTF::KeyValuePair.11"*, i8 } undef, %"struct.WTF::KeyValuePair.11"* %98, 0
  %100 = insertvalue { %"struct.WTF::KeyValuePair.11"*, i8 } %99, i8 %97, 1
  ret { %"struct.WTF::KeyValuePair.11"*, i8 } %100
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor14HandleWeakCellINS_11WindowAgentEEEvRKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WindowAgent"**
  %4 = load %"class.blink::WindowAgent"*, %"class.blink::WindowAgent"** %3, align 8
  %5 = ptrtoint %"class.blink::WindowAgent"* %4 to i64
  switch i64 %5, label %6 [
    i64 0, label %27
    i64 -1, label %27
  ]

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #10
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #10
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::WindowAgent", %"class.blink::WindowAgent"* %4, i64 -1, i32 0, i32 3
  %20 = getelementptr inbounds i8, i8* %19, i64 6
  %21 = bitcast i8* %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast i8* %1 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  br label %27

27:                                               ; preds = %18, %2, %2, %13, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1E13scoped_refptrIKN5blink14SecurityOriginEENS_12KeyValuePairIS6_NS3_10WeakMemberINS3_11WindowAgentEEEEENS_24KeyValuePairKeyExtractorENS3_18SecurityOriginHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE7ProcessERKNS3_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"**
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %73, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %1, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %10
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 -1
  %13 = icmp ult %"struct.WTF::KeyValuePair"* %12, %4
  br i1 %13, label %73, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds i8, i8* %1, i64 16
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds i8, i8* %1, i64 12
  %18 = bitcast i8* %17 to i32*
  br label %19

19:                                               ; preds = %14, %69
  %20 = phi %"struct.WTF::KeyValuePair"* [ %12, %14 ], [ %70, %69 ]
  %21 = phi %"struct.WTF::KeyValuePair"* [ %11, %14 ], [ %20, %69 ]
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"struct.WTF::KeyValuePair"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  switch i64 %24, label %25 [
    i64 -1, label %69
    i64 0, label %69
  ]

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %21, i64 -1, i32 1, i32 0, i32 0
  %27 = load %"class.blink::WindowAgent"*, %"class.blink::WindowAgent"** %26, align 8
  %28 = icmp eq %"class.blink::WindowAgent"* %27, null
  br i1 %28, label %69, label %29

29:                                               ; preds = %25
  %30 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %31 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %30, i64 0, i32 1
  %32 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %31) #10
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %36, !prof !3

34:                                               ; preds = %29
  %35 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %31, i8* %35) #10
  br label %36

36:                                               ; preds = %34, %29
  %37 = phi i8* [ %35, %34 ], [ %32, %29 ]
  %38 = bitcast i8* %37 to %"class.blink::ThreadState"**
  %39 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %38, align 8
  %40 = icmp eq %"class.blink::ThreadState"* %39, null
  br i1 %40, label %69, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::WindowAgent", %"class.blink::WindowAgent"* %27, i64 -1, i32 0, i32 3
  %43 = getelementptr inbounds i8, i8* %42, i64 6
  %44 = bitcast i8* %43 to i16*
  %45 = load i16, i16* %44, align 2
  %46 = and i16 %45, 1
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %69

48:                                               ; preds = %41
  %49 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %22, align 8
  %50 = icmp eq %"class.blink::SecurityOrigin"* %49, null
  br i1 %50, label %58, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %49, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %52) #10
  %53 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %51
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %49) #10
  %57 = bitcast %"class.blink::SecurityOrigin"* %49 to i8*
  tail call void @free(i8* %57) #10
  br label %58

58:                                               ; preds = %48, %51, %56
  %59 = bitcast %"struct.WTF::KeyValuePair"* %20 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %59, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %21, i64 -1, i32 1
  %61 = bitcast %"class.blink::WeakMember"* %60 to i64*
  store atomic i64 0, i64* %61 monotonic, align 8
  %62 = load i32, i32* %16, align 8
  %63 = add i32 %62, 1
  %64 = and i32 %63, 2147483647
  %65 = and i32 %62, -2147483648
  %66 = or i32 %64, %65
  store i32 %66, i32* %16, align 8
  %67 = load i32, i32* %18, align 4
  %68 = add i32 %67, -1
  store i32 %68, i32* %18, align 4
  br label %69

69:                                               ; preds = %41, %19, %19, %25, %36, %58
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 -1
  %71 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %72 = icmp ult %"struct.WTF::KeyValuePair"* %70, %71
  br i1 %72, label %73, label %19

73:                                               ; preds = %69, %6, %2
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 1, i32 1048575}
