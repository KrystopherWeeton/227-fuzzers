; ModuleID = '../../third_party/icu/source/i18n/csr2022.cpp'
source_filename = "../../third_party/icu/source/i18n/csr2022.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::CharsetRecog_2022JP" = type { %"class.icu_69::CharsetRecog_2022" }
%"class.icu_69::CharsetRecog_2022" = type { %"class.icu_69::CharsetRecognizer" }
%"class.icu_69::CharsetRecognizer" = type { i32 (...)** }
%"class.icu_69::InputText" = type <{ i8*, i32, [4 x i8], i16*, i8, [7 x i8], i8*, i8*, i32, [4 x i8] }>
%"class.icu_69::CharsetMatch" = type { %"class.icu_69::InputText"*, i32, i8*, i8* }

$_ZTSN6icu_6917CharsetRecog_2022E = comdat any

$_ZTIN6icu_6917CharsetRecog_2022E = comdat any

@.str = private unnamed_addr constant [12 x i8] c"ISO-2022-JP\00", align 1
@_ZN6icu_69L22escapeSequences_2022JPE = internal constant [12 x [5 x i8]] [[5 x i8] c"\1B$(C\00", [5 x i8] c"\1B$(D\00", [5 x i8] c"\1B$@\00\00", [5 x i8] c"\1B$A\00\00", [5 x i8] c"\1B$B\00\00", [5 x i8] c"\1B&@\00\00", [5 x i8] c"\1B(B\00\00", [5 x i8] c"\1B(H\00\00", [5 x i8] c"\1B(I\00\00", [5 x i8] c"\1B(J\00\00", [5 x i8] c"\1B.A\00\00", [5 x i8] c"\1B.F\00\00"], align 16
@_ZTVN6icu_6919CharsetRecog_2022JPE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6919CharsetRecog_2022JPE to i8*), i8* bitcast (i8* (%"class.icu_69::CharsetRecog_2022JP"*)* @_ZNK6icu_6919CharsetRecog_2022JP7getNameEv to i8*), i8* bitcast (i8* (%"class.icu_69::CharsetRecognizer"*)* @_ZNK6icu_6917CharsetRecognizer11getLanguageEv to i8*), i8* bitcast (i8 (%"class.icu_69::CharsetRecog_2022JP"*, %"class.icu_69::InputText"*, %"class.icu_69::CharsetMatch"*)* @_ZNK6icu_6919CharsetRecog_2022JP5matchEPNS_9InputTextEPNS_12CharsetMatchE to i8*), i8* bitcast (void (%"class.icu_69::CharsetRecog_2022JP"*)* @_ZN6icu_6919CharsetRecog_2022JPD2Ev to i8*), i8* bitcast (void (%"class.icu_69::CharsetRecog_2022JP"*)* @_ZN6icu_6919CharsetRecog_2022JPD0Ev to i8*)] }, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTSN6icu_6919CharsetRecog_2022JPE = hidden constant [31 x i8] c"N6icu_6919CharsetRecog_2022JPE\00", align 1
@_ZTSN6icu_6917CharsetRecog_2022E = linkonce_odr hidden constant [29 x i8] c"N6icu_6917CharsetRecog_2022E\00", comdat, align 1
@_ZTIN6icu_6917CharsetRecognizerE = external constant i8*
@_ZTIN6icu_6917CharsetRecog_2022E = linkonce_odr hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZTSN6icu_6917CharsetRecog_2022E, i32 0, i32 0), i8* bitcast (i8** @_ZTIN6icu_6917CharsetRecognizerE to i8*) }, comdat, align 8
@_ZTIN6icu_6919CharsetRecog_2022JPE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @_ZTSN6icu_6919CharsetRecog_2022JPE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6917CharsetRecog_2022E to i8*) }, align 8

@_ZN6icu_6919CharsetRecog_2022JPD1Ev = hidden unnamed_addr alias void (%"class.icu_69::CharsetRecog_2022JP"*), void (%"class.icu_69::CharsetRecog_2022JP"*)* @_ZN6icu_6919CharsetRecog_2022JPD2Ev
@_ZN6icu_6917CharsetRecog_2022D1Ev = hidden unnamed_addr alias void (%"class.icu_69::CharsetRecog_2022"*), void (%"class.icu_69::CharsetRecog_2022"*)* @_ZN6icu_6917CharsetRecog_2022D2Ev

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6917CharsetRecog_202210match_2022EPKhiPA5_S1_i(%"class.icu_69::CharsetRecog_2022"* nocapture readnone, i8* nocapture readonly, i32, [5 x i8]* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %6 = icmp sgt i32 %2, 0
  br i1 %6, label %7, label %83

7:                                                ; preds = %5
  %8 = icmp sgt i32 %4, 0
  %9 = zext i32 %4 to i64
  br label %10

10:                                               ; preds = %7, %59
  %11 = phi i32 [ 0, %7 ], [ %63, %59 ]
  %12 = phi i32 [ 0, %7 ], [ %62, %59 ]
  %13 = phi i32 [ 0, %7 ], [ %61, %59 ]
  %14 = phi i32 [ 0, %7 ], [ %64, %59 ]
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i8, i8* %1, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 27
  br i1 %18, label %19, label %53

19:                                               ; preds = %10
  br i1 %8, label %20, label %51

20:                                               ; preds = %19
  %21 = sub nsw i32 %2, %14
  br label %22

22:                                               ; preds = %48, %20
  %23 = phi i64 [ 0, %20 ], [ %49, %48 ]
  %24 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 %23, i64 0
  %25 = tail call i64 @strlen(i8* %24) #8
  %26 = trunc i64 %25 to i32
  %27 = icmp slt i32 %21, %26
  br i1 %27, label %48, label %28

28:                                               ; preds = %22
  %29 = icmp sgt i32 %26, 1
  br i1 %29, label %30, label %43

30:                                               ; preds = %28
  %31 = and i64 %25, 4294967295
  br label %34

32:                                               ; preds = %34
  %33 = icmp eq i64 %42, %31
  br i1 %33, label %43, label %34

34:                                               ; preds = %32, %30
  %35 = phi i64 [ 1, %30 ], [ %42, %32 ]
  %36 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 %23, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = add nsw i64 %35, %15
  %39 = getelementptr inbounds i8, i8* %1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %37, %40
  %42 = add nuw nsw i64 %35, 1
  br i1 %41, label %32, label %48

43:                                               ; preds = %28, %32
  %44 = trunc i64 %25 to i32
  %45 = add nsw i32 %13, 1
  %46 = add i32 %14, -1
  %47 = add i32 %46, %44
  br label %59

48:                                               ; preds = %34, %22
  %49 = add nuw nsw i64 %23, 1
  %50 = icmp eq i64 %49, %9
  br i1 %50, label %51, label %22

51:                                               ; preds = %48, %19
  %52 = add nsw i32 %12, 1
  br label %53

53:                                               ; preds = %51, %10
  %54 = phi i32 [ %52, %51 ], [ %12, %10 ]
  %55 = and i8 %17, -2
  %56 = icmp eq i8 %55, 14
  %57 = zext i1 %56 to i32
  %58 = add nsw i32 %11, %57
  br label %59

59:                                               ; preds = %43, %53
  %60 = phi i32 [ %14, %53 ], [ %47, %43 ]
  %61 = phi i32 [ %13, %53 ], [ %45, %43 ]
  %62 = phi i32 [ %54, %53 ], [ %12, %43 ]
  %63 = phi i32 [ %58, %53 ], [ %11, %43 ]
  %64 = add nsw i32 %60, 1
  %65 = icmp slt i32 %64, %2
  br i1 %65, label %10, label %66

66:                                               ; preds = %59
  %67 = icmp eq i32 %61, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %66
  %69 = sub i32 %61, %62
  %70 = mul i32 %69, 100
  %71 = add nsw i32 %62, %61
  %72 = sdiv i32 %70, %71
  %73 = add nsw i32 %63, %61
  %74 = icmp slt i32 %73, 5
  br i1 %74, label %75, label %79

75:                                               ; preds = %68
  %76 = sub nsw i32 5, %73
  %77 = mul i32 %76, -10
  %78 = add i32 %72, %77
  br label %79

79:                                               ; preds = %75, %68
  %80 = phi i32 [ %78, %75 ], [ %72, %68 ]
  %81 = icmp sgt i32 %80, 0
  %82 = select i1 %81, i32 %80, i32 0
  br label %83

83:                                               ; preds = %5, %66, %79
  %84 = phi i32 [ %82, %79 ], [ 0, %66 ], [ 0, %5 ]
  ret i32 %84
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6917CharsetRecog_2022D2Ev(%"class.icu_69::CharsetRecog_2022"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::CharsetRecog_2022", %"class.icu_69::CharsetRecog_2022"* %0, i64 0, i32 0
  tail call void @_ZN6icu_6917CharsetRecognizerD2Ev(%"class.icu_69::CharsetRecognizer"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6919CharsetRecog_2022JPD2Ev(%"class.icu_69::CharsetRecog_2022JP"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::CharsetRecog_2022JP", %"class.icu_69::CharsetRecog_2022JP"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN6icu_6917CharsetRecognizerD2Ev(%"class.icu_69::CharsetRecognizer"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6919CharsetRecog_2022JPD0Ev(%"class.icu_69::CharsetRecog_2022JP"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::CharsetRecog_2022JP", %"class.icu_69::CharsetRecog_2022JP"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN6icu_6917CharsetRecognizerD2Ev(%"class.icu_69::CharsetRecognizer"* %2) #9
  %3 = bitcast %"class.icu_69::CharsetRecog_2022JP"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %3) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_697UMemorydlEPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK6icu_6919CharsetRecog_2022JP7getNameEv(%"class.icu_69::CharsetRecog_2022JP"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6919CharsetRecog_2022JP5matchEPNS_9InputTextEPNS_12CharsetMatchE(%"class.icu_69::CharsetRecog_2022JP"*, %"class.icu_69::InputText"*, %"class.icu_69::CharsetMatch"*) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %1, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = tail call i32 @_ZNK6icu_6917CharsetRecog_202210match_2022EPKhiPA5_S1_i(%"class.icu_69::CharsetRecog_2022"* undef, i8* %5, i32 %7, [5 x i8]* getelementptr inbounds ([12 x [5 x i8]], [12 x [5 x i8]]* @_ZN6icu_69L22escapeSequences_2022JPE, i64 0, i64 0), i32 12)
  %9 = getelementptr inbounds %"class.icu_69::CharsetRecog_2022JP", %"class.icu_69::CharsetRecog_2022JP"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN6icu_6912CharsetMatch3setEPNS_9InputTextEPKNS_17CharsetRecognizerEiPKcS7_(%"class.icu_69::CharsetMatch"* %2, %"class.icu_69::InputText"* %1, %"class.icu_69::CharsetRecognizer"* %9, i32 %8, i8* null, i8* null) #9
  %10 = icmp sgt i32 %8, 0
  %11 = zext i1 %10 to i8
  ret i8 %11
}

declare void @_ZN6icu_6912CharsetMatch3setEPNS_9InputTextEPKNS_17CharsetRecognizerEiPKcS7_(%"class.icu_69::CharsetMatch"*, %"class.icu_69::InputText"*, %"class.icu_69::CharsetRecognizer"*, i32, i8*, i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6icu_6917CharsetRecognizerD2Ev(%"class.icu_69::CharsetRecognizer"*) unnamed_addr #3

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6icu_6917CharsetRecog_2022D0Ev(%"class.icu_69::CharsetRecog_2022"* nocapture readnone) unnamed_addr #6 align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare i8* @_ZNK6icu_6917CharsetRecognizer11getLanguageEv(%"class.icu_69::CharsetRecognizer"*) unnamed_addr #5

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
