; ModuleID = '../../base/task/thread_pool/worker_thread.cc'
source_filename = "../../base/task/thread_pool/worker_thread.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TimeDelta" = type { i64 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.base::internal::WorkerThread" = type <{ %"class.base::PlatformThread::Delegate", %"class.base::RefCountedThreadSafe.2", [4 x i8], %class.scoped_refptr.3, %"class.base::internal::CheckedLock", %"class.base::PlatformThreadHandle", %"class.base::TimeTicks", %"class.base::WaitableEvent", %"class.base::AtomicFlag", [7 x i8], %"class.std::__1::unique_ptr", %"class.base::internal::TrackedRef", %"class.base::WorkerThreadObserver"*, i32, i32, %"class.base::AtomicFlag", [7 x i8] }>
%"class.base::PlatformThread::Delegate" = type { i32 (...)** }
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.3 = type { %"class.base::internal::WorkerThread"* }
%"class.base::internal::CheckedLock" = type { %"class.base::Lock" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::PlatformThreadHandle" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr, i8, [7 x i8] }>
%class.scoped_refptr = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.base::internal::WorkerThread::Delegate"* }
%"class.base::internal::TrackedRef" = type { %"class.base::internal::TaskTracker"*, %"class.base::internal::TrackedRefFactory"* }
%"class.base::internal::TaskTracker" = type { i32 (...)**, %"class.base::TaskAnnotator", %"class.std::__1::basic_string", i8, %"class.std::__1::unique_ptr.25", %"struct.std::__1::atomic", %"struct.std::__1::atomic.31", %"class.base::internal::CheckedLock", %"class.std::__1::unique_ptr.35", %"class.base::OnceCallback", %"class.base::internal::CheckedLock", %"class.std::__1::unique_ptr.47", %"class.base::internal::TrackedRefFactory" }
%"class.base::TaskAnnotator" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.21 }
%union.anon.21 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.base::internal::TaskTracker::State"* }
%"class.base::internal::TaskTracker::State" = type opaque
%"struct.std::__1::atomic.31" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__cxx_atomic_impl.33" }
%"struct.std::__1::__cxx_atomic_impl.33" = type { %"struct.std::__1::__cxx_atomic_base_impl.34" }
%"struct.std::__1::__cxx_atomic_base_impl.34" = type { i32 }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.base::ConditionVariable"* }
%"class.base::ConditionVariable" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t*, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.38, %union.anon.40, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.38 = type { i64 }
%union.anon.40 = type { i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.45 }
%class.scoped_refptr.45 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.46", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.46" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.base::WaitableEvent"* }
%"class.base::internal::TrackedRefFactory" = type { %"class.base::internal::TaskTracker"*, %"class.base::AtomicRefCount", [4 x i8], %"class.absl::optional", %"class.absl::optional.12" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon }
%union.anon = type { %"class.base::WaitableEvent" }
%"class.absl::optional.12" = type { %"class.absl::optional_internal::optional_data.13" }
%"class.absl::optional_internal::optional_data.13" = type { %"class.absl::optional_internal::optional_data_base.14" }
%"class.absl::optional_internal::optional_data_base.14" = type { %"class.absl::optional_internal::optional_data_dtor_base.15" }
%"class.absl::optional_internal::optional_data_dtor_base.15" = type { i8, %union.anon.16 }
%union.anon.16 = type { %"class.base::internal::TrackedRef" }
%"class.base::WorkerThreadObserver" = type { i32 (...)** }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.4" }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }
%"class.base::internal::WorkerThread::Delegate" = type { i32 (...)** }
%"class.base::ScopedClosureRunner" = type { %"class.base::OnceCallback" }
%"class.absl::optional.53" = type { %"class.absl::optional_internal::optional_data.54" }
%"class.absl::optional_internal::optional_data.54" = type { %"class.absl::optional_internal::optional_data_base.55" }
%"class.absl::optional_internal::optional_data_base.55" = type { %"class.absl::optional_internal::optional_data_dtor_base.56" }
%"class.absl::optional_internal::optional_data_dtor_base.56" = type { i8, [7 x i8], %union.anon.57 }
%union.anon.57 = type { %"class.base::WatchHangsInScope" }
%"class.base::WatchHangsInScope" = type <{ i8, [7 x i8], %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.base::internal::RegisteredTaskSource" = type { %class.scoped_refptr.58, %"class.base::internal::TaskTracker"* }
%class.scoped_refptr.58 = type { %"class.base::internal::TaskSource"* }
%"class.base::internal::TaskSource" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.59", %"class.base::TaskTraits", %"struct.std::__1::atomic.60", [4 x i8], %"class.base::internal::CheckedLock", %"class.base::HeapHandle", %"class.base::TaskRunner"*, i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.59" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [8 x i8] }
%"struct.std::__1::atomic.60" = type { %"struct.std::__1::__atomic_base.61" }
%"struct.std::__1::__atomic_base.61" = type { %"struct.std::__1::__cxx_atomic_impl.62" }
%"struct.std::__1::__cxx_atomic_impl.62" = type { %"struct.std::__1::__cxx_atomic_base_impl.63" }
%"struct.std::__1::__cxx_atomic_base_impl.63" = type { i8 }
%"class.base::HeapHandle" = type { i64 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.64", [4 x i8] }>
%"class.base::RefCountedThreadSafe.64" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }

$_ZN4base8internal12WorkerThread8DelegateD2Ev = comdat any

$_ZN4base8internal12WorkerThread8DelegateD0Ev = comdat any

$_ZN4base8internal12WorkerThread8Delegate10OnMainExitEPS1_ = comdat any

@_ZN4base8internal12WorkerThread8Delegate26kPurgeThreadCacheIdleDelayE = hidden constant %"class.base::TimeDelta" { i64 1000000 }, align 8
@_ZTVN4base8internal12WorkerThreadE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i64 (%"class.base::PlatformThread::Delegate"*)* @_ZN4base14PlatformThread8Delegate17GetRealtimePeriodEv to i8*), i8* bitcast (void (%"class.base::internal::WorkerThread"*)* @_ZN4base8internal12WorkerThread10ThreadMainEv to i8*), i8* bitcast (void (%"class.base::internal::WorkerThread"*)* @_ZN4base8internal12WorkerThreadD2Ev to i8*), i8* bitcast (void (%"class.base::internal::WorkerThread"*)* @_ZN4base8internal12WorkerThreadD0Ev to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [18 x i8] c"WorkerThread born\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"WorkerThread active\00", align 1
@_ZN4base17WatchHangsInScope21kDefaultHangWatchTimeE = external local_unnamed_addr global %"class.base::TimeDelta", align 8
@.str.2 = private unnamed_addr constant [18 x i8] c"WorkerThread dead\00", align 1
@_ZTVN4base8internal12WorkerThread8DelegateE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::internal::WorkerThread::Delegate"*)* @_ZN4base8internal12WorkerThread8DelegateD2Ev to i8*), i8* bitcast (void (%"class.base::internal::WorkerThread::Delegate"*)* @_ZN4base8internal12WorkerThread8DelegateD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::WaitableEvent"*)* @_ZN4base8internal12WorkerThread8Delegate11WaitForWorkEPNS_13WaitableEventE to i8*), i8* bitcast (void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread"*)* @_ZN4base8internal12WorkerThread8Delegate10OnMainExitEPS1_ to i8*)] }, align 8

@_ZN4base8internal12WorkerThreadC1ENS_14ThreadPriorityENSt3__110unique_ptrINS1_8DelegateENS3_14default_deleteIS5_EEEENS0_10TrackedRefINS0_11TaskTrackerEEEPKNS0_11CheckedLockE = hidden unnamed_addr alias void (%"class.base::internal::WorkerThread"*, i32, %"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::TrackedRef"*, %"class.base::internal::CheckedLock"*), void (%"class.base::internal::WorkerThread"*, i32, %"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::TrackedRef"*, %"class.base::internal::CheckedLock"*)* @_ZN4base8internal12WorkerThreadC2ENS_14ThreadPriorityENSt3__110unique_ptrINS1_8DelegateENS3_14default_deleteIS5_EEEENS0_10TrackedRefINS0_11TaskTrackerEEEPKNS0_11CheckedLockE
@_ZN4base8internal12WorkerThreadD1Ev = hidden unnamed_addr alias void (%"class.base::internal::WorkerThread"*), void (%"class.base::internal::WorkerThread"*)* @_ZN4base8internal12WorkerThreadD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal12WorkerThread8Delegate11WaitForWorkEPNS_13WaitableEventE(%"class.base::internal::WorkerThread::Delegate"*, %"class.base::WaitableEvent"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  %7 = bitcast %"class.base::internal::WorkerThread::Delegate"* %0 to i64 (%"class.base::internal::WorkerThread::Delegate"*)***
  %8 = load i64 (%"class.base::internal::WorkerThread::Delegate"*)**, i64 (%"class.base::internal::WorkerThread::Delegate"*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.base::internal::WorkerThread::Delegate"*)*, i64 (%"class.base::internal::WorkerThread::Delegate"*)** %8, i64 6
  %10 = load i64 (%"class.base::internal::WorkerThread::Delegate"*)*, i64 (%"class.base::internal::WorkerThread::Delegate"*)** %9, align 8
  %11 = tail call i64 %10(%"class.base::internal::WorkerThread::Delegate"* %0) #7
  store i64 %11, i64* %6, align 8
  %12 = icmp sgt i64 %11, 1000000
  %13 = select i1 %12, %"class.base::TimeDelta"* @_ZN4base8internal12WorkerThread8Delegate26kPurgeThreadCacheIdleDelayE, %"class.base::TimeDelta"* %3
  %14 = notail call zeroext i1 @_ZN4base13WaitableEvent9TimedWaitERKNS_9TimeDeltaE(%"class.base::WaitableEvent"* %1, %"class.base::TimeDelta"* nonnull dereferenceable(8) %13) #7
  br i1 %14, label %25, label %15

15:                                               ; preds = %2
  call void @_ZN4base8internal11ThreadCache18PurgeCurrentThreadEv() #7
  %16 = load i64, i64* %6, align 8
  %17 = icmp sgt i64 %16, 1000000
  br i1 %17, label %18, label %25

18:                                               ; preds = %15
  %19 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #7
  %20 = icmp eq i64 %16, 9223372036854775807
  %21 = add nsw i64 %16, -1000000
  %22 = select i1 %20, i64 9223372036854775807, i64 %21
  %23 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = notail call zeroext i1 @_ZN4base13WaitableEvent9TimedWaitERKNS_9TimeDeltaE(%"class.base::WaitableEvent"* %1, %"class.base::TimeDelta"* nonnull dereferenceable(8) %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #7
  br label %25

25:                                               ; preds = %15, %18, %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN4base13WaitableEvent9TimedWaitERKNS_9TimeDeltaE(%"class.base::WaitableEvent"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN4base8internal11ThreadCache18PurgeCurrentThreadEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal12WorkerThreadC2ENS_14ThreadPriorityENSt3__110unique_ptrINS1_8DelegateENS3_14default_deleteIS5_EEEENS0_10TrackedRefINS0_11TaskTrackerEEEPKNS0_11CheckedLockE(%"class.base::internal::WorkerThread"*, i32, %"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::TrackedRef"* nocapture, %"class.base::internal::CheckedLock"* nocapture readnone) unnamed_addr #0 align 2 {
  %6 = ptrtoint %"class.base::internal::WorkerThread::Delegate"* %2 to i64
  %7 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4base8internal12WorkerThreadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 3, i32 0
  store %"class.base::internal::WorkerThread"* null, %"class.base::internal::WorkerThread"** %9, align 8
  %10 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %10) #7
  %11 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 5, i32 0
  %12 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 7
  %13 = bitcast i64* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false)
  tail call void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"* %12, i32 1, i32 1) #7
  %14 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 8
  tail call void @_ZN4base10AtomicFlagC1Ev(%"class.base::AtomicFlag"* %14) #7
  %15 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 10
  %16 = bitcast %"class.std::__1::unique_ptr"* %15 to i64*
  store i64 %6, i64* %16, align 8
  %17 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 11
  %18 = bitcast %"class.base::internal::TrackedRef"* %3 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.base::internal::TrackedRef"* %17 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 11, i32 1
  %22 = getelementptr inbounds %"class.base::internal::TrackedRef", %"class.base::internal::TrackedRef"* %3, i64 0, i32 1
  %23 = bitcast %"class.base::internal::TrackedRefFactory"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.base::internal::TrackedRefFactory"** %21 to i64*
  store i64 %24, i64* %25, align 8
  store %"class.base::internal::TrackedRefFactory"* null, %"class.base::internal::TrackedRefFactory"** %22, align 8
  %26 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 12
  store %"class.base::WorkerThreadObserver"* null, %"class.base::WorkerThreadObserver"** %26, align 8
  %27 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 13
  store i32 %1, i32* %27, align 8
  %28 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 14
  %29 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 11, i32 0
  %30 = load %"class.base::internal::TaskTracker"*, %"class.base::internal::TaskTracker"** %29, align 8
  %31 = tail call zeroext i1 @_ZNK4base8internal11TaskTracker18HasShutdownStartedEv(%"class.base::internal::TaskTracker"* %30) #7
  br i1 %31, label %34, label %32

32:                                               ; preds = %5
  %33 = load i32, i32* %27, align 8
  br label %34

34:                                               ; preds = %32, %5
  %35 = phi i32 [ %33, %32 ], [ 1, %5 ]
  store i32 %35, i32* %28, align 4
  %36 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 15
  tail call void @_ZN4base10AtomicFlagC1Ev(%"class.base::AtomicFlag"* %36) #7
  %37 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %37, align 8
  ret void
}

declare void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"*, i32, i32) unnamed_addr #2

declare void @_ZN4base10AtomicFlagC1Ev(%"class.base::AtomicFlag"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK4base8internal12WorkerThread24GetDesiredThreadPriorityEv(%"class.base::internal::WorkerThread"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 11, i32 0
  %3 = load %"class.base::internal::TaskTracker"*, %"class.base::internal::TaskTracker"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK4base8internal11TaskTracker18HasShutdownStartedEv(%"class.base::internal::TaskTracker"* %3) #7
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 13
  %7 = load i32, i32* %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 1, %1 ]
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base8internal12WorkerThread5StartEPNS_20WorkerThreadObserverE(%"class.base::internal::WorkerThread"*, %"class.base::WorkerThreadObserver"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #7
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %3, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #7
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i8, i8* %10 acquire, align 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %66

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i8, i8* %14 acquire, align 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %66

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 12
  store %"class.base::WorkerThreadObserver"* %1, %"class.base::WorkerThreadObserver"** %18, align 8
  %19 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 3
  %20 = icmp eq %"class.base::internal::WorkerThread"* %0, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic
  br label %24

24:                                               ; preds = %21, %17
  %25 = ptrtoint %"class.base::internal::WorkerThread"* %0 to i64
  %26 = bitcast %class.scoped_refptr.3* %19 to i64*
  %27 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %19, i64 0, i32 0
  %28 = load %"class.base::internal::WorkerThread"*, %"class.base::internal::WorkerThread"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.base::internal::WorkerThread"* %28, null
  br i1 %29, label %42, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %28, i64 0, i32 1
  %32 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw sub i32* %32, i32 1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %42

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %31, i64 -2
  %37 = bitcast %"class.base::RefCountedThreadSafe.2"* %36 to %"class.base::internal::WorkerThread"*
  %38 = bitcast %"class.base::RefCountedThreadSafe.2"* %36 to void (%"class.base::internal::WorkerThread"*)***
  %39 = load void (%"class.base::internal::WorkerThread"*)**, void (%"class.base::internal::WorkerThread"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.base::internal::WorkerThread"*)*, void (%"class.base::internal::WorkerThread"*)** %39, i64 3
  %41 = load void (%"class.base::internal::WorkerThread"*)*, void (%"class.base::internal::WorkerThread"*)** %40, align 8
  tail call void %41(%"class.base::internal::WorkerThread"* nonnull %37) #7
  br label %42

42:                                               ; preds = %24, %30, %35
  %43 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 0
  %44 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 5
  %45 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 14
  %46 = load i32, i32* %45, align 4
  %47 = tail call zeroext i1 @_ZN4base14PlatformThread18CreateWithPriorityEmPNS0_8DelegateEPNS_20PlatformThreadHandleENS_14ThreadPriorityE(i64 0, %"class.base::PlatformThread::Delegate"* %43, %"class.base::PlatformThreadHandle"* %44, i32 %46) #7
  %48 = getelementptr inbounds %"class.base::PlatformThreadHandle", %"class.base::PlatformThreadHandle"* %44, i64 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %66

51:                                               ; preds = %42
  %52 = load %"class.base::internal::WorkerThread"*, %"class.base::internal::WorkerThread"** %27, align 8
  store i64 0, i64* %26, align 8
  %53 = icmp eq %"class.base::internal::WorkerThread"* %52, null
  br i1 %53, label %66, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %52, i64 0, i32 1
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw sub i32* %56, i32 1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %66

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %55, i64 -2
  %61 = bitcast %"class.base::RefCountedThreadSafe.2"* %60 to %"class.base::internal::WorkerThread"*
  %62 = bitcast %"class.base::RefCountedThreadSafe.2"* %60 to void (%"class.base::internal::WorkerThread"*)***
  %63 = load void (%"class.base::internal::WorkerThread"*)**, void (%"class.base::internal::WorkerThread"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.base::internal::WorkerThread"*)*, void (%"class.base::internal::WorkerThread"*)** %63, i64 3
  %65 = load void (%"class.base::internal::WorkerThread"*)*, void (%"class.base::internal::WorkerThread"*)** %64, align 8
  tail call void %65(%"class.base::internal::WorkerThread"* nonnull %61) #7
  br label %66

66:                                               ; preds = %13, %9, %59, %54, %51, %42
  %67 = phi i1 [ true, %13 ], [ true, %9 ], [ true, %42 ], [ false, %51 ], [ false, %54 ], [ false, %59 ]
  %68 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #7
  ret i1 %67
}

declare zeroext i1 @_ZN4base14PlatformThread18CreateWithPriorityEmPNS0_8DelegateEPNS_20PlatformThreadHandleENS_14ThreadPriorityE(i64, %"class.base::PlatformThread::Delegate"*, %"class.base::PlatformThreadHandle"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal12WorkerThread6WakeUpEv(%"class.base::internal::WorkerThread"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 7
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %2) #7
  ret void
}

declare void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal12WorkerThread14JoinForTestingEv(%"class.base::internal::WorkerThread"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 15
  tail call void @_ZN4base10AtomicFlag3SetEv(%"class.base::AtomicFlag"* %2) #7
  %3 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 7
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %3) #7
  %4 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %5) #7
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !2

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %4, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %9) #7
  br label %10

10:                                               ; preds = %1, %8
  %11 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 5, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  store i64 0, i64* %11, align 8
  %15 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #7
  tail call void @_ZN4base14PlatformThread4JoinENS_20PlatformThreadHandleE(i64 %12) #7
  br label %18

16:                                               ; preds = %10
  %17 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #7
  br label %18

18:                                               ; preds = %16, %14
  ret void
}

declare void @_ZN4base10AtomicFlag3SetEv(%"class.base::AtomicFlag"*) local_unnamed_addr #2

declare void @_ZN4base14PlatformThread4JoinENS_20PlatformThreadHandleE(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base8internal12WorkerThread21ThreadAliveForTestingEv(%"class.base::internal::WorkerThread"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #7
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %2, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 5, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ne i64 %10, 0
  %12 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #7
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal12WorkerThreadD2Ev(%"class.base::internal::WorkerThread"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4base8internal12WorkerThreadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #7
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %3, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #7
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 5, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZN4base14PlatformThread6DetachENS_20PlatformThreadHandleE(i64 %11) #7
  br label %14

14:                                               ; preds = %13, %9
  %15 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #7
  %16 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 15
  tail call void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"* %16) #7
  %17 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 11, i32 1
  %18 = load %"class.base::internal::TrackedRefFactory"*, %"class.base::internal::TrackedRefFactory"** %17, align 8
  %19 = icmp eq %"class.base::internal::TrackedRefFactory"* %18, null
  br i1 %19, label %32, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %18, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %32

24:                                               ; preds = %20
  %25 = load %"class.base::internal::TrackedRefFactory"*, %"class.base::internal::TrackedRefFactory"** %17, align 8
  %26 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %25, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %27 = load i8, i8* %26, align 8, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %30, !prof !4

29:                                               ; preds = %24
  tail call void @llvm.trap() #7
  unreachable

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %25, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %31) #7
  br label %32

32:                                               ; preds = %14, %20, %30
  %33 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %34 = load %"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread::Delegate"** %33, align 8
  store %"class.base::internal::WorkerThread::Delegate"* null, %"class.base::internal::WorkerThread::Delegate"** %33, align 8
  %35 = icmp eq %"class.base::internal::WorkerThread::Delegate"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = bitcast %"class.base::internal::WorkerThread::Delegate"* %34 to void (%"class.base::internal::WorkerThread::Delegate"*)***
  %38 = load void (%"class.base::internal::WorkerThread::Delegate"*)**, void (%"class.base::internal::WorkerThread::Delegate"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.base::internal::WorkerThread::Delegate"*)*, void (%"class.base::internal::WorkerThread::Delegate"*)** %38, i64 1
  %40 = load void (%"class.base::internal::WorkerThread::Delegate"*)*, void (%"class.base::internal::WorkerThread::Delegate"*)** %39, align 8
  tail call void %40(%"class.base::internal::WorkerThread::Delegate"* nonnull %34) #7
  br label %41

41:                                               ; preds = %32, %36
  %42 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 8
  tail call void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"* %42) #7
  %43 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 7
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* %43) #7
  %44 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %3, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %44) #7
  %45 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 3, i32 0
  %46 = load %"class.base::internal::WorkerThread"*, %"class.base::internal::WorkerThread"** %45, align 8
  %47 = icmp eq %"class.base::internal::WorkerThread"* %46, null
  br i1 %47, label %60, label %48

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %46, i64 0, i32 1
  %50 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw sub i32* %50, i32 1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %60

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %49, i64 -2
  %55 = bitcast %"class.base::RefCountedThreadSafe.2"* %54 to %"class.base::internal::WorkerThread"*
  %56 = bitcast %"class.base::RefCountedThreadSafe.2"* %54 to void (%"class.base::internal::WorkerThread"*)***
  %57 = load void (%"class.base::internal::WorkerThread"*)**, void (%"class.base::internal::WorkerThread"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.base::internal::WorkerThread"*)*, void (%"class.base::internal::WorkerThread"*)** %57, i64 3
  %59 = load void (%"class.base::internal::WorkerThread"*)*, void (%"class.base::internal::WorkerThread"*)** %58, align 8
  tail call void %59(%"class.base::internal::WorkerThread"* nonnull %55) #7
  br label %60

60:                                               ; preds = %41, %48, %53
  ret void
}

declare void @_ZN4base14PlatformThread6DetachENS_20PlatformThreadHandleE(i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal12WorkerThreadD0Ev(%"class.base::internal::WorkerThread"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4base8internal12WorkerThreadD2Ev(%"class.base::internal::WorkerThread"* %0) #7
  %2 = bitcast %"class.base::internal::WorkerThread"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal12WorkerThread7CleanupEv(%"class.base::internal::WorkerThread"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 8
  tail call void @_ZN4base10AtomicFlag3SetEv(%"class.base::AtomicFlag"* %2) #7
  %3 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 7
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %3) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal12WorkerThread17BeginUnusedPeriodEv(%"class.base::internal::WorkerThread"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #7
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %2, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #7
  %10 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 6, i32 0, i32 0
  store i64 %9, i64* %10, align 8
  %11 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #7
  ret void
}

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal12WorkerThread15EndUnusedPeriodEv(%"class.base::internal::WorkerThread"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #7
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %2, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 6, i32 0, i32 0
  store i64 0, i64* %9, align 8
  %10 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK4base8internal12WorkerThread15GetLastUsedTimeEv(%"class.base::internal::WorkerThread"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #7
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %2, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 6, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #7
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base8internal12WorkerThread10ShouldExitEv(%"class.base::internal::WorkerThread"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i8, i8* %2 acquire, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i8, i8* %6 acquire, align 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 11, i32 0
  %11 = load %"class.base::internal::TaskTracker"*, %"class.base::internal::TaskTracker"** %10, align 8
  %12 = tail call zeroext i1 @_ZNK4base8internal11TaskTracker18IsShutdownCompleteEv(%"class.base::internal::TaskTracker"* %11) #7
  br label %13

13:                                               ; preds = %5, %1, %9
  %14 = phi i1 [ true, %5 ], [ true, %1 ], [ %12, %9 ]
  ret i1 %14
}

declare zeroext i1 @_ZNK4base8internal11TaskTracker18IsShutdownCompleteEv(%"class.base::internal::TaskTracker"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal11TaskTracker18HasShutdownStartedEv(%"class.base::internal::TaskTracker"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal12WorkerThread20UpdateThreadPriorityENS_14ThreadPriorityE(%"class.base::internal::WorkerThread"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 14
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN4base14PlatformThread24SetCurrentThreadPriorityENS_14ThreadPriorityE(i32 %1) #7
  store i32 %1, i32* %3, align 4
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

declare void @_ZN4base14PlatformThread24SetCurrentThreadPriorityENS_14ThreadPriorityE(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal12WorkerThread10ThreadMainEv(%"class.base::internal::WorkerThread"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 13
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %16

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %7 = load %"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread::Delegate"** %6, align 8
  %8 = bitcast %"class.base::internal::WorkerThread::Delegate"* %7 to i32 (%"class.base::internal::WorkerThread::Delegate"*)***
  %9 = load i32 (%"class.base::internal::WorkerThread::Delegate"*)**, i32 (%"class.base::internal::WorkerThread::Delegate"*)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.base::internal::WorkerThread::Delegate"*)*, i32 (%"class.base::internal::WorkerThread::Delegate"*)** %9, i64 2
  %11 = load i32 (%"class.base::internal::WorkerThread::Delegate"*)*, i32 (%"class.base::internal::WorkerThread::Delegate"*)** %10, align 8
  %12 = tail call i32 %11(%"class.base::internal::WorkerThread::Delegate"* %7) #7
  switch i32 %12, label %16 [
    i32 0, label %13
    i32 1, label %14
    i32 2, label %15
  ]

13:                                               ; preds = %5
  tail call void @_ZN4base8internal12WorkerThread25RunBackgroundPooledWorkerEv(%"class.base::internal::WorkerThread"* %0)
  br label %27

14:                                               ; preds = %5
  tail call void @_ZN4base8internal12WorkerThread25RunBackgroundSharedWorkerEv(%"class.base::internal::WorkerThread"* %0)
  br label %27

15:                                               ; preds = %5
  tail call void @_ZN4base8internal12WorkerThread28RunBackgroundDedicatedWorkerEv(%"class.base::internal::WorkerThread"* %0)
  br label %27

16:                                               ; preds = %5, %1
  %17 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %18 = load %"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread::Delegate"** %17, align 8
  %19 = bitcast %"class.base::internal::WorkerThread::Delegate"* %18 to i32 (%"class.base::internal::WorkerThread::Delegate"*)***
  %20 = load i32 (%"class.base::internal::WorkerThread::Delegate"*)**, i32 (%"class.base::internal::WorkerThread::Delegate"*)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.base::internal::WorkerThread::Delegate"*)*, i32 (%"class.base::internal::WorkerThread::Delegate"*)** %20, i64 2
  %22 = load i32 (%"class.base::internal::WorkerThread::Delegate"*)*, i32 (%"class.base::internal::WorkerThread::Delegate"*)** %21, align 8
  %23 = tail call i32 %22(%"class.base::internal::WorkerThread::Delegate"* %18) #7
  switch i32 %23, label %27 [
    i32 0, label %24
    i32 1, label %25
    i32 2, label %26
  ]

24:                                               ; preds = %16
  tail call void @_ZN4base8internal12WorkerThread15RunPooledWorkerEv(%"class.base::internal::WorkerThread"* %0)
  br label %27

25:                                               ; preds = %16
  tail call void @_ZN4base8internal12WorkerThread15RunSharedWorkerEv(%"class.base::internal::WorkerThread"* %0)
  br label %27

26:                                               ; preds = %16
  tail call void @_ZN4base8internal12WorkerThread18RunDedicatedWorkerEv(%"class.base::internal::WorkerThread"* %0)
  br label %27

27:                                               ; preds = %13, %14, %15, %24, %25, %26, %16
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN4base8internal12WorkerThread25RunBackgroundPooledWorkerEv(%"class.base::internal::WorkerThread"*) local_unnamed_addr #5 align 2 {
  %2 = alloca i32, align 4
  notail call void @_ZN4base8internal12WorkerThread9RunWorkerEv(%"class.base::internal::WorkerThread"* %0)
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #7
  store i32 268, i32* %2, align 4
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #7
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN4base8internal12WorkerThread25RunBackgroundSharedWorkerEv(%"class.base::internal::WorkerThread"*) local_unnamed_addr #5 align 2 {
  %2 = alloca i32, align 4
  notail call void @_ZN4base8internal12WorkerThread9RunWorkerEv(%"class.base::internal::WorkerThread"* %0)
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #7
  store i32 278, i32* %2, align 4
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #7
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN4base8internal12WorkerThread28RunBackgroundDedicatedWorkerEv(%"class.base::internal::WorkerThread"*) local_unnamed_addr #5 align 2 {
  %2 = alloca i32, align 4
  notail call void @_ZN4base8internal12WorkerThread9RunWorkerEv(%"class.base::internal::WorkerThread"* %0)
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #7
  store i32 288, i32* %2, align 4
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #7
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN4base8internal12WorkerThread15RunPooledWorkerEv(%"class.base::internal::WorkerThread"*) local_unnamed_addr #5 align 2 {
  %2 = alloca i32, align 4
  notail call void @_ZN4base8internal12WorkerThread9RunWorkerEv(%"class.base::internal::WorkerThread"* %0)
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #7
  store i32 263, i32* %2, align 4
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #7
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN4base8internal12WorkerThread15RunSharedWorkerEv(%"class.base::internal::WorkerThread"*) local_unnamed_addr #5 align 2 {
  %2 = alloca i32, align 4
  notail call void @_ZN4base8internal12WorkerThread9RunWorkerEv(%"class.base::internal::WorkerThread"* %0)
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #7
  store i32 273, i32* %2, align 4
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #7
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN4base8internal12WorkerThread18RunDedicatedWorkerEv(%"class.base::internal::WorkerThread"*) local_unnamed_addr #5 align 2 {
  %2 = alloca i32, align 4
  notail call void @_ZN4base8internal12WorkerThread9RunWorkerEv(%"class.base::internal::WorkerThread"* %0)
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #7
  store i32 283, i32* %2, align 4
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal12WorkerThread9RunWorkerEv(%"class.base::internal::WorkerThread"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = alloca %"class.base::TimeTicks", align 8
  %8 = alloca %"class.base::TimeTicks", align 8
  %9 = alloca %"class.base::TimeTicks", align 8
  %10 = alloca %"class.base::ScopedClosureRunner", align 8
  %11 = alloca %"class.base::ScopedClosureRunner", align 8
  %12 = alloca %"class.absl::optional.53", align 8
  %13 = alloca %"class.base::internal::RegisteredTaskSource", align 8
  %14 = alloca %"class.base::internal::RegisteredTaskSource", align 8
  %15 = alloca %"class.base::internal::RegisteredTaskSource", align 8
  %16 = alloca %"class.base::internal::RegisteredTaskSource", align 8
  %17 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 8, i32 0), align 16
  %18 = and i8 %17, 25
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %35, label %20, !prof !2

20:                                               ; preds = %1
  %21 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #7
  %22 = bitcast %"class.base::TimeTicks"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #7
  %23 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %9, i64 0, i32 0, i32 0
  %24 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #7
  store i64 %24, i64* %23, align 8
  %25 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 8, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %21, %"class.base::TimeTicks"* nonnull dereferenceable(8) %9, %"class.base::trace_event::TraceArguments"* null, i32 8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #7
  %26 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 8, i32 0), align 16
  %27 = and i8 %26, 25
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %35, label %29, !prof !2

29:                                               ; preds = %20
  %30 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #7
  %31 = bitcast %"class.base::TimeTicks"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #7
  %32 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %8, i64 0, i32 0, i32 0
  %33 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #7
  store i64 %33, i64* %32, align 8
  %34 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 66, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 8, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %30, %"class.base::TimeTicks"* nonnull dereferenceable(8) %8, %"class.base::trace_event::TraceArguments"* null, i32 0) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #7
  br label %35

35:                                               ; preds = %1, %20, %29
  %36 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 12
  %37 = load %"class.base::WorkerThreadObserver"*, %"class.base::WorkerThreadObserver"** %36, align 8
  %38 = icmp eq %"class.base::WorkerThreadObserver"* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %35
  %40 = bitcast %"class.base::WorkerThreadObserver"* %37 to void (%"class.base::WorkerThreadObserver"*)***
  %41 = load void (%"class.base::WorkerThreadObserver"*)**, void (%"class.base::WorkerThreadObserver"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.base::WorkerThreadObserver"*)*, void (%"class.base::WorkerThreadObserver"*)** %41, i64 2
  %43 = load void (%"class.base::WorkerThreadObserver"*)*, void (%"class.base::WorkerThreadObserver"*)** %42, align 8
  call void %43(%"class.base::WorkerThreadObserver"* nonnull %37) #7
  br label %44

44:                                               ; preds = %35, %39
  %45 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %46 = load %"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread::Delegate"** %45, align 8
  %47 = bitcast %"class.base::internal::WorkerThread::Delegate"* %46 to void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread"*)***
  %48 = load void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread"*)**, void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread"*)*, void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread"*)** %48, i64 3
  %50 = load void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread"*)*, void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread"*)** %49, align 8
  call void %50(%"class.base::internal::WorkerThread::Delegate"* %46, %"class.base::internal::WorkerThread"* %0) #7
  %51 = call zeroext i1 @_ZN4base11HangWatcher31IsThreadPoolHangWatchingEnabledEv() #7
  br i1 %51, label %52, label %60

52:                                               ; preds = %44
  %53 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 11, i32 0
  %54 = load %"class.base::internal::TaskTracker"*, %"class.base::internal::TaskTracker"** %53, align 8
  %55 = call zeroext i1 @_ZNK4base8internal11TaskTracker18HasShutdownStartedEv(%"class.base::internal::TaskTracker"* %54) #7
  br i1 %55, label %60, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 13
  %58 = load i32, i32* %57, align 8
  %59 = icmp ne i32 %58, 0
  br label %60

60:                                               ; preds = %56, %52, %44
  %61 = phi i1 [ false, %44 ], [ %59, %56 ], [ true, %52 ]
  %62 = bitcast %"class.base::ScopedClosureRunner"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #7
  %63 = getelementptr inbounds %"class.base::ScopedClosureRunner", %"class.base::ScopedClosureRunner"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %63, align 8
  call void @_ZN4base19ScopedClosureRunnerC1Ev(%"class.base::ScopedClosureRunner"* nonnull %10) #7
  br i1 %61, label %64, label %67

64:                                               ; preds = %60
  %65 = bitcast %"class.base::ScopedClosureRunner"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #7
  call void @_ZN4base11HangWatcher14RegisterThreadENS0_10ThreadTypeE(%"class.base::ScopedClosureRunner"* nonnull sret %11, i32 2) #7
  %66 = call dereferenceable(8) %"class.base::ScopedClosureRunner"* @_ZN4base19ScopedClosureRunneraSEOS0_(%"class.base::ScopedClosureRunner"* nonnull %10, %"class.base::ScopedClosureRunner"* nonnull dereferenceable(8) %11) #7
  call void @_ZN4base19ScopedClosureRunnerD1Ev(%"class.base::ScopedClosureRunner"* nonnull %11) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #7
  br label %67

67:                                               ; preds = %60, %64
  %68 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 8, i32 0), align 16
  %69 = and i8 %68, 25
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %77, label %71, !prof !2

71:                                               ; preds = %67
  %72 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #7
  %73 = bitcast %"class.base::TimeTicks"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #7
  %74 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %7, i64 0, i32 0, i32 0
  %75 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #7
  store i64 %75, i64* %74, align 8
  %76 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 69, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 8, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %72, %"class.base::TimeTicks"* nonnull dereferenceable(8) %7, %"class.base::trace_event::TraceArguments"* null, i32 0) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #7
  br label %77

77:                                               ; preds = %67, %71
  %78 = load %"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread::Delegate"** %45, align 8
  %79 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 7
  %80 = bitcast %"class.base::internal::WorkerThread::Delegate"* %78 to void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::WaitableEvent"*)***
  %81 = load void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::WaitableEvent"*)**, void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::WaitableEvent"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::WaitableEvent"*)*, void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::WaitableEvent"*)** %81, i64 7
  %83 = load void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::WaitableEvent"*)*, void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::WaitableEvent"*)** %82, align 8
  call void %83(%"class.base::internal::WorkerThread::Delegate"* %78, %"class.base::WaitableEvent"* %79) #7
  %84 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 8, i32 0), align 16
  %85 = and i8 %84, 25
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %93, label %87, !prof !2

87:                                               ; preds = %77
  %88 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #7
  %89 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #7
  %90 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  %91 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #7
  store i64 %91, i64* %90, align 8
  %92 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 66, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 8, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %88, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* null, i32 0) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #7
  br label %93

93:                                               ; preds = %77, %87
  %94 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i8, i8* %94 acquire, align 1
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %97, label %199

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 11, i32 0
  %100 = getelementptr inbounds %"class.absl::optional.53", %"class.absl::optional.53"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %101 = getelementptr inbounds %"class.absl::optional.53", %"class.absl::optional.53"* %12, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %102 = bitcast i8* %101 to %"class.base::WatchHangsInScope"*
  %103 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 13
  %104 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 14
  %105 = bitcast %"class.base::internal::RegisteredTaskSource"* %13 to i8*
  %106 = getelementptr inbounds %"class.base::internal::RegisteredTaskSource", %"class.base::internal::RegisteredTaskSource"* %13, i64 0, i32 0, i32 0
  %107 = bitcast %"class.base::internal::RegisteredTaskSource"* %14 to i8*
  %108 = getelementptr inbounds %"class.absl::optional.53", %"class.absl::optional.53"* %12, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %109 = bitcast %"class.base::TimeTicks"* %5 to i8*
  %110 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %111 = bitcast %"class.base::TimeTicks"* %4 to i8*
  %112 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %113 = bitcast %"class.base::internal::RegisteredTaskSource"* %13 to i8*
  %114 = bitcast %"class.absl::optional.53"* %12 to i64*
  br label %115

115:                                              ; preds = %97, %187
  %116 = load atomic i8, i8* %98 acquire, align 1
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %118, label %199

118:                                              ; preds = %115
  %119 = load %"class.base::internal::TaskTracker"*, %"class.base::internal::TaskTracker"** %99, align 8
  %120 = call zeroext i1 @_ZNK4base8internal11TaskTracker18IsShutdownCompleteEv(%"class.base::internal::TaskTracker"* %119) #7
  br i1 %120, label %199, label %121

121:                                              ; preds = %118
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %100) #7
  store i64 -6148914691236517206, i64* %114, align 8
  store i8 0, i8* %100, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 24, i1 false) #7
  br i1 %61, label %122, label %124

122:                                              ; preds = %121
  %123 = load i64, i64* getelementptr inbounds (%"class.base::TimeDelta", %"class.base::TimeDelta"* @_ZN4base17WatchHangsInScope21kDefaultHangWatchTimeE, i64 0, i32 0), align 8
  call void @_ZN4base17WatchHangsInScopeC1ENS_9TimeDeltaE(%"class.base::WatchHangsInScope"* %102, i64 %123) #7
  store i8 1, i8* %100, align 8
  br label %124

124:                                              ; preds = %122, %121
  %125 = load %"class.base::internal::TaskTracker"*, %"class.base::internal::TaskTracker"** %99, align 8
  %126 = call zeroext i1 @_ZNK4base8internal11TaskTracker18HasShutdownStartedEv(%"class.base::internal::TaskTracker"* %125) #7
  br i1 %126, label %129, label %127

127:                                              ; preds = %124
  %128 = load i32, i32* %103, align 8
  br label %129

129:                                              ; preds = %124, %127
  %130 = phi i32 [ %128, %127 ], [ 1, %124 ]
  %131 = load i32, i32* %104, align 4
  %132 = icmp eq i32 %131, %130
  br i1 %132, label %134, label %133

133:                                              ; preds = %129
  call void @_ZN4base14PlatformThread24SetCurrentThreadPriorityENS_14ThreadPriorityE(i32 %130) #7
  store i32 %130, i32* %104, align 4
  br label %134

134:                                              ; preds = %129, %133
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %105) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %113, i8 -86, i64 16, i1 false)
  %135 = load %"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread::Delegate"** %45, align 8
  %136 = bitcast %"class.base::internal::WorkerThread::Delegate"* %135 to void (%"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread"*)***
  %137 = load void (%"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread"*)**, void (%"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread"*)*** %136, align 8
  %138 = getelementptr inbounds void (%"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread"*)*, void (%"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread"*)** %137, i64 4
  %139 = load void (%"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread"*)*, void (%"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread"*)** %138, align 8
  call void %139(%"class.base::internal::RegisteredTaskSource"* nonnull sret %13, %"class.base::internal::WorkerThread::Delegate"* %135, %"class.base::internal::WorkerThread"* %0) #7
  %140 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %106, align 8
  %141 = icmp eq %"class.base::internal::TaskSource"* %140, null
  br i1 %141, label %142, label %176

142:                                              ; preds = %134
  %143 = load atomic i8, i8* %94 acquire, align 1
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %145, label %194

145:                                              ; preds = %142
  %146 = load atomic i8, i8* %98 acquire, align 1
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %148, label %194

148:                                              ; preds = %145
  %149 = load %"class.base::internal::TaskTracker"*, %"class.base::internal::TaskTracker"** %99, align 8
  %150 = call zeroext i1 @_ZNK4base8internal11TaskTracker18IsShutdownCompleteEv(%"class.base::internal::TaskTracker"* %149) #7
  br i1 %150, label %194, label %151

151:                                              ; preds = %148
  %152 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 8, i32 0), align 16
  %153 = and i8 %152, 25
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %159, label %155, !prof !2

155:                                              ; preds = %151
  %156 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #7
  %157 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #7
  store i64 %157, i64* %110, align 8
  %158 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 69, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 8, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %156, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 0) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #7
  br label %159

159:                                              ; preds = %151, %155
  %160 = load i8, i8* %100, align 8, !range !3
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %163, label %162

162:                                              ; preds = %159
  call void @_ZN4base17WatchHangsInScopeD1Ev(%"class.base::WatchHangsInScope"* %108) #7
  store i8 0, i8* %100, align 8
  br label %163

163:                                              ; preds = %159, %162
  %164 = load %"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread::Delegate"** %45, align 8
  %165 = bitcast %"class.base::internal::WorkerThread::Delegate"* %164 to void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::WaitableEvent"*)***
  %166 = load void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::WaitableEvent"*)**, void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::WaitableEvent"*)*** %165, align 8
  %167 = getelementptr inbounds void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::WaitableEvent"*)*, void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::WaitableEvent"*)** %166, i64 7
  %168 = load void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::WaitableEvent"*)*, void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::WaitableEvent"*)** %167, align 8
  call void %168(%"class.base::internal::WorkerThread::Delegate"* %164, %"class.base::WaitableEvent"* %79) #7
  %169 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 8, i32 0), align 16
  %170 = and i8 %169, 25
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %190, label %172, !prof !2

172:                                              ; preds = %163
  %173 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #7
  %174 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #7
  store i64 %174, i64* %112, align 8
  %175 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 66, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 8, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %173, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 0) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #7
  br label %190

176:                                              ; preds = %134
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %107) #7
  %177 = load %"class.base::internal::TaskTracker"*, %"class.base::internal::TaskTracker"** %99, align 8
  call void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"* nonnull %15, %"class.base::internal::RegisteredTaskSource"* nonnull dereferenceable(16) %13) #7
  call void @_ZN4base8internal11TaskTracker17RunAndPopNextTaskENS0_20RegisteredTaskSourceE(%"class.base::internal::RegisteredTaskSource"* nonnull sret %14, %"class.base::internal::TaskTracker"* %177, %"class.base::internal::RegisteredTaskSource"* nonnull %15) #7
  %178 = call dereferenceable(16) %"class.base::internal::RegisteredTaskSource"* @_ZN4base8internal20RegisteredTaskSourceaSEOS1_(%"class.base::internal::RegisteredTaskSource"* nonnull %13, %"class.base::internal::RegisteredTaskSource"* nonnull dereferenceable(16) %14) #7
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %14) #7
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %15) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %107) #7
  %179 = load %"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread::Delegate"** %45, align 8
  call void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"* nonnull %16, %"class.base::internal::RegisteredTaskSource"* nonnull dereferenceable(16) %13) #7
  %180 = bitcast %"class.base::internal::WorkerThread::Delegate"* %179 to void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::RegisteredTaskSource"*)***
  %181 = load void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::RegisteredTaskSource"*)**, void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::RegisteredTaskSource"*)*** %180, align 8
  %182 = getelementptr inbounds void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::RegisteredTaskSource"*)*, void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::RegisteredTaskSource"*)** %181, i64 5
  %183 = load void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::RegisteredTaskSource"*)*, void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::RegisteredTaskSource"*)** %182, align 8
  call void %183(%"class.base::internal::WorkerThread::Delegate"* %179, %"class.base::internal::RegisteredTaskSource"* nonnull %16) #7
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %16) #7
  call void @_ZN4base13WaitableEvent5ResetEv(%"class.base::WaitableEvent"* %79) #7
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %105) #7
  %184 = load i8, i8* %100, align 8, !range !3
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %187, label %186

186:                                              ; preds = %176
  call void @_ZN4base17WatchHangsInScopeD1Ev(%"class.base::WatchHangsInScope"* %108) #7
  store i8 0, i8* %100, align 8
  br label %187

187:                                              ; preds = %186, %176, %193, %190
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %100) #7
  %188 = load atomic i8, i8* %94 acquire, align 1
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %115, label %199

190:                                              ; preds = %172, %163
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %105) #7
  %191 = load i8, i8* %100, align 8, !range !3
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %187, label %193

193:                                              ; preds = %190
  call void @_ZN4base17WatchHangsInScopeD1Ev(%"class.base::WatchHangsInScope"* %108) #7
  store i8 0, i8* %100, align 8
  br label %187

194:                                              ; preds = %142, %145, %148
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %105) #7
  %195 = load i8, i8* %100, align 8, !range !3
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %198, label %197

197:                                              ; preds = %194
  call void @_ZN4base17WatchHangsInScopeD1Ev(%"class.base::WatchHangsInScope"* %108) #7
  store i8 0, i8* %100, align 8
  br label %198

198:                                              ; preds = %194, %197
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %100) #7
  br label %199

199:                                              ; preds = %118, %115, %187, %93, %198
  %200 = load %"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread::Delegate"** %45, align 8
  %201 = bitcast %"class.base::internal::WorkerThread::Delegate"* %200 to void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread"*)***
  %202 = load void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread"*)**, void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread"*)*** %201, align 8
  %203 = getelementptr inbounds void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread"*)*, void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread"*)** %202, i64 8
  %204 = load void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread"*)*, void (%"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread"*)** %203, align 8
  call void %204(%"class.base::internal::WorkerThread::Delegate"* %200, %"class.base::internal::WorkerThread"* %0) #7
  %205 = load %"class.base::WorkerThreadObserver"*, %"class.base::WorkerThreadObserver"** %36, align 8
  %206 = icmp eq %"class.base::WorkerThreadObserver"* %205, null
  br i1 %206, label %212, label %207

207:                                              ; preds = %199
  %208 = bitcast %"class.base::WorkerThreadObserver"* %205 to void (%"class.base::WorkerThreadObserver"*)***
  %209 = load void (%"class.base::WorkerThreadObserver"*)**, void (%"class.base::WorkerThreadObserver"*)*** %208, align 8
  %210 = getelementptr inbounds void (%"class.base::WorkerThreadObserver"*)*, void (%"class.base::WorkerThreadObserver"*)** %209, i64 3
  %211 = load void (%"class.base::WorkerThreadObserver"*)*, void (%"class.base::WorkerThreadObserver"*)** %210, align 8
  call void %211(%"class.base::WorkerThreadObserver"* nonnull %205) #7
  br label %212

212:                                              ; preds = %199, %207
  %213 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %0, i64 0, i32 3
  %214 = bitcast %class.scoped_refptr.3* %213 to i64*
  %215 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %213, i64 0, i32 0
  %216 = load %"class.base::internal::WorkerThread"*, %"class.base::internal::WorkerThread"** %215, align 8
  store i64 0, i64* %214, align 8
  %217 = icmp eq %"class.base::internal::WorkerThread"* %216, null
  br i1 %217, label %230, label %218

218:                                              ; preds = %212
  %219 = getelementptr inbounds %"class.base::internal::WorkerThread", %"class.base::internal::WorkerThread"* %216, i64 0, i32 1
  %220 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %219, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = atomicrmw sub i32* %220, i32 1 acq_rel
  %222 = icmp eq i32 %221, 1
  br i1 %222, label %223, label %230

223:                                              ; preds = %218
  %224 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %219, i64 -2
  %225 = bitcast %"class.base::RefCountedThreadSafe.2"* %224 to %"class.base::internal::WorkerThread"*
  %226 = bitcast %"class.base::RefCountedThreadSafe.2"* %224 to void (%"class.base::internal::WorkerThread"*)***
  %227 = load void (%"class.base::internal::WorkerThread"*)**, void (%"class.base::internal::WorkerThread"*)*** %226, align 8
  %228 = getelementptr inbounds void (%"class.base::internal::WorkerThread"*)*, void (%"class.base::internal::WorkerThread"*)** %227, i64 3
  %229 = load void (%"class.base::internal::WorkerThread"*)*, void (%"class.base::internal::WorkerThread"*)** %228, align 8
  call void %229(%"class.base::internal::WorkerThread"* nonnull %225) #7
  br label %230

230:                                              ; preds = %212, %218, %223
  %231 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 8, i32 0), align 16
  %232 = and i8 %231, 25
  %233 = icmp eq i8 %232, 0
  br i1 %233, label %249, label %234, !prof !2

234:                                              ; preds = %230
  %235 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #7
  %236 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %236) #7
  %237 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %238 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #7
  store i64 %238, i64* %237, align 8
  %239 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 69, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 8, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %235, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %236) #7
  %240 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 8, i32 0), align 16
  %241 = and i8 %240, 25
  %242 = icmp eq i8 %241, 0
  br i1 %242, label %249, label %243, !prof !2

243:                                              ; preds = %234
  %244 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #7
  %245 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %245) #7
  %246 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %247 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #7
  store i64 %247, i64* %246, align 8
  %248 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 8, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %244, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %245) #7
  br label %249

249:                                              ; preds = %230, %234, %243
  call void @_ZN4base19ScopedClosureRunnerD1Ev(%"class.base::ScopedClosureRunner"* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #7
  ret void
}

declare void @_ZN4base5debug5AliasEPKv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base11HangWatcher31IsThreadPoolHangWatchingEnabledEv() local_unnamed_addr #2

declare void @_ZN4base19ScopedClosureRunnerC1Ev(%"class.base::ScopedClosureRunner"*) unnamed_addr #2

declare void @_ZN4base11HangWatcher14RegisterThreadENS0_10ThreadTypeE(%"class.base::ScopedClosureRunner"* sret, i32) local_unnamed_addr #2

declare dereferenceable(8) %"class.base::ScopedClosureRunner"* @_ZN4base19ScopedClosureRunneraSEOS0_(%"class.base::ScopedClosureRunner"*, %"class.base::ScopedClosureRunner"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base19ScopedClosureRunnerD1Ev(%"class.base::ScopedClosureRunner"*) unnamed_addr #3

declare void @_ZN4base8internal11TaskTracker17RunAndPopNextTaskENS0_20RegisteredTaskSourceE(%"class.base::internal::RegisteredTaskSource"* sret, %"class.base::internal::TaskTracker"*, %"class.base::internal::RegisteredTaskSource"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::RegisteredTaskSource"* dereferenceable(16)) unnamed_addr #3

declare dereferenceable(16) %"class.base::internal::RegisteredTaskSource"* @_ZN4base8internal20RegisteredTaskSourceaSEOS1_(%"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::RegisteredTaskSource"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"*) unnamed_addr #3

declare void @_ZN4base13WaitableEvent5ResetEv(%"class.base::WaitableEvent"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12WorkerThread8DelegateD2Ev(%"class.base::internal::WorkerThread::Delegate"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12WorkerThread8DelegateD0Ev(%"class.base::internal::WorkerThread::Delegate"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12WorkerThread8Delegate10OnMainExitEPS1_(%"class.base::internal::WorkerThread::Delegate"*, %"class.base::internal::WorkerThread"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare i64 @_ZN4base14PlatformThread8Delegate17GetRealtimePeriodEv(%"class.base::PlatformThread::Delegate"*) unnamed_addr #2

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #3

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN4base17WatchHangsInScopeD1Ev(%"class.base::WatchHangsInScope"*) unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #3

declare void @_ZN4base17WatchHangsInScopeC1ENS_9TimeDeltaE(%"class.base::WatchHangsInScope"*, i64) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
