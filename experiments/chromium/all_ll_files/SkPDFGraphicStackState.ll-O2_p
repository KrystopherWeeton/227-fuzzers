; ModuleID = '../../third_party/skia/src/pdf/SkPDFGraphicStackState.cpp'
source_filename = "../../third_party/skia/src/pdf/SkPDFGraphicStackState.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkPDFGraphicStackState = type { [3 x %"struct.SkPDFGraphicStackState::Entry"], i32, %class.SkDynamicMemoryWStream* }
%"struct.SkPDFGraphicStackState::Entry" = type { %class.SkMatrix, i32, %struct.SkRGBA4f, float, i32, i32 }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRGBA4f = type { float, float, float, float }
%class.SkDynamicMemoryWStream = type { %class.SkWStream, %"struct.SkDynamicMemoryWStream::Block"*, %"struct.SkDynamicMemoryWStream::Block"*, i64 }
%class.SkWStream = type { i32 (...)** }
%"struct.SkDynamicMemoryWStream::Block" = type opaque
%class.SkClipStack = type <{ %class.SkDeque, i32, %struct.SkRect, [4 x i8] }>
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%struct.SkRect = type { float, float, float, float }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.SkClipStack::Iter" = type { %class.SkClipStack*, %"class.SkDeque::Iter" }
%"class.SkDeque::Iter" = type { %"struct.SkDeque::Block"*, i8*, i64 }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.1 = type { i8*, i32, i32 }
%class.SkTDArray.2 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.8 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.8 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%"class.SkClipStack::Element" = type { %class.SkTLazy, %class.SkRRect, %class.sk_sp.13, i32, i32, i32, i8, i32, %struct.SkRect, i8, i32, %class.GrProxyProvider*, %class.SkTArray }
%class.SkTLazy = type { [16 x i8], %class.SkPath* }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%class.sk_sp.13 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.GrProxyProvider = type opaque
%class.SkTArray = type { %class.GrUniqueKey*, i64 }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.14, i8* }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.sk_sp.14 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.15, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.15 = type { %"struct.std::__1::atomic" }

@.str = private unnamed_addr constant [4 x i8] c"RG \00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"rg\0A\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c" Tz\0A\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"q\0A\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"Q\0A\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"W* n\0A\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"W n\0A\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c" \00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22SkPDFGraphicStackState10updateClipEPK11SkClipStackRK7SkIRect(%struct.SkPDFGraphicStackState*, %class.SkClipStack*, %struct.SkIRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkMatrix, align 8
  %5 = alloca %"class.SkClipStack::Iter", align 8
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = alloca %"class.SkClipStack::Iter", align 8
  %11 = alloca %"class.SkClipStack::Iter", align 8
  %12 = alloca %struct.SkRect, align 4
  %13 = alloca %class.SkPath, align 8
  %14 = alloca %class.SkPath, align 8
  %15 = alloca { <2 x float>, <2 x float> }, align 8
  %16 = alloca %struct.SkRect, align 8
  %17 = alloca %class.SkPath, align 8
  %18 = alloca %class.SkPath, align 8
  %19 = icmp eq %class.SkClipStack* %1, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %3
  %21 = tail call i32 @_ZNK11SkClipStack15getTopmostGenIDEv(%class.SkClipStack* nonnull %1) #5
  br label %22

22:                                               ; preds = %3, %20
  %23 = phi i32 [ %21, %20 ], [ 2, %3 ]
  %24 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %26, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %23, %28
  br i1 %29, label %353, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 2
  %32 = bitcast %class.SkDynamicMemoryWStream** %31 to %class.SkWStream**
  %33 = bitcast %class.SkMatrix* %4 to i8*
  br label %34

34:                                               ; preds = %30, %37
  %35 = phi i32 [ %25, %30 ], [ %57, %37 ]
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %37, label %62

37:                                               ; preds = %34
  %38 = load %class.SkWStream*, %class.SkWStream** %32, align 8
  %39 = bitcast %class.SkWStream* %38 to i1 (%class.SkWStream*, i8*, i64)***
  %40 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %39, align 8
  %41 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %40, i64 2
  %42 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %41, align 8
  %43 = tail call zeroext i1 %42(%class.SkWStream* %38, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i64 2) #5
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %33)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 40, i1 false)
  %44 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #5
  %45 = bitcast %class.SkMatrix* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 4 %45, i64 40, i1 false) #5
  %46 = load i32, i32* %24, align 8
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %47
  %49 = bitcast %"struct.SkPDFGraphicStackState::Entry"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* nonnull align 8 %33, i64 40, i1 false) #5
  %50 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %47, i32 1
  store i32 2, i32* %50, align 8
  %51 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %47, i32 2, i32 0
  %52 = bitcast float* %51 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %52, align 4
  %53 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %47, i32 3
  store float 1.000000e+00, float* %53, align 4
  %54 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %47, i32 4
  store i32 -1, i32* %54, align 8
  %55 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %47, i32 5
  store i32 -1, i32* %55, align 4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %33)
  %56 = load i32, i32* %24, align 8
  %57 = add nsw i32 %56, -1
  store i32 %57, i32* %24, align 8
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %58, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %23, %60
  br i1 %61, label %353, label %34

62:                                               ; preds = %34
  %63 = icmp eq i32 %23, 2
  br i1 %63, label %353, label %64

64:                                               ; preds = %62
  %65 = load %class.SkWStream*, %class.SkWStream** %32, align 8
  %66 = bitcast %class.SkWStream* %65 to i1 (%class.SkWStream*, i8*, i64)***
  %67 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %66, align 8
  %68 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %67, i64 2
  %69 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %68, align 8
  %70 = tail call zeroext i1 %69(%class.SkWStream* %65, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2) #5
  %71 = load i32, i32* %24, align 8
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %24, align 8
  %73 = sext i32 %71 to i64
  %74 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %73
  %75 = sext i32 %72 to i64
  %76 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %75
  %77 = bitcast %"struct.SkPDFGraphicStackState::Entry"* %76 to i8*
  %78 = bitcast %"struct.SkPDFGraphicStackState::Entry"* %74 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 4 %78, i64 72, i1 false) #5
  %79 = load i32, i32* %24, align 8
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %80, i32 1
  store i32 %23, i32* %81, align 4
  %82 = load %class.SkWStream*, %class.SkWStream** %32, align 8
  %83 = bitcast { <2 x float>, <2 x float> }* %15 to %struct.SkRect*
  %84 = bitcast { <2 x float>, <2 x float> }* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #5
  %85 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %15, i64 0, i32 1, i64 0
  %86 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp sgt i32 %87, -2147483646
  %89 = select i1 %88, i32 %87, i32 -2147483646
  %90 = add nsw i32 %89, -1
  %91 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = sext i32 %92 to i64
  %94 = icmp sgt i64 %93, -2147483646
  %95 = select i1 %94, i64 %93, i64 -2147483646
  %96 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = sext i32 %97 to i64
  %99 = icmp slt i64 %98, 2147483646
  %100 = select i1 %99, i64 %98, i64 2147483646
  %101 = icmp sgt i64 %100, -2147483648
  %102 = select i1 %101, i64 %100, i64 -2147483648
  %103 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %104 = load i32, i32* %103, align 4
  %105 = sext i32 %104 to i64
  %106 = icmp slt i64 %105, 2147483646
  %107 = select i1 %106, i64 %105, i64 2147483646
  %108 = icmp sgt i64 %107, -2147483648
  %109 = select i1 %108, i64 %107, i64 -2147483648
  %110 = shl nsw i64 %95, 32
  %111 = add i64 %110, -4294967296
  %112 = shl nsw i64 %109, 32
  %113 = add i64 %112, 4294967296
  %114 = lshr exact i64 %111, 32
  %115 = trunc i64 %114 to i32
  %116 = sitofp i32 %90 to float
  %117 = insertelement <2 x float> undef, float %116, i32 0
  %118 = sitofp i32 %115 to float
  %119 = insertelement <2 x float> %117, float %118, i32 1
  %120 = trunc i64 %102 to i32
  %121 = add nsw i32 %120, 1
  %122 = sitofp i32 %121 to float
  %123 = insertelement <2 x float> undef, float %122, i32 0
  %124 = lshr exact i64 %113, 32
  %125 = trunc i64 %124 to i32
  %126 = sitofp i32 %125 to float
  %127 = insertelement <2 x float> %123, float %126, i32 1
  %128 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %15, i64 0, i32 0
  store <2 x float> %119, <2 x float>* %128, align 8
  %129 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %15, i64 0, i32 1
  store <2 x float> %127, <2 x float>* %129, align 8
  %130 = bitcast %struct.SkRect* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %130) #5
  %131 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %16, i64 0, i32 2
  %132 = bitcast float* %85 to <2 x float>*
  %133 = bitcast %"class.SkClipStack::Iter"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %130, i8 -1, i64 16, i1 false) #5
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %133) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 -86, i64 32, i1 false) #5
  call void @_ZN11SkClipStack4IterC1ERKS_NS0_9IterStartE(%"class.SkClipStack::Iter"* nonnull %10, %class.SkClipStack* dereferenceable(80) %1, i32 0) #5
  %134 = call %"class.SkClipStack::Element"* @_ZN11SkClipStack4Iter4nextEv(%"class.SkClipStack::Iter"* nonnull %10) #5
  %135 = icmp eq %"class.SkClipStack::Element"* %134, null
  br i1 %135, label %226, label %136

136:                                              ; preds = %64
  %137 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  %138 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  %139 = bitcast { <2 x float>, <2 x float> }* %8 to %struct.SkRect*
  %140 = bitcast { <2 x float>, <2 x float> }* %9 to %struct.SkRect*
  %141 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  %142 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  %143 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  %144 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  %145 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1, i64 0
  %146 = bitcast float* %145 to <2 x float>*
  %147 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  %148 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  %149 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRect*
  %150 = bitcast { <2 x float>, <2 x float> }* %7 to %struct.SkRect*
  %151 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %152 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %153 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  %154 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  %155 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1, i64 0
  %156 = bitcast float* %155 to <2 x float>*
  br label %157

157:                                              ; preds = %219, %136
  %158 = phi %"class.SkClipStack::Element"* [ %134, %136 ], [ %224, %219 ]
  %159 = phi <2 x float> [ %127, %136 ], [ %223, %219 ]
  %160 = phi <2 x float> [ %119, %136 ], [ %222, %219 ]
  %161 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %158, i64 0, i32 5
  %162 = load i32, i32* %161, align 8
  switch i32 %162, label %236 [
    i32 0, label %170
    i32 1, label %163
  ]

163:                                              ; preds = %157
  %164 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %158, i64 0, i32 1, i32 0
  %165 = bitcast %struct.SkRect* %164 to <2 x float>*
  %166 = load <2 x float>, <2 x float>* %165, align 4
  %167 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %158, i64 0, i32 1, i32 0, i32 2
  %168 = bitcast float* %167 to <2 x float>*
  %169 = load <2 x float>, <2 x float>* %168, align 4
  br label %170

170:                                              ; preds = %163, %157
  %171 = phi <2 x float> [ %166, %163 ], [ zeroinitializer, %157 ]
  %172 = phi <2 x float> [ %169, %163 ], [ zeroinitializer, %157 ]
  %173 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %158, i64 0, i32 4
  %174 = load i32, i32* %173, align 4
  switch i32 %174, label %236 [
    i32 5, label %175
    i32 1, label %198
  ]

175:                                              ; preds = %170
  %176 = load <2 x float>, <2 x float>* %128, align 8
  %177 = load <2 x float>, <2 x float>* %132, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %147) #5
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %148) #5
  store <2 x float> %176, <2 x float>* %151, align 8
  store <2 x float> %177, <2 x float>* %152, align 8
  store <2 x float> %171, <2 x float>* %153, align 8
  store <2 x float> %172, <2 x float>* %154, align 8
  %178 = extractelement <2 x float> %176, i32 0
  %179 = extractelement <2 x float> %177, i32 0
  %180 = fcmp olt float %178, %179
  br i1 %180, label %181, label %219

181:                                              ; preds = %175
  %182 = extractelement <2 x float> %172, i32 1
  %183 = extractelement <2 x float> %171, i32 1
  %184 = extractelement <2 x float> %172, i32 0
  %185 = extractelement <2 x float> %171, i32 0
  %186 = extractelement <2 x float> %177, i32 1
  %187 = extractelement <2 x float> %176, i32 1
  %188 = fcmp uge float %187, %186
  %189 = fcmp uge float %185, %184
  %190 = or i1 %189, %188
  %191 = fcmp uge float %183, %182
  %192 = or i1 %191, %190
  br i1 %192, label %219, label %193

193:                                              ; preds = %181
  %194 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* nonnull %149, %struct.SkRect* nonnull dereferenceable(16) %150) #5
  br i1 %194, label %195, label %219

195:                                              ; preds = %193
  %196 = load <2 x float>, <2 x float>* %151, align 8
  %197 = load <2 x float>, <2 x float>* %156, align 8
  br label %219

198:                                              ; preds = %170
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %137) #5
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %138) #5
  store <2 x float> %160, <2 x float>* %141, align 8
  store <2 x float> %159, <2 x float>* %142, align 8
  store <2 x float> %171, <2 x float>* %143, align 8
  store <2 x float> %172, <2 x float>* %144, align 8
  %199 = extractelement <2 x float> %160, i32 0
  %200 = extractelement <2 x float> %159, i32 0
  %201 = fcmp olt float %199, %200
  br i1 %201, label %202, label %219

202:                                              ; preds = %198
  %203 = extractelement <2 x float> %172, i32 1
  %204 = extractelement <2 x float> %171, i32 1
  %205 = extractelement <2 x float> %172, i32 0
  %206 = extractelement <2 x float> %171, i32 0
  %207 = extractelement <2 x float> %159, i32 1
  %208 = extractelement <2 x float> %160, i32 1
  %209 = fcmp uge float %208, %207
  %210 = fcmp uge float %206, %205
  %211 = or i1 %209, %210
  %212 = fcmp uge float %204, %203
  %213 = or i1 %212, %211
  br i1 %213, label %219, label %214

214:                                              ; preds = %202
  %215 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* nonnull %139, %struct.SkRect* nonnull dereferenceable(16) %140) #5
  br i1 %215, label %216, label %219

216:                                              ; preds = %214
  %217 = load <2 x float>, <2 x float>* %141, align 8
  %218 = load <2 x float>, <2 x float>* %146, align 8
  br label %219

219:                                              ; preds = %198, %202, %214, %216, %175, %181, %193, %195
  %220 = phi i8* [ %147, %195 ], [ %147, %193 ], [ %147, %181 ], [ %147, %175 ], [ %137, %216 ], [ %137, %214 ], [ %137, %202 ], [ %137, %198 ]
  %221 = phi i8* [ %148, %195 ], [ %148, %193 ], [ %148, %181 ], [ %148, %175 ], [ %138, %216 ], [ %138, %214 ], [ %138, %202 ], [ %138, %198 ]
  %222 = phi <2 x float> [ %196, %195 ], [ zeroinitializer, %193 ], [ zeroinitializer, %181 ], [ zeroinitializer, %175 ], [ %217, %216 ], [ zeroinitializer, %214 ], [ zeroinitializer, %202 ], [ zeroinitializer, %198 ]
  %223 = phi <2 x float> [ %197, %195 ], [ zeroinitializer, %193 ], [ zeroinitializer, %181 ], [ zeroinitializer, %175 ], [ %218, %216 ], [ zeroinitializer, %214 ], [ zeroinitializer, %202 ], [ zeroinitializer, %198 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %220) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %221) #5
  %224 = call %"class.SkClipStack::Element"* @_ZN11SkClipStack4Iter4nextEv(%"class.SkClipStack::Iter"* nonnull %10) #5
  %225 = icmp eq %"class.SkClipStack::Element"* %224, null
  br i1 %225, label %226, label %157

226:                                              ; preds = %219, %64
  %227 = phi <2 x float> [ %119, %64 ], [ %222, %219 ]
  %228 = phi <2 x float> [ %127, %64 ], [ %223, %219 ]
  %229 = bitcast %struct.SkRect* %16 to <2 x float>*
  store <2 x float> %227, <2 x float>* %229, align 8
  %230 = bitcast float* %131 to <2 x float>*
  store <2 x float> %228, <2 x float>* %230, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %133) #5
  call void @_ZN10SkPDFUtils15AppendRectangleERK6SkRectP9SkWStream(%struct.SkRect* nonnull dereferenceable(16) %16, %class.SkWStream* %82) #5
  %231 = bitcast %class.SkWStream* %82 to i1 (%class.SkWStream*, i8*, i64)***
  %232 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %231, align 8
  %233 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %232, i64 2
  %234 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %233, align 8
  %235 = call zeroext i1 %234(%class.SkWStream* %82, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i64 5) #5
  br label %352

236:                                              ; preds = %170, %157
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %133) #5
  %237 = bitcast %"class.SkClipStack::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %237) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %237, i8 -86, i64 32, i1 false) #5
  call void @_ZN11SkClipStack4IterC1ERKS_NS0_9IterStartE(%"class.SkClipStack::Iter"* nonnull %5, %class.SkClipStack* dereferenceable(80) %1, i32 0) #5
  br label %238

238:                                              ; preds = %241, %236
  %239 = call %"class.SkClipStack::Element"* @_ZN11SkClipStack4Iter4nextEv(%"class.SkClipStack::Iter"* nonnull %5) #5
  %240 = icmp eq %"class.SkClipStack::Element"* %239, null
  br i1 %240, label %263, label %241

241:                                              ; preds = %238
  %242 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %239, i64 0, i32 4
  %243 = load i32, i32* %242, align 4
  %244 = icmp ult i32 %243, 2
  br i1 %244, label %238, label %245

245:                                              ; preds = %241
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %237) #5
  %246 = bitcast %class.SkPath* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %246) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %246, i8 -86, i64 16, i1 false) #5
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %17) #5
  call void @_Z18SkClipStack_AsPathRK11SkClipStackP6SkPath(%class.SkClipStack* dereferenceable(80) %1, %class.SkPath* nonnull %17) #5
  %247 = bitcast %class.SkPath* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %247) #5
  call void @_ZN6SkPath4RectERK6SkRect15SkPathDirectionj(%class.SkPath* nonnull sret %18, %struct.SkRect* nonnull dereferenceable(16) %83, i32 0, i32 0) #5
  %248 = call zeroext i1 @_Z2OpRK6SkPathS1_8SkPathOpPS_(%class.SkPath* nonnull dereferenceable(16) %17, %class.SkPath* nonnull dereferenceable(16) %18, i32 1, %class.SkPath* nonnull %17) #5
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %18) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %247) #5
  br i1 %248, label %249, label %262

249:                                              ; preds = %245
  %250 = getelementptr inbounds %class.SkPath, %class.SkPath* %17, i64 0, i32 4
  call void @_ZN10SkPDFUtils8EmitPathERK6SkPathN7SkPaint5StyleEbP9SkWStreamf(%class.SkPath* nonnull dereferenceable(16) %17, i8 zeroext 0, i1 zeroext true, %class.SkWStream* %82, float 2.500000e-01) #5
  %251 = load i8, i8* %250, align 2
  %252 = and i8 %251, 3
  %253 = icmp eq i8 %252, 1
  %254 = bitcast %class.SkWStream* %82 to i1 (%class.SkWStream*, i8*, i64)***
  %255 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %254, align 8
  %256 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %255, i64 2
  %257 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %256, align 8
  br i1 %253, label %258, label %260

258:                                              ; preds = %249
  %259 = call zeroext i1 %257(%class.SkWStream* %82, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i64 5) #5
  br label %262

260:                                              ; preds = %249
  %261 = call zeroext i1 %257(%class.SkWStream* %82, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i64 4) #5
  br label %262

262:                                              ; preds = %260, %258, %245
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %17) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %246) #5
  br label %352

263:                                              ; preds = %238
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %237) #5
  %264 = bitcast %"class.SkClipStack::Iter"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %264) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %264, i8 -86, i64 32, i1 false) #5
  call void @_ZN11SkClipStack4IterC1ERKS_NS0_9IterStartE(%"class.SkClipStack::Iter"* nonnull %11, %class.SkClipStack* dereferenceable(80) %1, i32 0) #5
  %265 = bitcast %struct.SkRect* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %265) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %265, i8* nonnull align 8 %84, i64 16, i1 false) #5
  %266 = bitcast %class.SkPath* %13 to i8*
  %267 = getelementptr inbounds %class.SkPath, %class.SkPath* %13, i64 0, i32 0, i32 0
  %268 = getelementptr inbounds %class.SkPath, %class.SkPath* %13, i64 0, i32 4
  %269 = bitcast %class.SkPath* %14 to i8*
  %270 = bitcast %class.SkWStream* %82 to i1 (%class.SkWStream*, i8*, i64)***
  br label %271

271:                                              ; preds = %348, %263
  %272 = call %"class.SkClipStack::Element"* @_ZN11SkClipStack4Iter4nextEv(%"class.SkClipStack::Iter"* nonnull %11) #5
  %273 = icmp eq %"class.SkClipStack::Element"* %272, null
  br i1 %273, label %351, label %274

274:                                              ; preds = %271
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %266) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %266, i8 -86, i64 16, i1 false) #5
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %13) #5
  call void @_ZNK11SkClipStack7Element17asDeviceSpacePathEP6SkPath(%"class.SkClipStack::Element"* nonnull %272, %class.SkPath* nonnull %13) #5
  %275 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %272, i64 0, i32 4
  %276 = load i32, i32* %275, align 4
  switch i32 %276, label %348 [
    i32 0, label %315
    i32 1, label %277
  ]

277:                                              ; preds = %274
  %278 = load i8, i8* %268, align 2
  %279 = and i8 %278, 2
  %280 = icmp eq i8 %279, 0
  br i1 %280, label %281, label %315

281:                                              ; preds = %277
  %282 = load %class.SkPathRef*, %class.SkPathRef** %267, align 8
  %283 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %282, i64 0, i32 9
  %284 = load i8, i8* %283, align 8
  %285 = icmp eq i8 %284, 0
  br i1 %285, label %295, label %286

286:                                              ; preds = %281
  %287 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %282, i64 0, i32 1
  %288 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %282, i64 0, i32 3, i32 0
  %289 = load %struct.SkPoint*, %struct.SkPoint** %288, align 8
  %290 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %282, i64 0, i32 3, i32 2
  %291 = load i32, i32* %290, align 4
  %292 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %287, %struct.SkPoint* %289, i32 %291) #5
  %293 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %282, i64 0, i32 10
  %294 = zext i1 %292 to i8
  store i8 %294, i8* %293, align 1
  store i8 0, i8* %283, align 8
  br label %295

295:                                              ; preds = %286, %281
  %296 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %282, i64 0, i32 1, i32 0
  %297 = load float, float* %296, align 4
  %298 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %282, i64 0, i32 1, i32 2
  %299 = load float, float* %298, align 4
  %300 = fcmp olt float %297, %299
  br i1 %300, label %301, label %315

301:                                              ; preds = %295
  %302 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %282, i64 0, i32 1, i32 1
  %303 = load float, float* %302, align 4
  %304 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %282, i64 0, i32 1, i32 3
  %305 = load float, float* %304, align 4
  %306 = fcmp uge float %303, %305
  %307 = fcmp ult float %297, -3.000000e+04
  %308 = or i1 %307, %306
  br i1 %308, label %315, label %309

309:                                              ; preds = %301
  %310 = fcmp oge float %303, -3.000000e+04
  %311 = fcmp ole float %299, 3.000000e+04
  %312 = fcmp ole float %305, 3.000000e+04
  %313 = and i1 %311, %310
  %314 = and i1 %312, %313
  br i1 %314, label %318, label %315

315:                                              ; preds = %309, %301, %295, %277, %274
  %316 = phi i32 [ 1, %309 ], [ 1, %277 ], [ %276, %274 ], [ 1, %301 ], [ 1, %295 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %269) #5
  call void @_ZN6SkPath4RectERK6SkRect15SkPathDirectionj(%class.SkPath* nonnull sret %14, %struct.SkRect* nonnull dereferenceable(16) %12, i32 0, i32 0) #5
  %317 = call zeroext i1 @_Z2OpRK6SkPathS1_8SkPathOpPS_(%class.SkPath* nonnull dereferenceable(16) %14, %class.SkPath* nonnull dereferenceable(16) %13, i32 %316, %class.SkPath* nonnull %13) #5
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %14) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %269) #5
  br label %318

318:                                              ; preds = %315, %309
  call void @_ZN10SkPDFUtils8EmitPathERK6SkPathN7SkPaint5StyleEbP9SkWStreamf(%class.SkPath* nonnull dereferenceable(16) %13, i8 zeroext 0, i1 zeroext true, %class.SkWStream* %82, float 2.500000e-01) #5
  %319 = load i8, i8* %268, align 2
  %320 = and i8 %319, 3
  %321 = icmp eq i8 %320, 1
  %322 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %270, align 8
  %323 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %322, i64 2
  %324 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %323, align 8
  br i1 %321, label %325, label %327

325:                                              ; preds = %318
  %326 = call zeroext i1 %324(%class.SkWStream* %82, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i64 5) #5
  br label %329

327:                                              ; preds = %318
  %328 = call zeroext i1 %324(%class.SkWStream* %82, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i64 4) #5
  br label %329

329:                                              ; preds = %327, %325
  %330 = load %class.SkPathRef*, %class.SkPathRef** %267, align 8
  %331 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %330, i64 0, i32 9
  %332 = load i8, i8* %331, align 8
  %333 = icmp eq i8 %332, 0
  br i1 %333, label %343, label %334

334:                                              ; preds = %329
  %335 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %330, i64 0, i32 1
  %336 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %330, i64 0, i32 3, i32 0
  %337 = load %struct.SkPoint*, %struct.SkPoint** %336, align 8
  %338 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %330, i64 0, i32 3, i32 2
  %339 = load i32, i32* %338, align 4
  %340 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %335, %struct.SkPoint* %337, i32 %339) #5
  %341 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %330, i64 0, i32 10
  %342 = zext i1 %340 to i8
  store i8 %342, i8* %341, align 1
  store i8 0, i8* %331, align 8
  br label %343

343:                                              ; preds = %334, %329
  %344 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %330, i64 0, i32 1
  %345 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* nonnull %12, %struct.SkRect* dereferenceable(16) %344) #5
  %346 = xor i1 %345, true
  %347 = zext i1 %346 to i32
  br label %348

348:                                              ; preds = %343, %274
  %349 = phi i32 [ 1, %274 ], [ %347, %343 ]
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %13) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %266) #5
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %271, label %351

351:                                              ; preds = %348, %271
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %265) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %264) #5
  br label %352

352:                                              ; preds = %226, %262, %351
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %130) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #5
  br label %353

353:                                              ; preds = %37, %352, %62, %22
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZNK11SkClipStack15getTopmostGenIDEv(%class.SkClipStack*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22SkPDFGraphicStackState3popEv(%struct.SkPDFGraphicStackState* nocapture) local_unnamed_addr #3 align 2 {
  %2 = alloca %class.SkMatrix, align 8
  %3 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 2
  %4 = bitcast %class.SkDynamicMemoryWStream** %3 to %class.SkWStream**
  %5 = load %class.SkWStream*, %class.SkWStream** %4, align 8
  %6 = bitcast %class.SkWStream* %5 to i1 (%class.SkWStream*, i8*, i64)***
  %7 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %6, align 8
  %8 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %7, i64 2
  %9 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %8, align 8
  %10 = tail call zeroext i1 %9(%class.SkWStream* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i64 2) #5
  %11 = bitcast %class.SkMatrix* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 40, i1 false)
  %12 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #5
  %13 = bitcast %class.SkMatrix* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 4 %13, i64 40, i1 false)
  %14 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %16
  %18 = bitcast %"struct.SkPDFGraphicStackState::Entry"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* nonnull align 8 %11, i64 40, i1 false)
  %19 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %16, i32 1
  store i32 2, i32* %19, align 8
  %20 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %16, i32 2, i32 0
  %21 = bitcast float* %20 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %21, align 4
  %22 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %16, i32 3
  store float 1.000000e+00, float* %22, align 4
  %23 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %16, i32 4
  store i32 -1, i32* %23, align 8
  %24 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %16, i32 5
  store i32 -1, i32* %24, align 4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11)
  %25 = load i32, i32* %14, align 8
  %26 = add nsw i32 %25, -1
  store i32 %26, i32* %14, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22SkPDFGraphicStackState4pushEv(%struct.SkPDFGraphicStackState* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 2
  %3 = bitcast %class.SkDynamicMemoryWStream** %2 to %class.SkWStream**
  %4 = load %class.SkWStream*, %class.SkWStream** %3, align 8
  %5 = bitcast %class.SkWStream* %4 to i1 (%class.SkWStream*, i8*, i64)***
  %6 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %6, i64 2
  %8 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.SkWStream* %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2) #5
  %10 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 8
  %13 = sext i32 %11 to i64
  %14 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %13
  %15 = sext i32 %12 to i64
  %16 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %15
  %17 = bitcast %"struct.SkPDFGraphicStackState::Entry"* %16 to i8*
  %18 = bitcast %"struct.SkPDFGraphicStackState::Entry"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 4 %18, i64 72, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22SkPDFGraphicStackState12updateMatrixERK8SkMatrix(%struct.SkPDFGraphicStackState*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #3 align 2 {
  %3 = alloca %class.SkMatrix, align 8
  %4 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %6, i32 0
  %8 = tail call zeroext i1 @_ZeqRK8SkMatrixS1_(%class.SkMatrix* dereferenceable(40) %1, %class.SkMatrix* dereferenceable(40) %7) #5
  br i1 %8, label %83, label %9

9:                                                ; preds = %2
  %10 = load i32, i32* %4, align 8
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = trunc i32 %13 to i8
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %11, i32 0
  %18 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %17) #5
  %19 = zext i8 %18 to i32
  store i32 %19, i32* %12, align 4
  br label %20

20:                                               ; preds = %9, %16
  %21 = phi i32 [ %19, %16 ], [ %13, %9 ]
  %22 = and i32 %21, 15
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %48, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 2
  %26 = bitcast %class.SkDynamicMemoryWStream** %25 to %class.SkWStream**
  %27 = load %class.SkWStream*, %class.SkWStream** %26, align 8
  %28 = bitcast %class.SkWStream* %27 to i1 (%class.SkWStream*, i8*, i64)***
  %29 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %28, align 8
  %30 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %29, i64 2
  %31 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %30, align 8
  %32 = tail call zeroext i1 %31(%class.SkWStream* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i64 2) #5
  %33 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %33)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 40, i1 false)
  %34 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #5
  %35 = bitcast %class.SkMatrix* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 4 %35, i64 40, i1 false) #5
  %36 = load i32, i32* %4, align 8
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %37
  %39 = bitcast %"struct.SkPDFGraphicStackState::Entry"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* nonnull align 8 %33, i64 40, i1 false) #5
  %40 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %37, i32 1
  store i32 2, i32* %40, align 8
  %41 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %37, i32 2, i32 0
  %42 = bitcast float* %41 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %42, align 4
  %43 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %37, i32 3
  store float 1.000000e+00, float* %43, align 4
  %44 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %37, i32 4
  store i32 -1, i32* %44, align 8
  %45 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %37, i32 5
  store i32 -1, i32* %45, align 4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %33)
  %46 = load i32, i32* %4, align 8
  %47 = add nsw i32 %46, -1
  store i32 %47, i32* %4, align 8
  br label %48

48:                                               ; preds = %20, %24
  %49 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = trunc i32 %50 to i8
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %48
  %54 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %1) #5
  %55 = zext i8 %54 to i32
  store i32 %55, i32* %49, align 4
  br label %56

56:                                               ; preds = %48, %53
  %57 = phi i32 [ %55, %53 ], [ %50, %48 ]
  %58 = and i32 %57, 15
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %83, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 2
  %62 = bitcast %class.SkDynamicMemoryWStream** %61 to %class.SkWStream**
  %63 = load %class.SkWStream*, %class.SkWStream** %62, align 8
  %64 = bitcast %class.SkWStream* %63 to i1 (%class.SkWStream*, i8*, i64)***
  %65 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %64, align 8
  %66 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %65, i64 2
  %67 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %66, align 8
  %68 = tail call zeroext i1 %67(%class.SkWStream* %63, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2) #5
  %69 = load i32, i32* %4, align 8
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* %4, align 8
  %71 = sext i32 %69 to i64
  %72 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %71
  %73 = sext i32 %70 to i64
  %74 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %73
  %75 = bitcast %"struct.SkPDFGraphicStackState::Entry"* %74 to i8*
  %76 = bitcast %"struct.SkPDFGraphicStackState::Entry"* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 4 %76, i64 72, i1 false) #5
  %77 = load %class.SkWStream*, %class.SkWStream** %62, align 8
  tail call void @_ZN10SkPDFUtils15AppendTransformERK8SkMatrixP9SkWStream(%class.SkMatrix* dereferenceable(40) %1, %class.SkWStream* %77) #5
  %78 = load i32, i32* %4, align 8
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %79
  %81 = bitcast %"struct.SkPDFGraphicStackState::Entry"* %80 to i8*
  %82 = bitcast %class.SkMatrix* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %81, i8* align 4 %82, i64 40, i1 false)
  br label %83

83:                                               ; preds = %56, %2, %60
  ret void
}

declare zeroext i1 @_ZeqRK8SkMatrixS1_(%class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZN10SkPDFUtils15AppendTransformERK8SkMatrixP9SkWStream(%class.SkMatrix* dereferenceable(40), %class.SkWStream*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22SkPDFGraphicStackState18updateDrawingStateERKNS_5EntryE(%struct.SkPDFGraphicStackState*, %"struct.SkPDFGraphicStackState::Entry"* nocapture readonly dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca [6 x i8], align 1
  %4 = alloca [6 x i8], align 1
  %5 = alloca [6 x i8], align 1
  %6 = alloca [49 x i8], align 16
  %7 = getelementptr inbounds %"struct.SkPDFGraphicStackState::Entry", %"struct.SkPDFGraphicStackState::Entry"* %1, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, -1
  br i1 %9, label %10, label %25

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %13, i32 4
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %8, %15
  br i1 %16, label %154, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 2
  %19 = bitcast %class.SkDynamicMemoryWStream** %18 to %class.SkWStream**
  %20 = load %class.SkWStream*, %class.SkWStream** %19, align 8
  tail call void @_ZN10SkPDFUtils12ApplyPatternEiP9SkWStream(i32 %8, %class.SkWStream* %20) #5
  %21 = load i32, i32* %7, align 4
  %22 = load i32, i32* %11, align 8
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %23, i32 4
  store i32 %21, i32* %24, align 4
  br label %154

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"struct.SkPDFGraphicStackState::Entry", %"struct.SkPDFGraphicStackState::Entry"* %1, i64 0, i32 2
  %27 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds %"struct.SkPDFGraphicStackState::Entry", %"struct.SkPDFGraphicStackState::Entry"* %1, i64 0, i32 2, i32 3
  %31 = load float, float* %30, align 4
  %32 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %29, i32 2, i32 3
  %33 = load float, float* %32, align 4
  %34 = fcmp oeq float %31, %33
  br i1 %34, label %35, label %57

35:                                               ; preds = %25
  %36 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %26, i64 0, i32 0
  %37 = load float, float* %36, align 4
  %38 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %29, i32 2, i32 0
  %39 = load float, float* %38, align 4
  %40 = fcmp oeq float %37, %39
  br i1 %40, label %41, label %57

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"struct.SkPDFGraphicStackState::Entry", %"struct.SkPDFGraphicStackState::Entry"* %1, i64 0, i32 2, i32 1
  %43 = load float, float* %42, align 4
  %44 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %29, i32 2, i32 1
  %45 = load float, float* %44, align 4
  %46 = fcmp oeq float %43, %45
  br i1 %46, label %47, label %57

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.SkPDFGraphicStackState::Entry", %"struct.SkPDFGraphicStackState::Entry"* %1, i64 0, i32 2, i32 2
  %49 = load float, float* %48, align 4
  %50 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %29, i32 2, i32 2
  %51 = load float, float* %50, align 4
  %52 = fcmp une float %49, %51
  br i1 %52, label %57, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %29, i32 4
  %55 = load i32, i32* %54, align 4
  %56 = icmp sgt i32 %55, -1
  br i1 %56, label %57, label %154

57:                                               ; preds = %25, %35, %41, %53, %47
  %58 = bitcast %struct.SkRGBA4f* %26 to <2 x float>*
  %59 = load <2 x float>, <2 x float>* %58, align 4
  %60 = getelementptr inbounds %"struct.SkPDFGraphicStackState::Entry", %"struct.SkPDFGraphicStackState::Entry"* %1, i64 0, i32 2, i32 2
  %61 = bitcast float* %60 to <2 x float>*
  %62 = load <2 x float>, <2 x float>* %61, align 4
  %63 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 2
  %64 = bitcast %class.SkDynamicMemoryWStream** %63 to %class.SkWStream**
  %65 = load %class.SkWStream*, %class.SkWStream** %64, align 8
  %66 = extractelement <2 x float> %59, i32 0
  %67 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %67) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %67, i8 -86, i64 6, i1 false) #5
  %68 = call i64 @_ZN10SkPDFUtils15ColorToDecimalFEfPc(float %66, i8* nonnull %67) #5
  %69 = bitcast %class.SkWStream* %65 to i1 (%class.SkWStream*, i8*, i64)***
  %70 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %69, align 8
  %71 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %70, i64 2
  %72 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %71, align 8
  %73 = call zeroext i1 %72(%class.SkWStream* %65, i8* nonnull %67, i64 %68) #5
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %67) #5
  %74 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %69, align 8
  %75 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %74, i64 2
  %76 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %75, align 8
  %77 = call zeroext i1 %76(%class.SkWStream* %65, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1) #5
  %78 = extractelement <2 x float> %59, i32 1
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %67) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %67, i8 -86, i64 6, i1 false) #5
  %79 = call i64 @_ZN10SkPDFUtils15ColorToDecimalFEfPc(float %78, i8* nonnull %67) #5
  %80 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %69, align 8
  %81 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %80, i64 2
  %82 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %81, align 8
  %83 = call zeroext i1 %82(%class.SkWStream* %65, i8* nonnull %67, i64 %79) #5
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %67) #5
  %84 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %69, align 8
  %85 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %84, i64 2
  %86 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %85, align 8
  %87 = call zeroext i1 %86(%class.SkWStream* %65, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1) #5
  %88 = extractelement <2 x float> %62, i32 0
  %89 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %89) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %89, i8 -86, i64 6, i1 false) #5
  %90 = call i64 @_ZN10SkPDFUtils15ColorToDecimalFEfPc(float %88, i8* nonnull %89) #5
  %91 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %69, align 8
  %92 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %91, i64 2
  %93 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %92, align 8
  %94 = call zeroext i1 %93(%class.SkWStream* %65, i8* nonnull %89, i64 %90) #5
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %89) #5
  %95 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %69, align 8
  %96 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %95, i64 2
  %97 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %96, align 8
  %98 = call zeroext i1 %97(%class.SkWStream* %65, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1) #5
  %99 = load %class.SkWStream*, %class.SkWStream** %64, align 8
  %100 = bitcast %class.SkWStream* %99 to i1 (%class.SkWStream*, i8*, i64)***
  %101 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %100, align 8
  %102 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %101, i64 2
  %103 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %102, align 8
  %104 = call zeroext i1 %103(%class.SkWStream* %99, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3) #5
  %105 = load <2 x float>, <2 x float>* %58, align 4
  %106 = load <2 x float>, <2 x float>* %61, align 4
  %107 = load %class.SkWStream*, %class.SkWStream** %64, align 8
  %108 = extractelement <2 x float> %105, i32 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %67) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %67, i8 -86, i64 6, i1 false) #5
  %109 = call i64 @_ZN10SkPDFUtils15ColorToDecimalFEfPc(float %108, i8* nonnull %67) #5
  %110 = bitcast %class.SkWStream* %107 to i1 (%class.SkWStream*, i8*, i64)***
  %111 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %110, align 8
  %112 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %111, i64 2
  %113 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %112, align 8
  %114 = call zeroext i1 %113(%class.SkWStream* %107, i8* nonnull %67, i64 %109) #5
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %67) #5
  %115 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %110, align 8
  %116 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %115, i64 2
  %117 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %116, align 8
  %118 = call zeroext i1 %117(%class.SkWStream* %107, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1) #5
  %119 = extractelement <2 x float> %105, i32 1
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %67) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %67, i8 -86, i64 6, i1 false) #5
  %120 = call i64 @_ZN10SkPDFUtils15ColorToDecimalFEfPc(float %119, i8* nonnull %67) #5
  %121 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %110, align 8
  %122 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %121, i64 2
  %123 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %122, align 8
  %124 = call zeroext i1 %123(%class.SkWStream* %107, i8* nonnull %67, i64 %120) #5
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %67) #5
  %125 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %110, align 8
  %126 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %125, i64 2
  %127 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %126, align 8
  %128 = call zeroext i1 %127(%class.SkWStream* %107, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1) #5
  %129 = extractelement <2 x float> %106, i32 0
  %130 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %130) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %130, i8 -86, i64 6, i1 false) #5
  %131 = call i64 @_ZN10SkPDFUtils15ColorToDecimalFEfPc(float %129, i8* nonnull %130) #5
  %132 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %110, align 8
  %133 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %132, i64 2
  %134 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %133, align 8
  %135 = call zeroext i1 %134(%class.SkWStream* %107, i8* nonnull %130, i64 %131) #5
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %130) #5
  %136 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %110, align 8
  %137 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %136, i64 2
  %138 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %137, align 8
  %139 = call zeroext i1 %138(%class.SkWStream* %107, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1) #5
  %140 = load %class.SkWStream*, %class.SkWStream** %64, align 8
  %141 = bitcast %class.SkWStream* %140 to i1 (%class.SkWStream*, i8*, i64)***
  %142 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %141, align 8
  %143 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %142, i64 2
  %144 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %143, align 8
  %145 = call zeroext i1 %144(%class.SkWStream* %140, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 3) #5
  %146 = load i32, i32* %27, align 8
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %147, i32 2
  %149 = bitcast %struct.SkRGBA4f* %148 to i8*
  %150 = bitcast %struct.SkRGBA4f* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %149, i8* align 4 %150, i64 16, i1 false)
  %151 = load i32, i32* %27, align 8
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %152, i32 4
  store i32 -1, i32* %153, align 4
  br label %154

154:                                              ; preds = %10, %53, %57, %17
  %155 = getelementptr inbounds %"struct.SkPDFGraphicStackState::Entry", %"struct.SkPDFGraphicStackState::Entry"* %1, i64 0, i32 5
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 1
  %158 = load i32, i32* %157, align 8
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %159, i32 5
  %161 = load i32, i32* %160, align 4
  %162 = icmp eq i32 %156, %161
  br i1 %162, label %171, label %163

163:                                              ; preds = %154
  %164 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 2
  %165 = bitcast %class.SkDynamicMemoryWStream** %164 to %class.SkWStream**
  %166 = load %class.SkWStream*, %class.SkWStream** %165, align 8
  call void @_ZN10SkPDFUtils17ApplyGraphicStateEiP9SkWStream(i32 %156, %class.SkWStream* %166) #5
  %167 = load i32, i32* %155, align 4
  %168 = load i32, i32* %157, align 8
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %169, i32 5
  store i32 %167, i32* %170, align 4
  br label %171

171:                                              ; preds = %154, %163
  %172 = phi i32 [ %158, %154 ], [ %168, %163 ]
  %173 = getelementptr inbounds %"struct.SkPDFGraphicStackState::Entry", %"struct.SkPDFGraphicStackState::Entry"* %1, i64 0, i32 3
  %174 = load float, float* %173, align 4
  %175 = fcmp une float %174, 0.000000e+00
  br i1 %175, label %176, label %206

176:                                              ; preds = %171
  %177 = sext i32 %172 to i64
  %178 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %177, i32 3
  %179 = load float, float* %178, align 4
  %180 = fcmp une float %174, %179
  br i1 %180, label %181, label %206

181:                                              ; preds = %176
  %182 = fmul float %174, 1.000000e+02
  %183 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 2
  %184 = bitcast %class.SkDynamicMemoryWStream** %183 to %class.SkWStream**
  %185 = load %class.SkWStream*, %class.SkWStream** %184, align 8
  %186 = getelementptr inbounds [49 x i8], [49 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %186) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %186, i8 -86, i64 49, i1 false) #5
  %187 = call i32 @_Z16SkFloatToDecimalfPc(float %182, i8* nonnull %186) #5
  %188 = zext i32 %187 to i64
  %189 = bitcast %class.SkWStream* %185 to i1 (%class.SkWStream*, i8*, i64)***
  %190 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %189, align 8
  %191 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %190, i64 2
  %192 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %191, align 8
  %193 = call zeroext i1 %192(%class.SkWStream* %185, i8* nonnull %186, i64 %188) #5
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %186) #5
  %194 = load %class.SkWStream*, %class.SkWStream** %184, align 8
  %195 = bitcast %class.SkWStream* %194 to i1 (%class.SkWStream*, i8*, i64)***
  %196 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %195, align 8
  %197 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %196, i64 2
  %198 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %197, align 8
  %199 = call zeroext i1 %198(%class.SkWStream* %194, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #5
  %200 = bitcast float* %173 to i32*
  %201 = load i32, i32* %200, align 4
  %202 = load i32, i32* %157, align 8
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %203, i32 3
  %205 = bitcast float* %204 to i32*
  store i32 %201, i32* %205, align 4
  br label %206

206:                                              ; preds = %176, %181, %171
  ret void
}

declare void @_ZN10SkPDFUtils12ApplyPatternEiP9SkWStream(i32, %class.SkWStream*) local_unnamed_addr #2

declare void @_ZN10SkPDFUtils17ApplyGraphicStateEiP9SkWStream(i32, %class.SkWStream*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22SkPDFGraphicStackState10drainStackEv(%struct.SkPDFGraphicStackState* nocapture) local_unnamed_addr #3 align 2 {
  %2 = alloca %class.SkMatrix, align 8
  %3 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 2
  %4 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %3, align 8
  %5 = icmp eq %class.SkDynamicMemoryWStream* %4, null
  %6 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %4, i64 0, i32 0
  br i1 %5, label %38, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %38, label %11

11:                                               ; preds = %7
  %12 = bitcast %class.SkDynamicMemoryWStream** %3 to %class.SkWStream**
  %13 = bitcast %class.SkMatrix* %2 to i8*
  br label %14

14:                                               ; preds = %36, %11
  %15 = phi %class.SkWStream* [ %37, %36 ], [ %6, %11 ]
  %16 = bitcast %class.SkWStream* %15 to i1 (%class.SkWStream*, i8*, i64)***
  %17 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %16, align 8
  %18 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %17, i64 2
  %19 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %18, align 8
  %20 = tail call zeroext i1 %19(%class.SkWStream* %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i64 2) #5
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 40, i1 false)
  %21 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #5
  %22 = bitcast %class.SkMatrix* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 4 %22, i64 40, i1 false) #5
  %23 = load i32, i32* %8, align 8
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %24
  %26 = bitcast %"struct.SkPDFGraphicStackState::Entry"* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* nonnull align 8 %13, i64 40, i1 false) #5
  %27 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %24, i32 1
  store i32 2, i32* %27, align 8
  %28 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %24, i32 2, i32 0
  %29 = bitcast float* %28 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %29, align 4
  %30 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %24, i32 3
  store float 1.000000e+00, float* %30, align 4
  %31 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %24, i32 4
  store i32 -1, i32* %31, align 8
  %32 = getelementptr inbounds %struct.SkPDFGraphicStackState, %struct.SkPDFGraphicStackState* %0, i64 0, i32 0, i64 %24, i32 5
  store i32 -1, i32* %32, align 4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13)
  %33 = load i32, i32* %8, align 8
  %34 = add nsw i32 %33, -1
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %14
  %37 = load %class.SkWStream*, %class.SkWStream** %12, align 8
  br label %14

38:                                               ; preds = %14, %7, %1
  ret void
}

declare void @_ZN10SkPDFUtils15AppendRectangleERK6SkRectP9SkWStream(%struct.SkRect* dereferenceable(16), %class.SkWStream*) local_unnamed_addr #2

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #2

declare void @_Z18SkClipStack_AsPathRK11SkClipStackP6SkPath(%class.SkClipStack* dereferenceable(80), %class.SkPath*) local_unnamed_addr #2

declare zeroext i1 @_Z2OpRK6SkPathS1_8SkPathOpPS_(%class.SkPath* dereferenceable(16), %class.SkPath* dereferenceable(16), i32, %class.SkPath*) local_unnamed_addr #2

declare void @_ZN6SkPath4RectERK6SkRect15SkPathDirectionj(%class.SkPath* sret, %struct.SkRect* dereferenceable(16), i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #4

declare void @_ZN11SkClipStack4IterC1ERKS_NS0_9IterStartE(%"class.SkClipStack::Iter"*, %class.SkClipStack* dereferenceable(80), i32) unnamed_addr #2

declare %"class.SkClipStack::Element"* @_ZN11SkClipStack4Iter4nextEv(%"class.SkClipStack::Iter"*) local_unnamed_addr #2

declare zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN10SkPDFUtils8EmitPathERK6SkPathN7SkPaint5StyleEbP9SkWStreamf(%class.SkPath* dereferenceable(16), i8 zeroext, i1 zeroext, %class.SkWStream*, float) local_unnamed_addr #2

declare void @_ZNK11SkClipStack7Element17asDeviceSpacePathEP6SkPath(%"class.SkClipStack::Element"*, %class.SkPath*) local_unnamed_addr #2

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #2

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

declare i64 @_ZN10SkPDFUtils15ColorToDecimalFEfPc(float, i8*) local_unnamed_addr #2

declare i32 @_Z16SkFloatToDecimalfPc(float, i8*) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
