; ModuleID = '../../third_party/webrtc/rtc_base/synchronization/sequence_checker_internal.cc'
source_filename = "../../third_party/webrtc/rtc_base/synchronization/sequence_checker_internal.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl" = type { %"class.webrtc::Mutex", i8, i64, %"class.webrtc::TaskQueueBase"*, i8* }
%"class.webrtc::Mutex" = type { %"class.webrtc::MutexImpl" }
%"class.webrtc::MutexImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.webrtc::TaskQueueBase" = type { i32 (...)** }
%union.pthread_mutexattr_t = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }

@_ZN6webrtc32webrtc_sequence_checker_internal19SequenceCheckerImplC1Ev = hidden unnamed_addr alias void (%"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl"*), void (%"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl"*)* @_ZN6webrtc32webrtc_sequence_checker_internal19SequenceCheckerImplC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc32webrtc_sequence_checker_internal19SequenceCheckerImplC2Ev(%"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl"*) unnamed_addr #0 align 2 {
  %2 = alloca %union.pthread_mutexattr_t, align 4
  %3 = bitcast %union.pthread_mutexattr_t* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #4
  %4 = getelementptr inbounds %union.pthread_mutexattr_t, %union.pthread_mutexattr_t* %2, i64 0, i32 0
  store i32 -1431655766, i32* %4, align 4
  %5 = call i32 @pthread_mutexattr_init(%union.pthread_mutexattr_t* nonnull %2) #4
  %6 = getelementptr inbounds %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl", %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %6, %union.pthread_mutexattr_t* nonnull %2) #4
  %8 = call i32 @pthread_mutexattr_destroy(%union.pthread_mutexattr_t* nonnull %2) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #4
  %9 = getelementptr inbounds %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl", %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl"* %0, i64 0, i32 1
  store i8 1, i8* %9, align 8
  %10 = getelementptr inbounds %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl", %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl"* %0, i64 0, i32 2
  %11 = call i64 @_ZN3rtc16CurrentThreadRefEv() #4
  store i64 %11, i64* %10, align 8
  %12 = getelementptr inbounds %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl", %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl"* %0, i64 0, i32 3
  %13 = call %"class.webrtc::TaskQueueBase"* @_ZN6webrtc13TaskQueueBase7CurrentEv() #4
  store %"class.webrtc::TaskQueueBase"* %13, %"class.webrtc::TaskQueueBase"** %12, align 8
  %14 = getelementptr inbounds %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl", %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl"* %0, i64 0, i32 4
  store i8* null, i8** %14, align 8
  ret void
}

declare i64 @_ZN3rtc16CurrentThreadRefEv() local_unnamed_addr #1

declare %"class.webrtc::TaskQueueBase"* @_ZN6webrtc13TaskQueueBase7CurrentEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc32webrtc_sequence_checker_internal19SequenceCheckerImpl9IsCurrentEv(%"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = tail call %"class.webrtc::TaskQueueBase"* @_ZN6webrtc13TaskQueueBase7CurrentEv() #4
  %4 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #4
  %5 = tail call i64 @_ZN3rtc16CurrentThreadRefEv() #4
  store i64 %5, i64* %2, align 8
  %6 = getelementptr inbounds %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl", %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %6) #4
  %8 = getelementptr inbounds %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl", %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl"* %0, i64 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %1
  store i8 1, i8* %8, align 8
  %12 = getelementptr inbounds %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl", %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl"* %0, i64 0, i32 2
  store i64 %5, i64* %12, align 8
  %13 = getelementptr inbounds %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl", %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl"* %0, i64 0, i32 3
  store %"class.webrtc::TaskQueueBase"* %3, %"class.webrtc::TaskQueueBase"** %13, align 8
  %14 = getelementptr inbounds %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl", %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl"* %0, i64 0, i32 4
  store i8* null, i8** %14, align 8
  br label %26

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl", %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl"* %0, i64 0, i32 3
  %17 = load %"class.webrtc::TaskQueueBase"*, %"class.webrtc::TaskQueueBase"** %16, align 8
  %18 = icmp ne %"class.webrtc::TaskQueueBase"* %17, null
  %19 = icmp ne %"class.webrtc::TaskQueueBase"* %3, null
  %20 = or i1 %19, %18
  br i1 %20, label %21, label %23

21:                                               ; preds = %15
  %22 = icmp eq %"class.webrtc::TaskQueueBase"* %17, %3
  br label %26

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl", %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl"* %0, i64 0, i32 2
  %25 = call zeroext i1 @_ZN3rtc16IsThreadRefEqualERKmS1_(i64* dereferenceable(8) %24, i64* nonnull dereferenceable(8) %2) #4
  br label %26

26:                                               ; preds = %23, %21, %11
  %27 = phi i1 [ %22, %21 ], [ %25, %23 ], [ true, %11 ]
  %28 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %6) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #4
  ret i1 %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN3rtc16IsThreadRefEqualERKmS1_(i64* dereferenceable(8), i64* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc32webrtc_sequence_checker_internal19SequenceCheckerImpl6DetachEv(%"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl", %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %2) #4
  %4 = getelementptr inbounds %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl", %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl"* %0, i64 0, i32 1
  store i8 0, i8* %4, align 8
  %5 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc32webrtc_sequence_checker_internal19ExpectationToStringEPKNS0_19SequenceCheckerImplE(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.webrtc::webrtc_sequence_checker_internal::SequenceCheckerImpl"* nocapture readnone) local_unnamed_addr #0 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #4
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_mutexattr_init(%union.pthread_mutexattr_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_init(%union.pthread_mutex_t*, %union.pthread_mutexattr_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutexattr_destroy(%union.pthread_mutexattr_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
