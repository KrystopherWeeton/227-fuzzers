; ModuleID = '../../third_party/webrtc/api/audio_codecs/g711/audio_decoder_g711.cc'
source_filename = "../../third_party/webrtc/api/audio_codecs/g711/audio_decoder_g711.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.webrtc::SdpAudioFormat" = type { %"class.std::__1::basic_string", i32, i64, %"class.std::__1::map" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2", %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.webrtc::AudioDecoderG711::Config" }
%"struct.webrtc::AudioDecoderG711::Config" = type { i32, i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.webrtc::AudioCodecSpec"*, %"struct.webrtc::AudioCodecSpec"*, %"class.std::__1::__compressed_pair.10" }
%"struct.webrtc::AudioCodecSpec" = type { %"struct.webrtc::SdpAudioFormat", %"struct.webrtc::AudioCodecInfo" }
%"struct.webrtc::AudioCodecInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.webrtc::AudioCodecSpec"* }
%"class.webrtc::AudioDecoder" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN6webrtc14AudioCodecSpecENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

@.str = private unnamed_addr constant [5 x i8] c"PCMU\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"PCMA\00", align 1
@_ZTVN6webrtc16AudioDecoderPcmUE = external unnamed_addr constant { [17 x i8*] }, align 8
@_ZTVN6webrtc16AudioDecoderPcmAE = external unnamed_addr constant { [17 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN6webrtc16AudioDecoderG71111SdpToConfigERKNS_14SdpAudioFormatE(%"struct.webrtc::SdpAudioFormat"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.absl::optional_internal::optional_data_dtor_base", align 8
  %3 = bitcast %"struct.webrtc::SdpAudioFormat"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = zext i8 %5 to i64
  %9 = ptrtoint %"struct.webrtc::SdpAudioFormat"* %0 to i64
  br label %17

10:                                               ; preds = %1
  %11 = bitcast %"struct.webrtc::SdpAudioFormat"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"struct.webrtc::SdpAudioFormat", %"struct.webrtc::SdpAudioFormat"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, -1
  br i1 %15, label %17, label %16, !prof !2

16:                                               ; preds = %10
  tail call void @llvm.trap() #9
  unreachable

17:                                               ; preds = %10, %7
  %18 = phi i64 [ %12, %10 ], [ %9, %7 ]
  %19 = phi i64 [ %14, %10 ], [ %8, %7 ]
  %20 = inttoptr i64 %18 to i8*
  %21 = tail call zeroext i1 @_ZN4absl16EqualsIgnoreCaseENS_11string_viewES0_(i8* %20, i64 %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #9
  %22 = load i8, i8* %4, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %17
  %25 = zext i8 %22 to i64
  %26 = ptrtoint %"struct.webrtc::SdpAudioFormat"* %0 to i64
  br label %34

27:                                               ; preds = %17
  %28 = bitcast %"struct.webrtc::SdpAudioFormat"* %0 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"struct.webrtc::SdpAudioFormat", %"struct.webrtc::SdpAudioFormat"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp sgt i64 %31, -1
  br i1 %32, label %34, label %33, !prof !2

33:                                               ; preds = %27
  tail call void @llvm.trap() #9
  unreachable

34:                                               ; preds = %27, %24
  %35 = phi i64 [ %29, %27 ], [ %26, %24 ]
  %36 = phi i64 [ %31, %27 ], [ %25, %24 ]
  %37 = inttoptr i64 %35 to i8*
  %38 = tail call zeroext i1 @_ZN4absl16EqualsIgnoreCaseENS_11string_viewES0_(i8* %37, i64 %36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4) #9
  %39 = getelementptr inbounds %"struct.webrtc::SdpAudioFormat", %"struct.webrtc::SdpAudioFormat"* %0, i64 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 8000
  br i1 %41, label %42, label %57

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"struct.webrtc::SdpAudioFormat", %"struct.webrtc::SdpAudioFormat"* %0, i64 0, i32 2
  %44 = load i64, i64* %43, align 8
  %45 = icmp ne i64 %44, 0
  %46 = or i1 %21, %38
  %47 = and i1 %46, %45
  br i1 %47, label %48, label %57

48:                                               ; preds = %42
  %49 = xor i1 %21, true
  %50 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %2, i64 0, i32 0
  store i8 1, i8* %50, align 8
  %51 = shl i64 %44, 32
  %52 = zext i1 %49 to i64
  %53 = or i64 %51, %52
  %54 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %2, i64 0, i32 1
  %55 = bitcast %union.anon* %54 to i64*
  store i64 %53, i64* %55, align 4
  %56 = trunc i64 %44 to i32
  br label %59

57:                                               ; preds = %42, %34
  %58 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %2, i64 0, i32 0
  store i8 0, i8* %58, align 8
  br label %59

59:                                               ; preds = %57, %48
  %60 = phi i32 [ undef, %57 ], [ %56, %48 ]
  %61 = bitcast %"class.absl::optional_internal::optional_data_dtor_base"* %2 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = insertvalue { i64, i32 } undef, i64 %62, 0
  %64 = insertvalue { i64, i32 } %63, i32 %60, 1
  ret { i64, i32 } %64
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare zeroext i1 @_ZN4absl16EqualsIgnoreCaseENS_11string_viewES0_(i8*, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16AudioDecoderG71123AppendSupportedDecodersEPNSt3__16vectorINS_14AudioCodecSpecENS1_9allocatorIS3_EEEE(%"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.webrtc::AudioCodecSpec", align 8
  %3 = bitcast %"struct.webrtc::AudioCodecSpec"* %2 to i8*
  %4 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %2, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %2, i64 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast %"struct.webrtc::AudioCodecInfo"* %5 to i8*
  %9 = bitcast %"struct.webrtc::AudioCodecSpec"** %6 to i64*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %3) #9
  call void @_ZN6webrtc14SdpAudioFormatC1EN4absl11string_viewEim(%"struct.webrtc::SdpAudioFormat"* nonnull %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4, i32 8000, i64 1) #9
  call void @_ZN6webrtc14AudioCodecInfoC1Eimi(%"struct.webrtc::AudioCodecInfo"* %5, i32 8000, i64 1, i32 64000) #9
  %10 = load %"struct.webrtc::AudioCodecSpec"*, %"struct.webrtc::AudioCodecSpec"** %6, align 8
  %11 = load %"struct.webrtc::AudioCodecSpec"*, %"struct.webrtc::AudioCodecSpec"** %7, align 8
  %12 = icmp ult %"struct.webrtc::AudioCodecSpec"* %10, %11
  br i1 %12, label %13, label %19

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %10, i64 0, i32 0
  call void @_ZN6webrtc14SdpAudioFormatC1EOS0_(%"struct.webrtc::SdpAudioFormat"* %14, %"struct.webrtc::SdpAudioFormat"* nonnull dereferenceable(64) %4) #9
  %15 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %10, i64 0, i32 1
  %16 = bitcast %"struct.webrtc::AudioCodecInfo"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %8, i64 32, i1 false) #9
  %17 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %10, i64 1
  %18 = ptrtoint %"struct.webrtc::AudioCodecSpec"* %17 to i64
  store i64 %18, i64* %9, align 8
  br label %20

19:                                               ; preds = %1
  call void @_ZNSt3__16vectorIN6webrtc14AudioCodecSpecENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %0, %"struct.webrtc::AudioCodecSpec"* nonnull dereferenceable(96) %2) #9
  br label %20

20:                                               ; preds = %13, %19
  call void @_ZN6webrtc14SdpAudioFormatD1Ev(%"struct.webrtc::SdpAudioFormat"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %3) #9
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %3) #9
  call void @_ZN6webrtc14SdpAudioFormatC1EN4absl11string_viewEim(%"struct.webrtc::SdpAudioFormat"* nonnull %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4, i32 8000, i64 1) #9
  call void @_ZN6webrtc14AudioCodecInfoC1Eimi(%"struct.webrtc::AudioCodecInfo"* %5, i32 8000, i64 1, i32 64000) #9
  %21 = load %"struct.webrtc::AudioCodecSpec"*, %"struct.webrtc::AudioCodecSpec"** %6, align 8
  %22 = load %"struct.webrtc::AudioCodecSpec"*, %"struct.webrtc::AudioCodecSpec"** %7, align 8
  %23 = icmp ult %"struct.webrtc::AudioCodecSpec"* %21, %22
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  call void @_ZNSt3__16vectorIN6webrtc14AudioCodecSpecENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %0, %"struct.webrtc::AudioCodecSpec"* nonnull dereferenceable(96) %2) #9
  br label %31

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %21, i64 0, i32 0
  call void @_ZN6webrtc14SdpAudioFormatC1EOS0_(%"struct.webrtc::SdpAudioFormat"* %26, %"struct.webrtc::SdpAudioFormat"* nonnull dereferenceable(64) %4) #9
  %27 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %21, i64 0, i32 1
  %28 = bitcast %"struct.webrtc::AudioCodecInfo"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %8, i64 32, i1 false) #9
  %29 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %21, i64 1
  %30 = ptrtoint %"struct.webrtc::AudioCodecSpec"* %29 to i64
  store i64 %30, i64* %9, align 8
  br label %31

31:                                               ; preds = %25, %24
  call void @_ZN6webrtc14SdpAudioFormatD1Ev(%"struct.webrtc::SdpAudioFormat"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %3) #9
  ret void
}

declare void @_ZN6webrtc14SdpAudioFormatC1EN4absl11string_viewEim(%"struct.webrtc::SdpAudioFormat"*, i8*, i64, i32, i64) unnamed_addr #3

declare void @_ZN6webrtc14AudioCodecInfoC1Eimi(%"struct.webrtc::AudioCodecInfo"*, i32, i64, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webrtc::AudioDecoder"* @_ZN6webrtc16AudioDecoderG71116MakeAudioDecoderERKNS0_6ConfigEN4absl8optionalINS_16AudioCodecPairIdEEE(%"struct.webrtc::AudioDecoderG711::Config"* nocapture readonly dereferenceable(8), i8, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.webrtc::AudioDecoderG711::Config", %"struct.webrtc::AudioDecoderG711::Config"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %17 [
    i32 0, label %7
    i32 1, label %6
  ]

6:                                                ; preds = %3
  br label %7

7:                                                ; preds = %3, %6
  %8 = phi i32 (...)** [ bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN6webrtc16AudioDecoderPcmAE, i64 0, inrange i32 0, i64 2) to i32 (...)**), %6 ], [ bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN6webrtc16AudioDecoderPcmUE, i64 0, inrange i32 0, i64 2) to i32 (...)**), %3 ]
  %9 = getelementptr inbounds %"struct.webrtc::AudioDecoderG711::Config", %"struct.webrtc::AudioDecoderG711::Config"* %0, i64 0, i32 1
  %10 = tail call i8* @_Znwm(i64 16) #10
  %11 = load i32, i32* %9, align 4
  %12 = sext i32 %11 to i64
  %13 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** %8, i32 (...)*** %13, align 8
  %14 = getelementptr inbounds i8, i8* %10, i64 8
  %15 = bitcast i8* %14 to i64*
  store i64 %12, i64* %15, align 8
  %16 = bitcast i8* %10 to %"class.webrtc::AudioDecoder"*
  br label %17

17:                                               ; preds = %7, %3
  %18 = phi %"class.webrtc::AudioDecoder"* [ null, %3 ], [ %16, %7 ]
  ret %"class.webrtc::AudioDecoder"* %18
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind
declare void @_ZN6webrtc14SdpAudioFormatD1Ev(%"struct.webrtc::SdpAudioFormat"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6webrtc14AudioCodecSpecENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"*, %"struct.webrtc::AudioCodecSpec"* dereferenceable(96)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.webrtc::AudioCodecSpec"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 96
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 192153584101141162
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.webrtc::AudioCodecSpec"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 96
  %20 = icmp ult i64 %19, 96076792050570581
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 192153584101141162, %14 ]
  %28 = mul i64 %27, 96
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"struct.webrtc::AudioCodecSpec"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.webrtc::AudioCodecSpec"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %33, i64 %32
  %36 = ptrtoint %"struct.webrtc::AudioCodecSpec"* %35 to i64
  %37 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %1, i64 0, i32 0
  tail call void @_ZN6webrtc14SdpAudioFormatC1EOS0_(%"struct.webrtc::SdpAudioFormat"* %37, %"struct.webrtc::SdpAudioFormat"* dereferenceable(64) %38) #9
  %39 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %33, i64 %9, i32 1
  %40 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %1, i64 0, i32 1
  %41 = bitcast %"struct.webrtc::AudioCodecInfo"* %39 to i8*
  %42 = bitcast %"struct.webrtc::AudioCodecInfo"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 32, i1 false) #9
  %43 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %34, i64 1
  %44 = ptrtoint %"struct.webrtc::AudioCodecSpec"* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %46 = load %"struct.webrtc::AudioCodecSpec"*, %"struct.webrtc::AudioCodecSpec"** %45, align 8
  %47 = load %"struct.webrtc::AudioCodecSpec"*, %"struct.webrtc::AudioCodecSpec"** %3, align 8
  %48 = icmp eq %"struct.webrtc::AudioCodecSpec"* %47, %46
  br i1 %48, label %49, label %51

49:                                               ; preds = %31
  %50 = ptrtoint %"struct.webrtc::AudioCodecSpec"* %46 to i64
  br label %66

51:                                               ; preds = %31, %51
  %52 = phi %"struct.webrtc::AudioCodecSpec"* [ %61, %51 ], [ %34, %31 ]
  %53 = phi %"struct.webrtc::AudioCodecSpec"* [ %54, %51 ], [ %47, %31 ]
  %54 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %53, i64 -1
  %55 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %52, i64 -1, i32 0
  %56 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %54, i64 0, i32 0
  tail call void @_ZN6webrtc14SdpAudioFormatC1EOS0_(%"struct.webrtc::SdpAudioFormat"* %55, %"struct.webrtc::SdpAudioFormat"* dereferenceable(64) %56) #9
  %57 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %52, i64 -1, i32 1
  %58 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %53, i64 -1, i32 1
  %59 = bitcast %"struct.webrtc::AudioCodecInfo"* %57 to i8*
  %60 = bitcast %"struct.webrtc::AudioCodecInfo"* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 32, i1 false) #9
  %61 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %52, i64 -1
  %62 = icmp eq %"struct.webrtc::AudioCodecSpec"* %54, %46
  br i1 %62, label %63, label %51

63:                                               ; preds = %51
  %64 = load i64, i64* %6, align 8
  %65 = load %"struct.webrtc::AudioCodecSpec"*, %"struct.webrtc::AudioCodecSpec"** %3, align 8
  br label %66

66:                                               ; preds = %49, %63
  %67 = phi %"struct.webrtc::AudioCodecSpec"* [ %46, %49 ], [ %65, %63 ]
  %68 = phi %"struct.webrtc::AudioCodecSpec"* [ %34, %49 ], [ %61, %63 ]
  %69 = phi i64 [ %50, %49 ], [ %64, %63 ]
  %70 = ptrtoint %"struct.webrtc::AudioCodecSpec"* %68 to i64
  store i64 %70, i64* %6, align 8
  store i64 %44, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %71 = inttoptr i64 %69 to %"struct.webrtc::AudioCodecSpec"*
  %72 = icmp eq %"struct.webrtc::AudioCodecSpec"* %67, %71
  br i1 %72, label %78, label %73

73:                                               ; preds = %66, %73
  %74 = phi %"struct.webrtc::AudioCodecSpec"* [ %75, %73 ], [ %67, %66 ]
  %75 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %74, i64 -1
  %76 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %75, i64 0, i32 0
  tail call void @_ZN6webrtc14SdpAudioFormatD1Ev(%"struct.webrtc::SdpAudioFormat"* %76) #9
  %77 = icmp eq %"struct.webrtc::AudioCodecSpec"* %75, %71
  br i1 %77, label %78, label %73

78:                                               ; preds = %73, %66
  %79 = icmp eq i64 %69, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = inttoptr i64 %69 to i8*
  tail call void @_ZdlPv(i8* %81) #10
  br label %82

82:                                               ; preds = %78, %80
  ret void
}

declare void @_ZN6webrtc14SdpAudioFormatC1EOS0_(%"struct.webrtc::SdpAudioFormat"*, %"struct.webrtc::SdpAudioFormat"* dereferenceable(64)) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
