; ModuleID = '../../third_party/boringssl/src/crypto/asn1/a_gentm.c'
source_filename = "../../third_party/boringssl/src/crypto/asn1/a_gentm.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }

@.str = private unnamed_addr constant [54 x i8] c"../../third_party/boringssl/src/crypto/asn1/a_gentm.c\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"%04d%02d%02d%02d%02d%02dZ\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @asn1_generalizedtime_to_tm(%struct.tm*, %struct.asn1_string_st* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 24
  br i1 %5, label %6, label %115

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %1, i64 0, i32 2
  %10 = load i8*, i8** %9, align 8
  %11 = icmp slt i32 %8, 13
  br i1 %11, label %115, label %14

12:                                               ; preds = %239, %239, %239
  br i1 %15, label %42, label %13

13:                                               ; preds = %12
  store i32 0, i32* %16, align 8
  br label %42

14:                                               ; preds = %6
  %15 = icmp eq %struct.tm* %0, null
  %16 = getelementptr inbounds %struct.tm, %struct.tm* %0, i64 0, i32 0
  %17 = getelementptr inbounds %struct.tm, %struct.tm* %0, i64 0, i32 1
  %18 = getelementptr inbounds %struct.tm, %struct.tm* %0, i64 0, i32 2
  %19 = getelementptr inbounds %struct.tm, %struct.tm* %0, i64 0, i32 3
  %20 = getelementptr inbounds %struct.tm, %struct.tm* %0, i64 0, i32 4
  %21 = getelementptr inbounds %struct.tm, %struct.tm* %0, i64 0, i32 5
  %22 = load i8, i8* %10, align 1
  %23 = sext i8 %22 to i32
  %24 = add i8 %22, -48
  %25 = icmp ult i8 %24, 10
  br i1 %25, label %26, label %115

26:                                               ; preds = %14
  %27 = getelementptr inbounds i8, i8* %10, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = add i8 %28, -48
  %30 = icmp ugt i8 %29, 9
  br i1 %30, label %115, label %31

31:                                               ; preds = %26
  %32 = sext i8 %28 to i32
  %33 = mul nsw i32 %23, 10
  %34 = add nsw i32 %33, -480
  %35 = add nsw i32 %34, %32
  %36 = add nsw i32 %35, -48
  %37 = icmp ugt i32 %36, 99
  br i1 %37, label %115, label %38

38:                                               ; preds = %31
  br i1 %15, label %135, label %39

39:                                               ; preds = %38
  %40 = mul nsw i32 %36, 100
  %41 = add nsw i32 %40, -1900
  store i32 %41, i32* %21, align 4
  br label %135

42:                                               ; preds = %260, %261, %12, %13
  %43 = phi i32 [ 12, %12 ], [ 12, %13 ], [ 14, %261 ], [ 14, %260 ]
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i8, i8* %10, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = icmp eq i8 %46, 46
  br i1 %47, label %48, label %66

48:                                               ; preds = %42
  %49 = or i32 %43, 1
  %50 = icmp slt i32 %43, %8
  br i1 %50, label %51, label %115

51:                                               ; preds = %48
  %52 = zext i32 %49 to i64
  br label %53

53:                                               ; preds = %51, %53
  %54 = phi i64 [ %52, %51 ], [ %62, %53 ]
  %55 = getelementptr inbounds i8, i8* %10, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add i8 %56, -48
  %58 = icmp ugt i8 %57, 9
  %59 = trunc i64 %54 to i32
  %60 = icmp slt i32 %8, %59
  %61 = or i1 %60, %58
  %62 = add nuw i64 %54, 1
  br i1 %61, label %63, label %53

63:                                               ; preds = %53
  %64 = trunc i64 %54 to i32
  %65 = icmp eq i32 %49, %64
  br i1 %65, label %115, label %66

66:                                               ; preds = %63, %42
  %67 = phi i32 [ %64, %63 ], [ %43, %42 ]
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i8, i8* %10, i64 %68
  %70 = load i8, i8* %69, align 1
  switch i8 %70, label %115 [
    i8 90, label %71
    i8 43, label %73
    i8 45, label %73
    i8 0, label %111
  ]

71:                                               ; preds = %66
  %72 = add nsw i32 %67, 1
  br label %111

73:                                               ; preds = %66, %66
  %74 = icmp eq i8 %70, 45
  %75 = select i1 %74, i32 1, i32 -1
  %76 = add nsw i32 %67, 5
  %77 = icmp sgt i32 %76, %8
  br i1 %77, label %115, label %78

78:                                               ; preds = %73
  %79 = add i32 %67, 1
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i8, i8* %10, i64 %80
  %82 = load i8, i8* %81, align 1
  %83 = sext i8 %82 to i32
  %84 = add i8 %82, -48
  %85 = icmp ugt i8 %84, 9
  br i1 %85, label %115, label %86

86:                                               ; preds = %78
  %87 = add nsw i64 %80, 1
  %88 = getelementptr inbounds i8, i8* %10, i64 %87
  %89 = load i8, i8* %88, align 1
  %90 = add i8 %89, -48
  %91 = icmp ugt i8 %90, 9
  br i1 %91, label %115, label %92

92:                                               ; preds = %86
  %93 = sext i8 %89 to i32
  %94 = mul nsw i32 %83, 10
  %95 = add nsw i32 %94, -528
  %96 = add nsw i32 %95, %93
  %97 = icmp ugt i32 %96, 12
  br i1 %97, label %115, label %98

98:                                               ; preds = %92
  %99 = mul nsw i32 %96, 3600
  %100 = add nsw i64 %80, 2
  %101 = getelementptr inbounds i8, i8* %10, i64 %100
  %102 = load i8, i8* %101, align 1
  %103 = sext i8 %102 to i32
  %104 = add i8 %102, -48
  %105 = icmp ugt i8 %104, 9
  br i1 %105, label %115, label %117

106:                                              ; preds = %129
  %107 = mul nsw i32 %131, %75
  %108 = sext i32 %107 to i64
  %109 = tail call i32 @OPENSSL_gmtime_adj(%struct.tm* %0, i32 0, i64 %108) #4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %115, label %111

111:                                              ; preds = %106, %129, %66, %71
  %112 = phi i32 [ %72, %71 ], [ %67, %66 ], [ %132, %129 ], [ %132, %106 ]
  %113 = icmp eq i32 %112, %8
  %114 = zext i1 %113 to i32
  br label %115

115:                                              ; preds = %26, %31, %14, %135, %141, %146, %157, %163, %168, %178, %184, %189, %199, %205, %210, %219, %225, %230, %242, %246, %251, %92, %86, %78, %98, %117, %123, %106, %73, %6, %63, %48, %66, %2, %111
  %116 = phi i32 [ %114, %111 ], [ 0, %2 ], [ 0, %66 ], [ 0, %48 ], [ 0, %63 ], [ 0, %6 ], [ 0, %73 ], [ 0, %106 ], [ 0, %123 ], [ 0, %117 ], [ 0, %98 ], [ 0, %78 ], [ 0, %86 ], [ 0, %92 ], [ 0, %251 ], [ 0, %246 ], [ 0, %242 ], [ 0, %230 ], [ 0, %225 ], [ 0, %219 ], [ 0, %210 ], [ 0, %205 ], [ 0, %199 ], [ 0, %189 ], [ 0, %184 ], [ 0, %178 ], [ 0, %168 ], [ 0, %163 ], [ 0, %157 ], [ 0, %146 ], [ 0, %141 ], [ 0, %135 ], [ 0, %14 ], [ 0, %31 ], [ 0, %26 ]
  ret i32 %116

117:                                              ; preds = %98
  %118 = add nsw i64 %80, 3
  %119 = getelementptr inbounds i8, i8* %10, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = add i8 %120, -48
  %122 = icmp ugt i8 %121, 9
  br i1 %122, label %115, label %123

123:                                              ; preds = %117
  %124 = sext i8 %120 to i32
  %125 = mul nsw i32 %103, 10
  %126 = add nsw i32 %125, -528
  %127 = add nsw i32 %126, %124
  %128 = icmp ugt i32 %127, 59
  br i1 %128, label %115, label %129

129:                                              ; preds = %123
  %130 = mul nsw i32 %127, 60
  %131 = add nsw i32 %99, %130
  %132 = add i32 %67, 5
  %133 = icmp eq i32 %131, 0
  %134 = or i1 %15, %133
  br i1 %134, label %111, label %106

135:                                              ; preds = %38, %39
  %136 = getelementptr inbounds i8, i8* %10, i64 2
  %137 = load i8, i8* %136, align 1
  %138 = sext i8 %137 to i32
  %139 = add i8 %137, -48
  %140 = icmp ult i8 %139, 10
  br i1 %140, label %141, label %115

141:                                              ; preds = %135
  %142 = getelementptr inbounds i8, i8* %10, i64 3
  %143 = load i8, i8* %142, align 1
  %144 = add i8 %143, -48
  %145 = icmp ugt i8 %144, 9
  br i1 %145, label %115, label %146

146:                                              ; preds = %141
  %147 = sext i8 %143 to i32
  %148 = mul nsw i32 %138, 10
  %149 = add nsw i32 %148, -480
  %150 = add nsw i32 %149, %147
  %151 = add nsw i32 %150, -48
  %152 = icmp ugt i32 %151, 99
  br i1 %152, label %115, label %153

153:                                              ; preds = %146
  br i1 %15, label %157, label %154

154:                                              ; preds = %153
  %155 = load i32, i32* %21, align 4
  %156 = add nsw i32 %155, %151
  store i32 %156, i32* %21, align 4
  br label %157

157:                                              ; preds = %154, %153
  %158 = getelementptr inbounds i8, i8* %10, i64 4
  %159 = load i8, i8* %158, align 1
  %160 = sext i8 %159 to i32
  %161 = add i8 %159, -48
  %162 = icmp ult i8 %161, 10
  br i1 %162, label %163, label %115

163:                                              ; preds = %157
  %164 = getelementptr inbounds i8, i8* %10, i64 5
  %165 = load i8, i8* %164, align 1
  %166 = add i8 %165, -48
  %167 = icmp ugt i8 %166, 9
  br i1 %167, label %115, label %168

168:                                              ; preds = %163
  %169 = sext i8 %165 to i32
  %170 = mul nsw i32 %160, 10
  %171 = add nsw i32 %170, -480
  %172 = add nsw i32 %171, %169
  %173 = add nsw i32 %172, -49
  %174 = icmp ugt i32 %173, 11
  br i1 %174, label %115, label %175

175:                                              ; preds = %168
  br i1 %15, label %178, label %176

176:                                              ; preds = %175
  %177 = add nsw i32 %172, -49
  store i32 %177, i32* %20, align 8
  br label %178

178:                                              ; preds = %176, %175
  %179 = getelementptr inbounds i8, i8* %10, i64 6
  %180 = load i8, i8* %179, align 1
  %181 = sext i8 %180 to i32
  %182 = add i8 %180, -48
  %183 = icmp ult i8 %182, 10
  br i1 %183, label %184, label %115

184:                                              ; preds = %178
  %185 = getelementptr inbounds i8, i8* %10, i64 7
  %186 = load i8, i8* %185, align 1
  %187 = add i8 %186, -48
  %188 = icmp ugt i8 %187, 9
  br i1 %188, label %115, label %189

189:                                              ; preds = %184
  %190 = sext i8 %186 to i32
  %191 = mul nsw i32 %181, 10
  %192 = add nsw i32 %191, -480
  %193 = add nsw i32 %192, %190
  %194 = add nsw i32 %193, -48
  %195 = add nsw i32 %193, -49
  %196 = icmp ugt i32 %195, 30
  br i1 %196, label %115, label %197

197:                                              ; preds = %189
  br i1 %15, label %199, label %198

198:                                              ; preds = %197
  store i32 %194, i32* %19, align 4
  br label %199

199:                                              ; preds = %198, %197
  %200 = getelementptr inbounds i8, i8* %10, i64 8
  %201 = load i8, i8* %200, align 1
  %202 = sext i8 %201 to i32
  %203 = add i8 %201, -48
  %204 = icmp ult i8 %203, 10
  br i1 %204, label %205, label %115

205:                                              ; preds = %199
  %206 = getelementptr inbounds i8, i8* %10, i64 9
  %207 = load i8, i8* %206, align 1
  %208 = add i8 %207, -48
  %209 = icmp ugt i8 %208, 9
  br i1 %209, label %115, label %210

210:                                              ; preds = %205
  %211 = sext i8 %207 to i32
  %212 = mul nsw i32 %202, 10
  %213 = add nsw i32 %212, -480
  %214 = add nsw i32 %213, %211
  %215 = add nsw i32 %214, -48
  %216 = icmp ugt i32 %215, 23
  br i1 %216, label %115, label %217

217:                                              ; preds = %210
  br i1 %15, label %219, label %218

218:                                              ; preds = %217
  store i32 %215, i32* %18, align 8
  br label %219

219:                                              ; preds = %218, %217
  %220 = getelementptr inbounds i8, i8* %10, i64 10
  %221 = load i8, i8* %220, align 1
  %222 = sext i8 %221 to i32
  %223 = add i8 %221, -48
  %224 = icmp ult i8 %223, 10
  br i1 %224, label %225, label %115

225:                                              ; preds = %219
  %226 = getelementptr inbounds i8, i8* %10, i64 11
  %227 = load i8, i8* %226, align 1
  %228 = add i8 %227, -48
  %229 = icmp ugt i8 %228, 9
  br i1 %229, label %115, label %230

230:                                              ; preds = %225
  %231 = sext i8 %227 to i32
  %232 = mul nsw i32 %222, 10
  %233 = add nsw i32 %232, -480
  %234 = add nsw i32 %233, %231
  %235 = add nsw i32 %234, -48
  %236 = icmp ugt i32 %235, 59
  br i1 %236, label %115, label %237

237:                                              ; preds = %230
  br i1 %15, label %239, label %238

238:                                              ; preds = %237
  store i32 %235, i32* %17, align 4
  br label %239

239:                                              ; preds = %237, %238
  %240 = getelementptr inbounds i8, i8* %10, i64 12
  %241 = load i8, i8* %240, align 1
  switch i8 %241, label %242 [
    i8 90, label %12
    i8 43, label %12
    i8 45, label %12
  ]

242:                                              ; preds = %239
  %243 = sext i8 %241 to i32
  %244 = add i8 %241, -48
  %245 = icmp ult i8 %244, 10
  br i1 %245, label %246, label %115

246:                                              ; preds = %242
  %247 = getelementptr inbounds i8, i8* %10, i64 13
  %248 = load i8, i8* %247, align 1
  %249 = add i8 %248, -48
  %250 = icmp ugt i8 %249, 9
  br i1 %250, label %115, label %251

251:                                              ; preds = %246
  %252 = sext i8 %248 to i32
  %253 = mul nsw i32 %243, 10
  %254 = add nsw i32 %253, -480
  %255 = add nsw i32 %254, %252
  %256 = add nsw i32 %255, -48
  %257 = icmp slt i32 %8, 14
  %258 = icmp ugt i32 %256, 59
  %259 = or i1 %258, %257
  br i1 %259, label %115, label %260

260:                                              ; preds = %251
  br i1 %15, label %42, label %261

261:                                              ; preds = %260
  store i32 %256, i32* %16, align 8
  br label %42
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @OPENSSL_gmtime_adj(%struct.tm*, i32, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ASN1_GENERALIZEDTIME_check(%struct.asn1_string_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = tail call i32 @asn1_generalizedtime_to_tm(%struct.tm* null, %struct.asn1_string_st* %0)
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ASN1_GENERALIZEDTIME_set_string(%struct.asn1_string_st*, i8*) local_unnamed_addr #0 {
  %3 = alloca %struct.asn1_string_st, align 8
  %4 = bitcast %struct.asn1_string_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #4
  %5 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %3, i64 0, i32 0
  %6 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %3, i64 0, i32 1
  %7 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %3, i64 0, i32 2
  %8 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %3, i64 0, i32 3
  store i64 -6148914691236517206, i64* %8, align 8
  store i32 24, i32* %6, align 4
  %9 = tail call i64 @strlen(i8* %1) #5
  %10 = trunc i64 %9 to i32
  store i32 %10, i32* %5, align 8
  store i8* %1, i8** %7, align 8
  %11 = call i32 @asn1_generalizedtime_to_tm(%struct.tm* null, %struct.asn1_string_st* nonnull %3) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %2
  %14 = icmp eq %struct.asn1_string_st* %0, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %13
  %16 = tail call i32 @ASN1_STRING_set(%struct.asn1_string_st* nonnull %0, i8* %1, i32 %10) #4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %0, i64 0, i32 1
  store i32 24, i32* %19, align 4
  br label %20

20:                                               ; preds = %2, %18, %13, %15
  %21 = phi i32 [ 0, %15 ], [ 1, %13 ], [ 1, %18 ], [ 0, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #4
  ret i32 %21
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

declare i32 @ASN1_STRING_set(%struct.asn1_string_st*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.asn1_string_st* @ASN1_GENERALIZEDTIME_set(%struct.asn1_string_st*, i64) local_unnamed_addr #0 {
  %3 = tail call %struct.asn1_string_st* @ASN1_GENERALIZEDTIME_adj(%struct.asn1_string_st* %0, i64 %1, i32 0, i64 0)
  ret %struct.asn1_string_st* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.asn1_string_st* @ASN1_GENERALIZEDTIME_adj(%struct.asn1_string_st*, i64, i32, i64) local_unnamed_addr #0 {
  %5 = alloca i64, align 8
  %6 = alloca %struct.tm, align 8
  store i64 %1, i64* %5, align 8
  %7 = bitcast %struct.tm* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %7) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 56, i1 false)
  %8 = icmp eq %struct.asn1_string_st* %0, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = tail call %struct.asn1_string_st* @ASN1_GENERALIZEDTIME_new() #4
  %11 = icmp eq %struct.asn1_string_st* %10, null
  br i1 %11, label %60, label %12

12:                                               ; preds = %4, %9
  %13 = phi %struct.asn1_string_st* [ %10, %9 ], [ %0, %4 ]
  %14 = call %struct.tm* @OPENSSL_gmtime(i64* nonnull %5, %struct.tm* nonnull %6) #4
  %15 = icmp eq %struct.tm* %14, null
  br i1 %15, label %58, label %16

16:                                               ; preds = %12
  %17 = icmp ne i32 %2, 0
  %18 = icmp ne i64 %3, 0
  %19 = or i1 %17, %18
  br i1 %19, label %20, label %23

20:                                               ; preds = %16
  %21 = call i32 @OPENSSL_gmtime_adj(%struct.tm* nonnull %14, i32 %2, i64 %3) #4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %58, label %23

23:                                               ; preds = %20, %16
  %24 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %13, i64 0, i32 2
  %25 = load i8*, i8** %24, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %13, i64 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = icmp ult i32 %29, 20
  br i1 %30, label %31, label %37

31:                                               ; preds = %27, %23
  %32 = call i8* @OPENSSL_malloc(i64 20) #4
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @ERR_put_error(i32 12, i32 0, i32 65, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 244) #4
  br label %58

35:                                               ; preds = %31
  %36 = load i8*, i8** %24, align 8
  call void @OPENSSL_free(i8* %36) #4
  store i8* %32, i8** %24, align 8
  br label %37

37:                                               ; preds = %35, %27
  %38 = phi i8* [ %32, %35 ], [ %25, %27 ]
  %39 = getelementptr inbounds %struct.tm, %struct.tm* %14, i64 0, i32 5
  %40 = load i32, i32* %39, align 4
  %41 = add nsw i32 %40, 1900
  %42 = getelementptr inbounds %struct.tm, %struct.tm* %14, i64 0, i32 4
  %43 = load i32, i32* %42, align 8
  %44 = add nsw i32 %43, 1
  %45 = getelementptr inbounds %struct.tm, %struct.tm* %14, i64 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %struct.tm, %struct.tm* %14, i64 0, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = getelementptr inbounds %struct.tm, %struct.tm* %14, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %struct.tm, %struct.tm* %14, i64 0, i32 0
  %52 = load i32, i32* %51, align 8
  %53 = call i32 (i8*, i64, i8*, ...) @BIO_snprintf(i8* nonnull %38, i64 20, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i32 %41, i32 %44, i32 %46, i32 %48, i32 %50, i32 %52) #4
  %54 = call i64 @strlen(i8* nonnull %38) #5
  %55 = trunc i64 %54 to i32
  %56 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %13, i64 0, i32 0
  store i32 %55, i32* %56, align 8
  %57 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %13, i64 0, i32 1
  store i32 24, i32* %57, align 4
  br label %60

58:                                               ; preds = %20, %12, %34
  br i1 %8, label %59, label %60

59:                                               ; preds = %58
  call void @ASN1_GENERALIZEDTIME_free(%struct.asn1_string_st* nonnull %13) #4
  br label %60

60:                                               ; preds = %58, %59, %9, %37
  %61 = phi %struct.asn1_string_st* [ %13, %37 ], [ null, %9 ], [ null, %59 ], [ null, %58 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %7) #4
  ret %struct.asn1_string_st* %61
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %struct.asn1_string_st* @ASN1_GENERALIZEDTIME_new() local_unnamed_addr #2

declare %struct.tm* @OPENSSL_gmtime(i64*, %struct.tm*) local_unnamed_addr #2

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #2

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

declare i32 @BIO_snprintf(i8*, i64, i8*, ...) local_unnamed_addr #2

declare void @ASN1_GENERALIZEDTIME_free(%struct.asn1_string_st*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
