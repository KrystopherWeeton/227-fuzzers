; ModuleID = '../../third_party/webrtc/api/ice_transport_factory.cc'
source_filename = "../../third_party/webrtc/api/ice_transport_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.rtc::scoped_refptr" = type { %"class.webrtc::IceTransportInterface"* }
%"class.webrtc::IceTransportInterface" = type { %"class.rtc::RefCountInterface" }
%"class.rtc::RefCountInterface" = type { i32 (...)** }
%"class.cricket::PortAllocator" = type <{ %"class.sigslot::has_slots", %"class.sigslot::signal_with_thread_policy", i8, [3 x i8], i32, %"class.std::__1::basic_string", %"struct.rtc::ProxyInfo", i32, i32, i32, i32, i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.webrtc::SequenceChecker", [7 x i8], %"class.std::__1::set.18", %"class.std::__1::vector", i32, [4 x i8], %"class.std::__1::vector.47", i8, [3 x i8], i32, %"class.webrtc::TurnCustomizer"*, %"class.absl::optional", i8, [7 x i8] }>
%"class.sigslot::has_slots" = type { %"class.sigslot::has_slots_interface", %"class.std::__1::set" }
%"class.sigslot::has_slots_interface" = type { i32 (...)**, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*)* }
%"class.sigslot::_signal_base_interface" = type { void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*)*, void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"*)* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.sigslot::signal_with_thread_policy" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::_signal_base.base" = type <{ %"class.sigslot::_signal_base_interface", %"class.std::__1::list", %"class.std::__1::__list_iterator", i8 }>
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.4" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"struct.rtc::ProxyInfo" = type { i32, [4 x i8], %"class.rtc::SocketAddress", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.rtc::CryptString" }
%"class.rtc::SocketAddress" = type <{ %"class.std::__1::basic_string", %"class.rtc::IPAddress", i16, [2 x i8], i32, i8, [7 x i8] }>
%"class.rtc::IPAddress" = type <{ i32 (...)**, i32, %union.anon.13, [4 x i8] }>
%union.anon.13 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.14 }
%union.anon.14 = type { [4 x i32] }
%"class.rtc::CryptString" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.rtc::CryptStringImpl"* }
%"class.rtc::CryptStringImpl" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.webrtc::SequenceChecker" = type { i8 }
%"class.std::__1::set.18" = type { %"class.std::__1::__tree.19" }
%"class.std::__1::__tree.19" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cricket::RelayServerConfig"*, %"struct.cricket::RelayServerConfig"*, %"class.std::__1::__compressed_pair.42" }
%"struct.cricket::RelayServerConfig" = type { %"class.std::__1::vector.28", %"struct.cricket::RelayCredentials", i32, i32, %"class.std::__1::vector.35", %"class.std::__1::vector.35", %"class.rtc::SSLCertificateVerifier"*, %"class.std::__1::basic_string" }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"struct.cricket::ProtocolAddress"*, %"struct.cricket::ProtocolAddress"*, %"class.std::__1::__compressed_pair.30" }
%"struct.cricket::ProtocolAddress" = type { %"class.rtc::SocketAddress", i32, [4 x i8] }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.cricket::ProtocolAddress"* }
%"struct.cricket::RelayCredentials" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.std::__1::basic_string"* }
%"class.rtc::SSLCertificateVerifier" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.cricket::RelayServerConfig"* }
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { %"class.std::__1::unique_ptr.49"*, %"class.std::__1::unique_ptr.49"*, %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.cricket::PortAllocatorSession"* }
%"class.cricket::PortAllocatorSession" = type <{ %"class.sigslot::has_slots", %"class.sigslot::signal_with_thread_policy.52", %"class.sigslot::signal_with_thread_policy.54", %"class.sigslot::signal_with_thread_policy.56", %"class.sigslot::signal_with_thread_policy.58", %"class.sigslot::signal_with_thread_policy.56", %"class.sigslot::signal_with_thread_policy.60", %"class.sigslot::signal_with_thread_policy.62", %"class.sigslot::signal_with_thread_policy.60", i32, i32, %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.sigslot::signal_with_thread_policy.52" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.54" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.58" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.56" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.62" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.60" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::unique_ptr.49"* }
%"class.webrtc::TurnCustomizer" = type opaque
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.72 }
%union.anon.72 = type { i32 }
%"struct.webrtc::IceTransportInit" = type { %"class.cricket::PortAllocator"*, %"class.webrtc::AsyncDnsResolverFactoryInterface"*, %"class.webrtc::AsyncResolverFactory"*, %"class.webrtc::RtcEventLog"* }
%"class.webrtc::AsyncDnsResolverFactoryInterface" = type { i32 (...)** }
%"class.webrtc::AsyncResolverFactory" = type { i32 (...)** }
%"class.webrtc::RtcEventLog" = type { i32 (...)** }
%"class.cricket::P2PTransportChannel" = type { %"class.cricket::IceTransportInternal", %"class.webrtc::ScopedTaskSafety", %"class.std::__1::basic_string", i32, %"class.cricket::PortAllocator"*, %"class.webrtc::AsyncDnsResolverFactoryInterface"*, %"class.std::__1::unique_ptr.103", %"class.rtc::Thread"*, i8, i32, %"class.std::__1::vector.47", %"class.std::__1::vector.137", %"class.std::__1::vector.137", %"class.cricket::Connection"*, %"class.std::__1::vector.273", i8, i8, %"class.std::__1::map.280", %"struct.cricket::IceParameters", %"class.std::__1::vector.291", i32, i32, i64, i32, %"class.std::__1::unique_ptr.298", i64, i32, i32, i32, %"struct.cricket::IceConfig", i32, i8, i32, i8, i8, i8, %"class.absl::optional.315", %"class.webrtc::IceEventLog", %"class.std::__1::unique_ptr.320", %"class.std::__1::vector.326", i32, i64, %"struct.cricket::IceFieldTrials" }
%"class.cricket::IceTransportInternal" = type { %"class.rtc::PacketTransportInternal", %"class.sigslot::signal_with_thread_policy.85", %"class.sigslot::signal_with_thread_policy.87", %"class.sigslot::signal_with_thread_policy.89", %"class.sigslot::signal_with_thread_policy.91", %"class.sigslot::signal_with_thread_policy.87", %"class.sigslot::signal_with_thread_policy.93", %"class.sigslot::signal_with_thread_policy.85", %"class.sigslot::signal_with_thread_policy.85", %"class.sigslot::signal_with_thread_policy.85", %"class.sigslot::signal_with_thread_policy.85" }
%"class.rtc::PacketTransportInternal" = type { %"class.sigslot::has_slots", %"class.sigslot::signal_with_thread_policy.77", %"class.sigslot::signal_with_thread_policy.77", %"class.sigslot::signal_with_thread_policy.77", %"class.sigslot::signal_with_thread_policy.79", %"class.sigslot::signal_with_thread_policy.81", %"class.sigslot::signal_with_thread_policy.83", %"class.sigslot::signal_with_thread_policy.77" }
%"class.sigslot::signal_with_thread_policy.79" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.81" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.83" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.77" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.89" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.91" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.87" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.93" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.85" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.webrtc::ScopedTaskSafety" = type { %"class.rtc::scoped_refptr.101" }
%"class.rtc::scoped_refptr.101" = type { %"class.webrtc::PendingTaskSafetyFlag"* }
%"class.webrtc::PendingTaskSafetyFlag" = type <{ %"class.rtc::RefCountedNonVirtual", i8, [3 x i8] }>
%"class.rtc::RefCountedNonVirtual" = type { %"class.webrtc::webrtc_impl::RefCounter" }
%"class.webrtc::webrtc_impl::RefCounter" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.102" }
%"struct.std::__1::__atomic_base.102" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.webrtc::AsyncDnsResolverFactoryInterface"* }
%"class.rtc::Thread" = type <{ %"class.webrtc::TaskQueueBase", i8, [7 x i8], %"struct.rtc::Message", %"class.std::__1::list.109", %"class.rtc::Thread::PriorityQueue", i32, [4 x i8], %"class.rtc::RecursiveCriticalSection", i8, i8, [2 x i8], i32, %"class.rtc::SocketServer"*, %"class.std::__1::unique_ptr.125", %"class.std::__1::basic_string", i64, i8, i8, [6 x i8], %"class.rtc::Thread::QueuedTaskHandler", %"class.std::__1::unique_ptr.131", i32, [4 x i8] }>
%"class.webrtc::TaskQueueBase" = type { i32 (...)** }
%"struct.rtc::Message" = type { %"class.rtc::Location", %"class.rtc::MessageHandler"*, i32, %"class.rtc::MessageData"* }
%"class.rtc::Location" = type <{ i8*, i8*, i32, [4 x i8] }>
%"class.rtc::MessageHandler" = type { i32 (...)** }
%"class.rtc::MessageData" = type { i32 (...)** }
%"class.std::__1::list.109" = type { %"class.std::__1::__list_imp.110" }
%"class.std::__1::__list_imp.110" = type { %"struct.std::__1::__list_node_base.111", %"class.std::__1::__compressed_pair.112" }
%"struct.std::__1::__list_node_base.111" = type { %"struct.std::__1::__list_node_base.111"*, %"struct.std::__1::__list_node_base.111"* }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.rtc::Thread::PriorityQueue" = type { %"class.std::__1::priority_queue.base", [7 x i8] }
%"class.std::__1::priority_queue.base" = type <{ %"class.std::__1::vector.116", %"struct.std::__1::less.123" }>
%"class.std::__1::vector.116" = type { %"class.std::__1::__vector_base.117" }
%"class.std::__1::__vector_base.117" = type { %"class.rtc::Thread::DelayedMessage"*, %"class.rtc::Thread::DelayedMessage"*, %"class.std::__1::__compressed_pair.118" }
%"class.rtc::Thread::DelayedMessage" = type { i64, i64, i32, %"struct.rtc::Message" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.rtc::Thread::DelayedMessage"* }
%"struct.std::__1::less.123" = type { i8 }
%"class.rtc::RecursiveCriticalSection" = type <{ %union.pthread_mutex_t, i64, i32, [4 x i8] }>
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.rtc::SocketServer" = type { %"class.rtc::SocketFactory", %"class.rtc::NetworkBinderInterface"* }
%"class.rtc::SocketFactory" = type { i32 (...)** }
%"class.rtc::NetworkBinderInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.rtc::SocketServer"* }
%"class.rtc::Thread::QueuedTaskHandler" = type { %"class.rtc::MessageHandler" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.webrtc::TaskQueueBase::CurrentTaskQueueSetter"* }
%"class.webrtc::TaskQueueBase::CurrentTaskQueueSetter" = type { %"class.webrtc::TaskQueueBase"* }
%"class.std::__1::vector.137" = type { %"class.std::__1::__vector_base.138" }
%"class.std::__1::__vector_base.138" = type { %"class.cricket::PortInterface"**, %"class.cricket::PortInterface"**, %"class.std::__1::__compressed_pair.147" }
%"class.cricket::PortInterface" = type { i32 (...)**, %"class.sigslot::signal_with_thread_policy.139", %"class.sigslot::signal_with_thread_policy.141", %"class.sigslot::signal_with_thread_policy.143", %"class.sigslot::signal_with_thread_policy.145" }
%"class.sigslot::signal_with_thread_policy.139" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.141" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.143" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.145" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.cricket::PortInterface"** }
%"class.cricket::Connection" = type { %"class.cricket::CandidatePairInterface", %"class.rtc::MessageHandlerAutoCleanup", %"class.sigslot::has_slots", %"class.sigslot::signal_with_thread_policy.152", %"class.sigslot::signal_with_thread_policy.152", %"class.sigslot::signal_with_thread_policy.154", %"class.sigslot::signal_with_thread_policy.152", %"class.sigslot::signal_with_thread_policy.152", i32, %"class.cricket::Port"*, i64, %"class.cricket::Candidate", %"struct.cricket::ConnectionInfo", %"class.rtc::RateTracker", %"class.rtc::RateTracker", i64, i32, i8, i8, i8, i8, i8, i32, i32, i32, i32, %"class.cricket::StunRequestManager", i32, i32, i64, %"class.absl::optional.195", i64, i64, i64, i64, i64, %"class.std::__1::vector.213", %"class.absl::optional.220", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", i8, i32, %"class.absl::optional", i64, i32, %"class.absl::optional.225", %"class.webrtc::IceEventLog"*, %"class.absl::optional.249", %"class.std::__1::unique_ptr.254", %"struct.cricket::IceFieldTrials"*, %"class.rtc::EventBasedExponentialMovingAverage" }
%"class.cricket::CandidatePairInterface" = type { i32 (...)** }
%"class.rtc::MessageHandlerAutoCleanup" = type { %"class.rtc::MessageHandler" }
%"class.sigslot::signal_with_thread_policy.154" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.152" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.cricket::Port" = type { %"class.cricket::PortInterface", %"class.rtc::MessageHandler", %"class.sigslot::has_slots", %"class.sigslot::signal_with_thread_policy.156", %"class.sigslot::signal_with_thread_policy.158", %"class.sigslot::signal_with_thread_policy.160", %"class.sigslot::signal_with_thread_policy.160", %"class.sigslot::signal_with_thread_policy.162", %"class.rtc::Thread"*, %"class.rtc::PacketSocketFactory"*, %"class.std::__1::basic_string", i8, %"class.rtc::Network"*, i16, i16, %"class.std::__1::basic_string", i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.173", %"class.std::__1::map", i32, i8, i32, i64, i8, %"class.std::__1::basic_string", %"struct.rtc::ProxyInfo", i16, i32, i64, i32, %"class.rtc::WeakPtrFactory", %"class.webrtc::CallbackList" }
%"class.sigslot::signal_with_thread_policy.156" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.158" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.160" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.162" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.rtc::PacketSocketFactory" = type { i32 (...)** }
%"class.rtc::Network" = type { %"class.sigslot::signal_with_thread_policy.164", %"class.sigslot::signal_with_thread_policy.164", %"class.rtc::DefaultLocalAddressProvider"*, %"class.rtc::MdnsResponderProvider"*, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.rtc::IPAddress", i32, %"class.std::__1::basic_string", %"class.std::__1::vector.166", i32, i8, i32, i32, i32, i8, i16, i8, i32 }
%"class.sigslot::signal_with_thread_policy.164" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.rtc::DefaultLocalAddressProvider" = type { i32 (...)** }
%"class.rtc::MdnsResponderProvider" = type { i32 (...)** }
%"class.std::__1::vector.166" = type { %"class.std::__1::__vector_base.167" }
%"class.std::__1::__vector_base.167" = type { %"class.rtc::InterfaceAddress"*, %"class.rtc::InterfaceAddress"*, %"class.std::__1::__compressed_pair.168" }
%"class.rtc::InterfaceAddress" = type { %"class.rtc::IPAddress.base", i32 }
%"class.rtc::IPAddress.base" = type <{ i32 (...)**, i32, %union.anon.13 }>
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.rtc::InterfaceAddress"* }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"class.cricket::Candidate"*, %"class.cricket::Candidate"*, %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.cricket::Candidate"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree.180" }
%"class.std::__1::__tree.180" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.181", %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.rtc::WeakPtrFactory" = type { %"class.rtc::internal::WeakReferenceOwner", %"class.cricket::Port"* }
%"class.rtc::internal::WeakReferenceOwner" = type { %"class.rtc::scoped_refptr.187" }
%"class.rtc::scoped_refptr.187" = type { %"class.rtc::RefCountedObject"* }
%"class.rtc::RefCountedObject" = type { %"class.rtc::internal::WeakReference::Flag.base", %"class.webrtc::webrtc_impl::RefCounter" }
%"class.rtc::internal::WeakReference::Flag.base" = type <{ %"class.rtc::RefCountInterface", i8 }>
%"class.webrtc::CallbackList" = type { %"class.webrtc::callback_list_impl::CallbackListReceivers" }
%"class.webrtc::callback_list_impl::CallbackListReceivers" = type <{ %"class.std::__1::vector.188", i8, [7 x i8] }>
%"class.std::__1::vector.188" = type { %"class.std::__1::__vector_base.189" }
%"class.std::__1::__vector_base.189" = type { %"struct.webrtc::callback_list_impl::CallbackListReceivers::Callback"*, %"struct.webrtc::callback_list_impl::CallbackListReceivers::Callback"*, %"class.std::__1::__compressed_pair.190" }
%"struct.webrtc::callback_list_impl::CallbackListReceivers::Callback" = type { i8*, [8 x i8], %"class.webrtc::UntypedFunction" }
%"class.webrtc::UntypedFunction" = type { %"union.webrtc::webrtc_function_impl::VoidUnion", void ()*, void (%"union.webrtc::webrtc_function_impl::VoidUnion"*)* }
%"union.webrtc::webrtc_function_impl::VoidUnion" = type { i8*, [24 x i8] }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"struct.webrtc::callback_list_impl::CallbackListReceivers::Callback"* }
%"class.cricket::Candidate" = type { %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.rtc::SocketAddress", i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, %"class.std::__1::basic_string", %"class.rtc::SocketAddress", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, i16, %"class.std::__1::basic_string" }
%"struct.cricket::ConnectionInfo" = type { i8, i8, i8, i8, i8, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.cricket::Candidate", %"class.cricket::Candidate", i8*, i32, i64, i8, i64, %"class.absl::optional.195" }
%"class.rtc::RateTracker" = type { i32 (...)**, i64, i64, i64*, i64, i64, i64, i64 }
%"class.cricket::StunRequestManager" = type { %"class.sigslot::signal_with_thread_policy.200", %"class.rtc::Thread"*, %"class.std::__1::map.202", %"class.std::__1::basic_string" }
%"class.sigslot::signal_with_thread_policy.200" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.std::__1::map.202" = type { %"class.std::__1::__tree.203" }
%"class.std::__1::__tree.203" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.204", %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::optional.195" = type { %"class.absl::optional_internal::optional_data.196" }
%"class.absl::optional_internal::optional_data.196" = type { %"class.absl::optional_internal::optional_data_base.197" }
%"class.absl::optional_internal::optional_data_base.197" = type { %"class.absl::optional_internal::optional_data_dtor_base.198" }
%"class.absl::optional_internal::optional_data_dtor_base.198" = type { i8, %union.anon.199 }
%union.anon.199 = type { i32 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"struct.cricket::Connection::SentPing"*, %"struct.cricket::Connection::SentPing"*, %"class.std::__1::__compressed_pair.215" }
%"struct.cricket::Connection::SentPing" = type <{ %"class.std::__1::basic_string", i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"struct.cricket::Connection::SentPing"* }
%"class.absl::optional.220" = type { %"class.absl::optional_internal::optional_data.221" }
%"class.absl::optional_internal::optional_data.221" = type { %"class.absl::optional_internal::optional_data_base.222" }
%"class.absl::optional_internal::optional_data_base.222" = type { %"class.absl::optional_internal::optional_data_dtor_base.223" }
%"class.absl::optional_internal::optional_data_dtor_base.223" = type { i8, %union.anon.224 }
%union.anon.224 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.225" = type { %"class.absl::optional_internal::optional_data.226" }
%"class.absl::optional_internal::optional_data.226" = type { %"class.absl::optional_internal::optional_data_base.227" }
%"class.absl::optional_internal::optional_data_base.227" = type { %"class.absl::optional_internal::optional_data_dtor_base.228" }
%"class.absl::optional_internal::optional_data_dtor_base.228" = type { i8, %union.anon.229 }
%union.anon.229 = type { %"class.webrtc::IceCandidatePairDescription" }
%"class.webrtc::IceCandidatePairDescription" = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.absl::optional.249" = type { %"class.absl::optional_internal::optional_data.250" }
%"class.absl::optional_internal::optional_data.250" = type { %"class.absl::optional_internal::optional_data_base.251" }
%"class.absl::optional_internal::optional_data_base.251" = type { %"class.absl::optional_internal::optional_data_dtor_base.252" }
%"class.absl::optional_internal::optional_data_dtor_base.252" = type { i8, %union.anon.253 }
%union.anon.253 = type { i8 }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.cricket::StunMessage"* }
%"class.cricket::StunMessage" = type { i32 (...)**, %"class.std::__1::vector.257", i16, i16, %"class.std::__1::basic_string", i32, i32, %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string" }
%"class.std::__1::vector.257" = type { %"class.std::__1::__vector_base.258" }
%"class.std::__1::__vector_base.258" = type { %"class.std::__1::unique_ptr.259"*, %"class.std::__1::unique_ptr.259"*, %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::unique_ptr.259" = type opaque
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.std::__1::unique_ptr.259"* }
%"class.rtc::EventBasedExponentialMovingAverage" = type { double, double, double, double, %"class.absl::optional.268" }
%"class.absl::optional.268" = type { %"class.absl::optional_internal::optional_data.269" }
%"class.absl::optional_internal::optional_data.269" = type { %"class.absl::optional_internal::optional_data_base.270" }
%"class.absl::optional_internal::optional_data_base.270" = type { %"class.absl::optional_internal::optional_data_dtor_base.271" }
%"class.absl::optional_internal::optional_data_dtor_base.271" = type { i8, %union.anon.272 }
%union.anon.272 = type { i64 }
%"class.std::__1::vector.273" = type { %"class.std::__1::__vector_base.274" }
%"class.std::__1::__vector_base.274" = type { %"class.cricket::RemoteCandidate"*, %"class.cricket::RemoteCandidate"*, %"class.std::__1::__compressed_pair.275" }
%"class.cricket::RemoteCandidate" = type { %"class.cricket::Candidate", %"class.cricket::PortInterface"* }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.cricket::RemoteCandidate"* }
%"class.std::__1::map.280" = type { %"class.std::__1::__tree.281" }
%"class.std::__1::__tree.281" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.282", %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.cricket::IceParameters" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::vector.291" = type { %"class.std::__1::__vector_base.292" }
%"class.std::__1::__vector_base.292" = type { %"struct.cricket::IceParameters"*, %"struct.cricket::IceParameters"*, %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"struct.cricket::IceParameters"* }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.webrtc::BasicRegatheringController"* }
%"class.webrtc::BasicRegatheringController" = type { %"class.sigslot::has_slots", %"class.std::__1::unique_ptr.301", %"struct.webrtc::BasicRegatheringController::Config", %"class.cricket::IceTransportInternal"*, %"class.cricket::PortAllocatorSession"*, %"class.rtc::Thread"* }
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.webrtc::ScopedTaskSafety"* }
%"struct.webrtc::BasicRegatheringController::Config" = type { i32 }
%"struct.cricket::IceConfig" = type { %"class.absl::optional", %"class.absl::optional", i32, i8, %"class.absl::optional", i8, i8, %"class.absl::optional", %"class.absl::optional", i32, %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.310" }
%"class.absl::optional.310" = type { %"class.absl::optional_internal::optional_data.311" }
%"class.absl::optional_internal::optional_data.311" = type { %"class.absl::optional_internal::optional_data_base.312" }
%"class.absl::optional_internal::optional_data_base.312" = type { %"class.absl::optional_internal::optional_data_dtor_base.313" }
%"class.absl::optional_internal::optional_data_dtor_base.313" = type { i8, %union.anon.314 }
%union.anon.314 = type { i32 }
%"class.absl::optional.315" = type { %"class.absl::optional_internal::optional_data.316" }
%"class.absl::optional_internal::optional_data.316" = type { %"class.absl::optional_internal::optional_data_base.317" }
%"class.absl::optional_internal::optional_data_base.317" = type { %"class.absl::optional_internal::optional_data_dtor_base.318" }
%"class.absl::optional_internal::optional_data_dtor_base.318" = type { i8, %union.anon.319 }
%union.anon.319 = type { %"struct.rtc::NetworkRoute" }
%"struct.rtc::NetworkRoute" = type { i8, [3 x i8], %"class.rtc::RouteEndpoint", %"class.rtc::RouteEndpoint", i32, i32 }
%"class.rtc::RouteEndpoint" = type <{ i32, i16, i16, i8, [3 x i8] }>
%"class.webrtc::IceEventLog" = type { %"class.webrtc::RtcEventLog"*, %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.230", %"class.std::__1::__compressed_pair.238", %"class.std::__1::__compressed_pair.243", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232", %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { float }
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.cricket::IceControllerInterface"* }
%"class.cricket::IceControllerInterface" = type { i32 (...)** }
%"class.std::__1::vector.326" = type { %"class.std::__1::__vector_base.327" }
%"class.std::__1::__vector_base.327" = type { %"struct.cricket::P2PTransportChannel::CandidateAndResolver"*, %"struct.cricket::P2PTransportChannel::CandidateAndResolver"*, %"class.std::__1::__compressed_pair.334" }
%"struct.cricket::P2PTransportChannel::CandidateAndResolver" = type { %"class.cricket::Candidate", %"class.std::__1::unique_ptr.328" }
%"class.std::__1::unique_ptr.328" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"class.webrtc::AsyncDnsResolverInterface"* }
%"class.webrtc::AsyncDnsResolverInterface" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.cricket::P2PTransportChannel::CandidateAndResolver"* }
%"struct.cricket::IceFieldTrials" = type <{ i8, [3 x i8], %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.cricket::IceControllerFactoryInterface" = type { i32 (...)** }
%"class.rtc::RefCountedObject.342" = type <{ %"class.webrtc::(anonymous namespace)::IceTransportWithTransportChannel", %"class.webrtc::webrtc_impl::RefCounter", [4 x i8] }>
%"class.webrtc::(anonymous namespace)::IceTransportWithTransportChannel" = type { %"class.webrtc::IceTransportInterface", %"class.webrtc::SequenceChecker", %"class.std::__1::unique_ptr.74" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.cricket::IceTransportInternal"* }

@_ZN7cricket27ICE_CANDIDATE_COMPONENT_RTPE = external local_unnamed_addr constant i32, align 4
@_ZTVN3rtc16RefCountedObjectIN6webrtc12_GLOBAL__N_132IceTransportWithTransportChannelEEE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rtc::RefCountedObject.342"*)* @_ZNK3rtc16RefCountedObjectIN6webrtc12_GLOBAL__N_132IceTransportWithTransportChannelEE6AddRefEv to i8*), i8* bitcast (i32 (%"class.rtc::RefCountedObject.342"*)* @_ZNK3rtc16RefCountedObjectIN6webrtc12_GLOBAL__N_132IceTransportWithTransportChannelEE7ReleaseEv to i8*), i8* bitcast (void (%"class.webrtc::(anonymous namespace)::IceTransportWithTransportChannel"*)* @_ZN6webrtc12_GLOBAL__N_132IceTransportWithTransportChannelD2Ev to i8*), i8* bitcast (void (%"class.rtc::RefCountedObject.342"*)* @_ZN3rtc16RefCountedObjectIN6webrtc12_GLOBAL__N_132IceTransportWithTransportChannelEED0Ev to i8*), i8* bitcast (%"class.cricket::IceTransportInternal"* (%"class.webrtc::(anonymous namespace)::IceTransportWithTransportChannel"*)* @_ZN6webrtc12_GLOBAL__N_132IceTransportWithTransportChannel8internalEv to i8*), i8* bitcast (i1 (%"class.rtc::RefCountedObject.342"*)* @_ZNK3rtc16RefCountedObjectIN6webrtc12_GLOBAL__N_132IceTransportWithTransportChannelEE9HasOneRefEv to i8*)] }, align 8
@_ZTVN6webrtc12_GLOBAL__N_132IceTransportWithTransportChannelE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.webrtc::(anonymous namespace)::IceTransportWithTransportChannel"*)* @_ZN6webrtc12_GLOBAL__N_132IceTransportWithTransportChannelD2Ev to i8*), i8* bitcast (void (%"class.webrtc::(anonymous namespace)::IceTransportWithTransportChannel"*)* @_ZN6webrtc12_GLOBAL__N_132IceTransportWithTransportChannelD0Ev to i8*), i8* bitcast (%"class.cricket::IceTransportInternal"* (%"class.webrtc::(anonymous namespace)::IceTransportWithTransportChannel"*)* @_ZN6webrtc12_GLOBAL__N_132IceTransportWithTransportChannel8internalEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc18CreateIceTransportEPN7cricket13PortAllocatorE(%"class.rtc::scoped_refptr"* noalias nocapture sret, %"class.cricket::PortAllocator"*) local_unnamed_addr #0 {
  %3 = alloca %"struct.webrtc::IceTransportInit", align 8
  %4 = getelementptr inbounds %"struct.webrtc::IceTransportInit", %"struct.webrtc::IceTransportInit"* %3, i64 0, i32 0
  store %"class.cricket::PortAllocator"* %1, %"class.cricket::PortAllocator"** %4, align 8
  %5 = getelementptr inbounds %"struct.webrtc::IceTransportInit", %"struct.webrtc::IceTransportInit"* %3, i64 0, i32 1
  %6 = bitcast %"class.webrtc::AsyncDnsResolverFactoryInterface"** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false)
  tail call void @_ZN6webrtc18CreateIceTransportENS_16IceTransportInitE(%"class.rtc::scoped_refptr"* sret %0, %"struct.webrtc::IceTransportInit"* nonnull byval(%"struct.webrtc::IceTransportInit") align 8 %3)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc18CreateIceTransportENS_16IceTransportInitE(%"class.rtc::scoped_refptr"* noalias nocapture sret, %"struct.webrtc::IceTransportInit"* nocapture readonly byval(%"struct.webrtc::IceTransportInit") align 8) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"struct.webrtc::IceTransportInit", %"struct.webrtc::IceTransportInit"* %1, i64 0, i32 2
  %6 = load %"class.webrtc::AsyncResolverFactory"*, %"class.webrtc::AsyncResolverFactory"** %5, align 8
  %7 = icmp eq %"class.webrtc::AsyncResolverFactory"* %6, null
  br i1 %7, label %34, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.webrtc::IceTransportInit", %"struct.webrtc::IceTransportInit"* %1, i64 0, i32 0
  %10 = load %"class.cricket::PortAllocator"*, %"class.cricket::PortAllocator"** %9, align 8
  %11 = getelementptr inbounds %"struct.webrtc::IceTransportInit", %"struct.webrtc::IceTransportInit"* %1, i64 0, i32 3
  %12 = load %"class.webrtc::RtcEventLog"*, %"class.webrtc::RtcEventLog"** %11, align 8
  %13 = tail call i8* @_Znwm(i64 1680) #9
  %14 = bitcast i8* %13 to %"class.cricket::P2PTransportChannel"*
  %15 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  %16 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  store i8 0, i8* %17, align 1
  store i8 0, i8* %15, align 8
  %18 = load i32, i32* @_ZN7cricket27ICE_CANDIDATE_COMPONENT_RTPE, align 4
  call void @_ZN7cricket19P2PTransportChannelC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiPNS_13PortAllocatorEPN6webrtc20AsyncResolverFactoryEPNSC_11RtcEventLogEPNS_29IceControllerFactoryInterfaceE(%"class.cricket::P2PTransportChannel"* nonnull %14, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i32 %18, %"class.cricket::PortAllocator"* %10, %"class.webrtc::AsyncResolverFactory"* nonnull %6, %"class.webrtc::RtcEventLog"* %12, %"class.cricket::IceControllerFactoryInterface"* null) #10
  %19 = load i8, i8* %17, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %23) #9
  br label %24

24:                                               ; preds = %8, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  %25 = ptrtoint i8* %13 to i64
  %26 = call i8* @_Znwm(i64 32) #9, !noalias !2
  %27 = bitcast i8* %26 to i32 (...)***
  %28 = getelementptr inbounds i8, i8* %26, i64 16
  %29 = bitcast i8* %28 to i64*
  store i64 %25, i64* %29, align 8, !noalias !2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3rtc16RefCountedObjectIN6webrtc12_GLOBAL__N_132IceTransportWithTransportChannelEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8, !noalias !2
  %30 = getelementptr inbounds i8, i8* %26, i64 24
  %31 = bitcast i8* %30 to i32*
  store i32 0, i32* %31, align 4, !noalias !2
  %32 = atomicrmw add i32* %31, i32 1 monotonic, !noalias !2
  %33 = bitcast %"class.rtc::scoped_refptr"* %0 to i8**
  store i8* %26, i8** %33, align 8
  br label %61

34:                                               ; preds = %2
  %35 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #10
  %36 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  store i8 0, i8* %37, align 1
  store i8 0, i8* %35, align 8
  %38 = load i32, i32* @_ZN7cricket27ICE_CANDIDATE_COMPONENT_RTPE, align 4
  %39 = getelementptr inbounds %"struct.webrtc::IceTransportInit", %"struct.webrtc::IceTransportInit"* %1, i64 0, i32 0
  %40 = load %"class.cricket::PortAllocator"*, %"class.cricket::PortAllocator"** %39, align 8
  %41 = getelementptr inbounds %"struct.webrtc::IceTransportInit", %"struct.webrtc::IceTransportInit"* %1, i64 0, i32 1
  %42 = load %"class.webrtc::AsyncDnsResolverFactoryInterface"*, %"class.webrtc::AsyncDnsResolverFactoryInterface"** %41, align 8
  %43 = getelementptr inbounds %"struct.webrtc::IceTransportInit", %"struct.webrtc::IceTransportInit"* %1, i64 0, i32 3
  %44 = load %"class.webrtc::RtcEventLog"*, %"class.webrtc::RtcEventLog"** %43, align 8
  %45 = call %"class.cricket::P2PTransportChannel"* @_ZN7cricket19P2PTransportChannel6CreateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiPNS_13PortAllocatorEPN6webrtc32AsyncDnsResolverFactoryInterfaceEPNSC_11RtcEventLogEPNS_29IceControllerFactoryInterfaceE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i32 %38, %"class.cricket::PortAllocator"* %40, %"class.webrtc::AsyncDnsResolverFactoryInterface"* %42, %"class.webrtc::RtcEventLog"* %44, %"class.cricket::IceControllerFactoryInterface"* null) #10
  %46 = ptrtoint %"class.cricket::P2PTransportChannel"* %45 to i64
  %47 = call i8* @_Znwm(i64 32) #9, !noalias !5
  %48 = bitcast i8* %47 to i32 (...)***
  %49 = getelementptr inbounds i8, i8* %47, i64 16
  %50 = bitcast i8* %49 to i64*
  store i64 %46, i64* %50, align 8, !noalias !5
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3rtc16RefCountedObjectIN6webrtc12_GLOBAL__N_132IceTransportWithTransportChannelEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8, !noalias !5
  %51 = getelementptr inbounds i8, i8* %47, i64 24
  %52 = bitcast i8* %51 to i32*
  store i32 0, i32* %52, align 4, !noalias !5
  %53 = atomicrmw add i32* %52, i32 1 monotonic, !noalias !5
  %54 = bitcast %"class.rtc::scoped_refptr"* %0 to i8**
  store i8* %47, i8** %54, align 8
  %55 = load i8, i8* %37, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %34
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %59) #9
  br label %60

60:                                               ; preds = %34, %57
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #10
  br label %61

61:                                               ; preds = %60, %24
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.cricket::P2PTransportChannel"* @_ZN7cricket19P2PTransportChannel6CreateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiPNS_13PortAllocatorEPN6webrtc32AsyncDnsResolverFactoryInterfaceEPNSC_11RtcEventLogEPNS_29IceControllerFactoryInterfaceE(%"class.std::__1::basic_string"* dereferenceable(24), i32, %"class.cricket::PortAllocator"*, %"class.webrtc::AsyncDnsResolverFactoryInterface"*, %"class.webrtc::RtcEventLog"*, %"class.cricket::IceControllerFactoryInterface"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN7cricket19P2PTransportChannelC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiPNS_13PortAllocatorEPN6webrtc20AsyncResolverFactoryEPNSC_11RtcEventLogEPNS_29IceControllerFactoryInterfaceE(%"class.cricket::P2PTransportChannel"*, %"class.std::__1::basic_string"* dereferenceable(24), i32, %"class.cricket::PortAllocator"*, %"class.webrtc::AsyncResolverFactory"*, %"class.webrtc::RtcEventLog"*, %"class.cricket::IceControllerFactoryInterface"*) unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZNK3rtc16RefCountedObjectIN6webrtc12_GLOBAL__N_132IceTransportWithTransportChannelEE6AddRefEv(%"class.rtc::RefCountedObject.342"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.rtc::RefCountedObject.342", %"class.rtc::RefCountedObject.342"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw add i32* %2, i32 1 monotonic
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZNK3rtc16RefCountedObjectIN6webrtc12_GLOBAL__N_132IceTransportWithTransportChannelEE7ReleaseEv(%"class.rtc::RefCountedObject.342"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.rtc::RefCountedObject.342", %"class.rtc::RefCountedObject.342"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw sub i32* %2, i32 1 acq_rel
  %4 = icmp ne i32 %3, 1
  %5 = zext i1 %4 to i32
  %6 = icmp eq %"class.rtc::RefCountedObject.342"* %0, null
  %7 = or i1 %6, %4
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.rtc::RefCountedObject.342"* %0 to void (%"class.rtc::RefCountedObject.342"*)***
  %10 = load void (%"class.rtc::RefCountedObject.342"*)**, void (%"class.rtc::RefCountedObject.342"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.rtc::RefCountedObject.342"*)*, void (%"class.rtc::RefCountedObject.342"*)** %10, i64 3
  %12 = load void (%"class.rtc::RefCountedObject.342"*)*, void (%"class.rtc::RefCountedObject.342"*)** %11, align 8
  tail call void %12(%"class.rtc::RefCountedObject.342"* nonnull %0) #10
  br label %13

13:                                               ; preds = %1, %8
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6webrtc12_GLOBAL__N_132IceTransportWithTransportChannelD2Ev(%"class.webrtc::(anonymous namespace)::IceTransportWithTransportChannel"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::IceTransportWithTransportChannel", %"class.webrtc::(anonymous namespace)::IceTransportWithTransportChannel"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN6webrtc12_GLOBAL__N_132IceTransportWithTransportChannelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::IceTransportWithTransportChannel", %"class.webrtc::(anonymous namespace)::IceTransportWithTransportChannel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.cricket::IceTransportInternal"*, %"class.cricket::IceTransportInternal"** %3, align 8
  store %"class.cricket::IceTransportInternal"* null, %"class.cricket::IceTransportInternal"** %3, align 8
  %5 = icmp eq %"class.cricket::IceTransportInternal"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.cricket::IceTransportInternal"* %4 to void (%"class.cricket::IceTransportInternal"*)***
  %8 = load void (%"class.cricket::IceTransportInternal"*)**, void (%"class.cricket::IceTransportInternal"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.cricket::IceTransportInternal"*)*, void (%"class.cricket::IceTransportInternal"*)** %8, i64 1
  %10 = load void (%"class.cricket::IceTransportInternal"*)*, void (%"class.cricket::IceTransportInternal"*)** %9, align 8
  tail call void %10(%"class.cricket::IceTransportInternal"* nonnull %4) #10
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3rtc16RefCountedObjectIN6webrtc12_GLOBAL__N_132IceTransportWithTransportChannelEED0Ev(%"class.rtc::RefCountedObject.342"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.rtc::RefCountedObject.342", %"class.rtc::RefCountedObject.342"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN6webrtc12_GLOBAL__N_132IceTransportWithTransportChannelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rtc::RefCountedObject.342", %"class.rtc::RefCountedObject.342"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.cricket::IceTransportInternal"*, %"class.cricket::IceTransportInternal"** %3, align 8
  store %"class.cricket::IceTransportInternal"* null, %"class.cricket::IceTransportInternal"** %3, align 8
  %5 = icmp eq %"class.cricket::IceTransportInternal"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.cricket::IceTransportInternal"* %4 to void (%"class.cricket::IceTransportInternal"*)***
  %8 = load void (%"class.cricket::IceTransportInternal"*)**, void (%"class.cricket::IceTransportInternal"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.cricket::IceTransportInternal"*)*, void (%"class.cricket::IceTransportInternal"*)** %8, i64 1
  %10 = load void (%"class.cricket::IceTransportInternal"*)*, void (%"class.cricket::IceTransportInternal"*)** %9, align 8
  tail call void %10(%"class.cricket::IceTransportInternal"* nonnull %4) #10
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.rtc::RefCountedObject.342"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #9
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define internal %"class.cricket::IceTransportInternal"* @_ZN6webrtc12_GLOBAL__N_132IceTransportWithTransportChannel8internalEv(%"class.webrtc::(anonymous namespace)::IceTransportWithTransportChannel"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::IceTransportWithTransportChannel", %"class.webrtc::(anonymous namespace)::IceTransportWithTransportChannel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.cricket::IceTransportInternal"*, %"class.cricket::IceTransportInternal"** %2, align 8
  ret %"class.cricket::IceTransportInternal"* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal zeroext i1 @_ZNK3rtc16RefCountedObjectIN6webrtc12_GLOBAL__N_132IceTransportWithTransportChannelEE9HasOneRefEv(%"class.rtc::RefCountedObject.342"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.rtc::RefCountedObject.342", %"class.rtc::RefCountedObject.342"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i32, i32* %2 acquire, align 4
  %4 = icmp eq i32 %3, 1
  ret i1 %4
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: noreturn nounwind ssp uwtable
define internal void @_ZN6webrtc12_GLOBAL__N_132IceTransportWithTransportChannelD0Ev(%"class.webrtc::(anonymous namespace)::IceTransportWithTransportChannel"* nocapture readnone) unnamed_addr #7 align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN3rtc16make_ref_countedIN6webrtc12_GLOBAL__N_132IceTransportWithTransportChannelEJNSt3__110unique_ptrIN7cricket19P2PTransportChannelENS4_14default_deleteIS7_EEEEELPS3_0EEENS_13scoped_refptrIT_EEDpOT0_: argument 0"}
!4 = distinct !{!4, !"_ZN3rtc16make_ref_countedIN6webrtc12_GLOBAL__N_132IceTransportWithTransportChannelEJNSt3__110unique_ptrIN7cricket19P2PTransportChannelENS4_14default_deleteIS7_EEEEELPS3_0EEENS_13scoped_refptrIT_EEDpOT0_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN3rtc16make_ref_countedIN6webrtc12_GLOBAL__N_132IceTransportWithTransportChannelEJNSt3__110unique_ptrIN7cricket19P2PTransportChannelENS4_14default_deleteIS7_EEEEELPS3_0EEENS_13scoped_refptrIT_EEDpOT0_: argument 0"}
!7 = distinct !{!7, !"_ZN3rtc16make_ref_countedIN6webrtc12_GLOBAL__N_132IceTransportWithTransportChannelEJNSt3__110unique_ptrIN7cricket19P2PTransportChannelENS4_14default_deleteIS7_EEEEELPS3_0EEENS_13scoped_refptrIT_EEDpOT0_"}
