; ModuleID = '../../third_party/blink/renderer/core/animation/interpolable_aspect_ratio.cc'
source_filename = "../../third_party/blink/renderer/core/animation/interpolable_aspect_ratio.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::InterpolableAspectRatio" = type { %"class.blink::InterpolableValue", %"class.std::__1::unique_ptr.0" }
%"class.blink::InterpolableValue" = type { i32 (...)** }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.blink::InterpolableValue"* }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::InterpolableNumber" = type { %"class.blink::InterpolableValue", double }

$_ZN5blink23InterpolableAspectRatioD2Ev = comdat any

$_ZN5blink23InterpolableAspectRatioD0Ev = comdat any

$_ZNK5blink17InterpolableValue8IsNumberEv = comdat any

$_ZNK5blink17InterpolableValue6IsBoolEv = comdat any

$_ZNK5blink17InterpolableValue6IsListEv = comdat any

$_ZNK5blink17InterpolableValue8IsLengthEv = comdat any

$_ZNK5blink23InterpolableAspectRatio13IsAspectRatioEv = comdat any

$_ZNK5blink17InterpolableValue8IsShadowEv = comdat any

$_ZNK5blink17InterpolableValue8IsFilterEv = comdat any

$_ZNK5blink17InterpolableValue15IsTransformListEv = comdat any

$_ZNK5blink23InterpolableAspectRatio6EqualsERKNS_17InterpolableValueE = comdat any

$_ZN5blink17InterpolableValue11ScaleAndAddEdRKS0_ = comdat any

$_ZNK5blink23InterpolableAspectRatio8RawCloneEv = comdat any

$_ZNK5blink23InterpolableAspectRatio15RawCloneAndZeroEv = comdat any

@_ZTVN5blink23InterpolableAspectRatioE = hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InterpolableAspectRatio"*)* @_ZN5blink23InterpolableAspectRatioD2Ev to i8*), i8* bitcast (void (%"class.blink::InterpolableAspectRatio"*)* @_ZN5blink23InterpolableAspectRatioD0Ev to i8*), i8* bitcast (void (%"class.blink::InterpolableAspectRatio"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)* @_ZNK5blink23InterpolableAspectRatio11InterpolateERKNS_17InterpolableValueEdRS1_ to i8*), i8* bitcast (i1 (%"class.blink::InterpolableValue"*)* @_ZNK5blink17InterpolableValue8IsNumberEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableValue"*)* @_ZNK5blink17InterpolableValue6IsBoolEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableValue"*)* @_ZNK5blink17InterpolableValue6IsListEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableValue"*)* @_ZNK5blink17InterpolableValue8IsLengthEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableAspectRatio"*)* @_ZNK5blink23InterpolableAspectRatio13IsAspectRatioEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableValue"*)* @_ZNK5blink17InterpolableValue8IsShadowEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableValue"*)* @_ZNK5blink17InterpolableValue8IsFilterEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableValue"*)* @_ZNK5blink17InterpolableValue15IsTransformListEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableAspectRatio"*, %"class.blink::InterpolableValue"*)* @_ZNK5blink23InterpolableAspectRatio6EqualsERKNS_17InterpolableValueE to i8*), i8* bitcast (void (%"class.blink::InterpolableAspectRatio"*, double)* @_ZN5blink23InterpolableAspectRatio5ScaleEd to i8*), i8* bitcast (void (%"class.blink::InterpolableAspectRatio"*, %"class.blink::InterpolableValue"*)* @_ZN5blink23InterpolableAspectRatio3AddERKNS_17InterpolableValueE to i8*), i8* bitcast (void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)* @_ZN5blink17InterpolableValue11ScaleAndAddEdRKS0_ to i8*), i8* bitcast (void (%"class.blink::InterpolableAspectRatio"*, %"class.blink::InterpolableValue"*)* @_ZNK5blink23InterpolableAspectRatio24AssertCanInterpolateWithERKNS_17InterpolableValueE to i8*), i8* bitcast (%"class.blink::InterpolableAspectRatio"* (%"class.blink::InterpolableAspectRatio"*)* @_ZNK5blink23InterpolableAspectRatio8RawCloneEv to i8*), i8* bitcast (%"class.blink::InterpolableAspectRatio"* (%"class.blink::InterpolableAspectRatio"*)* @_ZNK5blink23InterpolableAspectRatio15RawCloneAndZeroEv to i8*)] }, align 8
@_ZTVN5blink18InterpolableNumberE = external unnamed_addr constant { [20 x i8*] }, align 8

@_ZN5blink23InterpolableAspectRatioC1ERKNS_9FloatSizeE = hidden unnamed_addr alias void (%"class.blink::InterpolableAspectRatio"*, %"class.blink::FloatSize"*), void (%"class.blink::InterpolableAspectRatio"*, %"class.blink::FloatSize"*)* @_ZN5blink23InterpolableAspectRatioC2ERKNS_9FloatSizeE

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InterpolableAspectRatio"* @_ZN5blink23InterpolableAspectRatio11MaybeCreateERKNS_16StyleAspectRatioE(%"class.blink::StyleAspectRatio"* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleAspectRatio", %"class.blink::StyleAspectRatio"* %0, i64 0, i32 1, i32 0
  %3 = load float, float* %2, align 4
  %4 = fcmp oeq float %3, 0.000000e+00
  br i1 %4, label %36, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleAspectRatio", %"class.blink::StyleAspectRatio"* %0, i64 0, i32 1, i32 1
  %7 = load float, float* %6, align 4
  %8 = fcmp oeq float %7, 0.000000e+00
  %9 = fcmp olt float %3, 1.562500e-02
  %10 = or i1 %9, %8
  %11 = fcmp olt float %7, 1.562500e-02
  %12 = or i1 %11, %10
  br i1 %12, label %36, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.blink::StyleAspectRatio", %"class.blink::StyleAspectRatio"* %0, i64 0, i32 0
  %15 = load i8, i8* %14, align 4
  %16 = and i8 %15, 3
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %36, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::StyleAspectRatio", %"class.blink::StyleAspectRatio"* %0, i64 0, i32 1
  %20 = bitcast %"class.blink::FloatSize"* %19 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 4
  %22 = tail call noalias i8* @malloc(i64 16) #6
  %23 = bitcast i8* %22 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink23InterpolableAspectRatioE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds i8, i8* %22, i64 8
  %25 = extractelement <2 x float> %21, i32 0
  %26 = extractelement <2 x float> %21, i32 1
  %27 = fdiv float %25, %26
  %28 = tail call float @logf(float %27) #6
  %29 = tail call noalias i8* @malloc(i64 16) #6
  %30 = fpext float %28 to double
  %31 = bitcast i8* %29 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %32 = getelementptr inbounds i8, i8* %29, i64 8
  %33 = bitcast i8* %32 to double*
  store double %30, double* %33, align 8
  %34 = bitcast i8* %24 to i8**
  store i8* %29, i8** %34, align 8
  %35 = bitcast i8* %22 to %"class.blink::InterpolableAspectRatio"*
  br label %36

36:                                               ; preds = %1, %5, %13, %18
  %37 = phi %"class.blink::InterpolableAspectRatio"* [ %35, %18 ], [ null, %13 ], [ null, %5 ], [ null, %1 ]
  ret %"class.blink::InterpolableAspectRatio"* %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InterpolableAspectRatioC2ERKNS_9FloatSizeE(%"class.blink::InterpolableAspectRatio"* nocapture, %"class.blink::FloatSize"* nocapture readonly dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::InterpolableAspectRatio", %"class.blink::InterpolableAspectRatio"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink23InterpolableAspectRatioE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::InterpolableAspectRatio", %"class.blink::InterpolableAspectRatio"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::unique_ptr.0"* %4 to i64*
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %1, i64 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %1, i64 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = fdiv float %7, %9
  %11 = tail call float @logf(float %10) #6
  %12 = tail call noalias i8* @malloc(i64 16) #6
  %13 = fpext float %11 to double
  %14 = bitcast i8* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds i8, i8* %12, i64 8
  %16 = bitcast i8* %15 to double*
  store double %13, double* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %4, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %17, align 8
  %19 = bitcast %"class.std::__1::unique_ptr.0"* %4 to i8**
  store i8* %12, i8** %19, align 8
  %20 = icmp eq %"class.blink::InterpolableValue"* %18, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %2
  %22 = bitcast %"class.blink::InterpolableValue"* %18 to void (%"class.blink::InterpolableValue"*)***
  %23 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %23, i64 1
  %25 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %24, align 8
  tail call void %25(%"class.blink::InterpolableValue"* nonnull %18) #6
  br label %26

26:                                               ; preds = %21, %2
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden <2 x float> @_ZNK5blink23InterpolableAspectRatio8GetRatioEv(%"class.blink::InterpolableAspectRatio"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolableAspectRatio", %"class.blink::InterpolableAspectRatio"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = bitcast %"class.blink::InterpolableValue"** %2 to %"class.blink::InterpolableNumber"**
  %4 = load %"class.blink::InterpolableNumber"*, %"class.blink::InterpolableNumber"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::InterpolableNumber", %"class.blink::InterpolableNumber"* %4, i64 0, i32 1
  %6 = load double, double* %5, align 8
  %7 = tail call double @exp(double %6) #6
  %8 = fptrunc double %7 to float
  %9 = insertelement <2 x float> <float undef, float 1.000000e+00>, float %8, i32 0
  ret <2 x float> %9
}

; Function Attrs: nofree nounwind
declare double @exp(double) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InterpolableAspectRatio5ScaleEd(%"class.blink::InterpolableAspectRatio"* nocapture readonly, double) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::InterpolableAspectRatio", %"class.blink::InterpolableAspectRatio"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %3, align 8
  %5 = bitcast %"class.blink::InterpolableValue"* %4 to void (%"class.blink::InterpolableValue"*, double)***
  %6 = load void (%"class.blink::InterpolableValue"*, double)**, void (%"class.blink::InterpolableValue"*, double)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, double)*, void (%"class.blink::InterpolableValue"*, double)** %6, i64 12
  %8 = load void (%"class.blink::InterpolableValue"*, double)*, void (%"class.blink::InterpolableValue"*, double)** %7, align 8
  tail call void %8(%"class.blink::InterpolableValue"* %4, double %1) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InterpolableAspectRatio3AddERKNS_17InterpolableValueE(%"class.blink::InterpolableAspectRatio"* nocapture readonly, %"class.blink::InterpolableValue"* nocapture readonly dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::InterpolableAspectRatio", %"class.blink::InterpolableAspectRatio"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %1, i64 1
  %6 = bitcast %"class.blink::InterpolableValue"* %5 to %"class.blink::InterpolableValue"**
  %7 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %6, align 8
  %8 = bitcast %"class.blink::InterpolableValue"* %4 to void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)***
  %9 = load void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)** %9, i64 13
  %11 = load void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)** %10, align 8
  tail call void %11(%"class.blink::InterpolableValue"* %4, %"class.blink::InterpolableValue"* dereferenceable(8) %7) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23InterpolableAspectRatio24AssertCanInterpolateWithERKNS_17InterpolableValueE(%"class.blink::InterpolableAspectRatio"* nocapture readonly, %"class.blink::InterpolableValue"* nocapture readonly dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::InterpolableAspectRatio", %"class.blink::InterpolableAspectRatio"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %1, i64 1
  %6 = bitcast %"class.blink::InterpolableValue"* %5 to %"class.blink::InterpolableValue"**
  %7 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %6, align 8
  %8 = bitcast %"class.blink::InterpolableValue"* %4 to void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)***
  %9 = load void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)** %9, i64 15
  %11 = load void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)** %10, align 8
  tail call void %11(%"class.blink::InterpolableValue"* %4, %"class.blink::InterpolableValue"* dereferenceable(8) %7) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23InterpolableAspectRatio11InterpolateERKNS_17InterpolableValueEdRS1_(%"class.blink::InterpolableAspectRatio"* nocapture readonly, %"class.blink::InterpolableValue"* nocapture readonly dereferenceable(8), double, %"class.blink::InterpolableValue"* nocapture readonly dereferenceable(8)) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.blink::InterpolableAspectRatio", %"class.blink::InterpolableAspectRatio"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %1, i64 1
  %8 = bitcast %"class.blink::InterpolableValue"* %7 to %"class.blink::InterpolableValue"**
  %9 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %3, i64 1
  %11 = bitcast %"class.blink::InterpolableValue"* %10 to %"class.blink::InterpolableValue"**
  %12 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %11, align 8
  %13 = bitcast %"class.blink::InterpolableValue"* %6 to void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)***
  %14 = load void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %14, i64 2
  %16 = load void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %15, align 8
  tail call void %16(%"class.blink::InterpolableValue"* %6, %"class.blink::InterpolableValue"* dereferenceable(8) %9, double %2, %"class.blink::InterpolableValue"* dereferenceable(8) %12) #6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23InterpolableAspectRatioD2Ev(%"class.blink::InterpolableAspectRatio"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolableAspectRatio", %"class.blink::InterpolableAspectRatio"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink23InterpolableAspectRatioE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InterpolableAspectRatio", %"class.blink::InterpolableAspectRatio"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %3, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %3, align 8
  %5 = icmp eq %"class.blink::InterpolableValue"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::InterpolableValue"* %4 to void (%"class.blink::InterpolableValue"*)***
  %8 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %8, i64 1
  %10 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %9, align 8
  tail call void %10(%"class.blink::InterpolableValue"* nonnull %4) #6
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23InterpolableAspectRatioD0Ev(%"class.blink::InterpolableAspectRatio"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolableAspectRatio", %"class.blink::InterpolableAspectRatio"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink23InterpolableAspectRatioE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InterpolableAspectRatio", %"class.blink::InterpolableAspectRatio"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %3, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %3, align 8
  %5 = icmp eq %"class.blink::InterpolableValue"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::InterpolableValue"* %4 to void (%"class.blink::InterpolableValue"*)***
  %8 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %8, i64 1
  %10 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %9, align 8
  tail call void %10(%"class.blink::InterpolableValue"* nonnull %4) #6
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.blink::InterpolableAspectRatio"* %0 to i8*
  tail call void @free(i8* %12) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17InterpolableValue8IsNumberEv(%"class.blink::InterpolableValue"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17InterpolableValue6IsBoolEv(%"class.blink::InterpolableValue"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17InterpolableValue6IsListEv(%"class.blink::InterpolableValue"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17InterpolableValue8IsLengthEv(%"class.blink::InterpolableValue"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink23InterpolableAspectRatio13IsAspectRatioEv(%"class.blink::InterpolableAspectRatio"*) unnamed_addr #1 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17InterpolableValue8IsShadowEv(%"class.blink::InterpolableValue"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17InterpolableValue8IsFilterEv(%"class.blink::InterpolableValue"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17InterpolableValue15IsTransformListEv(%"class.blink::InterpolableValue"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink23InterpolableAspectRatio6EqualsERKNS_17InterpolableValueE(%"class.blink::InterpolableAspectRatio"*, %"class.blink::InterpolableValue"* dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolableValue11ScaleAndAddEdRKS0_(%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"* dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  %4 = bitcast %"class.blink::InterpolableValue"* %0 to void (%"class.blink::InterpolableValue"*, double)***
  %5 = load void (%"class.blink::InterpolableValue"*, double)**, void (%"class.blink::InterpolableValue"*, double)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, double)*, void (%"class.blink::InterpolableValue"*, double)** %5, i64 12
  %7 = load void (%"class.blink::InterpolableValue"*, double)*, void (%"class.blink::InterpolableValue"*, double)** %6, align 8
  tail call void %7(%"class.blink::InterpolableValue"* %0, double %1) #6
  %8 = bitcast %"class.blink::InterpolableValue"* %0 to void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)***
  %9 = load void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)** %9, i64 13
  %11 = load void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)** %10, align 8
  tail call void %11(%"class.blink::InterpolableValue"* %0, %"class.blink::InterpolableValue"* dereferenceable(8) %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::InterpolableAspectRatio"* @_ZNK5blink23InterpolableAspectRatio8RawCloneEv(%"class.blink::InterpolableAspectRatio"*) unnamed_addr #1 comdat align 2 {
  %2 = tail call noalias i8* @malloc(i64 16) #6
  %3 = bitcast i8* %2 to %"class.blink::InterpolableAspectRatio"*
  %4 = getelementptr inbounds %"class.blink::InterpolableAspectRatio", %"class.blink::InterpolableAspectRatio"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %4, align 8
  %6 = bitcast %"class.blink::InterpolableValue"* %5 to %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)***
  %7 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %7, i64 16
  %9 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %8, align 8
  %10 = tail call %"class.blink::InterpolableValue"* %9(%"class.blink::InterpolableValue"* %5) #6
  %11 = ptrtoint %"class.blink::InterpolableValue"* %10 to i64
  %12 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink23InterpolableAspectRatioE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %2, i64 8
  %14 = bitcast i8* %13 to i64*
  store i64 %11, i64* %14, align 8
  ret %"class.blink::InterpolableAspectRatio"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::InterpolableAspectRatio"* @_ZNK5blink23InterpolableAspectRatio15RawCloneAndZeroEv(%"class.blink::InterpolableAspectRatio"*) unnamed_addr #1 comdat align 2 {
  %2 = tail call noalias i8* @malloc(i64 16) #6
  %3 = bitcast i8* %2 to %"class.blink::InterpolableAspectRatio"*
  %4 = getelementptr inbounds %"class.blink::InterpolableAspectRatio", %"class.blink::InterpolableAspectRatio"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %4, align 8
  %6 = bitcast %"class.blink::InterpolableValue"* %5 to %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)***
  %7 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %7, i64 17
  %9 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %8, align 8
  %10 = tail call %"class.blink::InterpolableValue"* %9(%"class.blink::InterpolableValue"* %5) #6
  %11 = ptrtoint %"class.blink::InterpolableValue"* %10 to i64
  %12 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink23InterpolableAspectRatioE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %2, i64 8
  %14 = bitcast i8* %13 to i64*
  store i64 %11, i64* %14, align 8
  ret %"class.blink::InterpolableAspectRatio"* %3
}

; Function Attrs: nofree nounwind
declare float @logf(float) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
