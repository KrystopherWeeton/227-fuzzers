; ModuleID = '../../third_party/ffmpeg/libavutil/video_enc_params.c'
source_filename = "../../third_party/ffmpeg/libavutil/video_enc_params.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVVideoEncParams = type { i32, i64, i64, i32, i32, [4 x [2 x i32]] }
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVRational = type { i32, i32 }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.AVVideoEncParams* @av_video_enc_params_alloc(i32, i32, i64*) local_unnamed_addr #0 {
  %4 = zext i32 %1 to i64
  %5 = mul nuw nsw i64 %4, 20
  %6 = add nuw nsw i64 %5, 64
  %7 = tail call noalias i8* @av_mallocz(i64 %6) #3
  %8 = bitcast i8* %7 to %struct.AVVideoEncParams*
  %9 = icmp eq i8* %7, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds i8, i8* %7, i64 24
  %12 = bitcast i8* %11 to i32*
  store i32 %0, i32* %12, align 8
  %13 = bitcast i8* %7 to i32*
  store i32 %1, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %7, i64 8
  %15 = bitcast i8* %14 to <2 x i64>*
  store <2 x i64> <i64 64, i64 20>, <2 x i64>* %15, align 8
  %16 = icmp eq i64* %2, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %10
  store i64 %6, i64* %2, align 8
  br label %18

18:                                               ; preds = %17, %10, %3
  %19 = phi %struct.AVVideoEncParams* [ null, %3 ], [ %8, %10 ], [ %8, %17 ]
  ret %struct.AVVideoEncParams* %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare noalias i8* @av_mallocz(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.AVVideoEncParams* @av_video_enc_params_create_side_data(%struct.AVFrame*, i32, i32) local_unnamed_addr #0 {
  %4 = alloca %struct.AVBufferRef*, align 8
  %5 = alloca %struct.AVVideoEncParams*, align 8
  %6 = bitcast %struct.AVBufferRef** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #3
  store %struct.AVBufferRef* inttoptr (i64 -6148914691236517206 to %struct.AVBufferRef*), %struct.AVBufferRef** %4, align 8
  %7 = bitcast %struct.AVVideoEncParams** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #3
  store %struct.AVVideoEncParams* inttoptr (i64 -6148914691236517206 to %struct.AVVideoEncParams*), %struct.AVVideoEncParams** %5, align 8
  %8 = zext i32 %2 to i64
  %9 = mul nuw nsw i64 %8, 20
  %10 = add nuw nsw i64 %9, 64
  %11 = tail call noalias i8* @av_mallocz(i64 %10) #3
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %3
  store %struct.AVVideoEncParams* null, %struct.AVVideoEncParams** %5, align 8
  br label %33

14:                                               ; preds = %3
  %15 = getelementptr inbounds i8, i8* %11, i64 24
  %16 = bitcast i8* %15 to i32*
  store i32 %1, i32* %16, align 8
  %17 = bitcast i8* %11 to i32*
  store i32 %2, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %11, i64 8
  %19 = bitcast i8* %18 to <2 x i64>*
  store <2 x i64> <i64 64, i64 20>, <2 x i64>* %19, align 8
  %20 = bitcast %struct.AVVideoEncParams** %5 to i8**
  store i8* %11, i8** %20, align 8
  %21 = icmp ugt i64 %10, 2147483647
  %22 = bitcast i8* %11 to %struct.AVVideoEncParams*
  br i1 %21, label %23, label %24

23:                                               ; preds = %14
  tail call void @av_free(i8* nonnull %11) #3
  br label %33

24:                                               ; preds = %14
  %25 = trunc i64 %10 to i32
  %26 = tail call %struct.AVBufferRef* @av_buffer_create(i8* nonnull %11, i32 %25, void (i8*, i8*)* null, i8* null, i32 0) #3
  store %struct.AVBufferRef* %26, %struct.AVBufferRef** %4, align 8
  %27 = icmp eq %struct.AVBufferRef* %26, null
  br i1 %27, label %28, label %29

28:                                               ; preds = %24
  call void @av_freep(i8* nonnull %7) #3
  br label %33

29:                                               ; preds = %24
  %30 = tail call %struct.AVFrameSideData* @av_frame_new_side_data_from_buf(%struct.AVFrame* %0, i32 21, %struct.AVBufferRef* nonnull %26) #3
  %31 = icmp eq %struct.AVFrameSideData* %30, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @av_buffer_unref(%struct.AVBufferRef** nonnull %4) #3
  br label %33

33:                                               ; preds = %29, %13, %32, %28, %23
  %34 = phi %struct.AVVideoEncParams* [ null, %23 ], [ null, %32 ], [ null, %28 ], [ null, %13 ], [ %22, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #3
  ret %struct.AVVideoEncParams* %34
}

declare void @av_free(i8*) local_unnamed_addr #2

declare %struct.AVBufferRef* @av_buffer_create(i8*, i32, void (i8*, i8*)*, i8*, i32) local_unnamed_addr #2

declare void @av_freep(i8*) local_unnamed_addr #2

declare %struct.AVFrameSideData* @av_frame_new_side_data_from_buf(%struct.AVFrame*, i32, %struct.AVBufferRef*) local_unnamed_addr #2

declare void @av_buffer_unref(%struct.AVBufferRef**) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
