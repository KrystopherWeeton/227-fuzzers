; ModuleID = '../../third_party/skia/src/core/SkBlurMF.cpp'
source_filename = "../../third_party/skia/src/core/SkBlurMF.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.278 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.279 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type { i32, %class.SkAutoTMalloc, i32, %class.SkAutoTMalloc, %"class.std::__1::vector", %class.SkGlyphRunList, %"class.std::__1::vector.301" }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.236" }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %struct.SkPoint* }
%struct.SkPoint = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.SkGlyphRun*, %class.SkGlyphRun*, %"class.std::__1::__compressed_pair.291" }
%class.SkGlyphRun = type { %class.SkZip, %class.SkSpan, %class.SkSpan.289, %class.SkSpan.290, %class.SkFont }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.241" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.241" = type { %struct.SkPoint* }
%class.SkSpan = type { i8*, i64 }
%class.SkSpan.289 = type { i32*, i64 }
%class.SkSpan.290 = type { %struct.SkPoint*, i64 }
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %class.SkGlyphRun* }
%class.SkGlyphRunList = type { %class.SkSpan.294, %class.SkTextBlob*, %struct.SkRect, %struct.SkPoint }
%class.SkSpan.294 = type { %class.SkGlyphRun*, i64 }
%class.SkTextBlob = type { %class.SkNVRefCnt.295, %struct.SkRect, i32, %"struct.std::__1::atomic.296" }
%class.SkNVRefCnt.295 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.296" = type { %"struct.std::__1::__atomic_base.297" }
%"struct.std::__1::__atomic_base.297" = type { %"struct.std::__1::__atomic_base.298" }
%"struct.std::__1::__atomic_base.298" = type { %"struct.std::__1::__cxx_atomic_impl.299" }
%"struct.std::__1::__cxx_atomic_impl.299" = type { %"struct.std::__1::__cxx_atomic_base_impl.300" }
%"struct.std::__1::__cxx_atomic_base_impl.300" = type { i32 }
%"class.std::__1::vector.301" = type { %"class.std::__1::__vector_base.302" }
%"class.std::__1::__vector_base.302" = type { i16*, i16*, %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { i16* }
%class.SkPaint = type <{ %class.sk_sp.254, %class.sk_sp.311, %class.sk_sp.19, %class.sk_sp.312, %class.sk_sp.313, %struct.SkRGBA4f.314, float, float, %union.anon.315, [4 x i8] }>
%class.sk_sp.254 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.311 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.19 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.312 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.313 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f.314 = type { float, float, float, float }
%union.anon.315 = type { %struct.anon.316 }
%struct.anon.316 = type { i32 }
%struct.DrawQuad = type { %class.GrQuad, %class.GrQuad, i32 }
%class.GrQuad = type { [4 x float], [4 x float], [4 x float], i32 }
%struct.SkRGBA4f = type { float, float, float, float }
%class.SkBlurMaskFilterImpl = type <{ %class.SkMaskFilterBase.base, float, i32, i8, [3 x i8] }>
%class.SkMaskFilterBase.base = type { %class.SkMaskFilter.base }
%class.SkMaskFilter.base = type { %class.SkFlattenable.base }
%"struct.SkMaskFilterBase::BlurRec" = type { float, i32 }
%struct.SkMask = type <{ i8*, %struct.SkIRect, i32, i8, [3 x i8] }>
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkIPoint = type { i32, i32 }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.SkMaskFilterBase::NinePatch" = type { %struct.SkMask, %struct.SkIRect, %struct.SkIPoint, %class.SkCachedData* }
%class.SkCachedData = type <{ i32 (...)**, %class.SkMutex, %union.anon, i8*, i64, i32, i32, i8, i8, [6 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%union.anon = type { %class.SkDiscardableMemory* }
%class.SkDiscardableMemory = type opaque
%class.SkBitmap = type { %class.sk_sp.276, %class.SkPixmap, %class.sk_sp.277 }
%class.sk_sp.276 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.17, i32, i32 }
%class.sk_sp.17 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.277 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.278, [384 x i64], %class.sk_sp.279, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.280", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.286" }
%class.SkResourceCache = type { %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"*, %"class.SkResourceCache::Hash"*, %class.SkDiscardableMemory* (i64)*, i64, i64, i64, i32, [4 x i8], %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox" }
%"struct.SkResourceCache::Rec" = type { i32 (...)**, %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"* }
%"class.SkResourceCache::Hash" = type opaque
%"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.275, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.275 = type { %"struct.SkResourceCache::PurgeSharedIDMessage"*, i64 }
%"struct.SkResourceCache::PurgeSharedIDMessage" = type { i64 }
%class.SkPath = type <{ %class.sk_sp.227, i32, %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", i8, i8 }>
%class.sk_sp.227 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.228, %struct.SkRect, [4 x i8], %class.SkTDArray.229, %class.SkTDArray.230, %class.SkTDArray.231, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.228 = type { %"struct.std::__1::atomic" }
%class.SkTDArray.229 = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.230 = type { i8*, i32, i32 }
%class.SkTDArray.231 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.232 }
%class.SkTDArray.232 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.12", [3 x i8] }
%"struct.std::__1::atomic.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i8 }
%class.SkPathBuilder = type { %class.SkTDArray.229, %class.SkTDArray.230, %class.SkTDArray.231, i32, i8, i32, %struct.SkPoint, i8, i32, i32, i8, i32 }
%class.sk_sp.18 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.7" }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair.274" }
%"struct.std::__1::pair.274" = type { i32, void (%class.sk_sp.18*, %class.SkReadBuffer*)* }
%struct.SkDeserialProcs = type { void (%class.sk_sp.11*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.16*, i8*, i64, i8*)*, i8*, void (%class.sk_sp*, i8*, i64, i8*)*, i8* }
%class.sk_sp.11 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.12", [7 x i8] }>
%class.sk_sp.16 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.20*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.20*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.20*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.20 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.21, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.21 = type { %"struct.std::__1::atomic" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.23", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.210" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.22 }
%class.sk_sp.22 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap.27, %class.SkTHashMap.36, %class.SkTArray.45, %class.SkTArray.47, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.26"*, i64 }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.47, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.48 }
%class.sk_sp.48 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap.27 = type { %class.SkTHashTable.28 }
%class.SkTHashTable.28 = type { i32, i32, %class.SkAutoTArray.29 }
%class.SkAutoTArray.29 = type { %"class.std::__1::unique_ptr.30" }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.36 = type { %class.SkTHashTable.37 }
%class.SkTHashTable.37 = type { i32, i32, %class.SkAutoTArray.38 }
%class.SkAutoTArray.38 = type { %"class.std::__1::unique_ptr.39" }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.267" }
%"struct.std::__1::pair.267" = type { i32, %class.SkTArray.268* }
%class.SkTArray.268 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.45 = type { %"class.std::__1::unique_ptr.46"*, i64 }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.268, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.47 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.58" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.61 }
%class.SkFibBlockSizes.61 = type { i32 }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.68, %class.SkTArray.77, %class.GrOpsTask*, %class.SkSTArray.175, %class.SkSTArray.178, %"class.std::__1::unique_ptr.180", %class.sk_sp.196, %class.GrTokenTracker, i8, i8, %class.SkTArray.197, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.68 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.69", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.72, i8, [7 x i8] }>
%class.sk_sp.72 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.73, i8*, i64 }
%class.GrBuffer = type { i32 (...)** }
%class.GrNonAtomicRef.73 = type { i32 }
%class.SkTArray.77 = type { %class.sk_sp.78*, i64 }
%class.sk_sp.78 = type { %class.GrRenderTask* }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray, %class.SkTArray.142, i32, i32, %class.SkSTArray.149, %class.SkSTArray.149, %class.GrTextureResolveRenderTask* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.79 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.79 = type { %class.sk_sp.80*, i64 }
%class.sk_sp.80 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.81, %class.sk_sp.82, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.137" }
%class.SkNVRefCnt.81 = type { %"struct.std::__1::atomic" }
%class.sk_sp.82 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.84 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.83, [4 x i8] }>
%union.anon.83 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.20, i8* }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.84 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.85, void (i8*)*, i8* }
%class.SkNVRefCnt.85 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.86, i32, [4 x i8] }
%union.anon.86 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.82, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.134, %class.sk_sp.136, %class.sk_sp.136 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.114, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.125, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type { %class.SkTDynamicHash, %class.GrImageContext* }
%class.SkTDynamicHash = type { %class.SkTHashTable.88 }
%class.SkTHashTable.88 = type { i32, i32, %class.SkAutoTArray.89 }
%class.SkAutoTArray.89 = type { %"class.std::__1::unique_ptr.90" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot" = type opaque
%class.GrImageContext = type <{ %class.GrContext_Base, %class.GrSingleOwner, [7 x i8] }>
%class.GrThreadSafeCache = type { %class.SkSpinlock, %class.SkTDynamicHash.96, %class.SkTInternalLList, [6656 x i8], %class.SkArenaAlloc, %"struct.GrThreadSafeCache::Entry"* }
%class.SkSpinlock = type { %"struct.std::__1::atomic.12" }
%class.SkTDynamicHash.96 = type { %class.SkTHashTable.97 }
%class.SkTHashTable.97 = type { i32, i32, %class.SkAutoTArray.98 }
%class.SkAutoTArray.98 = type { %"class.std::__1::unique_ptr.99" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.SkTHashTable<GrThreadSafeCache::Entry *, GrUniqueKey, SkTDynamicHash<GrThreadSafeCache::Entry, GrUniqueKey, GrThreadSafeCache::Entry>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrThreadSafeCache::Entry *, GrUniqueKey, SkTDynamicHash<GrThreadSafeCache::Entry, GrUniqueKey, GrThreadSafeCache::Entry>::AdaptedTraits>::Slot" = type opaque
%class.SkTInternalLList = type { %"struct.GrThreadSafeCache::Entry"*, %"struct.GrThreadSafeCache::Entry"* }
%"struct.GrThreadSafeCache::Entry" = type <{ %"class.std::__1::chrono::time_point", %"struct.GrThreadSafeCache::Entry"*, %"struct.GrThreadSafeCache::Entry"*, %class.GrUniqueKey, %union.anon.216, i32, [4 x i8] }>
%union.anon.216 = type { %class.sk_sp.217, [8 x i8] }
%class.sk_sp.217 = type { %"class.GrThreadSafeCache::VertexData"* }
%"class.GrThreadSafeCache::VertexData" = type { %class.SkNVRefCnt.218, i8*, i32, i64, %class.sk_sp.219 }
%class.SkNVRefCnt.218 = type { %"struct.std::__1::atomic" }
%class.sk_sp.219 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash.105, i32, [4 x i8] }>
%class.SkTDynamicHash.105 = type { %class.SkTHashTable.106 }
%class.SkTHashTable.106 = type { i32, i32, %class.SkAutoTArray.107 }
%class.SkAutoTArray.107 = type { %"class.std::__1::unique_ptr.108" }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.114 = type { %class.SkTHashTable.115 }
%class.SkTHashTable.115 = type { i32, i32, %class.SkAutoTArray.116 }
%class.SkAutoTArray.116 = type { %"class.std::__1::unique_ptr.117" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.123, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.123 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.124, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.124 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.125 = type { %class.SkTHashTable.126 }
%class.SkTHashTable.126 = type { i32, i32, %class.SkAutoTArray.127 }
%class.SkAutoTArray.127 = type { %"class.std::__1::unique_ptr.128" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.sk_sp.134 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.135, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.135 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.136 = type { %class.GrGpuBuffer* }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.137" = type { %"struct.std::__1::__atomic_base.138" }
%"struct.std::__1::__atomic_base.138" = type { %"struct.std::__1::__atomic_base.139" }
%"struct.std::__1::__atomic_base.139" = type { %"struct.std::__1::__cxx_atomic_impl.140" }
%"struct.std::__1::__cxx_atomic_impl.140" = type { %"struct.std::__1::__cxx_atomic_base_impl.141" }
%"struct.std::__1::__cxx_atomic_base_impl.141" = type { i64 }
%class.SkTArray.142 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.143", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkSTArray.149 = type { %class.SkAlignedSTStorage.150, %class.SkTArray.151 }
%class.SkAlignedSTStorage.150 = type { [8 x i8] }
%class.SkTArray.151 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.GrOpsTask = type { %class.GrRenderTask, %class.GrAuditTrail*, i8, %class.GrSwizzle, i32, i32, %"struct.std::__1::array", i32, i8, i32, %struct.SkIRect, i32, i32, %class.SkSTArray.152, %class.sk_sp.172, %class.SkTArray.174, %struct.SkRect, %struct.SkIRect }
%class.GrSwizzle = type { i16 }
%"struct.std::__1::array" = type { [4 x float] }
%class.SkSTArray.152 = type { %class.SkAlignedSTStorage.153, %class.SkTArray.154 }
%class.SkAlignedSTStorage.153 = type { [2000 x i8] }
%class.SkTArray.154 = type { %"class.GrOpsTask::OpChain"*, i64 }
%"class.GrOpsTask::OpChain" = type { %"class.GrOpsTask::OpChain::List", %"class.GrProcessorSet::Analysis", [4 x i8], %"class.GrXferProcessor::DstProxyView", %class.GrAppliedClip*, %struct.SkRect }
%"class.GrOpsTask::OpChain::List" = type { %"class.std::__1::unique_ptr.155", %class.GrOp* }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %class.GrOp* }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr.155", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.GrProcessorSet::Analysis" = type { i16, [2 x i8] }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.80, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.163" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.161 }
%union.anon.161 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.162, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.162 = type { i32 }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.166, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.166 = type { %class.SkAlignedSTStorage.167, %class.SkTArray.168 }
%class.SkAlignedSTStorage.167 = type { [8 x i8] }
%class.SkTArray.168 = type { %"class.std::__1::unique_ptr.163"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.sk_sp.172 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.173, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.173 = type { %"struct.std::__1::atomic" }
%class.SkTArray.174 = type { %class.GrSurfaceProxy**, i64 }
%class.SkSTArray.175 = type { %class.SkAlignedSTStorage.176, %class.SkTArray.177 }
%class.SkAlignedSTStorage.176 = type { [32 x i8] }
%class.SkTArray.177 = type { i32*, i64 }
%class.SkSTArray.178 = type { %class.SkAlignedSTStorage.179, %class.SkTArray.77 }
%class.SkAlignedSTStorage.179 = type { [32 x i8] }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.183, %"class.std::__1::unique_ptr.187", %class.GrPathRenderer* }
%class.SkSTArray.183 = type { %class.SkAlignedSTStorage.184, %class.SkTArray.185 }
%class.SkAlignedSTStorage.184 = type { [64 x i8] }
%class.SkTArray.185 = type { %class.sk_sp.186*, i64 }
%class.sk_sp.186 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.196 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.197 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type opaque
%class.GrHashMapWithCache = type { %class.SkTHashMap.198, i32, %class.GrRenderTask** }
%class.SkTHashMap.198 = type { %class.SkTHashTable.199 }
%class.SkTHashTable.199 = type { i32, i32, %class.SkAutoTArray.200 }
%class.SkAutoTArray.200 = type { %"class.std::__1::unique_ptr.201" }
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %class.GrProxyProvider* }
%class.GrSurfaceDrawContext = type { %class.GrSurfaceFillContext.base, %class.SkSurfaceProps, i8, i8, i32, %class.SkGlyphRunListPainter }
%class.GrSurfaceFillContext.base = type <{ %class.GrSurfaceContext, %class.GrSurfaceProxyView, %class.sk_sp.221, i8 }>
%class.GrSurfaceContext = type { i32 (...)**, %class.GrRecordingContext*, %class.GrSurfaceProxyView, %class.GrColorInfo }
%class.GrColorInfo = type { %class.sk_sp.17, %class.sk_sp.220, i32, i32 }
%class.sk_sp.220 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.sk_sp.221 = type { %class.GrOpsTask* }
%class.SkGlyphRunListPainter = type { %class.SkSurfaceProps, %class.SkSurfaceProps, i32, i32, %class.SkStrikeForGPUCacheInterface*, %class.SkDrawableGlyphBuffer, %class.SkSourceGlyphBuffer }
%class.SkStrikeForGPUCacheInterface = type { i32 (...)** }
%class.SkDrawableGlyphBuffer = type { i64, i64, i64, %class.SkAutoTArray.222, %class.SkAutoTMalloc }
%class.SkAutoTArray.222 = type { %"class.std::__1::unique_ptr.223" }
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %class.SkGlyphVariant* }
%class.SkGlyphVariant = type { %union.anon.226 }
%union.anon.226 = type { %class.SkGlyph* }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%struct.SkPackedGlyphID = type { i32 }
%class.SkSourceGlyphBuffer = type { %class.SkZip, i64, i32, i32, %class.SkZip.242, %class.SkSTArray.247, %class.SkSTArray.250 }
%class.SkZip.242 = type { %"class.std::__1::tuple.243", i64 }
%"class.std::__1::tuple.243" = type { %"struct.std::__1::__tuple_impl.244" }
%"struct.std::__1::__tuple_impl.244" = type { %"class.std::__1::__tuple_leaf.245", %"class.std::__1::__tuple_leaf.246" }
%"class.std::__1::__tuple_leaf.245" = type { i16* }
%"class.std::__1::__tuple_leaf.246" = type { %struct.SkPoint* }
%class.SkSTArray.247 = type { %class.SkAlignedSTStorage.248, %class.SkTArray.249 }
%class.SkAlignedSTStorage.248 = type { [8 x i8] }
%class.SkTArray.249 = type { i16*, i64 }
%class.SkSTArray.250 = type { %class.SkAlignedSTStorage.251, %class.SkTArray.252 }
%class.SkAlignedSTStorage.251 = type { [32 x i8] }
%class.SkTArray.252 = type { %struct.SkPoint*, i64 }
%class.GrPaint = type <{ %class.GrXPFactory*, %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.163", i8, [3 x i8], %struct.SkRGBA4f, [4 x i8] }>
%class.GrXPFactory = type { i32 (...)** }
%class.GrClip = type opaque
%class.GrStyledShape = type { %class.GrShape, %class.GrStyle, i32, i8, i8, %class.SkTLazy, %class.SkAutoSTArray.255 }
%class.GrShape = type { %union.anon.253, i8, i8, i8, i8, [4 x i8] }
%union.anon.253 = type { %class.SkRRect, [4 x i8] }
%class.GrStyle = type { %class.SkStrokeRec, %class.sk_sp.254, %"struct.GrStyle::DashInfo" }
%class.SkStrokeRec = type { float, float, float, i32 }
%"struct.GrStyle::DashInfo" = type { i32, float, %class.SkAutoSTArray }
%class.SkAutoSTArray = type { i32, float*, [16 x i8] }
%class.SkTLazy = type { [16 x i8], %class.SkPath* }
%class.SkAutoSTArray.255 = type { i32, i32*, [32 x i8] }
%struct.SkSize = type { float, float }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkMaskFilterBase = type { %class.SkMaskFilter.base, [4 x i8] }
%struct.GrFPArgs = type { %class.GrRecordingContext*, %class.SkMatrixProvider*, %class.SkMatrix*, i8, %class.GrColorInfo* }
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%class.SkM44 = type { [16 x float] }
%"class.std::__1::tuple.317" = type { %"struct.std::__1::__tuple_impl.318" }
%"struct.std::__1::__tuple_impl.318" = type { %"class.std::__1::__tuple_leaf.319", %"class.std::__1::__tuple_leaf.320", [4 x i8] }
%"class.std::__1::__tuple_leaf.319" = type { %class.GrSurfaceProxyView }
%"class.std::__1::__tuple_leaf.320" = type { i32 }

$_ZN13GrStyledShapeD2Ev = comdat any

$_ZN16GrRectBlurEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK12GrShaderCapsRK6SkRectRK8SkMatrixf = comdat any

$_ZN20SkBlurMaskFilterImplD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK20SkBlurMaskFilterImpl10getFactoryEv = comdat any

$_ZNK20SkBlurMaskFilterImpl11getTypeNameEv = comdat any

$_ZNK12SkMaskFilter18getFlattenableTypeEv = comdat any

$_ZN12SkRefCntBaseD2Ev = comdat any

$_ZN16GrRectBlurEffect14MakeIntegralFPEP18GrRecordingContextf = comdat any

$_ZN9GrSwizzleC2EPKc = comdat any

$_ZZN16GrRectBlurEffect14MakeIntegralFPEP18GrRecordingContextfE7kDomain = comdat any

$_ZGVZN16GrRectBlurEffect14MakeIntegralFPEP18GrRecordingContextfE7kDomain = comdat any

@_ZN20SkBlurMaskFilterImpl15kMAX_BLUR_SIGMAE = hidden local_unnamed_addr constant float 1.280000e+02, align 4
@_ZTV20SkBlurMaskFilterImpl = hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%class.SkBlurMaskFilterImpl*)* @_ZN20SkBlurMaskFilterImplD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.18*, %class.SkReadBuffer*)* (%class.SkBlurMaskFilterImpl*)* @_ZNK20SkBlurMaskFilterImpl10getFactoryEv to i8*), i8* bitcast (i8* (%class.SkBlurMaskFilterImpl*)* @_ZNK20SkBlurMaskFilterImpl11getTypeNameEv to i8*), i8* bitcast (void (%class.SkBlurMaskFilterImpl*, %class.SkWriteBuffer*)* @_ZNK20SkBlurMaskFilterImpl7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkMaskFilter*)* @_ZNK12SkMaskFilter18getFlattenableTypeEv to i8*), i8* bitcast (i8 (%class.SkBlurMaskFilterImpl*)* @_ZNK20SkBlurMaskFilterImpl9getFormatEv to i8*), i8* bitcast (i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)* @_ZNK20SkBlurMaskFilterImpl10filterMaskEP6SkMaskRKS0_RK8SkMatrixP8SkIPoint to i8*), i8* bitcast (i1 (%class.SkBlurMaskFilterImpl*, %class.GrStyledShape*, %struct.SkIRect*, %struct.SkIRect*, %class.SkMatrix*, %struct.SkIRect*)* @_ZNK20SkBlurMaskFilterImpl16canFilterMaskGPUERK13GrStyledShapeRK7SkIRectS5_RK8SkMatrixPS3_ to i8*), i8* bitcast (i1 (%class.SkBlurMaskFilterImpl*, %class.GrRecordingContext*, %class.GrSurfaceDrawContext*, %class.GrPaint*, %class.GrClip*, %class.SkMatrix*, %class.GrStyledShape*)* @_ZNK20SkBlurMaskFilterImpl19directFilterMaskGPUEP18GrRecordingContextP20GrSurfaceDrawContextO7GrPaintPK6GrClipRK8SkMatrixRK13GrStyledShape to i8*), i8* bitcast (void (%class.GrSurfaceProxyView*, %class.SkBlurMaskFilterImpl*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, i32, i32, %class.SkMatrix*, %struct.SkIRect*)* @_ZNK20SkBlurMaskFilterImpl13filterMaskGPUEP18GrRecordingContext18GrSurfaceProxyView11GrColorType11SkAlphaTypeRK8SkMatrixRK7SkIRect to i8*), i8* bitcast (void (%class.SkBlurMaskFilterImpl*, %struct.SkRect*, %struct.SkRect*)* @_ZNK20SkBlurMaskFilterImpl17computeFastBoundsERK6SkRectPS0_ to i8*), i8* bitcast (i1 (%class.SkBlurMaskFilterImpl*, %"struct.SkMaskFilterBase::BlurRec"*)* @_ZNK20SkBlurMaskFilterImpl7asABlurEPN16SkMaskFilterBase7BlurRecE to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.SkMaskFilterBase*, %struct.GrFPArgs*)* @_ZNK16SkMaskFilterBase21onAsFragmentProcessorERK8GrFPArgs to i8*), i8* bitcast (i1 (%class.SkMaskFilterBase*)* @_ZNK16SkMaskFilterBase22onHasFragmentProcessorEv to i8*), i8* bitcast (i32 (%class.SkBlurMaskFilterImpl*, %struct.SkRect*, i32, %class.SkMatrix*, %struct.SkIRect*, %"class.SkMaskFilterBase::NinePatch"*)* @_ZNK20SkBlurMaskFilterImpl17filterRectsToNineEPK6SkRectiRK8SkMatrixRK7SkIRectPN16SkMaskFilterBase9NinePatchE to i8*), i8* bitcast (i32 (%class.SkBlurMaskFilterImpl*, %class.SkRRect*, %class.SkMatrix*, %struct.SkIRect*, %"class.SkMaskFilterBase::NinePatch"*)* @_ZNK20SkBlurMaskFilterImpl17filterRRectToNineERK7SkRRectRK8SkMatrixRK7SkIRectPN16SkMaskFilterBase9NinePatchE to i8*)] }, align 8
@.str = private unnamed_addr constant [21 x i8] c"SkBlurMaskFilterImpl\00", align 1
@__const._ZL20draw_rects_into_maskPK6SkRectiP6SkMask.canvas = private unnamed_addr constant { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.278, [384 x i64], %class.sk_sp.279, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.280", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.286" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkDeque { i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), i64 -6148914691236517206, i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, %"class.SkCanvas::MCRec"* inttoptr (i64 -6148914691236517206 to %"class.SkCanvas::MCRec"*), %class.sk_sp.278 { %class.SkMarkerStack* inttoptr (i64 -6148914691236517206 to %class.SkMarkerStack*) }, [384 x i64] [i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206], %class.sk_sp.279 { %class.SkBaseDevice* inttoptr (i64 -6148914691236517206 to %class.SkBaseDevice*) }, %class.SkSurfaceProps { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr.280" { %"class.std::__1::__compressed_pair.281" { %"struct.std::__1::__compressed_pair_elem.282" { %class.SkRasterHandleAllocator* inttoptr (i64 -6148914691236517206 to %class.SkRasterHandleAllocator*) } } }, %class.SkSurface_Base* inttoptr (i64 -6148914691236517206 to %class.SkSurface_Base*), %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.std::__1::unique_ptr.286" { %"class.std::__1::__compressed_pair.287" { %"struct.std::__1::__compressed_pair_elem.288" { %class.SkGlyphRunBuilder* inttoptr (i64 -6148914691236517206 to %class.SkGlyphRunBuilder*) } } } }, align 8
@__const._ZL20draw_rects_into_maskPK6SkRectiP6SkMask.paint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.254 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.311 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.19 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.312 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.313 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f.314 { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon.315 { %struct.anon.316 { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZZN16GrRectBlurEffect14MakeIntegralFPEP18GrRecordingContextfE7kDomain = linkonce_odr hidden global i32 0, comdat, align 4
@_ZGVZN16GrRectBlurEffect14MakeIntegralFPEP18GrRecordingContextfE7kDomain = linkonce_odr hidden global i64 0, comdat, align 8
@.str.1 = private unnamed_addr constant [15 x i8] c"Rect Blur Mask\00", align 1
@_ZTV16GrRectBlurEffect = external unnamed_addr constant { [10 x i8*] }, align 8
@__const._ZN20GrSurfaceDrawContext25fillPixelsWithLocalMatrixEPK6GrClipO7GrPaintRK7SkIRectRK8SkMatrix.quad = private unnamed_addr constant %struct.DrawQuad { %class.GrQuad { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, %class.GrQuad { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, i32 -1431655766 }, align 4
@.str.4 = private unnamed_addr constant [5 x i8] c"rgba\00", align 1
@_ZL17SK_PMColor4fWHITE = internal unnamed_addr constant %struct.SkRGBA4f { float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00 }, align 4
@switch.table._ZNK20SkBlurMaskFilterImpl17filterRRectToNineERK7SkRRectRK8SkMatrixRK7SkIRectPN16SkMaskFilterBase9NinePatchE = private unnamed_addr constant [3 x i32] [i32 0, i32 2, i32 2], align 4
@switch.table._ZNK20SkBlurMaskFilterImpl13filterMaskGPUEP18GrRecordingContext18GrSurfaceProxyView11GrColorType11SkAlphaTypeRK8SkMatrixRK7SkIRect = private unnamed_addr constant [3 x i32] [i32 2, i32 0, i32 1], align 4

@_ZN20SkBlurMaskFilterImplC1Ef11SkBlurStyleb = hidden unnamed_addr alias void (%class.SkBlurMaskFilterImpl*, float, i32, i1), void (%class.SkBlurMaskFilterImpl*, float, i32, i1)* @_ZN20SkBlurMaskFilterImplC2Ef11SkBlurStyleb

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN20SkBlurMaskFilterImplC2Ef11SkBlurStyleb(%class.SkBlurMaskFilterImpl* nocapture, float, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %6, align 4
  %7 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV20SkBlurMaskFilterImpl, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 1
  store float %1, float* %8, align 4
  %9 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 2
  store i32 %2, i32* %9, align 8
  %10 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 3
  store i8 %5, i8* %10, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i8 @_ZNK20SkBlurMaskFilterImpl9getFormatEv(%class.SkBlurMaskFilterImpl* nocapture readnone) unnamed_addr #1 align 2 {
  ret i8 1
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK20SkBlurMaskFilterImpl7asABlurEPN16SkMaskFilterBase7BlurRecE(%class.SkBlurMaskFilterImpl* nocapture readonly, %"struct.SkMaskFilterBase::BlurRec"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = icmp eq %"struct.SkMaskFilterBase::BlurRec"* %1, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 1
  %10 = bitcast float* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = bitcast %"struct.SkMaskFilterBase::BlurRec"* %1 to i32*
  store i32 %11, i32* %12, align 4
  %13 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"struct.SkMaskFilterBase::BlurRec", %"struct.SkMaskFilterBase::BlurRec"* %1, i64 0, i32 1
  store i32 %14, i32* %15, align 4
  br label %16

16:                                               ; preds = %8, %6, %2
  %17 = phi i1 [ false, %2 ], [ true, %6 ], [ true, %8 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK20SkBlurMaskFilterImpl10filterMaskEP6SkMaskRKS0_RK8SkMatrixP8SkIPoint(%class.SkBlurMaskFilterImpl* nocapture readonly, %struct.SkMask*, %struct.SkMask* dereferenceable(32), %class.SkMatrix* dereferenceable(40), %struct.SkIPoint*) unnamed_addr #3 align 2 {
  %6 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 3
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 1
  %10 = load float, float* %9, align 4
  br i1 %8, label %13, label %11

11:                                               ; preds = %5
  %12 = tail call float @_ZNK8SkMatrix9mapRadiusEf(%class.SkMatrix* %3, float %10) #15
  br label %13

13:                                               ; preds = %5, %11
  %14 = phi float [ %12, %11 ], [ %10, %5 ]
  %15 = fcmp ogt float %14, 1.280000e+02
  %16 = select i1 %15, float 1.280000e+02, float %14
  %17 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = tail call zeroext i1 @_ZN10SkBlurMask7BoxBlurEP6SkMaskRKS0_f11SkBlurStyleP8SkIPoint(%struct.SkMask* %1, %struct.SkMask* dereferenceable(32) %2, float %16, i32 %18, %struct.SkIPoint* %4) #15
  ret i1 %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare zeroext i1 @_ZN10SkBlurMask7BoxBlurEP6SkMaskRKS0_f11SkBlurStyleP8SkIPoint(%struct.SkMask*, %struct.SkMask* dereferenceable(32), float, i32, %struct.SkIPoint*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK20SkBlurMaskFilterImpl14filterRectMaskEP6SkMaskRK6SkRectRK8SkMatrixP8SkIPointNS0_10CreateModeE(%class.SkBlurMaskFilterImpl* nocapture readonly, %struct.SkMask*, %struct.SkRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), %struct.SkIPoint*, i32) local_unnamed_addr #3 align 2 {
  %7 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 3
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 1
  %11 = load float, float* %10, align 4
  br i1 %9, label %14, label %12

12:                                               ; preds = %6
  %13 = tail call float @_ZNK8SkMatrix9mapRadiusEf(%class.SkMatrix* %3, float %11) #15
  br label %14

14:                                               ; preds = %6, %12
  %15 = phi float [ %13, %12 ], [ %11, %6 ]
  %16 = fcmp ogt float %15, 1.280000e+02
  %17 = select i1 %16, float 1.280000e+02, float %15
  %18 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = tail call zeroext i1 @_ZN10SkBlurMask8BlurRectEfP6SkMaskRK6SkRect11SkBlurStyleP8SkIPointNS0_10CreateModeE(float %17, %struct.SkMask* %1, %struct.SkRect* dereferenceable(16) %2, i32 %19, %struct.SkIPoint* %4, i32 %5) #15
  ret i1 %20
}

declare zeroext i1 @_ZN10SkBlurMask8BlurRectEfP6SkMaskRK6SkRect11SkBlurStyleP8SkIPointNS0_10CreateModeE(float, %struct.SkMask*, %struct.SkRect* dereferenceable(16), i32, %struct.SkIPoint*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK20SkBlurMaskFilterImpl15filterRRectMaskEP6SkMaskRK7SkRRectRK8SkMatrixP8SkIPointNS0_10CreateModeE(%class.SkBlurMaskFilterImpl* nocapture readonly, %struct.SkMask*, %class.SkRRect* dereferenceable(52), %class.SkMatrix* dereferenceable(40), %struct.SkIPoint*, i32) local_unnamed_addr #3 align 2 {
  %7 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 3
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 1
  %11 = load float, float* %10, align 4
  br i1 %9, label %14, label %12

12:                                               ; preds = %6
  %13 = tail call float @_ZNK8SkMatrix9mapRadiusEf(%class.SkMatrix* %3, float %11) #15
  br label %14

14:                                               ; preds = %6, %12
  %15 = phi float [ %13, %12 ], [ %11, %6 ]
  %16 = fcmp ogt float %15, 1.280000e+02
  %17 = select i1 %16, float 1.280000e+02, float %15
  %18 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = tail call zeroext i1 @_ZN10SkBlurMask9BlurRRectEfP6SkMaskRK7SkRRect11SkBlurStyleP8SkIPointNS0_10CreateModeE(float %17, %struct.SkMask* %1, %class.SkRRect* dereferenceable(52) %2, i32 %19, %struct.SkIPoint* %4, i32 %5) #15
  ret i1 %20
}

declare zeroext i1 @_ZN10SkBlurMask9BlurRRectEfP6SkMaskRK7SkRRect11SkBlurStyleP8SkIPointNS0_10CreateModeE(float, %struct.SkMask*, %class.SkRRect* dereferenceable(52), i32, %struct.SkIPoint*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK20SkBlurMaskFilterImpl17filterRRectToNineERK7SkRRectRK8SkMatrixRK7SkIRectPN16SkMaskFilterBase9NinePatchE(%class.SkBlurMaskFilterImpl*, %class.SkRRect* dereferenceable(52), %class.SkMatrix* dereferenceable(40), %struct.SkIRect* nocapture readnone dereferenceable(16), %"class.SkMaskFilterBase::NinePatch"*) unnamed_addr #6 align 2 {
  %6 = alloca %class.SkBitmap, align 8
  %7 = alloca %class.SkCanvas, align 8
  %8 = alloca %class.SkPaint, align 8
  %9 = alloca %class.SkRRect, align 8
  %10 = alloca %struct.SkIPoint, align 4
  %11 = alloca %struct.SkMask, align 8
  %12 = alloca %struct.SkMask, align 8
  %13 = alloca { <2 x float>, <2 x float> }, align 8
  %14 = bitcast { <2 x float>, <2 x float> }* %13 to %struct.SkRect*
  %15 = alloca %class.SkRRect, align 4
  %16 = alloca [4 x %struct.SkPoint], align 16
  %17 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp ult i32 %18, 3
  br i1 %19, label %362, label %20

20:                                               ; preds = %5
  %21 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 3
  br i1 %23, label %366, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fcmp olt float %26, -3.276700e+04
  br i1 %27, label %366, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 1
  %30 = load float, float* %29, align 4
  %31 = fcmp olt float %30, -3.276700e+04
  br i1 %31, label %366, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 2
  %34 = load float, float* %33, align 4
  %35 = fcmp ogt float %34, 3.276700e+04
  br i1 %35, label %366, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 3
  %38 = load float, float* %37, align 4
  %39 = fcmp ogt float %38, 3.276700e+04
  %40 = fsub float %34, %26
  %41 = fcmp ogt float %40, 3.276700e+04
  %42 = or i1 %41, %39
  %43 = fsub float %38, %30
  %44 = fcmp ogt float %43, 3.276700e+04
  %45 = or i1 %42, %44
  br i1 %45, label %366, label %46

46:                                               ; preds = %36
  %47 = bitcast %struct.SkIPoint* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #15
  %48 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %10, i64 0, i32 0
  store i32 -1431655766, i32* %48, align 4
  %49 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %10, i64 0, i32 1
  store i32 -1431655766, i32* %49, align 4
  %50 = bitcast %struct.SkMask* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %50) #15
  %51 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %11, i64 0, i32 0
  %52 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %11, i64 0, i32 1, i32 1
  %53 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %11, i64 0, i32 1, i32 2
  %54 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %11, i64 0, i32 2
  %55 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %11, i64 0, i32 3
  %56 = bitcast %struct.SkMask* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 32, i1 false)
  store i8* null, i8** %51, align 8
  %57 = bitcast %struct.SkMask* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %57) #15
  %58 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %12, i64 0, i32 0
  %59 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %12, i64 0, i32 1
  %60 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %12, i64 0, i32 1
  %61 = bitcast %struct.SkIRect* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 24, i1 false)
  store i8* null, i8** %58, align 8
  %62 = tail call float @llvm.floor.f32(float %26) #15
  %63 = fcmp olt float %62, 0x41DFFFFFE0000000
  %64 = select i1 %63, float %62, float 0x41DFFFFFE0000000
  %65 = fcmp ogt float %64, 0xC1DFFFFFE0000000
  %66 = select i1 %65, float %64, float 0xC1DFFFFFE0000000
  %67 = fptosi float %66 to i32
  %68 = tail call float @llvm.floor.f32(float %30) #15
  %69 = fcmp olt float %68, 0x41DFFFFFE0000000
  %70 = select i1 %69, float %68, float 0x41DFFFFFE0000000
  %71 = fcmp ogt float %70, 0xC1DFFFFFE0000000
  %72 = select i1 %71, float %70, float 0xC1DFFFFFE0000000
  %73 = fptosi float %72 to i32
  %74 = tail call float @llvm.ceil.f32(float %34) #15
  %75 = fcmp olt float %74, 0x41DFFFFFE0000000
  %76 = select i1 %75, float %74, float 0x41DFFFFFE0000000
  %77 = fcmp ogt float %76, 0xC1DFFFFFE0000000
  %78 = select i1 %77, float %76, float 0xC1DFFFFFE0000000
  %79 = fptosi float %78 to i32
  %80 = tail call float @llvm.ceil.f32(float %38) #15
  %81 = fcmp olt float %80, 0x41DFFFFFE0000000
  %82 = select i1 %81, float %80, float 0x41DFFFFFE0000000
  %83 = fcmp ogt float %82, 0xC1DFFFFFE0000000
  %84 = select i1 %83, float %82, float 0xC1DFFFFFE0000000
  %85 = fptosi float %84 to i32
  %86 = zext i32 %73 to i64
  %87 = shl nuw i64 %86, 32
  %88 = zext i32 %67 to i64
  %89 = or i64 %87, %88
  %90 = zext i32 %85 to i64
  %91 = shl nuw i64 %90, 32
  %92 = zext i32 %79 to i64
  %93 = or i64 %91, %92
  %94 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %11, i64 0, i32 1
  %95 = bitcast %struct.SkIRect* %94 to i64*
  store i64 %89, i64* %95, align 8
  %96 = bitcast i32* %53 to i64*
  store i64 %93, i64* %96, align 8
  store i8 1, i8* %55, align 4
  store i32 0, i32* %54, align 8
  %97 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 3
  %98 = load i8, i8* %97, align 4, !range !2
  %99 = icmp eq i8 %98, 0
  %100 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 1
  %101 = load float, float* %100, align 4
  br i1 %99, label %105, label %102

102:                                              ; preds = %46
  %103 = tail call float @_ZNK8SkMatrix9mapRadiusEf(%class.SkMatrix* %2, float %101) #15
  %104 = load i32, i32* %21, align 8
  br label %105

105:                                              ; preds = %46, %102
  %106 = phi i32 [ %104, %102 ], [ %22, %46 ]
  %107 = phi float [ %103, %102 ], [ %101, %46 ]
  %108 = fcmp ogt float %107, 1.280000e+02
  %109 = select i1 %108, float 1.280000e+02, float %107
  %110 = call zeroext i1 @_ZN10SkBlurMask9BlurRRectEfP6SkMaskRK7SkRRect11SkBlurStyleP8SkIPointNS0_10CreateModeE(float %109, %struct.SkMask* nonnull %12, %class.SkRRect* dereferenceable(52) %1, i32 %106, %struct.SkIPoint* nonnull %10, i32 0) #15
  br i1 %110, label %117, label %111

111:                                              ; preds = %105
  %112 = bitcast %class.SkBlurMaskFilterImpl* %0 to i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)***
  %113 = load i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)**, i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*** %112, align 8
  %114 = getelementptr inbounds i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*, i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)** %113, i64 8
  %115 = load i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*, i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)** %114, align 8
  %116 = call zeroext i1 %115(%class.SkBlurMaskFilterImpl* %0, %struct.SkMask* nonnull %12, %struct.SkMask* nonnull dereferenceable(32) %11, %class.SkMatrix* dereferenceable(40) %2, %struct.SkIPoint* nonnull %10) #15
  br i1 %116, label %117, label %360

117:                                              ; preds = %105, %111
  %118 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 1, i64 0
  %119 = bitcast %struct.SkPoint* %118 to <2 x float>*
  %120 = load <2 x float>, <2 x float>* %119, align 4
  %121 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 1, i64 1
  %122 = bitcast %struct.SkPoint* %121 to i64*
  %123 = load i64, i64* %122, align 4
  %124 = trunc i64 %123 to i32
  %125 = lshr i64 %123, 32
  %126 = trunc i64 %125 to i32
  %127 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 1, i64 2
  %128 = bitcast %struct.SkPoint* %127 to i64*
  %129 = load i64, i64* %128, align 4
  %130 = trunc i64 %129 to i32
  %131 = lshr i64 %129, 32
  %132 = trunc i64 %131 to i32
  %133 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 1, i64 3
  %134 = bitcast %struct.SkPoint* %133 to i64*
  %135 = load i64, i64* %134, align 4
  %136 = trunc i64 %135 to i32
  %137 = lshr i64 %135, 32
  %138 = trunc i64 %137 to i32
  %139 = extractelement <2 x float> %120, i32 0
  %140 = bitcast i32 %136 to float
  %141 = fcmp olt float %139, %140
  %142 = select i1 %141, float %140, float %139
  %143 = load i32, i32* %48, align 4
  %144 = shl nsw i32 %143, 1
  %145 = sitofp i32 %144 to float
  %146 = fadd float %142, %145
  %147 = bitcast i32 %124 to float
  %148 = bitcast i32 %130 to float
  %149 = fcmp olt float %147, %148
  %150 = select i1 %149, float %148, float %147
  %151 = fadd float %150, %145
  %152 = fadd float %151, %146
  %153 = fadd float %152, 3.000000e+00
  %154 = load float, float* %33, align 4
  %155 = load float, float* %25, align 4
  %156 = fsub float %154, %155
  %157 = fcmp ult float %153, %156
  br i1 %157, label %158, label %360

158:                                              ; preds = %117
  %159 = extractelement <2 x float> %120, i32 1
  %160 = bitcast i32 %126 to float
  %161 = fcmp olt float %159, %160
  %162 = select i1 %161, float %160, float %159
  %163 = load i32, i32* %49, align 4
  %164 = shl nsw i32 %163, 1
  %165 = sitofp i32 %164 to float
  %166 = fadd float %162, %165
  %167 = bitcast i32 %138 to float
  %168 = bitcast i32 %132 to float
  %169 = fcmp olt float %167, %168
  %170 = select i1 %169, float %168, float %167
  %171 = fadd float %170, %165
  %172 = fadd float %166, %171
  %173 = fadd float %172, 3.000000e+00
  %174 = load float, float* %37, align 4
  %175 = load float, float* %29, align 4
  %176 = fsub float %174, %175
  %177 = fcmp ult float %173, %176
  br i1 %177, label %178, label %360

178:                                              ; preds = %158
  %179 = bitcast { <2 x float>, <2 x float> }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %179) #15
  %180 = insertelement <2 x float> undef, float %153, i32 0
  %181 = insertelement <2 x float> %180, float %173, i32 1
  %182 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %182, align 8
  %183 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 1
  store <2 x float> %181, <2 x float>* %183, align 8
  %184 = bitcast %class.SkRRect* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %184) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %184, i8 0, i64 52, i1 false) #15
  %185 = bitcast [4 x %struct.SkPoint]* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %185) #15
  %186 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %16, i64 0, i64 0
  %187 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %16, i64 0, i64 1
  %188 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %16, i64 0, i64 1, i32 1
  %189 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %16, i64 0, i64 2
  %190 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %16, i64 0, i64 2, i32 1
  %191 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %16, i64 0, i64 3
  %192 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %16, i64 0, i64 3, i32 1
  %193 = bitcast [4 x %struct.SkPoint]* %16 to <2 x float>*
  store <2 x float> %120, <2 x float>* %193, align 16
  %194 = bitcast %struct.SkPoint* %187 to i32*
  store i32 %124, i32* %194, align 8
  %195 = bitcast float* %188 to i32*
  store i32 %126, i32* %195, align 4
  %196 = bitcast %struct.SkPoint* %189 to i32*
  store i32 %130, i32* %196, align 16
  %197 = bitcast float* %190 to i32*
  store i32 %132, i32* %197, align 4
  %198 = bitcast %struct.SkPoint* %191 to i32*
  store i32 %136, i32* %198, align 8
  %199 = bitcast float* %192 to i32*
  store i32 %138, i32* %199, align 4
  call void @_ZN7SkRRect12setRectRadiiERK6SkRectPK7SkPoint(%class.SkRRect* nonnull %15, %struct.SkRect* nonnull dereferenceable(16) %14, %struct.SkPoint* nonnull %186) #15
  %200 = load i8, i8* %97, align 4, !range !2
  %201 = icmp eq i8 %200, 0
  %202 = load float, float* %100, align 4
  br i1 %201, label %205, label %203

203:                                              ; preds = %178
  %204 = call float @_ZNK8SkMatrix9mapRadiusEf(%class.SkMatrix* %2, float %202) #15
  br label %205

205:                                              ; preds = %178, %203
  %206 = phi float [ %204, %203 ], [ %202, %178 ]
  %207 = fcmp ogt float %206, 1.280000e+02
  %208 = select i1 %207, float 1.280000e+02, float %206
  %209 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %4, i64 0, i32 0
  %210 = load i32, i32* %21, align 8
  %211 = call %class.SkCachedData* @_ZN11SkMaskCache10FindAndRefEf11SkBlurStyleRK7SkRRectP6SkMaskP15SkResourceCache(float %208, i32 %210, %class.SkRRect* nonnull dereferenceable(52) %15, %struct.SkMask* %209, %class.SkResourceCache* null) #15
  %212 = icmp eq %class.SkCachedData* %211, null
  br i1 %212, label %213, label %312

213:                                              ; preds = %205
  %214 = load i8, i8* %97, align 4, !range !2
  %215 = icmp eq i8 %214, 0
  %216 = load float, float* %100, align 4
  br i1 %215, label %219, label %217

217:                                              ; preds = %213
  %218 = call float @_ZNK8SkMatrix9mapRadiusEf(%class.SkMatrix* %2, float %216) #15
  br label %219

219:                                              ; preds = %213, %217
  %220 = phi float [ %218, %217 ], [ %216, %213 ]
  %221 = fcmp ogt float %220, 1.280000e+02
  %222 = select i1 %221, float 1.280000e+02, float %220
  %223 = load i32, i32* %21, align 8
  %224 = call zeroext i1 @_ZN10SkBlurMask9BlurRRectEfP6SkMaskRK7SkRRect11SkBlurStyleP8SkIPointNS0_10CreateModeE(float %222, %struct.SkMask* %209, %class.SkRRect* nonnull dereferenceable(52) %15, i32 %223, %struct.SkIPoint* nonnull %10, i32 2) #15
  br i1 %224, label %298, label %225

225:                                              ; preds = %219
  %226 = bitcast %class.SkRRect* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %226)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %226, i8* nonnull align 4 %184, i64 52, i1 false)
  %227 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %9, i64 0, i32 0, i32 0
  %228 = load float, float* %227, align 8
  %229 = call float @llvm.floor.f32(float %228) #15
  %230 = fcmp olt float %229, 0x41DFFFFFE0000000
  %231 = select i1 %230, float %229, float 0x41DFFFFFE0000000
  %232 = fcmp ogt float %231, 0xC1DFFFFFE0000000
  %233 = select i1 %232, float %231, float 0xC1DFFFFFE0000000
  %234 = fptosi float %233 to i32
  %235 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %9, i64 0, i32 0, i32 1
  %236 = load float, float* %235, align 4
  %237 = call float @llvm.floor.f32(float %236) #15
  %238 = fcmp olt float %237, 0x41DFFFFFE0000000
  %239 = select i1 %238, float %237, float 0x41DFFFFFE0000000
  %240 = fcmp ogt float %239, 0xC1DFFFFFE0000000
  %241 = select i1 %240, float %239, float 0xC1DFFFFFE0000000
  %242 = fptosi float %241 to i32
  %243 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %9, i64 0, i32 0, i32 2
  %244 = load float, float* %243, align 8
  %245 = call float @llvm.ceil.f32(float %244) #15
  %246 = fcmp olt float %245, 0x41DFFFFFE0000000
  %247 = select i1 %246, float %245, float 0x41DFFFFFE0000000
  %248 = fcmp ogt float %247, 0xC1DFFFFFE0000000
  %249 = select i1 %248, float %247, float 0xC1DFFFFFE0000000
  %250 = fptosi float %249 to i32
  %251 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %9, i64 0, i32 0, i32 3
  %252 = load float, float* %251, align 4
  %253 = call float @llvm.ceil.f32(float %252) #15
  %254 = fcmp olt float %253, 0x41DFFFFFE0000000
  %255 = select i1 %254, float %253, float 0x41DFFFFFE0000000
  %256 = fcmp ogt float %255, 0xC1DFFFFFE0000000
  %257 = select i1 %256, float %255, float 0xC1DFFFFFE0000000
  %258 = fptosi float %257 to i32
  %259 = zext i32 %242 to i64
  %260 = shl nuw i64 %259, 32
  %261 = zext i32 %234 to i64
  %262 = or i64 %260, %261
  %263 = zext i32 %258 to i64
  %264 = shl nuw i64 %263, 32
  %265 = zext i32 %250 to i64
  %266 = or i64 %264, %265
  store i64 %262, i64* %95, align 8
  store i64 %266, i64* %96, align 8
  %267 = sub i32 3, %234
  %268 = add i32 %267, %250
  %269 = and i32 %268, -4
  store i32 %269, i32* %54, align 8
  store i8 1, i8* %55, align 4
  %270 = call i64 @_ZNK6SkMask16computeImageSizeEv(%struct.SkMask* nonnull %11) #15
  %271 = call i8* @_ZN6SkMask10AllocImageEmNS_9AllocTypeE(i64 %270, i32 1) #15
  store i8* %271, i8** %51, align 8
  %272 = icmp eq i8* %271, null
  br i1 %272, label %273, label %274

273:                                              ; preds = %225
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %226)
  br label %358

274:                                              ; preds = %225
  %275 = bitcast %class.SkBitmap* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %275) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %275, i8 -86, i64 56, i1 false) #15
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %6) #15
  %276 = call zeroext i1 @_ZN8SkBitmap17installMaskPixelsERK6SkMask(%class.SkBitmap* nonnull %6, %struct.SkMask* nonnull dereferenceable(32) %11) #15
  %277 = bitcast %class.SkCanvas* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3232, i8* nonnull %277) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %277, i8* align 8 bitcast ({ i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.278, [384 x i64], %class.sk_sp.279, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.280", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.286" }* @__const._ZL20draw_rects_into_maskPK6SkRectiP6SkMask.canvas to i8*), i64 3232, i1 false) #15
  call void @_ZN8SkCanvasC1ERK8SkBitmap(%class.SkCanvas* nonnull %7, %class.SkBitmap* nonnull dereferenceable(56) %6) #15
  %278 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %94, i64 0, i32 0
  %279 = load i32, i32* %278, align 8
  %280 = sitofp i32 %279 to float
  %281 = fsub float -0.000000e+00, %280
  %282 = load i32, i32* %52, align 4
  %283 = sitofp i32 %282 to float
  %284 = fsub float -0.000000e+00, %283
  call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* nonnull %7, float %281, float %284) #15
  %285 = bitcast %class.SkPaint* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %285) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %285, i8* align 8 bitcast (%class.SkPaint* @__const._ZL20draw_rects_into_maskPK6SkRectiP6SkMask.paint to i8*), i64 72, i1 false) #15
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %8) #15
  %286 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %8, i64 0, i32 8, i32 0, i32 0
  %287 = load i32, i32* %286, align 8
  %288 = or i32 %287, 1
  store i32 %288, i32* %286, align 8
  call void @_ZN8SkCanvas9drawRRectERK7SkRRectRK7SkPaint(%class.SkCanvas* nonnull %7, %class.SkRRect* nonnull dereferenceable(52) %9, %class.SkPaint* nonnull dereferenceable(72) %8) #15
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %285) #15
  call void @_ZN8SkCanvasD1Ev(%class.SkCanvas* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 3232, i8* nonnull %277) #15
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %275) #15
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %226)
  %289 = load i8*, i8** %51, align 8
  %290 = bitcast %class.SkBlurMaskFilterImpl* %0 to i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)***
  %291 = load i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)**, i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*** %290, align 8
  %292 = getelementptr inbounds i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*, i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)** %291, i64 8
  %293 = load i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*, i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)** %292, align 8
  %294 = call zeroext i1 %293(%class.SkBlurMaskFilterImpl* %0, %struct.SkMask* %209, %struct.SkMask* nonnull dereferenceable(32) %11, %class.SkMatrix* dereferenceable(40) %2, %struct.SkIPoint* nonnull %10) #15
  %295 = icmp eq i8* %289, null
  br i1 %295, label %297, label %296

296:                                              ; preds = %274
  call void @_ZN6SkMask9FreeImageEPv(i8* nonnull %289) #15
  br label %297

297:                                              ; preds = %274, %296
  br i1 %294, label %298, label %358

298:                                              ; preds = %297, %219
  %299 = load i32, i32* %21, align 8
  %300 = call i64 @_ZNK6SkMask21computeTotalImageSizeEv(%struct.SkMask* %209) #15
  %301 = call %class.SkCachedData* @_ZN15SkResourceCache13NewCachedDataEm(i64 %300) #15
  %302 = icmp eq %class.SkCachedData* %301, null
  br i1 %302, label %312, label %303

303:                                              ; preds = %298
  %304 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %301, i64 0, i32 3
  %305 = load i8*, i8** %304, align 8
  %306 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %4, i64 0, i32 0, i32 0
  %307 = load i8*, i8** %306, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %305, i8* align 1 %307, i64 %300, i1 false) #15
  %308 = load i8*, i8** %306, align 8
  call void @_ZN6SkMask9FreeImageEPv(i8* %308) #15
  %309 = bitcast i8** %304 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"class.SkMaskFilterBase::NinePatch"* %4 to i64*
  store i64 %310, i64* %311, align 8
  call void @_ZN11SkMaskCache3AddEf11SkBlurStyleRK7SkRRectRK6SkMaskP12SkCachedDataP15SkResourceCache(float %208, i32 %299, %class.SkRRect* nonnull dereferenceable(52) %15, %struct.SkMask* dereferenceable(32) %209, %class.SkCachedData* nonnull %301, %class.SkResourceCache* null) #15
  br label %312

312:                                              ; preds = %303, %298, %205
  %313 = phi %class.SkCachedData* [ %211, %205 ], [ null, %298 ], [ %301, %303 ]
  %314 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %4, i64 0, i32 0, i32 1, i32 2
  %315 = load i32, i32* %314, align 4
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %4, i64 0, i32 0, i32 1, i32 0
  %318 = load i32, i32* %317, align 4
  %319 = sext i32 %318 to i64
  %320 = sub nsw i64 %316, %319
  %321 = icmp slt i64 %320, 2147483647
  %322 = select i1 %321, i64 %320, i64 2147483647
  %323 = icmp sgt i64 %322, -2147483647
  %324 = select i1 %323, i64 %322, i64 -2147483647
  %325 = trunc i64 %324 to i32
  store i32 %325, i32* %314, align 4
  %326 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %4, i64 0, i32 0, i32 1, i32 3
  %327 = load i32, i32* %326, align 4
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %4, i64 0, i32 0, i32 1, i32 1
  %330 = load i32, i32* %329, align 4
  %331 = sext i32 %330 to i64
  %332 = sub nsw i64 %328, %331
  %333 = icmp slt i64 %332, 2147483647
  %334 = select i1 %333, i64 %332, i64 2147483647
  %335 = icmp sgt i64 %334, -2147483647
  %336 = select i1 %335, i64 %334, i64 -2147483647
  %337 = trunc i64 %336 to i32
  store i32 %337, i32* %326, align 4
  store i32 0, i32* %317, align 4
  store i32 0, i32* %329, align 4
  %338 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %4, i64 0, i32 1
  %339 = bitcast %struct.SkIRect* %338 to i8*
  %340 = bitcast %struct.SkIRect* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %339, i8* align 8 %340, i64 16, i1 false)
  %341 = call float @llvm.ceil.f32(float %146)
  %342 = fcmp olt float %341, 0x41DFFFFFE0000000
  %343 = select i1 %342, float %341, float 0x41DFFFFFE0000000
  %344 = fcmp ogt float %343, 0xC1DFFFFFE0000000
  %345 = select i1 %344, float %343, float 0xC1DFFFFFE0000000
  %346 = fptosi float %345 to i32
  %347 = add nsw i32 %346, 1
  %348 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %4, i64 0, i32 2, i32 0
  store i32 %347, i32* %348, align 8
  %349 = call float @llvm.ceil.f32(float %166)
  %350 = fcmp olt float %349, 0x41DFFFFFE0000000
  %351 = select i1 %350, float %349, float 0x41DFFFFFE0000000
  %352 = fcmp ogt float %351, 0xC1DFFFFFE0000000
  %353 = select i1 %352, float %351, float 0xC1DFFFFFE0000000
  %354 = fptosi float %353 to i32
  %355 = add nsw i32 %354, 1
  %356 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %4, i64 0, i32 2, i32 1
  store i32 %355, i32* %356, align 4
  %357 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %4, i64 0, i32 3
  store %class.SkCachedData* %313, %class.SkCachedData** %357, align 8
  br label %358

358:                                              ; preds = %297, %273, %312
  %359 = phi i32 [ 1, %312 ], [ 0, %273 ], [ 0, %297 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %185) #15
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %184) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %179) #15
  br label %360

360:                                              ; preds = %117, %158, %358, %111
  %361 = phi i32 [ 0, %111 ], [ 2, %117 ], [ %359, %358 ], [ 2, %158 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %57) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %50) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #15
  br label %366

362:                                              ; preds = %5
  %363 = sext i32 %18 to i64
  %364 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZNK20SkBlurMaskFilterImpl17filterRRectToNineERK7SkRRectRK8SkMatrixRK7SkIRectPN16SkMaskFilterBase9NinePatchE, i64 0, i64 %363
  %365 = load i32, i32* %364, align 4
  ret i32 %365

366:                                              ; preds = %24, %28, %32, %36, %20, %360
  %367 = phi i32 [ %361, %360 ], [ 2, %20 ], [ 2, %36 ], [ 2, %32 ], [ 2, %28 ], [ 2, %24 ]
  ret i32 %367
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN7SkRRect12setRectRadiiERK6SkRectPK7SkPoint(%class.SkRRect*, %struct.SkRect* dereferenceable(16), %struct.SkPoint*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK20SkBlurMaskFilterImpl17filterRectsToNineEPK6SkRectiRK8SkMatrixRK7SkIRectPN16SkMaskFilterBase9NinePatchE(%class.SkBlurMaskFilterImpl*, %struct.SkRect*, i32, %class.SkMatrix* dereferenceable(40), %struct.SkIRect* nocapture readnone dereferenceable(16), %"class.SkMaskFilterBase::NinePatch"*) unnamed_addr #3 align 2 {
  %7 = alloca %class.SkBitmap, align 8
  %8 = alloca %struct.SkImageInfo, align 16
  %9 = alloca %class.SkCanvas, align 8
  %10 = alloca %class.SkPaint, align 8
  %11 = alloca %class.SkPath, align 8
  %12 = alloca %class.SkPathBuilder, align 8
  %13 = alloca %struct.SkIPoint, align 4
  %14 = alloca %struct.SkMask, align 8
  %15 = alloca %struct.SkMask, align 8
  %16 = alloca [2 x %struct.SkRect], align 16
  %17 = add i32 %2, -1
  %18 = icmp ugt i32 %17, 1
  br i1 %18, label %418, label %19

19:                                               ; preds = %6
  %20 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, -2
  %23 = icmp eq i32 %22, 2
  br i1 %23, label %418, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fcmp olt float %26, -3.276700e+04
  br i1 %27, label %418, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %30 = load float, float* %29, align 4
  %31 = fcmp olt float %30, -3.276700e+04
  br i1 %31, label %418, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %34 = load float, float* %33, align 4
  %35 = fcmp ogt float %34, 3.276700e+04
  br i1 %35, label %418, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %38 = load float, float* %37, align 4
  %39 = fcmp ogt float %38, 3.276700e+04
  %40 = fsub float %34, %26
  %41 = fcmp ogt float %40, 3.276700e+04
  %42 = or i1 %41, %39
  %43 = fsub float %38, %30
  %44 = fcmp ogt float %43, 3.276700e+04
  %45 = or i1 %42, %44
  br i1 %45, label %418, label %46

46:                                               ; preds = %36
  %47 = bitcast %struct.SkIPoint* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #15
  %48 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %13, i64 0, i32 0
  store i32 -1431655766, i32* %48, align 4
  %49 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %13, i64 0, i32 1
  store i32 -1431655766, i32* %49, align 4
  %50 = bitcast %struct.SkMask* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %50) #15
  %51 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %14, i64 0, i32 0
  %52 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %14, i64 0, i32 1
  %53 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %52, i64 0, i32 0
  %54 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %14, i64 0, i32 1, i32 1
  %55 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %14, i64 0, i32 1, i32 2
  %56 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %14, i64 0, i32 1, i32 3
  %57 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %14, i64 0, i32 2
  %58 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %14, i64 0, i32 3
  %59 = bitcast %struct.SkMask* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 32, i1 false)
  store i8* null, i8** %51, align 8
  %60 = bitcast %struct.SkMask* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %60) #15
  %61 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %15, i64 0, i32 0
  %62 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %15, i64 0, i32 1
  %63 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %62, i64 0, i32 0
  %64 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %15, i64 0, i32 1, i32 1
  %65 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %15, i64 0, i32 1, i32 2
  %66 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %15, i64 0, i32 1, i32 3
  %67 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %15, i64 0, i32 1
  %68 = bitcast %struct.SkIRect* %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 24, i1 false)
  store i8* null, i8** %61, align 8
  %69 = tail call float @llvm.floor.f32(float %26) #15
  %70 = fcmp olt float %69, 0x41DFFFFFE0000000
  %71 = select i1 %70, float %69, float 0x41DFFFFFE0000000
  %72 = fcmp ogt float %71, 0xC1DFFFFFE0000000
  %73 = select i1 %72, float %71, float 0xC1DFFFFFE0000000
  %74 = fptosi float %73 to i32
  %75 = tail call float @llvm.floor.f32(float %30) #15
  %76 = fcmp olt float %75, 0x41DFFFFFE0000000
  %77 = select i1 %76, float %75, float 0x41DFFFFFE0000000
  %78 = fcmp ogt float %77, 0xC1DFFFFFE0000000
  %79 = select i1 %78, float %77, float 0xC1DFFFFFE0000000
  %80 = fptosi float %79 to i32
  %81 = tail call float @llvm.ceil.f32(float %34) #15
  %82 = fcmp olt float %81, 0x41DFFFFFE0000000
  %83 = select i1 %82, float %81, float 0x41DFFFFFE0000000
  %84 = fcmp ogt float %83, 0xC1DFFFFFE0000000
  %85 = select i1 %84, float %83, float 0xC1DFFFFFE0000000
  %86 = fptosi float %85 to i32
  %87 = tail call float @llvm.ceil.f32(float %38) #15
  %88 = fcmp olt float %87, 0x41DFFFFFE0000000
  %89 = select i1 %88, float %87, float 0x41DFFFFFE0000000
  %90 = fcmp ogt float %89, 0xC1DFFFFFE0000000
  %91 = select i1 %90, float %89, float 0xC1DFFFFFE0000000
  %92 = fptosi float %91 to i32
  %93 = zext i32 %80 to i64
  %94 = shl nuw i64 %93, 32
  %95 = zext i32 %74 to i64
  %96 = or i64 %94, %95
  %97 = zext i32 %92 to i64
  %98 = shl nuw i64 %97, 32
  %99 = zext i32 %86 to i64
  %100 = or i64 %98, %99
  %101 = bitcast %struct.SkIRect* %52 to i64*
  store i64 %96, i64* %101, align 8
  %102 = bitcast i32* %55 to i64*
  store i64 %100, i64* %102, align 8
  store i8 1, i8* %58, align 4
  store i32 0, i32* %57, align 8
  %103 = icmp eq i32 %2, 1
  br i1 %103, label %104, label %119

104:                                              ; preds = %46
  %105 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 3
  %106 = load i8, i8* %105, align 4, !range !2
  %107 = icmp eq i8 %106, 0
  %108 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 1
  %109 = load float, float* %108, align 4
  br i1 %107, label %113, label %110

110:                                              ; preds = %104
  %111 = tail call float @_ZNK8SkMatrix9mapRadiusEf(%class.SkMatrix* %3, float %109) #15
  %112 = load i32, i32* %20, align 8
  br label %113

113:                                              ; preds = %104, %110
  %114 = phi i32 [ %112, %110 ], [ %21, %104 ]
  %115 = phi float [ %111, %110 ], [ %109, %104 ]
  %116 = fcmp ogt float %115, 1.280000e+02
  %117 = select i1 %116, float 1.280000e+02, float %115
  %118 = call zeroext i1 @_ZN10SkBlurMask8BlurRectEfP6SkMaskRK6SkRect11SkBlurStyleP8SkIPointNS0_10CreateModeE(float %117, %struct.SkMask* nonnull %15, %struct.SkRect* dereferenceable(16) %1, i32 %114, %struct.SkIPoint* nonnull %13, i32 0) #15
  br i1 %118, label %125, label %416

119:                                              ; preds = %46
  %120 = bitcast %class.SkBlurMaskFilterImpl* %0 to i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)***
  %121 = load i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)**, i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*** %120, align 8
  %122 = getelementptr inbounds i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*, i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)** %121, i64 8
  %123 = load i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*, i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)** %122, align 8
  %124 = call zeroext i1 %123(%class.SkBlurMaskFilterImpl* %0, %struct.SkMask* nonnull %15, %struct.SkMask* nonnull dereferenceable(32) %14, %class.SkMatrix* dereferenceable(40) %3, %struct.SkIPoint* nonnull %13) #15
  br i1 %124, label %125, label %416

125:                                              ; preds = %113, %119
  %126 = bitcast [2 x %struct.SkRect]* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %126) #15
  %127 = getelementptr inbounds [2 x %struct.SkRect], [2 x %struct.SkRect]* %16, i64 0, i64 0
  %128 = getelementptr inbounds [2 x %struct.SkRect], [2 x %struct.SkRect]* %16, i64 0, i64 0, i32 0
  %129 = getelementptr inbounds [2 x %struct.SkRect], [2 x %struct.SkRect]* %16, i64 0, i64 0, i32 1
  %130 = getelementptr inbounds [2 x %struct.SkRect], [2 x %struct.SkRect]* %16, i64 0, i64 0, i32 2
  %131 = getelementptr inbounds [2 x %struct.SkRect], [2 x %struct.SkRect]* %16, i64 0, i64 0, i32 3
  %132 = getelementptr inbounds [2 x %struct.SkRect], [2 x %struct.SkRect]* %16, i64 0, i64 1
  %133 = getelementptr inbounds [2 x %struct.SkRect], [2 x %struct.SkRect]* %16, i64 0, i64 1, i32 1
  %134 = getelementptr inbounds [2 x %struct.SkRect], [2 x %struct.SkRect]* %16, i64 0, i64 1, i32 2
  %135 = getelementptr inbounds [2 x %struct.SkRect], [2 x %struct.SkRect]* %16, i64 0, i64 1, i32 3
  %136 = bitcast [2 x %struct.SkRect]* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %136, i8 -1, i64 32, i1 false)
  %137 = load i32, i32* %65, align 8
  %138 = load i32, i32* %63, align 8
  %139 = sub i32 %137, %138
  %140 = load i32, i32* %55, align 8
  %141 = load i32, i32* %53, align 8
  %142 = sub i32 %141, %140
  %143 = add i32 %142, %139
  %144 = add nsw i32 %143, 2
  %145 = load i32, i32* %66, align 4
  %146 = load i32, i32* %64, align 4
  %147 = sub i32 %145, %146
  %148 = load i32, i32* %56, align 4
  %149 = load i32, i32* %54, align 4
  %150 = sub i32 %149, %148
  %151 = add i32 %150, %147
  %152 = add nsw i32 %151, 2
  br i1 %103, label %190, label %153

153:                                              ; preds = %125
  %154 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 1, i32 0
  %155 = load float, float* %154, align 4
  %156 = call float @llvm.ceil.f32(float %155) #15
  %157 = fcmp olt float %156, 0x41DFFFFFE0000000
  %158 = select i1 %157, float %156, float 0x41DFFFFFE0000000
  %159 = fcmp ogt float %158, 0xC1DFFFFFE0000000
  %160 = select i1 %159, float %158, float 0xC1DFFFFFE0000000
  %161 = fptosi float %160 to i32
  %162 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 1, i32 1
  %163 = load float, float* %162, align 4
  %164 = call float @llvm.ceil.f32(float %163) #15
  %165 = fcmp olt float %164, 0x41DFFFFFE0000000
  %166 = select i1 %165, float %164, float 0x41DFFFFFE0000000
  %167 = fcmp ogt float %166, 0xC1DFFFFFE0000000
  %168 = select i1 %167, float %166, float 0xC1DFFFFFE0000000
  %169 = fptosi float %168 to i32
  %170 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 1, i32 2
  %171 = load float, float* %170, align 4
  %172 = call float @llvm.floor.f32(float %171) #15
  %173 = fcmp olt float %172, 0x41DFFFFFE0000000
  %174 = select i1 %173, float %172, float 0x41DFFFFFE0000000
  %175 = fcmp ogt float %174, 0xC1DFFFFFE0000000
  %176 = select i1 %175, float %174, float 0xC1DFFFFFE0000000
  %177 = fptosi float %176 to i32
  %178 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 1, i32 3
  %179 = load float, float* %178, align 4
  %180 = call float @llvm.floor.f32(float %179) #15
  %181 = fcmp olt float %180, 0x41DFFFFFE0000000
  %182 = select i1 %181, float %180, float 0x41DFFFFFE0000000
  %183 = fcmp ogt float %182, 0xC1DFFFFFE0000000
  %184 = select i1 %183, float %182, float 0xC1DFFFFFE0000000
  %185 = fptosi float %184 to i32
  %186 = sub i32 %144, %141
  %187 = add i32 %186, %161
  %188 = sub i32 %152, %149
  %189 = add i32 %188, %169
  br label %190

190:                                              ; preds = %125, %153
  %191 = phi i32 [ %187, %153 ], [ %144, %125 ]
  %192 = phi i32 [ %185, %153 ], [ %148, %125 ]
  %193 = phi i32 [ %177, %153 ], [ %140, %125 ]
  %194 = phi i32 [ %169, %153 ], [ %149, %125 ]
  %195 = phi i32 [ %161, %153 ], [ %141, %125 ]
  %196 = phi i32 [ %189, %153 ], [ %152, %125 ]
  %197 = sub i32 %193, %195
  %198 = sub i32 -3, %143
  %199 = add i32 %198, %197
  %200 = sitofp i32 %199 to float
  %201 = sub i32 %192, %194
  %202 = sub i32 -3, %151
  %203 = add i32 %202, %201
  %204 = sitofp i32 %203 to float
  %205 = or i32 %199, %203
  %206 = icmp slt i32 %205, 0
  br i1 %206, label %414, label %207

207:                                              ; preds = %190
  %208 = load float, float* %25, align 4
  %209 = load float, float* %29, align 4
  %210 = load float, float* %33, align 4
  %211 = fsub float %210, %200
  %212 = load float, float* %37, align 4
  %213 = fsub float %212, %204
  store float %208, float* %128, align 16
  store float %209, float* %129, align 4
  store float %211, float* %130, align 8
  store float %213, float* %131, align 4
  %214 = fsub float %211, %208
  %215 = fcmp olt float %214, 2.000000e+00
  %216 = fsub float %213, %209
  %217 = fcmp olt float %216, 2.000000e+00
  %218 = or i1 %215, %217
  br i1 %218, label %414, label %219

219:                                              ; preds = %207
  %220 = icmp eq i32 %2, 2
  br i1 %220, label %221, label %236

221:                                              ; preds = %219
  %222 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 1
  %223 = bitcast %struct.SkRect* %222 to i32*
  %224 = load i32, i32* %223, align 4
  %225 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 1, i32 1
  %226 = bitcast float* %225 to i32*
  %227 = load i32, i32* %226, align 4
  %228 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 1, i32 2
  %229 = load float, float* %228, align 4
  %230 = fsub float %229, %200
  %231 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 1, i32 3
  %232 = load float, float* %231, align 4
  %233 = fsub float %232, %204
  %234 = bitcast %struct.SkRect* %132 to i32*
  store i32 %224, i32* %234, align 16
  %235 = bitcast float* %133 to i32*
  store i32 %227, i32* %235, align 4
  store float %230, float* %134, align 8
  store float %233, float* %135, align 4
  br label %236

236:                                              ; preds = %221, %219
  %237 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 3
  %238 = load i8, i8* %237, align 4, !range !2
  %239 = icmp eq i8 %238, 0
  %240 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 1
  %241 = load float, float* %240, align 4
  br i1 %239, label %244, label %242

242:                                              ; preds = %236
  %243 = call float @_ZNK8SkMatrix9mapRadiusEf(%class.SkMatrix* %3, float %241) #15
  br label %244

244:                                              ; preds = %236, %242
  %245 = phi float [ %243, %242 ], [ %241, %236 ]
  %246 = fcmp ogt float %245, 1.280000e+02
  %247 = select i1 %246, float 1.280000e+02, float %245
  %248 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %5, i64 0, i32 0
  %249 = load i32, i32* %20, align 8
  %250 = call %class.SkCachedData* @_ZN11SkMaskCache10FindAndRefEf11SkBlurStylePK6SkRectiP6SkMaskP15SkResourceCache(float %247, i32 %249, %struct.SkRect* nonnull %127, i32 %2, %struct.SkMask* %248, %class.SkResourceCache* null) #15
  %251 = icmp eq %class.SkCachedData* %250, null
  br i1 %251, label %252, label %378

252:                                              ; preds = %244
  %253 = icmp sgt i32 %2, 1
  br i1 %253, label %254, label %352

254:                                              ; preds = %252
  %255 = load float, float* %128, align 16
  %256 = call float @llvm.floor.f32(float %255) #15
  %257 = fcmp olt float %256, 0x41DFFFFFE0000000
  %258 = select i1 %257, float %256, float 0x41DFFFFFE0000000
  %259 = fcmp ogt float %258, 0xC1DFFFFFE0000000
  %260 = select i1 %259, float %258, float 0xC1DFFFFFE0000000
  %261 = fptosi float %260 to i32
  %262 = load float, float* %129, align 4
  %263 = call float @llvm.floor.f32(float %262) #15
  %264 = fcmp olt float %263, 0x41DFFFFFE0000000
  %265 = select i1 %264, float %263, float 0x41DFFFFFE0000000
  %266 = fcmp ogt float %265, 0xC1DFFFFFE0000000
  %267 = select i1 %266, float %265, float 0xC1DFFFFFE0000000
  %268 = fptosi float %267 to i32
  %269 = load float, float* %130, align 8
  %270 = call float @llvm.ceil.f32(float %269) #15
  %271 = fcmp olt float %270, 0x41DFFFFFE0000000
  %272 = select i1 %271, float %270, float 0x41DFFFFFE0000000
  %273 = fcmp ogt float %272, 0xC1DFFFFFE0000000
  %274 = select i1 %273, float %272, float 0xC1DFFFFFE0000000
  %275 = fptosi float %274 to i32
  %276 = load float, float* %131, align 4
  %277 = call float @llvm.ceil.f32(float %276) #15
  %278 = fcmp olt float %277, 0x41DFFFFFE0000000
  %279 = select i1 %278, float %277, float 0x41DFFFFFE0000000
  %280 = fcmp ogt float %279, 0xC1DFFFFFE0000000
  %281 = select i1 %280, float %279, float 0xC1DFFFFFE0000000
  %282 = fptosi float %281 to i32
  %283 = zext i32 %268 to i64
  %284 = shl nuw i64 %283, 32
  %285 = zext i32 %261 to i64
  %286 = or i64 %284, %285
  %287 = zext i32 %282 to i64
  %288 = shl nuw i64 %287, 32
  %289 = zext i32 %275 to i64
  %290 = or i64 %288, %289
  store i64 %286, i64* %101, align 8
  store i64 %290, i64* %102, align 8
  %291 = sub i32 3, %261
  %292 = add i32 %291, %275
  %293 = and i32 %292, -4
  store i32 %293, i32* %57, align 8
  store i8 1, i8* %58, align 4
  %294 = call i64 @_ZNK6SkMask16computeImageSizeEv(%struct.SkMask* nonnull %14) #15
  %295 = call i8* @_ZN6SkMask10AllocImageEmNS_9AllocTypeE(i64 %294, i32 1) #15
  store i8* %295, i8** %51, align 8
  %296 = icmp eq i8* %295, null
  br i1 %296, label %414, label %297

297:                                              ; preds = %254
  %298 = bitcast %class.SkBitmap* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %298) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %298, i8 -86, i64 56, i1 false) #15
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %7) #15
  %299 = bitcast %struct.SkImageInfo* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %299) #15
  %300 = load i32, i32* %55, align 8
  %301 = load i32, i32* %53, align 8
  %302 = sub i32 %300, %301
  %303 = load i32, i32* %56, align 4
  %304 = load i32, i32* %54, align 4
  %305 = sub i32 %303, %304
  %306 = zext i32 %305 to i64
  %307 = shl nuw i64 %306, 32
  %308 = zext i32 %302 to i64
  %309 = or i64 %307, %308
  %310 = bitcast %struct.SkImageInfo* %8 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934593>, <2 x i64>* %310, align 16, !alias.scope !3
  %311 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 1
  %312 = bitcast %struct.SkISize* %311 to i64*
  store i64 %309, i64* %312, align 16, !alias.scope !3
  %313 = load i8*, i8** %51, align 8
  %314 = load i32, i32* %57, align 8
  %315 = zext i32 %314 to i64
  %316 = call zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap* nonnull %7, %struct.SkImageInfo* nonnull dereferenceable(24) %8, i8* %313, i64 %315, void (i8*, i8*)* null, i8* null) #15
  %317 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0, i32 0, i32 0
  %318 = load %class.SkColorSpace*, %class.SkColorSpace** %317, align 16
  %319 = icmp eq %class.SkColorSpace* %318, null
  br i1 %319, label %326, label %320

320:                                              ; preds = %297
  %321 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %318, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %322 = atomicrmw add i32* %321, i32 -1 acq_rel
  %323 = icmp eq i32 %322, 1
  br i1 %323, label %324, label %326

324:                                              ; preds = %320
  %325 = bitcast %class.SkColorSpace* %318 to i8*
  call void @_ZdlPv(i8* %325) #16
  br label %326

326:                                              ; preds = %297, %320, %324
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %299) #15
  %327 = bitcast %class.SkCanvas* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3232, i8* nonnull %327) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %327, i8* align 8 bitcast ({ i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.278, [384 x i64], %class.sk_sp.279, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.280", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.286" }* @__const._ZL20draw_rects_into_maskPK6SkRectiP6SkMask.canvas to i8*), i64 3232, i1 false) #15
  call void @_ZN8SkCanvasC1ERK8SkBitmap(%class.SkCanvas* nonnull %9, %class.SkBitmap* nonnull dereferenceable(56) %7) #15
  %328 = load i32, i32* %53, align 8
  %329 = sitofp i32 %328 to float
  %330 = fsub float -0.000000e+00, %329
  %331 = load i32, i32* %54, align 4
  %332 = sitofp i32 %331 to float
  %333 = fsub float -0.000000e+00, %332
  call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* nonnull %9, float %330, float %333) #15
  %334 = bitcast %class.SkPaint* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %334) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %334, i8* align 8 bitcast (%class.SkPaint* @__const._ZL20draw_rects_into_maskPK6SkRectiP6SkMask.paint to i8*), i64 72, i1 false) #15
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %10) #15
  %335 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %10, i64 0, i32 8, i32 0, i32 0
  %336 = load i32, i32* %335, align 8
  %337 = or i32 %336, 1
  store i32 %337, i32* %335, align 8
  %338 = bitcast %class.SkPath* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %338) #15
  %339 = bitcast %class.SkPathBuilder* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %338, i8 -86, i64 16, i1 false) #15
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %339) #15
  call void @_ZN13SkPathBuilderC1Ev(%class.SkPathBuilder* nonnull %12) #15
  %340 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7addRectERK6SkRect15SkPathDirectionj(%class.SkPathBuilder* nonnull %12, %struct.SkRect* nonnull dereferenceable(16) %127, i32 0, i32 0) #15
  %341 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7addRectERK6SkRect15SkPathDirectionj(%class.SkPathBuilder* %340, %struct.SkRect* dereferenceable(16) %132, i32 0, i32 0) #15
  %342 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %341, i64 0, i32 3
  store i32 1, i32* %342, align 8
  call void @_ZN13SkPathBuilder6detachEv(%class.SkPath* nonnull sret %11, %class.SkPathBuilder* %341) #15
  call void @_ZN13SkPathBuilderD1Ev(%class.SkPathBuilder* nonnull %12) #15
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %339) #15
  call void @_ZN8SkCanvas8drawPathERK6SkPathRK7SkPaint(%class.SkCanvas* nonnull %9, %class.SkPath* nonnull dereferenceable(16) %11, %class.SkPaint* nonnull dereferenceable(72) %10) #15
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %11) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %338) #15
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %10) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %334) #15
  call void @_ZN8SkCanvasD1Ev(%class.SkCanvas* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 3232, i8* nonnull %327) #15
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %298) #15
  %343 = load i8*, i8** %51, align 8
  %344 = bitcast %class.SkBlurMaskFilterImpl* %0 to i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)***
  %345 = load i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)**, i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*** %344, align 8
  %346 = getelementptr inbounds i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*, i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)** %345, i64 8
  %347 = load i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*, i1 (%class.SkBlurMaskFilterImpl*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)** %346, align 8
  %348 = call zeroext i1 %347(%class.SkBlurMaskFilterImpl* %0, %struct.SkMask* %248, %struct.SkMask* nonnull dereferenceable(32) %14, %class.SkMatrix* dereferenceable(40) %3, %struct.SkIPoint* nonnull %13) #15
  %349 = icmp eq i8* %343, null
  br i1 %349, label %351, label %350

350:                                              ; preds = %326
  call void @_ZN6SkMask9FreeImageEPv(i8* nonnull %343) #15
  br label %351

351:                                              ; preds = %326, %350
  br i1 %348, label %364, label %414

352:                                              ; preds = %252
  %353 = load i8, i8* %237, align 4, !range !2
  %354 = icmp eq i8 %353, 0
  %355 = load float, float* %240, align 4
  br i1 %354, label %358, label %356

356:                                              ; preds = %352
  %357 = call float @_ZNK8SkMatrix9mapRadiusEf(%class.SkMatrix* %3, float %355) #15
  br label %358

358:                                              ; preds = %352, %356
  %359 = phi float [ %357, %356 ], [ %355, %352 ]
  %360 = fcmp ogt float %359, 1.280000e+02
  %361 = select i1 %360, float 1.280000e+02, float %359
  %362 = load i32, i32* %20, align 8
  %363 = call zeroext i1 @_ZN10SkBlurMask8BlurRectEfP6SkMaskRK6SkRect11SkBlurStyleP8SkIPointNS0_10CreateModeE(float %361, %struct.SkMask* %248, %struct.SkRect* nonnull dereferenceable(16) %127, i32 %362, %struct.SkIPoint* nonnull %13, i32 2) #15
  br i1 %363, label %364, label %414

364:                                              ; preds = %358, %351
  %365 = load i32, i32* %20, align 8
  %366 = call i64 @_ZNK6SkMask21computeTotalImageSizeEv(%struct.SkMask* %248) #15
  %367 = call %class.SkCachedData* @_ZN15SkResourceCache13NewCachedDataEm(i64 %366) #15
  %368 = icmp eq %class.SkCachedData* %367, null
  br i1 %368, label %378, label %369

369:                                              ; preds = %364
  %370 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %367, i64 0, i32 3
  %371 = load i8*, i8** %370, align 8
  %372 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %5, i64 0, i32 0, i32 0
  %373 = load i8*, i8** %372, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %371, i8* align 1 %373, i64 %366, i1 false) #15
  %374 = load i8*, i8** %372, align 8
  call void @_ZN6SkMask9FreeImageEPv(i8* %374) #15
  %375 = bitcast i8** %370 to i64*
  %376 = load i64, i64* %375, align 8
  %377 = bitcast %"class.SkMaskFilterBase::NinePatch"* %5 to i64*
  store i64 %376, i64* %377, align 8
  call void @_ZN11SkMaskCache3AddEf11SkBlurStylePK6SkRectiRK6SkMaskP12SkCachedDataP15SkResourceCache(float %247, i32 %365, %struct.SkRect* nonnull %127, i32 %2, %struct.SkMask* dereferenceable(32) %248, %class.SkCachedData* nonnull %367, %class.SkResourceCache* null) #15
  br label %378

378:                                              ; preds = %369, %364, %244
  %379 = phi %class.SkCachedData* [ %250, %244 ], [ null, %364 ], [ %367, %369 ]
  %380 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %5, i64 0, i32 0, i32 1, i32 2
  %381 = load i32, i32* %380, align 4
  %382 = sext i32 %381 to i64
  %383 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %5, i64 0, i32 0, i32 1, i32 0
  %384 = load i32, i32* %383, align 4
  %385 = sext i32 %384 to i64
  %386 = sub nsw i64 %382, %385
  %387 = icmp slt i64 %386, 2147483647
  %388 = select i1 %387, i64 %386, i64 2147483647
  %389 = icmp sgt i64 %388, -2147483647
  %390 = select i1 %389, i64 %388, i64 -2147483647
  %391 = trunc i64 %390 to i32
  store i32 %391, i32* %380, align 4
  %392 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %5, i64 0, i32 0, i32 1, i32 3
  %393 = load i32, i32* %392, align 4
  %394 = sext i32 %393 to i64
  %395 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %5, i64 0, i32 0, i32 1, i32 1
  %396 = load i32, i32* %395, align 4
  %397 = sext i32 %396 to i64
  %398 = sub nsw i64 %394, %397
  %399 = icmp slt i64 %398, 2147483647
  %400 = select i1 %399, i64 %398, i64 2147483647
  %401 = icmp sgt i64 %400, -2147483647
  %402 = select i1 %401, i64 %400, i64 -2147483647
  %403 = trunc i64 %402 to i32
  store i32 %403, i32* %392, align 4
  store i32 0, i32* %383, align 4
  store i32 0, i32* %395, align 4
  %404 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %5, i64 0, i32 1
  %405 = bitcast %struct.SkIRect* %404 to i8*
  %406 = bitcast %struct.SkIRect* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %405, i8* align 8 %406, i64 16, i1 false)
  %407 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %5, i64 0, i32 2
  %408 = bitcast %struct.SkIPoint* %407 to i64*
  %409 = zext i32 %196 to i64
  %410 = shl nuw i64 %409, 32
  %411 = zext i32 %191 to i64
  %412 = or i64 %410, %411
  store i64 %412, i64* %408, align 8
  %413 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %5, i64 0, i32 3
  store %class.SkCachedData* %379, %class.SkCachedData** %413, align 8
  br label %414

414:                                              ; preds = %254, %378, %351, %358, %207, %190
  %415 = phi i32 [ 2, %190 ], [ 2, %207 ], [ 1, %378 ], [ 0, %351 ], [ 0, %358 ], [ 0, %254 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %126) #15
  br label %416

416:                                              ; preds = %113, %119, %414
  %417 = phi i32 [ %415, %414 ], [ 0, %119 ], [ 0, %113 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %60) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %50) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #15
  br label %418

418:                                              ; preds = %24, %28, %32, %36, %19, %6, %416
  %419 = phi i32 [ %417, %416 ], [ 2, %6 ], [ 2, %19 ], [ 2, %36 ], [ 2, %32 ], [ 2, %28 ], [ 2, %24 ]
  ret i32 %419
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK20SkBlurMaskFilterImpl17computeFastBoundsERK6SkRectPS0_(%class.SkBlurMaskFilterImpl* nocapture readonly, %struct.SkRect* nocapture readonly dereferenceable(16), %struct.SkRect* nocapture) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 1
  %5 = load float, float* %4, align 4
  %6 = fmul float %5, 3.000000e+00
  %7 = bitcast %struct.SkRect* %1 to <4 x float>*
  %8 = load <4 x float>, <4 x float>* %7, align 4
  %9 = insertelement <4 x float> undef, float %6, i32 0
  %10 = shufflevector <4 x float> %9, <4 x float> undef, <4 x i32> zeroinitializer
  %11 = fsub <4 x float> %8, %10
  %12 = fadd <4 x float> %8, %10
  %13 = shufflevector <4 x float> %11, <4 x float> %12, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %14 = bitcast %struct.SkRect* %2 to <4 x float>*
  store <4 x float> %13, <4 x float>* %14, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20SkBlurMaskFilterImpl10CreateProcER12SkReadBuffer(%class.sk_sp.18* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #3 align 2 {
  %3 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #15
  %4 = tail call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #15
  %5 = icmp ugt i32 %4, 3
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #15
  br label %7

7:                                                ; preds = %2, %6
  %8 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = select i1 %10, i32 %4, i32 0
  %12 = tail call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #15
  %13 = icmp ugt i32 %12, 3
  br i1 %13, label %14, label %15

14:                                               ; preds = %7
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #15
  br label %15

15:                                               ; preds = %7, %14
  %16 = bitcast float %3 to i32
  %17 = and i32 %16, 2139095040
  %18 = icmp ne i32 %17, 2139095040
  %19 = fcmp ogt float %3, 0.000000e+00
  %20 = and i1 %19, %18
  br i1 %20, label %21, label %37

21:                                               ; preds = %15
  %22 = load i8, i8* %8, align 8, !range !2
  %23 = tail call i8* @_Znwm(i64 24) #16, !noalias !6
  %24 = trunc i32 %12 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = or i8 %22, %26
  %28 = getelementptr inbounds i8, i8* %23, i64 8
  %29 = bitcast i8* %28 to i32*
  store i32 1, i32* %29, align 4, !noalias !6
  %30 = bitcast i8* %23 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV20SkBlurMaskFilterImpl, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8, !noalias !6
  %31 = getelementptr inbounds i8, i8* %23, i64 12
  %32 = bitcast i8* %31 to float*
  store float %3, float* %32, align 4, !noalias !6
  %33 = getelementptr inbounds i8, i8* %23, i64 16
  %34 = bitcast i8* %33 to i32*
  store i32 %11, i32* %34, align 8, !noalias !6
  %35 = getelementptr inbounds i8, i8* %23, i64 20
  store i8 %27, i8* %35, align 4, !noalias !6
  %36 = ptrtoint i8* %23 to i64
  br label %37

37:                                               ; preds = %21, %15
  %38 = phi i64 [ %36, %21 ], [ 0, %15 ]
  %39 = bitcast %class.sk_sp.18* %0 to i64*
  store i64 %38, i64* %39, align 8
  ret void
}

declare float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer*) local_unnamed_addr #5

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN12SkMaskFilter8MakeBlurE11SkBlurStylefb(%class.sk_sp.19* noalias nocapture sret, i32, float, i1 zeroext) local_unnamed_addr #8 align 2 {
  %5 = bitcast float %2 to i32
  %6 = and i32 %5, 2139095040
  %7 = icmp ne i32 %6, 2139095040
  %8 = fcmp ogt float %2, 0.000000e+00
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %22

10:                                               ; preds = %4
  %11 = tail call i8* @_Znwm(i64 24) #16
  %12 = zext i1 %3 to i8
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 1, i32* %14, align 4
  %15 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV20SkBlurMaskFilterImpl, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds i8, i8* %11, i64 12
  %17 = bitcast i8* %16 to float*
  store float %2, float* %17, align 4
  %18 = getelementptr inbounds i8, i8* %11, i64 16
  %19 = bitcast i8* %18 to i32*
  store i32 %1, i32* %19, align 8
  %20 = getelementptr inbounds i8, i8* %11, i64 20
  store i8 %12, i8* %20, align 4
  %21 = bitcast %class.sk_sp.19* %0 to i8**
  store i8* %11, i8** %21, align 8
  br label %24

22:                                               ; preds = %4
  %23 = getelementptr inbounds %class.sk_sp.19, %class.sk_sp.19* %0, i64 0, i32 0
  store %class.SkMaskFilter* null, %class.SkMaskFilter** %23, align 8
  br label %24

24:                                               ; preds = %22, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK20SkBlurMaskFilterImpl7flattenER13SkWriteBuffer(%class.SkBlurMaskFilterImpl* nocapture readonly, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 1
  %4 = load float, float* %3, align 4
  %5 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, float)***
  %6 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %7 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %6, i64 5
  %8 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %7, align 8
  tail call void %8(%class.SkWriteBuffer* %1, float %4) #15
  %9 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %12 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %12, i64 9
  %14 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %13, align 8
  tail call void %14(%class.SkWriteBuffer* %1, i32 %10) #15
  %15 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 3
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = xor i8 %16, 1
  %18 = zext i8 %17 to i32
  %19 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %11, align 8
  %20 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %19, i64 9
  %21 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %20, align 8
  tail call void %21(%class.SkWriteBuffer* %1, i32 %18) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK20SkBlurMaskFilterImpl19directFilterMaskGPUEP18GrRecordingContextP20GrSurfaceDrawContextO7GrPaintPK6GrClipRK8SkMatrixRK13GrStyledShape(%class.SkBlurMaskFilterImpl* nocapture readonly, %class.GrRecordingContext*, %class.GrSurfaceDrawContext*, %class.GrPaint* dereferenceable(48), %class.GrClip*, %class.SkMatrix* dereferenceable(40), %class.GrStyledShape* dereferenceable(208)) unnamed_addr #6 align 2 {
  %8 = alloca <2 x float>, align 8
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = alloca %struct.DrawQuad, align 4
  %11 = alloca %class.GrStyledShape, align 8
  %12 = alloca %class.SkRRect, align 4
  %13 = alloca i8, align 1
  %14 = alloca %class.SkRRect, align 4
  %15 = alloca <4 x float>, align 16
  %16 = bitcast <4 x float>* %15 to %struct.SkRect*
  %17 = alloca <2 x float>, align 8
  %18 = bitcast <2 x float>* %17 to %struct.SkPoint*
  %19 = alloca <4 x float>, align 16
  %20 = bitcast <4 x float>* %19 to %struct.SkRect*
  %21 = alloca <2 x float>, align 8
  %22 = bitcast <2 x float>* %21 to %struct.SkSize*
  %23 = alloca <4 x float>, align 16
  %24 = bitcast <4 x float>* %23 to %struct.SkRect*
  %25 = alloca %class.SkMatrix, align 16
  %26 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %358

29:                                               ; preds = %7
  %30 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %6, i64 0, i32 1, i32 0
  %31 = tail call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* %30) #15
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %358

33:                                               ; preds = %29
  %34 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %6, i64 0, i32 1, i32 1, i32 0
  %35 = load %class.SkPathEffect*, %class.SkPathEffect** %34, align 8
  %36 = icmp eq %class.SkPathEffect* %35, null
  br i1 %36, label %37, label %358

37:                                               ; preds = %33
  %38 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 3
  %39 = load i8, i8* %38, align 4, !range !2
  %40 = icmp eq i8 %39, 0
  %41 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 1
  %42 = load float, float* %41, align 4
  br i1 %40, label %45, label %43

43:                                               ; preds = %37
  %44 = tail call float @_ZNK8SkMatrix9mapRadiusEf(%class.SkMatrix* %5, float %42) #15
  br label %45

45:                                               ; preds = %37, %43
  %46 = phi float [ %44, %43 ], [ %42, %37 ]
  %47 = fcmp ogt float %46, 1.280000e+02
  %48 = select i1 %47, float 1.280000e+02, float %46
  %49 = fcmp ugt float %48, 0x3F9EB851E0000000
  br i1 %49, label %52, label %50

50:                                               ; preds = %45
  %51 = bitcast %class.GrStyledShape* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %51) #15
  call void @_ZN13GrStyledShapeC1ERKS_(%class.GrStyledShape* nonnull %11, %class.GrStyledShape* dereferenceable(208) %6) #15
  call void @_ZN20GrSurfaceDrawContext9drawShapeEPK6GrClipO7GrPaint4GrAARK8SkMatrixO13GrStyledShape(%class.GrSurfaceDrawContext* %2, %class.GrClip* %4, %class.GrPaint* dereferenceable(48) %3, i1 zeroext true, %class.SkMatrix* dereferenceable(40) %5, %class.GrStyledShape* nonnull dereferenceable(208) %11) #15
  call void @_ZN13GrStyledShapeD2Ev(%class.GrStyledShape* nonnull %11) #15
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %51) #15
  br label %358

52:                                               ; preds = %45
  %53 = bitcast %class.SkRRect* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %53) #15
  %54 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %12, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %12, i64 0, i32 0, i32 1
  %56 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %12, i64 0, i32 0, i32 2
  %57 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %12, i64 0, i32 0, i32 3
  %58 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %12, i64 0, i32 1, i64 0, i32 0
  %59 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %12, i64 0, i32 1, i64 0, i32 1
  %60 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %12, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %53, i8 0, i64 52, i1 false) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #15
  store i8 -86, i8* %13, align 1
  %61 = call zeroext i1 @_ZNK13GrStyledShape7asRRectEP7SkRRectP15SkPathDirectionPjPb(%class.GrStyledShape* %6, %class.SkRRect* nonnull %12, i32* null, i32* null, i8* nonnull %13) #15
  %62 = load i8, i8* %13, align 1
  %63 = icmp eq i8 %62, 0
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %356

65:                                               ; preds = %52
  %66 = bitcast %class.SkRRect* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %66) #15
  %67 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %14, i64 0, i32 0, i32 0
  %68 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %14, i64 0, i32 0, i32 1
  %69 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %14, i64 0, i32 0, i32 2
  %70 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %14, i64 0, i32 0, i32 3
  %71 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %14, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %66, i8 0, i64 52, i1 false) #15
  %72 = call zeroext i1 @_ZNK7SkRRect9transformERK8SkMatrixPS_(%class.SkRRect* nonnull %12, %class.SkMatrix* dereferenceable(40) %5, %class.SkRRect* nonnull %14) #15
  %73 = load i32, i32* %71, align 4
  %74 = icmp eq i32 %73, 2
  %75 = and i1 %72, %74
  br i1 %75, label %76, label %84

76:                                               ; preds = %65
  %77 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %14, i64 0, i32 1, i64 0, i32 1
  %78 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %14, i64 0, i32 1, i64 0, i32 0
  %79 = load float, float* %78, align 4
  %80 = load float, float* %77, align 4
  %81 = fsub float %79, %80
  %82 = call float @llvm.fabs.f32(float %81) #15
  %83 = fcmp ole float %82, 0x3F30000000000000
  br label %84

84:                                               ; preds = %76, %65
  %85 = phi i1 [ false, %65 ], [ %83, %76 ]
  %86 = load i32, i32* %60, align 4
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %91

88:                                               ; preds = %84
  %89 = call zeroext i1 @_ZNK8SkMatrix20preservesRightAnglesEf(%class.SkMatrix* %5, float 0x3F30000000000000) #15
  %90 = load i32, i32* %60, align 4
  br label %91

91:                                               ; preds = %88, %84
  %92 = phi i32 [ %90, %88 ], [ %86, %84 ]
  %93 = phi i1 [ %89, %88 ], [ false, %84 ]
  %94 = icmp eq i32 %92, 2
  br i1 %94, label %95, label %105

95:                                               ; preds = %91
  %96 = load float, float* %58, align 4
  %97 = load float, float* %59, align 4
  %98 = fsub float %96, %97
  %99 = call float @llvm.fabs.f32(float %98) #15
  %100 = fcmp ugt float %99, 0x3F30000000000000
  br i1 %100, label %105, label %101

101:                                              ; preds = %95
  %102 = call zeroext i1 @_ZNK8SkMatrix12isSimilarityEf(%class.SkMatrix* %5, float 0x3F30000000000000) #15
  %103 = or i1 %85, %93
  %104 = or i1 %103, %102
  br i1 %104, label %107, label %212

105:                                              ; preds = %95, %91
  %106 = or i1 %85, %93
  br i1 %106, label %107, label %212

107:                                              ; preds = %101, %105
  br i1 %93, label %108, label %115

108:                                              ; preds = %107
  %109 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %1, i64 0, i32 0, i32 0
  %110 = call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %109) #15
  %111 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %110, i64 0, i32 2, i32 0
  %112 = load %class.GrShaderCaps*, %class.GrShaderCaps** %111, align 8
  %113 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %12, i64 0, i32 0
  %114 = call %class.GrFragmentProcessor* @_ZN16GrRectBlurEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK12GrShaderCapsRK6SkRectRK8SkMatrixf(%class.GrFragmentProcessor* null, %class.GrRecordingContext* %1, %class.GrShaderCaps* dereferenceable(144) %112, %struct.SkRect* nonnull dereferenceable(16) %113, %class.SkMatrix* dereferenceable(40) %5, float %48)
  br label %154

115:                                              ; preds = %107
  %116 = bitcast <4 x float>* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #15
  %117 = bitcast <4 x float>* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %117, i8 -1, i64 16, i1 false)
  br i1 %85, label %118, label %119

118:                                              ; preds = %115
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %116, i8* nonnull align 4 %66, i64 16, i1 false)
  br label %152

119:                                              ; preds = %115
  %120 = bitcast <2 x float>* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #15
  %121 = getelementptr inbounds <2 x float>, <2 x float>* %17, i64 0, i64 0
  %122 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %18, i64 0, i32 1
  %123 = load float, float* %54, align 4
  %124 = fmul float %123, 5.000000e-01
  %125 = load float, float* %56, align 4
  %126 = fmul float %125, 5.000000e-01
  %127 = fadd float %124, %126
  store float %127, float* %121, align 8
  %128 = load float, float* %55, align 4
  %129 = fmul float %128, 5.000000e-01
  %130 = load float, float* %57, align 4
  %131 = fmul float %130, 5.000000e-01
  %132 = fadd float %129, %131
  store float %132, float* %122, align 4
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* %5, %struct.SkPoint* nonnull %18, %struct.SkPoint* nonnull %18, i32 1) #15
  %133 = load float, float* %56, align 4
  %134 = load float, float* %54, align 4
  %135 = fsub float %133, %134
  %136 = fmul float %135, 5.000000e-01
  %137 = bitcast <2 x float>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137)
  %138 = bitcast <2 x float>* %8 to %struct.SkPoint*
  %139 = getelementptr inbounds <2 x float>, <2 x float>* %8, i64 0, i64 0
  %140 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %138, i64 0, i32 1
  store float 0.000000e+00, float* %139, align 8
  store float %136, float* %140, align 4
  call void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix* %5, %struct.SkPoint* nonnull %138, %struct.SkPoint* nonnull %138, i32 1) #15
  %141 = load <2 x float>, <2 x float>* %8, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137)
  %142 = extractelement <2 x float> %141, i32 0
  %143 = extractelement <2 x float> %141, i32 1
  %144 = call float @_ZN7SkPoint6LengthEff(float %142, float %143) #15
  %145 = load <2 x float>, <2 x float>* %17, align 8
  %146 = shufflevector <2 x float> %145, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %147 = insertelement <4 x float> undef, float %144, i32 0
  %148 = shufflevector <4 x float> %147, <4 x float> undef, <4 x i32> zeroinitializer
  %149 = fsub <4 x float> %146, %148
  %150 = fadd <4 x float> %146, %148
  %151 = shufflevector <4 x float> %149, <4 x float> %150, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  store <4 x float> %151, <4 x float>* %15, align 16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #15
  br label %152

152:                                              ; preds = %119, %118
  %153 = call %class.GrFragmentProcessor* @_ZN29GrCircleBlurFragmentProcessor4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK6SkRectf(%class.GrFragmentProcessor* null, %class.GrRecordingContext* %1, %struct.SkRect* nonnull dereferenceable(16) %16, float %48) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #15
  br label %154

154:                                              ; preds = %152, %108
  %155 = phi %class.GrFragmentProcessor* [ %114, %108 ], [ %153, %152 ]
  %156 = ptrtoint %class.GrFragmentProcessor* %155 to i64
  %157 = icmp eq %class.GrFragmentProcessor* %155, null
  br i1 %157, label %347, label %158

158:                                              ; preds = %154
  %159 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %3, i64 0, i32 2
  %160 = getelementptr inbounds %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.163"* %159, i64 0, i32 0, i32 0, i32 0
  %161 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %160, align 8
  %162 = bitcast %"class.std::__1::unique_ptr.163"* %159 to i64*
  store i64 %156, i64* %162, align 8
  %163 = icmp eq %class.GrFragmentProcessor* %161, null
  br i1 %163, label %169, label %164

164:                                              ; preds = %158
  %165 = bitcast %class.GrFragmentProcessor* %161 to void (%class.GrFragmentProcessor*)***
  %166 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %165, align 8
  %167 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %166, i64 1
  %168 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %167, align 8
  call void %168(%class.GrFragmentProcessor* nonnull %161) #15
  br label %169

169:                                              ; preds = %158, %164
  %170 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %3, i64 0, i32 3
  store i8 0, i8* %170, align 8
  %171 = bitcast <4 x float>* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %171) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %171, i8* nonnull align 4 %53, i64 16, i1 false)
  %172 = fmul float %48, 3.000000e+00
  %173 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %174 = load i32, i32* %173, align 4
  %175 = trunc i32 %174 to i8
  %176 = icmp slt i8 %175, 0
  br i1 %176, label %177, label %180

177:                                              ; preds = %169
  %178 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %5) #15
  %179 = zext i8 %178 to i32
  store i32 %179, i32* %173, align 4
  br label %180

180:                                              ; preds = %169, %177
  %181 = phi i32 [ %179, %177 ], [ %174, %169 ]
  %182 = and i32 %181, 12
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %192

184:                                              ; preds = %180
  %185 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 0
  %186 = load float, float* %185, align 4
  %187 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 4
  %188 = load float, float* %187, align 4
  %189 = insertelement <2 x float> undef, float %186, i32 0
  %190 = insertelement <2 x float> %189, float %188, i32 1
  %191 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %190)
  br label %200

192:                                              ; preds = %180
  %193 = bitcast <2 x float>* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #15
  %194 = getelementptr inbounds <2 x float>, <2 x float>* %21, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %194, align 8
  %195 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %22, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %195, align 4
  %196 = call zeroext i1 @_ZNK8SkMatrix14decomposeScaleEP6SkSizePS_(%class.SkMatrix* %5, %struct.SkSize* nonnull %22, %class.SkMatrix* null) #15
  br i1 %196, label %197, label %199

197:                                              ; preds = %192
  %198 = load <2 x float>, <2 x float>* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #15
  br label %200

199:                                              ; preds = %192
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #15
  br label %210

200:                                              ; preds = %197, %184
  %201 = phi <2 x float> [ %191, %184 ], [ %198, %197 ]
  %202 = insertelement <2 x float> undef, float %172, i32 0
  %203 = shufflevector <2 x float> %202, <2 x float> undef, <2 x i32> zeroinitializer
  %204 = fdiv <2 x float> %203, %201
  %205 = shufflevector <2 x float> %204, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %206 = load <4 x float>, <4 x float>* %19, align 16
  %207 = fsub <4 x float> %206, %205
  %208 = fadd <4 x float> %206, %205
  %209 = shufflevector <4 x float> %207, <4 x float> %208, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  store <4 x float> %209, <4 x float>* %19, align 16
  call void @_ZN20GrSurfaceDrawContext8drawRectEPK6GrClipO7GrPaint4GrAARK8SkMatrixRK6SkRectPK7GrStyle(%class.GrSurfaceDrawContext* %2, %class.GrClip* %4, %class.GrPaint* dereferenceable(48) %3, i1 zeroext false, %class.SkMatrix* dereferenceable(40) %5, %struct.SkRect* nonnull dereferenceable(16) %20, %class.GrStyle* null) #15
  br label %210

210:                                              ; preds = %199, %200
  %211 = phi i1 [ true, %200 ], [ false, %199 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %171) #15
  br label %345

212:                                              ; preds = %101, %105
  %213 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %214 = load i32, i32* %213, align 4
  %215 = trunc i32 %214 to i8
  %216 = icmp slt i8 %215, 0
  br i1 %216, label %217, label %220

217:                                              ; preds = %212
  %218 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %5) #15
  %219 = zext i8 %218 to i32
  store i32 %219, i32* %213, align 4
  br label %220

220:                                              ; preds = %212, %217
  %221 = phi i32 [ %219, %217 ], [ %214, %212 ]
  %222 = and i32 %221, 12
  %223 = icmp ne i32 %222, 0
  %224 = xor i1 %72, true
  %225 = or i1 %223, %224
  br i1 %225, label %345, label %226

226:                                              ; preds = %220
  %227 = call zeroext i1 @_ZN11SkRRectPriv18AllCornersCircularERK7SkRRectf(%class.SkRRect* nonnull dereferenceable(52) %14, float 0x3F30000000000000) #15
  br i1 %227, label %228, label %345

228:                                              ; preds = %226
  %229 = load float, float* %41, align 4
  %230 = call %class.GrFragmentProcessor* @_ZN17GrRRectBlurEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextffRK7SkRRectSA_(%class.GrFragmentProcessor* null, %class.GrRecordingContext* %1, float %229, float %48, %class.SkRRect* nonnull dereferenceable(52) %12, %class.SkRRect* nonnull dereferenceable(52) %14) #15
  %231 = ptrtoint %class.GrFragmentProcessor* %230 to i64
  %232 = icmp eq %class.GrFragmentProcessor* %230, null
  br i1 %232, label %347, label %233

233:                                              ; preds = %228
  %234 = load i8, i8* %38, align 4, !range !2
  %235 = icmp eq i8 %234, 0
  br i1 %235, label %258, label %236

236:                                              ; preds = %233
  %237 = bitcast <4 x float>* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %237) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %237, i8* nonnull align 4 %53, i64 16, i1 false)
  %238 = load float, float* %41, align 4
  %239 = fmul float %238, 3.000000e+00
  %240 = load <4 x float>, <4 x float>* %23, align 16
  %241 = insertelement <4 x float> undef, float %239, i32 0
  %242 = shufflevector <4 x float> %241, <4 x float> undef, <4 x i32> zeroinitializer
  %243 = fsub <4 x float> %240, %242
  %244 = fadd <4 x float> %240, %242
  %245 = shufflevector <4 x float> %243, <4 x float> %244, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  store <4 x float> %245, <4 x float>* %23, align 16
  %246 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %3, i64 0, i32 2
  %247 = getelementptr inbounds %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.163"* %246, i64 0, i32 0, i32 0, i32 0
  %248 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %247, align 8
  %249 = bitcast %"class.std::__1::unique_ptr.163"* %246 to i64*
  store i64 %231, i64* %249, align 8
  %250 = icmp eq %class.GrFragmentProcessor* %248, null
  br i1 %250, label %256, label %251

251:                                              ; preds = %236
  %252 = bitcast %class.GrFragmentProcessor* %248 to void (%class.GrFragmentProcessor*)***
  %253 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %252, align 8
  %254 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %253, i64 1
  %255 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %254, align 8
  call void %255(%class.GrFragmentProcessor* nonnull %248) #15
  br label %256

256:                                              ; preds = %236, %251
  %257 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %3, i64 0, i32 3
  store i8 0, i8* %257, align 8
  call void @_ZN20GrSurfaceDrawContext8drawRectEPK6GrClipO7GrPaint4GrAARK8SkMatrixRK6SkRectPK7GrStyle(%class.GrSurfaceDrawContext* %2, %class.GrClip* %4, %class.GrPaint* dereferenceable(48) %3, i1 zeroext false, %class.SkMatrix* dereferenceable(40) %5, %struct.SkRect* nonnull dereferenceable(16) %24, %class.GrStyle* null) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %237) #15
  br label %345

258:                                              ; preds = %233
  %259 = bitcast %class.SkMatrix* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %259) #15
  %260 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %25, i64 0, i32 1
  %261 = bitcast %class.SkMatrix* %25 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %261, align 16
  %262 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %25, i64 0, i32 0, i64 4
  %263 = bitcast float* %262 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %263, align 16
  %264 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %25, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %264, align 16
  store i32 16, i32* %260, align 4
  %265 = load i32, i32* %213, align 4
  %266 = trunc i32 %265 to i8
  %267 = icmp slt i8 %266, 0
  br i1 %267, label %268, label %271

268:                                              ; preds = %258
  %269 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %5) #15
  %270 = zext i8 %269 to i32
  store i32 %270, i32* %213, align 4
  br label %271

271:                                              ; preds = %268, %258
  %272 = phi i32 [ %270, %268 ], [ %265, %258 ]
  %273 = and i32 %272, 15
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %277

275:                                              ; preds = %271
  %276 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %25) #15
  br label %279

277:                                              ; preds = %271
  %278 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %5, %class.SkMatrix* nonnull %25) #15
  br i1 %278, label %279, label %344

279:                                              ; preds = %275, %277
  %280 = fadd float %48, 0xBFC5555560000000
  %281 = call float @llvm.ceil.f32(float %280)
  %282 = fmul float %281, 3.000000e+00
  %283 = load float, float* %67, align 4
  %284 = fsub float %283, %282
  %285 = load float, float* %68, align 4
  %286 = fsub float %285, %282
  %287 = load float, float* %69, align 4
  %288 = fadd float %282, %287
  %289 = load float, float* %70, align 4
  %290 = fadd float %282, %289
  %291 = call float @llvm.floor.f32(float %284) #15
  %292 = fcmp olt float %291, 0x41DFFFFFE0000000
  %293 = select i1 %292, float %291, float 0x41DFFFFFE0000000
  %294 = fcmp ogt float %293, 0xC1DFFFFFE0000000
  %295 = select i1 %294, float %293, float 0xC1DFFFFFE0000000
  %296 = fptosi float %295 to i32
  %297 = call float @llvm.floor.f32(float %286) #15
  %298 = fcmp olt float %297, 0x41DFFFFFE0000000
  %299 = select i1 %298, float %297, float 0x41DFFFFFE0000000
  %300 = fcmp ogt float %299, 0xC1DFFFFFE0000000
  %301 = select i1 %300, float %299, float 0xC1DFFFFFE0000000
  %302 = fptosi float %301 to i32
  %303 = call float @llvm.ceil.f32(float %288) #15
  %304 = fcmp olt float %303, 0x41DFFFFFE0000000
  %305 = select i1 %304, float %303, float 0x41DFFFFFE0000000
  %306 = fcmp ogt float %305, 0xC1DFFFFFE0000000
  %307 = select i1 %306, float %305, float 0xC1DFFFFFE0000000
  %308 = fptosi float %307 to i32
  %309 = call float @llvm.ceil.f32(float %290) #15
  %310 = fcmp olt float %309, 0x41DFFFFFE0000000
  %311 = select i1 %310, float %309, float 0x41DFFFFFE0000000
  %312 = fcmp ogt float %311, 0xC1DFFFFFE0000000
  %313 = select i1 %312, float %311, float 0xC1DFFFFFE0000000
  %314 = fptosi float %313 to i32
  %315 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %3, i64 0, i32 2
  %316 = getelementptr inbounds %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.163"* %315, i64 0, i32 0, i32 0, i32 0
  %317 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %316, align 8
  %318 = bitcast %"class.std::__1::unique_ptr.163"* %315 to i64*
  store i64 %231, i64* %318, align 8
  %319 = icmp eq %class.GrFragmentProcessor* %317, null
  br i1 %319, label %325, label %320

320:                                              ; preds = %279
  %321 = bitcast %class.GrFragmentProcessor* %317 to void (%class.GrFragmentProcessor*)***
  %322 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %321, align 8
  %323 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %322, i64 1
  %324 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %323, align 8
  call void %324(%class.GrFragmentProcessor* nonnull %317) #15
  br label %325

325:                                              ; preds = %279, %320
  %326 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %3, i64 0, i32 3
  store i8 0, i8* %326, align 8
  %327 = bitcast { <2 x float>, <2 x float> }* %9 to %struct.SkRect*
  %328 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %328) #15
  %329 = sitofp i32 %296 to float
  %330 = insertelement <2 x float> undef, float %329, i32 0
  %331 = sitofp i32 %302 to float
  %332 = insertelement <2 x float> %330, float %331, i32 1
  %333 = sitofp i32 %308 to float
  %334 = insertelement <2 x float> undef, float %333, i32 0
  %335 = sitofp i32 %314 to float
  %336 = insertelement <2 x float> %334, float %335, i32 1
  %337 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  store <2 x float> %332, <2 x float>* %337, align 8
  %338 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  store <2 x float> %336, <2 x float>* %338, align 8
  %339 = bitcast %struct.DrawQuad* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 108, i8* nonnull %339) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %339, i8* align 4 bitcast (%struct.DrawQuad* @__const._ZN20GrSurfaceDrawContext25fillPixelsWithLocalMatrixEPK6GrClipO7GrPaintRK7SkIRectRK8SkMatrix.quad to i8*), i64 108, i1 false) #15
  %340 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %10, i64 0, i32 0
  %341 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #15
  call void @_ZN6GrQuad12MakeFromRectERK6SkRectRK8SkMatrix(%class.GrQuad* nonnull sret %340, %struct.SkRect* nonnull dereferenceable(16) %327, %class.SkMatrix* dereferenceable(40) %341) #15
  %342 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %10, i64 0, i32 1
  call void @_ZN6GrQuad12MakeFromRectERK6SkRectRK8SkMatrix(%class.GrQuad* sret %342, %struct.SkRect* nonnull dereferenceable(16) %327, %class.SkMatrix* nonnull dereferenceable(40) %25) #15
  %343 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %10, i64 0, i32 2
  store i32 0, i32* %343, align 4
  call void @_ZN20GrSurfaceDrawContext14drawFilledQuadEPK6GrClipO7GrPaint4GrAAP8DrawQuadPK21GrUserStencilSettings(%class.GrSurfaceDrawContext* %2, %class.GrClip* %4, %class.GrPaint* dereferenceable(48) %3, i1 zeroext false, %struct.DrawQuad* nonnull %10, %struct.GrUserStencilSettings* null) #15
  call void @llvm.lifetime.end.p0i8(i64 108, i8* nonnull %339) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %328) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %259) #15
  br label %345

344:                                              ; preds = %277
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %259) #15
  br label %347

345:                                              ; preds = %210, %220, %325, %256, %226
  %346 = phi i1 [ true, %256 ], [ true, %325 ], [ false, %226 ], [ false, %220 ], [ %211, %210 ]
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %66) #15
  br label %356

347:                                              ; preds = %154, %228, %344
  %348 = phi i64 [ %156, %154 ], [ %231, %344 ], [ %231, %228 ]
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %66) #15
  %349 = icmp eq i64 %348, 0
  br i1 %349, label %356, label %350

350:                                              ; preds = %347
  %351 = inttoptr i64 %348 to %class.GrFragmentProcessor*
  %352 = inttoptr i64 %348 to void (%class.GrFragmentProcessor*)***
  %353 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %352, align 8
  %354 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %353, i64 1
  %355 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %354, align 8
  call void %355(%class.GrFragmentProcessor* nonnull %351) #15
  br label %356

356:                                              ; preds = %350, %347, %345, %52
  %357 = phi i1 [ false, %52 ], [ %346, %345 ], [ false, %347 ], [ false, %350 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #15
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %53) #15
  br label %358

358:                                              ; preds = %29, %50, %356, %33, %7
  %359 = phi i1 [ false, %7 ], [ false, %33 ], [ true, %50 ], [ %357, %356 ], [ false, %29 ]
  ret i1 %359
}

declare void @_ZN20GrSurfaceDrawContext9drawShapeEPK6GrClipO7GrPaint4GrAARK8SkMatrixO13GrStyledShape(%class.GrSurfaceDrawContext*, %class.GrClip*, %class.GrPaint* dereferenceable(48), i1 zeroext, %class.SkMatrix* dereferenceable(40), %class.GrStyledShape* dereferenceable(208)) local_unnamed_addr #5

declare void @_ZN13GrStyledShapeC1ERKS_(%class.GrStyledShape*, %class.GrStyledShape* dereferenceable(208)) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13GrStyledShapeD2Ev(%class.GrStyledShape*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 6, i32 1
  %3 = load i32*, i32** %2, align 8
  %4 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 6, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i32, i32* %3, i64 %6
  br label %8

8:                                                ; preds = %8, %1
  %9 = phi i32* [ %7, %1 ], [ %11, %8 ]
  %10 = icmp ugt i32* %9, %3
  %11 = getelementptr inbounds i32, i32* %9, i64 -1
  br i1 %10, label %8, label %12

12:                                               ; preds = %8
  %13 = bitcast i32* %3 to i8*
  %14 = icmp eq i32 %5, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %12
  %16 = icmp sgt i32 %5, 8
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @_Z7sk_freePv(i8* %13) #15
  br label %18

18:                                               ; preds = %17, %15
  store i32* null, i32** %2, align 8
  store i32 0, i32* %4, align 8
  br label %19

19:                                               ; preds = %12, %18
  %20 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 5, i32 1
  %21 = load %class.SkPath*, %class.SkPath** %20, align 8
  %22 = icmp eq %class.SkPath* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %19
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %21) #15
  store %class.SkPath* null, %class.SkPath** %20, align 8
  br label %24

24:                                               ; preds = %19, %23
  %25 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 2, i32 1
  %26 = load float*, float** %25, align 8
  %27 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 2, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds float, float* %26, i64 %29
  br label %31

31:                                               ; preds = %31, %24
  %32 = phi float* [ %30, %24 ], [ %34, %31 ]
  %33 = icmp ugt float* %32, %26
  %34 = getelementptr inbounds float, float* %32, i64 -1
  br i1 %33, label %31, label %35

35:                                               ; preds = %31
  %36 = bitcast float* %26 to i8*
  %37 = icmp eq i32 %28, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %35
  %39 = icmp sgt i32 %28, 4
  br i1 %39, label %40, label %41

40:                                               ; preds = %38
  tail call void @_Z7sk_freePv(i8* %36) #15
  br label %41

41:                                               ; preds = %40, %38
  store float* null, float** %25, align 8
  store i32 0, i32* %27, align 8
  br label %42

42:                                               ; preds = %41, %35
  %43 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 1, i32 0
  %44 = load %class.SkPathEffect*, %class.SkPathEffect** %43, align 8
  %45 = icmp eq %class.SkPathEffect* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %44, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = bitcast %class.SkPathEffect* %44 to %class.SkRefCntBase*
  %52 = bitcast %class.SkPathEffect* %44 to void (%class.SkRefCntBase*)***
  %53 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, i64 2
  %55 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, align 8
  tail call void %55(%class.SkRefCntBase* nonnull %51) #15
  br label %56

56:                                               ; preds = %42, %46, %50
  %57 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 1
  %58 = load i8, i8* %57, align 8
  %59 = icmp eq i8 %58, 4
  br i1 %59, label %60, label %67

60:                                               ; preds = %56
  %61 = bitcast %class.GrStyledShape* %0 to %class.SkPath*
  %62 = getelementptr inbounds %class.SkPath, %class.SkPath* %61, i64 0, i32 4
  %63 = load i8, i8* %62, align 2
  %64 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 4
  %65 = lshr i8 %63, 1
  %66 = and i8 %65, 1
  store i8 %66, i8* %64, align 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %61) #15
  br label %67

67:                                               ; preds = %56, %60
  store i8 0, i8* %57, align 8
  %68 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 3
  store i8 1, i8* %68, align 2
  %69 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %69, align 1
  %70 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %70, align 1
  ret void
}

declare zeroext i1 @_ZNK13GrStyledShape7asRRectEP7SkRRectP15SkPathDirectionPjPb(%class.GrStyledShape*, %class.SkRRect*, i32*, i32*, i8*) local_unnamed_addr #5

declare zeroext i1 @_ZNK7SkRRect9transformERK8SkMatrixPS_(%class.SkRRect*, %class.SkMatrix* dereferenceable(40), %class.SkRRect*) local_unnamed_addr #5

declare zeroext i1 @_ZNK8SkMatrix20preservesRightAnglesEf(%class.SkMatrix*, float) local_unnamed_addr #5

declare zeroext i1 @_ZNK8SkMatrix12isSimilarityEf(%class.SkMatrix*, float) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrFragmentProcessor* @_ZN16GrRectBlurEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK12GrShaderCapsRK6SkRectRK8SkMatrixf(%class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrShaderCaps* dereferenceable(144), %struct.SkRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), float) local_unnamed_addr #6 comdat align 2 {
  %7 = alloca %class.SkMatrix, align 8
  %8 = alloca %class.SkMatrix, align 16
  %9 = alloca <4 x float>, align 16
  %10 = bitcast <4 x float>* %9 to %struct.SkRect*
  %11 = alloca %class.SkMatrix, align 16
  %12 = alloca <2 x float>, align 8
  %13 = bitcast <2 x float>* %12 to %struct.SkSize*
  %14 = ptrtoint %class.GrFragmentProcessor* %0 to i64
  %15 = fcmp ugt float %5, 0x3F9EB851E0000000
  br i1 %15, label %16, label %174

16:                                               ; preds = %6
  %17 = bitcast %class.SkMatrix* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #15
  %18 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 1
  %19 = bitcast %class.SkMatrix* %8 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %19, align 16
  %20 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 4
  %21 = bitcast float* %20 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %21, align 16
  %22 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %22, align 16
  store i32 16, i32* %18, align 4
  %23 = bitcast <4 x float>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #15
  %24 = getelementptr inbounds <4 x float>, <4 x float>* %9, i64 0, i64 0
  %25 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 1
  %26 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 2
  %27 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 3
  %28 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 1
  %29 = bitcast <4 x float>* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %29, i8 -1, i64 16, i1 false)
  %30 = load i32, i32* %28, align 4
  %31 = trunc i32 %30 to i8
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %16
  %34 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %4) #15
  %35 = zext i8 %34 to i32
  store i32 %35, i32* %28, align 4
  br label %36

36:                                               ; preds = %16, %33
  %37 = phi i32 [ %35, %33 ], [ %30, %16 ]
  %38 = and i32 %37, 16
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %36
  %41 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #15
  %42 = bitcast %class.SkMatrix* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %17, i8* align 4 %42, i64 40, i1 false)
  %43 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %4, %struct.SkRect* nonnull %10, %struct.SkRect* dereferenceable(16) %3, i32 1) #15
  br label %77

44:                                               ; preds = %36
  %45 = bitcast %class.SkMatrix* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %45) #15
  %46 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 1
  %47 = bitcast %class.SkMatrix* %11 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %47, align 16
  %48 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 4
  %49 = bitcast float* %48 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %49, align 16
  %50 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %50, align 16
  store i32 16, i32* %46, align 4
  %51 = bitcast <2 x float>* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #15
  %52 = getelementptr inbounds <2 x float>, <2 x float>* %12, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %52, align 8
  %53 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %13, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %53, align 4
  %54 = call zeroext i1 @_ZNK8SkMatrix14decomposeScaleEP6SkSizePS_(%class.SkMatrix* %4, %struct.SkSize* nonnull %13, %class.SkMatrix* nonnull %11) #15
  br i1 %54, label %55, label %76

55:                                               ; preds = %44
  %56 = load i32, i32* %46, align 4
  %57 = trunc i32 %56 to i8
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %55
  %60 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %11) #15
  %61 = zext i8 %60 to i32
  store i32 %61, i32* %46, align 4
  br label %62

62:                                               ; preds = %59, %55
  %63 = phi i32 [ %61, %59 ], [ %56, %55 ]
  %64 = and i32 %63, 15
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %62
  %67 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %8) #15
  br label %70

68:                                               ; preds = %62
  %69 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* nonnull %11, %class.SkMatrix* nonnull %8) #15
  br i1 %69, label %70, label %76

70:                                               ; preds = %66, %68
  %71 = load <2 x float>, <2 x float>* %12, align 8
  %72 = shufflevector <2 x float> %71, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %73 = bitcast %struct.SkRect* %3 to <4 x float>*
  %74 = load <4 x float>, <4 x float>* %73, align 4
  %75 = fmul <4 x float> %74, %72
  store <4 x float> %75, <4 x float>* %9, align 16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %45) #15
  br label %77

76:                                               ; preds = %68, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %45) #15
  br label %167

77:                                               ; preds = %70, %40
  %78 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %2, i64 0, i32 2
  %79 = bitcast i56* %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = and i64 %80, 131072
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %99

83:                                               ; preds = %77
  %84 = load float, float* %24, align 16
  %85 = call float @llvm.fabs.f32(float %84)
  %86 = fcmp ogt float %85, 1.600000e+04
  br i1 %86, label %167, label %87

87:                                               ; preds = %83
  %88 = load float, float* %25, align 4
  %89 = call float @llvm.fabs.f32(float %88)
  %90 = fcmp ogt float %89, 1.600000e+04
  br i1 %90, label %167, label %91

91:                                               ; preds = %87
  %92 = load float, float* %26, align 8
  %93 = call float @llvm.fabs.f32(float %92)
  %94 = fcmp ogt float %93, 1.600000e+04
  br i1 %94, label %167, label %95

95:                                               ; preds = %91
  %96 = load float, float* %27, align 4
  %97 = call float @llvm.fabs.f32(float %96)
  %98 = fcmp ogt float %97, 1.600000e+04
  br i1 %98, label %167, label %99

99:                                               ; preds = %77, %95
  %100 = fmul float %5, 6.000000e+00
  %101 = call %class.GrFragmentProcessor* @_ZN16GrRectBlurEffect14MakeIntegralFPEP18GrRecordingContextf(%class.GrRecordingContext* %1, float %100)
  %102 = icmp eq %class.GrFragmentProcessor* %101, null
  br i1 %102, label %167, label %103

103:                                              ; preds = %99
  %104 = fmul float %100, 5.000000e-01
  %105 = bitcast <4 x float>* %9 to <2 x float>*
  %106 = load <2 x float>, <2 x float>* %105, align 16
  %107 = insertelement <2 x float> undef, float %104, i32 0
  %108 = shufflevector <2 x float> %107, <2 x float> undef, <2 x i32> zeroinitializer
  %109 = fadd <2 x float> %108, %106
  %110 = extractelement <2 x float> %109, i32 0
  %111 = extractelement <2 x float> %109, i32 1
  %112 = bitcast float* %26 to <2 x float>*
  %113 = load <2 x float>, <2 x float>* %112, align 8
  %114 = fsub <2 x float> %113, %108
  %115 = extractelement <2 x float> %114, i32 0
  %116 = extractelement <2 x float> %114, i32 1
  %117 = fcmp ole float %110, %115
  %118 = fcmp ole float %111, %116
  %119 = and i1 %117, %118
  %120 = call i8* @_ZN11GrProcessornwEm(i64 128) #15
  %121 = load i32, i32* %18, align 4
  %122 = trunc i32 %121 to i8
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %103
  %125 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %8) #15
  %126 = zext i8 %125 to i32
  store i32 %126, i32* %18, align 4
  br label %127

127:                                              ; preds = %103, %124
  %128 = phi i32 [ %126, %124 ], [ %121, %103 ]
  %129 = and i32 %128, 15
  %130 = icmp ne i32 %129, 0
  %131 = bitcast %class.SkMatrix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %131)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %131, i8* nonnull align 16 %17, i64 40, i1 false)
  %132 = zext i1 %130 to i8
  %133 = zext i1 %119 to i8
  %134 = bitcast i8* %120 to %class.GrFragmentProcessor*
  %135 = icmp eq %class.GrFragmentProcessor* %0, null
  br i1 %135, label %140, label %136

136:                                              ; preds = %127
  %137 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 3
  %138 = load i32, i32* %137, align 8
  %139 = and i32 %138, 1
  br label %140

140:                                              ; preds = %127, %136
  %141 = phi i32 [ %139, %136 ], [ 1, %127 ]
  %142 = bitcast i8* %120 to i32 (...)***
  %143 = getelementptr inbounds i8, i8* %120, i64 8
  %144 = bitcast i8* %143 to i32*
  store i32 71, i32* %144, align 8
  %145 = getelementptr inbounds i8, i8* %120, i64 12
  %146 = bitcast i8* %145 to i32*
  store i32 0, i32* %146, align 4
  %147 = getelementptr inbounds i8, i8* %120, i64 24
  %148 = getelementptr inbounds i8, i8* %120, i64 16
  %149 = getelementptr inbounds i8, i8* %120, i64 32
  %150 = bitcast i8* %149 to i64*
  %151 = bitcast i8* %147 to i8**
  store i8* %148, i8** %151, align 8
  store i64 8589934592, i64* %150, align 8
  %152 = getelementptr inbounds i8, i8* %120, i64 40
  %153 = bitcast i8* %152 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %153, align 8
  %154 = getelementptr inbounds i8, i8* %120, i64 48
  %155 = bitcast i8* %154 to i32*
  store i32 %141, i32* %155, align 8
  %156 = getelementptr inbounds i8, i8* %120, i64 52
  %157 = bitcast i8* %156 to i32*
  store i32 0, i32* %157, align 4
  %158 = getelementptr inbounds i8, i8* %120, i64 56
  store i8 0, i8* %158, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV16GrRectBlurEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %142, align 8
  %159 = getelementptr inbounds i8, i8* %120, i64 60
  %160 = bitcast i8* %159 to <2 x float>*
  store <2 x float> %109, <2 x float>* %160, align 4
  %161 = getelementptr inbounds i8, i8* %120, i64 68
  %162 = bitcast i8* %161 to <2 x float>*
  store <2 x float> %114, <2 x float>* %162, align 4
  %163 = getelementptr inbounds i8, i8* %120, i64 76
  store i8 %132, i8* %163, align 4
  %164 = getelementptr inbounds i8, i8* %120, i64 80
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %164, i8* nonnull align 8 %131, i64 40, i1 false) #15
  %165 = getelementptr inbounds i8, i8* %120, i64 120
  store i8 %133, i8* %165, align 8
  call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %134, %class.GrFragmentProcessor* %0, i64 1) #15
  call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %134, %class.GrFragmentProcessor* nonnull %101, i64 3) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %131)
  %166 = ptrtoint i8* %120 to i64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #15
  br label %174

167:                                              ; preds = %99, %76, %95, %91, %87, %83
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #15
  %168 = icmp eq %class.GrFragmentProcessor* %0, null
  br i1 %168, label %174, label %169

169:                                              ; preds = %167
  %170 = bitcast %class.GrFragmentProcessor* %0 to void (%class.GrFragmentProcessor*)***
  %171 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %170, align 8
  %172 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %171, i64 1
  %173 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %172, align 8
  call void %173(%class.GrFragmentProcessor* nonnull %0) #15
  br label %174

174:                                              ; preds = %6, %140, %167, %169
  %175 = phi i64 [ 0, %167 ], [ 0, %169 ], [ %166, %140 ], [ %14, %6 ]
  %176 = inttoptr i64 %175 to %class.GrFragmentProcessor*
  ret %class.GrFragmentProcessor* %176
}

declare %class.GrFragmentProcessor* @_ZN29GrCircleBlurFragmentProcessor4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK6SkRectf(%class.GrFragmentProcessor*, %class.GrRecordingContext*, %struct.SkRect* dereferenceable(16), float) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #7

declare zeroext i1 @_ZNK8SkMatrix14decomposeScaleEP6SkSizePS_(%class.SkMatrix*, %struct.SkSize*, %class.SkMatrix*) local_unnamed_addr #5

declare void @_ZN20GrSurfaceDrawContext8drawRectEPK6GrClipO7GrPaint4GrAARK8SkMatrixRK6SkRectPK7GrStyle(%class.GrSurfaceDrawContext*, %class.GrClip*, %class.GrPaint* dereferenceable(48), i1 zeroext, %class.SkMatrix* dereferenceable(40), %struct.SkRect* dereferenceable(16), %class.GrStyle*) local_unnamed_addr #5

declare zeroext i1 @_ZN11SkRRectPriv18AllCornersCircularERK7SkRRectf(%class.SkRRect* dereferenceable(52), float) local_unnamed_addr #5

declare %class.GrFragmentProcessor* @_ZN17GrRRectBlurEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextffRK7SkRRectSA_(%class.GrFragmentProcessor*, %class.GrRecordingContext*, float, float, %class.SkRRect* dereferenceable(52), %class.SkRRect* dereferenceable(52)) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK20SkBlurMaskFilterImpl16canFilterMaskGPUERK13GrStyledShapeRK7SkIRectS5_RK8SkMatrixPS3_(%class.SkBlurMaskFilterImpl* nocapture readonly, %class.GrStyledShape* nocapture readnone dereferenceable(208), %struct.SkIRect* nocapture readonly dereferenceable(16), %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), %struct.SkIRect*) unnamed_addr #3 align 2 {
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %struct.SkIRect*
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %struct.SkIRect*
  %11 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 3
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = icmp eq i8 %12, 0
  %14 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %0, i64 0, i32 1
  %15 = load float, float* %14, align 4
  br i1 %13, label %18, label %16

16:                                               ; preds = %6
  %17 = tail call float @_ZNK8SkMatrix9mapRadiusEf(%class.SkMatrix* %4, float %15) #15
  br label %18

18:                                               ; preds = %6, %16
  %19 = phi float [ %17, %16 ], [ %15, %6 ]
  %20 = fcmp ogt float %19, 1.280000e+02
  %21 = select i1 %20, float 1.280000e+02, float %19
  %22 = fcmp ugt float %21, 0x3F9EB851E0000000
  br i1 %22, label %27, label %23

23:                                               ; preds = %18
  %24 = bitcast %struct.SkIRect* %5 to i8*
  %25 = bitcast %struct.SkIRect* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %25, i64 16, i1 false)
  %26 = tail call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* %5, %struct.SkIRect* dereferenceable(16) %5, %struct.SkIRect* dereferenceable(16) %3) #15
  br label %136

27:                                               ; preds = %18
  %28 = icmp eq %struct.SkIRect* %5, null
  br i1 %28, label %119, label %29

29:                                               ; preds = %27
  %30 = fmul float %21, 3.000000e+00
  %31 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #15
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %33 = fptosi float %30 to i32
  %34 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = sext i32 %35 to i64
  %37 = sext i32 %33 to i64
  %38 = sub nsw i64 %36, %37
  %39 = icmp slt i64 %38, 2147483647
  %40 = select i1 %39, i64 %38, i64 2147483647
  %41 = icmp sgt i64 %40, -2147483647
  %42 = select i1 %41, i64 %40, i64 -2147483647
  %43 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = sext i32 %44 to i64
  %46 = sub nsw i64 %45, %37
  %47 = icmp slt i64 %46, 2147483647
  %48 = select i1 %47, i64 %46, i64 2147483647
  %49 = icmp sgt i64 %48, -2147483647
  %50 = select i1 %49, i64 %48, i64 -2147483647
  %51 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = sext i32 %52 to i64
  %54 = add nsw i64 %53, %37
  %55 = icmp slt i64 %54, 2147483647
  %56 = select i1 %55, i64 %54, i64 2147483647
  %57 = icmp sgt i64 %56, -2147483647
  %58 = select i1 %57, i64 %56, i64 -2147483647
  %59 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %60 = load i32, i32* %59, align 4
  %61 = sext i32 %60 to i64
  %62 = add nsw i64 %61, %37
  %63 = icmp slt i64 %62, 2147483647
  %64 = select i1 %63, i64 %62, i64 2147483647
  %65 = icmp sgt i64 %64, -2147483647
  %66 = select i1 %65, i64 %64, i64 -2147483647
  %67 = shl nsw i64 %50, 32
  %68 = and i64 %42, 4294967295
  %69 = or i64 %67, %68
  %70 = shl nsw i64 %66, 32
  %71 = and i64 %58, 4294967295
  %72 = or i64 %70, %71
  %73 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  store i64 %69, i64* %73, align 8
  store i64 %72, i64* %32, align 8
  %74 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #15
  %75 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %76 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = sext i32 %77 to i64
  %79 = sub nsw i64 %78, %37
  %80 = icmp slt i64 %79, 2147483647
  %81 = select i1 %80, i64 %79, i64 2147483647
  %82 = icmp sgt i64 %81, -2147483647
  %83 = select i1 %82, i64 %81, i64 -2147483647
  %84 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = sext i32 %85 to i64
  %87 = sub nsw i64 %86, %37
  %88 = icmp slt i64 %87, 2147483647
  %89 = select i1 %88, i64 %87, i64 2147483647
  %90 = icmp sgt i64 %89, -2147483647
  %91 = select i1 %90, i64 %89, i64 -2147483647
  %92 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = sext i32 %93 to i64
  %95 = add nsw i64 %94, %37
  %96 = icmp slt i64 %95, 2147483647
  %97 = select i1 %96, i64 %95, i64 2147483647
  %98 = icmp sgt i64 %97, -2147483647
  %99 = select i1 %98, i64 %97, i64 -2147483647
  %100 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %101 = load i32, i32* %100, align 4
  %102 = sext i32 %101 to i64
  %103 = add nsw i64 %102, %37
  %104 = icmp slt i64 %103, 2147483647
  %105 = select i1 %104, i64 %103, i64 2147483647
  %106 = icmp sgt i64 %105, -2147483647
  %107 = select i1 %106, i64 %105, i64 -2147483647
  %108 = shl nsw i64 %91, 32
  %109 = and i64 %83, 4294967295
  %110 = or i64 %108, %109
  %111 = shl nsw i64 %107, 32
  %112 = and i64 %99, 4294967295
  %113 = or i64 %111, %112
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  store i64 %110, i64* %114, align 8
  store i64 %113, i64* %75, align 8
  %115 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %10, %struct.SkIRect* nonnull dereferenceable(16) %10, %struct.SkIRect* nonnull dereferenceable(16) %8) #15
  br i1 %115, label %117, label %116

116:                                              ; preds = %29
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 0, i64 16, i1 false) #15
  br label %117

117:                                              ; preds = %116, %29
  %118 = bitcast %struct.SkIRect* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %118, i8* nonnull align 8 %74, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #15
  br label %119

119:                                              ; preds = %27, %117
  %120 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = sub i32 %121, %123
  %125 = icmp slt i32 %124, 65
  br i1 %125, label %126, label %135

126:                                              ; preds = %119
  %127 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = sub i32 %128, %130
  %132 = icmp slt i32 %131, 65
  %133 = fcmp ole float %21, 3.200000e+01
  %134 = and i1 %133, %132
  br i1 %134, label %136, label %135

135:                                              ; preds = %126, %119
  br label %136

136:                                              ; preds = %126, %135, %23
  %137 = phi i1 [ %26, %23 ], [ true, %135 ], [ false, %126 ]
  ret i1 %137
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK20SkBlurMaskFilterImpl13filterMaskGPUEP18GrRecordingContext18GrSurfaceProxyView11GrColorType11SkAlphaTypeRK8SkMatrixRK7SkIRect(%class.GrSurfaceProxyView* noalias sret, %class.SkBlurMaskFilterImpl* nocapture readonly, %class.GrRecordingContext*, %class.GrSurfaceProxyView* nocapture, i32, i32, %class.SkMatrix* dereferenceable(40), %struct.SkIRect* nocapture readonly dereferenceable(16)) unnamed_addr #3 align 2 {
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = alloca %struct.DrawQuad, align 4
  %11 = alloca %class.GrSurfaceProxyView, align 8
  %12 = alloca %class.sk_sp.17, align 8
  %13 = alloca %struct.SkIRect, align 8
  %14 = alloca %struct.SkIRect, align 8
  %15 = alloca %class.GrPaint, align 8
  %16 = alloca %class.GrSurfaceProxyView, align 8
  %17 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = sub i32 %18, %20
  %22 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  %28 = shl nuw i64 %27, 32
  %29 = zext i32 %21 to i64
  %30 = or i64 %28, %29
  %31 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %1, i64 0, i32 3
  %32 = load i8, i8* %31, align 4, !range !2
  %33 = icmp eq i8 %32, 0
  %34 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %1, i64 0, i32 1
  %35 = load float, float* %34, align 4
  br i1 %33, label %38, label %36

36:                                               ; preds = %8
  %37 = tail call float @_ZNK8SkMatrix9mapRadiusEf(%class.SkMatrix* %6, float %35) #15
  br label %38

38:                                               ; preds = %8, %36
  %39 = phi float [ %37, %36 ], [ %35, %8 ]
  %40 = fcmp ogt float %39, 1.280000e+02
  %41 = select i1 %40, float 1.280000e+02, float %39
  %42 = getelementptr inbounds %class.SkBlurMaskFilterImpl, %class.SkBlurMaskFilterImpl* %1, i64 0, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %3, i64 0, i32 0, i32 0
  %46 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %45, align 8
  %47 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %46, i64 0, i32 6
  %48 = bitcast %struct.SkISize* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %11, i64 0, i32 0, i32 0
  %51 = icmp eq %class.GrSurfaceProxy* %46, null
  br i1 %51, label %55, label %52

52:                                               ; preds = %38
  %53 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %46, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i32* %53, i32 1 monotonic
  br label %55

55:                                               ; preds = %38, %52
  store %class.GrSurfaceProxy* %46, %class.GrSurfaceProxy** %50, align 8
  %56 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %11, i64 0, i32 1
  %57 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %3, i64 0, i32 1
  %58 = load i32, i32* %57, align 8
  store i32 %58, i32* %56, align 8
  %59 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %11, i64 0, i32 2, i32 0
  %60 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %3, i64 0, i32 2, i32 0
  %61 = load i16, i16* %60, align 2
  store i16 %61, i16* %59, align 4
  %62 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %12, i64 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %62, align 8
  %63 = bitcast %struct.SkIRect* %13 to i64*
  store i64 0, i64* %63, align 8
  %64 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %13, i64 0, i32 2
  %65 = bitcast i32* %64 to i64*
  store i64 %30, i64* %65, align 8
  %66 = bitcast %struct.SkIRect* %14 to i64*
  store i64 0, i64* %66, align 8
  %67 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %14, i64 0, i32 2
  %68 = bitcast i32* %67 to i64*
  store i64 %49, i64* %68, align 8
  %69 = call %class.GrSurfaceDrawContext* @_ZN14SkGpuBlurUtils12GaussianBlurEP18GrRecordingContext18GrSurfaceProxyView11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE7SkIRectS8_ff10SkTileMode12SkBackingFit(%class.GrRecordingContext* %2, %class.GrSurfaceProxyView* nonnull %11, i32 %4, i32 %5, %class.sk_sp.17* nonnull %12, %struct.SkIRect* nonnull byval(%struct.SkIRect) align 8 %13, %struct.SkIRect* nonnull byval(%struct.SkIRect) align 8 %14, float %41, float %41, i32 0, i32 0) #15
  %70 = load %class.SkColorSpace*, %class.SkColorSpace** %62, align 8
  %71 = icmp eq %class.SkColorSpace* %70, null
  br i1 %71, label %78, label %72

72:                                               ; preds = %55
  %73 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw add i32* %73, i32 -1 acq_rel
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %78

76:                                               ; preds = %72
  %77 = bitcast %class.SkColorSpace* %70 to i8*
  call void @_ZdlPv(i8* %77) #16
  br label %78

78:                                               ; preds = %55, %72, %76
  %79 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %50, align 8
  %80 = icmp eq %class.GrSurfaceProxy* %79, null
  br i1 %80, label %93, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %79, i64 0, i32 1
  %83 = getelementptr inbounds %class.SkNVRefCnt.81, %class.SkNVRefCnt.81* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw add i32* %83, i32 -1 acq_rel
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %93

86:                                               ; preds = %81
  %87 = getelementptr inbounds %class.SkNVRefCnt.81, %class.SkNVRefCnt.81* %82, i64 -2
  %88 = bitcast %class.SkNVRefCnt.81* %87 to %class.GrSurfaceProxy*
  %89 = bitcast %class.SkNVRefCnt.81* %87 to void (%class.GrSurfaceProxy*)***
  %90 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %89, align 8
  %91 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %90, i64 1
  %92 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %91, align 8
  call void %92(%class.GrSurfaceProxy* nonnull %88) #15
  br label %93

93:                                               ; preds = %78, %81, %86
  %94 = icmp eq %class.GrSurfaceDrawContext* %69, null
  br i1 %94, label %215, label %95

95:                                               ; preds = %93
  %96 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %69, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %97 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %96, align 8
  %98 = icmp eq %class.GrSurfaceProxy* %97, null
  br i1 %98, label %207, label %99

99:                                               ; preds = %95
  %100 = bitcast %class.GrSurfaceProxy* %97 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %101 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %100, align 8
  %102 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %101, i64 3
  %103 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %102, align 8
  %104 = call %class.GrTextureProxy* %103(%class.GrSurfaceProxy* nonnull %97) #15
  %105 = icmp eq %class.GrTextureProxy* %104, null
  br i1 %105, label %207, label %106

106:                                              ; preds = %99
  br i1 %44, label %193, label %107

107:                                              ; preds = %106
  %108 = bitcast %class.GrPaint* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %108) #15
  %109 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  %110 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %15, i64 0, i32 2, i32 0, i32 0, i32 0
  %111 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %15, i64 0, i32 3
  %112 = bitcast %class.GrPaint* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 -86, i64 28, i1 false)
  %113 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %15, i64 0, i32 6, i64 0
  %114 = bitcast i8* %113 to i32*
  store i32 -1431655766, i32* %114, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 0, i64 24, i1 false) #15
  store i8 1, i8* %111, align 8
  %115 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %15, i64 0, i32 5
  %116 = bitcast %struct.SkRGBA4f* %115 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %116, i8* align 4 bitcast (%struct.SkRGBA4f* @_ZL17SK_PMColor4fWHITE to i8*), i64 16, i1 false) #15
  %117 = bitcast %class.GrSurfaceProxyView* %3 to i64*
  %118 = load i64, i64* %117, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %45, align 8
  %119 = bitcast %class.GrSurfaceProxyView* %16 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %16, i64 0, i32 1
  %121 = load i32, i32* %57, align 8
  store i32 %121, i32* %120, align 8
  %122 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %16, i64 0, i32 2, i32 0
  %123 = load i16, i16* %60, align 2
  store i16 %123, i16* %122, align 4
  %124 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #15
  %125 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView* nonnull %16, i32 %5, %class.SkMatrix* dereferenceable(40) %124, i32 0, i32 0) #15
  %126 = ptrtoint %class.GrFragmentProcessor* %125 to i64
  %127 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %15, i64 0, i32 2
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.163"* %127, i64 0, i32 0, i32 0, i32 0
  %129 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %128, align 8
  %130 = bitcast %"class.std::__1::unique_ptr.163"* %127 to i64*
  store i64 %126, i64* %130, align 8
  %131 = icmp eq %class.GrFragmentProcessor* %129, null
  br i1 %131, label %137, label %132

132:                                              ; preds = %107
  %133 = bitcast %class.GrFragmentProcessor* %129 to void (%class.GrFragmentProcessor*)***
  %134 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %133, align 8
  %135 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %134, i64 1
  %136 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %135, align 8
  call void %136(%class.GrFragmentProcessor* nonnull %129) #15
  br label %137

137:                                              ; preds = %107, %132
  store i8 0, i8* %111, align 8
  %138 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %16, i64 0, i32 0, i32 0
  %139 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %138, align 8
  %140 = icmp eq %class.GrSurfaceProxy* %139, null
  br i1 %140, label %153, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %139, i64 0, i32 1
  %143 = getelementptr inbounds %class.SkNVRefCnt.81, %class.SkNVRefCnt.81* %142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = atomicrmw add i32* %143, i32 -1 acq_rel
  %145 = icmp eq i32 %144, 1
  br i1 %145, label %146, label %153

146:                                              ; preds = %141
  %147 = getelementptr inbounds %class.SkNVRefCnt.81, %class.SkNVRefCnt.81* %142, i64 -2
  %148 = bitcast %class.SkNVRefCnt.81* %147 to %class.GrSurfaceProxy*
  %149 = bitcast %class.SkNVRefCnt.81* %147 to void (%class.GrSurfaceProxy*)***
  %150 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %149, align 8
  %151 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %150, i64 1
  %152 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %151, align 8
  call void %152(%class.GrSurfaceProxy* nonnull %148) #15
  br label %153

153:                                              ; preds = %137, %141, %146
  %154 = load i32, i32* %42, align 8
  %155 = add i32 %154, -1
  %156 = icmp ult i32 %155, 3
  br i1 %156, label %157, label %161

157:                                              ; preds = %153
  %158 = sext i32 %155 to i64
  %159 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZNK20SkBlurMaskFilterImpl13filterMaskGPUEP18GrRecordingContext18GrSurfaceProxyView11GrColorType11SkAlphaTypeRK8SkMatrixRK7SkIRect, i64 0, i64 %158
  %160 = load i32, i32* %159, align 4
  br label %161

161:                                              ; preds = %153, %157
  %162 = phi i32 [ %160, %157 ], [ 5, %153 ]
  call void @_ZN7GrPaint25setCoverageSetOpXPFactoryEN8SkRegion2OpEb(%class.GrPaint* nonnull %15, i32 %162, i1 zeroext false) #15
  %163 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #15
  %164 = bitcast { <2 x float>, <2 x float> }* %9 to %struct.SkRect*
  %165 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %165) #15
  %166 = sitofp i32 %21 to float
  %167 = insertelement <2 x float> undef, float %166, i32 0
  %168 = sitofp i32 %26 to float
  %169 = insertelement <2 x float> %167, float %168, i32 1
  %170 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %170, align 8
  %171 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  store <2 x float> %169, <2 x float>* %171, align 8
  %172 = bitcast %struct.DrawQuad* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 108, i8* nonnull %172) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %172, i8* align 4 bitcast (%struct.DrawQuad* @__const._ZN20GrSurfaceDrawContext25fillPixelsWithLocalMatrixEPK6GrClipO7GrPaintRK7SkIRectRK8SkMatrix.quad to i8*), i64 108, i1 false) #15
  %173 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %10, i64 0, i32 0
  %174 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #15
  call void @_ZN6GrQuad12MakeFromRectERK6SkRectRK8SkMatrix(%class.GrQuad* nonnull sret %173, %struct.SkRect* nonnull dereferenceable(16) %164, %class.SkMatrix* dereferenceable(40) %174) #15
  %175 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %10, i64 0, i32 1
  call void @_ZN6GrQuad12MakeFromRectERK6SkRectRK8SkMatrix(%class.GrQuad* sret %175, %struct.SkRect* nonnull dereferenceable(16) %164, %class.SkMatrix* dereferenceable(40) %163) #15
  %176 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %10, i64 0, i32 2
  store i32 0, i32* %176, align 4
  call void @_ZN20GrSurfaceDrawContext14drawFilledQuadEPK6GrClipO7GrPaint4GrAAP8DrawQuadPK21GrUserStencilSettings(%class.GrSurfaceDrawContext* nonnull %69, %class.GrClip* null, %class.GrPaint* nonnull dereferenceable(48) %15, i1 zeroext false, %struct.DrawQuad* nonnull %10, %struct.GrUserStencilSettings* null) #15
  call void @llvm.lifetime.end.p0i8(i64 108, i8* nonnull %172) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %165) #15
  %177 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %110, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %110, align 8
  %178 = icmp eq %class.GrFragmentProcessor* %177, null
  br i1 %178, label %184, label %179

179:                                              ; preds = %161
  %180 = bitcast %class.GrFragmentProcessor* %177 to void (%class.GrFragmentProcessor*)***
  %181 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %180, align 8
  %182 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %181, i64 1
  %183 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %182, align 8
  call void %183(%class.GrFragmentProcessor* nonnull %177) #15
  br label %184

184:                                              ; preds = %179, %161
  %185 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %109, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %109, align 8
  %186 = icmp eq %class.GrFragmentProcessor* %185, null
  br i1 %186, label %192, label %187

187:                                              ; preds = %184
  %188 = bitcast %class.GrFragmentProcessor* %185 to void (%class.GrFragmentProcessor*)***
  %189 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %188, align 8
  %190 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %189, i64 1
  %191 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %190, align 8
  call void %191(%class.GrFragmentProcessor* nonnull %185) #15
  br label %192

192:                                              ; preds = %184, %187
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %108) #15
  br label %193

193:                                              ; preds = %192, %106
  %194 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 0, i32 0
  %195 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %96, align 8, !noalias !9
  %196 = icmp eq %class.GrSurfaceProxy* %195, null
  br i1 %196, label %200, label %197

197:                                              ; preds = %193
  %198 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %195, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = atomicrmw add i32* %198, i32 1 monotonic, !noalias !9
  br label %200

200:                                              ; preds = %197, %193
  store %class.GrSurfaceProxy* %195, %class.GrSurfaceProxy** %194, align 8, !alias.scope !9
  %201 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 1
  %202 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %69, i64 0, i32 0, i32 0, i32 2, i32 1
  %203 = load i32, i32* %202, align 8, !noalias !9
  store i32 %203, i32* %201, align 8, !alias.scope !9
  %204 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2, i32 0
  %205 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %69, i64 0, i32 0, i32 0, i32 2, i32 2, i32 0
  %206 = load i16, i16* %205, align 2, !noalias !9
  store i16 %206, i16* %204, align 2, !alias.scope !9
  br label %210

207:                                              ; preds = %95, %99
  %208 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2
  %209 = bitcast %class.GrSurfaceProxyView* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %209, i8 0, i64 16, i1 false)
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %208, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0)) #15
  br i1 %94, label %218, label %210

210:                                              ; preds = %200, %207
  %211 = bitcast %class.GrSurfaceDrawContext* %69 to void (%class.GrSurfaceDrawContext*)***
  %212 = load void (%class.GrSurfaceDrawContext*)**, void (%class.GrSurfaceDrawContext*)*** %211, align 8
  %213 = getelementptr inbounds void (%class.GrSurfaceDrawContext*)*, void (%class.GrSurfaceDrawContext*)** %212, i64 1
  %214 = load void (%class.GrSurfaceDrawContext*)*, void (%class.GrSurfaceDrawContext*)** %213, align 8
  call void %214(%class.GrSurfaceDrawContext* nonnull %69) #15
  br label %218

215:                                              ; preds = %93
  %216 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2
  %217 = bitcast %class.GrSurfaceProxyView* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %217, i8 0, i64 16, i1 false)
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %216, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0)) #15
  br label %218

218:                                              ; preds = %215, %207, %210
  ret void
}

declare %class.GrSurfaceDrawContext* @_ZN14SkGpuBlurUtils12GaussianBlurEP18GrRecordingContext18GrSurfaceProxyView11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE7SkIRectS8_ff10SkTileMode12SkBackingFit(%class.GrRecordingContext*, %class.GrSurfaceProxyView*, i32, i32, %class.sk_sp.17*, %struct.SkIRect* byval(%struct.SkIRect) align 8, %struct.SkIRect* byval(%struct.SkIRect) align 8, float, float, i32, i32) local_unnamed_addr #5

declare %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i32, i32) local_unnamed_addr #5

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #5

declare void @_ZN7GrPaint25setCoverageSetOpXPFactoryEN8SkRegion2OpEb(%class.GrPaint*, i32, i1 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z38sk_register_blur_maskfilter_createprocv() local_unnamed_addr #3 {
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), void (%class.sk_sp.18*, %class.SkReadBuffer*)* nonnull @_ZN20SkBlurMaskFilterImpl10CreateProcER12SkReadBuffer) #15
  ret void
}

declare void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8*, void (%class.sk_sp.18*, %class.SkReadBuffer*)*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20SkBlurMaskFilterImplD0Ev(%class.SkBlurMaskFilterImpl*) unnamed_addr #9 comdat align 2 {
  %2 = bitcast %class.SkBlurMaskFilterImpl* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #3 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #15
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.18*, %class.SkReadBuffer*)* @_ZNK20SkBlurMaskFilterImpl10getFactoryEv(%class.SkBlurMaskFilterImpl*) unnamed_addr #3 comdat align 2 {
  ret void (%class.sk_sp.18*, %class.SkReadBuffer*)* @_ZN20SkBlurMaskFilterImpl10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK20SkBlurMaskFilterImpl11getTypeNameEv(%class.SkBlurMaskFilterImpl*) unnamed_addr #3 comdat align 2 {
  ret i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK12SkMaskFilter18getFlattenableTypeEv(%class.SkMaskFilter*) unnamed_addr #3 comdat align 2 {
  ret i32 4
}

declare %class.GrFragmentProcessor* @_ZNK16SkMaskFilterBase21onAsFragmentProcessorERK8GrFPArgs(%class.SkMaskFilterBase*, %struct.GrFPArgs* dereferenceable(40)) unnamed_addr #5

declare zeroext i1 @_ZNK16SkMaskFilterBase22onHasFragmentProcessorEv(%class.SkMaskFilterBase*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkRefCntBaseD2Ev(%class.SkRefCntBase*) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #12

declare float @_ZNK8SkMatrix9mapRadiusEf(%class.SkMatrix*, float) local_unnamed_addr #5

declare %class.SkCachedData* @_ZN11SkMaskCache10FindAndRefEf11SkBlurStyleRK7SkRRectP6SkMaskP15SkResourceCache(float, i32, %class.SkRRect* dereferenceable(52), %struct.SkMask*, %class.SkResourceCache*) local_unnamed_addr #5

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #5

declare zeroext i1 @_ZN8SkBitmap17installMaskPixelsERK6SkMask(%class.SkBitmap*, %struct.SkMask* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN8SkCanvasC1ERK8SkBitmap(%class.SkCanvas*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #5

declare void @_ZN8SkCanvas9translateEff(%class.SkCanvas*, float, float) local_unnamed_addr #5

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #5

declare void @_ZN8SkCanvas9drawRRectERK7SkRRectRK7SkPaint(%class.SkCanvas*, %class.SkRRect* dereferenceable(52), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZN8SkCanvasD1Ev(%class.SkCanvas*) unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #13

declare i64 @_ZNK6SkMask16computeImageSizeEv(%struct.SkMask*) local_unnamed_addr #5

declare i8* @_ZN6SkMask10AllocImageEmNS_9AllocTypeE(i64, i32) local_unnamed_addr #5

declare void @_ZN11SkMaskCache3AddEf11SkBlurStyleRK7SkRRectRK6SkMaskP12SkCachedDataP15SkResourceCache(float, i32, %class.SkRRect* dereferenceable(52), %struct.SkMask* dereferenceable(32), %class.SkCachedData*, %class.SkResourceCache*) local_unnamed_addr #5

declare i64 @_ZNK6SkMask21computeTotalImageSizeEv(%struct.SkMask*) local_unnamed_addr #5

declare %class.SkCachedData* @_ZN15SkResourceCache13NewCachedDataEm(i64) local_unnamed_addr #5

declare void @_ZN6SkMask9FreeImageEPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #7

declare %class.SkCachedData* @_ZN11SkMaskCache10FindAndRefEf11SkBlurStylePK6SkRectiP6SkMaskP15SkResourceCache(float, i32, %struct.SkRect*, i32, %struct.SkMask*, %class.SkResourceCache*) local_unnamed_addr #5

declare void @_ZN13SkPathBuilderC1Ev(%class.SkPathBuilder*) unnamed_addr #5

declare void @_ZN13SkPathBuilder6detachEv(%class.SkPath* sret, %class.SkPathBuilder*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN13SkPathBuilderD1Ev(%class.SkPathBuilder*) unnamed_addr #13

declare void @_ZN8SkCanvas8drawPathERK6SkPathRK7SkPaint(%class.SkCanvas*, %class.SkPath* dereferenceable(16), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #13

declare zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, void (i8*, i8*)*, i8*) local_unnamed_addr #5

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7addRectERK6SkRect15SkPathDirectionj(%class.SkPathBuilder*, %struct.SkRect* dereferenceable(16), i32, i32) local_unnamed_addr #5

declare void @_ZN11SkMaskCache3AddEf11SkBlurStylePK6SkRectiRK6SkMaskP12SkCachedDataP15SkResourceCache(float, i32, %struct.SkRect*, i32, %struct.SkMask* dereferenceable(32), %class.SkCachedData*, %class.SkResourceCache*) local_unnamed_addr #5

declare i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec*) local_unnamed_addr #5

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #5

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrFragmentProcessor* @_ZN16GrRectBlurEffect14MakeIntegralFPEP18GrRecordingContextf(%class.GrRecordingContext*, float) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %class.GrUniqueKey, align 8
  %4 = alloca %class.SkMatrix, align 16
  %5 = alloca %class.GrSurfaceProxyView, align 8
  %6 = alloca %class.GrSurfaceProxyView, align 8
  %7 = alloca %class.SkBitmap, align 8
  %8 = alloca %"class.std::__1::tuple.317", align 8
  %9 = alloca %class.GrSurfaceProxyView, align 8
  %10 = alloca %class.GrSurfaceProxyView, align 8
  %11 = tail call %class.GrThreadSafeCache* @_ZN18GrRecordingContext15threadSafeCacheEv(%class.GrRecordingContext* %0) #15
  %12 = tail call i32 @_ZN14SkGpuBlurUtils19CreateIntegralTableEfP8SkBitmap(float %1, %class.SkBitmap* null) #15
  %13 = load atomic i8, i8* bitcast (i64* @_ZGVZN16GrRectBlurEffect14MakeIntegralFPEP18GrRecordingContextfE7kDomain to i8*) acquire, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %21, !prof !12

15:                                               ; preds = %2
  %16 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN16GrRectBlurEffect14MakeIntegralFPEP18GrRecordingContextfE7kDomain) #15
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = tail call i32 @_ZN11GrUniqueKey14GenerateDomainEv() #15
  store i32 %19, i32* @_ZZN16GrRectBlurEffect14MakeIntegralFPEP18GrRecordingContextfE7kDomain, align 4
  %20 = tail call {}* @llvm.invariant.start.p0i8(i64 4, i8* bitcast (i32* @_ZZN16GrRectBlurEffect14MakeIntegralFPEP18GrRecordingContextfE7kDomain to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN16GrRectBlurEffect14MakeIntegralFPEP18GrRecordingContextfE7kDomain) #15
  br label %21

21:                                               ; preds = %2, %18, %15
  %22 = bitcast %class.GrUniqueKey* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %22) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 40, i1 false)
  %23 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %3, i64 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i64 0
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i64 1
  %26 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %3, i64 0, i32 1, i32 0
  %27 = bitcast %class.SkData** %26 to i64*
  store i64 0, i64* %27, align 8
  %28 = load i32, i32* @_ZZN16GrRectBlurEffect14MakeIntegralFPEP18GrRecordingContextfE7kDomain, align 4
  store i32* %24, i32** %23, align 8
  %29 = or i32 %28, 786432
  store i32 %29, i32* %25, align 4
  %30 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %3, i64 0, i32 2
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i8** %30, align 8
  %31 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i64 2
  store i32 %12, i32* %31, align 8
  %32 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i64 1
  %33 = lshr i32 %29, 16
  %34 = zext i32 %33 to i64
  %35 = add nsw i64 %34, -4
  %36 = call i32 @_Z17GrResourceKeyHashPKjm(i32* %32, i64 %35) #15
  store i32 %36, i32* %24, align 8
  %37 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %37) #15
  %38 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 1
  %39 = sitofp i32 %12 to float
  %40 = fdiv float %39, %1
  %41 = bitcast %class.SkMatrix* %4 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %41, align 16, !alias.scope !13
  %42 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 4
  %43 = bitcast float* %42 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %43, align 16, !alias.scope !13
  %44 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %44, align 16, !alias.scope !13
  store i32 16, i32* %38, align 4, !alias.scope !13
  %45 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix* nonnull %4, float %40, float 1.000000e+00) #15
  %46 = bitcast %class.GrSurfaceProxyView* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #15
  %47 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %5, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %5, i64 0, i32 1
  %49 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %5, i64 0, i32 2, i32 0
  %50 = bitcast %class.GrSurfaceProxyView* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 16, i1 false)
  call void @_ZN17GrThreadSafeCache4findERK11GrUniqueKey(%class.GrSurfaceProxyView* nonnull sret %5, %class.GrThreadSafeCache* %11, %class.GrUniqueKey* nonnull dereferenceable(56) %3) #15
  %51 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %47, align 8
  %52 = icmp eq %class.GrSurfaceProxy* %51, null
  br i1 %52, label %77, label %53

53:                                               ; preds = %21
  %54 = ptrtoint %class.GrSurfaceProxy* %51 to i64
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %47, align 8
  %55 = bitcast %class.GrSurfaceProxyView* %6 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %6, i64 0, i32 1
  %57 = load i32, i32* %48, align 8
  store i32 %57, i32* %56, align 8
  %58 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %6, i64 0, i32 2, i32 0
  %59 = load i16, i16* %49, align 4
  store i16 %59, i16* %58, align 4
  %60 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView* nonnull %6, i32 2, %class.SkMatrix* nonnull dereferenceable(40) %4, i32 1, i32 0) #15
  %61 = ptrtoint %class.GrFragmentProcessor* %60 to i64
  %62 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %6, i64 0, i32 0, i32 0
  %63 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %62, align 8
  %64 = icmp eq %class.GrSurfaceProxy* %63, null
  br i1 %64, label %191, label %65

65:                                               ; preds = %53
  %66 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %63, i64 0, i32 1
  %67 = getelementptr inbounds %class.SkNVRefCnt.81, %class.SkNVRefCnt.81* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw add i32* %67, i32 -1 acq_rel
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %191

70:                                               ; preds = %65
  %71 = getelementptr inbounds %class.SkNVRefCnt.81, %class.SkNVRefCnt.81* %66, i64 -2
  %72 = bitcast %class.SkNVRefCnt.81* %71 to %class.GrSurfaceProxy*
  %73 = bitcast %class.SkNVRefCnt.81* %71 to void (%class.GrSurfaceProxy*)***
  %74 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %73, align 8
  %75 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %74, i64 1
  %76 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %75, align 8
  call void %76(%class.GrSurfaceProxy* nonnull %72) #15
  br label %191

77:                                               ; preds = %21
  %78 = bitcast %class.SkBitmap* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %78) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %7) #15
  %79 = call i32 @_ZN14SkGpuBlurUtils19CreateIntegralTableEfP8SkBitmap(float %1, %class.SkBitmap* nonnull %7) #15
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %189, label %81

81:                                               ; preds = %77
  %82 = bitcast %"class.std::__1::tuple.317"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #15
  call void @_Z29GrMakeUncachedBitmapProxyViewP18GrRecordingContextRK8SkBitmap11GrMipmapped12SkBackingFit10SkBudgeted(%"class.std::__1::tuple.317"* nonnull sret %8, %class.GrRecordingContext* %0, %class.SkBitmap* nonnull dereferenceable(56) %7, i1 zeroext false, i32 1, i1 zeroext true) #15
  %83 = getelementptr inbounds %"class.std::__1::tuple.317", %"class.std::__1::tuple.317"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = bitcast %"class.std::__1::tuple.317"* %8 to i64*
  %85 = load i64, i64* %84, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %83, align 8
  %86 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %47, align 8
  %87 = bitcast %class.GrSurfaceProxyView* %5 to i64*
  store i64 %85, i64* %87, align 8
  %88 = icmp eq %class.GrSurfaceProxy* %86, null
  br i1 %88, label %103, label %89

89:                                               ; preds = %81
  %90 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %86, i64 0, i32 1
  %91 = getelementptr inbounds %class.SkNVRefCnt.81, %class.SkNVRefCnt.81* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = atomicrmw add i32* %91, i32 -1 acq_rel
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %101

94:                                               ; preds = %89
  %95 = getelementptr inbounds %class.SkNVRefCnt.81, %class.SkNVRefCnt.81* %90, i64 -2
  %96 = bitcast %class.SkNVRefCnt.81* %95 to %class.GrSurfaceProxy*
  %97 = bitcast %class.SkNVRefCnt.81* %95 to void (%class.GrSurfaceProxy*)***
  %98 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %97, align 8
  %99 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %98, i64 1
  %100 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %99, align 8
  call void %100(%class.GrSurfaceProxy* nonnull %96) #15
  br label %101

101:                                              ; preds = %94, %89
  %102 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %83, align 8
  br label %103

103:                                              ; preds = %101, %81
  %104 = phi %class.GrSurfaceProxy* [ %102, %101 ], [ null, %81 ]
  %105 = getelementptr inbounds %"class.std::__1::tuple.317", %"class.std::__1::tuple.317"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %106 = load i32, i32* %105, align 8
  store i32 %106, i32* %48, align 8
  %107 = getelementptr inbounds %"class.std::__1::tuple.317", %"class.std::__1::tuple.317"* %8, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %108 = load i16, i16* %107, align 4
  store i16 %108, i16* %49, align 4
  %109 = icmp eq %class.GrSurfaceProxy* %104, null
  br i1 %109, label %122, label %110

110:                                              ; preds = %103
  %111 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %104, i64 0, i32 1
  %112 = getelementptr inbounds %class.SkNVRefCnt.81, %class.SkNVRefCnt.81* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = atomicrmw add i32* %112, i32 -1 acq_rel
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %115, label %122

115:                                              ; preds = %110
  %116 = getelementptr inbounds %class.SkNVRefCnt.81, %class.SkNVRefCnt.81* %111, i64 -2
  %117 = bitcast %class.SkNVRefCnt.81* %116 to %class.GrSurfaceProxy*
  %118 = bitcast %class.SkNVRefCnt.81* %116 to void (%class.GrSurfaceProxy*)***
  %119 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %118, align 8
  %120 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %119, i64 1
  %121 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %120, align 8
  call void %121(%class.GrSurfaceProxy* nonnull %117) #15
  br label %122

122:                                              ; preds = %103, %110, %115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #15
  %123 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %47, align 8
  %124 = icmp eq %class.GrSurfaceProxy* %123, null
  br i1 %124, label %189, label %125

125:                                              ; preds = %122
  %126 = bitcast %class.GrSurfaceProxyView* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %126) #15
  call void @_ZN17GrThreadSafeCache3addERK11GrUniqueKeyRK18GrSurfaceProxyView(%class.GrSurfaceProxyView* nonnull sret %9, %class.GrThreadSafeCache* %11, %class.GrUniqueKey* nonnull dereferenceable(56) %3, %class.GrSurfaceProxyView* nonnull dereferenceable(16) %5) #15
  %127 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %9, i64 0, i32 0, i32 0
  %128 = bitcast %class.GrSurfaceProxyView* %9 to i64*
  %129 = load i64, i64* %128, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %127, align 8
  %130 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %47, align 8
  store i64 %129, i64* %87, align 8
  %131 = icmp eq %class.GrSurfaceProxy* %130, null
  br i1 %131, label %146, label %132

132:                                              ; preds = %125
  %133 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %130, i64 0, i32 1
  %134 = getelementptr inbounds %class.SkNVRefCnt.81, %class.SkNVRefCnt.81* %133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = atomicrmw add i32* %134, i32 -1 acq_rel
  %136 = icmp eq i32 %135, 1
  br i1 %136, label %137, label %144

137:                                              ; preds = %132
  %138 = getelementptr inbounds %class.SkNVRefCnt.81, %class.SkNVRefCnt.81* %133, i64 -2
  %139 = bitcast %class.SkNVRefCnt.81* %138 to %class.GrSurfaceProxy*
  %140 = bitcast %class.SkNVRefCnt.81* %138 to void (%class.GrSurfaceProxy*)***
  %141 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %140, align 8
  %142 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %141, i64 1
  %143 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %142, align 8
  call void %143(%class.GrSurfaceProxy* nonnull %139) #15
  br label %144

144:                                              ; preds = %137, %132
  %145 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %127, align 8
  br label %146

146:                                              ; preds = %144, %125
  %147 = phi %class.GrSurfaceProxy* [ %145, %144 ], [ null, %125 ]
  %148 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %9, i64 0, i32 1
  %149 = load i32, i32* %148, align 8
  store i32 %149, i32* %48, align 8
  %150 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %9, i64 0, i32 2, i32 0
  %151 = load i16, i16* %150, align 4
  store i16 %151, i16* %49, align 4
  %152 = icmp eq %class.GrSurfaceProxy* %147, null
  br i1 %152, label %165, label %153

153:                                              ; preds = %146
  %154 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %147, i64 0, i32 1
  %155 = getelementptr inbounds %class.SkNVRefCnt.81, %class.SkNVRefCnt.81* %154, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = atomicrmw add i32* %155, i32 -1 acq_rel
  %157 = icmp eq i32 %156, 1
  br i1 %157, label %158, label %165

158:                                              ; preds = %153
  %159 = getelementptr inbounds %class.SkNVRefCnt.81, %class.SkNVRefCnt.81* %154, i64 -2
  %160 = bitcast %class.SkNVRefCnt.81* %159 to %class.GrSurfaceProxy*
  %161 = bitcast %class.SkNVRefCnt.81* %159 to void (%class.GrSurfaceProxy*)***
  %162 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %161, align 8
  %163 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %162, i64 1
  %164 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %163, align 8
  call void %164(%class.GrSurfaceProxy* nonnull %160) #15
  br label %165

165:                                              ; preds = %146, %153, %158
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %126) #15
  %166 = load i64, i64* %87, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %47, align 8
  %167 = bitcast %class.GrSurfaceProxyView* %10 to i64*
  store i64 %166, i64* %167, align 8
  %168 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 1
  %169 = load i32, i32* %48, align 8
  store i32 %169, i32* %168, align 8
  %170 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 2, i32 0
  %171 = load i16, i16* %49, align 4
  store i16 %171, i16* %170, align 4
  %172 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView* nonnull %10, i32 2, %class.SkMatrix* nonnull dereferenceable(40) %4, i32 1, i32 0) #15
  %173 = ptrtoint %class.GrFragmentProcessor* %172 to i64
  %174 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 0, i32 0
  %175 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %174, align 8
  %176 = icmp eq %class.GrSurfaceProxy* %175, null
  br i1 %176, label %189, label %177

177:                                              ; preds = %165
  %178 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %175, i64 0, i32 1
  %179 = getelementptr inbounds %class.SkNVRefCnt.81, %class.SkNVRefCnt.81* %178, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = atomicrmw add i32* %179, i32 -1 acq_rel
  %181 = icmp eq i32 %180, 1
  br i1 %181, label %182, label %189

182:                                              ; preds = %177
  %183 = getelementptr inbounds %class.SkNVRefCnt.81, %class.SkNVRefCnt.81* %178, i64 -2
  %184 = bitcast %class.SkNVRefCnt.81* %183 to %class.GrSurfaceProxy*
  %185 = bitcast %class.SkNVRefCnt.81* %183 to void (%class.GrSurfaceProxy*)***
  %186 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %185, align 8
  %187 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %186, i64 1
  %188 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %187, align 8
  call void %188(%class.GrSurfaceProxy* nonnull %184) #15
  br label %189

189:                                              ; preds = %122, %182, %177, %165, %77
  %190 = phi i64 [ 0, %77 ], [ 0, %122 ], [ %173, %165 ], [ %173, %177 ], [ %173, %182 ]
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %78) #15
  br label %191

191:                                              ; preds = %70, %65, %53, %189
  %192 = phi i64 [ %190, %189 ], [ %61, %53 ], [ %61, %65 ], [ %61, %70 ]
  %193 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %47, align 8
  %194 = icmp eq %class.GrSurfaceProxy* %193, null
  br i1 %194, label %207, label %195

195:                                              ; preds = %191
  %196 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %193, i64 0, i32 1
  %197 = getelementptr inbounds %class.SkNVRefCnt.81, %class.SkNVRefCnt.81* %196, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = atomicrmw add i32* %197, i32 -1 acq_rel
  %199 = icmp eq i32 %198, 1
  br i1 %199, label %200, label %207

200:                                              ; preds = %195
  %201 = getelementptr inbounds %class.SkNVRefCnt.81, %class.SkNVRefCnt.81* %196, i64 -2
  %202 = bitcast %class.SkNVRefCnt.81* %201 to %class.GrSurfaceProxy*
  %203 = bitcast %class.SkNVRefCnt.81* %201 to void (%class.GrSurfaceProxy*)***
  %204 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %203, align 8
  %205 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %204, i64 1
  %206 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %205, align 8
  call void %206(%class.GrSurfaceProxy* nonnull %202) #15
  br label %207

207:                                              ; preds = %200, %195, %191
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %37) #15
  %208 = load %class.SkData*, %class.SkData** %26, align 8
  %209 = icmp eq %class.SkData* %208, null
  br i1 %209, label %216, label %210

210:                                              ; preds = %207
  %211 = getelementptr inbounds %class.SkData, %class.SkData* %208, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = atomicrmw add i32* %211, i32 -1 acq_rel
  %213 = icmp eq i32 %212, 1
  br i1 %213, label %214, label %216

214:                                              ; preds = %210
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %208) #15
  %215 = bitcast %class.SkData* %208 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %215) #15
  br label %216

216:                                              ; preds = %214, %210, %207
  %217 = load i32*, i32** %23, align 8
  %218 = icmp eq i32* %217, %24
  br i1 %218, label %221, label %219

219:                                              ; preds = %216
  %220 = bitcast i32* %217 to i8*
  call void @_Z7sk_freePv(i8* %220) #15
  br label %221

221:                                              ; preds = %216, %219
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %22) #15
  %222 = inttoptr i64 %192 to %class.GrFragmentProcessor*
  ret %class.GrFragmentProcessor* %222
}

declare i8* @_ZN11GrProcessornwEm(i64) local_unnamed_addr #5

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #5

declare i32 @_ZN14SkGpuBlurUtils19CreateIntegralTableEfP8SkBitmap(float, %class.SkBitmap*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #14

declare i32 @_ZN11GrUniqueKey14GenerateDomainEv() local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #14

declare void @_ZN17GrThreadSafeCache4findERK11GrUniqueKey(%class.GrSurfaceProxyView* sret, %class.GrThreadSafeCache*, %class.GrUniqueKey* dereferenceable(56)) local_unnamed_addr #5

declare void @_Z29GrMakeUncachedBitmapProxyViewP18GrRecordingContextRK8SkBitmap11GrMipmapped12SkBackingFit10SkBudgeted(%"class.std::__1::tuple.317"* sret, %class.GrRecordingContext*, %class.SkBitmap* dereferenceable(56), i1 zeroext, i32, i1 zeroext) local_unnamed_addr #5

declare void @_ZN17GrThreadSafeCache3addERK11GrUniqueKeyRK18GrSurfaceProxyView(%class.GrSurfaceProxyView* sret, %class.GrThreadSafeCache*, %class.GrUniqueKey* dereferenceable(56), %class.GrSurfaceProxyView* dereferenceable(16)) local_unnamed_addr #5

declare %class.GrThreadSafeCache* @_ZN18GrRecordingContext15threadSafeCacheEv(%class.GrRecordingContext*) local_unnamed_addr #5

declare i32 @_Z17GrResourceKeyHashPKjm(i32*, i64) local_unnamed_addr #5

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #13

declare void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor*, %class.GrFragmentProcessor*, i64) local_unnamed_addr #5

declare %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base*) local_unnamed_addr #5

declare void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #5

declare void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #5

declare float @_ZN7SkPoint6LengthEff(float, float) local_unnamed_addr #5

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #5

declare zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix*, %class.SkMatrix*) local_unnamed_addr #5

declare void @_ZN6GrQuad12MakeFromRectERK6SkRectRK8SkMatrix(%class.GrQuad* sret, %struct.SkRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #5

declare void @_ZN20GrSurfaceDrawContext14drawFilledQuadEPK6GrClipO7GrPaint4GrAAP8DrawQuadPK21GrUserStencilSettings(%class.GrSurfaceDrawContext*, %class.GrClip*, %class.GrPaint* dereferenceable(48), i1 zeroext, %struct.DrawQuad*, %struct.GrUserStencilSettings*) local_unnamed_addr #5

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle*, i8*) unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %4 = load i8, i8* %1, align 1
  %5 = sext i8 %4 to i32
  switch i32 %5, label %11 [
    i32 114, label %12
    i32 103, label %6
    i32 98, label %7
    i32 97, label %8
    i32 48, label %9
    i32 49, label %10
  ]

6:                                                ; preds = %2
  br label %12

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  br label %12

9:                                                ; preds = %2
  br label %12

10:                                               ; preds = %2
  br label %12

11:                                               ; preds = %2
  tail call void @llvm.trap() #15
  unreachable

12:                                               ; preds = %2, %6, %7, %8, %9, %10
  %13 = phi i16 [ 5, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %2 ]
  %14 = getelementptr inbounds i8, i8* %1, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  switch i32 %16, label %22 [
    i32 114, label %23
    i32 103, label %17
    i32 98, label %18
    i32 97, label %19
    i32 48, label %20
    i32 49, label %21
  ]

17:                                               ; preds = %12
  br label %23

18:                                               ; preds = %12
  br label %23

19:                                               ; preds = %12
  br label %23

20:                                               ; preds = %12
  br label %23

21:                                               ; preds = %12
  br label %23

22:                                               ; preds = %12
  tail call void @llvm.trap() #15
  unreachable

23:                                               ; preds = %12, %17, %18, %19, %20, %21
  %24 = phi i16 [ 80, %21 ], [ 64, %20 ], [ 48, %19 ], [ 32, %18 ], [ 16, %17 ], [ 0, %12 ]
  %25 = or i16 %24, %13
  %26 = getelementptr inbounds i8, i8* %1, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  switch i32 %28, label %34 [
    i32 114, label %35
    i32 103, label %29
    i32 98, label %30
    i32 97, label %31
    i32 48, label %32
    i32 49, label %33
  ]

29:                                               ; preds = %23
  br label %35

30:                                               ; preds = %23
  br label %35

31:                                               ; preds = %23
  br label %35

32:                                               ; preds = %23
  br label %35

33:                                               ; preds = %23
  br label %35

34:                                               ; preds = %23
  tail call void @llvm.trap() #15
  unreachable

35:                                               ; preds = %23, %29, %30, %31, %32, %33
  %36 = phi i16 [ 1280, %33 ], [ 1024, %32 ], [ 768, %31 ], [ 512, %30 ], [ 256, %29 ], [ 0, %23 ]
  %37 = or i16 %25, %36
  %38 = getelementptr inbounds i8, i8* %1, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  switch i32 %40, label %46 [
    i32 114, label %47
    i32 103, label %41
    i32 98, label %42
    i32 97, label %43
    i32 48, label %44
    i32 49, label %45
  ]

41:                                               ; preds = %35
  br label %47

42:                                               ; preds = %35
  br label %47

43:                                               ; preds = %35
  br label %47

44:                                               ; preds = %35
  br label %47

45:                                               ; preds = %35
  br label %47

46:                                               ; preds = %35
  tail call void @llvm.trap() #15
  unreachable

47:                                               ; preds = %35, %41, %42, %43, %44, %45
  %48 = phi i16 [ 20480, %45 ], [ 16384, %44 ], [ 12288, %43 ], [ 8192, %42 ], [ 4096, %41 ], [ 0, %35 ]
  %49 = or i16 %37, %48
  store i16 %49, i16* %3, align 2
  ret void
}

declare i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer*) local_unnamed_addr #5

declare void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #7

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { cold noreturn nounwind }
attributes #13 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!5 = distinct !{!5, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN12SkMaskFilter8MakeBlurE11SkBlurStylefb: argument 0"}
!8 = distinct !{!8, !"_ZN12SkMaskFilter8MakeBlurE11SkBlurStylefb"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN16GrSurfaceContext15readSurfaceViewEv: argument 0"}
!11 = distinct !{!11, !"_ZN16GrSurfaceContext15readSurfaceViewEv"}
!12 = !{!"branch_weights", i32 1, i32 1048575}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN8SkMatrix5ScaleEff: argument 0"}
!15 = distinct !{!15, !"_ZN8SkMatrix5ScaleEff"}
