; ModuleID = 'gen/third_party/blink/renderer/core/mathml_element_factory.cc'
source_filename = "gen/third_party/blink/renderer/core/mathml_element_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::HashMap.61" = type { %"class.WTF::HashTable.62" }
%"class.WTF::HashTable.62" = type <{ %"struct.WTF::KeyValuePair.65"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.65" = type { %"class.WTF::AtomicString", %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::MathMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.8" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.19", %"class.blink::Member.21", %"class.blink::Member.0", %"class.blink::Member.23", %"class.blink::Member.23", %"class.blink::Member.42", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.51", %"class.blink::HeapVector.53" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::Document"* }
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.30" }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.34", i32, %"class.blink::HeapVector" }
%"class.blink::Member.34" = type { %"class.blink::MemberBase.35" }
%"class.blink::MemberBase.35" = type { %"class.blink::Element"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.38" }
%"class.WTF::Vector.38" = type { %"class.WTF::VectorBuffer.39" }
%"class.WTF::VectorBuffer.39" = type { %"class.WTF::VectorBufferBase.40" }
%"class.WTF::VectorBufferBase.40" = type { %"class.blink::Member.34"*, i32, i32 }
%"class.blink::Member.42" = type { %"class.blink::MemberBase.43" }
%"class.blink::MemberBase.43" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.48" }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::HeapHashMap.50"* }
%"class.blink::HeapHashMap.50" = type opaque
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.53" = type { %"class.WTF::Vector.56" }
%"class.WTF::Vector.56" = type { %"class.WTF::VectorBuffer.57" }
%"class.WTF::VectorBuffer.57" = type { %"class.WTF::VectorBufferBase.58" }
%"class.WTF::VectorBufferBase.58" = type { %"class.blink::Member.59"*, i32, i32 }
%"class.blink::Member.59" = type opaque
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.12", %"class.blink::Member.14", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.12" = type { %"class.WTF::SingleThreadedBitField.13" }
%"class.WTF::SingleThreadedBitField.13" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.17", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.17" = type { %"class.base::RefCounted.18" }
%"class.base::RefCounted.18" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Document" = type opaque
%"class.blink::CreateElementFlags" = type <{ i8, [7 x i8], %"class.blink::Document"*, i8, [7 x i8] }>
%"struct.blink::CreateMathMLFunctionMapData" = type { %"class.blink::QualifiedName"*, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* }
%"class.blink::MathMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.236", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.243", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.97" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.97" = type { %"struct.std::__1::__atomic_base.98" }
%"struct.std::__1::__atomic_base.98" = type { %"struct.std::__1::__atomic_base.99" }
%"struct.std::__1::__atomic_base.99" = type { %"struct.std::__1::__cxx_atomic_impl.100" }
%"struct.std::__1::__cxx_atomic_impl.100" = type { %"struct.std::__1::__cxx_atomic_base_impl.101" }
%"struct.std::__1::__cxx_atomic_base_impl.101" = type { i64 }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::Worklist.108"* }
%"class.blink::Worklist.108" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.97" }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.blink::Worklist.115"* }
%"class.blink::Worklist.115" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.97" }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::Worklist.122"* }
%"class.blink::Worklist.122" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.97" }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.blink::Worklist.129"* }
%"class.blink::Worklist.129" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.97" }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::Worklist.136"* }
%"class.blink::Worklist.136" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.97" }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::Worklist.143"* }
%"class.blink::Worklist.143" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.97" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.blink::Worklist.150"* }
%"class.blink::Worklist.150" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.97" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.157", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159", %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.108"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.115"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.122"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.129"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.136"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.222" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.243" = type { %"struct.std::__1::__atomic_base.244" }
%"struct.std::__1::__atomic_base.244" = type { %"struct.std::__1::__cxx_atomic_impl.245" }
%"struct.std::__1::__cxx_atomic_impl.245" = type { %"struct.std::__1::__cxx_atomic_base_impl.246" }
%"struct.std::__1::__cxx_atomic_base_impl.246" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::MathMLRowElement" = type { %"class.blink::MathMLElement" }
%"class.blink::MathMLFractionElement" = type { %"class.blink::MathMLElement" }
%"class.blink::MathMLScriptsElement" = type <{ %"class.blink::MathMLElement", i32, [4 x i8] }>
%"class.blink::MathMLOperatorElement" = type <{ %"class.blink::MathMLElement", %"class.absl::optional", %"struct.blink::MathMLOperatorElement::Properties", [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon.272 }
%union.anon.272 = type { %"struct.blink::MathMLOperatorElement::OperatorContent" }
%"struct.blink::MathMLOperatorElement::OperatorContent" = type <{ %"class.WTF::String", i32, i8, [3 x i8] }>
%"struct.blink::MathMLOperatorElement::Properties" = type { i8, i8, [2 x i8] }
%"class.blink::MathMLUnderOverElement" = type { %"class.blink::MathMLScriptsElement.base", [4 x i8] }
%"class.blink::MathMLScriptsElement.base" = type <{ %"class.blink::MathMLElement", i32 }>
%"class.blink::MathMLPaddedElement" = type { %"class.blink::MathMLRowElement" }
%"class.blink::MathMLRadicalElement" = type { %"class.blink::MathMLRowElement" }
%"class.blink::MathMLSpaceElement" = type { %"class.blink::MathMLElement" }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink25MakeGarbageCollectedTraitINS_13MathMLElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_16MathMLRowElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_21MathMLFractionElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20MathMLScriptsElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_21MathMLOperatorElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_22MathMLUnderOverElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_19MathMLPaddedElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20MathMLRadicalElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_18MathMLSpaceElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_PFPN5blink13MathMLElementERNS3_8DocumentENS3_18CreateElementFlagsEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERKS1_RKSA_EENS_18HashTableAddResultISK_SB_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_PFPN5blink13MathMLElementERNS3_8DocumentENS3_18CreateElementFlagsEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSB_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_PFPN5blink13MathMLElementERNS3_8DocumentENS3_18CreateElementFlagsEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSB_jSL_ = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZN5blinkL21g_mathml_constructorsE = internal unnamed_addr global %"class.WTF::HashMap.61"* null, align 8
@_ZZN5blinkL23CreateMathMLFunctionMapEvE4data = internal global [30 x %"struct.blink::CreateMathMLFunctionMapData"] zeroinitializer, align 16
@_ZGVZN5blinkL23CreateMathMLFunctionMapEvE4data = internal global i64 0, align 8
@_ZN5blink12mathml_names14kAnnotationTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names17kAnnotationXmlTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names11kMactionTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names14kMalignmarkTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names8kMathTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names10kMerrorTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names9kMfracTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names10kMglyphTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names6kMiTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names17kMmultiscriptsTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names6kMnTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names6kMoTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names9kMoverTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names11kMpaddedTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names12kMphantomTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names15kMprescriptsTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names9kMrootTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names8kMrowTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names6kMsTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names10kMspaceTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names9kMsqrtTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names10kMstyleTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names8kMsubTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names11kMsubsupTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names8kMsupTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names9kMtextTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names10kMunderTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names14kMunderoverTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names8kNoneTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names13kSemanticsTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapINS_12AtomicStringEPFPN5blink13MathMLElementERNS3_8DocumentENS3_18CreateElementFlagsEENS_16AtomicStringHashENS_10HashTraitsIS2_EENSC_ISA_EENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [326 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::HashMap<WTF::AtomicString, blink::MathMLElement *(*)(blink::Document &, blink::CreateElementFlags), WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<blink::MathMLElement *(*)(blink::Document &, blink::CreateElementFlags)>, WTF::PartitionAllocator>]\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external local_unnamed_addr global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.3 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.4 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringEPFPN5blink13MathMLElementERNS3_8DocumentENS3_18CreateElementFlagsEEEEEEPKcv = private unnamed_addr constant [157 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::AtomicString, blink::MathMLElement *(*)(blink::Document &, blink::CreateElementFlags)>]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MathMLElement"* @_ZN5blink20MathMLElementFactory6CreateERKN3WTF12AtomicStringERNS_8DocumentENS_18CreateElementFlagsE(%"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readonly byval(%"class.blink::CreateElementFlags") align 8) local_unnamed_addr #0 align 2 {
  %4 = load %"class.WTF::HashMap.61"*, %"class.WTF::HashMap.61"** @_ZN5blinkL21g_mathml_constructorsE, align 8
  %5 = icmp eq %"class.WTF::HashMap.61"* %4, null
  br i1 %5, label %6, label %71

6:                                                ; preds = %3
  %7 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 24, i8* getelementptr inbounds ([326 x i8], [326 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapINS_12AtomicStringEPFPN5blink13MathMLElementERNS3_8DocumentENS3_18CreateElementFlagsEENS_16AtomicStringHashENS_10HashTraitsIS2_EENSC_ISA_EENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #7
  store i8* %7, i8** bitcast (%"class.WTF::HashMap.61"** @_ZN5blinkL21g_mathml_constructorsE to i8**), align 8
  %8 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL23CreateMathMLFunctionMapEvE4data to i8*) acquire, align 8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %45, !prof !2

10:                                               ; preds = %6
  %11 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL23CreateMathMLFunctionMapEvE4data) #7
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %45, label %13

13:                                               ; preds = %10
  %14 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names14kAnnotationTagE to i64*), align 8
  store i64 %14, i64* bitcast ([30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL27MathMLAnnotationConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 0, i32 1), align 8
  %15 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names17kAnnotationXmlTagE to i64*), align 8
  store i64 %15, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 1, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL30MathMLAnnotationXmlConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 1, i32 1), align 8
  %16 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names11kMactionTagE to i64*), align 8
  store i64 %16, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 2, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL24MathMLMactionConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 2, i32 1), align 8
  %17 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names14kMalignmarkTagE to i64*), align 8
  store i64 %17, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 3, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL27MathMLMalignmarkConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 3, i32 1), align 8
  %18 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names8kMathTagE to i64*), align 8
  store i64 %18, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 4, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL21MathMLMathConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 4, i32 1), align 8
  %19 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names10kMerrorTagE to i64*), align 8
  store i64 %19, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 5, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL23MathMLMerrorConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 5, i32 1), align 8
  %20 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names9kMfracTagE to i64*), align 8
  store i64 %20, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 6, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL22MathMLMfracConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 6, i32 1), align 8
  %21 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names10kMglyphTagE to i64*), align 8
  store i64 %21, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 7, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL23MathMLMglyphConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 7, i32 1), align 8
  %22 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names6kMiTagE to i64*), align 8
  store i64 %22, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 8, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL19MathMLMiConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 8, i32 1), align 8
  %23 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names17kMmultiscriptsTagE to i64*), align 8
  store i64 %23, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 9, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL30MathMLMmultiscriptsConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 9, i32 1), align 8
  %24 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names6kMnTagE to i64*), align 8
  store i64 %24, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 10, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL19MathMLMnConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 10, i32 1), align 8
  %25 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names6kMoTagE to i64*), align 8
  store i64 %25, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 11, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL19MathMLMoConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 11, i32 1), align 8
  %26 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names9kMoverTagE to i64*), align 8
  store i64 %26, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 12, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL22MathMLMoverConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 12, i32 1), align 8
  %27 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names11kMpaddedTagE to i64*), align 8
  store i64 %27, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 13, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL24MathMLMpaddedConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 13, i32 1), align 8
  %28 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names12kMphantomTagE to i64*), align 8
  store i64 %28, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 14, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL25MathMLMphantomConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 14, i32 1), align 8
  %29 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names15kMprescriptsTagE to i64*), align 8
  store i64 %29, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 15, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL28MathMLMprescriptsConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 15, i32 1), align 8
  %30 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names9kMrootTagE to i64*), align 8
  store i64 %30, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 16, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL22MathMLMrootConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 16, i32 1), align 8
  %31 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names8kMrowTagE to i64*), align 8
  store i64 %31, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 17, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL21MathMLMrowConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 17, i32 1), align 8
  %32 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names6kMsTagE to i64*), align 8
  store i64 %32, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 18, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL19MathMLMsConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 18, i32 1), align 8
  %33 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names10kMspaceTagE to i64*), align 8
  store i64 %33, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 19, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL23MathMLMspaceConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 19, i32 1), align 8
  %34 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names9kMsqrtTagE to i64*), align 8
  store i64 %34, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 20, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL22MathMLMsqrtConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 20, i32 1), align 8
  %35 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names10kMstyleTagE to i64*), align 8
  store i64 %35, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 21, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL23MathMLMstyleConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 21, i32 1), align 8
  %36 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names8kMsubTagE to i64*), align 8
  store i64 %36, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 22, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL21MathMLMsubConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 22, i32 1), align 8
  %37 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names11kMsubsupTagE to i64*), align 8
  store i64 %37, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 23, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL24MathMLMsubsupConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 23, i32 1), align 8
  %38 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names8kMsupTagE to i64*), align 8
  store i64 %38, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 24, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL21MathMLMsupConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 24, i32 1), align 8
  %39 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names9kMtextTagE to i64*), align 8
  store i64 %39, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 25, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL22MathMLMtextConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 25, i32 1), align 8
  %40 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names10kMunderTagE to i64*), align 8
  store i64 %40, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 26, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL23MathMLMunderConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 26, i32 1), align 8
  %41 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names14kMunderoverTagE to i64*), align 8
  store i64 %41, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 27, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL27MathMLMunderoverConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 27, i32 1), align 8
  %42 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names8kNoneTagE to i64*), align 8
  store i64 %42, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 28, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL21MathMLNoneConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 28, i32 1), align 8
  %43 = load i64, i64* bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names13kSemanticsTagE to i64*), align 8
  store i64 %43, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 29, i32 0) to i64*), align 16
  store %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blinkL26MathMLSemanticsConstructorERNS_8DocumentENS_18CreateElementFlagsE, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** getelementptr inbounds ([30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 29, i32 1), align 8
  %44 = tail call {}* @llvm.invariant.start.p0i8(i64 480, i8* bitcast ([30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data to i8*)) #7
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL23CreateMathMLFunctionMapEvE4data) #7
  br label %45

45:                                               ; preds = %13, %10, %6
  br label %46

46:                                               ; preds = %45, %66
  %47 = phi i64 [ %67, %66 ], [ 0, %45 ]
  %48 = load %"class.WTF::HashMap.61"*, %"class.WTF::HashMap.61"** @_ZN5blinkL21g_mathml_constructorsE, align 8
  %49 = getelementptr inbounds [30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 %47, i32 0
  %50 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %49, align 16
  %51 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %50, i64 0, i32 0, i32 0
  %52 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %52, i64 0, i32 3
  %54 = getelementptr inbounds [30 x %"struct.blink::CreateMathMLFunctionMapData"], [30 x %"struct.blink::CreateMathMLFunctionMapData"]* @_ZZN5blinkL23CreateMathMLFunctionMapEvE4data, i64 0, i64 %47, i32 1
  %55 = getelementptr inbounds %"class.WTF::HashMap.61", %"class.WTF::HashMap.61"* %48, i64 0, i32 0
  %56 = tail call { %"struct.WTF::KeyValuePair.65"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_PFPN5blink13MathMLElementERNS3_8DocumentENS3_18CreateElementFlagsEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERKS1_RKSA_EENS_18HashTableAddResultISK_SB_EEOT0_OT1_(%"class.WTF::HashTable.62"* %55, %"class.WTF::AtomicString"* dereferenceable(8) %53, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** dereferenceable(8) %54) #7
  %57 = extractvalue { %"struct.WTF::KeyValuePair.65"*, i8 } %56, 1
  %58 = and i8 %57, 1
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %66

60:                                               ; preds = %46
  %61 = extractvalue { %"struct.WTF::KeyValuePair.65"*, i8 } %56, 0
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.65", %"struct.WTF::KeyValuePair.65"* %61, i64 0, i32 1
  %63 = bitcast %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** %54 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** %62 to i64*
  store i64 %64, i64* %65, align 8
  br label %66

66:                                               ; preds = %60, %46
  %67 = add nuw nsw i64 %47, 1
  %68 = icmp eq i64 %67, 30
  br i1 %68, label %69, label %46

69:                                               ; preds = %66
  %70 = load %"class.WTF::HashMap.61"*, %"class.WTF::HashMap.61"** @_ZN5blinkL21g_mathml_constructorsE, align 8
  br label %71

71:                                               ; preds = %69, %3
  %72 = phi %"class.WTF::HashMap.61"* [ %70, %69 ], [ %4, %3 ]
  %73 = getelementptr inbounds %"class.WTF::HashMap.61", %"class.WTF::HashMap.61"* %72, i64 0, i32 0, i32 0
  %74 = load %"struct.WTF::KeyValuePair.65"*, %"struct.WTF::KeyValuePair.65"** %73, align 8
  %75 = icmp eq %"struct.WTF::KeyValuePair.65"* %74, null
  br i1 %75, label %133, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.WTF::HashMap.61", %"class.WTF::HashMap.61"* %72, i64 0, i32 0, i32 1
  %78 = load i32, i32* %77, align 8
  %79 = add i32 %78, -1
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = lshr i32 %84, 8
  %86 = and i32 %85, %79
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.65", %"struct.WTF::KeyValuePair.65"* %74, i64 %87
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.65", %"struct.WTF::KeyValuePair.65"* %88, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %133, label %92

92:                                               ; preds = %76
  %93 = xor i32 %85, -1
  %94 = lshr i32 %84, 31
  %95 = add nsw i32 %94, %93
  %96 = shl i32 %95, 12
  %97 = xor i32 %96, %95
  %98 = lshr i32 %97, 7
  %99 = xor i32 %98, %97
  %100 = shl i32 %99, 2
  %101 = xor i32 %100, %99
  %102 = lshr i32 %101, 20
  %103 = xor i32 %102, %101
  %104 = or i32 %103, 1
  %105 = zext i32 %104 to i64
  br label %106

106:                                              ; preds = %116, %92
  %107 = phi %"struct.WTF::KeyValuePair.65"* [ %88, %92 ], [ %121, %116 ]
  %108 = phi i64 [ %87, %92 ], [ %120, %116 ]
  %109 = phi i64 [ 0, %92 ], [ %118, %116 ]
  %110 = bitcast %"struct.WTF::KeyValuePair.65"* %107 to i8**
  %111 = load i8*, i8** %110, align 8
  %112 = icmp ne i8* %111, inttoptr (i64 -1 to i8*)
  %113 = bitcast i8* %111 to %"class.WTF::StringImpl"*
  %114 = icmp eq %"class.WTF::StringImpl"* %82, %113
  %115 = and i1 %112, %114
  br i1 %115, label %125, label %116

116:                                              ; preds = %106
  %117 = icmp eq i64 %109, 0
  %118 = select i1 %117, i64 %105, i64 %109
  %119 = add i64 %118, %108
  %120 = and i64 %119, %80
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.65", %"struct.WTF::KeyValuePair.65"* %74, i64 %120
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.65", %"struct.WTF::KeyValuePair.65"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %133, label %106

125:                                              ; preds = %106
  %126 = icmp eq %"struct.WTF::KeyValuePair.65"* %107, null
  br i1 %126, label %133, label %127

127:                                              ; preds = %125
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair.65", %"struct.WTF::KeyValuePair.65"* %107, i64 0, i32 1
  %129 = load %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)*, %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** %128, align 8
  %130 = icmp eq %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* %129, null
  br i1 %130, label %133, label %131

131:                                              ; preds = %127
  %132 = tail call %"class.blink::MathMLElement"* %129(%"class.blink::Document"* %1, %"class.blink::CreateElementFlags"* nonnull byval(%"class.blink::CreateElementFlags") align 8 %2) #7
  br label %133

133:                                              ; preds = %116, %76, %71, %125, %127, %131
  %134 = phi %"class.blink::MathMLElement"* [ %132, %131 ], [ null, %127 ], [ null, %125 ], [ null, %71 ], [ null, %76 ], [ null, %116 ]
  ret %"class.blink::MathMLElement"* %134
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL27MathMLAnnotationConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = load %"class.blink::MathMLQualifiedName"*, %"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names14kAnnotationTagE, align 8
  %4 = tail call %"class.blink::MathMLElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13MathMLElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* %0) #7
  ret %"class.blink::MathMLElement"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL30MathMLAnnotationXmlConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = load %"class.blink::MathMLQualifiedName"*, %"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names17kAnnotationXmlTagE, align 8
  %4 = tail call %"class.blink::MathMLElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13MathMLElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* %0) #7
  ret %"class.blink::MathMLElement"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL24MathMLMactionConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = load %"class.blink::MathMLQualifiedName"*, %"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names11kMactionTagE, align 8
  %4 = tail call %"class.blink::MathMLRowElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16MathMLRowElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* %0) #7
  %5 = getelementptr inbounds %"class.blink::MathMLRowElement", %"class.blink::MathMLRowElement"* %4, i64 0, i32 0
  ret %"class.blink::MathMLElement"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL27MathMLMalignmarkConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = load %"class.blink::MathMLQualifiedName"*, %"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names14kMalignmarkTagE, align 8
  %4 = tail call %"class.blink::MathMLElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13MathMLElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* %0) #7
  ret %"class.blink::MathMLElement"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL21MathMLMathConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = load %"class.blink::MathMLQualifiedName"*, %"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names8kMathTagE, align 8
  %4 = tail call %"class.blink::MathMLRowElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16MathMLRowElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* %0) #7
  %5 = getelementptr inbounds %"class.blink::MathMLRowElement", %"class.blink::MathMLRowElement"* %4, i64 0, i32 0
  ret %"class.blink::MathMLElement"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL23MathMLMerrorConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = load %"class.blink::MathMLQualifiedName"*, %"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names10kMerrorTagE, align 8
  %4 = tail call %"class.blink::MathMLRowElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16MathMLRowElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* %0) #7
  %5 = getelementptr inbounds %"class.blink::MathMLRowElement", %"class.blink::MathMLRowElement"* %4, i64 0, i32 0
  ret %"class.blink::MathMLElement"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL22MathMLMfracConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = tail call %"class.blink::MathMLFractionElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_21MathMLFractionElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* %0) #7
  %4 = getelementptr inbounds %"class.blink::MathMLFractionElement", %"class.blink::MathMLFractionElement"* %3, i64 0, i32 0
  ret %"class.blink::MathMLElement"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL23MathMLMglyphConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = load %"class.blink::MathMLQualifiedName"*, %"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names10kMglyphTagE, align 8
  %4 = tail call %"class.blink::MathMLElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13MathMLElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* %0) #7
  ret %"class.blink::MathMLElement"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL19MathMLMiConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = load %"class.blink::MathMLQualifiedName"*, %"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names6kMiTagE, align 8
  %4 = tail call %"class.blink::MathMLElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13MathMLElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* %0) #7
  ret %"class.blink::MathMLElement"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL30MathMLMmultiscriptsConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = load %"class.blink::MathMLQualifiedName"*, %"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names17kMmultiscriptsTagE, align 8
  %4 = tail call %"class.blink::MathMLScriptsElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_20MathMLScriptsElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* %0) #7
  %5 = getelementptr inbounds %"class.blink::MathMLScriptsElement", %"class.blink::MathMLScriptsElement"* %4, i64 0, i32 0
  ret %"class.blink::MathMLElement"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL19MathMLMnConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = load %"class.blink::MathMLQualifiedName"*, %"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names6kMnTagE, align 8
  %4 = tail call %"class.blink::MathMLElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13MathMLElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* %0) #7
  ret %"class.blink::MathMLElement"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL19MathMLMoConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = tail call %"class.blink::MathMLOperatorElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_21MathMLOperatorElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* %0) #7
  %4 = getelementptr inbounds %"class.blink::MathMLOperatorElement", %"class.blink::MathMLOperatorElement"* %3, i64 0, i32 0
  ret %"class.blink::MathMLElement"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL22MathMLMoverConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = load %"class.blink::MathMLQualifiedName"*, %"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names9kMoverTagE, align 8
  %4 = tail call %"class.blink::MathMLUnderOverElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_22MathMLUnderOverElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* %0) #7
  %5 = getelementptr inbounds %"class.blink::MathMLUnderOverElement", %"class.blink::MathMLUnderOverElement"* %4, i64 0, i32 0, i32 0
  ret %"class.blink::MathMLElement"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL24MathMLMpaddedConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = tail call %"class.blink::MathMLPaddedElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_19MathMLPaddedElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* %0) #7
  %4 = getelementptr inbounds %"class.blink::MathMLPaddedElement", %"class.blink::MathMLPaddedElement"* %3, i64 0, i32 0, i32 0
  ret %"class.blink::MathMLElement"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL25MathMLMphantomConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = load %"class.blink::MathMLQualifiedName"*, %"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names12kMphantomTagE, align 8
  %4 = tail call %"class.blink::MathMLRowElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16MathMLRowElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* %0) #7
  %5 = getelementptr inbounds %"class.blink::MathMLRowElement", %"class.blink::MathMLRowElement"* %4, i64 0, i32 0
  ret %"class.blink::MathMLElement"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL28MathMLMprescriptsConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = load %"class.blink::MathMLQualifiedName"*, %"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names15kMprescriptsTagE, align 8
  %4 = tail call %"class.blink::MathMLRowElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16MathMLRowElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* %0) #7
  %5 = getelementptr inbounds %"class.blink::MathMLRowElement", %"class.blink::MathMLRowElement"* %4, i64 0, i32 0
  ret %"class.blink::MathMLElement"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL22MathMLMrootConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = load %"class.blink::MathMLQualifiedName"*, %"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names9kMrootTagE, align 8
  %4 = tail call %"class.blink::MathMLRadicalElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_20MathMLRadicalElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* %0) #7
  %5 = getelementptr inbounds %"class.blink::MathMLRadicalElement", %"class.blink::MathMLRadicalElement"* %4, i64 0, i32 0, i32 0
  ret %"class.blink::MathMLElement"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL21MathMLMrowConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = load %"class.blink::MathMLQualifiedName"*, %"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names8kMrowTagE, align 8
  %4 = tail call %"class.blink::MathMLRowElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16MathMLRowElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* %0) #7
  %5 = getelementptr inbounds %"class.blink::MathMLRowElement", %"class.blink::MathMLRowElement"* %4, i64 0, i32 0
  ret %"class.blink::MathMLElement"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL19MathMLMsConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = load %"class.blink::MathMLQualifiedName"*, %"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names6kMsTagE, align 8
  %4 = tail call %"class.blink::MathMLElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13MathMLElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* %0) #7
  ret %"class.blink::MathMLElement"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL23MathMLMspaceConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = tail call %"class.blink::MathMLSpaceElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_18MathMLSpaceElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* %0) #7
  %4 = getelementptr inbounds %"class.blink::MathMLSpaceElement", %"class.blink::MathMLSpaceElement"* %3, i64 0, i32 0
  ret %"class.blink::MathMLElement"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL22MathMLMsqrtConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = load %"class.blink::MathMLQualifiedName"*, %"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names9kMsqrtTagE, align 8
  %4 = tail call %"class.blink::MathMLRadicalElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_20MathMLRadicalElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* %0) #7
  %5 = getelementptr inbounds %"class.blink::MathMLRadicalElement", %"class.blink::MathMLRadicalElement"* %4, i64 0, i32 0, i32 0
  ret %"class.blink::MathMLElement"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL23MathMLMstyleConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = load %"class.blink::MathMLQualifiedName"*, %"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names10kMstyleTagE, align 8
  %4 = tail call %"class.blink::MathMLRowElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16MathMLRowElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* %0) #7
  %5 = getelementptr inbounds %"class.blink::MathMLRowElement", %"class.blink::MathMLRowElement"* %4, i64 0, i32 0
  ret %"class.blink::MathMLElement"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL21MathMLMsubConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = load %"class.blink::MathMLQualifiedName"*, %"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names8kMsubTagE, align 8
  %4 = tail call %"class.blink::MathMLScriptsElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_20MathMLScriptsElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* %0) #7
  %5 = getelementptr inbounds %"class.blink::MathMLScriptsElement", %"class.blink::MathMLScriptsElement"* %4, i64 0, i32 0
  ret %"class.blink::MathMLElement"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL24MathMLMsubsupConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = load %"class.blink::MathMLQualifiedName"*, %"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names11kMsubsupTagE, align 8
  %4 = tail call %"class.blink::MathMLScriptsElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_20MathMLScriptsElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* %0) #7
  %5 = getelementptr inbounds %"class.blink::MathMLScriptsElement", %"class.blink::MathMLScriptsElement"* %4, i64 0, i32 0
  ret %"class.blink::MathMLElement"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL21MathMLMsupConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = load %"class.blink::MathMLQualifiedName"*, %"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names8kMsupTagE, align 8
  %4 = tail call %"class.blink::MathMLScriptsElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_20MathMLScriptsElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* %0) #7
  %5 = getelementptr inbounds %"class.blink::MathMLScriptsElement", %"class.blink::MathMLScriptsElement"* %4, i64 0, i32 0
  ret %"class.blink::MathMLElement"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL22MathMLMtextConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = load %"class.blink::MathMLQualifiedName"*, %"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names9kMtextTagE, align 8
  %4 = tail call %"class.blink::MathMLElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13MathMLElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* %0) #7
  ret %"class.blink::MathMLElement"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL23MathMLMunderConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = load %"class.blink::MathMLQualifiedName"*, %"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names10kMunderTagE, align 8
  %4 = tail call %"class.blink::MathMLUnderOverElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_22MathMLUnderOverElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* %0) #7
  %5 = getelementptr inbounds %"class.blink::MathMLUnderOverElement", %"class.blink::MathMLUnderOverElement"* %4, i64 0, i32 0, i32 0
  ret %"class.blink::MathMLElement"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL27MathMLMunderoverConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = load %"class.blink::MathMLQualifiedName"*, %"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names14kMunderoverTagE, align 8
  %4 = tail call %"class.blink::MathMLUnderOverElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_22MathMLUnderOverElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* %0) #7
  %5 = getelementptr inbounds %"class.blink::MathMLUnderOverElement", %"class.blink::MathMLUnderOverElement"* %4, i64 0, i32 0, i32 0
  ret %"class.blink::MathMLElement"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL21MathMLNoneConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = load %"class.blink::MathMLQualifiedName"*, %"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names8kNoneTagE, align 8
  %4 = tail call %"class.blink::MathMLRowElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16MathMLRowElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* %0) #7
  %5 = getelementptr inbounds %"class.blink::MathMLRowElement", %"class.blink::MathMLRowElement"* %4, i64 0, i32 0
  ret %"class.blink::MathMLElement"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::MathMLElement"* @_ZN5blinkL26MathMLSemanticsConstructorERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::Document"*, %"class.blink::CreateElementFlags"* nocapture readnone byval(%"class.blink::CreateElementFlags") align 8) #0 {
  %3 = load %"class.blink::MathMLQualifiedName"*, %"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names13kSemanticsTagE, align 8
  %4 = tail call %"class.blink::MathMLRowElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16MathMLRowElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* %0) #7
  %5 = getelementptr inbounds %"class.blink::MathMLRowElement", %"class.blink::MathMLRowElement"* %4, i64 0, i32 0
  ret %"class.blink::MathMLElement"* %5
}

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::MathMLElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13MathMLElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8), %"class.blink::Document"*) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %4 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %8 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %7, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %4, %2 ], [ %8, %6 ]
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %3, i64 0, i32 19, i64 6
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 112
  br i1 %16, label %47, label %17, !prof !3

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 112
  store i8* %20, i8** %18, align 8
  %21 = add i64 %15, -112
  store i64 %21, i64* %14, align 8
  %22 = bitcast i8* %19 to i32*
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %19, i64 4
  %24 = bitcast i8* %23 to i16*
  %25 = trunc i32 %10 to i16
  %26 = shl i16 %25, 2
  store atomic i16 %26, i16* %24 monotonic, align 2
  %27 = getelementptr inbounds i8, i8* %19, i64 6
  %28 = bitcast i8* %27 to i16*
  store i16 56, i16* %28, align 2
  %29 = ptrtoint i8* %19 to i64
  %30 = and i64 %29, -131072
  %31 = inttoptr i64 %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 4400
  %33 = bitcast i8* %32 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %34 = bitcast i8* %32 to i64*
  %35 = load i64, i64* %34, align 16
  %36 = sub i64 %29, %35
  %37 = lshr i64 %36, 3
  %38 = lshr i64 %36, 6
  %39 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %33, i64 0, i32 0, i32 1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = trunc i64 %37 to i32
  %42 = and i32 %41, 7
  %43 = shl i32 1, %42
  %44 = trunc i32 %43 to i8
  %45 = or i8 %40, %44
  store atomic i8 %45, i8* %39 release, align 1
  %46 = getelementptr inbounds i8, i8* %19, i64 8
  br label %50

47:                                               ; preds = %9
  %48 = zext i32 %10 to i64
  %49 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 112, i64 %48) #7
  br label %50

50:                                               ; preds = %17, %47
  %51 = phi i8* [ %46, %17 ], [ %49, %47 ]
  %52 = bitcast i8* %51 to %"class.blink::MathMLElement"*
  %53 = getelementptr inbounds %"class.blink::MathMLQualifiedName", %"class.blink::MathMLQualifiedName"* %0, i64 0, i32 0
  tail call void @_ZN5blink13MathMLElementC1ERKNS_13QualifiedNameERNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::MathMLElement"* %52, %"class.blink::QualifiedName"* dereferenceable(8) %53, %"class.blink::Document"* %1, i32 1042) #7
  %54 = getelementptr inbounds i8, i8* %51, i64 -4
  %55 = bitcast i8* %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = or i16 %56, 1
  store atomic i16 %57, i16* %55 release, align 2
  ret %"class.blink::MathMLElement"* %52
}

declare void @_ZN5blink13MathMLElementC1ERKNS_13QualifiedNameERNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::MathMLElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"*, i32) unnamed_addr #3

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #7
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::MathMLRowElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16MathMLRowElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8), %"class.blink::Document"*) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %4 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %8 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %7, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %4, %2 ], [ %8, %6 ]
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %3, i64 0, i32 19, i64 6
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 112
  br i1 %16, label %47, label %17, !prof !3

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 112
  store i8* %20, i8** %18, align 8
  %21 = add i64 %15, -112
  store i64 %21, i64* %14, align 8
  %22 = bitcast i8* %19 to i32*
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %19, i64 4
  %24 = bitcast i8* %23 to i16*
  %25 = trunc i32 %10 to i16
  %26 = shl i16 %25, 2
  store atomic i16 %26, i16* %24 monotonic, align 2
  %27 = getelementptr inbounds i8, i8* %19, i64 6
  %28 = bitcast i8* %27 to i16*
  store i16 56, i16* %28, align 2
  %29 = ptrtoint i8* %19 to i64
  %30 = and i64 %29, -131072
  %31 = inttoptr i64 %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 4400
  %33 = bitcast i8* %32 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %34 = bitcast i8* %32 to i64*
  %35 = load i64, i64* %34, align 16
  %36 = sub i64 %29, %35
  %37 = lshr i64 %36, 3
  %38 = lshr i64 %36, 6
  %39 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %33, i64 0, i32 0, i32 1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = trunc i64 %37 to i32
  %42 = and i32 %41, 7
  %43 = shl i32 1, %42
  %44 = trunc i32 %43 to i8
  %45 = or i8 %40, %44
  store atomic i8 %45, i8* %39 release, align 1
  %46 = getelementptr inbounds i8, i8* %19, i64 8
  br label %50

47:                                               ; preds = %9
  %48 = zext i32 %10 to i64
  %49 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 112, i64 %48) #7
  br label %50

50:                                               ; preds = %17, %47
  %51 = phi i8* [ %46, %17 ], [ %49, %47 ]
  %52 = bitcast i8* %51 to %"class.blink::MathMLRowElement"*
  %53 = getelementptr inbounds %"class.blink::MathMLQualifiedName", %"class.blink::MathMLQualifiedName"* %0, i64 0, i32 0
  tail call void @_ZN5blink16MathMLRowElementC1ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::MathMLRowElement"* %52, %"class.blink::QualifiedName"* dereferenceable(8) %53, %"class.blink::Document"* %1) #7
  %54 = getelementptr inbounds i8, i8* %51, i64 -4
  %55 = bitcast i8* %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = or i16 %56, 1
  store atomic i16 %57, i16* %55 release, align 2
  ret %"class.blink::MathMLRowElement"* %52
}

declare void @_ZN5blink16MathMLRowElementC1ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::MathMLRowElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::MathMLFractionElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_21MathMLFractionElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"*) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 112
  br i1 %15, label %46, label %16, !prof !3

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 112
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -112
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 56, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 112, i64 %47) #7
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::MathMLFractionElement"*
  tail call void @_ZN5blink21MathMLFractionElementC1ERNS_8DocumentE(%"class.blink::MathMLFractionElement"* %51, %"class.blink::Document"* %0) #7
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::MathMLFractionElement"* %51
}

declare void @_ZN5blink21MathMLFractionElementC1ERNS_8DocumentE(%"class.blink::MathMLFractionElement"*, %"class.blink::Document"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::MathMLScriptsElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_20MathMLScriptsElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8), %"class.blink::Document"*) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %4 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %8 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %7, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %4, %2 ], [ %8, %6 ]
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %3, i64 0, i32 19, i64 6
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 120
  br i1 %16, label %47, label %17, !prof !3

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 120
  store i8* %20, i8** %18, align 8
  %21 = add i64 %15, -120
  store i64 %21, i64* %14, align 8
  %22 = bitcast i8* %19 to i32*
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %19, i64 4
  %24 = bitcast i8* %23 to i16*
  %25 = trunc i32 %10 to i16
  %26 = shl i16 %25, 2
  store atomic i16 %26, i16* %24 monotonic, align 2
  %27 = getelementptr inbounds i8, i8* %19, i64 6
  %28 = bitcast i8* %27 to i16*
  store i16 60, i16* %28, align 2
  %29 = ptrtoint i8* %19 to i64
  %30 = and i64 %29, -131072
  %31 = inttoptr i64 %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 4400
  %33 = bitcast i8* %32 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %34 = bitcast i8* %32 to i64*
  %35 = load i64, i64* %34, align 16
  %36 = sub i64 %29, %35
  %37 = lshr i64 %36, 3
  %38 = lshr i64 %36, 6
  %39 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %33, i64 0, i32 0, i32 1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = trunc i64 %37 to i32
  %42 = and i32 %41, 7
  %43 = shl i32 1, %42
  %44 = trunc i32 %43 to i8
  %45 = or i8 %40, %44
  store atomic i8 %45, i8* %39 release, align 1
  %46 = getelementptr inbounds i8, i8* %19, i64 8
  br label %50

47:                                               ; preds = %9
  %48 = zext i32 %10 to i64
  %49 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 120, i64 %48) #7
  br label %50

50:                                               ; preds = %17, %47
  %51 = phi i8* [ %46, %17 ], [ %49, %47 ]
  %52 = bitcast i8* %51 to %"class.blink::MathMLScriptsElement"*
  %53 = getelementptr inbounds %"class.blink::MathMLQualifiedName", %"class.blink::MathMLQualifiedName"* %0, i64 0, i32 0
  tail call void @_ZN5blink20MathMLScriptsElementC1ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::MathMLScriptsElement"* %52, %"class.blink::QualifiedName"* dereferenceable(8) %53, %"class.blink::Document"* %1) #7
  %54 = getelementptr inbounds i8, i8* %51, i64 -4
  %55 = bitcast i8* %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = or i16 %56, 1
  store atomic i16 %57, i16* %55 release, align 2
  ret %"class.blink::MathMLScriptsElement"* %52
}

declare void @_ZN5blink20MathMLScriptsElementC1ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::MathMLScriptsElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::MathMLOperatorElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_21MathMLOperatorElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"*) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 144
  br i1 %15, label %46, label %16, !prof !3

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 144
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -144
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 72, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 144, i64 %47) #7
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::MathMLOperatorElement"*
  tail call void @_ZN5blink21MathMLOperatorElementC1ERNS_8DocumentE(%"class.blink::MathMLOperatorElement"* %51, %"class.blink::Document"* %0) #7
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::MathMLOperatorElement"* %51
}

declare void @_ZN5blink21MathMLOperatorElementC1ERNS_8DocumentE(%"class.blink::MathMLOperatorElement"*, %"class.blink::Document"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::MathMLUnderOverElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_22MathMLUnderOverElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8), %"class.blink::Document"*) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %4 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %8 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %7, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %4, %2 ], [ %8, %6 ]
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %3, i64 0, i32 19, i64 6
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 120
  br i1 %16, label %47, label %17, !prof !3

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 120
  store i8* %20, i8** %18, align 8
  %21 = add i64 %15, -120
  store i64 %21, i64* %14, align 8
  %22 = bitcast i8* %19 to i32*
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %19, i64 4
  %24 = bitcast i8* %23 to i16*
  %25 = trunc i32 %10 to i16
  %26 = shl i16 %25, 2
  store atomic i16 %26, i16* %24 monotonic, align 2
  %27 = getelementptr inbounds i8, i8* %19, i64 6
  %28 = bitcast i8* %27 to i16*
  store i16 60, i16* %28, align 2
  %29 = ptrtoint i8* %19 to i64
  %30 = and i64 %29, -131072
  %31 = inttoptr i64 %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 4400
  %33 = bitcast i8* %32 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %34 = bitcast i8* %32 to i64*
  %35 = load i64, i64* %34, align 16
  %36 = sub i64 %29, %35
  %37 = lshr i64 %36, 3
  %38 = lshr i64 %36, 6
  %39 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %33, i64 0, i32 0, i32 1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = trunc i64 %37 to i32
  %42 = and i32 %41, 7
  %43 = shl i32 1, %42
  %44 = trunc i32 %43 to i8
  %45 = or i8 %40, %44
  store atomic i8 %45, i8* %39 release, align 1
  %46 = getelementptr inbounds i8, i8* %19, i64 8
  br label %50

47:                                               ; preds = %9
  %48 = zext i32 %10 to i64
  %49 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 120, i64 %48) #7
  br label %50

50:                                               ; preds = %17, %47
  %51 = phi i8* [ %46, %17 ], [ %49, %47 ]
  %52 = bitcast i8* %51 to %"class.blink::MathMLUnderOverElement"*
  %53 = getelementptr inbounds %"class.blink::MathMLQualifiedName", %"class.blink::MathMLQualifiedName"* %0, i64 0, i32 0
  tail call void @_ZN5blink22MathMLUnderOverElementC1ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::MathMLUnderOverElement"* %52, %"class.blink::QualifiedName"* dereferenceable(8) %53, %"class.blink::Document"* %1) #7
  %54 = getelementptr inbounds i8, i8* %51, i64 -4
  %55 = bitcast i8* %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = or i16 %56, 1
  store atomic i16 %57, i16* %55 release, align 2
  ret %"class.blink::MathMLUnderOverElement"* %52
}

declare void @_ZN5blink22MathMLUnderOverElementC1ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::MathMLUnderOverElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::MathMLPaddedElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_19MathMLPaddedElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"*) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 112
  br i1 %15, label %46, label %16, !prof !3

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 112
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -112
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 56, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 112, i64 %47) #7
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::MathMLPaddedElement"*
  tail call void @_ZN5blink19MathMLPaddedElementC1ERNS_8DocumentE(%"class.blink::MathMLPaddedElement"* %51, %"class.blink::Document"* %0) #7
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::MathMLPaddedElement"* %51
}

declare void @_ZN5blink19MathMLPaddedElementC1ERNS_8DocumentE(%"class.blink::MathMLPaddedElement"*, %"class.blink::Document"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::MathMLRadicalElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_20MathMLRadicalElementEE4CallIJRKNS_19MathMLQualifiedNameERNS_8DocumentEEEEPS1_DpOT_(%"class.blink::MathMLQualifiedName"* dereferenceable(8), %"class.blink::Document"*) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %4 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %8 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %7, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %4, %2 ], [ %8, %6 ]
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %3, i64 0, i32 19, i64 6
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 112
  br i1 %16, label %47, label %17, !prof !3

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 112
  store i8* %20, i8** %18, align 8
  %21 = add i64 %15, -112
  store i64 %21, i64* %14, align 8
  %22 = bitcast i8* %19 to i32*
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %19, i64 4
  %24 = bitcast i8* %23 to i16*
  %25 = trunc i32 %10 to i16
  %26 = shl i16 %25, 2
  store atomic i16 %26, i16* %24 monotonic, align 2
  %27 = getelementptr inbounds i8, i8* %19, i64 6
  %28 = bitcast i8* %27 to i16*
  store i16 56, i16* %28, align 2
  %29 = ptrtoint i8* %19 to i64
  %30 = and i64 %29, -131072
  %31 = inttoptr i64 %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 4400
  %33 = bitcast i8* %32 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %34 = bitcast i8* %32 to i64*
  %35 = load i64, i64* %34, align 16
  %36 = sub i64 %29, %35
  %37 = lshr i64 %36, 3
  %38 = lshr i64 %36, 6
  %39 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %33, i64 0, i32 0, i32 1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = trunc i64 %37 to i32
  %42 = and i32 %41, 7
  %43 = shl i32 1, %42
  %44 = trunc i32 %43 to i8
  %45 = or i8 %40, %44
  store atomic i8 %45, i8* %39 release, align 1
  %46 = getelementptr inbounds i8, i8* %19, i64 8
  br label %50

47:                                               ; preds = %9
  %48 = zext i32 %10 to i64
  %49 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 112, i64 %48) #7
  br label %50

50:                                               ; preds = %17, %47
  %51 = phi i8* [ %46, %17 ], [ %49, %47 ]
  %52 = bitcast i8* %51 to %"class.blink::MathMLRadicalElement"*
  %53 = getelementptr inbounds %"class.blink::MathMLQualifiedName", %"class.blink::MathMLQualifiedName"* %0, i64 0, i32 0
  tail call void @_ZN5blink20MathMLRadicalElementC1ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::MathMLRadicalElement"* %52, %"class.blink::QualifiedName"* dereferenceable(8) %53, %"class.blink::Document"* %1) #7
  %54 = getelementptr inbounds i8, i8* %51, i64 -4
  %55 = bitcast i8* %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = or i16 %56, 1
  store atomic i16 %57, i16* %55 release, align 2
  ret %"class.blink::MathMLRadicalElement"* %52
}

declare void @_ZN5blink20MathMLRadicalElementC1ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::MathMLRadicalElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::MathMLSpaceElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_18MathMLSpaceElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"*) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 112
  br i1 %15, label %46, label %16, !prof !3

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 112
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -112
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 56, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 112, i64 %47) #7
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::MathMLSpaceElement"*
  tail call void @_ZN5blink18MathMLSpaceElementC1ERNS_8DocumentE(%"class.blink::MathMLSpaceElement"* %51, %"class.blink::Document"* %0) #7
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::MathMLSpaceElement"* %51
}

declare void @_ZN5blink18MathMLSpaceElementC1ERNS_8DocumentE(%"class.blink::MathMLSpaceElement"*, %"class.blink::Document"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.65"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_PFPN5blink13MathMLElementERNS3_8DocumentENS3_18CreateElementFlagsEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERKS1_RKSA_EENS_18HashTableAddResultISK_SB_EEOT0_OT1_(%"class.WTF::HashTable.62"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.62", %"class.WTF::HashTable.62"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.65"*, %"struct.WTF::KeyValuePair.65"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.65"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.65"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_PFPN5blink13MathMLElementERNS3_8DocumentENS3_18CreateElementFlagsEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.62"* %0, %"struct.WTF::KeyValuePair.65"* null)
  %9 = load %"struct.WTF::KeyValuePair.65"*, %"struct.WTF::KeyValuePair.65"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.65"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.62", %"class.WTF::HashTable.62"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.65", %"struct.WTF::KeyValuePair.65"* %11, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.65", %"struct.WTF::KeyValuePair.65"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %73, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"struct.WTF::KeyValuePair.65"* [ %23, %27 ], [ %58, %52 ]
  %43 = phi %"struct.WTF::KeyValuePair.65"* [ null, %27 ], [ %53, %52 ]
  %44 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %45 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %46 = bitcast %"struct.WTF::KeyValuePair.65"* %42 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = bitcast i8* %47 to %"class.WTF::StringImpl"*
  %51 = icmp eq %"class.WTF::StringImpl"* %17, %50
  br i1 %51, label %129, label %52

52:                                               ; preds = %41, %49
  %53 = phi %"struct.WTF::KeyValuePair.65"* [ %43, %49 ], [ %42, %41 ]
  %54 = icmp eq i64 %45, 0
  %55 = select i1 %54, i64 %40, i64 %45
  %56 = add i64 %55, %44
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.65", %"struct.WTF::KeyValuePair.65"* %11, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.65", %"struct.WTF::KeyValuePair.65"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"struct.WTF::KeyValuePair.65"* %53, null
  br i1 %63, label %73, label %64

64:                                               ; preds = %62
  %65 = bitcast %"struct.WTF::KeyValuePair.65"* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 16, i1 false) #7
  %66 = getelementptr inbounds %"class.WTF::HashTable.62", %"class.WTF::HashTable.62"* %0, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 2147483647
  %69 = and i32 %68, 2147483647
  %70 = and i32 %67, -2147483648
  %71 = or i32 %69, %70
  store i32 %71, i32* %66, align 8
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  br label %73

73:                                               ; preds = %10, %62, %64
  %74 = phi %"class.WTF::StringImpl"* [ %72, %64 ], [ %17, %62 ], [ %17, %10 ]
  %75 = phi %"struct.WTF::KeyValuePair.65"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  %76 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %94

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i33
  %86 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #7
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !3

91:                                               ; preds = %82
  tail call void @llvm.trap() #7
  unreachable

92:                                               ; preds = %82
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %83, align 4
  br label %94

94:                                               ; preds = %92, %77, %73
  %95 = ptrtoint %"class.WTF::StringImpl"* %74 to i64
  %96 = bitcast %"struct.WTF::KeyValuePair.65"* %75 to i64*
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.65", %"struct.WTF::KeyValuePair.65"* %75, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  store i64 %95, i64* %96, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #7
  br label %113

113:                                              ; preds = %94, %109, %112
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.65", %"struct.WTF::KeyValuePair.65"* %75, i64 0, i32 1
  %115 = bitcast %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** %2 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = bitcast %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** %114 to i64*
  store i64 %116, i64* %117, align 8
  %118 = getelementptr inbounds %"class.WTF::HashTable.62", %"class.WTF::HashTable.62"* %0, i64 0, i32 2
  %119 = load i32, i32* %118, align 4
  %120 = add i32 %119, 1
  store i32 %120, i32* %118, align 4
  %121 = getelementptr inbounds %"class.WTF::HashTable.62", %"class.WTF::HashTable.62"* %0, i64 0, i32 3
  %122 = load i32, i32* %121, align 8
  %123 = add i32 %122, %120
  %124 = shl i32 %123, 1
  %125 = load i32, i32* %12, align 8
  %126 = icmp ult i32 %124, %125
  br i1 %126, label %129, label %127

127:                                              ; preds = %113
  %128 = tail call %"struct.WTF::KeyValuePair.65"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_PFPN5blink13MathMLElementERNS3_8DocumentENS3_18CreateElementFlagsEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.62"* %0, %"struct.WTF::KeyValuePair.65"* %75)
  br label %129

129:                                              ; preds = %49, %113, %127
  %130 = phi i8 [ 1, %113 ], [ 1, %127 ], [ 0, %49 ]
  %131 = phi %"struct.WTF::KeyValuePair.65"* [ %75, %113 ], [ %128, %127 ], [ %42, %49 ]
  %132 = insertvalue { %"struct.WTF::KeyValuePair.65"*, i8 } undef, %"struct.WTF::KeyValuePair.65"* %131, 0
  %133 = insertvalue { %"struct.WTF::KeyValuePair.65"*, i8 } %132, i8 %130, 1
  ret { %"struct.WTF::KeyValuePair.65"*, i8 } %133
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.65"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_PFPN5blink13MathMLElementERNS3_8DocumentENS3_18CreateElementFlagsEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.62"*, %"struct.WTF::KeyValuePair.65"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.62", %"class.WTF::HashTable.62"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.62", %"class.WTF::HashTable.62"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #7
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #7
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* %22, i8* %23) #7
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #7
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #7
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([157 x i8], [157 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringEPFPN5blink13MathMLElementERNS3_8DocumentENS3_18CreateElementFlagsEEEEEEPKcv, i64 0, i64 0)) #7
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #7
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.65"*
  %37 = call %"struct.WTF::KeyValuePair.65"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_PFPN5blink13MathMLElementERNS3_8DocumentENS3_18CreateElementFlagsEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSB_jSL_(%"class.WTF::HashTable.62"* %0, %"struct.WTF::KeyValuePair.65"* %36, i32 %32, %"struct.WTF::KeyValuePair.65"* %1) #7
  ret %"struct.WTF::KeyValuePair.65"* %37
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.65"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_PFPN5blink13MathMLElementERNS3_8DocumentENS3_18CreateElementFlagsEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSB_jSL_(%"class.WTF::HashTable.62"*, %"struct.WTF::KeyValuePair.65"*, i32, %"struct.WTF::KeyValuePair.65"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.65"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.62", %"class.WTF::HashTable.62"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.62", %"class.WTF::HashTable.62"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.62"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.65"*, %"struct.WTF::KeyValuePair.65"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.65"* %16 to i64
  br label %61

18:                                               ; preds = %162
  %19 = bitcast %"class.WTF::HashTable.62"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %163, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.65"* [ null, %10 ], [ %166, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %164, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair.65"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %57, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %55, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi i64 [ 0, %29 ], [ %53, %52 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.65", %"struct.WTF::KeyValuePair.65"* %25, i64 %32
  %34 = bitcast %"struct.WTF::KeyValuePair.65"* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast i8* %35 to %"class.WTF::StringImpl"*
  %37 = ptrtoint i8* %35 to i64
  switch i64 %37, label %38 [
    i64 -1, label %52
    i64 0, label %52
  ]

38:                                               ; preds = %31
  %39 = getelementptr inbounds i8, i8* %35, i64 8
  %40 = bitcast i8* %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = bitcast i8* %35 to i32*
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %38
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %38
  %49 = phi i32 [ %47, %46 ], [ %45, %38 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #7
  br label %52

52:                                               ; preds = %51, %48, %31, %31
  %53 = add nuw nsw i64 %32, 1
  %54 = icmp eq i64 %53, %30
  br i1 %54, label %55, label %31

55:                                               ; preds = %52, %27
  %56 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %56) #7
  br label %57

57:                                               ; preds = %20, %55
  %58 = getelementptr inbounds %"class.WTF::HashTable.62", %"class.WTF::HashTable.62"* %0, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, -2147483648
  store i32 %60, i32* %58, align 8
  ret %"struct.WTF::KeyValuePair.65"* %23

61:                                               ; preds = %13, %162
  %62 = phi i64 [ %17, %13 ], [ %163, %162 ]
  %63 = phi i32 [ %7, %13 ], [ %164, %162 ]
  %64 = phi %"struct.WTF::KeyValuePair.65"* [ %16, %13 ], [ %165, %162 ]
  %65 = phi %"struct.WTF::KeyValuePair.65"* [ null, %13 ], [ %166, %162 ]
  %66 = phi i32 [ 0, %13 ], [ %167, %162 ]
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.65", %"struct.WTF::KeyValuePair.65"* %64, i64 %67
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.65", %"struct.WTF::KeyValuePair.65"* %68, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = bitcast %"struct.WTF::KeyValuePair.65"* %68 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = inttoptr i64 %71 to %"class.WTF::StringImpl"*
  switch i64 %71, label %73 [
    i64 -1, label %162
    i64 0, label %162
  ]

73:                                               ; preds = %61
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = lshr i32 %75, 8
  %77 = and i32 %76, %14
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.65", %"struct.WTF::KeyValuePair.65"* %1, i64 %78
  %80 = ptrtoint %"struct.WTF::KeyValuePair.65"* %79 to i64
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.65", %"struct.WTF::KeyValuePair.65"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %100, label %84

84:                                               ; preds = %73
  %85 = xor i32 %76, -1
  %86 = lshr i32 %75, 31
  %87 = add nsw i32 %86, %85
  %88 = shl i32 %87, 12
  %89 = xor i32 %88, %87
  %90 = lshr i32 %89, 7
  %91 = xor i32 %90, %89
  %92 = shl i32 %91, 2
  %93 = xor i32 %92, %91
  %94 = lshr i32 %93, 20
  %95 = xor i32 %94, %93
  %96 = or i32 %95, 1
  %97 = zext i32 %96 to i64
  br label %106

98:                                               ; preds = %118
  %99 = ptrtoint %"struct.WTF::KeyValuePair.65"* %124 to i64
  br label %100

100:                                              ; preds = %98, %73
  %101 = phi i64 [ %80, %73 ], [ %99, %98 ]
  %102 = phi %"struct.WTF::KeyValuePair.65"* [ null, %73 ], [ %119, %98 ]
  %103 = icmp eq %"struct.WTF::KeyValuePair.65"* %102, null
  %104 = ptrtoint %"struct.WTF::KeyValuePair.65"* %102 to i64
  %105 = select i1 %103, i64 %101, i64 %104
  br label %129

106:                                              ; preds = %118, %84
  %107 = phi %"struct.WTF::KeyValuePair.65"* [ null, %84 ], [ %119, %118 ]
  %108 = phi i64 [ %80, %84 ], [ %125, %118 ]
  %109 = phi %"struct.WTF::KeyValuePair.65"* [ %79, %84 ], [ %124, %118 ]
  %110 = phi i64 [ %78, %84 ], [ %123, %118 ]
  %111 = phi i64 [ 0, %84 ], [ %121, %118 ]
  %112 = bitcast %"struct.WTF::KeyValuePair.65"* %109 to i8**
  %113 = load i8*, i8** %112, align 8
  %114 = icmp eq i8* %113, inttoptr (i64 -1 to i8*)
  br i1 %114, label %118, label %115

115:                                              ; preds = %106
  %116 = bitcast i8* %113 to %"class.WTF::StringImpl"*
  %117 = icmp eq %"class.WTF::StringImpl"* %72, %116
  br i1 %117, label %129, label %118

118:                                              ; preds = %115, %106
  %119 = phi %"struct.WTF::KeyValuePair.65"* [ %107, %115 ], [ %109, %106 ]
  %120 = icmp eq i64 %111, 0
  %121 = select i1 %120, i64 %97, i64 %111
  %122 = add i64 %121, %110
  %123 = and i64 %122, %15
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair.65", %"struct.WTF::KeyValuePair.65"* %1, i64 %123
  %125 = ptrtoint %"struct.WTF::KeyValuePair.65"* %124 to i64
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair.65", %"struct.WTF::KeyValuePair.65"* %124, i64 0, i32 0, i32 0, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %98, label %106

129:                                              ; preds = %115, %100
  %130 = phi i64 [ %105, %100 ], [ %108, %115 ]
  %131 = inttoptr i64 %130 to %"struct.WTF::KeyValuePair.65"*
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.65", %"struct.WTF::KeyValuePair.65"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #7
  br label %148

148:                                              ; preds = %129, %144, %147
  %149 = load i64, i64* %70, align 8
  %150 = inttoptr i64 %130 to i64*
  store i64 %149, i64* %150, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %69, align 8
  %151 = getelementptr inbounds %"struct.WTF::KeyValuePair.65", %"struct.WTF::KeyValuePair.65"* %131, i64 0, i32 1
  %152 = getelementptr inbounds %"struct.WTF::KeyValuePair.65", %"struct.WTF::KeyValuePair.65"* %64, i64 %67, i32 1
  %153 = bitcast %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.blink::MathMLElement"* (%"class.blink::Document"*, %"class.blink::CreateElementFlags"*)** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = load %"struct.WTF::KeyValuePair.65"*, %"struct.WTF::KeyValuePair.65"** %9, align 8
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair.65", %"struct.WTF::KeyValuePair.65"* %156, i64 %67
  %158 = icmp eq %"struct.WTF::KeyValuePair.65"* %157, %3
  %159 = select i1 %158, %"struct.WTF::KeyValuePair.65"* %131, %"struct.WTF::KeyValuePair.65"* %65
  %160 = load i32, i32* %6, align 8
  %161 = ptrtoint %"struct.WTF::KeyValuePair.65"* %156 to i64
  br label %162

162:                                              ; preds = %61, %61, %148
  %163 = phi i64 [ %62, %61 ], [ %161, %148 ], [ %62, %61 ]
  %164 = phi i32 [ %63, %61 ], [ %160, %148 ], [ %63, %61 ]
  %165 = phi %"struct.WTF::KeyValuePair.65"* [ %64, %61 ], [ %156, %148 ], [ %64, %61 ]
  %166 = phi %"struct.WTF::KeyValuePair.65"* [ %65, %61 ], [ %159, %148 ], [ %65, %61 ]
  %167 = add i32 %66, 1
  %168 = icmp eq i32 %167, %164
  br i1 %168, label %18, label %61
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 1, i32 2000}
