; ModuleID = 'gen/third_party/blink/public/mojom/browser_interface_broker.mojom-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/browser_interface_broker.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::BrowserInterfaceBrokerAsyncWaiter" = type { %"class.blink::mojom::BrowserInterfaceBroker"* }
%"class.blink::mojom::BrowserInterfaceBroker" = type { i32 (...)** }
%"class.blink::mojom::BrowserInterfaceBrokerInterceptorForTesting" = type { %"class.blink::mojom::BrowserInterfaceBroker" }
%"class.mojo::GenericPendingReceiver" = type <{ %"class.absl::optional", %"class.mojo::ScopedHandleBase", [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }

$_ZN5blink5mojom22BrowserInterfaceBrokerD2Ev = comdat any

$_ZN5blink5mojom43BrowserInterfaceBrokerInterceptorForTestingD0Ev = comdat any

@_ZTVN5blink5mojom43BrowserInterfaceBrokerInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::BrowserInterfaceBroker"*)* @_ZN5blink5mojom22BrowserInterfaceBrokerD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::BrowserInterfaceBrokerInterceptorForTesting"*)* @_ZN5blink5mojom43BrowserInterfaceBrokerInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::BrowserInterfaceBrokerInterceptorForTesting"*, %"class.mojo::GenericPendingReceiver"*)* @_ZN5blink5mojom43BrowserInterfaceBrokerInterceptorForTesting12GetInterfaceEN4mojo22GenericPendingReceiverE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom33BrowserInterfaceBrokerAsyncWaiterC1EPNS0_22BrowserInterfaceBrokerE = hidden unnamed_addr alias void (%"class.blink::mojom::BrowserInterfaceBrokerAsyncWaiter"*, %"class.blink::mojom::BrowserInterfaceBroker"*), void (%"class.blink::mojom::BrowserInterfaceBrokerAsyncWaiter"*, %"class.blink::mojom::BrowserInterfaceBroker"*)* @_ZN5blink5mojom33BrowserInterfaceBrokerAsyncWaiterC2EPNS0_22BrowserInterfaceBrokerE
@_ZN5blink5mojom33BrowserInterfaceBrokerAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::BrowserInterfaceBrokerAsyncWaiter"*), void (%"class.blink::mojom::BrowserInterfaceBrokerAsyncWaiter"*)* @_ZN5blink5mojom33BrowserInterfaceBrokerAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom43BrowserInterfaceBrokerInterceptorForTesting12GetInterfaceEN4mojo22GenericPendingReceiverE(%"class.blink::mojom::BrowserInterfaceBrokerInterceptorForTesting"*, %"class.mojo::GenericPendingReceiver"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::GenericPendingReceiver", align 8
  %4 = bitcast %"class.blink::mojom::BrowserInterfaceBrokerInterceptorForTesting"* %0 to %"class.blink::mojom::BrowserInterfaceBroker"* (%"class.blink::mojom::BrowserInterfaceBrokerInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::BrowserInterfaceBroker"* (%"class.blink::mojom::BrowserInterfaceBrokerInterceptorForTesting"*)**, %"class.blink::mojom::BrowserInterfaceBroker"* (%"class.blink::mojom::BrowserInterfaceBrokerInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::BrowserInterfaceBroker"* (%"class.blink::mojom::BrowserInterfaceBrokerInterceptorForTesting"*)*, %"class.blink::mojom::BrowserInterfaceBroker"* (%"class.blink::mojom::BrowserInterfaceBrokerInterceptorForTesting"*)** %5, i64 3
  %7 = load %"class.blink::mojom::BrowserInterfaceBroker"* (%"class.blink::mojom::BrowserInterfaceBrokerInterceptorForTesting"*)*, %"class.blink::mojom::BrowserInterfaceBroker"* (%"class.blink::mojom::BrowserInterfaceBrokerInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::BrowserInterfaceBroker"* %7(%"class.blink::mojom::BrowserInterfaceBrokerInterceptorForTesting"* %0) #7
  call void @_ZN4mojo22GenericPendingReceiverC1EOS0_(%"class.mojo::GenericPendingReceiver"* nonnull %3, %"class.mojo::GenericPendingReceiver"* dereferenceable(40) %1) #7
  %9 = bitcast %"class.blink::mojom::BrowserInterfaceBroker"* %8 to void (%"class.blink::mojom::BrowserInterfaceBroker"*, %"class.mojo::GenericPendingReceiver"*)***
  %10 = load void (%"class.blink::mojom::BrowserInterfaceBroker"*, %"class.mojo::GenericPendingReceiver"*)**, void (%"class.blink::mojom::BrowserInterfaceBroker"*, %"class.mojo::GenericPendingReceiver"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::mojom::BrowserInterfaceBroker"*, %"class.mojo::GenericPendingReceiver"*)*, void (%"class.blink::mojom::BrowserInterfaceBroker"*, %"class.mojo::GenericPendingReceiver"*)** %10, i64 2
  %12 = load void (%"class.blink::mojom::BrowserInterfaceBroker"*, %"class.mojo::GenericPendingReceiver"*)*, void (%"class.blink::mojom::BrowserInterfaceBroker"*, %"class.mojo::GenericPendingReceiver"*)** %11, align 8
  call void %12(%"class.blink::mojom::BrowserInterfaceBroker"* %8, %"class.mojo::GenericPendingReceiver"* nonnull %3) #7
  call void @_ZN4mojo22GenericPendingReceiverD1Ev(%"class.mojo::GenericPendingReceiver"* nonnull %3) #7
  ret void
}

declare void @_ZN4mojo22GenericPendingReceiverC1EOS0_(%"class.mojo::GenericPendingReceiver"*, %"class.mojo::GenericPendingReceiver"* dereferenceable(40)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo22GenericPendingReceiverD1Ev(%"class.mojo::GenericPendingReceiver"*) unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom33BrowserInterfaceBrokerAsyncWaiterC2EPNS0_22BrowserInterfaceBrokerE(%"class.blink::mojom::BrowserInterfaceBrokerAsyncWaiter"* nocapture, %"class.blink::mojom::BrowserInterfaceBroker"*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::BrowserInterfaceBrokerAsyncWaiter", %"class.blink::mojom::BrowserInterfaceBrokerAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::BrowserInterfaceBroker"* %1, %"class.blink::mojom::BrowserInterfaceBroker"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom33BrowserInterfaceBrokerAsyncWaiterD2Ev(%"class.blink::mojom::BrowserInterfaceBrokerAsyncWaiter"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom22BrowserInterfaceBrokerD2Ev(%"class.blink::mojom::BrowserInterfaceBroker"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom43BrowserInterfaceBrokerInterceptorForTestingD0Ev(%"class.blink::mojom::BrowserInterfaceBrokerInterceptorForTesting"*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
