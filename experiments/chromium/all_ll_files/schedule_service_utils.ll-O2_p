; ModuleID = '../../chrome/browser/notifications/scheduler/public/schedule_service_utils.cc'
source_filename = "../../chrome/browser/notifications/scheduler/public/schedule_service_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"struct.base::Time::Exploded" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.base::Clock" = type { i32 (...)** }
%"struct.std::__1::pair" = type { %"class.base::TimeDelta", %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"struct.std::__1::pair.0" = type { %"class.base::Time", %"class.base::Time" }
%"class.logging::CheckOpResult" = type { i8* }

$_ZNK4base9TimeDeltamiES0_ = comdat any

@.str = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13notifications11ToLocalHourEiRKN4base4TimeEiPS1_(i32, %"class.base::Time"* nocapture readonly dereferenceable(8), i32, %"class.base::Time"*) local_unnamed_addr #0 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.base::Time", align 8
  %7 = alloca %"struct.base::Time::Exploded", align 4
  %8 = bitcast %"class.base::Time"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #5
  %9 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %6, i64 0, i32 0, i32 0
  store i64 -6148914691236517206, i64* %9, align 8
  %10 = icmp eq i32 %2, 2147483647
  %11 = sext i32 %2 to i64
  %12 = mul nsw i64 %11, 86400000000
  %13 = select i1 %10, i64 9223372036854775807, i64 %12
  %14 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %1, i64 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %13, -9223372036854775807
  %17 = icmp ult i64 %16, 2
  br i1 %17, label %25, label %18

18:                                               ; preds = %4
  %19 = icmp slt i64 %13, 0
  %20 = select i1 %19, i64 -9223372036854775808, i64 9223372036854775807
  %21 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %15, i64 %13) #5
  %22 = extractvalue { i64, i1 } %21, 1
  %23 = extractvalue { i64, i1 } %21, 0
  %24 = select i1 %22, i64 %20, i64 %23, !prof !2
  br label %33

25:                                               ; preds = %4
  %26 = add i64 %15, -9223372036854775807
  %27 = icmp ugt i64 %26, 1
  %28 = icmp eq i64 %15, %13
  %29 = or i1 %28, %27
  br i1 %29, label %33, label %30

30:                                               ; preds = %25
  %31 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #5
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #5
  br label %33

33:                                               ; preds = %18, %25, %30
  %34 = phi i64 [ %24, %18 ], [ %13, %25 ], [ %13, %30 ]
  store i64 %34, i64* %9, align 8
  %35 = bitcast %"struct.base::Time::Exploded"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #5
  %36 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %7, i64 0, i32 4
  %37 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %7, i64 0, i32 5
  %38 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %7, i64 0, i32 6
  %39 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %7, i64 0, i32 7
  %40 = bitcast %"struct.base::Time::Exploded"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %40, i8 -86, i64 32, i1 false)
  call void @_ZNK4base4Time7ExplodeEbPNS0_8ExplodedE(%"class.base::Time"* nonnull %6, i1 zeroext true, %"struct.base::Time::Exploded"* nonnull %7) #5
  store i32 %0, i32* %36, align 4
  store i32 0, i32* %37, align 4
  store i32 0, i32* %38, align 4
  store i32 0, i32* %39, align 4
  %41 = call zeroext i1 @_ZN4base4Time12FromExplodedEbRKNS0_8ExplodedEPS0_(i1 zeroext true, %"struct.base::Time::Exploded"* nonnull dereferenceable(32) %7, %"class.base::Time"* %3) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #5
  ret i1 %41
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13notifications14NextTimeWindowEPN4base5ClockERKNSt3__14pairINS0_9TimeDeltaES5_EES8_PNS4_INS0_4TimeES9_EE(%"class.base::Clock"*, %"struct.std::__1::pair"* dereferenceable(16), %"struct.std::__1::pair"* dereferenceable(16), %"struct.std::__1::pair.0"* nocapture) local_unnamed_addr #0 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.base::Time", align 8
  %12 = alloca %"class.base::Time", align 8
  %13 = bitcast %"class.base::Time"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #5
  %14 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %11, i64 0, i32 0, i32 0
  %15 = bitcast %"class.base::Clock"* %0 to i64 (%"class.base::Clock"*)***
  %16 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %15, align 8
  %17 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %16, i64 2
  %18 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %17, align 8
  %19 = tail call i64 %18(%"class.base::Clock"* %0) #5
  store i64 %19, i64* %14, align 8
  %20 = bitcast %"class.base::Time"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #5
  %21 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %12, i64 0, i32 0, i32 0
  store i64 0, i64* %21, align 8
  %22 = call zeroext i1 @_ZN13notifications11ToLocalHourEiRKN4base4TimeEiPS1_(i32 0, %"class.base::Time"* nonnull dereferenceable(8) %11, i32 0, %"class.base::Time"* nonnull %12)
  br i1 %22, label %23, label %202

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* %24, i64 %26) #5
  %28 = icmp slt i64 %27, 43200000000
  br i1 %28, label %29, label %202

29:                                               ; preds = %23
  %30 = load i64, i64* %25, align 8
  %31 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %24, i64 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = icmp slt i64 %32, %30
  br i1 %33, label %202, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* %35, i64 %37) #5
  %39 = icmp slt i64 %38, 43200000000
  br i1 %39, label %40, label %202

40:                                               ; preds = %34
  %41 = load i64, i64* %36, align 8
  %42 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %35, i64 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp slt i64 %43, %41
  br i1 %44, label %202, label %45

45:                                               ; preds = %40
  %46 = load i64, i64* %31, align 8
  %47 = icmp sgt i64 %46, %41
  br i1 %47, label %202, label %48

48:                                               ; preds = %45
  %49 = load i64, i64* %25, align 8
  %50 = load i64, i64* %21, align 8
  %51 = add i64 %49, -9223372036854775807
  %52 = icmp ult i64 %51, 2
  br i1 %52, label %60, label %53

53:                                               ; preds = %48
  %54 = icmp slt i64 %49, 0
  %55 = select i1 %54, i64 -9223372036854775808, i64 9223372036854775807
  %56 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %50, i64 %49) #5
  %57 = extractvalue { i64, i1 } %56, 1
  %58 = extractvalue { i64, i1 } %56, 0
  %59 = select i1 %57, i64 %55, i64 %58, !prof !2
  br label %71

60:                                               ; preds = %48
  %61 = add i64 %50, -9223372036854775807
  %62 = icmp ugt i64 %61, 1
  %63 = icmp eq i64 %50, %49
  %64 = or i1 %63, %62
  br i1 %64, label %71, label %65

65:                                               ; preds = %60
  %66 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #5
  %67 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #5
  %68 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = load i64, i64* %21, align 8
  br label %71

71:                                               ; preds = %53, %60, %65
  %72 = phi i64 [ %50, %53 ], [ %50, %60 ], [ %70, %65 ]
  %73 = phi i64 [ %46, %53 ], [ %46, %60 ], [ %69, %65 ]
  %74 = phi i64 [ %59, %53 ], [ %49, %60 ], [ %49, %65 ]
  %75 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 0
  %76 = add i64 %73, -9223372036854775807
  %77 = icmp ult i64 %76, 2
  br i1 %77, label %85, label %78

78:                                               ; preds = %71
  %79 = icmp slt i64 %73, 0
  %80 = select i1 %79, i64 -9223372036854775808, i64 9223372036854775807
  %81 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %72, i64 %73) #5
  %82 = extractvalue { i64, i1 } %81, 1
  %83 = extractvalue { i64, i1 } %81, 0
  %84 = select i1 %82, i64 %80, i64 %83, !prof !2
  br label %93

85:                                               ; preds = %71
  %86 = add i64 %72, -9223372036854775807
  %87 = icmp ugt i64 %86, 1
  %88 = icmp eq i64 %72, %73
  %89 = or i1 %88, %87
  br i1 %89, label %93, label %90

90:                                               ; preds = %85
  %91 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #5
  %92 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #5
  br label %93

93:                                               ; preds = %78, %85, %90
  %94 = phi i64 [ %84, %78 ], [ %73, %85 ], [ %73, %90 ]
  %95 = icmp sgt i64 %19, %94
  br i1 %95, label %99, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"struct.std::__1::pair.0", %"struct.std::__1::pair.0"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %74, i64* %97, align 8
  %98 = getelementptr inbounds %"struct.std::__1::pair.0", %"struct.std::__1::pair.0"* %3, i64 0, i32 1, i32 0, i32 0
  store i64 %94, i64* %98, align 8
  br label %202

99:                                               ; preds = %93
  %100 = load i64, i64* %36, align 8
  %101 = load i64, i64* %21, align 8
  %102 = add i64 %100, -9223372036854775807
  %103 = icmp ult i64 %102, 2
  br i1 %103, label %111, label %104

104:                                              ; preds = %99
  %105 = icmp slt i64 %100, 0
  %106 = select i1 %105, i64 -9223372036854775808, i64 9223372036854775807
  %107 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %101, i64 %100) #5
  %108 = extractvalue { i64, i1 } %107, 1
  %109 = extractvalue { i64, i1 } %107, 0
  %110 = select i1 %108, i64 %106, i64 %109, !prof !2
  br label %120

111:                                              ; preds = %99
  %112 = add i64 %101, -9223372036854775807
  %113 = icmp ugt i64 %112, 1
  %114 = icmp eq i64 %101, %100
  %115 = or i1 %114, %113
  br i1 %115, label %120, label %116

116:                                              ; preds = %111
  %117 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #5
  %118 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #5
  %119 = load i64, i64* %21, align 8
  br label %120

120:                                              ; preds = %104, %111, %116
  %121 = phi i64 [ %101, %104 ], [ %101, %111 ], [ %119, %116 ]
  %122 = phi i64 [ %110, %104 ], [ %100, %111 ], [ %100, %116 ]
  %123 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1, i32 0
  %124 = load i64, i64* %123, align 8
  %125 = add i64 %124, -9223372036854775807
  %126 = icmp ult i64 %125, 2
  br i1 %126, label %134, label %127

127:                                              ; preds = %120
  %128 = icmp slt i64 %124, 0
  %129 = select i1 %128, i64 -9223372036854775808, i64 9223372036854775807
  %130 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %121, i64 %124) #5
  %131 = extractvalue { i64, i1 } %130, 1
  %132 = extractvalue { i64, i1 } %130, 0
  %133 = select i1 %131, i64 %129, i64 %132, !prof !2
  br label %142

134:                                              ; preds = %120
  %135 = add i64 %121, -9223372036854775807
  %136 = icmp ugt i64 %135, 1
  %137 = icmp eq i64 %121, %124
  %138 = or i1 %137, %136
  br i1 %138, label %142, label %139

139:                                              ; preds = %134
  %140 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #5
  %141 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #5
  br label %142

142:                                              ; preds = %127, %134, %139
  %143 = phi i64 [ %133, %127 ], [ %124, %134 ], [ %124, %139 ]
  %144 = icmp sgt i64 %19, %143
  br i1 %144, label %148, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"struct.std::__1::pair.0", %"struct.std::__1::pair.0"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %122, i64* %146, align 8
  %147 = getelementptr inbounds %"struct.std::__1::pair.0", %"struct.std::__1::pair.0"* %3, i64 0, i32 1, i32 0, i32 0
  store i64 %143, i64* %147, align 8
  br label %202

148:                                              ; preds = %142
  %149 = load i64, i64* %21, align 8
  %150 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %149, i64 86400000000) #5
  %151 = extractvalue { i64, i1 } %150, 1
  %152 = extractvalue { i64, i1 } %150, 0
  %153 = select i1 %151, i64 9223372036854775807, i64 %152
  %154 = load i64, i64* %25, align 8
  %155 = add i64 %154, -9223372036854775807
  %156 = icmp ult i64 %155, 2
  br i1 %156, label %164, label %157

157:                                              ; preds = %148
  %158 = icmp slt i64 %154, 0
  %159 = select i1 %158, i64 -9223372036854775808, i64 9223372036854775807
  %160 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %153, i64 %154) #5
  %161 = extractvalue { i64, i1 } %160, 1
  %162 = extractvalue { i64, i1 } %160, 0
  %163 = select i1 %161, i64 %159, i64 %162, !prof !2
  br label %177

164:                                              ; preds = %148
  %165 = add i64 %153, -9223372036854775807
  %166 = icmp ugt i64 %165, 1
  %167 = icmp eq i64 %153, %154
  %168 = or i1 %167, %166
  br i1 %168, label %177, label %169

169:                                              ; preds = %164
  %170 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %170) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #5
  %171 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %170) #5
  %172 = load i64, i64* %21, align 8
  %173 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %172, i64 86400000000) #5
  %174 = extractvalue { i64, i1 } %173, 1
  %175 = extractvalue { i64, i1 } %173, 0
  %176 = select i1 %174, i64 9223372036854775807, i64 %175, !prof !2
  br label %177

177:                                              ; preds = %157, %164, %169
  %178 = phi i64 [ %153, %157 ], [ %153, %164 ], [ %176, %169 ]
  %179 = phi i64 [ %163, %157 ], [ %154, %164 ], [ %154, %169 ]
  %180 = load i64, i64* %75, align 8
  %181 = add i64 %180, -9223372036854775807
  %182 = icmp ult i64 %181, 2
  br i1 %182, label %190, label %183

183:                                              ; preds = %177
  %184 = icmp slt i64 %180, 0
  %185 = select i1 %184, i64 -9223372036854775808, i64 9223372036854775807
  %186 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %178, i64 %180) #5
  %187 = extractvalue { i64, i1 } %186, 1
  %188 = extractvalue { i64, i1 } %186, 0
  %189 = select i1 %187, i64 %185, i64 %188, !prof !2
  br label %198

190:                                              ; preds = %177
  %191 = add i64 %178, -9223372036854775807
  %192 = icmp ugt i64 %191, 1
  %193 = icmp eq i64 %178, %180
  %194 = or i1 %193, %192
  br i1 %194, label %198, label %195

195:                                              ; preds = %190
  %196 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %196) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #5
  %197 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %196) #5
  br label %198

198:                                              ; preds = %183, %190, %195
  %199 = phi i64 [ %189, %183 ], [ %180, %190 ], [ %180, %195 ]
  %200 = getelementptr inbounds %"struct.std::__1::pair.0", %"struct.std::__1::pair.0"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %179, i64* %200, align 8
  %201 = getelementptr inbounds %"struct.std::__1::pair.0", %"struct.std::__1::pair.0"* %3, i64 0, i32 1, i32 0, i32 0
  store i64 %199, i64* %201, align 8
  br label %202

202:                                              ; preds = %40, %29, %34, %23, %96, %198, %145, %4, %45
  %203 = phi i1 [ false, %45 ], [ false, %40 ], [ false, %29 ], [ false, %4 ], [ true, %145 ], [ true, %198 ], [ true, %96 ], [ false, %23 ], [ false, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #5
  ret i1 %203
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #4

declare void @_ZNK4base4Time7ExplodeEbPNS0_8ExplodedE(%"class.base::Time"*, i1 zeroext, %"struct.base::Time::Exploded"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base4Time12FromExplodedEbRKNS0_8ExplodedEPS0_(i1 zeroext, %"struct.base::Time::Exploded"* dereferenceable(32), %"class.base::Time"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #5
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !2
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #5
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #5
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %26, i8* %27) #5
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #5
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #5
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #5
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #4

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
