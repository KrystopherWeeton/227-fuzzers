; ModuleID = '../../third_party/blink/renderer/core/frame/dom_window.cc'
source_filename = "../../third_party/blink/renderer/core/frame/dom_window.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.25", i32, [4 x i8], %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.161", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.196", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.203", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.141", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.61" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.61" = type { %"struct.std::__1::__atomic_base.62" }
%"struct.std::__1::__atomic_base.62" = type { %"struct.std::__1::__atomic_base.63" }
%"struct.std::__1::__atomic_base.63" = type { %"struct.std::__1::__cxx_atomic_impl.64" }
%"struct.std::__1::__cxx_atomic_impl.64" = type { %"struct.std::__1::__cxx_atomic_base_impl.65" }
%"struct.std::__1::__cxx_atomic_base_impl.65" = type { i64 }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::Worklist.72"* }
%"class.blink::Worklist.72" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.61" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::Worklist.79"* }
%"class.blink::Worklist.79" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.61" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::Worklist.86"* }
%"class.blink::Worklist.86" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.61" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::Worklist.93"* }
%"class.blink::Worklist.93" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.61" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::Worklist.100"* }
%"class.blink::Worklist.100" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.61" }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::Worklist.107"* }
%"class.blink::Worklist.107" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.61" }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::Worklist.114"* }
%"class.blink::Worklist.114" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.61" }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.121", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", %"class.std::__1::__compressed_pair.135", [4 x i8] }>
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123", %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { i64 }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { float }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.144", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.153" }
%"class.WTF::Vector.153" = type { %"class.WTF::VectorBuffer.154" }
%"class.WTF::VectorBuffer.154" = type { %"class.WTF::VectorBufferBase.155" }
%"class.WTF::VectorBufferBase.155" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.169" }
%"class.WTF::VectorBuffer.169" = type { %"class.WTF::VectorBufferBase.170" }
%"class.WTF::VectorBufferBase.170" = type { %"struct.std::__1::pair.171"*, i32, i32 }
%"struct.std::__1::pair.171" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.184" }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.72"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.79"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.86"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.93"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.100"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.408" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.202 }
%class.scoped_refptr.202 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.203" = type { %"struct.std::__1::__atomic_base.204" }
%"struct.std::__1::__atomic_base.204" = type { %"struct.std::__1::__cxx_atomic_impl.205" }
%"struct.std::__1::__cxx_atomic_impl.205" = type { %"struct.std::__1::__cxx_atomic_base_impl.206" }
%"struct.std::__1::__cxx_atomic_base_impl.206" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.228" }
%"struct.std::__1::atomic.228" = type { %"struct.std::__1::__atomic_base.229" }
%"struct.std::__1::__atomic_base.229" = type { %"struct.std::__1::__atomic_base.230" }
%"struct.std::__1::__atomic_base.230" = type { %"struct.std::__1::__cxx_atomic_impl.231" }
%"struct.std::__1::__cxx_atomic_impl.231" = type { %"struct.std::__1::__cxx_atomic_base_impl.232" }
%"struct.std::__1::__cxx_atomic_base_impl.232" = type { i32 }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.8", %"class.blink::Member.10", %"class.blink::Member.214", %"class.blink::Member.220", i8, %"class.WTF::Vector.224" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapVector.5"* }
%"class.blink::HeapVector.5" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.6"* }
%"class.WTF::Vector.6" = type opaque
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.415", %"class.blink::Member.417", %"class.blink::Member.222", i8, i32, i8, i32, %"class.blink::Member.419", %"class.blink::Member.10", %"class.blink::FrameLifecycle", %"class.blink::Member.8", %"class.blink::Member.8", %"class.blink::Member.8", %"class.blink::Member.8", %"class.blink::Member.8", %"class.blink::Member.8", %"class.blink::Member.423", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.433", i8, %"class.base::UnguessableToken", %"class.absl::optional.435", %"class.absl::optional.440", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.8", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.415" = type { %"class.blink::MemberBase.416" }
%"class.blink::MemberBase.416" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.1882", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.8", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.1908", %"class.blink::Member.1912", %"class.blink::Member.1914", %"class.blink::Member.1918", %"class.blink::Member.1920", %"class.blink::Member.1922", %"class.blink::Member.1933", %"class.blink::Member.1935", %"class.blink::HeapObserverSet.1937", %"class.blink::Member.1945", %"class.blink::Member.1947", %"class.blink::Member.1949", %"class.blink::Member.1951", %"class.blink::Member.1953", %"class.blink::Member.1955", %"class.blink::Member.1957", %"class.blink::Member.1959", %"class.blink::Member.1961", %"class.blink::Member.1963", %"class.blink::Member.1965", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.1990", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.1997", %"class.blink::Member.415", %"class.blink::Member.415", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.2005", %"class.std::__1::unique_ptr.2011", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.1882" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1883" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap.1883" = type { %"class.WTF::HashMap.1886" }
%"class.WTF::HashMap.1886" = type { %"class.WTF::HashTable.1887" }
%"class.WTF::HashTable.1887" = type <{ %"struct.WTF::KeyValuePair.1889"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1889" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.1890" }
%"class.std::__1::unique_ptr.1890" = type { %"class.std::__1::__compressed_pair.1891" }
%"class.std::__1::__compressed_pair.1891" = type { %"struct.std::__1::__compressed_pair_elem.1892" }
%"struct.std::__1::__compressed_pair_elem.1892" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type <{ %"class.blink::SettingsDelegate"*, %"class.blink::GenericFontFamilySettings", double, i32, [4 x i8], double, i32, i32, i32, i32, i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", i32, i32, double, i32, i32, i32, i32, i32, %"class.blink::IntSize", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", [14 x i8], [2 x i8] }>
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.1893", %"class.WTF::HashMap.1893", %"class.WTF::HashMap.1893", %"class.WTF::HashMap.1893", %"class.WTF::HashMap.1893", %"class.WTF::HashMap.1893", %"class.WTF::HashMap.1893", %"class.std::__1::unique_ptr.1898" }
%"class.WTF::HashMap.1893" = type { %"class.WTF::HashTable.1894" }
%"class.WTF::HashTable.1894" = type <{ %"struct.WTF::KeyValuePair.1897"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1897" = type opaque
%"class.std::__1::unique_ptr.1898" = type { %"class.std::__1::__compressed_pair.1899" }
%"class.std::__1::__compressed_pair.1899" = type { %"struct.std::__1::__compressed_pair_elem.1900" }
%"struct.std::__1::__compressed_pair_elem.1900" = type { %"class.WTF::Vector.1901"* }
%"class.WTF::Vector.1901" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.1908" = type { %"class.blink::MemberBase.1909" }
%"class.blink::MemberBase.1909" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.415", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::Member.1912" = type { %"class.blink::MemberBase.1913" }
%"class.blink::MemberBase.1913" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.1914" = type { %"class.blink::MemberBase.1915" }
%"class.blink::MemberBase.1915" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type { i32 (...)**, %"class.blink::WeakMember.1568", %"struct.blink::PhysicalOffset", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::WeakMember.1568" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.503", %"class.blink::Member.505", %"class.blink::Member.503", %"class.blink::Member.503", %"class.blink::Member.507" }
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.920", %"class.blink::Member.922", %"class.blink::Member.505", %"class.blink::Member.924", %"class.blink::Member.924", %"class.blink::Member.946", %"class.blink::Member.948", %"class.blink::Member.950", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.955", %"class.blink::HeapVector.957" }
%"class.blink::Member.920" = type { %"class.blink::MemberBase.921" }
%"class.blink::MemberBase.921" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.503", %"class.blink::Member.503" }
%"class.blink::Member.922" = type { %"class.blink::MemberBase.923" }
%"class.blink::MemberBase.923" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1000", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1008", %"class.WTF::Vector.1008", i8, i32, %"class.blink::Member.1013", %"class.blink::Member.1080", %"class.blink::Member.1342", %"class.blink::Member.1344", %"class.blink::Member.1346", %"class.blink::Member.1348", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1350", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1356", %"class.blink::Member.1358", %"class.blink::Member.963", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1360", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.939", %"class.blink::Member.501", %"class.blink::Member.1322", %"class.blink::Member.501", %"class.blink::Member.501", %"class.blink::Member.501", %"class.blink::UserActionElementSet", %"class.blink::Member.1376", double, double, i64, i64, %"class.blink::HeapHashSet.1378", %"class.blink::HeapHashSet.1385", i16, i8, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::Member.1398", %"class.blink::TextLinkColors", %"class.blink::Member.1400", i8, [7 x i8], %"class.blink::HeapHashMap.1402", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.501", %"class.WTF::Vector.1409", %"class.blink::Member.1414", %"class.blink::Member.1418", i8, %"class.blink::Member.501", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1420", %"class.blink::HeapVector.1422", %"class.std::__1::unique_ptr.1430", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1436", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1449", %"class.WTF::Vector.1451", i8, i8, %"class.std::__1::unique_ptr.1456", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.939", %"class.blink::HeapVector.1462", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1470", i8, i32, %"class.blink::Member.1472", %"class.blink::Member.1474", %"class.blink::Member.1476", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1478", %"class.WTF::HashMap.1480", %"class.blink::Member.1485", %"class.blink::Member.1487", %"class.blink::Member.1489", %"class.blink::Member.1491", %"class.blink::Member.922", %"class.blink::Member.922", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1493", i8, i32, %"class.blink::Member.1500", %"class.blink::Member.1502", i32, %"class.blink::Member.1504", %"class.blink::Member.1506", %"class.blink::Member.1508", %"class.std::__1::unique_ptr.1510", i64, %"class.std::__1::unique_ptr.1516", i32, i32, %"class.blink::Member.1522", %"class.blink::Member.1524", %"class.blink::Member.1526", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1528", %"class.WTF::Vector.767", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1530", %"class.blink::Member.1537", %"class.std::__1::unique_ptr.1539", %"class.blink::Member.1545", i8, i8, %"class.WTF::String", %"class.blink::Member.1547", i8, [7 x i8], %"class.blink::HeapHashMap.1549", %"class.blink::HeapObserverSet.1556", %"class.blink::Member.1564", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1566", i32, i8, i8, %"class.blink::WeakMember.1568", %"class.blink::Member.1569" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.1000" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1001" }
%"class.blink::HeapHashMap.1001" = type { %"class.WTF::HashMap.1004" }
%"class.WTF::HashMap.1004" = type { %"class.WTF::HashTable.1005" }
%"class.WTF::HashTable.1005" = type <{ %"struct.WTF::KeyValuePair.1007"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1007" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.1008" = type { %"class.WTF::VectorBuffer.1009" }
%"class.WTF::VectorBuffer.1009" = type { %"class.WTF::VectorBufferBase.1010" }
%"class.WTF::VectorBufferBase.1010" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.259 }
%class.scoped_refptr.259 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.260", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.260" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.228" }
%"class.blink::Member.1013" = type { %"class.blink::MemberBase.1014" }
%"class.blink::MemberBase.1014" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.1182", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1190", %"class.blink::Member.922", %"class.blink::Member.1192", i8, %"class.blink::Member.1194", %"class.blink::Member.1196", %"class.blink::Member.1198", %"class.blink::Member.1198", %"class.blink::Member.1198", %"class.blink::Member.1198", %"class.blink::Member.1198", %"class.blink::Member.1198", %"class.blink::Member.1200", %"class.blink::Member.1202", %"class.blink::Member.1204", %"class.blink::Member.1206", %"class.blink::Member.1208", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.1139", %"class.blink::Member.1210", %class.scoped_refptr.1212, %"class.blink::HeapHashSet.1274", %"class.blink::Member.1281", %"class.blink::HeapHashMap.1294", %"class.std::__1::unique_ptr.1301", %"class.blink::Member.1307", %"class.blink::Member.1326", %"class.blink::Member.1328", %"class.blink::Member.1330", %"class.WTF::Vector.767", %"class.util::TokenType", %"class.WTF::HashSet.1333", %"class.WTF::Deque.1337" }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.1015", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1086", i32, i8, [3 x i8], %"class.blink::HeapVector.1088", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1096", %"class.blink::Member.1098", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1107", %"class.blink::Member.1168", %"class.blink::Member.1170", i8 }>
%"class.blink::Supplementable.1015" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1016" }
%"class.blink::HeapHashMap.1016" = type { %"class.WTF::HashMap.1019" }
%"class.WTF::HashMap.1019" = type { %"class.WTF::HashTable.1020" }
%"class.WTF::HashTable.1020" = type <{ %"struct.WTF::KeyValuePair.1022"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1022" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1030" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1023" }
%"class.blink::HeapHashSet.1023" = type { %"class.WTF::HashSet.1026" }
%"class.WTF::HashSet.1026" = type { %"class.WTF::HashTable.1027" }
%"class.WTF::HashTable.1027" = type <{ %"class.blink::WeakMember.1029"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1029" = type opaque
%"class.blink::Supplementable.1030" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1031" }
%"class.blink::HeapHashMap.1031" = type { %"class.WTF::HashMap.1034" }
%"class.WTF::HashMap.1034" = type { %"class.WTF::HashTable.1035" }
%"class.WTF::HashTable.1035" = type <{ %"struct.WTF::KeyValuePair.1037"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1037" = type { i8*, %"class.blink::Member.2224" }
%"class.blink::Member.2224" = type { %"class.blink::MemberBase.2225" }
%"class.blink::MemberBase.2225" = type { %"class.blink::Supplement.2226"* }
%"class.blink::Supplement.2226" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2227" }
%"class.blink::Member.2227" = type { %"class.blink::MemberBase.2228" }
%"class.blink::MemberBase.2228" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1038, %"class.std::__1::unique_ptr.1047", %"class.std::__1::unique_ptr.1047", %"class.std::__1::unique_ptr.1074", %"class.std::__1::unique_ptr.1074", %"class.blink::Member.1080", i32, [4 x i8], %"class.WTF::HashSet.1082", i32, i32 }
%class.scoped_refptr.1038 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1039", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1041", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1046 }
%"class.WTF::RefCounted.1039" = type { %"class.base::RefCounted.1040" }
%"class.base::RefCounted.1040" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1041" = type { %"class.absl::optional_internal::optional_data.1042" }
%"class.absl::optional_internal::optional_data.1042" = type { %"class.absl::optional_internal::optional_data_base.1043" }
%"class.absl::optional_internal::optional_data_base.1043" = type { %"class.absl::optional_internal::optional_data_dtor_base.1044" }
%"class.absl::optional_internal::optional_data_dtor_base.1044" = type { i8, %union.anon.1045 }
%union.anon.1045 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.1046 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1047" = type { %"class.std::__1::__compressed_pair.1048" }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.1049" }
%"struct.std::__1::__compressed_pair_elem.1049" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.1050", %"class.std::__1::map.1061", %"class.std::__1::map.1070"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1041" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map.1050" = type { %"class.std::__1::__tree.1051" }
%"class.std::__1::__tree.1051" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1052", %"class.std::__1::__compressed_pair.1056" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1052" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1056" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"class.std::__1::map.1061" = type { %"class.std::__1::__tree.1062" }
%"class.std::__1::__tree.1062" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1063", %"class.std::__1::__compressed_pair.1067" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"class.std::__1::__compressed_pair.1067" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"class.std::__1::map.1070" = type opaque
%"class.std::__1::unique_ptr.1074" = type { %"class.std::__1::__compressed_pair.1075" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1082" = type { %"class.WTF::HashTable.1083" }
%"class.WTF::HashTable.1083" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1086" = type { %"class.blink::MemberBase.1087" }
%"class.blink::MemberBase.1087" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1088" = type { %"class.WTF::Vector.1091" }
%"class.WTF::Vector.1091" = type { %"class.WTF::VectorBuffer.1092" }
%"class.WTF::VectorBuffer.1092" = type { %"class.WTF::VectorBufferBase.1093" }
%"class.WTF::VectorBufferBase.1093" = type { %"class.blink::Member.1094"*, i32, i32 }
%"class.blink::Member.1094" = type opaque
%"class.blink::Member.1096" = type { %"class.blink::MemberBase.1097" }
%"class.blink::MemberBase.1097" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1098" = type { %"class.blink::MemberBase.1099" }
%"class.blink::MemberBase.1099" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1100", i32, i32 }
%"class.blink::HeapHashMap.1100" = type { %"class.WTF::HashMap.1103" }
%"class.WTF::HashMap.1103" = type { %"class.WTF::HashTable.1104" }
%"class.WTF::HashTable.1104" = type <{ %"struct.WTF::KeyValuePair.1106"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1106" = type opaque
%"class.std::__1::unique_ptr.1107" = type { %"class.std::__1::__compressed_pair.1108" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.1109" }
%"struct.std::__1::__compressed_pair_elem.1109" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr.1110", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr.1110" = type { %"class.std::__1::unique_ptr.1111" }
%"class.std::__1::unique_ptr.1111" = type { %"class.std::__1::__compressed_pair.1112" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.1113" }
%"struct.std::__1::__compressed_pair_elem.1113" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1114" }
%"class.WTF::Vector.1114" = type { %"class.WTF::VectorBuffer.1115" }
%"class.WTF::VectorBuffer.1115" = type { %"class.WTF::VectorBufferBase.1116" }
%"class.WTF::VectorBufferBase.1116" = type { %"class.mojo::StructPtr.1117"*, i32, i32 }
%"class.mojo::StructPtr.1117" = type { %"class.std::__1::unique_ptr.1118" }
%"class.std::__1::unique_ptr.1118" = type { %"class.std::__1::__compressed_pair.1119" }
%"class.std::__1::__compressed_pair.1119" = type { %"struct.std::__1::__compressed_pair_elem.1120" }
%"struct.std::__1::__compressed_pair_elem.1120" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1121", %"class.WTF::HashMap.1128", %"class.WTF::HashMap.1133", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.1138", i8, %"class.WTF::Vector.1139", i32, %"class.mojo::StructPtr.1144", %"class.WTF::Vector.1139" }
%"class.mojo::StructPtr.1121" = type { %"class.std::__1::unique_ptr.1122" }
%"class.std::__1::unique_ptr.1122" = type { %"class.std::__1::__compressed_pair.1123" }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1128" = type { %"class.WTF::HashTable.1129" }
%"class.WTF::HashTable.1129" = type <{ %"struct.WTF::KeyValuePair.1132"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1132" = type opaque
%"class.WTF::HashMap.1133" = type { %"class.WTF::HashTable.1134" }
%"class.WTF::HashTable.1134" = type <{ %"struct.WTF::KeyValuePair.1137"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1137" = type opaque
%"class.mojo::InlinedStructPtr.1138" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1144" = type { %"class.std::__1::unique_ptr.1145" }
%"class.std::__1::unique_ptr.1145" = type { %"class.std::__1::__compressed_pair.1146" }
%"class.std::__1::__compressed_pair.1146" = type { %"struct.std::__1::__compressed_pair_elem.1147" }
%"struct.std::__1::__compressed_pair_elem.1147" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.1139", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1159" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.349", i32 }>
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.352", %"class.base::OnceCallback.353", %"class.absl::optional.354", %"class.absl::optional.359", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.366", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.374", %"class.std::__1::map.385", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.394", i8, %class.scoped_refptr.233, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.395" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback.352" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.353" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.354" = type { %"class.absl::optional_internal::optional_data.355" }
%"class.absl::optional_internal::optional_data.355" = type { %"class.absl::optional_internal::optional_data_base.356" }
%"class.absl::optional_internal::optional_data_base.356" = type { %"class.absl::optional_internal::optional_data_dtor_base.357" }
%"class.absl::optional_internal::optional_data_dtor_base.357" = type { i8, %union.anon.358 }
%union.anon.358 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.359" = type { %"class.absl::optional_internal::optional_data.360" }
%"class.absl::optional_internal::optional_data.360" = type { %"class.absl::optional_internal::optional_data_base.361" }
%"class.absl::optional_internal::optional_data_base.361" = type { %"class.absl::optional_internal::optional_data_dtor_base.362" }
%"class.absl::optional_internal::optional_data_dtor_base.362" = type { i8, %union.anon.363 }
%union.anon.363 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.233, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.364" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.364" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.252 }
%class.scoped_refptr.252 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.253", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.254" }
%"struct.std::__1::atomic.254" = type { %"struct.std::__1::__atomic_base.255" }
%"struct.std::__1::__atomic_base.255" = type { %"struct.std::__1::__atomic_base.256" }
%"struct.std::__1::__atomic_base.256" = type { %"struct.std::__1::__cxx_atomic_impl.257" }
%"struct.std::__1::__cxx_atomic_impl.257" = type { %"struct.std::__1::__cxx_atomic_base_impl.258" }
%"struct.std::__1::__cxx_atomic_base_impl.258" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.308 }
%class.scoped_refptr.308 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.407", [4 x i8], %"class.base::RepeatingCallback.352", %class.scoped_refptr.233, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.407" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.365 }
%class.scoped_refptr.365 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.369", %class.scoped_refptr.370 }
%"class.base::RepeatingCallback.369" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.370 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.246", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.374" = type { %"class.std::__1::__tree.375" }
%"class.std::__1::__tree.375" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.376", %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"class.std::__1::map.385" = type { %"class.std::__1::__tree.386" }
%"class.std::__1::__tree.386" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.387", %"class.std::__1::__compressed_pair.391" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"class.base::OnceCallback.394" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.233 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.234" }>
%"class.base::RefCountedThreadSafe.234" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.395" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1159" = type { %"class.std::__1::__compressed_pair.1160" }
%"class.std::__1::__compressed_pair.1160" = type { %"struct.std::__1::__compressed_pair_elem.1161" }
%"struct.std::__1::__compressed_pair_elem.1161" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1168" = type { %"class.blink::MemberBase.1169" }
%"class.blink::MemberBase.1169" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1170" = type { %"class.blink::MemberBase.1171" }
%"class.blink::MemberBase.1171" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.1098", i8, [7 x i8], %"class.WTF::Vector.1114", %"class.blink::HeapVector.1174", i8, [7 x i8], %"class.WTF::HashSet.1082", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type opaque
%"class.blink::Supplementable.1182" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1183" }
%"class.blink::HeapHashMap.1183" = type { %"class.WTF::HashMap.1186" }
%"class.WTF::HashMap.1186" = type { %"class.WTF::HashTable.1187" }
%"class.WTF::HashTable.1187" = type <{ %"struct.WTF::KeyValuePair.1189"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1189" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1190" = type { %"class.blink::MemberBase.1191" }
%"class.blink::MemberBase.1191" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.1192" = type { %"class.blink::MemberBase.1193" }
%"class.blink::MemberBase.1193" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.1194" = type { %"class.blink::MemberBase.1195" }
%"class.blink::MemberBase.1195" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.1196" = type { %"class.blink::MemberBase.1197" }
%"class.blink::MemberBase.1197" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.1198" = type { %"class.blink::MemberBase.1199" }
%"class.blink::MemberBase.1199" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.1202" = type { %"class.blink::MemberBase.1203" }
%"class.blink::MemberBase.1203" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.1204" = type { %"class.blink::MemberBase.1205" }
%"class.blink::MemberBase.1205" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.1206" = type { %"class.blink::MemberBase.1207" }
%"class.blink::MemberBase.1207" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.1208" = type { %"class.blink::MemberBase.1209" }
%"class.blink::MemberBase.1209" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.WTF::Vector.1139" = type { %"class.WTF::VectorBuffer.1140" }
%"class.WTF::VectorBuffer.1140" = type { %"class.WTF::VectorBufferBase.1141" }
%"class.WTF::VectorBufferBase.1141" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.1210" = type { %"class.blink::MemberBase.1211" }
%"class.blink::MemberBase.1211" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.1212 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.1214", i64, %"class.WTF::Vector.1218", %"class.WTF::Vector.1223", %"class.WTF::Vector.1229", %"class.WTF::Vector.1247", %class.scoped_refptr.1038, %"class.WTF::HashMap.1253", %"class.WTF::Vector.1258", %"class.WTF::Vector.1218", %"class.WTF::Vector.1264", %"class.WTF::HashMap.1269", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1213" }
%"class.base::RefCountedThreadSafe.1213" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1214" = type { %"class.std::__1::__compressed_pair.1215" }
%"class.std::__1::__compressed_pair.1215" = type { %"struct.std::__1::__compressed_pair_elem.1216" }
%"struct.std::__1::__compressed_pair_elem.1216" = type { i8* }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225", [8 x i8] }
%"class.WTF::VectorBufferBase.1225" = type { %class.scoped_refptr.1226*, i32, i32 }
%class.scoped_refptr.1226 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1229" = type { %"class.WTF::VectorBuffer.1230" }
%"class.WTF::VectorBuffer.1230" = type { %"class.WTF::VectorBufferBase.1231" }
%"class.WTF::VectorBufferBase.1231" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1233", %"class.std::__1::unique_ptr.1239" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1232 }
%class.scoped_refptr.1232 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1233" = type { %"class.std::__1::__compressed_pair.1234" }
%"class.std::__1::__compressed_pair.1234" = type { %"struct.std::__1::__compressed_pair_elem.1235" }
%"struct.std::__1::__compressed_pair_elem.1235" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1239" = type { %"class.std::__1::__compressed_pair.1240" }
%"class.std::__1::__compressed_pair.1240" = type { %"struct.std::__1::__compressed_pair_elem.1241" }
%"struct.std::__1::__compressed_pair_elem.1241" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1247" = type { %"class.WTF::VectorBuffer.1248" }
%"class.WTF::VectorBuffer.1248" = type { %"class.WTF::VectorBufferBase.1249" }
%"class.WTF::VectorBufferBase.1249" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1250", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1250" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1253" = type { %"class.WTF::HashTable.1254" }
%"class.WTF::HashTable.1254" = type <{ %"struct.WTF::KeyValuePair.1257"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1257" = type opaque
%"class.WTF::Vector.1258" = type { %"class.WTF::VectorBuffer.1259" }
%"class.WTF::VectorBuffer.1259" = type { %"class.WTF::VectorBufferBase.1260" }
%"class.WTF::VectorBufferBase.1260" = type { %"class.mojo::ScopedHandleBase.1261"*, i32, i32 }
%"class.mojo::ScopedHandleBase.1261" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.1218" = type { %"class.WTF::VectorBuffer.1219" }
%"class.WTF::VectorBuffer.1219" = type { %"class.WTF::VectorBufferBase.1220", [16 x i8] }
%"class.WTF::VectorBufferBase.1220" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1264" = type { %"class.WTF::VectorBuffer.1265" }
%"class.WTF::VectorBuffer.1265" = type { %"class.WTF::VectorBufferBase.1266" }
%"class.WTF::VectorBufferBase.1266" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1273"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1273" = type { i8**, %"class.std::__1::unique_ptr.2218" }
%"class.std::__1::unique_ptr.2218" = type { %"class.std::__1::__compressed_pair.2219" }
%"class.std::__1::__compressed_pair.2219" = type { %"struct.std::__1::__compressed_pair_elem.2220" }
%"struct.std::__1::__compressed_pair_elem.2220" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.1274" = type { %"class.WTF::HashSet.1277" }
%"class.WTF::HashSet.1277" = type { %"class.WTF::HashTable.1278" }
%"class.WTF::HashTable.1278" = type <{ %"class.blink::WeakMember.1280"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1280" = type opaque
%"class.blink::Member.1281" = type { %"class.blink::MemberBase.1282" }
%"class.blink::MemberBase.1282" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1288", %"class.blink::Member.1288", %"class.blink::Member.1290", %"class.blink::Member.1292", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.1283" }
%"class.absl::optional.1283" = type { %"class.absl::optional_internal::optional_data.1284" }
%"class.absl::optional_internal::optional_data.1284" = type { %"class.absl::optional_internal::optional_data_base.1285" }
%"class.absl::optional_internal::optional_data_base.1285" = type { %"class.absl::optional_internal::optional_data_dtor_base.1286" }
%"class.absl::optional_internal::optional_data_dtor_base.1286" = type { i8, %union.anon.1287 }
%union.anon.1287 = type { i64 }
%"class.blink::Member.1288" = type { %"class.blink::MemberBase.1289" }
%"class.blink::MemberBase.1289" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.1290" = type { %"class.blink::MemberBase.1291" }
%"class.blink::MemberBase.1291" = type { %"class.blink::Event"* }
%"class.blink::Member.1292" = type { %"class.blink::MemberBase.1293" }
%"class.blink::MemberBase.1293" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type opaque
%"class.std::__1::unique_ptr.1301" = type { %"class.std::__1::__compressed_pair.1302" }
%"class.std::__1::__compressed_pair.1302" = type { %"struct.std::__1::__compressed_pair_elem.1303" }
%"struct.std::__1::__compressed_pair_elem.1303" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.461", %"class.base::WeakPtrFactory.466" }
%"class.WTF::HashMap.461" = type { %"class.WTF::HashTable.462" }
%"class.WTF::HashTable.462" = type <{ %"struct.WTF::KeyValuePair.465"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.465" = type opaque
%"class.base::WeakPtrFactory.466" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1307" = type { %"class.blink::MemberBase.1308" }
%"class.blink::MemberBase.1308" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.423", %"class.blink::CachedTextInputInfo", %"class.blink::Member.1322", %"class.blink::Member.1324", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1311" }
%"class.blink::WeakMember.1311" = type { %"class.blink::MemberBase.1312" }
%"class.blink::MemberBase.1312" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.1313", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.1315", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.1313" = type { %"class.blink::MemberBase.1314" }
%"class.blink::MemberBase.1314" = type { %"class.blink::ContainerNode"* }
%"class.blink::LayoutObject" = type opaque
%"class.blink::HeapHashMap.1315" = type { %"class.WTF::HashMap.1318" }
%"class.WTF::HashMap.1318" = type { %"class.WTF::HashTable.1319" }
%"class.WTF::HashTable.1319" = type <{ %"struct.WTF::KeyValuePair.1321"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1321" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.503", i32, i32 }
%"class.blink::Member.1324" = type { %"class.blink::MemberBase.1325" }
%"class.blink::MemberBase.1325" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.1326" = type { %"class.blink::MemberBase.1327" }
%"class.blink::MemberBase.1327" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.1013", %"class.blink::Member.1589", %"class.blink::Member.1591" }
%"class.blink::Member.1589" = type { %"class.blink::MemberBase.1590" }
%"class.blink::MemberBase.1590" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1591" = type { %"class.blink::MemberBase.1592" }
%"class.blink::MemberBase.1592" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.1328" = type { %"class.blink::MemberBase.1329" }
%"class.blink::MemberBase.1329" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.1013", %"class.blink::HeapMojoRemote.1584" }
%"class.blink::HeapMojoRemote.1584" = type { %"class.blink::Member.1585" }
%"class.blink::Member.1585" = type { %"class.blink::MemberBase.1586" }
%"class.blink::MemberBase.1586" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1330" = type { %"class.blink::MemberBase.1331" }
%"class.blink::MemberBase.1331" = type { %"class.blink::HeapHashMap.1332"* }
%"class.blink::HeapHashMap.1332" = type opaque
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.1333" = type { %"class.WTF::HashTable.1334" }
%"class.WTF::HashTable.1334" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.1337" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1340" }
%"class.WTF::VectorBuffer.1340" = type { %"class.WTF::VectorBufferBase.1341" }
%"class.WTF::VectorBufferBase.1341" = type { i64*, i32, i32 }
%"class.blink::Member.1080" = type { %"class.blink::MemberBase.1081" }
%"class.blink::MemberBase.1081" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1015", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1086", i32, i8, [3 x i8], %"class.blink::HeapVector.1088", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1096", %"class.blink::Member.1098", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1107", %"class.blink::Member.1168", %"class.blink::Member.1170", i8, [7 x i8] }>
%"class.blink::Member.1342" = type { %"class.blink::MemberBase.1343" }
%"class.blink::MemberBase.1343" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1344" = type { %"class.blink::MemberBase.1345" }
%"class.blink::MemberBase.1345" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1346" = type { %"class.blink::MemberBase.1347" }
%"class.blink::MemberBase.1347" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1348" = type { %"class.blink::MemberBase.1349" }
%"class.blink::MemberBase.1349" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.486" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.486" = type { %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.488" }
%"struct.std::__1::__compressed_pair_elem.488" = type { %"class.blink::KURL"* }
%"class.blink::Member.1356" = type { %"class.blink::MemberBase.1357" }
%"class.blink::MemberBase.1357" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1358" = type { %"class.blink::MemberBase.1359" }
%"class.blink::MemberBase.1359" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.963" = type { %"class.blink::MemberBase.964" }
%"class.blink::MemberBase.964" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.965", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.967, %"class.WTF::Vector.968", %"class.WTF::Vector.968", %"class.blink::Member.503", %"class.blink::Member.973", %"class.blink::HeapHashSet.977", %"class.blink::Member.922", %"class.WTF::HashSet.984", %"class.WTF::TextPosition", %"class.blink::Member.988", %"class.blink::HeapVector.990", %"class.blink::Member.997" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.965" = type { %"class.blink::MemberBase.966" }
%"class.blink::MemberBase.966" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.967 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.968" = type { %"class.WTF::VectorBuffer.969" }
%"class.WTF::VectorBuffer.969" = type { %"class.WTF::VectorBufferBase.970" }
%"class.WTF::VectorBufferBase.970" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.973" = type { %"class.blink::MemberBase.974" }
%"class.blink::MemberBase.974" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.975" }
%"class.blink::Member.975" = type { %"class.blink::MemberBase.976" }
%"class.blink::MemberBase.976" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.977" = type { %"class.WTF::HashSet.980" }
%"class.WTF::HashSet.980" = type { %"class.WTF::HashTable.981" }
%"class.WTF::HashTable.981" = type <{ %"class.blink::WeakMember.983"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.983" = type { %"class.blink::MemberBase.506" }
%"class.WTF::HashSet.984" = type { %"class.WTF::HashTable.985" }
%"class.WTF::HashTable.985" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.988" = type { %"class.blink::MemberBase.989" }
%"class.blink::MemberBase.989" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.990" = type { %"class.WTF::Vector.993" }
%"class.WTF::Vector.993" = type { %"class.WTF::VectorBuffer.994" }
%"class.WTF::VectorBuffer.994" = type { %"class.WTF::VectorBufferBase.995" }
%"class.WTF::VectorBufferBase.995" = type { %"class.blink::Member.973"*, i32, i32 }
%"class.blink::Member.997" = type { %"class.blink::MemberBase.998" }
%"class.blink::MemberBase.998" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.WTF::Vector.1360" = type { %"class.WTF::VectorBuffer.1361" }
%"class.WTF::VectorBuffer.1361" = type { %"class.WTF::VectorBufferBase.1362" }
%"class.WTF::VectorBufferBase.1362" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1363 }
%class.scoped_refptr.1363 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.922", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.503", %"class.blink::Member.503", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1369" }
%"class.blink::HeapHashMap.1369" = type { %"class.WTF::HashMap.1372" }
%"class.WTF::HashMap.1372" = type { %"class.WTF::HashTable.1373" }
%"class.WTF::HashTable.1373" = type <{ %"struct.WTF::KeyValuePair.1375"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1375" = type opaque
%"class.blink::Member.1376" = type { %"class.blink::MemberBase.1377" }
%"class.blink::MemberBase.1377" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1378" = type { %"class.WTF::HashSet.1381" }
%"class.WTF::HashSet.1381" = type { %"class.WTF::HashTable.1382" }
%"class.WTF::HashTable.1382" = type <{ %"class.blink::WeakMember.1384"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1384" = type opaque
%"class.blink::HeapHashSet.1385" = type { %"class.WTF::HashSet.1388" }
%"class.WTF::HashSet.1388" = type { %"class.WTF::HashTable.1389" }
%"class.WTF::HashTable.1389" = type <{ %"class.blink::WeakMember.1391"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1391" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.505", %"class.blink::HeapVector.957" }
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.1400" = type { %"class.blink::MemberBase.1401" }
%"class.blink::MemberBase.1401" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1402" = type { %"class.WTF::HashMap.1405" }
%"class.WTF::HashMap.1405" = type { %"class.WTF::HashTable.1406" }
%"class.WTF::HashTable.1406" = type <{ %"struct.WTF::KeyValuePair.1408"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1408" = type opaque
%"class.WTF::Vector.1409" = type { %"class.WTF::VectorBuffer.1410" }
%"class.WTF::VectorBuffer.1410" = type { %"class.WTF::VectorBufferBase.1411" }
%"class.WTF::VectorBufferBase.1411" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1414" = type { %"class.blink::MemberBase.1415" }
%"class.blink::MemberBase.1415" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1418" = type { %"class.blink::MemberBase.1419" }
%"class.blink::MemberBase.1419" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.514" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.511 }
%class.scoped_refptr.511 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.512", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.512" = type { %"class.base::RefCounted.513" }
%"class.base::RefCounted.513" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.518", %"class.blink::Member.520", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.518" = type { %"class.WTF::SingleThreadedBitField.519" }
%"class.WTF::SingleThreadedBitField.519" = type { i32 }
%"class.blink::Member.520" = type { %"class.blink::MemberBase.521" }
%"class.blink::MemberBase.521" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.523", %"class.WTF::AtomicString", %"class.WTF::Vector.525" }
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.525" = type { %"class.WTF::VectorBuffer.526" }
%"class.WTF::VectorBuffer.526" = type { %"class.WTF::VectorBufferBase.527", [32 x i8] }
%"class.WTF::VectorBufferBase.527" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1422" = type { %"class.WTF::Vector.1425" }
%"class.WTF::Vector.1425" = type { %"class.WTF::VectorBuffer.1426" }
%"class.WTF::VectorBuffer.1426" = type { %"class.WTF::VectorBufferBase.1427" }
%"class.WTF::VectorBufferBase.1427" = type { %"class.blink::Member.1428"*, i32, i32 }
%"class.blink::Member.1428" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1436" = type { %"class.WTF::HashSet.1439" }
%"class.WTF::HashSet.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"class.blink::WeakMember.1442"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1442" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1443", i32, [4 x i8] }>
%"class.WTF::Vector.1443" = type { %"class.WTF::VectorBuffer.1444" }
%"class.WTF::VectorBuffer.1444" = type { %"class.WTF::VectorBufferBase.1445" }
%"class.WTF::VectorBufferBase.1445" = type { %"struct.std::__1::pair.1446"*, i32, i32 }
%"struct.std::__1::pair.1446" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1451" = type { %"class.WTF::VectorBuffer.1452" }
%"class.WTF::VectorBuffer.1452" = type { %"class.WTF::VectorBufferBase.1453" }
%"class.WTF::VectorBufferBase.1453" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1456" = type { %"class.std::__1::__compressed_pair.1457" }
%"class.std::__1::__compressed_pair.1457" = type { %"struct.std::__1::__compressed_pair_elem.1458" }
%"struct.std::__1::__compressed_pair_elem.1458" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.939" = type { %"class.WTF::Vector.942" }
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"class.blink::Member.501"*, i32, i32 }
%"class.blink::HeapVector.1462" = type { %"class.WTF::Vector.1465" }
%"class.WTF::Vector.1465" = type { %"class.WTF::VectorBuffer.1466" }
%"class.WTF::VectorBuffer.1466" = type { %"class.WTF::VectorBufferBase.1467" }
%"class.WTF::VectorBufferBase.1467" = type { %"class.blink::Member.1468"*, i32, i32 }
%"class.blink::Member.1468" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.922" }
%"class.blink::Member.1470" = type { %"class.blink::MemberBase.1471" }
%"class.blink::MemberBase.1471" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1472" = type { %"class.blink::MemberBase.1473" }
%"class.blink::MemberBase.1473" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1474" = type { %"class.blink::MemberBase.1475" }
%"class.blink::MemberBase.1475" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1476" = type { %"class.blink::MemberBase.1477" }
%"class.blink::MemberBase.1477" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1478" = type { %"class.blink::MemberBase.1479" }
%"class.blink::MemberBase.1479" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1480" = type { %"class.WTF::HashTable.1481" }
%"class.WTF::HashTable.1481" = type <{ %"struct.WTF::KeyValuePair.1484"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1484" = type opaque
%"class.blink::Member.1485" = type { %"class.blink::MemberBase.1486" }
%"class.blink::MemberBase.1486" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1487" = type { %"class.blink::MemberBase.1488" }
%"class.blink::MemberBase.1488" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1489" = type { %"class.blink::MemberBase.1490" }
%"class.blink::MemberBase.1490" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1491" = type { %"class.blink::MemberBase.1492" }
%"class.blink::MemberBase.1492" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1368", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1366, %"class.base::WeakPtrFactory.1367" }
%class.scoped_refptr.1366 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.1367" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1368" = type { %"class.blink::MemberBase.923" }
%"class.blink::HeapHashSet.1493" = type { %"class.WTF::HashSet.1496" }
%"class.WTF::HashSet.1496" = type { %"class.WTF::HashTable.1497" }
%"class.WTF::HashTable.1497" = type <{ %"class.blink::Member.1499"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1499" = type opaque
%"class.blink::Member.1500" = type { %"class.blink::MemberBase.1501" }
%"class.blink::MemberBase.1501" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1502" = type { %"class.blink::MemberBase.1503" }
%"class.blink::MemberBase.1503" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1504" = type { %"class.blink::MemberBase.1505" }
%"class.blink::MemberBase.1505" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1506" = type { %"class.blink::MemberBase.1507" }
%"class.blink::MemberBase.1507" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1508" = type { %"class.blink::MemberBase.1509" }
%"class.blink::MemberBase.1509" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1510" = type { %"class.std::__1::__compressed_pair.1511" }
%"class.std::__1::__compressed_pair.1511" = type { %"struct.std::__1::__compressed_pair_elem.1512" }
%"struct.std::__1::__compressed_pair_elem.1512" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1516" = type { %"class.std::__1::__compressed_pair.1517" }
%"class.std::__1::__compressed_pair.1517" = type { %"struct.std::__1::__compressed_pair_elem.1518" }
%"struct.std::__1::__compressed_pair_elem.1518" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1522" = type { %"class.blink::MemberBase.1523" }
%"class.blink::MemberBase.1523" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1524" = type { %"class.blink::MemberBase.1525" }
%"class.blink::MemberBase.1525" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1526" = type { %"class.blink::MemberBase.1527" }
%"class.blink::MemberBase.1527" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1528" = type { %"class.blink::MemberBase.1529" }
%"class.blink::MemberBase.1529" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.767" = type { %"class.WTF::VectorBuffer.768" }
%"class.WTF::VectorBuffer.768" = type { %"class.WTF::VectorBufferBase.769" }
%"class.WTF::VectorBufferBase.769" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1530" = type { %"class.WTF::HashMap.1533" }
%"class.WTF::HashMap.1533" = type { %"class.WTF::HashTable.1534" }
%"class.WTF::HashTable.1534" = type <{ %"struct.WTF::KeyValuePair.1536"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1536" = type opaque
%"class.blink::Member.1537" = type { %"class.blink::MemberBase.1538" }
%"class.blink::MemberBase.1538" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1539" = type { %"class.std::__1::__compressed_pair.1540" }
%"class.std::__1::__compressed_pair.1540" = type { %"struct.std::__1::__compressed_pair_elem.1541" }
%"struct.std::__1::__compressed_pair_elem.1541" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1545" = type { %"class.blink::MemberBase.1546" }
%"class.blink::MemberBase.1546" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1547" = type { %"class.blink::MemberBase.1548" }
%"class.blink::MemberBase.1548" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1549" = type { %"class.WTF::HashMap.1552" }
%"class.WTF::HashMap.1552" = type { %"class.WTF::HashTable.1553" }
%"class.WTF::HashTable.1553" = type <{ %"struct.WTF::KeyValuePair.1555"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1555" = type opaque
%"class.blink::HeapObserverSet.1556" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1557" }
%"class.blink::HeapHashSet.1557" = type { %"class.WTF::HashSet.1560" }
%"class.WTF::HashSet.1560" = type { %"class.WTF::HashTable.1561" }
%"class.WTF::HashTable.1561" = type <{ %"class.blink::WeakMember.1563"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1563" = type opaque
%"class.blink::Member.1564" = type { %"class.blink::MemberBase.1565" }
%"class.blink::MemberBase.1565" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1566" = type { %"class.blink::MemberBase.1567" }
%"class.blink::MemberBase.1567" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.922", %"class.blink::HeapHashSet.1573", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1580", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1573" = type { %"class.WTF::HashSet.1576" }
%"class.WTF::HashSet.1576" = type { %"class.WTF::HashTable.1577" }
%"class.WTF::HashTable.1577" = type <{ %"class.blink::Member.1579"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1579" = type opaque
%"class.blink::HeapTaskRunnerTimer.1580" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1581", { i64, i64 } }
%"class.blink::WeakMember.1581" = type { %"class.blink::MemberBase.1567" }
%"class.blink::Member.1569" = type { %"class.blink::MemberBase.1570" }
%"class.blink::MemberBase.1570" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.924" = type { %"class.blink::MemberBase.925" }
%"class.blink::MemberBase.925" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.928" }
%"class.blink::HeapHashMap.928" = type { %"class.WTF::HashMap.931" }
%"class.WTF::HashMap.931" = type { %"class.WTF::HashTable.932" }
%"class.WTF::HashTable.932" = type <{ %"struct.WTF::KeyValuePair.934"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.934" = type { %"class.WTF::AtomicString", %"class.blink::Member.935" }
%"class.blink::Member.935" = type { %"class.blink::MemberBase.936" }
%"class.blink::MemberBase.936" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.501", i32, %"class.blink::HeapVector.939" }
%"class.blink::Member.946" = type { %"class.blink::MemberBase.947" }
%"class.blink::MemberBase.947" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.948" = type { %"class.blink::MemberBase.949" }
%"class.blink::MemberBase.949" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.950" = type { %"class.blink::MemberBase.951" }
%"class.blink::MemberBase.951" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.952" }
%"class.blink::Member.952" = type { %"class.blink::MemberBase.953" }
%"class.blink::MemberBase.953" = type { %"class.blink::HeapHashMap.954"* }
%"class.blink::HeapHashMap.954" = type opaque
%"class.blink::Member.955" = type { %"class.blink::MemberBase.956" }
%"class.blink::MemberBase.956" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.957" = type { %"class.WTF::Vector.960" }
%"class.WTF::Vector.960" = type { %"class.WTF::VectorBuffer.961" }
%"class.WTF::VectorBuffer.961" = type { %"class.WTF::VectorBufferBase.962" }
%"class.WTF::VectorBufferBase.962" = type { %"class.blink::Member.963"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::Member.1918" = type { %"class.blink::MemberBase.1919" }
%"class.blink::MemberBase.1919" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.1920" = type { %"class.blink::MemberBase.1921" }
%"class.blink::MemberBase.1921" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.1922" = type { %"class.blink::MemberBase.1923" }
%"class.blink::MemberBase.1923" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type { %"class.blink::Member.415", %"class.blink::Member.8", i8, i8, i8, i8, [4 x i8], %"class.blink::HeapHashSet.1926" }
%"class.blink::HeapHashSet.1926" = type { %"class.WTF::HashSet.1929" }
%"class.WTF::HashSet.1929" = type { %"class.WTF::HashTable.1930" }
%"class.WTF::HashTable.1930" = type <{ %"class.blink::WeakMember.1932"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1932" = type opaque
%"class.blink::Member.1933" = type { %"class.blink::MemberBase.1934" }
%"class.blink::MemberBase.1934" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.1935" = type { %"class.blink::MemberBase.1936" }
%"class.blink::MemberBase.1936" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.1937" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1938" }
%"class.blink::HeapHashSet.1938" = type { %"class.WTF::HashSet.1941" }
%"class.WTF::HashSet.1941" = type { %"class.WTF::HashTable.1942" }
%"class.WTF::HashTable.1942" = type <{ %"class.blink::WeakMember.1944"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1944" = type opaque
%"class.blink::Member.1945" = type { %"class.blink::MemberBase.1946" }
%"class.blink::MemberBase.1946" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.1947" = type { %"class.blink::MemberBase.1948" }
%"class.blink::MemberBase.1948" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.1949" = type { %"class.blink::MemberBase.1950" }
%"class.blink::MemberBase.1950" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.1951" = type { %"class.blink::MemberBase.1952" }
%"class.blink::MemberBase.1952" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.1953" = type { %"class.blink::MemberBase.1954" }
%"class.blink::MemberBase.1954" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.1955" = type { %"class.blink::MemberBase.1956" }
%"class.blink::MemberBase.1956" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.1957" = type { %"class.blink::MemberBase.1958" }
%"class.blink::MemberBase.1958" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.1959" = type { %"class.blink::MemberBase.1960" }
%"class.blink::MemberBase.1960" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.1961" = type { %"class.blink::MemberBase.1962" }
%"class.blink::MemberBase.1962" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.1963" = type { %"class.blink::MemberBase.1964" }
%"class.blink::MemberBase.1964" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.1965" = type { %"class.blink::MemberBase.1966" }
%"class.blink::MemberBase.1966" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.1967" }
%"class.WTF::Deque.1967" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1970" }
%"class.WTF::VectorBuffer.1970" = type { %"class.WTF::VectorBufferBase.1971" }
%"class.WTF::VectorBufferBase.1971" = type { %"class.std::__1::unique_ptr.1972"*, i32, i32 }
%"class.std::__1::unique_ptr.1972" = type { %"class.std::__1::__compressed_pair.1973" }
%"class.std::__1::__compressed_pair.1973" = type { %"struct.std::__1::__compressed_pair_elem.1974" }
%"struct.std::__1::__compressed_pair_elem.1974" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.1978", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.1978" = type { %"class.std::__1::__bitset.1979" }
%"class.std::__1::__bitset.1979" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.1980" }
%"class.absl::optional.1980" = type { %"class.absl::optional_internal::optional_data.1981" }
%"class.absl::optional_internal::optional_data.1981" = type { %"class.absl::optional_internal::optional_data_base.1982" }
%"class.absl::optional_internal::optional_data_base.1982" = type { %"class.absl::optional_internal::optional_data_dtor_base.1983" }
%"class.absl::optional_internal::optional_data_dtor_base.1983" = type { i8, %union.anon.1984 }
%union.anon.1984 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.1985", i64, %"class.absl::optional.354", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.1985" = type { %"class.absl::optional_internal::optional_data.1986" }
%"class.absl::optional_internal::optional_data.1986" = type { %"class.absl::optional_internal::optional_data_base.1987" }
%"class.absl::optional_internal::optional_data_base.1987" = type { %"class.absl::optional_internal::optional_data_dtor_base.1988" }
%"class.absl::optional_internal::optional_data_dtor_base.1988" = type { i8, %union.anon.1989 }
%union.anon.1989 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.1990" = type { %"class.std::__1::unique_ptr.1991" }
%"class.std::__1::unique_ptr.1991" = type { %"class.std::__1::__compressed_pair.1992" }
%"class.std::__1::__compressed_pair.1992" = type { %"struct.std::__1::__compressed_pair_elem.1993" }
%"struct.std::__1::__compressed_pair_elem.1993" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.1997" = type { %"class.WTF::HashSet.2000" }
%"class.WTF::HashSet.2000" = type { %"class.WTF::HashTable.2001" }
%"class.WTF::HashTable.2001" = type <{ %"class.blink::WeakMember.2003"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2003" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.2004" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.2004" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.309 }
%class.scoped_refptr.309 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::unique_ptr.2005" = type { %"class.std::__1::__compressed_pair.2006" }
%"class.std::__1::__compressed_pair.2006" = type { %"struct.std::__1::__compressed_pair_elem.2007" }
%"struct.std::__1::__compressed_pair_elem.2007" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2011" = type { %"class.std::__1::__compressed_pair.2012" }
%"class.std::__1::__compressed_pair.2012" = type { %"struct.std::__1::__compressed_pair_elem.2013" }
%"struct.std::__1::__compressed_pair_elem.2013" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.222" = type { %"class.blink::MemberBase.223" }
%"class.blink::MemberBase.223" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type { i32 (...)** }
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.423" = type { %"class.blink::MemberBase.424" }
%"class.blink::MemberBase.424" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.458", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.472", %"class.blink::FrameLoader", %"class.blink::Member.499", %"class.blink::Member.501", %"class.blink::Member.530", %"class.blink::Member.532", %"class.blink::Member.534", %"class.blink::Member.536", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.540", %class.scoped_refptr.760, %"class.blink::Member.761", %"class.blink::Member.763", %"class.blink::Member.779", %"class.blink::Member.781", %"class.blink::Member.783", %"class.blink::Member.785", %"class.blink::Member.787", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.791", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.797", %"class.std::__1::unique_ptr.798", %"class.absl::optional.440", i32, [4 x i8], %"class.std::__1::unique_ptr.804", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.812", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.817", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.822", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.825", %"class.blink::Member.827", %"class.blink::Member.829", %"class.blink::Member.831", %"class.mojo::StructPtr", %"class.blink::Member.841", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.843", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.451" }
%"class.blink::HeapHashMap.451" = type { %"class.WTF::HashMap.454" }
%"class.WTF::HashMap.454" = type { %"class.WTF::HashTable.455" }
%"class.WTF::HashTable.455" = type <{ %"struct.WTF::KeyValuePair.457"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.457" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.470" }
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.352", %"class.base::RepeatingCallback.2231", i64, %"class.std::__1::map.2232", i8*, i64, %"class.base::WeakPtrFactory.2241" }
%"class.base::RepeatingCallback.2231" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2232" = type { %"class.std::__1::__tree.2233" }
%"class.std::__1::__tree.2233" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2234", %"class.std::__1::__compressed_pair.2238" }
%"class.std::__1::__compressed_pair.2234" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"class.std::__1::__compressed_pair.2238" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"class.base::WeakPtrFactory.2241" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.472" = type { %"class.WTF::HashSet.475" }
%"class.WTF::HashSet.475" = type { %"class.WTF::HashTable.476" }
%"class.WTF::HashTable.476" = type <{ %"class.blink::WeakMember.478"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.478" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.423", %"class.blink::Member.479", %"class.blink::Member.481", %"class.std::__1::unique_ptr.483", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.495" }
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.481" = type { %"class.blink::MemberBase.482" }
%"class.blink::MemberBase.482" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.495" = type { %"class.WTF::HashTable.496" }
%"class.WTF::HashTable.496" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1595", %"class.blink::Member.423", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1600", i8, i32, %"class.blink::Color", %"class.absl::optional.1602", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1607", %"class.blink::Member.1609", %"class.blink::Member.1609", %"class.std::__1::unique_ptr.1612", i32, [4 x i8], %"class.WTF::HashSet.1615", %"class.blink::Member.1622", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1624", %"class.blink::HeapHashSet.1631", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1639", i8, %"class.blink::Member.1645", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1657", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1671", i8, %"class.std::__1::unique_ptr.1677", %"class.std::__1::unique_ptr.1794", %"class.WTF::Vector.1800", i32, %class.scoped_refptr.1805, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1806", %"class.blink::Member.1808", %"class.blink::Member.1810", %"class.blink::HeapHashSet.1812", %"class.blink::HeapHashSet.1819", %"class.std::__1::unique_ptr.1826", %"class.std::__1::unique_ptr.1833", %"class.WTF::Vector.1008" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1595" = type { %"class.WTF::HashTable.1596" }
%"class.WTF::HashTable.1596" = type <{ %class.scoped_refptr.1599*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1599 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1600" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1601", { i64, i64 } }
%"class.blink::WeakMember.1601" = type { %"class.blink::MemberBase.500" }
%"class.absl::optional.1602" = type { %"class.absl::optional_internal::optional_data.1603" }
%"class.absl::optional_internal::optional_data.1603" = type { %"class.absl::optional_internal::optional_data_base.1604" }
%"class.absl::optional_internal::optional_data_base.1604" = type { %"class.absl::optional_internal::optional_data_dtor_base.1605" }
%"class.absl::optional_internal::optional_data_dtor_base.1605" = type { i8, %union.anon.1606 }
%union.anon.1606 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1607" = type { %"class.blink::MemberBase.1608" }
%"class.blink::MemberBase.1608" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1609" = type { %"class.blink::MemberBase.1610" }
%"class.blink::MemberBase.1610" = type { %"class.blink::HeapHashSet.1611"* }
%"class.blink::HeapHashSet.1611" = type opaque
%"class.std::__1::unique_ptr.1612" = type { %"class.std::__1::__compressed_pair.1613" }
%"class.std::__1::__compressed_pair.1613" = type { %"struct.std::__1::__compressed_pair_elem.1614" }
%"struct.std::__1::__compressed_pair_elem.1614" = type { %"class.WTF::HashSet.1615"* }
%"class.WTF::HashSet.1615" = type { %"class.WTF::HashTable.1616" }
%"class.WTF::HashTable.1616" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1622" = type { %"class.blink::MemberBase.1623" }
%"class.blink::MemberBase.1623" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1624" = type { %"class.WTF::HashSet.1627" }
%"class.WTF::HashSet.1627" = type { %"class.WTF::HashTable.1628" }
%"class.WTF::HashTable.1628" = type <{ %"class.blink::Member.1630"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1630" = type opaque
%"class.blink::HeapHashSet.1631" = type { %"class.WTF::HashSet.1634" }
%"class.WTF::HashSet.1634" = type { %"class.WTF::HashTable.1635" }
%"class.WTF::HashTable.1635" = type <{ %"class.blink::Member.1637"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1637" = type { %"class.blink::MemberBase.1638" }
%"class.blink::MemberBase.1638" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1867", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1878", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.501" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1867" = type { %"class.blink::MemberBase.1868" }
%"class.blink::MemberBase.1868" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1869", %"class.blink::Member.1870", %"class.blink::Member.1872", %"class.blink::Member.1874", %"class.blink::Member.1876", %"class.WTF::Vector.1008", i16, %class.scoped_refptr.1366 }
%"class.blink::ThreadState::PrefinalizerRegistration.1869" = type { i8 }
%"class.blink::Member.1870" = type { %"class.blink::MemberBase.1871" }
%"class.blink::MemberBase.1871" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1872" = type { %"class.blink::MemberBase.1873" }
%"class.blink::MemberBase.1873" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1874" = type { %"class.blink::MemberBase.1875" }
%"class.blink::MemberBase.1875" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1876" = type { %"class.blink::MemberBase.1877" }
%"class.blink::MemberBase.1877" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1878" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1879", { i64, i64 } }
%"class.blink::WeakMember.1879" = type { %"class.blink::MemberBase.1638" }
%"class.std::__1::unique_ptr.1639" = type { %"class.std::__1::__compressed_pair.1640" }
%"class.std::__1::__compressed_pair.1640" = type { %"struct.std::__1::__compressed_pair_elem.1641" }
%"struct.std::__1::__compressed_pair_elem.1641" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1645" = type { %"class.blink::MemberBase.1646" }
%"class.blink::MemberBase.1646" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1649", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1649" = type { %"class.WTF::HashTable.1650" }
%"class.WTF::HashTable.1650" = type <{ %"struct.WTF::KeyValuePair.1652"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1652" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1653", i32, i32 }
%"class.WTF::Vector.1653" = type { %"class.WTF::VectorBuffer.1654" }
%"class.WTF::VectorBuffer.1654" = type { %"class.WTF::VectorBufferBase.1655" }
%"class.WTF::VectorBufferBase.1655" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1657" = type { %"class.WTF::LinkedHashSet.1660" }
%"class.WTF::LinkedHashSet.1660" = type { %"class.WTF::HashMap.1661", %"class.WTF::VectorBackedLinkedList.1665" }
%"class.WTF::HashMap.1661" = type { %"class.WTF::HashTable.1662" }
%"class.WTF::HashTable.1662" = type <{ %"struct.WTF::KeyValuePair.1664"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1664" = type opaque
%"class.WTF::VectorBackedLinkedList.1665" = type { %"class.WTF::Vector.1666", i32, i32 }
%"class.WTF::Vector.1666" = type { %"class.WTF::VectorBuffer.1667" }
%"class.WTF::VectorBuffer.1667" = type { %"class.WTF::VectorBufferBase.1668" }
%"class.WTF::VectorBufferBase.1668" = type { %"class.WTF::VectorBackedLinkedListNode.1669"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1669" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1671" = type { %"class.std::__1::__compressed_pair.1672" }
%"class.std::__1::__compressed_pair.1672" = type { %"struct.std::__1::__compressed_pair_elem.1673" }
%"struct.std::__1::__compressed_pair_elem.1673" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1677" = type { %"class.std::__1::__compressed_pair.1678" }
%"class.std::__1::__compressed_pair.1678" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"struct.std::__1::__compressed_pair_elem.1679" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1680, %class.scoped_refptr.1680, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1771", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1776", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1680 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1681", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1688" }
%"class.WTF::RefCounted.1681" = type { %"class.base::RefCounted.1682" }
%"class.base::RefCounted.1682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1683", i32, [4 x i8] }>
%"class.WTF::Vector.1683" = type { %"class.WTF::VectorBuffer.1684" }
%"class.WTF::VectorBuffer.1684" = type { %"class.WTF::VectorBufferBase.1685" }
%"class.WTF::VectorBufferBase.1685" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1688" = type { %"class.WTF::VectorBuffer.1689" }
%"class.WTF::VectorBuffer.1689" = type { %"class.WTF::VectorBufferBase.1690" }
%"class.WTF::VectorBufferBase.1690" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1694", %"class.std::__1::unique_ptr.1743", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1691, %class.scoped_refptr.1692, %class.scoped_refptr.1693 }
%class.scoped_refptr.1691 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1707", i8, i8, %class.scoped_refptr.1691, i32, i32 }
%"class.WTF::RefCounted.1707" = type { %"class.base::RefCounted.1708" }
%"class.base::RefCounted.1708" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1692 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1862" }
%"class.blink::PaintPropertyNode.1862" = type { %"class.WTF::RefCounted.1863", i8, i8, %class.scoped_refptr.1692, i32, i32 }
%"class.WTF::RefCounted.1863" = type { %"class.base::RefCounted.1864" }
%"class.base::RefCounted.1864" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1693 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1859" }
%"class.blink::PaintPropertyNode.1859" = type { %"class.WTF::RefCounted.1860", i8, i8, %class.scoped_refptr.1693, i32, i32 }
%"class.WTF::RefCounted.1860" = type { %"class.base::RefCounted.1861" }
%"class.base::RefCounted.1861" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1694" = type { %"class.std::__1::__compressed_pair.1695" }
%"class.std::__1::__compressed_pair.1695" = type { %"struct.std::__1::__compressed_pair_elem.1696" }
%"struct.std::__1::__compressed_pair_elem.1696" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1697", %"class.WTF::Vector.1702", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1697" = type { %"class.WTF::VectorBuffer.1698" }
%"class.WTF::VectorBuffer.1698" = type { %"class.WTF::VectorBufferBase.1699" }
%"class.WTF::VectorBufferBase.1699" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1702" = type { %"class.WTF::VectorBuffer.1703" }
%"class.WTF::VectorBuffer.1703" = type { %"class.WTF::VectorBufferBase.1704" }
%"class.WTF::VectorBufferBase.1704" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1722" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1715, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1716", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1709" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1709" = type { %"class.std::__1::__compressed_pair.1710" }
%"class.std::__1::__compressed_pair.1710" = type { %"struct.std::__1::__compressed_pair_elem.1711" }
%"struct.std::__1::__compressed_pair_elem.1711" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1715 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1844", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1844" = type { %"class.WTF::RefCounted.1845", i8, i8, %class.scoped_refptr.1715, i32, i32 }
%"class.WTF::RefCounted.1845" = type { %"class.base::RefCounted.1846" }
%"class.base::RefCounted.1846" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1847" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1847" = type { %"class.absl::optional_internal::optional_data.1848" }
%"class.absl::optional_internal::optional_data.1848" = type { %"class.absl::optional_internal::optional_data_base.1849" }
%"class.absl::optional_internal::optional_data_base.1849" = type { %"class.absl::optional_internal::optional_data_dtor_base.1850" }
%"class.absl::optional_internal::optional_data_dtor_base.1850" = type { i8, %union.anon.1851 }
%union.anon.1851 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1852", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1852" = type { %"class.std::__1::__vector_base.1853" }
%"class.std::__1::__vector_base.1853" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1854" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1854" = type { %"struct.std::__1::__compressed_pair_elem.1855" }
%"struct.std::__1::__compressed_pair_elem.1855" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1716" = type { %"class.std::__1::__compressed_pair.1717" }
%"class.std::__1::__compressed_pair.1717" = type { %"struct.std::__1::__compressed_pair_elem.1718" }
%"struct.std::__1::__compressed_pair_elem.1718" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1722" = type { %"class.std::__1::__compressed_pair.1723" }
%"class.std::__1::__compressed_pair.1723" = type { %"struct.std::__1::__compressed_pair_elem.1724" }
%"struct.std::__1::__compressed_pair_elem.1724" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1725", %"class.std::__1::unique_ptr.1731", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1725" = type { %"class.std::__1::__compressed_pair.1726" }
%"class.std::__1::__compressed_pair.1726" = type { %"struct.std::__1::__compressed_pair_elem.1727" }
%"struct.std::__1::__compressed_pair_elem.1727" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1731" = type { %"class.std::__1::__compressed_pair.1732" }
%"class.std::__1::__compressed_pair.1732" = type { %"struct.std::__1::__compressed_pair_elem.1733" }
%"struct.std::__1::__compressed_pair_elem.1733" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1743" = type { %"class.std::__1::__compressed_pair.1744" }
%"class.std::__1::__compressed_pair.1744" = type { %"struct.std::__1::__compressed_pair_elem.1745" }
%"struct.std::__1::__compressed_pair_elem.1745" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1746", %"class.absl::optional.1746" }
%"class.absl::optional.1746" = type { %"class.absl::optional_internal::optional_data.1747" }
%"class.absl::optional_internal::optional_data.1747" = type { %"class.absl::optional_internal::optional_data_base.1748" }
%"class.absl::optional_internal::optional_data_base.1748" = type { %"class.absl::optional_internal::optional_data_dtor_base.1749" }
%"class.absl::optional_internal::optional_data_dtor_base.1749" = type { i8, [3 x i8], %union.anon.1750 }
%union.anon.1750 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1688"*, %"class.absl::optional.1756", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1756" = type { %"class.absl::optional_internal::optional_data.1757" }
%"class.absl::optional_internal::optional_data.1757" = type { %"class.absl::optional_internal::optional_data_base.1758" }
%"class.absl::optional_internal::optional_data_base.1758" = type { %"class.absl::optional_internal::optional_data_dtor_base.1759" }
%"class.absl::optional_internal::optional_data_dtor_base.1759" = type { i8, %union.anon.1760 }
%union.anon.1760 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1761", %"class.WTF::Vector.1766" }
%"class.WTF::Vector.1761" = type { %"class.WTF::VectorBuffer.1762" }
%"class.WTF::VectorBuffer.1762" = type { %"class.WTF::VectorBufferBase.1763", [128 x i8] }
%"class.WTF::VectorBufferBase.1763" = type { i32*, i32, i32 }
%"class.WTF::Vector.1766" = type { %"class.WTF::VectorBuffer.1767" }
%"class.WTF::VectorBuffer.1767" = type { %"class.WTF::VectorBufferBase.1768", [128 x i8] }
%"class.WTF::VectorBufferBase.1768" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1771" = type { %"class.WTF::VectorBuffer.1772" }
%"class.WTF::VectorBuffer.1772" = type { %"class.WTF::VectorBufferBase.1773" }
%"class.WTF::VectorBufferBase.1773" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1776" = type { %"class.WTF::HashTable.1777" }
%"class.WTF::HashTable.1777" = type <{ %"struct.WTF::KeyValuePair.1780"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1780" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1781", %"class.WTF::Vector.1786" }
%"class.WTF::HashMap.1781" = type { %"class.WTF::HashTable.1782" }
%"class.WTF::HashTable.1782" = type <{ %"struct.WTF::KeyValuePair.1785"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1785" = type opaque
%"class.WTF::Vector.1786" = type { %"class.WTF::VectorBuffer.1787" }
%"class.WTF::VectorBuffer.1787" = type { %"class.WTF::VectorBufferBase.1788" }
%"class.WTF::VectorBufferBase.1788" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1794" = type { %"class.std::__1::__compressed_pair.1795" }
%"class.std::__1::__compressed_pair.1795" = type { %"struct.std::__1::__compressed_pair_elem.1796" }
%"struct.std::__1::__compressed_pair_elem.1796" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1800" = type { %"class.WTF::VectorBuffer.1801" }
%"class.WTF::VectorBuffer.1801" = type { %"class.WTF::VectorBufferBase.1802" }
%"class.WTF::VectorBufferBase.1802" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1805 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1806" = type { %"class.blink::MemberBase.1807" }
%"class.blink::MemberBase.1807" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1808" = type { %"class.blink::MemberBase.1809" }
%"class.blink::MemberBase.1809" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1810" = type { %"class.blink::MemberBase.1811" }
%"class.blink::MemberBase.1811" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1812" = type { %"class.WTF::HashSet.1815" }
%"class.WTF::HashSet.1815" = type { %"class.WTF::HashTable.1816" }
%"class.WTF::HashTable.1816" = type <{ %"class.blink::WeakMember.1818"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1818" = type opaque
%"class.blink::HeapHashSet.1819" = type { %"class.WTF::HashSet.1822" }
%"class.WTF::HashSet.1822" = type { %"class.WTF::HashTable.1823" }
%"class.WTF::HashTable.1823" = type <{ %"class.blink::WeakMember.1825"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1825" = type opaque
%"class.std::__1::unique_ptr.1826" = type { %"class.std::__1::__compressed_pair.1827" }
%"class.std::__1::__compressed_pair.1827" = type { %"struct.std::__1::__compressed_pair_elem.1828" }
%"struct.std::__1::__compressed_pair_elem.1828" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1829" }
%"class.base::time_internal::TimeBase.1829" = type { i64 }
%"class.std::__1::unique_ptr.1833" = type { %"class.std::__1::__compressed_pair.1834" }
%"class.std::__1::__compressed_pair.1834" = type { %"struct.std::__1::__compressed_pair_elem.1835" }
%"struct.std::__1::__compressed_pair_elem.1835" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1836", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1836" = type { %"class.absl::optional_internal::optional_data.1837" }
%"class.absl::optional_internal::optional_data.1837" = type { %"class.absl::optional_internal::optional_data_base.1838" }
%"class.absl::optional_internal::optional_data_base.1838" = type { %"class.absl::optional_internal::optional_data_dtor_base.1839" }
%"class.absl::optional_internal::optional_data_dtor_base.1839" = type { i8, %union.anon.1840 }
%union.anon.1840 = type { %"class.base::Time" }
%"class.blink::Member.530" = type { %"class.blink::MemberBase.531" }
%"class.blink::MemberBase.531" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.532" = type { %"class.blink::MemberBase.533" }
%"class.blink::MemberBase.533" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.534" = type { %"class.blink::MemberBase.535" }
%"class.blink::MemberBase.535" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type { %"class.blink::Member.423" }
%"class.blink::Member.540" = type { %"class.blink::MemberBase.541" }
%"class.blink::MemberBase.541" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.551", %"class.blink::HeapListHashSet.562", %"class.blink::HeapListHashSet.573", %"class.blink::HeapListHashSet.584", %"class.blink::HeapListHashSet.595", %"class.blink::HeapListHashSet.606", %"class.blink::HeapListHashSet.617", %"class.blink::HeapListHashSet.628", %"class.blink::HeapListHashSet.639", %"class.blink::HeapListHashSet.650", %"class.blink::HeapListHashSet.661", %"class.blink::HeapListHashSet.672", %"class.blink::HeapListHashSet.683", %"class.blink::HeapListHashSet.694", %"class.blink::HeapListHashSet.705", %"class.blink::HeapListHashSet.716", %"class.blink::HeapListHashSet.727", %"class.blink::HeapListHashSet.738", %"class.blink::HeapListHashSet.749" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.547", %"class.blink::Member.549", %"class.blink::Member.549", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.547" = type <{ %"class.blink::Member.549"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.763", %"class.blink::Member.549", %"class.blink::Member.549" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.551" = type { %"class.WTF::ListHashSet.base.561", [7 x i8] }
%"class.WTF::ListHashSet.base.561" = type <{ %"class.WTF::HashTable.556", %"class.blink::Member.558", %"class.blink::Member.558", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.556" = type <{ %"class.blink::Member.558"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.558" = type { %"class.blink::MemberBase.559" }
%"class.blink::MemberBase.559" = type { %"class.blink::HeapListHashSetNode.560"* }
%"class.blink::HeapListHashSetNode.560" = type { %"class.blink::Member.916", %"class.blink::Member.558", %"class.blink::Member.558" }
%"class.blink::Member.916" = type { %"class.blink::MemberBase.917" }
%"class.blink::MemberBase.917" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.562" = type { %"class.WTF::ListHashSet.base.572", [7 x i8] }
%"class.WTF::ListHashSet.base.572" = type <{ %"class.WTF::HashTable.567", %"class.blink::Member.569", %"class.blink::Member.569", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.567" = type <{ %"class.blink::Member.569"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.569" = type { %"class.blink::MemberBase.570" }
%"class.blink::MemberBase.570" = type { %"class.blink::HeapListHashSetNode.571"* }
%"class.blink::HeapListHashSetNode.571" = type { %"class.blink::Member.912", %"class.blink::Member.569", %"class.blink::Member.569" }
%"class.blink::Member.912" = type { %"class.blink::MemberBase.913" }
%"class.blink::MemberBase.913" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.573" = type { %"class.WTF::ListHashSet.base.583", [7 x i8] }
%"class.WTF::ListHashSet.base.583" = type <{ %"class.WTF::HashTable.578", %"class.blink::Member.580", %"class.blink::Member.580", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.578" = type <{ %"class.blink::Member.580"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.580" = type { %"class.blink::MemberBase.581" }
%"class.blink::MemberBase.581" = type { %"class.blink::HeapListHashSetNode.582"* }
%"class.blink::HeapListHashSetNode.582" = type { %"class.blink::Member.908", %"class.blink::Member.580", %"class.blink::Member.580" }
%"class.blink::Member.908" = type { %"class.blink::MemberBase.909" }
%"class.blink::MemberBase.909" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.584" = type { %"class.WTF::ListHashSet.base.594", [7 x i8] }
%"class.WTF::ListHashSet.base.594" = type <{ %"class.WTF::HashTable.589", %"class.blink::Member.591", %"class.blink::Member.591", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.589" = type <{ %"class.blink::Member.591"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.591" = type { %"class.blink::MemberBase.592" }
%"class.blink::MemberBase.592" = type { %"class.blink::HeapListHashSetNode.593"* }
%"class.blink::HeapListHashSetNode.593" = type { %"class.blink::Member.904", %"class.blink::Member.591", %"class.blink::Member.591" }
%"class.blink::Member.904" = type { %"class.blink::MemberBase.905" }
%"class.blink::MemberBase.905" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.595" = type { %"class.WTF::ListHashSet.base.605", [7 x i8] }
%"class.WTF::ListHashSet.base.605" = type <{ %"class.WTF::HashTable.600", %"class.blink::Member.602", %"class.blink::Member.602", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.600" = type <{ %"class.blink::Member.602"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.602" = type { %"class.blink::MemberBase.603" }
%"class.blink::MemberBase.603" = type { %"class.blink::HeapListHashSetNode.604"* }
%"class.blink::HeapListHashSetNode.604" = type { %"class.blink::Member.900", %"class.blink::Member.602", %"class.blink::Member.602" }
%"class.blink::Member.900" = type { %"class.blink::MemberBase.901" }
%"class.blink::MemberBase.901" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.606" = type { %"class.WTF::ListHashSet.base.616", [7 x i8] }
%"class.WTF::ListHashSet.base.616" = type <{ %"class.WTF::HashTable.611", %"class.blink::Member.613", %"class.blink::Member.613", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.611" = type <{ %"class.blink::Member.613"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.613" = type { %"class.blink::MemberBase.614" }
%"class.blink::MemberBase.614" = type { %"class.blink::HeapListHashSetNode.615"* }
%"class.blink::HeapListHashSetNode.615" = type { %"class.blink::Member.896", %"class.blink::Member.613", %"class.blink::Member.613" }
%"class.blink::Member.896" = type { %"class.blink::MemberBase.897" }
%"class.blink::MemberBase.897" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.617" = type { %"class.WTF::ListHashSet.base.627", [7 x i8] }
%"class.WTF::ListHashSet.base.627" = type <{ %"class.WTF::HashTable.622", %"class.blink::Member.624", %"class.blink::Member.624", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.622" = type <{ %"class.blink::Member.624"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.624" = type { %"class.blink::MemberBase.625" }
%"class.blink::MemberBase.625" = type { %"class.blink::HeapListHashSetNode.626"* }
%"class.blink::HeapListHashSetNode.626" = type { %"class.blink::Member.892", %"class.blink::Member.624", %"class.blink::Member.624" }
%"class.blink::Member.892" = type { %"class.blink::MemberBase.893" }
%"class.blink::MemberBase.893" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.628" = type { %"class.WTF::ListHashSet.base.638", [7 x i8] }
%"class.WTF::ListHashSet.base.638" = type <{ %"class.WTF::HashTable.633", %"class.blink::Member.635", %"class.blink::Member.635", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.633" = type <{ %"class.blink::Member.635"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.635" = type { %"class.blink::MemberBase.636" }
%"class.blink::MemberBase.636" = type { %"class.blink::HeapListHashSetNode.637"* }
%"class.blink::HeapListHashSetNode.637" = type { %"class.blink::Member.888", %"class.blink::Member.635", %"class.blink::Member.635" }
%"class.blink::Member.888" = type { %"class.blink::MemberBase.889" }
%"class.blink::MemberBase.889" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.639" = type { %"class.WTF::ListHashSet.base.649", [7 x i8] }
%"class.WTF::ListHashSet.base.649" = type <{ %"class.WTF::HashTable.644", %"class.blink::Member.646", %"class.blink::Member.646", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.644" = type <{ %"class.blink::Member.646"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.646" = type { %"class.blink::MemberBase.647" }
%"class.blink::MemberBase.647" = type { %"class.blink::HeapListHashSetNode.648"* }
%"class.blink::HeapListHashSetNode.648" = type { %"class.blink::Member.884", %"class.blink::Member.646", %"class.blink::Member.646" }
%"class.blink::Member.884" = type { %"class.blink::MemberBase.885" }
%"class.blink::MemberBase.885" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.650" = type { %"class.WTF::ListHashSet.base.660", [7 x i8] }
%"class.WTF::ListHashSet.base.660" = type <{ %"class.WTF::HashTable.655", %"class.blink::Member.657", %"class.blink::Member.657", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.655" = type <{ %"class.blink::Member.657"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.657" = type { %"class.blink::MemberBase.658" }
%"class.blink::MemberBase.658" = type { %"class.blink::HeapListHashSetNode.659"* }
%"class.blink::HeapListHashSetNode.659" = type { %"class.blink::Member.781", %"class.blink::Member.657", %"class.blink::Member.657" }
%"class.blink::HeapListHashSet.661" = type { %"class.WTF::ListHashSet.base.671", [7 x i8] }
%"class.WTF::ListHashSet.base.671" = type <{ %"class.WTF::HashTable.666", %"class.blink::Member.668", %"class.blink::Member.668", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.666" = type <{ %"class.blink::Member.668"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.668" = type { %"class.blink::MemberBase.669" }
%"class.blink::MemberBase.669" = type { %"class.blink::HeapListHashSetNode.670"* }
%"class.blink::HeapListHashSetNode.670" = type { %"class.blink::Member.878", %"class.blink::Member.668", %"class.blink::Member.668" }
%"class.blink::Member.878" = type { %"class.blink::MemberBase.879" }
%"class.blink::MemberBase.879" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.672" = type { %"class.WTF::ListHashSet.base.682", [7 x i8] }
%"class.WTF::ListHashSet.base.682" = type <{ %"class.WTF::HashTable.677", %"class.blink::Member.679", %"class.blink::Member.679", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.677" = type <{ %"class.blink::Member.679"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.679" = type { %"class.blink::MemberBase.680" }
%"class.blink::MemberBase.680" = type { %"class.blink::HeapListHashSetNode.681"* }
%"class.blink::HeapListHashSetNode.681" = type { %"class.blink::Member.874", %"class.blink::Member.679", %"class.blink::Member.679" }
%"class.blink::Member.874" = type { %"class.blink::MemberBase.875" }
%"class.blink::MemberBase.875" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.683" = type { %"class.WTF::ListHashSet.base.693", [7 x i8] }
%"class.WTF::ListHashSet.base.693" = type <{ %"class.WTF::HashTable.688", %"class.blink::Member.690", %"class.blink::Member.690", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.688" = type <{ %"class.blink::Member.690"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.690" = type { %"class.blink::MemberBase.691" }
%"class.blink::MemberBase.691" = type { %"class.blink::HeapListHashSetNode.692"* }
%"class.blink::HeapListHashSetNode.692" = type { %"class.blink::Member.870", %"class.blink::Member.690", %"class.blink::Member.690" }
%"class.blink::Member.870" = type { %"class.blink::MemberBase.871" }
%"class.blink::MemberBase.871" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.694" = type { %"class.WTF::ListHashSet.base.704", [7 x i8] }
%"class.WTF::ListHashSet.base.704" = type <{ %"class.WTF::HashTable.699", %"class.blink::Member.701", %"class.blink::Member.701", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.699" = type <{ %"class.blink::Member.701"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.701" = type { %"class.blink::MemberBase.702" }
%"class.blink::MemberBase.702" = type { %"class.blink::HeapListHashSetNode.703"* }
%"class.blink::HeapListHashSetNode.703" = type { %"class.blink::Member.866", %"class.blink::Member.701", %"class.blink::Member.701" }
%"class.blink::Member.866" = type { %"class.blink::MemberBase.867" }
%"class.blink::MemberBase.867" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.705" = type { %"class.WTF::ListHashSet.base.715", [7 x i8] }
%"class.WTF::ListHashSet.base.715" = type <{ %"class.WTF::HashTable.710", %"class.blink::Member.712", %"class.blink::Member.712", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.710" = type <{ %"class.blink::Member.712"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.712" = type { %"class.blink::MemberBase.713" }
%"class.blink::MemberBase.713" = type { %"class.blink::HeapListHashSetNode.714"* }
%"class.blink::HeapListHashSetNode.714" = type { %"class.blink::Member.862", %"class.blink::Member.712", %"class.blink::Member.712" }
%"class.blink::Member.862" = type { %"class.blink::MemberBase.863" }
%"class.blink::MemberBase.863" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.716" = type { %"class.WTF::ListHashSet.base.726", [7 x i8] }
%"class.WTF::ListHashSet.base.726" = type <{ %"class.WTF::HashTable.721", %"class.blink::Member.723", %"class.blink::Member.723", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.721" = type <{ %"class.blink::Member.723"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.723" = type { %"class.blink::MemberBase.724" }
%"class.blink::MemberBase.724" = type { %"class.blink::HeapListHashSetNode.725"* }
%"class.blink::HeapListHashSetNode.725" = type { %"class.blink::Member.858", %"class.blink::Member.723", %"class.blink::Member.723" }
%"class.blink::Member.858" = type { %"class.blink::MemberBase.859" }
%"class.blink::MemberBase.859" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.727" = type { %"class.WTF::ListHashSet.base.737", [7 x i8] }
%"class.WTF::ListHashSet.base.737" = type <{ %"class.WTF::HashTable.732", %"class.blink::Member.734", %"class.blink::Member.734", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.732" = type <{ %"class.blink::Member.734"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.734" = type { %"class.blink::MemberBase.735" }
%"class.blink::MemberBase.735" = type { %"class.blink::HeapListHashSetNode.736"* }
%"class.blink::HeapListHashSetNode.736" = type { %"class.blink::Member.854", %"class.blink::Member.734", %"class.blink::Member.734" }
%"class.blink::Member.854" = type { %"class.blink::MemberBase.855" }
%"class.blink::MemberBase.855" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.738" = type { %"class.WTF::ListHashSet.base.748", [7 x i8] }
%"class.WTF::ListHashSet.base.748" = type <{ %"class.WTF::HashTable.743", %"class.blink::Member.745", %"class.blink::Member.745", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.743" = type <{ %"class.blink::Member.745"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.745" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::HeapListHashSetNode.747"* }
%"class.blink::HeapListHashSetNode.747" = type { %"class.blink::Member.783", %"class.blink::Member.745", %"class.blink::Member.745" }
%"class.blink::HeapListHashSet.749" = type { %"class.WTF::ListHashSet.base.759", [7 x i8] }
%"class.WTF::ListHashSet.base.759" = type <{ %"class.WTF::HashTable.754", %"class.blink::Member.756", %"class.blink::Member.756", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.754" = type <{ %"class.blink::Member.756"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.756" = type { %"class.blink::MemberBase.757" }
%"class.blink::MemberBase.757" = type { %"class.blink::HeapListHashSetNode.758"* }
%"class.blink::HeapListHashSetNode.758" = type { %"class.blink::Member.761", %"class.blink::Member.756", %"class.blink::Member.756" }
%class.scoped_refptr.760 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.761" = type { %"class.blink::MemberBase.762" }
%"class.blink::MemberBase.762" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.763" = type { %"class.blink::MemberBase.764" }
%"class.blink::MemberBase.764" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member.423", %"class.WTF::Vector.767", i32, [4 x i8], %"class.blink::HeapHashMap.772", i32, i8, [3 x i8] }>
%"class.blink::HeapHashMap.772" = type { %"class.WTF::HashMap.775" }
%"class.WTF::HashMap.775" = type { %"class.WTF::HashTable.776" }
%"class.WTF::HashTable.776" = type <{ %"struct.WTF::KeyValuePair.778"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.778" = type opaque
%"class.blink::Member.779" = type { %"class.blink::MemberBase.780" }
%"class.blink::MemberBase.780" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.781" = type { %"class.blink::MemberBase.782" }
%"class.blink::MemberBase.782" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.783" = type { %"class.blink::MemberBase.784" }
%"class.blink::MemberBase.784" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.785" = type { %"class.blink::MemberBase.786" }
%"class.blink::MemberBase.786" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.787" = type { %"class.blink::MemberBase.788" }
%"class.blink::MemberBase.788" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.789" }
%"class.blink::Member.789" = type { %"class.blink::MemberBase.790" }
%"class.blink::MemberBase.790" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2244" }
%"class.mojo::Remote.2244" = type { %"class.mojo::internal::InterfacePtrState.2245" }
%"class.mojo::internal::InterfacePtrState.2245" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2246" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.227, %"class.std::__1::unique_ptr.349", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.233, i32 }>
%class.scoped_refptr.227 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.233, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.311", %"class.absl::optional.316", %"class.absl::optional.272", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.340", i8, [7 x i8], %class.scoped_refptr.233, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.233, %"class.std::__1::unique_ptr.261", %"class.absl::optional", %"struct.std::__1::atomic.203", i8, i8, i8, i8, i32, i32, %"class.absl::optional.272", %"class.std::__1::unique_ptr.277", i8, i64, %class.scoped_refptr.307, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.310" }
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.233, i8, %"class.mojo::ScopedHandleBase.264", %class.scoped_refptr.265, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.266" }
%"class.mojo::ScopedHandleBase.264" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.265 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.266" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.270 }
%union.anon.270 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.271", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.271" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.280", i8, i64, %class.scoped_refptr.281, %class.scoped_refptr.303 }
%"class.base::RepeatingCallback.280" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.281 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.282", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.292", i8, [7 x i8] }>
%"class.base::RefCounted.282" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.283 }
%class.scoped_refptr.283 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.284", %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"class.std::__1::map.292" = type { %"class.std::__1::__tree.293" }
%"class.std::__1::__tree.293" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.294", %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%class.scoped_refptr.303 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.307 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.310" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.311" = type { %"class.absl::optional_internal::optional_data.312" }
%"class.absl::optional_internal::optional_data.312" = type { %"class.absl::optional_internal::optional_data_base.313" }
%"class.absl::optional_internal::optional_data_base.313" = type { %"class.absl::optional_internal::optional_data_dtor_base.314" }
%"class.absl::optional_internal::optional_data_dtor_base.314" = type { i8, %union.anon.315 }
%union.anon.315 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.316" = type { %"class.absl::optional_internal::optional_data.317" }
%"class.absl::optional_internal::optional_data.317" = type { %"class.absl::optional_internal::optional_data_base.318" }
%"class.absl::optional_internal::optional_data_base.318" = type { %"class.absl::optional_internal::optional_data_dtor_base.319" }
%"class.absl::optional_internal::optional_data_dtor_base.319" = type { i8, [7 x i8], %union.anon.320 }
%union.anon.320 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.272" = type { %"class.absl::optional_internal::optional_data.273" }
%"class.absl::optional_internal::optional_data.273" = type { %"class.absl::optional_internal::optional_data_base.274" }
%"class.absl::optional_internal::optional_data_base.274" = type { %"class.absl::optional_internal::optional_data_dtor_base.275" }
%"class.absl::optional_internal::optional_data_dtor_base.275" = type { i8, %union.anon.276 }
%union.anon.276 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.325 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.325 = type { %"class.std::__1::map.328" }
%"class.std::__1::map.328" = type { %"class.std::__1::__tree.329" }
%"class.std::__1::__tree.329" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.330", %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.339"*, i64 }
%"class.std::__1::unique_ptr.339" = type opaque
%"class.std::__1::map.340" = type { %"class.std::__1::__tree.341" }
%"class.std::__1::__tree.341" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"class.std::__1::unique_ptr.2246" = type { %"class.std::__1::__compressed_pair.2247" }
%"class.std::__1::__compressed_pair.2247" = type { %"struct.std::__1::__compressed_pair_elem.2248" }
%"struct.std::__1::__compressed_pair_elem.2248" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.791" = type { %"class.std::__1::__compressed_pair.792" }
%"class.std::__1::__compressed_pair.792" = type { %"struct.std::__1::__compressed_pair_elem.793" }
%"struct.std::__1::__compressed_pair_elem.793" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.797" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.798" = type { %"class.std::__1::__compressed_pair.799" }
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.800" }
%"struct.std::__1::__compressed_pair_elem.800" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.804" = type { %"class.std::__1::__compressed_pair.805" }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.810" }
%"class.blink::Member.810" = type { %"class.blink::MemberBase.811" }
%"class.blink::MemberBase.811" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2254" }
%"class.mojo::AssociatedRemote.2254" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2255" }
%"class.mojo::internal::AssociatedInterfacePtrState.2255" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2256" }
%"class.std::__1::unique_ptr.2256" = type { %"class.std::__1::__compressed_pair.2257" }
%"class.std::__1::__compressed_pair.2257" = type { %"struct.std::__1::__compressed_pair_elem.2258" }
%"struct.std::__1::__compressed_pair_elem.2258" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.812" = type { %"class.blink::Member.813" }
%"class.blink::Member.813" = type { %"class.blink::MemberBase.814" }
%"class.blink::MemberBase.814" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2264" }
%"class.mojo::AssociatedRemote.2264" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2265" }
%"class.mojo::internal::AssociatedInterfacePtrState.2265" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2266" }
%"class.std::__1::unique_ptr.2266" = type { %"class.std::__1::__compressed_pair.2267" }
%"class.std::__1::__compressed_pair.2267" = type { %"struct.std::__1::__compressed_pair_elem.2268" }
%"struct.std::__1::__compressed_pair_elem.2268" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.815" }
%"class.blink::Member.815" = type { %"class.blink::MemberBase.816" }
%"class.blink::MemberBase.816" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2274", %"class.blink::Member.423", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2274" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2275" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.349" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2275" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.817" = type { %"class.blink::Member.818" }
%"class.blink::Member.818" = type { %"class.blink::MemberBase.819" }
%"class.blink::MemberBase.819" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2278", %"class.blink::Member.423", %"class.mojo::AssociatedReceiver.2279" }
%"class.blink::ThreadState::PrefinalizerRegistration.2278" = type { i8 }
%"class.mojo::AssociatedReceiver.2279" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2280" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2280" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.820" }
%"class.blink::Member.820" = type { %"class.blink::MemberBase.821" }
%"class.blink::MemberBase.821" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2283", %"class.blink::Member.423", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2283" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.227, %"class.std::__1::unique_ptr.349", %"class.base::WeakPtrFactory.2284" }
%"class.base::WeakPtrFactory.2284" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.822" = type { %"class.blink::Member.823" }
%"class.blink::Member.823" = type { %"class.blink::MemberBase.824" }
%"class.blink::MemberBase.824" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2287", %"class.blink::Member.423", %"class.mojo::AssociatedReceiver.2288" }
%"class.blink::ThreadState::PrefinalizerRegistration.2287" = type { i8 }
%"class.mojo::AssociatedReceiver.2288" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2289" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2289" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.825" = type { %"class.blink::MemberBase.826" }
%"class.blink::MemberBase.826" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.827" = type { %"class.blink::MemberBase.828" }
%"class.blink::MemberBase.828" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.829" = type { %"class.blink::MemberBase.830" }
%"class.blink::MemberBase.830" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.831" = type { %"class.blink::MemberBase.832" }
%"class.blink::MemberBase.832" = type { %"class.blink::HeapHashMap.833"* }
%"class.blink::HeapHashMap.833" = type opaque
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.834" }
%"class.std::__1::unique_ptr.834" = type { %"class.std::__1::__compressed_pair.835" }
%"class.std::__1::__compressed_pair.835" = type { %"struct.std::__1::__compressed_pair_elem.836" }
%"struct.std::__1::__compressed_pair_elem.836" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr.837" }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.837" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.841" = type { %"class.blink::MemberBase.842" }
%"class.blink::MemberBase.842" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.843" = type { %"class.absl::optional_internal::optional_data.844" }
%"class.absl::optional_internal::optional_data.844" = type { %"class.absl::optional_internal::optional_data_base.845" }
%"class.absl::optional_internal::optional_data_base.845" = type { %"class.absl::optional_internal::optional_data_dtor_base.846" }
%"class.absl::optional_internal::optional_data_dtor_base.846" = type { i8, %union.anon.847 }
%union.anon.847 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.8", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.425" }
%"class.std::__1::vector.425" = type { %"class.std::__1::__vector_base.426" }
%"class.std::__1::__vector_base.426" = type { %"struct.std::__1::pair.427"*, %"struct.std::__1::pair.427"*, %"class.std::__1::__compressed_pair.428" }
%"struct.std::__1::pair.427" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"struct.std::__1::pair.427"* }
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.435" = type { %"class.absl::optional_internal::optional_data.436" }
%"class.absl::optional_internal::optional_data.436" = type { %"class.absl::optional_internal::optional_data_base.437" }
%"class.absl::optional_internal::optional_data_base.437" = type { %"class.absl::optional_internal::optional_data_dtor_base.438" }
%"class.absl::optional_internal::optional_data_dtor_base.438" = type { i8, %union.anon.439 }
%union.anon.439 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.440" = type { %"class.absl::optional_internal::optional_data.441" }
%"class.absl::optional_internal::optional_data.441" = type { %"class.absl::optional_internal::optional_data_base.442" }
%"class.absl::optional_internal::optional_data_base.442" = type { %"class.absl::optional_internal::optional_data_dtor_base.443" }
%"class.absl::optional_internal::optional_data_dtor_base.443" = type { i8, %union.anon.444 }
%union.anon.444 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.445 }
%class.scoped_refptr.445 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.448" }
%"class.WTF::HashTable.448" = type <{ %"class.blink::WeakMember.450"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.450" = type opaque
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type { %"class.v8::Isolate"*, %"class.blink::Member.8", i32, %"class.blink::Member.14", %"class.blink::HeapHashMap.207" }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::WindowProxy"* }
%"class.blink::WindowProxy" = type <{ i32 (...)**, %"class.v8::Isolate"*, %"class.blink::Member.8", %class.scoped_refptr.18, %"class.blink::TraceWrapperV8Reference", i32, [4 x i8] }>
%class.scoped_refptr.18 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::HeapHashMap.207" = type { %"class.WTF::HashMap.210" }
%"class.WTF::HashMap.210" = type { %"class.WTF::HashTable.211" }
%"class.WTF::HashTable.211" = type <{ %"struct.WTF::KeyValuePair.213"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.213" = type opaque
%"class.blink::Member.214" = type { %"class.blink::MemberBase.215" }
%"class.blink::MemberBase.215" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type { %"class.blink::Member.218", %"class.blink::Member.218" }
%"class.blink::Member.218" = type { %"class.blink::MemberBase.219" }
%"class.blink::MemberBase.219" = type { %"class.blink::InputDeviceCapabilities"* }
%"class.blink::InputDeviceCapabilities" = type <{ %"class.blink::ScriptWrappable", i8, [7 x i8] }>
%"class.blink::Member.220" = type { %"class.blink::MemberBase.221" }
%"class.blink::MemberBase.221" = type { %"class.blink::Location"* }
%"class.blink::Location" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.222" }
%"class.WTF::Vector.224" = type { %"class.WTF::VectorBuffer.225" }
%"class.WTF::VectorBuffer.225" = type { %"class.WTF::VectorBufferBase.226" }
%"class.WTF::VectorBufferBase.226" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.399" }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.mojo::internal::InterfacePtrStateBase" = type <{ %class.scoped_refptr.227, %"class.std::__1::unique_ptr.349", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.233, i32, [4 x i8] }>
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.18, %"class.blink::Member.2019", %"class.blink::SelfKeepAlive", %"class.util::TokenType.2023" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.blink::Member.2019" = type { %"class.blink::MemberBase.2020" }
%"class.blink::MemberBase.2020" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.2021" }
%"class.blink::Persistent.2021" = type { %"class.blink::PersistentBase.2022" }
%"class.blink::PersistentBase.2022" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType.2023" = type { %"class.base::StrongAlias.2024" }
%"class.base::StrongAlias.2024" = type { %"class.base::UnguessableToken" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.2028", %class.scoped_refptr.1363 }
%"class.blink::TraceWrapperV8Reference.2028" = type { %"class.v8::TracedReference.2029" }
%"class.v8::TracedReference.2029" = type { %"class.v8::BasicTracedReference.2030" }
%"class.v8::BasicTracedReference.2030" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::HeapVector.2031" = type { %"class.WTF::Vector.2034" }
%"class.WTF::Vector.2034" = type { %"class.WTF::VectorBuffer.2035" }
%"class.WTF::VectorBuffer.2035" = type { %"class.WTF::VectorBufferBase.2036" }
%"class.WTF::VectorBufferBase.2036" = type { %"class.blink::ScriptValue"*, i32, i32 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.2028" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::WindowPostMessageOptions" = type { %"class.blink::PostMessageOptions", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::PostMessageOptions" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, %"class.blink::HeapVector.2031" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::Transferables" = type { %"class.blink::HeapVector.2040", %"class.blink::HeapVector.2049", %"class.blink::HeapVector.2057", %"class.blink::HeapVector.2065", %"class.blink::HeapVector.2080", %"class.blink::HeapVector.2088", %"class.blink::HeapVector.2102", %"class.blink::HeapVector.2110", %"class.blink::HeapHashMap.2118" }
%"class.blink::HeapVector.2040" = type { %"class.WTF::Vector.2043" }
%"class.WTF::Vector.2043" = type { %"class.WTF::VectorBuffer.2044" }
%"class.WTF::VectorBuffer.2044" = type { %"class.WTF::VectorBufferBase.2045" }
%"class.WTF::VectorBufferBase.2045" = type { %"class.blink::Member.2046"*, i32, i32 }
%"class.blink::Member.2046" = type { %"class.blink::MemberBase.2047" }
%"class.blink::MemberBase.2047" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::HeapVector.2049" = type { %"class.WTF::Vector.2052" }
%"class.WTF::Vector.2052" = type { %"class.WTF::VectorBuffer.2053" }
%"class.WTF::VectorBuffer.2053" = type { %"class.WTF::VectorBufferBase.2054" }
%"class.WTF::VectorBufferBase.2054" = type { %"class.blink::Member.2055"*, i32, i32 }
%"class.blink::Member.2055" = type { %"class.blink::MemberBase.2290" }
%"class.blink::MemberBase.2290" = type { %"class.blink::ImageBitmap"* }
%"class.blink::ImageBitmap" = type opaque
%"class.blink::HeapVector.2057" = type { %"class.WTF::Vector.2060" }
%"class.WTF::Vector.2060" = type { %"class.WTF::VectorBuffer.2061" }
%"class.WTF::VectorBuffer.2061" = type { %"class.WTF::VectorBufferBase.2062" }
%"class.WTF::VectorBufferBase.2062" = type { %"class.blink::Member.2063"*, i32, i32 }
%"class.blink::Member.2063" = type { %"class.blink::MemberBase.2291" }
%"class.blink::MemberBase.2291" = type { %"class.blink::OffscreenCanvas"* }
%"class.blink::OffscreenCanvas" = type opaque
%"class.blink::HeapVector.2065" = type { %"class.WTF::Vector.2068" }
%"class.WTF::Vector.2068" = type { %"class.WTF::VectorBuffer.2069" }
%"class.WTF::VectorBuffer.2069" = type { %"class.WTF::VectorBufferBase.2070" }
%"class.WTF::VectorBufferBase.2070" = type { %"class.blink::Member.2071"*, i32, i32 }
%"class.blink::Member.2071" = type { %"class.blink::MemberBase.2072" }
%"class.blink::MemberBase.2072" = type { %"class.blink::MessagePort"* }
%"class.blink::MessagePort" = type { %"class.blink::EventTargetWithInlineData", %"class.mojo::MessageReceiver", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.std::__1::unique_ptr.2073", i8, i8, %class.scoped_refptr.1366, %"class.blink::MessagePortDescriptor" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.2073" = type { %"class.std::__1::__compressed_pair.2074" }
%"class.std::__1::__compressed_pair.2074" = type { %"struct.std::__1::__compressed_pair_elem.2075" }
%"struct.std::__1::__compressed_pair_elem.2075" = type { %"class.mojo::Connector"* }
%"class.blink::MessagePortDescriptor" = type { %"class.mojo::ScopedHandleBase", %"class.base::UnguessableToken", i64 }
%"class.blink::HeapVector.2080" = type { %"class.WTF::Vector.2083" }
%"class.WTF::Vector.2083" = type { %"class.WTF::VectorBuffer.2084" }
%"class.WTF::VectorBuffer.2084" = type { %"class.WTF::VectorBufferBase.2085" }
%"class.WTF::VectorBufferBase.2085" = type { %"class.blink::Member.2086"*, i32, i32 }
%"class.blink::Member.2086" = type { %"class.blink::MemberBase.2292" }
%"class.blink::MemberBase.2292" = type { %"class.blink::MojoHandle"* }
%"class.blink::MojoHandle" = type <{ %"class.blink::ScriptWrappable", %"class.mojo::ScopedHandleBase.1261", [4 x i8] }>
%"class.blink::HeapVector.2088" = type { %"class.WTF::Vector.2091" }
%"class.WTF::Vector.2091" = type { %"class.WTF::VectorBuffer.2092" }
%"class.WTF::VectorBuffer.2092" = type { %"class.WTF::VectorBufferBase.2093" }
%"class.WTF::VectorBufferBase.2093" = type { %"class.blink::Member.2094"*, i32, i32 }
%"class.blink::Member.2094" = type { %"class.blink::MemberBase.2095" }
%"class.blink::MemberBase.2095" = type { %"class.blink::ReadableStream"* }
%"class.blink::ReadableStream" = type { %"class.blink::ScriptWrappable", i8, %"class.base::StrongAlias.2096", i8, %"class.blink::Member.2097", %"class.blink::Member.2099", %"class.blink::TraceWrapperV8Reference.2028", %"class.std::__1::unique_ptr.1233" }
%"class.base::StrongAlias.2096" = type { i8 }
%"class.blink::Member.2097" = type { %"class.blink::MemberBase.2098" }
%"class.blink::MemberBase.2098" = type { %"class.blink::ReadableStreamController"* }
%"class.blink::ReadableStreamController" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.2099" = type { %"class.blink::MemberBase.2100" }
%"class.blink::MemberBase.2100" = type { %"class.blink::ReadableStreamGenericReader"* }
%"class.blink::ReadableStreamGenericReader" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.2125", %"class.blink::Member.2094" }
%"class.blink::Member.2125" = type { %"class.blink::MemberBase.2126" }
%"class.blink::MemberBase.2126" = type { %"class.blink::StreamPromiseResolver"* }
%"class.blink::StreamPromiseResolver" = type opaque
%"class.blink::HeapVector.2102" = type { %"class.WTF::Vector.2105" }
%"class.WTF::Vector.2105" = type { %"class.WTF::VectorBuffer.2106" }
%"class.WTF::VectorBuffer.2106" = type { %"class.WTF::VectorBufferBase.2107" }
%"class.WTF::VectorBufferBase.2107" = type { %"class.blink::Member.2108"*, i32, i32 }
%"class.blink::Member.2108" = type { %"class.blink::MemberBase.2293" }
%"class.blink::MemberBase.2293" = type { %"class.blink::WritableStream"* }
%"class.blink::WritableStream" = type opaque
%"class.blink::HeapVector.2110" = type { %"class.WTF::Vector.2113" }
%"class.WTF::Vector.2113" = type { %"class.WTF::VectorBuffer.2114" }
%"class.WTF::VectorBuffer.2114" = type { %"class.WTF::VectorBufferBase.2115" }
%"class.WTF::VectorBufferBase.2115" = type { %"class.blink::Member.2116"*, i32, i32 }
%"class.blink::Member.2116" = type { %"class.blink::MemberBase.2294" }
%"class.blink::MemberBase.2294" = type { %"class.blink::TransformStream"* }
%"class.blink::TransformStream" = type opaque
%"class.blink::HeapHashMap.2118" = type { %"class.WTF::HashMap.2121" }
%"class.WTF::HashMap.2121" = type { %"class.WTF::HashTable.2122" }
%"class.WTF::HashTable.2122" = type <{ %"struct.WTF::KeyValuePair.2124"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2124" = type opaque
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::UserActivation" = type <{ %"class.blink::ScriptWrappable", %"class.blink::Member.1013", i8, i8, [6 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::Vector.2193" = type { %"class.WTF::VectorBuffer.2194" }
%"class.WTF::VectorBuffer.2194" = type { %"class.WTF::VectorBufferBase.2195" }
%"class.WTF::VectorBufferBase.2195" = type { %"class.blink::MessagePortChannel"*, i32, i32 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic", [4 x i8] }>
%"class.blink::MessageEvent" = type <{ %"class.blink::Event", i32, [4 x i8], %"class.blink::WorldSafeV8Reference", %"class.blink::Member.2198", %"class.WTF::String", %"class.blink::Member.2202", %"class.blink::Member.2208", i8, [7 x i8], %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.1288", %"class.blink::Member.2210", i8, [7 x i8], %"class.WTF::Vector.2193", %"class.blink::Member.2212", i8, [7 x i8], i64, i8, [7 x i8] }>
%"class.blink::Member.2198" = type { %"class.blink::MemberBase.2199" }
%"class.blink::MemberBase.2199" = type { %"class.blink::UnpackedSerializedScriptValue"* }
%"class.blink::UnpackedSerializedScriptValue" = type { %class.scoped_refptr.1212, %"class.blink::HeapVector.2040", %"class.blink::HeapVector.2049" }
%"class.blink::Member.2202" = type { %"class.blink::MemberBase.2203" }
%"class.blink::MemberBase.2203" = type { %"class.blink::Blob"* }
%"class.blink::Blob" = type { %"class.blink::ScriptWrappable", %"class.blink::URLRegistrable", %"class.blink::ImageBitmapSource", %class.scoped_refptr.2204 }
%"class.blink::URLRegistrable" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%class.scoped_refptr.2204 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted.2205", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote.2207", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted.2205" = type { %"class.base::RefCountedThreadSafe.2206" }
%"class.base::RefCountedThreadSafe.2206" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote.2207" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.blink::Member.2208" = type { %"class.blink::MemberBase.2209" }
%"class.blink::MemberBase.2209" = type { %"class.blink::DOMArrayBuffer"* }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::Member.2210" = type { %"class.blink::MemberBase.2211" }
%"class.blink::MemberBase.2211" = type { %"class.blink::HeapVector.2065"* }
%"class.blink::Member.2212" = type { %"class.blink::MemberBase.2213" }
%"class.blink::MemberBase.2213" = type { %"class.blink::UserActivation"* }
%"class.mojo::InlinedStructPtr.2157" = type <{ %"class.network::mojom::blink::SourceLocation", i32, [4 x i8] }>
%"class.network::mojom::blink::SourceLocation" = type { %"class.WTF::String", i32, i32 }
%"class.blink::CoopAccessViolationReportBody" = type { %"class.blink::LocationReportBody", i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::LocationReportBody" = type { %"class.blink::ReportBody", %"class.WTF::String", %"class.absl::optional.2188", %"class.absl::optional.2188" }
%"class.blink::ReportBody" = type { %"class.blink::ScriptWrappable" }
%"class.absl::optional.2188" = type { %"class.absl::optional_internal::optional_data.2189" }
%"class.absl::optional_internal::optional_data.2189" = type { %"class.absl::optional_internal::optional_data_base.2190" }
%"class.absl::optional_internal::optional_data_base.2190" = type { %"class.absl::optional_internal::optional_data_dtor_base.2191" }
%"class.absl::optional_internal::optional_data_dtor_base.2191" = type { i8, %union.anon.2192 }
%union.anon.2192 = type { i32 }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.2140", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2140" = type { %"class.std::__1::__compressed_pair.2141" }
%"class.std::__1::__compressed_pair.2141" = type { %"struct.std::__1::__compressed_pair_elem.2142" }
%"struct.std::__1::__compressed_pair_elem.2142" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::ReportingContext" = type { %"class.blink::mojom::blink::ReportingObserver", %"class.blink::Supplement", %"class.blink::HeapListHashSet.2161", %"class.blink::HeapHashMap.2172", %"class.blink::Member.1080", %"class.blink::HeapMojoRemote", %"class.blink::HeapMojoReceiver.2179" }
%"class.blink::mojom::blink::ReportingObserver" = type { i32 (...)** }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1080" }
%"class.blink::HeapListHashSet.2161" = type { %"class.WTF::ListHashSet.base.2171", [7 x i8] }
%"class.WTF::ListHashSet.base.2171" = type <{ %"class.WTF::HashTable.2166", %"class.blink::Member.2168", %"class.blink::Member.2168", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2166" = type <{ %"class.blink::Member.2168"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2168" = type { %"class.blink::MemberBase.2169" }
%"class.blink::MemberBase.2169" = type { %"class.blink::HeapListHashSetNode.2170"* }
%"class.blink::HeapListHashSetNode.2170" = type { %"class.blink::Member.2184", %"class.blink::Member.2168", %"class.blink::Member.2168" }
%"class.blink::Member.2184" = type { %"class.blink::MemberBase.2185" }
%"class.blink::MemberBase.2185" = type { %"class.blink::ReportingObserver"* }
%"class.blink::ReportingObserver" = type opaque
%"class.blink::HeapHashMap.2172" = type { %"class.WTF::HashMap.2175" }
%"class.WTF::HashMap.2175" = type { %"class.WTF::HashTable.2176" }
%"class.WTF::HashTable.2176" = type <{ %"struct.WTF::KeyValuePair.2178"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2178" = type opaque
%"class.blink::HeapMojoReceiver.2179" = type { %"class.blink::Member.2180" }
%"class.blink::Member.2180" = type { %"class.blink::MemberBase.2181" }
%"class.blink::MemberBase.2181" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::ReportingObserver, blink::ReportingContext, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::ReportingObserver, blink::ReportingContext, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Report" = type { %"class.blink::ScriptWrappable", %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.2186" }
%"class.blink::Member.2186" = type { %"class.blink::MemberBase.2187" }
%"class.blink::MemberBase.2187" = type { %"class.blink::ReportBody"* }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.2127", i8* }
%"class.WTF::StringAppend.2127" = type { i8*, %"class.WTF::String" }
%"class.WTF::StringTypeAdapter.2334" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend.2133" = type { %"class.WTF::StringAppend.2134", %"class.WTF::String" }
%"class.WTF::StringAppend.2134" = type { %"class.WTF::String", i8* }
%"class.WTF::StringAppend.2129" = type { %"class.WTF::StringAppend", %"class.WTF::String" }
%"class.WTF::StringAppend.2128" = type { %"class.WTF::StringAppend.2129", i8* }
%"class.WTF::StringAppend.2130" = type { %"class.WTF::StringAppend.2131", i8* }
%"class.WTF::StringAppend.2131" = type { %"class.WTF::StringAppend.2132", %"class.WTF::String" }
%"class.WTF::StringAppend.2132" = type { %"class.WTF::StringAppend.2133", i8* }
%"class.WTF::StringTypeAdapter.2335" = type { %"class.WTF::StringTypeAdapter.2336" }
%"class.WTF::StringTypeAdapter.2336" = type { %"class.WTF::StringView" }
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.2137", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.2149", %"class.WTF::Vector.2150" }
%"class.std::__1::unique_ptr.2137" = type { %"class.std::__1::__compressed_pair.2138" }
%"class.std::__1::__compressed_pair.2138" = type { %"struct.std::__1::__compressed_pair_elem.2139" }
%"struct.std::__1::__compressed_pair_elem.2139" = type { %"class.blink::SourceLocation"* }
%"class.blink::WeakMember.2149" = type { %"class.blink::MemberBase.424" }
%"class.WTF::Vector.2150" = type { %"class.WTF::VectorBuffer.2151" }
%"class.WTF::VectorBuffer.2151" = type { %"class.WTF::VectorBufferBase.1763" }
%"class.mojo::PendingRemote.2154" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.2155" }
%"class.blink::PersistentBase.2155" = type { %"class.blink::DOMWindow"*, %"class.blink::PersistentNodePtr.2156" }
%"class.blink::PersistentNodePtr.2156" = type { %"class.blink::PersistentNode"* }
%"struct.base::internal::BindState" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.2358" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::WeakPersistent" }
%"class.std::__1::__tuple_leaf.2358" = type { %"class.util::TokenType" }
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.2216", i8, [7 x i8] }>
%"class.blink::Member.2216" = type { %"class.blink::MemberBase.2217" }
%"class.blink::MemberBase.2217" = type { %"class.blink::EventListener"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.234", [4 x i8] }>
%"class.mojo::PassThroughFilter" = type { %"class.mojo::MessageReceiver" }

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev = comdat any

$_ZN3WTFplINS_12StringAppendINS1_INS1_INS_6StringEPKcEES2_EES4_EES2_S4_EENS1_INS1_IT_T0_EET1_EERKSA_SB_ = comdat any

$_ZN3WTFplINS_12StringAppendINS1_INS_6StringEPKcEES2_EES4_S2_EENS1_INS1_IT_T0_EET1_EERKS9_SA_ = comdat any

$_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EES3_EcvS1_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EcvS1_Ev = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev = comdat any

$_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink9DOMWindow18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv = comdat any

$_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv = comdat any

$_ZN5blink25EventTargetWithInlineDataD2Ev = comdat any

$_ZN5blink25EventTargetWithInlineDataD0Ev = comdat any

$_ZNK5blink11EventTarget18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_12MessageEventEE4CallIJ13scoped_refptrINS_21SerializedScriptValueEERKN3WTF6StringESA_RPNS_11EventTargetENS7_6VectorINS_18MessagePortChannelELj0ENS7_18PartitionAllocatorEEERPNS_14UserActivationERbEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv = comdat any

$_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EC2ES6_S1_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EES3_EC2ES7_S3_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA61_KcEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_32InputDeviceCapabilitiesConstantsEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_32InputDeviceCapabilitiesConstantsEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_32InputDeviceCapabilitiesConstantsEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_23InputDeviceCapabilitiesEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN4mojo6RemoteIN7network5mojom5blink31CrossOriginOpenerPolicyReporterEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4mojo8internal17InterfacePtrStateIN7network5mojom5blink31CrossOriginOpenerPolicyReporterEE25ConfigureProxyIfNecessaryEv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_9DOMWindowELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_9DOMWindowELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink9DOMWindowEFvRKN4util9TokenTypeINS3_25LocalFrameTokenTypeMarkerEEEEJNS3_14WeakPersistentIS4_EES8_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink9DOMWindowEFvRKN4util9TokenTypeINS2_25LocalFrameTokenTypeMarkerEEEEJNS2_14WeakPersistentIS3_EES7_EEC2ISB_JSD_RS7_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIMN5blink9DOMWindowEFvRKN4util9TokenTypeINS2_25LocalFrameTokenTypeMarkerEEEEJNS2_14WeakPersistentIS3_EES7_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink9DOMWindowEFvRKN4util9TokenTypeINS3_25LocalFrameTokenTypeMarkerEEEEJNS3_14WeakPersistentIS4_EES8_EEEEEbPKNS0_13BindStateBaseENSG_21CancellationQueryModeE = comdat any

$_ZN3WTF6VectorIN5blink9DOMWindow17CoopAccessMonitorELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink9DOMWindow17CoopAccessMonitorELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9DOMWindow17CoopAccessMonitorEEEmm = comdat any

$_ZNSt3__14swapIN7network5mojom5blink14SourceLocationEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_6ReportEE4CallIJRA22_KcRKN3WTF6StringEPNS_29CoopAccessViolationReportBodyEEEEPS1_DpOT_ = comdat any

$_ZN5blink6ReportD2Ev = comdat any

$_ZN5blink6ReportD0Ev = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink6Report5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink6Report18GetWrapperTypeInfoEv = comdat any

$_ZN5blink10TraceTraitINS_10ReportBodyEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink9DOMWindow17CoopAccessMonitorELj0ENS_18PartitionAllocatorEE7EraseAtEj = comdat any

$_ZN3WTF11VectorMoverILb0EN5blink9DOMWindow17CoopAccessMonitorENS_18PartitionAllocatorEE15MoveOverlappingEPS3_S6_S6_b = comdat any

$_ZN5blink10TraceTraitINS_5FrameEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_18WindowProxyManagerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_8LocationEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZTVN5blink25EventTargetWithInlineDataE = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_32InputDeviceCapabilitiesConstantsEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_32InputDeviceCapabilitiesConstantsEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink6ReportE = comdat any

@_ZTVN5blink9DOMWindowE = hidden unnamed_addr constant { [33 x i8*] } { [33 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::DOMWindow"*)* @_ZN5blink9DOMWindowD2Ev to i8*), i8* bitcast (void (%"class.blink::DOMWindow"*)* @_ZN5blink9DOMWindowD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::DOMWindow"*, %"class.blink::Visitor"*)* @_ZNK5blink9DOMWindow5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::DOMWindow"*)* @_ZNK5blink9DOMWindow18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::DOMWindow"*, %"class.blink::ScriptState"*)* @_ZN5blink9DOMWindow4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::DOMWindow"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink9DOMWindow20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::DOMWindow"*)* @_ZNK5blink9DOMWindow13InterfaceNameEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::DOMWindow"*)* @_ZNK5blink9DOMWindow11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::DOMWindow"*)* @_ZNK5blink9DOMWindow27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZN5blink18event_target_names7kWindowE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str = private unnamed_addr constant [8 x i8] c"indexed\00", align 1
@.str.1 = private unnamed_addr constant [58 x i8] c"../../third_party/blink/renderer/core/frame/dom_window.cc\00", align 1
@.str.2 = private unnamed_addr constant [32 x i8] c"GetFrame()->DomWindow() == this\00", align 1
@.str.3 = private unnamed_addr constant [41 x i8] c"Blocked a restricted frame with origin \22\00", align 1
@.str.4 = private unnamed_addr constant [32 x i8] c"\22 from accessing another frame.\00", align 1
@.str.5 = private unnamed_addr constant [30 x i8] c"Blocked a frame with origin \22\00", align 1
@.str.6 = private unnamed_addr constant [39 x i8] c"\22 from accessing a cross-origin frame.\00", align 1
@.str.7 = private unnamed_addr constant [39 x i8] c"\22 from accessing a frame with origin \22\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"\22. \00", align 1
@.str.9 = private unnamed_addr constant [21 x i8] c"Blocked a frame at \22\00", align 1
@.str.10 = private unnamed_addr constant [30 x i8] c"\22 from accessing a frame at \22\00", align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"Sandbox access violation: \00", align 1
@.str.12 = private unnamed_addr constant [66 x i8] c" Both frames are sandboxed and lack the \22allow-same-origin\22 flag.\00", align 1
@.str.13 = private unnamed_addr constant [79 x i8] c" The frame being accessed is sandboxed and lacks the \22allow-same-origin\22 flag.\00", align 1
@.str.14 = private unnamed_addr constant [82 x i8] c" The frame requesting access is sandboxed and lacks the \22allow-same-origin\22 flag.\00", align 1
@.str.15 = private unnamed_addr constant [49 x i8] c" The frame requesting access has a protocol of \22\00", align 1
@.str.16 = private unnamed_addr constant [48 x i8] c"\22, the frame being accessed has a protocol of \22\00", align 1
@.str.17 = private unnamed_addr constant [26 x i8] c"\22. Protocols must match.\0A\00", align 1
@.str.18 = private unnamed_addr constant [55 x i8] c"The frame requesting access set \22document.domain\22 to \22\00", align 1
@.str.19 = private unnamed_addr constant [40 x i8] c"\22, the frame being accessed set it to \22\00", align 1
@.str.20 = private unnamed_addr constant [70 x i8] c"\22. Both must set \22document.domain\22 to the same value to allow access.\00", align 1
@.str.21 = private unnamed_addr constant [108 x i8] c"\22, but the frame being accessed did not. Both must set \22document.domain\22 to the same value to allow access.\00", align 1
@.str.22 = private unnamed_addr constant [52 x i8] c"The frame being accessed set \22document.domain\22 to \22\00", align 1
@.str.23 = private unnamed_addr constant [111 x i8] c"\22, but the frame requesting access did not. Both must set \22document.domain\22 to the same value to allow access.\00", align 1
@.str.24 = private unnamed_addr constant [42 x i8] c"The document-access policy denied access.\00", align 1
@.str.25 = private unnamed_addr constant [42 x i8] c"Protocols, domains, and ports must match.\00", align 1
@.str.26 = private unnamed_addr constant [61 x i8] c"Scripts may close only the windows that were opened by them.\00", align 1
@.str.27 = private unnamed_addr constant [16 x i8] c"DOMWindow.close\00", align 1
@.str.28 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN5blink10ReportType20kCoopAccessViolationE = external constant [22 x i8], align 16
@.str.29 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.30 = private unnamed_addr constant [25 x i8] c"DOMWindow::DoPostMessage\00", align 1
@.str.31 = private unnamed_addr constant [47 x i8] c"BackForwardCache.SameSite.ActionAfterPagehide2\00", align 1
@.str.32 = private unnamed_addr constant [15 x i8] c"paymentrequest\00", align 1
@_ZTVN5blink25EventTargetWithInlineDataE = linkonce_odr hidden unnamed_addr constant { [29 x i8*] } { [29 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineDataD2Ev to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineDataD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*, %"class.blink::Visitor"*)* @_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*)] }, comdat, align 8
@.str.33 = private unnamed_addr constant [23 x i8] c"blink_gc_plugin_ignore\00", section "llvm.metadata"
@.str.34 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/dom/events/event_target.h\00", section "llvm.metadata"
@_ZN5blink11EventTarget18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@.str.35 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.36 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.37 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink13CoreProbeSink16s_existingAgentsE = external local_unnamed_addr global %"struct.std::__1::atomic", align 4
@.str.38 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/public/common/tokens/multi_token.h\00", align 1
@.str.39 = private unnamed_addr constant [21 x i8] c"Is<InputTokenType>()\00", align 1
@.str.40 = private unnamed_addr constant [24 x i8] c"invalid token type cast\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZN5blink26RuntimeEnabledFeaturesBase49is_capability_delegation_payment_request_enabled_E = external local_unnamed_addr global i8, align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink9DOMWindow18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.42 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.43 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.44 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ConsoleMessage]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink32InputDeviceCapabilitiesConstantsEEEPKcv = private unnamed_addr constant [87 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::InputDeviceCapabilitiesConstants]\00", align 1
@_ZZN5blink11GCInfoTraitINS_32InputDeviceCapabilitiesConstantsEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_32InputDeviceCapabilitiesConstantsEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_32InputDeviceCapabilitiesConstantsEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_32InputDeviceCapabilitiesConstantsEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN7network5mojom5blink31CrossOriginOpenerPolicyReporter5Name_E = external constant [0 x i8], align 1
@.str.45 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.47 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.48 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9DOMWindow17CoopAccessMonitorEEEPKcv = private unnamed_addr constant [83 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::DOMWindow::CoopAccessMonitor]\00", align 1
@_ZTVN5blink6ReportE = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::Report"*)* @_ZN5blink6ReportD2Ev to i8*), i8* bitcast (void (%"class.blink::Report"*)* @_ZN5blink6ReportD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::Report"*, %"class.blink::Visitor"*)* @_ZNK5blink6Report5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::Report"*)* @_ZNK5blink6Report18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, comdat, align 8
@_ZN5blink6Report18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.49 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1
@_ZZN5blink9DOMWindow13DoPostMessageE13scoped_refptrINS_21SerializedScriptValueEERKNS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEPKNS_24WindowPostMessageOptionsEPNS_14LocalDOMWindowERNS_14ExceptionStateEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN5blink9DOMWindowD1Ev = hidden unnamed_addr alias void (%"class.blink::DOMWindow"*), void (%"class.blink::DOMWindow"*)* @_ZN5blink9DOMWindowD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9DOMWindowC2ERNS_5FrameE(%"class.blink::DOMWindow"*, %"class.blink::Frame"* dereferenceable(392)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink11EventTargetC2Ev(%"class.blink::EventTarget"* %3) #9
  %4 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.blink::EventTargetData"* %5 to i8*
  %7 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.34, i64 0, i64 0), i32 261) #9
  %8 = bitcast i8* %7 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataC1Ev(%"class.blink::EventTargetData"* %8) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*] }, { [33 x i8*] }* @_ZTVN5blink9DOMWindowE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %9 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::Frame"* %1, %"class.blink::Frame"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %1, i64 0, i32 10, i32 0, i32 0
  %12 = bitcast %"class.blink::WindowProxyManager"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.blink::Member.10"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 3, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 6
  %17 = bitcast %"class.WTF::Vector.224"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #9
  %18 = bitcast %"class.blink::InputDeviceCapabilitiesConstants"** %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 17, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9DOMWindowD2Ev(%"class.blink::DOMWindow"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*] }, { [33 x i8*] }* @_ZTVN5blink9DOMWindowE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 6
  %4 = getelementptr inbounds %"class.WTF::Vector.224", %"class.WTF::Vector.224"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.blink::DOMWindow::CoopAccessMonitor"*, %"struct.blink::DOMWindow::CoopAccessMonitor"** %4, align 8
  %6 = icmp eq %"struct.blink::DOMWindow::CoopAccessMonitor"* %5, null
  br i1 %6, label %52, label %7, !prof !2

7:                                                ; preds = %1
  %8 = bitcast %"struct.blink::DOMWindow::CoopAccessMonitor"* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %50, label %12, !prof !3

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %5, i64 %13
  br label %15

15:                                               ; preds = %12, %43
  %16 = phi %"struct.blink::DOMWindow::CoopAccessMonitor"* [ %45, %43 ], [ %5, %12 ]
  %17 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %16, i64 0, i32 4, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #9
  br label %33

33:                                               ; preds = %32, %29, %15
  %34 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %16, i64 0, i32 2
  %35 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %16, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*, %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"** %35, align 8
  store %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* null, %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"** %35, align 8
  %37 = icmp eq %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* %36 to void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)***
  %40 = load void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)**, void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)*, void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)** %40, i64 1
  %42 = load void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)*, void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)** %41, align 8
  tail call void %42(%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* nonnull %36) #9
  br label %43

43:                                               ; preds = %38, %33
  %44 = bitcast %"class.mojo::Remote"* %34 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %44) #9
  %45 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %16, i64 1
  %46 = icmp eq %"struct.blink::DOMWindow::CoopAccessMonitor"* %45, %14
  br i1 %46, label %47, label %15

47:                                               ; preds = %43
  store i32 0, i32* %9, align 4
  %48 = bitcast %"class.WTF::Vector.224"* %3 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %7
  %51 = phi i8* [ %49, %47 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #9
  store %"struct.blink::DOMWindow::CoopAccessMonitor"* null, %"struct.blink::DOMWindow::CoopAccessMonitor"** %4, align 8
  br label %52

52:                                               ; preds = %1, %50
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %53 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 0, i32 1
  %54 = bitcast %"class.blink::EventTargetData"* %53 to i8*
  %55 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %54, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.34, i64 0, i64 0), i32 261) #9
  %56 = bitcast i8* %55 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"* %56) #9
  %57 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"* %57) #9
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink9DOMWindowD0Ev(%"class.blink::DOMWindow"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZN5blink9DOMWindow4WrapEPNS_11ScriptStateE(%"class.blink::DOMWindow"* nocapture readonly, %"class.blink::ScriptState"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::Frame"*, %"class.blink::Frame"** %3, align 8
  %5 = icmp eq %"class.blink::Frame"* %4, null
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::ScriptState"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 176
  %10 = inttoptr i64 %9 to %"class.v8::Value"*
  br label %17

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 2, i32 0
  %13 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %12, align 8
  %14 = tail call %"class.blink::WindowProxy"* @_ZN5blink5Frame14GetWindowProxyERNS_15DOMWrapperWorldE(%"class.blink::Frame"* nonnull %4, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %13) #9
  %15 = tail call %"class.v8::Object"* @_ZN5blink11WindowProxy24GlobalProxyIfNotDetachedEv(%"class.blink::WindowProxy"* %14) #9
  %16 = bitcast %"class.v8::Object"* %15 to %"class.v8::Value"*
  br label %17

17:                                               ; preds = %11, %6
  %18 = phi %"class.v8::Value"* [ %10, %6 ], [ %16, %11 ]
  ret %"class.v8::Value"* %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.blink::WindowProxy"* @_ZN5blink5Frame14GetWindowProxyERNS_15DOMWrapperWorldE(%"class.blink::Frame"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #4

declare %"class.v8::Object"* @_ZN5blink11WindowProxy24GlobalProxyIfNotDetachedEv(%"class.blink::WindowProxy"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.v8::Object"* @_ZN5blink9DOMWindow20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::DOMWindow"* nocapture readnone, %"class.v8::Isolate"* nocapture readnone, %"struct.blink::WrapperTypeInfo"* nocapture readnone, %"class.v8::Object"* nocapture readnone) unnamed_addr #5 align 2 {
  ret %"class.v8::Object"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink9DOMWindow13InterfaceNameEv(%"class.blink::DOMWindow"* nocapture readnone) unnamed_addr #5 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink18event_target_names7kWindowE, align 8
  ret %"class.WTF::AtomicString"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.blink::DOMWindow"* @_ZNK5blink9DOMWindow11ToDOMWindowEv(%"class.blink::DOMWindow"* readnone returned) unnamed_addr #5 align 2 {
  ret %"class.blink::DOMWindow"* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink9DOMWindow27IsWindowOrWorkerGlobalScopeEv(%"class.blink::DOMWindow"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Location"* @_ZNK5blink9DOMWindow8locationEv(%"class.blink::DOMWindow"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.blink::Member.220", %"class.blink::Member.220"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::Location"*, %"class.blink::Location"** %3, align 8
  %5 = icmp eq %"class.blink::Location"* %4, null
  br i1 %5, label %6, label %21

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 24) #9
  %8 = bitcast i8* %7 to %"class.blink::Location"*
  tail call void @_ZN5blink8LocationC1EPNS_9DOMWindowE(%"class.blink::Location"* %8, %"class.blink::DOMWindow"* %0) #9
  %9 = getelementptr inbounds i8, i8* %7, i64 -4
  %10 = bitcast i8* %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = or i16 %11, 1
  store atomic i16 %12, i16* %10 release, align 2
  %13 = ptrtoint i8* %7 to i64
  %14 = bitcast %"class.blink::Member.220"* %2 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %16 = icmp eq i32 %15, 0
  %17 = bitcast i8* %7 to %"class.blink::Location"*
  br i1 %16, label %21, label %18

18:                                               ; preds = %6
  %19 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %7) #9
  %20 = load %"class.blink::Location"*, %"class.blink::Location"** %3, align 8
  br label %21

21:                                               ; preds = %1, %18, %6
  %22 = phi %"class.blink::Location"* [ %4, %1 ], [ %20, %18 ], [ %17, %6 ]
  ret %"class.blink::Location"* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9DOMWindow6closedEv(%"class.blink::DOMWindow"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 8, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::Frame"*, %"class.blink::Frame"** %6, align 8
  %8 = icmp eq %"class.blink::Frame"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* nonnull %7) #9
  %11 = icmp eq %"class.blink::Page"* %10, null
  br label %12

12:                                               ; preds = %5, %1, %9
  %13 = phi i1 [ true, %5 ], [ true, %1 ], [ %11, %9 ]
  ret i1 %13
}

declare %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9DOMWindow6lengthEv(%"class.blink::DOMWindow"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::Frame"*, %"class.blink::Frame"** %2, align 8
  %4 = icmp eq %"class.blink::Frame"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %3, i64 0, i32 1
  %7 = tail call i32 @_ZNK5blink9FrameTree16ScopedChildCountEv(%"class.blink::FrameTree"* %6) #9
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ]
  ret i32 %9
}

declare i32 @_ZNK5blink9FrameTree16ScopedChildCountEv(%"class.blink::FrameTree"*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::DOMWindow"* @_ZNK5blink9DOMWindow4selfEv(%"class.blink::DOMWindow"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::Frame"*, %"class.blink::Frame"** %2, align 8
  %4 = icmp eq %"class.blink::Frame"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %3, i64 0, i32 4, i32 0, i32 0
  %7 = load %"class.blink::DOMWindow"*, %"class.blink::DOMWindow"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::DOMWindow"* [ %7, %5 ], [ null, %1 ]
  ret %"class.blink::DOMWindow"* %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::DOMWindow"* @_ZNK5blink9DOMWindow6openerEv(%"class.blink::DOMWindow"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::Frame"*, %"class.blink::Frame"** %2, align 8
  %4 = icmp eq %"class.blink::Frame"* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %3, i64 0, i32 9, i32 0, i32 0
  %7 = load %"class.blink::FrameClient"*, %"class.blink::FrameClient"** %6, align 8
  %8 = icmp eq %"class.blink::FrameClient"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %3, i64 0, i32 12, i32 0, i32 0
  %11 = load %"class.blink::Frame"*, %"class.blink::Frame"** %10, align 8
  %12 = icmp eq %"class.blink::Frame"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %11, i64 0, i32 4, i32 0, i32 0
  %15 = load %"class.blink::DOMWindow"*, %"class.blink::DOMWindow"** %14, align 8
  br label %16

16:                                               ; preds = %13, %9, %1, %5
  %17 = phi %"class.blink::DOMWindow"* [ null, %5 ], [ null, %1 ], [ %15, %13 ], [ null, %9 ]
  ret %"class.blink::DOMWindow"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMWindow"* @_ZNK5blink9DOMWindow6parentEv(%"class.blink::DOMWindow"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::Frame"*, %"class.blink::Frame"** %2, align 8
  %4 = icmp eq %"class.blink::Frame"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %3, i64 0, i32 1
  %7 = tail call %"class.blink::Frame"* @_ZNK5blink9FrameTree6ParentEv(%"class.blink::FrameTree"* %6) #9
  %8 = icmp eq %"class.blink::Frame"* %7, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  %10 = load %"class.blink::Frame"*, %"class.blink::Frame"** %2, align 8
  br label %11

11:                                               ; preds = %5, %9
  %12 = phi %"class.blink::Frame"* [ %10, %9 ], [ %7, %5 ]
  %13 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %12, i64 0, i32 4, i32 0, i32 0
  %14 = load %"class.blink::DOMWindow"*, %"class.blink::DOMWindow"** %13, align 8
  br label %15

15:                                               ; preds = %11, %1
  %16 = phi %"class.blink::DOMWindow"* [ null, %1 ], [ %14, %11 ]
  ret %"class.blink::DOMWindow"* %16
}

declare %"class.blink::Frame"* @_ZNK5blink9FrameTree6ParentEv(%"class.blink::FrameTree"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMWindow"* @_ZNK5blink9DOMWindow3topEv(%"class.blink::DOMWindow"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::Frame"*, %"class.blink::Frame"** %2, align 8
  %4 = icmp eq %"class.blink::Frame"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %3, i64 0, i32 1
  %7 = tail call dereferenceable(392) %"class.blink::Frame"* @_ZNK5blink9FrameTree3TopEv(%"class.blink::FrameTree"* %6) #9
  %8 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %7, i64 0, i32 4, i32 0, i32 0
  %9 = load %"class.blink::DOMWindow"*, %"class.blink::DOMWindow"** %8, align 8
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %"class.blink::DOMWindow"* [ %9, %5 ], [ null, %1 ]
  ret %"class.blink::DOMWindow"* %11
}

declare dereferenceable(392) %"class.blink::Frame"* @_ZNK5blink9FrameTree3TopEv(%"class.blink::FrameTree"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9DOMWindow11postMessageEPN2v87IsolateERKNS_11ScriptValueERKN3WTF6StringERNS_10HeapVectorIS4_Lj0EEERNS_14ExceptionStateE(%"class.blink::DOMWindow"*, %"class.v8::Isolate"*, %"class.blink::ScriptValue"* dereferenceable(24), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::HeapVector.2031"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 48) #9
  %8 = bitcast i8* %7 to %"class.blink::WindowPostMessageOptions"*
  tail call void @_ZN5blink24WindowPostMessageOptionsC1Ev(%"class.blink::WindowPostMessageOptions"* %8) #9
  %9 = getelementptr inbounds i8, i8* %7, i64 -4
  %10 = bitcast i8* %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = or i16 %11, 1
  store atomic i16 %12, i16* %10 release, align 2
  %13 = getelementptr inbounds i8, i8* %7, i64 40
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %34, label %17

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i33
  %26 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %25, i33 1) #9
  %27 = extractvalue { i33, i1 } %26, 1
  %28 = extractvalue { i33, i1 } %26, 0
  %29 = icmp slt i33 %28, 0
  %30 = or i1 %27, %29
  br i1 %30, label %31, label %32, !prof !3

31:                                               ; preds = %22
  tail call void @llvm.trap() #9
  unreachable

32:                                               ; preds = %22
  %33 = trunc i33 %28 to i32
  store i32 %33, i32* %23, align 4
  br label %34

34:                                               ; preds = %32, %17, %6
  %35 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %36 = bitcast i8* %13 to i64*
  %37 = bitcast i8* %13 to %"class.WTF::StringImpl"**
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  store i64 %35, i64* %36, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #9
  br label %53

53:                                               ; preds = %34, %49, %52
  %54 = getelementptr inbounds %"class.blink::HeapVector.2031", %"class.blink::HeapVector.2031"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %53
  %58 = bitcast i8* %7 to %"class.blink::PostMessageOptions"*
  tail call void @_ZN5blink18PostMessageOptions11setTransferERKNS_10HeapVectorINS_11ScriptValueELj0EEE(%"class.blink::PostMessageOptions"* %58, %"class.blink::HeapVector.2031"* dereferenceable(16) %4) #9
  br label %59

59:                                               ; preds = %57, %53
  tail call void @_ZN5blink9DOMWindow11postMessageEPN2v87IsolateERKNS_11ScriptValueEPKNS_24WindowPostMessageOptionsERNS_14ExceptionStateE(%"class.blink::DOMWindow"* %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptValue"* dereferenceable(24) %2, %"class.blink::WindowPostMessageOptions"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %5)
  ret void
}

declare void @_ZN5blink18PostMessageOptions11setTransferERKNS_10HeapVectorINS_11ScriptValueELj0EEE(%"class.blink::PostMessageOptions"*, %"class.blink::HeapVector.2031"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9DOMWindow11postMessageEPN2v87IsolateERKNS_11ScriptValueEPKNS_24WindowPostMessageOptionsERNS_14ExceptionStateE(%"class.blink::DOMWindow"*, %"class.v8::Isolate"*, %"class.blink::ScriptValue"* dereferenceable(24), %"class.blink::WindowPostMessageOptions"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::Transferables", align 8
  %7 = tail call %"class.blink::LocalDOMWindow"* @_ZN5blink18IncumbentDOMWindowEPN2v87IsolateE(%"class.v8::Isolate"* %1) #9
  %8 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %7) #9
  %9 = icmp eq %"class.blink::Document"* %8, null
  %10 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %8, i64 0, i32 2
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %5
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 574) #9
  br label %18

18:                                               ; preds = %5, %13
  %19 = bitcast %"class.blink::Transferables"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %19) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 152, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 148, i1 false) #9
  %20 = getelementptr inbounds %"class.blink::WindowPostMessageOptions", %"class.blink::WindowPostMessageOptions"* %3, i64 0, i32 0
  %21 = call %"class.blink::SerializedScriptValue"* @_ZN5blink17PostMessageHelper22SerializeMessageByMoveEPN2v87IsolateERKNS_11ScriptValueEPKNS_18PostMessageOptionsERNS_13TransferablesERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.blink::ScriptValue"* dereferenceable(24) %2, %"class.blink::PostMessageOptions"* %20, %"class.blink::Transferables"* nonnull dereferenceable(152) %6, %"class.blink::ExceptionState"* dereferenceable(72) %4) #9
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %6, i64 0, i32 3
  call void @_ZN5blink9DOMWindow13DoPostMessageE13scoped_refptrINS_21SerializedScriptValueEERKNS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEPKNS_24WindowPostMessageOptionsEPNS_14LocalDOMWindowERNS_14ExceptionStateE(%"class.blink::DOMWindow"* %0, %"class.blink::SerializedScriptValue"* %21, %"class.blink::HeapVector.2065"* dereferenceable(16) %26, %"class.blink::WindowPostMessageOptions"* %3, %"class.blink::LocalDOMWindow"* %7, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  br label %35

27:                                               ; preds = %18
  %28 = icmp eq %"class.blink::SerializedScriptValue"* %21, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %35

33:                                               ; preds = %29
  call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %21) #9
  %34 = bitcast %"class.blink::SerializedScriptValue"* %21 to i8*
  call void @free(i8* %34) #9
  br label %35

35:                                               ; preds = %25, %27, %29, %33
  call void @_ZN5blink13TransferablesD1Ev(%"class.blink::Transferables"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %19) #9
  ret void
}

declare %"class.blink::LocalDOMWindow"* @_ZN5blink18IncumbentDOMWindowEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #4

declare %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare %"class.blink::SerializedScriptValue"* @_ZN5blink17PostMessageHelper22SerializeMessageByMoveEPN2v87IsolateERKNS_11ScriptValueEPKNS_18PostMessageOptionsERNS_13TransferablesERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.blink::ScriptValue"* dereferenceable(24), %"class.blink::PostMessageOptions"*, %"class.blink::Transferables"* dereferenceable(152), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9DOMWindow13DoPostMessageE13scoped_refptrINS_21SerializedScriptValueEERKNS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEPKNS_24WindowPostMessageOptionsEPNS_14LocalDOMWindowERNS_14ExceptionStateE(%"class.blink::DOMWindow"*, %"class.blink::SerializedScriptValue"*, %"class.blink::HeapVector.2065"* dereferenceable(16), %"class.blink::WindowPostMessageOptions"*, %"class.blink::LocalDOMWindow"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %class.scoped_refptr.1212, align 8
  %10 = alloca %"class.blink::EventTarget"*, align 8
  %11 = alloca %"class.blink::UserActivation"*, align 8
  %12 = alloca i8, align 1
  %13 = alloca %"class.logging::CheckError", align 8
  %14 = alloca %"class.base::TimeTicks", align 8
  %15 = alloca %"class.WTF::Vector.2193", align 8
  %16 = alloca %"class.blink::KURL", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.WTF::Vector.1139", align 8
  %19 = alloca %"class.WTF::Vector.2193", align 8
  %20 = alloca %"class.WTF::String", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = ptrtoint %"class.blink::SerializedScriptValue"* %1 to i64
  %23 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %24 = and i8 %23, 25
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %32, label %26, !prof !2

26:                                               ; preds = %6
  %27 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %28 = bitcast %"class.base::TimeTicks"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %14, i64 0, i32 0, i32 0
  %30 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %30, i64* %29, align 8
  %31 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.30, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %27, %"class.base::TimeTicks"* nonnull dereferenceable(8) %14, %"class.base::trace_event::TraceArguments"* null, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %32

32:                                               ; preds = %6, %26
  %33 = phi i8* [ null, %6 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %26 ]
  %34 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %6 ], [ getelementptr inbounds ([25 x i8], [25 x i8]* @.str.30, i64 0, i64 0), %26 ]
  %35 = phi i64 [ -6148914691236517206, %6 ], [ %31, %26 ]
  %36 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %37 = bitcast %"class.blink::Frame"** %36 to %"class.blink::LocalFrame"**
  %38 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %37, align 8
  %39 = icmp eq %"class.blink::LocalFrame"* %38, null
  br i1 %39, label %68, label %40

40:                                               ; preds = %32
  %41 = call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* nonnull %38) #9
  %42 = icmp eq %"class.blink::Document"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %40
  %44 = call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* nonnull %38) #9
  %45 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %44, i64 0, i32 85
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 7
  br i1 %47, label %68, label %48

48:                                               ; preds = %40, %43
  %49 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %38, i64 0, i32 0
  %50 = call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %49) #9
  %51 = icmp eq %"class.blink::Page"* %50, null
  br i1 %51, label %68, label %52

52:                                               ; preds = %48
  %53 = call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %49) #9
  %54 = call zeroext i1 @_ZN5blink4Page32DispatchedPagehideAndStillHiddenEv(%"class.blink::Page"* %53) #9
  br i1 %54, label %55, label %68

55:                                               ; preds = %52
  %56 = load atomic i64, i64* @_ZZN5blink9DOMWindow13DoPostMessageE13scoped_refptrINS_21SerializedScriptValueEERKNS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEPKNS_24WindowPostMessageOptionsEPNS_14LocalDOMWindowERNS_14ExceptionStateEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %57 = inttoptr i64 %56 to %"class.base::HistogramBase"*
  %58 = icmp eq i64 %56, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %55
  %60 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.31, i64 0, i64 0), i32 1, i32 5, i32 6, i32 1) #9
  %61 = ptrtoint %"class.base::HistogramBase"* %60 to i64
  store atomic i64 %61, i64* @_ZZN5blink9DOMWindow13DoPostMessageE13scoped_refptrINS_21SerializedScriptValueEERKNS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEPKNS_24WindowPostMessageOptionsEPNS_14LocalDOMWindowERNS_14ExceptionStateEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %62

62:                                               ; preds = %55, %59
  %63 = phi %"class.base::HistogramBase"* [ %57, %55 ], [ %60, %59 ]
  %64 = bitcast %"class.base::HistogramBase"* %63 to void (%"class.base::HistogramBase"*, i32)***
  %65 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %65, i64 6
  %67 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %66, align 8
  call void %67(%"class.base::HistogramBase"* %63, i32 1) #9
  br label %68

68:                                               ; preds = %43, %32, %48, %62, %52
  %69 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 1, i32 0, i32 0
  %70 = load %"class.blink::Frame"*, %"class.blink::Frame"** %69, align 8
  %71 = icmp eq %"class.blink::Frame"* %70, null
  br i1 %71, label %723, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %70, i64 0, i32 4, i32 0, i32 0
  %74 = load %"class.blink::DOMWindow"*, %"class.blink::DOMWindow"** %73, align 8
  %75 = icmp eq %"class.blink::DOMWindow"* %74, %0
  br i1 %75, label %81, label %76

76:                                               ; preds = %72
  %77 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 180, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0)) #9
  %78 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #9
  %79 = load %"class.blink::Frame"*, %"class.blink::Frame"** %69, align 8
  %80 = icmp eq %"class.blink::Frame"* %79, null
  br i1 %80, label %723, label %81

81:                                               ; preds = %72, %76
  %82 = phi %"class.blink::Frame"* [ %79, %76 ], [ %70, %72 ]
  %83 = call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* nonnull %82) #9
  %84 = icmp eq %"class.blink::Page"* %83, null
  br i1 %84, label %723, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %4, i64 0, i32 1
  %87 = bitcast %"class.blink::ExecutionContext.base"* %86 to %"class.blink::ExecutionContext"*
  %88 = call %"class.blink::SecurityOrigin"* @_ZN5blink17PostMessageHelper15GetTargetOriginEPKNS_24WindowPostMessageOptionsERKNS_16ExecutionContextERNS_14ExceptionStateE(%"class.blink::WindowPostMessageOptions"* %3, %"class.blink::ExecutionContext"* dereferenceable(376) %87, %"class.blink::ExceptionState"* dereferenceable(72) %5) #9
  %89 = ptrtoint %"class.blink::SecurityOrigin"* %88 to i64
  %90 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  %91 = load i32, i32* %90, align 8
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %711

93:                                               ; preds = %85
  %94 = icmp eq %"class.blink::SecurityOrigin"* %88, null
  br i1 %94, label %95, label %105

95:                                               ; preds = %93
  %96 = icmp eq %"class.blink::LocalDOMWindow"* %4, null
  %97 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %4, i64 0, i32 1, i32 3
  %98 = icmp eq %"class.blink::UseCounter"* %97, null
  %99 = or i1 %96, %98
  br i1 %99, label %105, label %100

100:                                              ; preds = %95
  %101 = bitcast %"class.blink::UseCounter"* %97 to void (%"class.blink::UseCounter"*, i32)***
  %102 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %102, i64 3
  %104 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %103, align 8
  call void %104(%"class.blink::UseCounter"* nonnull %97, i32 3414) #9
  br label %105

105:                                              ; preds = %93, %100, %95
  %106 = bitcast %"class.WTF::Vector.2193"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %106) #9
  %107 = getelementptr inbounds %"class.WTF::Vector.2193", %"class.WTF::Vector.2193"* %15, i64 0, i32 0, i32 0, i32 0
  %108 = getelementptr inbounds %"class.WTF::Vector.2193", %"class.WTF::Vector.2193"* %15, i64 0, i32 0, i32 0, i32 1
  %109 = getelementptr inbounds %"class.WTF::Vector.2193", %"class.WTF::Vector.2193"* %15, i64 0, i32 0, i32 0, i32 2
  %110 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 0, i32 0
  %111 = bitcast %"class.blink::DOMWindow"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)***
  %112 = bitcast %"class.WTF::Vector.2193"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 -86, i64 16, i1 false)
  %113 = load %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)**, %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)*** %111, align 8
  %114 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)*, %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)** %113, i64 10
  %115 = load %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)*, %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)** %114, align 8
  %116 = call %"class.blink::ExecutionContext"* %115(%"class.blink::EventTarget"* %110) #9
  call void @_ZN5blink11MessagePort16DisentanglePortsEPNS_16ExecutionContextERKNS_10HeapVectorINS_6MemberIS0_EELj0EEERNS_14ExceptionStateE(%"class.WTF::Vector.2193"* nonnull sret %15, %"class.blink::ExecutionContext"* %116, %"class.blink::HeapVector.2065"* dereferenceable(16) %2, %"class.blink::ExceptionState"* dereferenceable(72) %5) #9
  %117 = load i32, i32* %90, align 8
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %688

119:                                              ; preds = %105
  %120 = load %"class.blink::Frame"*, %"class.blink::Frame"** %69, align 8
  %121 = bitcast %"class.blink::Frame"* %120 to %"class.blink::SecurityContext"* (%"class.blink::Frame"*)***
  %122 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)**, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*** %121, align 8
  %123 = getelementptr inbounds %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %122, i64 10
  %124 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %123, align 8
  %125 = call %"class.blink::SecurityContext"* %124(%"class.blink::Frame"* %120) #9
  %126 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %125, i64 0, i32 2, i32 0
  %127 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %126, align 8
  %128 = call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %87) #9
  %129 = call zeroext i1 @_ZNK5blink14SecurityOrigin24IsPotentiallyTrustworthyEv(%"class.blink::SecurityOrigin"* %128) #9
  %130 = call zeroext i1 @_ZNK5blink14SecurityOrigin24IsPotentiallyTrustworthyEv(%"class.blink::SecurityOrigin"* %127) #9
  %131 = icmp eq %"class.blink::LocalDOMWindow"* %4, null
  %132 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %4, i64 0, i32 1, i32 3
  %133 = select i1 %131, %"class.blink::UseCounter"* null, %"class.blink::UseCounter"* %132
  %134 = icmp eq %"class.blink::UseCounter"* %133, null
  br i1 %130, label %135, label %166

135:                                              ; preds = %119
  br i1 %129, label %136, label %142

136:                                              ; preds = %135
  br i1 %134, label %179, label %137

137:                                              ; preds = %136
  %138 = bitcast %"class.blink::UseCounter"* %133 to void (%"class.blink::UseCounter"*, i32)***
  %139 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %138, align 8
  %140 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %139, i64 3
  %141 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %140, align 8
  call void %141(%"class.blink::UseCounter"* nonnull %133, i32 3882) #9
  br label %179

142:                                              ; preds = %135
  br i1 %134, label %148, label %143

143:                                              ; preds = %142
  %144 = bitcast %"class.blink::UseCounter"* %133 to void (%"class.blink::UseCounter"*, i32)***
  %145 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %144, align 8
  %146 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %145, i64 3
  %147 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %146, align 8
  call void %147(%"class.blink::UseCounter"* nonnull %133, i32 420) #9
  br label %148

148:                                              ; preds = %142, %143
  %149 = load %"class.blink::Frame"*, %"class.blink::Frame"** %69, align 8
  %150 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %149, i64 0, i32 1
  %151 = call dereferenceable(392) %"class.blink::Frame"* @_ZNK5blink9FrameTree3TopEv(%"class.blink::FrameTree"* %150) #9
  %152 = bitcast %"class.blink::Frame"* %151 to %"class.blink::SecurityContext"* (%"class.blink::Frame"*)***
  %153 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)**, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*** %152, align 8
  %154 = getelementptr inbounds %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %153, i64 10
  %155 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %154, align 8
  %156 = call %"class.blink::SecurityContext"* %155(%"class.blink::Frame"* %151) #9
  %157 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %156, i64 0, i32 2, i32 0
  %158 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %157, align 8
  %159 = call zeroext i1 @_ZNK5blink14SecurityOrigin24IsPotentiallyTrustworthyEv(%"class.blink::SecurityOrigin"* %158) #9
  %160 = or i1 %134, %159
  br i1 %160, label %179, label %161

161:                                              ; preds = %148
  %162 = bitcast %"class.blink::UseCounter"* %133 to void (%"class.blink::UseCounter"*, i32)***
  %163 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %162, align 8
  %164 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %163, i64 3
  %165 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %164, align 8
  call void %165(%"class.blink::UseCounter"* nonnull %133, i32 1787) #9
  br label %179

166:                                              ; preds = %119
  br i1 %129, label %167, label %173

167:                                              ; preds = %166
  br i1 %134, label %179, label %168

168:                                              ; preds = %167
  %169 = bitcast %"class.blink::UseCounter"* %133 to void (%"class.blink::UseCounter"*, i32)***
  %170 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %169, align 8
  %171 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %170, i64 3
  %172 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %171, align 8
  call void %172(%"class.blink::UseCounter"* nonnull %133, i32 419) #9
  br label %179

173:                                              ; preds = %166
  br i1 %134, label %179, label %174

174:                                              ; preds = %173
  %175 = bitcast %"class.blink::UseCounter"* %133 to void (%"class.blink::UseCounter"*, i32)***
  %176 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %175, align 8
  %177 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %176, i64 3
  %178 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %177, align 8
  call void %178(%"class.blink::UseCounter"* nonnull %133, i32 3883) #9
  br label %179

179:                                              ; preds = %148, %174, %173, %168, %167, %161, %137, %136
  %180 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %37, align 8
  %181 = icmp eq %"class.blink::LocalFrame"* %180, null
  br i1 %181, label %448, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %180, i64 0, i32 0, i32 1
  %184 = call dereferenceable(392) %"class.blink::Frame"* @_ZNK5blink9FrameTree3TopEv(%"class.blink::FrameTree"* %183) #9
  %185 = load %"class.blink::Frame"*, %"class.blink::Frame"** %69, align 8
  %186 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %185, i64 0, i32 1
  %187 = call dereferenceable(392) %"class.blink::Frame"* @_ZNK5blink9FrameTree3TopEv(%"class.blink::FrameTree"* %186) #9
  %188 = icmp eq %"class.blink::Frame"* %184, %187
  br i1 %188, label %448, label %189

189:                                              ; preds = %182
  %190 = call %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin17RegistrableDomainEv(%"class.blink::SecurityOrigin"* %127) #9
  %191 = icmp eq %"class.WTF::StringImpl"* %190, null
  br i1 %191, label %192, label %236

192:                                              ; preds = %189
  %193 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %127, i64 0, i32 2, i32 0, i32 0
  %194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %193, align 8
  %195 = icmp eq %"class.WTF::StringImpl"* %194, null
  br i1 %195, label %213, label %196

196:                                              ; preds = %192
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load atomic i32, i32* %197 monotonic, align 4
  %199 = and i32 %198, 2
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %213

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 0
  %203 = load i32, i32* %202, align 4
  %204 = zext i32 %203 to i33
  %205 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %204, i33 1) #9
  %206 = extractvalue { i33, i1 } %205, 1
  %207 = extractvalue { i33, i1 } %205, 0
  %208 = icmp slt i33 %207, 0
  %209 = or i1 %206, %208
  br i1 %209, label %210, label %211, !prof !3

210:                                              ; preds = %201
  call void @llvm.trap() #9
  unreachable

211:                                              ; preds = %201
  %212 = trunc i33 %207 to i32
  store i32 %212, i32* %202, align 4
  br label %213

213:                                              ; preds = %192, %196, %211
  %214 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %128, i64 0, i32 2, i32 0, i32 0
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %214, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %234, label %217

217:                                              ; preds = %213
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load atomic i32, i32* %218 monotonic, align 4
  %220 = and i32 %219, 2
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %234

222:                                              ; preds = %217
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %224 = load i32, i32* %223, align 4
  %225 = zext i32 %224 to i33
  %226 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %225, i33 1) #9
  %227 = extractvalue { i33, i1 } %226, 1
  %228 = extractvalue { i33, i1 } %226, 0
  %229 = icmp slt i33 %228, 0
  %230 = or i1 %227, %229
  br i1 %230, label %231, label %232, !prof !3

231:                                              ; preds = %222
  call void @llvm.trap() #9
  unreachable

232:                                              ; preds = %222
  %233 = trunc i33 %228 to i32
  store i32 %233, i32* %223, align 4
  br label %234

234:                                              ; preds = %213, %217, %232
  %235 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %194, %"class.WTF::StringImpl"* %215) #9
  br i1 %235, label %290, label %236

236:                                              ; preds = %189, %234
  %237 = phi %"class.WTF::StringImpl"* [ undef, %189 ], [ %194, %234 ]
  %238 = phi %"class.WTF::StringImpl"* [ undef, %189 ], [ %215, %234 ]
  %239 = phi i1 [ false, %189 ], [ true, %234 ]
  %240 = call %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin17RegistrableDomainEv(%"class.blink::SecurityOrigin"* %127) #9
  %241 = icmp eq %"class.WTF::StringImpl"* %240, null
  br i1 %241, label %242, label %243

242:                                              ; preds = %236
  br i1 %239, label %290, label %323

243:                                              ; preds = %236
  %244 = call %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin17RegistrableDomainEv(%"class.blink::SecurityOrigin"* %127) #9
  %245 = call %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin17RegistrableDomainEv(%"class.blink::SecurityOrigin"* %128) #9
  %246 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %244, %"class.WTF::StringImpl"* %245) #9
  %247 = icmp eq %"class.WTF::StringImpl"* %245, null
  br i1 %247, label %261, label %248

248:                                              ; preds = %243
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = load atomic i32, i32* %249 monotonic, align 4
  %251 = and i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 0
  %254 = load i32, i32* %253, align 4
  br i1 %252, label %255, label %257

255:                                              ; preds = %248
  %256 = add i32 %254, -1
  store i32 %256, i32* %253, align 4
  br label %257

257:                                              ; preds = %255, %248
  %258 = phi i32 [ %256, %255 ], [ %254, %248 ]
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %261

260:                                              ; preds = %257
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %245) #9
  br label %261

261:                                              ; preds = %243, %257, %260
  %262 = icmp eq %"class.WTF::StringImpl"* %244, null
  br i1 %262, label %276, label %263

263:                                              ; preds = %261
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %265 = load atomic i32, i32* %264 monotonic, align 4
  %266 = and i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 0, i32 0
  %269 = load i32, i32* %268, align 4
  br i1 %267, label %270, label %272

270:                                              ; preds = %263
  %271 = add i32 %269, -1
  store i32 %271, i32* %268, align 4
  br label %272

272:                                              ; preds = %270, %263
  %273 = phi i32 [ %271, %270 ], [ %269, %263 ]
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %276

275:                                              ; preds = %272
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %244) #9
  br label %276

276:                                              ; preds = %275, %272, %261
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %278 = load atomic i32, i32* %277 monotonic, align 4
  %279 = and i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 0
  %282 = load i32, i32* %281, align 4
  br i1 %280, label %283, label %285

283:                                              ; preds = %276
  %284 = add i32 %282, -1
  store i32 %284, i32* %281, align 4
  br label %285

285:                                              ; preds = %283, %276
  %286 = phi i32 [ %284, %283 ], [ %282, %276 ]
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %289

288:                                              ; preds = %285
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %240) #9
  br i1 %239, label %290, label %323

289:                                              ; preds = %285
  br i1 %239, label %290, label %323

290:                                              ; preds = %234, %288, %242, %289
  %291 = phi i1 [ %246, %289 ], [ false, %242 ], [ %246, %288 ], [ true, %234 ]
  %292 = phi %"class.WTF::StringImpl"* [ %238, %289 ], [ %238, %242 ], [ %238, %288 ], [ %215, %234 ]
  %293 = phi %"class.WTF::StringImpl"* [ %237, %289 ], [ %237, %242 ], [ %237, %288 ], [ %194, %234 ]
  %294 = icmp eq %"class.WTF::StringImpl"* %292, null
  br i1 %294, label %308, label %295

295:                                              ; preds = %290
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %297 = load atomic i32, i32* %296 monotonic, align 4
  %298 = and i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 0, i32 0
  %301 = load i32, i32* %300, align 4
  br i1 %299, label %302, label %304

302:                                              ; preds = %295
  %303 = add i32 %301, -1
  store i32 %303, i32* %300, align 4
  br label %304

304:                                              ; preds = %302, %295
  %305 = phi i32 [ %303, %302 ], [ %301, %295 ]
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %308

307:                                              ; preds = %304
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %292) #9
  br label %308

308:                                              ; preds = %290, %304, %307
  %309 = icmp eq %"class.WTF::StringImpl"* %293, null
  br i1 %309, label %323, label %310

310:                                              ; preds = %308
  %311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load atomic i32, i32* %311 monotonic, align 4
  %313 = and i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 0
  %316 = load i32, i32* %315, align 4
  br i1 %314, label %317, label %319

317:                                              ; preds = %310
  %318 = add i32 %316, -1
  store i32 %318, i32* %315, align 4
  br label %319

319:                                              ; preds = %317, %310
  %320 = phi i32 [ %318, %317 ], [ %316, %310 ]
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %322, label %323

322:                                              ; preds = %319
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %293) #9
  br label %323

323:                                              ; preds = %322, %319, %308, %288, %242, %289
  %324 = phi i1 [ %246, %289 ], [ false, %242 ], [ %246, %288 ], [ %291, %308 ], [ %291, %319 ], [ %291, %322 ]
  br i1 %191, label %338, label %325

325:                                              ; preds = %323
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %327 = load atomic i32, i32* %326 monotonic, align 4
  %328 = and i32 %327, 2
  %329 = icmp eq i32 %328, 0
  %330 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 0
  %331 = load i32, i32* %330, align 4
  br i1 %329, label %332, label %334

332:                                              ; preds = %325
  %333 = add i32 %331, -1
  store i32 %333, i32* %330, align 4
  br label %334

334:                                              ; preds = %332, %325
  %335 = phi i32 [ %333, %332 ], [ %331, %325 ]
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %338

337:                                              ; preds = %334
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %190) #9
  br label %338

338:                                              ; preds = %323, %334, %337
  br i1 %324, label %339, label %442

339:                                              ; preds = %338
  %340 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %127, i64 0, i32 1, i32 0, i32 0
  %341 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %340, align 8
  %342 = icmp eq %"class.WTF::StringImpl"* %341, null
  br i1 %342, label %360, label %343

343:                                              ; preds = %339
  %344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = load atomic i32, i32* %344 monotonic, align 4
  %346 = and i32 %345, 2
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %348, label %360

348:                                              ; preds = %343
  %349 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 0
  %350 = load i32, i32* %349, align 4
  %351 = zext i32 %350 to i33
  %352 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %351, i33 1) #9
  %353 = extractvalue { i33, i1 } %352, 1
  %354 = extractvalue { i33, i1 } %352, 0
  %355 = icmp slt i33 %354, 0
  %356 = or i1 %353, %355
  br i1 %356, label %357, label %358, !prof !3

357:                                              ; preds = %348
  call void @llvm.trap() #9
  unreachable

358:                                              ; preds = %348
  %359 = trunc i33 %354 to i32
  store i32 %359, i32* %349, align 4
  br label %360

360:                                              ; preds = %339, %343, %358
  %361 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %128, i64 0, i32 1, i32 0, i32 0
  %362 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %361, align 8
  %363 = icmp eq %"class.WTF::StringImpl"* %362, null
  br i1 %363, label %381, label %364

364:                                              ; preds = %360
  %365 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %362, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %366 = load atomic i32, i32* %365 monotonic, align 4
  %367 = and i32 %366, 2
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %369, label %383

369:                                              ; preds = %364
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %362, i64 0, i32 0
  %371 = load i32, i32* %370, align 4
  %372 = zext i32 %371 to i33
  %373 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %372, i33 1) #9
  %374 = extractvalue { i33, i1 } %373, 1
  %375 = extractvalue { i33, i1 } %373, 0
  %376 = icmp slt i33 %375, 0
  %377 = or i1 %374, %376
  br i1 %377, label %378, label %379, !prof !3

378:                                              ; preds = %369
  call void @llvm.trap() #9
  unreachable

379:                                              ; preds = %369
  %380 = trunc i33 %375 to i32
  store i32 %380, i32* %370, align 4
  br label %383

381:                                              ; preds = %360
  %382 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %341, %"class.WTF::StringImpl"* null) #9
  br label %396

383:                                              ; preds = %364, %379
  %384 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %341, %"class.WTF::StringImpl"* nonnull %362) #9
  %385 = load atomic i32, i32* %365 monotonic, align 4
  %386 = and i32 %385, 2
  %387 = icmp eq i32 %386, 0
  %388 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %362, i64 0, i32 0
  %389 = load i32, i32* %388, align 4
  br i1 %387, label %390, label %392

390:                                              ; preds = %383
  %391 = add i32 %389, -1
  store i32 %391, i32* %388, align 4
  br label %392

392:                                              ; preds = %390, %383
  %393 = phi i32 [ %391, %390 ], [ %389, %383 ]
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %395, label %396

395:                                              ; preds = %392
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %362) #9
  br label %396

396:                                              ; preds = %381, %392, %395
  %397 = phi i1 [ %382, %381 ], [ %384, %392 ], [ %384, %395 ]
  br i1 %342, label %411, label %398

398:                                              ; preds = %396
  %399 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %400 = load atomic i32, i32* %399 monotonic, align 4
  %401 = and i32 %400, 2
  %402 = icmp eq i32 %401, 0
  %403 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 0
  %404 = load i32, i32* %403, align 4
  br i1 %402, label %405, label %407

405:                                              ; preds = %398
  %406 = add i32 %404, -1
  store i32 %406, i32* %403, align 4
  br label %407

407:                                              ; preds = %405, %398
  %408 = phi i32 [ %406, %405 ], [ %404, %398 ]
  %409 = icmp eq i32 %408, 0
  br i1 %409, label %410, label %411

410:                                              ; preds = %407
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %341) #9
  br label %411

411:                                              ; preds = %396, %407, %410
  br i1 %397, label %412, label %418

412:                                              ; preds = %411
  br i1 %134, label %448, label %413

413:                                              ; preds = %412
  %414 = bitcast %"class.blink::UseCounter"* %133 to void (%"class.blink::UseCounter"*, i32)***
  %415 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %414, align 8
  %416 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %415, i64 3
  %417 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %416, align 8
  call void %417(%"class.blink::UseCounter"* nonnull %133, i32 3413) #9
  br label %448

418:                                              ; preds = %411
  br i1 %134, label %424, label %419

419:                                              ; preds = %418
  %420 = bitcast %"class.blink::UseCounter"* %133 to void (%"class.blink::UseCounter"*, i32)***
  %421 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %420, align 8
  %422 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %421, i64 3
  %423 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %422, align 8
  call void %423(%"class.blink::UseCounter"* nonnull %133, i32 3412) #9
  br label %424

424:                                              ; preds = %418, %419
  %425 = xor i1 %129, true
  %426 = or i1 %130, %425
  br i1 %426, label %433, label %427

427:                                              ; preds = %424
  br i1 %134, label %448, label %428

428:                                              ; preds = %427
  %429 = bitcast %"class.blink::UseCounter"* %133 to void (%"class.blink::UseCounter"*, i32)***
  %430 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %429, align 8
  %431 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %430, i64 3
  %432 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %431, align 8
  call void %432(%"class.blink::UseCounter"* nonnull %133, i32 3415) #9
  br label %448

433:                                              ; preds = %424
  %434 = xor i1 %130, true
  %435 = or i1 %129, %434
  %436 = or i1 %134, %435
  br i1 %436, label %448, label %437

437:                                              ; preds = %433
  %438 = bitcast %"class.blink::UseCounter"* %133 to void (%"class.blink::UseCounter"*, i32)***
  %439 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %438, align 8
  %440 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %439, i64 3
  %441 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %440, align 8
  call void %441(%"class.blink::UseCounter"* nonnull %133, i32 3416) #9
  br label %448

442:                                              ; preds = %338
  br i1 %134, label %448, label %443

443:                                              ; preds = %442
  %444 = bitcast %"class.blink::UseCounter"* %133 to void (%"class.blink::UseCounter"*, i32)***
  %445 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %444, align 8
  %446 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %445, i64 3
  %447 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %446, align 8
  call void %447(%"class.blink::UseCounter"* nonnull %133, i32 3411) #9
  br label %448

448:                                              ; preds = %182, %433, %443, %442, %437, %428, %427, %413, %412, %179
  %449 = icmp eq %"class.blink::DOMWindow"* %0, null
  br i1 %449, label %456, label %450

450:                                              ; preds = %448
  %451 = bitcast %"class.blink::DOMWindow"* %0 to i1 (%"class.blink::DOMWindow"*)***
  %452 = load i1 (%"class.blink::DOMWindow"*)**, i1 (%"class.blink::DOMWindow"*)*** %451, align 8
  %453 = getelementptr inbounds i1 (%"class.blink::DOMWindow"*)*, i1 (%"class.blink::DOMWindow"*)** %452, i64 27
  %454 = load i1 (%"class.blink::DOMWindow"*)*, i1 (%"class.blink::DOMWindow"*)** %453, align 8
  %455 = call zeroext i1 %454(%"class.blink::DOMWindow"* nonnull %0) #9
  br i1 %455, label %464, label %456

456:                                              ; preds = %450, %448
  %457 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %16, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %457) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %457, i8 -86, i64 112, i1 false)
  %458 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() #9
  %459 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %459) #9
  %460 = call %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin8ToStringEv(%"class.blink::SecurityOrigin"* %127) #9
  %461 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %460, %"class.WTF::StringImpl"** %461, align 8
  call void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"* nonnull %16, %"class.blink::KURL"* dereferenceable(112) %458, %"class.WTF::String"* nonnull dereferenceable(8) %17) #9
  %462 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %461, align 8
  %463 = icmp eq %"class.WTF::StringImpl"* %462, null
  br i1 %463, label %481, label %468

464:                                              ; preds = %450
  %465 = bitcast %"class.blink::DOMWindow"* %0 to %"class.blink::LocalDOMWindow"*
  %466 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %16, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %466) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %466, i8 -86, i64 112, i1 false)
  %467 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink14LocalDOMWindow3UrlEv(%"class.blink::LocalDOMWindow"* nonnull %465) #9
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %16, %"class.blink::KURL"* dereferenceable(112) %467) #9
  br label %482

468:                                              ; preds = %456
  %469 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %462, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %470 = load atomic i32, i32* %469 monotonic, align 4
  %471 = and i32 %470, 2
  %472 = icmp eq i32 %471, 0
  %473 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %462, i64 0, i32 0
  %474 = load i32, i32* %473, align 4
  br i1 %472, label %475, label %477

475:                                              ; preds = %468
  %476 = add i32 %474, -1
  store i32 %476, i32* %473, align 4
  br label %477

477:                                              ; preds = %475, %468
  %478 = phi i32 [ %476, %475 ], [ %474, %468 ]
  %479 = icmp eq i32 %478, 0
  br i1 %479, label %480, label %481

480:                                              ; preds = %477
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %462) #9
  br label %481

481:                                              ; preds = %456, %477, %480
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %459) #9
  br label %482

482:                                              ; preds = %464, %481
  %483 = phi i8* [ %466, %464 ], [ %457, %481 ]
  %484 = call %"class.blink::ContentSecurityPolicy"* @_ZNK5blink16ExecutionContext24GetContentSecurityPolicyEv(%"class.blink::ExecutionContext"* %87) #9
  %485 = call zeroext i1 @_ZN5blink21ContentSecurityPolicy20AllowConnectToSourceERKNS_4KURLES3_NS_19ResourceRequestHead14RedirectStatusENS_20ReportingDispositionENS0_15CheckHeaderTypeE(%"class.blink::ContentSecurityPolicy"* %484, %"class.blink::KURL"* nonnull dereferenceable(112) %16, %"class.blink::KURL"* nonnull dereferenceable(112) %16, i8 zeroext 1, i32 0, i32 0) #9
  %486 = or i1 %134, %485
  br i1 %486, label %492, label %487

487:                                              ; preds = %482
  %488 = bitcast %"class.blink::UseCounter"* %133 to void (%"class.blink::UseCounter"*, i32)***
  %489 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %488, align 8
  %490 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %489, i64 3
  %491 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %490, align 8
  call void %491(%"class.blink::UseCounter"* nonnull %133, i32 1974) #9
  br label %492

492:                                              ; preds = %487, %482
  %493 = getelementptr inbounds %"class.blink::WindowPostMessageOptions", %"class.blink::WindowPostMessageOptions"* %3, i64 0, i32 0, i32 3
  %494 = load i8, i8* %493, align 2, !range !4
  %495 = icmp eq i8 %494, 0
  br i1 %495, label %498, label %496

496:                                              ; preds = %492
  %497 = call %"class.blink::UserActivation"* @_ZN5blink14UserActivation14CreateSnapshotEPNS_14LocalDOMWindowE(%"class.blink::LocalDOMWindow"* %4) #9
  br label %498

498:                                              ; preds = %492, %496
  %499 = phi %"class.blink::UserActivation"* [ %497, %496 ], [ null, %492 ]
  %500 = load %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)**, %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)*** %111, align 8
  %501 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)*, %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)** %500, i64 10
  %502 = load %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)*, %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)** %501, align 8
  %503 = call %"class.blink::ExecutionContext"* %502(%"class.blink::EventTarget"* %110) #9
  %504 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase49is_capability_delegation_payment_request_enabled_E, align 1, !range !4
  %505 = icmp eq i8 %504, 0
  br i1 %505, label %600, label %506

506:                                              ; preds = %498
  %507 = call zeroext i1 @_ZN5blink10LocalFrame26HasTransientUserActivationEPS0_(%"class.blink::LocalFrame"* %38) #9
  br i1 %507, label %508, label %600

508:                                              ; preds = %506
  %509 = getelementptr inbounds %"class.blink::WindowPostMessageOptions", %"class.blink::WindowPostMessageOptions"* %3, i64 0, i32 1, i32 0, i32 0
  %510 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %509, align 8
  %511 = icmp eq %"class.WTF::StringImpl"* %510, null
  br i1 %511, label %600, label %512

512:                                              ; preds = %508
  %513 = bitcast %"class.WTF::Vector.1139"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %513) #9
  %514 = getelementptr inbounds %"class.WTF::Vector.1139", %"class.WTF::Vector.1139"* %18, i64 0, i32 0, i32 0, i32 0
  %515 = getelementptr inbounds %"class.WTF::Vector.1139", %"class.WTF::Vector.1139"* %18, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %513, i8 0, i64 16, i1 false) #9
  %516 = getelementptr inbounds %"class.blink::WindowPostMessageOptions", %"class.blink::WindowPostMessageOptions"* %3, i64 0, i32 1
  call void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"* %516, i16 zeroext 32, i1 zeroext false, %"class.WTF::Vector.1139"* nonnull dereferenceable(16) %18) #9
  %517 = load %"class.WTF::String"*, %"class.WTF::String"** %514, align 8
  %518 = load i32, i32* %515, align 4
  %519 = zext i32 %518 to i64
  %520 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %517, i64 %519
  %521 = icmp eq i32 %518, 0
  br i1 %521, label %562, label %522

522:                                              ; preds = %512
  %523 = bitcast %"class.WTF::StringView"* %7 to i8*
  %524 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  %525 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %526 = bitcast i8** %525 to %"class.WTF::StringImpl"**
  %527 = bitcast %"class.WTF::StringView"* %7 to i64*
  %528 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %529 = bitcast %"class.WTF::StringView"* %8 to i8*
  %530 = bitcast %"class.WTF::StringView"* %8 to i64*
  %531 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %532 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  br label %533

533:                                              ; preds = %549, %522
  %534 = phi %"class.WTF::String"* [ %517, %522 ], [ %550, %549 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %523) #9
  %535 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %534, i64 0, i32 0, i32 0
  %536 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %535, align 8
  %537 = icmp eq %"class.WTF::StringImpl"* %536, null
  br i1 %537, label %538, label %540

538:                                              ; preds = %533
  store i8* null, i8** %525, align 8
  %539 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %539, i64* %527, align 8
  br label %545

540:                                              ; preds = %533
  store %"class.WTF::StringImpl"* %536, %"class.WTF::StringImpl"** %524, align 8
  %541 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %536, i64 0, i32 1
  %542 = load i32, i32* %541, align 4
  %543 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %536, i64 1
  store %"class.WTF::StringImpl"* %543, %"class.WTF::StringImpl"** %526, align 8
  %544 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %545

545:                                              ; preds = %540, %538
  %546 = phi i64 [ %544, %540 ], [ %539, %538 ]
  %547 = phi i32 [ %542, %540 ], [ 0, %538 ]
  store i32 %547, i32* %528, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %529) #9
  store i64 %546, i64* %530, align 8
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32, i64 0, i64 0), i8** %531, align 8
  store i32 14, i32* %532, align 8
  %548 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %529) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %523) #9
  br i1 %548, label %552, label %549

549:                                              ; preds = %545
  %550 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %534, i64 1
  %551 = icmp ult %"class.WTF::String"* %550, %520
  br i1 %551, label %533, label %559

552:                                              ; preds = %545
  %553 = ptrtoint %"class.WTF::String"* %534 to i64
  %554 = ptrtoint %"class.WTF::String"* %517 to i64
  %555 = sub i64 %553, %554
  %556 = lshr exact i64 %555, 3
  %557 = trunc i64 %556 to i32
  %558 = icmp ne i32 %557, -1
  br label %559

559:                                              ; preds = %549, %552
  %560 = phi i1 [ %558, %552 ], [ false, %549 ]
  %561 = load %"class.WTF::String"*, %"class.WTF::String"** %514, align 8
  br label %562

562:                                              ; preds = %559, %512
  %563 = phi %"class.WTF::String"* [ %561, %559 ], [ %517, %512 ]
  %564 = phi i1 [ %560, %559 ], [ false, %512 ]
  %565 = icmp eq %"class.WTF::String"* %563, null
  br i1 %565, label %599, label %566, !prof !2

566:                                              ; preds = %562
  %567 = bitcast %"class.WTF::String"* %563 to i8*
  %568 = load i32, i32* %515, align 4
  %569 = icmp eq i32 %568, 0
  br i1 %569, label %597, label %570, !prof !3

570:                                              ; preds = %566
  %571 = zext i32 %568 to i64
  %572 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %563, i64 %571
  br label %573

573:                                              ; preds = %591, %570
  %574 = phi %"class.WTF::String"* [ %592, %591 ], [ %563, %570 ]
  %575 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %574, i64 0, i32 0, i32 0
  %576 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %575, align 8
  %577 = icmp eq %"class.WTF::StringImpl"* %576, null
  br i1 %577, label %591, label %578

578:                                              ; preds = %573
  %579 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %576, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %580 = load atomic i32, i32* %579 monotonic, align 4
  %581 = and i32 %580, 2
  %582 = icmp eq i32 %581, 0
  %583 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %576, i64 0, i32 0
  %584 = load i32, i32* %583, align 4
  br i1 %582, label %585, label %587

585:                                              ; preds = %578
  %586 = add i32 %584, -1
  store i32 %586, i32* %583, align 4
  br label %587

587:                                              ; preds = %585, %578
  %588 = phi i32 [ %586, %585 ], [ %584, %578 ]
  %589 = icmp eq i32 %588, 0
  br i1 %589, label %590, label %591

590:                                              ; preds = %587
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %576) #9
  br label %591

591:                                              ; preds = %590, %587, %573
  %592 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %574, i64 1
  %593 = icmp eq %"class.WTF::String"* %592, %572
  br i1 %593, label %594, label %573

594:                                              ; preds = %591
  store i32 0, i32* %515, align 4
  %595 = bitcast %"class.WTF::Vector.1139"* %18 to i8**
  %596 = load i8*, i8** %595, align 8
  br label %597

597:                                              ; preds = %594, %566
  %598 = phi i8* [ %596, %594 ], [ %567, %566 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %598) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %514, align 8
  br label %599

599:                                              ; preds = %562, %597
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %513) #9
  br label %600

600:                                              ; preds = %508, %498, %599, %506
  %601 = phi i1 [ %564, %599 ], [ false, %508 ], [ false, %506 ], [ false, %498 ]
  %602 = getelementptr inbounds %"class.WTF::Vector.2193", %"class.WTF::Vector.2193"* %19, i64 0, i32 0, i32 0, i32 1
  %603 = getelementptr inbounds %"class.WTF::Vector.2193", %"class.WTF::Vector.2193"* %19, i64 0, i32 0, i32 0, i32 2
  %604 = bitcast %"class.WTF::Vector.2193"* %15 to i64*
  %605 = bitcast %"class.WTF::Vector.2193"* %19 to i64*
  store i64 0, i64* %605, align 8
  %606 = load i64, i64* %604, align 8
  %607 = bitcast %"class.WTF::Vector.2193"* %19 to i64*
  store atomic i64 0, i64* %604 monotonic, align 8
  store atomic i64 %606, i64* %607 monotonic, align 8
  %608 = load i32, i32* %108, align 8
  store i32 %608, i32* %602, align 8
  store i32 0, i32* %108, align 8
  %609 = load i32, i32* %109, align 4
  store i32 %609, i32* %603, align 4
  store i32 0, i32* %109, align 4
  %610 = bitcast %"class.WTF::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %610) #9
  %611 = call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %87) #9
  %612 = call %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin8ToStringEv(%"class.blink::SecurityOrigin"* %611) #9
  %613 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %612, %"class.WTF::StringImpl"** %613, align 8
  %614 = bitcast %"class.WTF::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %614) #9
  %615 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %615, align 8
  %616 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %4, i64 0, i32 0, i32 0, i32 0
  %617 = bitcast %class.scoped_refptr.1212* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %617)
  %618 = bitcast %"class.blink::EventTarget"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %618)
  %619 = bitcast %"class.blink::UserActivation"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %619)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12)
  %620 = getelementptr inbounds %class.scoped_refptr.1212, %class.scoped_refptr.1212* %9, i64 0, i32 0
  store %"class.blink::SerializedScriptValue"* %1, %"class.blink::SerializedScriptValue"** %620, align 8
  store %"class.blink::EventTarget"* %616, %"class.blink::EventTarget"** %10, align 8
  store %"class.blink::UserActivation"* %499, %"class.blink::UserActivation"** %11, align 8
  %621 = zext i1 %601 to i8
  store i8 %621, i8* %12, align 1
  %622 = call %"class.blink::MessageEvent"* @_ZN5blink25MakeGarbageCollectedTraitINS_12MessageEventEE4CallIJ13scoped_refptrINS_21SerializedScriptValueEERKN3WTF6StringESA_RPNS_11EventTargetENS7_6VectorINS_18MessagePortChannelELj0ENS7_18PartitionAllocatorEEERPNS_14UserActivationERbEEEPS1_DpOT_(%class.scoped_refptr.1212* nonnull dereferenceable(8) %9, %"class.WTF::String"* nonnull dereferenceable(8) %20, %"class.WTF::String"* nonnull dereferenceable(8) %21, %"class.blink::EventTarget"** nonnull dereferenceable(8) %10, %"class.WTF::Vector.2193"* nonnull dereferenceable(16) %19, %"class.blink::UserActivation"** nonnull dereferenceable(8) %11, i8* nonnull dereferenceable(1) %12) #9
  %623 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %620, align 8
  %624 = icmp eq %"class.blink::SerializedScriptValue"* %623, null
  br i1 %624, label %631, label %625

625:                                              ; preds = %600
  %626 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %623, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %627 = atomicrmw sub i32* %626, i32 1 acq_rel
  %628 = icmp eq i32 %627, 1
  br i1 %628, label %629, label %631

629:                                              ; preds = %625
  call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %623) #9
  %630 = bitcast %"class.blink::SerializedScriptValue"* %623 to i8*
  call void @free(i8* %630) #9
  br label %631

631:                                              ; preds = %600, %625, %629
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %617)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %618)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %619)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12)
  %632 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %615, align 8
  %633 = icmp eq %"class.WTF::StringImpl"* %632, null
  br i1 %633, label %647, label %634

634:                                              ; preds = %631
  %635 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %632, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %636 = load atomic i32, i32* %635 monotonic, align 4
  %637 = and i32 %636, 2
  %638 = icmp eq i32 %637, 0
  %639 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %632, i64 0, i32 0
  %640 = load i32, i32* %639, align 4
  br i1 %638, label %641, label %643

641:                                              ; preds = %634
  %642 = add i32 %640, -1
  store i32 %642, i32* %639, align 4
  br label %643

643:                                              ; preds = %641, %634
  %644 = phi i32 [ %642, %641 ], [ %640, %634 ]
  %645 = icmp eq i32 %644, 0
  br i1 %645, label %646, label %647

646:                                              ; preds = %643
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %632) #9
  br label %647

647:                                              ; preds = %631, %643, %646
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %614) #9
  %648 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %613, align 8
  %649 = icmp eq %"class.WTF::StringImpl"* %648, null
  br i1 %649, label %663, label %650

650:                                              ; preds = %647
  %651 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %648, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %652 = load atomic i32, i32* %651 monotonic, align 4
  %653 = and i32 %652, 2
  %654 = icmp eq i32 %653, 0
  %655 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %648, i64 0, i32 0
  %656 = load i32, i32* %655, align 4
  br i1 %654, label %657, label %659

657:                                              ; preds = %650
  %658 = add i32 %656, -1
  store i32 %658, i32* %655, align 4
  br label %659

659:                                              ; preds = %657, %650
  %660 = phi i32 [ %658, %657 ], [ %656, %650 ]
  %661 = icmp eq i32 %660, 0
  br i1 %661, label %662, label %663

662:                                              ; preds = %659
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %648) #9
  br label %663

663:                                              ; preds = %647, %659, %662
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %610) #9
  %664 = getelementptr inbounds %"class.WTF::Vector.2193", %"class.WTF::Vector.2193"* %19, i64 0, i32 0, i32 0, i32 0
  %665 = load %"class.blink::MessagePortChannel"*, %"class.blink::MessagePortChannel"** %664, align 8
  %666 = icmp eq %"class.blink::MessagePortChannel"* %665, null
  br i1 %666, label %683, label %667, !prof !2

667:                                              ; preds = %663
  %668 = bitcast %"class.blink::MessagePortChannel"* %665 to i8*
  %669 = load i32, i32* %603, align 4
  %670 = icmp eq i32 %669, 0
  br i1 %670, label %681, label %671, !prof !3

671:                                              ; preds = %667
  %672 = zext i32 %669 to i64
  %673 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %665, i64 %672
  br label %674

674:                                              ; preds = %674, %671
  %675 = phi %"class.blink::MessagePortChannel"* [ %676, %674 ], [ %665, %671 ]
  call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* %675) #9
  %676 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %675, i64 1
  %677 = icmp eq %"class.blink::MessagePortChannel"* %676, %673
  br i1 %677, label %678, label %674

678:                                              ; preds = %674
  store i32 0, i32* %603, align 4
  %679 = bitcast %"class.WTF::Vector.2193"* %19 to i8**
  %680 = load i8*, i8** %679, align 8
  br label %681

681:                                              ; preds = %678, %667
  %682 = phi i8* [ %680, %678 ], [ %668, %667 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %682) #9
  store %"class.blink::MessagePortChannel"* null, %"class.blink::MessagePortChannel"** %664, align 8
  br label %683

683:                                              ; preds = %663, %681
  %684 = bitcast %"class.blink::DOMWindow"* %0 to void (%"class.blink::DOMWindow"*, %"class.blink::MessageEvent"*, %"class.blink::SecurityOrigin"*, %"class.blink::LocalDOMWindow"*)***
  %685 = load void (%"class.blink::DOMWindow"*, %"class.blink::MessageEvent"*, %"class.blink::SecurityOrigin"*, %"class.blink::LocalDOMWindow"*)**, void (%"class.blink::DOMWindow"*, %"class.blink::MessageEvent"*, %"class.blink::SecurityOrigin"*, %"class.blink::LocalDOMWindow"*)*** %684, align 8
  %686 = getelementptr inbounds void (%"class.blink::DOMWindow"*, %"class.blink::MessageEvent"*, %"class.blink::SecurityOrigin"*, %"class.blink::LocalDOMWindow"*)*, void (%"class.blink::DOMWindow"*, %"class.blink::MessageEvent"*, %"class.blink::SecurityOrigin"*, %"class.blink::LocalDOMWindow"*)** %685, i64 30
  %687 = load void (%"class.blink::DOMWindow"*, %"class.blink::MessageEvent"*, %"class.blink::SecurityOrigin"*, %"class.blink::LocalDOMWindow"*)*, void (%"class.blink::DOMWindow"*, %"class.blink::MessageEvent"*, %"class.blink::SecurityOrigin"*, %"class.blink::LocalDOMWindow"*)** %686, align 8
  call void %687(%"class.blink::DOMWindow"* %0, %"class.blink::MessageEvent"* %622, %"class.blink::SecurityOrigin"* %88, %"class.blink::LocalDOMWindow"* %4) #9
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* %483) #9
  br label %688

688:                                              ; preds = %105, %683
  %689 = phi i64 [ %89, %105 ], [ 0, %683 ]
  %690 = phi i64 [ %22, %105 ], [ 0, %683 ]
  %691 = inttoptr i64 %689 to %"class.blink::SecurityOrigin"*
  %692 = load %"class.blink::MessagePortChannel"*, %"class.blink::MessagePortChannel"** %107, align 8
  %693 = icmp eq %"class.blink::MessagePortChannel"* %692, null
  br i1 %693, label %710, label %694, !prof !2

694:                                              ; preds = %688
  %695 = bitcast %"class.blink::MessagePortChannel"* %692 to i8*
  %696 = load i32, i32* %109, align 4
  %697 = icmp eq i32 %696, 0
  br i1 %697, label %708, label %698, !prof !3

698:                                              ; preds = %694
  %699 = zext i32 %696 to i64
  %700 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %692, i64 %699
  br label %701

701:                                              ; preds = %701, %698
  %702 = phi %"class.blink::MessagePortChannel"* [ %703, %701 ], [ %692, %698 ]
  call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* %702) #9
  %703 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %702, i64 1
  %704 = icmp eq %"class.blink::MessagePortChannel"* %703, %700
  br i1 %704, label %705, label %701

705:                                              ; preds = %701
  store i32 0, i32* %109, align 4
  %706 = bitcast %"class.WTF::Vector.2193"* %15 to i8**
  %707 = load i8*, i8** %706, align 8
  br label %708

708:                                              ; preds = %705, %694
  %709 = phi i8* [ %707, %705 ], [ %695, %694 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %709) #9
  store %"class.blink::MessagePortChannel"* null, %"class.blink::MessagePortChannel"** %107, align 8
  br label %710

710:                                              ; preds = %688, %708
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %106) #9
  br label %711

711:                                              ; preds = %85, %710
  %712 = phi %"class.blink::SecurityOrigin"* [ %88, %85 ], [ %691, %710 ]
  %713 = phi i64 [ %22, %85 ], [ %690, %710 ]
  %714 = inttoptr i64 %713 to %"class.blink::SerializedScriptValue"*
  %715 = icmp eq %"class.blink::SecurityOrigin"* %712, null
  br i1 %715, label %723, label %716

716:                                              ; preds = %711
  %717 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %712, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %717) #9
  %718 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %712, i64 0, i32 0, i32 0, i32 0, i32 0
  %719 = load i32, i32* %718, align 4
  %720 = icmp eq i32 %719, 0
  br i1 %720, label %721, label %723

721:                                              ; preds = %716
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %712) #9
  %722 = bitcast %"class.blink::SecurityOrigin"* %712 to i8*
  call void @free(i8* %722) #9
  br label %723

723:                                              ; preds = %81, %68, %76, %721, %716, %711
  %724 = phi %"class.blink::SerializedScriptValue"* [ %1, %81 ], [ %714, %711 ], [ %714, %716 ], [ %714, %721 ], [ %1, %76 ], [ %1, %68 ]
  %725 = icmp eq i8* %33, null
  br i1 %725, label %730, label %726

726:                                              ; preds = %723
  %727 = load i8, i8* %33, align 1
  %728 = icmp eq i8 %727, 0
  br i1 %728, label %730, label %729

729:                                              ; preds = %726
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %33, i8* %34, i64 %35) #9
  br label %730

730:                                              ; preds = %723, %726, %729
  %731 = icmp eq %"class.blink::SerializedScriptValue"* %724, null
  br i1 %731, label %738, label %732

732:                                              ; preds = %730
  %733 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %724, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %734 = atomicrmw sub i32* %733, i32 1 acq_rel
  %735 = icmp eq i32 %734, 1
  br i1 %735, label %736, label %738

736:                                              ; preds = %732
  call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %724) #9
  %737 = bitcast %"class.blink::SerializedScriptValue"* %724 to i8*
  call void @free(i8* %737) #9
  br label %738

738:                                              ; preds = %730, %732, %736
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink13TransferablesD1Ev(%"class.blink::Transferables"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMWindow"* @_ZN5blink9DOMWindow22AnonymousIndexedGetterEj(%"class.blink::DOMWindow"*, i32) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink9DOMWindow16ReportCoopAccessEPKc(%"class.blink::DOMWindow"* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0))
  %3 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::Frame"*, %"class.blink::Frame"** %3, align 8
  %5 = icmp eq %"class.blink::Frame"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %4, i64 0, i32 1
  %8 = tail call %"class.blink::Frame"* @_ZNK5blink9FrameTree11ScopedChildEj(%"class.blink::FrameTree"* %7, i32 %1) #9
  %9 = icmp eq %"class.blink::Frame"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %8, i64 0, i32 4, i32 0, i32 0
  %12 = load %"class.blink::DOMWindow"*, %"class.blink::DOMWindow"** %11, align 8
  br label %13

13:                                               ; preds = %10, %6, %2
  %14 = phi %"class.blink::DOMWindow"* [ null, %2 ], [ %12, %10 ], [ null, %6 ]
  ret %"class.blink::DOMWindow"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9DOMWindow16ReportCoopAccessEPKc(%"class.blink::DOMWindow"*, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.mojo::InlinedStructPtr.2157", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.mojo::InlinedStructPtr.2157", align 8
  %8 = alloca %"class.blink::CoopAccessViolationReportBody"*, align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::Vector.1139", align 8
  %11 = alloca [1 x %"class.WTF::String"], align 8
  %12 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 6
  %13 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %312, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::WindowProxyManager"*, %"class.blink::WindowProxyManager"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::WindowProxyManager", %"class.blink::WindowProxyManager"* %18, i64 0, i32 0
  %20 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %19, align 8
  %21 = tail call %"class.blink::LocalDOMWindow"* @_ZN5blink18IncumbentDOMWindowEPN2v87IsolateE(%"class.v8::Isolate"* %20) #9
  %22 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  %23 = bitcast %"class.blink::Frame"** %22 to %"class.blink::LocalFrame"**
  %24 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %23, align 8
  %25 = icmp eq %"class.blink::LocalFrame"* %24, null
  br i1 %25, label %312, label %26

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %24, i64 0, i32 0
  %28 = tail call zeroext i1 @_ZNK5blink5Frame24IsCrossOriginToMainFrameEv(%"class.blink::Frame"* %27) #9
  br i1 %28, label %312, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %24, i64 0, i32 0, i32 1
  %31 = tail call dereferenceable(392) %"class.blink::Frame"* @_ZNK5blink9FrameTree3TopEv(%"class.blink::FrameTree"* %30) #9
  %32 = bitcast %"class.blink::Frame"* %31 to i1 (%"class.blink::Frame"*)***
  %33 = load i1 (%"class.blink::Frame"*)**, i1 (%"class.blink::Frame"*)*** %32, align 8
  %34 = getelementptr inbounds i1 (%"class.blink::Frame"*)*, i1 (%"class.blink::Frame"*)** %33, i64 3
  %35 = load i1 (%"class.blink::Frame"*)*, i1 (%"class.blink::Frame"*)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.blink::Frame"* %31) #9
  br i1 %36, label %37, label %312

37:                                               ; preds = %29
  %38 = tail call dereferenceable(392) %"class.blink::Frame"* @_ZNK5blink9FrameTree3TopEv(%"class.blink::FrameTree"* %30) #9
  %39 = bitcast %"class.blink::Frame"* %38 to %"class.blink::LocalFrame"*
  %40 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %38, i64 0, i32 30, i32 1
  %41 = load i32, i32* %40, align 8, !noalias !5
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #9, !noalias !5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.38, i64 0, i64 0), i32 97, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.39, i64 0, i64 0)) #9, !noalias !5
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9, !noalias !5
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %45, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.40, i64 0, i64 0), i64 23) #9, !noalias !5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #9, !noalias !5
  br label %47

47:                                               ; preds = %37, %43
  %48 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %38, i64 0, i32 30, i32 0, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %38, i64 0, i32 30, i32 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.WTF::Vector.224", %"class.WTF::Vector.224"* %12, i64 0, i32 0, i32 0, i32 0
  %53 = load i32, i32* %13, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %312, label %55

55:                                               ; preds = %47
  %56 = load %"struct.blink::DOMWindow::CoopAccessMonitor"*, %"struct.blink::DOMWindow::CoopAccessMonitor"** %52, align 8
  %57 = bitcast %"class.mojo::InlinedStructPtr.2157"* %4 to i8*
  %58 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2157", %"class.mojo::InlinedStructPtr.2157"* %4, i64 0, i32 1
  %59 = bitcast %"class.WTF::String"* %5 to i8*
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2157", %"class.mojo::InlinedStructPtr.2157"* %4, i64 0, i32 0
  %62 = bitcast %"class.WTF::String"* %6 to i8*
  %63 = icmp eq i8* %1, null
  %64 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2157", %"class.mojo::InlinedStructPtr.2157"* %7, i64 0, i32 0
  %65 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2157", %"class.mojo::InlinedStructPtr.2157"* %7, i64 0, i32 1
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %67 = bitcast %"class.blink::CoopAccessViolationReportBody"** %8 to i8*
  %68 = bitcast %"class.WTF::String"* %9 to i8*
  %69 = bitcast %"class.blink::CoopAccessViolationReportBody"** %8 to i8**
  %70 = bitcast %"class.WTF::Vector.1139"* %10 to i8*
  %71 = bitcast [1 x %"class.WTF::String"]* %11 to i8*
  %72 = getelementptr inbounds [1 x %"class.WTF::String"], [1 x %"class.WTF::String"]* %11, i64 0, i64 0
  %73 = getelementptr inbounds %"class.WTF::Vector.1139", %"class.WTF::Vector.1139"* %10, i64 0, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.WTF::Vector.1139", %"class.WTF::Vector.1139"* %10, i64 0, i32 0, i32 0, i32 1
  %75 = bitcast %"class.WTF::Vector.1139"* %10 to i64*
  %76 = getelementptr inbounds %"class.WTF::Vector.1139", %"class.WTF::Vector.1139"* %10, i64 0, i32 0, i32 0, i32 2
  %77 = bitcast %"class.WTF::Vector.1139"* %10 to i8**
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %79 = bitcast %"class.WTF::Vector.224"* %12 to i64*
  %80 = bitcast %"class.mojo::InlinedStructPtr.2157"* %4 to i8*
  %81 = getelementptr inbounds [1 x %"class.WTF::String"], [1 x %"class.WTF::String"]* %11, i64 0, i64 0, i32 0, i32 0
  %82 = getelementptr inbounds [1 x %"class.WTF::String"], [1 x %"class.WTF::String"]* %11, i64 0, i64 0, i32 0, i32 0
  br label %83

83:                                               ; preds = %55, %94
  %84 = phi %"struct.blink::DOMWindow::CoopAccessMonitor"* [ %56, %55 ], [ %95, %94 ]
  %85 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %84, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %86 = load i64, i64* %85, align 8
  %87 = icmp eq i64 %86, %49
  br i1 %87, label %88, label %92

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %84, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = icmp eq i64 %90, %51
  br i1 %91, label %101, label %92

92:                                               ; preds = %88, %83
  %93 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %84, i64 1
  br label %94

94:                                               ; preds = %310, %299, %92
  %95 = phi %"struct.blink::DOMWindow::CoopAccessMonitor"* [ %93, %92 ], [ %308, %299 ], [ %308, %310 ]
  %96 = load %"struct.blink::DOMWindow::CoopAccessMonitor"*, %"struct.blink::DOMWindow::CoopAccessMonitor"** %52, align 8
  %97 = load i32, i32* %13, align 4
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %96, i64 %98
  %100 = icmp eq %"struct.blink::DOMWindow::CoopAccessMonitor"* %95, %99
  br i1 %100, label %312, label %83

101:                                              ; preds = %88
  %102 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %20) #9
  %103 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %102) #9
  %104 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %103) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #9
  %105 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %101
  store %"class.WTF::StringImpl"* %106, %"class.WTF::StringImpl"** %60, align 8
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %126

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #9
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !3

122:                                              ; preds = %113
  call void @llvm.trap() #9
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %126

125:                                              ; preds = %101
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28, i64 0, i64 0), i64 0) #9
  br label %126

126:                                              ; preds = %123, %108, %125
  %127 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %104, i64 0, i32 1
  %128 = load i32, i32* %127, align 8
  %129 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %104, i64 0, i32 2
  %130 = load i32, i32* %129, align 4
  call void @_ZN7network5mojom5blink14SourceLocationC1ERKN3WTF6StringEjj(%"class.network::mojom::blink::SourceLocation"* nonnull %61, %"class.WTF::String"* nonnull dereferenceable(8) %5, i32 %128, i32 %130) #9
  store i32 1, i32* %58, align 8, !alias.scope !10
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %132 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %132, label %146, label %133

133:                                              ; preds = %126
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  br i1 %137, label %140, label %142

140:                                              ; preds = %133
  %141 = add i32 %139, -1
  store i32 %141, i32* %138, align 4
  br label %142

142:                                              ; preds = %140, %133
  %143 = phi i32 [ %141, %140 ], [ %139, %133 ]
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %142
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %131) #9
  br label %146

146:                                              ; preds = %126, %142, %145
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #9
  %147 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %84, i64 0, i32 3
  %148 = load i8, i8* %147, align 8, !range !4
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %299, label %150

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %84, i64 0, i32 2, i32 0
  call void @_ZN4mojo8internal17InterfacePtrStateIN7network5mojom5blink31CrossOriginOpenerPolicyReporterEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState"* %151) #9
  %152 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %84, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %153 = load %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*, %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"** %152, align 8
  %154 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %84, i64 0, i32 0
  %155 = load i32, i32* %154, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #9
  br i1 %63, label %158, label %156

156:                                              ; preds = %150
  %157 = call i64 @strlen(i8* nonnull %1) #16
  br label %158

158:                                              ; preds = %150, %156
  %159 = phi i64 [ %157, %156 ], [ 0, %150 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* %1, i64 %159) #9
  call void @_ZN7network5mojom5blink14SourceLocationC1Ev(%"class.network::mojom::blink::SourceLocation"* nonnull %64) #9
  store i32 0, i32* %65, align 8
  call void @_ZN7network5mojom5blink14SourceLocationD1Ev(%"class.network::mojom::blink::SourceLocation"* nonnull %64) #9
  call void @_ZN7network5mojom5blink14SourceLocationC1Ev(%"class.network::mojom::blink::SourceLocation"* nonnull %64) #9
  call void @_ZNSt3__14swapIN7network5mojom5blink14SourceLocationEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.network::mojom::blink::SourceLocation"* nonnull dereferenceable(16) %64, %"class.network::mojom::blink::SourceLocation"* nonnull dereferenceable(16) %61) #9
  %160 = load i32, i32* %65, align 8
  %161 = load i32, i32* %58, align 8
  store i32 %161, i32* %65, align 8
  store i32 %160, i32* %58, align 8
  %162 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %84, i64 0, i32 4
  call void @_ZN7network5mojom5blink36CrossOriginOpenerPolicyReporterProxy17QueueAccessReportENS0_20CoopAccessReportTypeERKN3WTF6StringEN4mojo16InlinedStructPtrINS1_14SourceLocationEEES7_(%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* %153, i32 %155, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.mojo::InlinedStructPtr.2157"* nonnull %7, %"class.WTF::String"* dereferenceable(8) %162) #9
  call void @_ZN7network5mojom5blink14SourceLocationD1Ev(%"class.network::mojom::blink::SourceLocation"* nonnull %64) #9
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %178, label %165

165:                                              ; preds = %158
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = and i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  br i1 %169, label %172, label %174

172:                                              ; preds = %165
  %173 = add i32 %171, -1
  store i32 %173, i32* %170, align 4
  br label %174

174:                                              ; preds = %172, %165
  %175 = phi i32 [ %173, %172 ], [ %171, %165 ]
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %174
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %163) #9
  br label %178

178:                                              ; preds = %158, %174, %177
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #9
  %179 = load i32, i32* %154, align 8
  %180 = call zeroext i1 @_ZN7network20IsAccessFromCoopPageENS_5mojom20CoopAccessReportTypeE(i32 %179) #9
  br i1 %180, label %181, label %299

181:                                              ; preds = %178
  %182 = call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %39) #9
  %183 = icmp eq %"class.blink::LocalDOMWindow"* %182, null
  %184 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %182, i64 0, i32 1
  %185 = bitcast %"class.blink::ExecutionContext.base"* %184 to %"class.blink::ExecutionContext"*
  %186 = select i1 %183, %"class.blink::ExecutionContext"* null, %"class.blink::ExecutionContext"* %185
  %187 = call %"class.blink::ReportingContext"* @_ZN5blink16ReportingContext4FromEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %186) #9
  %188 = call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %39) #9
  %189 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %188, i64 0, i32 19, i32 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #9
  br i1 %63, label %192, label %190

190:                                              ; preds = %181
  %191 = call i64 @strlen(i8* nonnull %1) #16
  br label %192

192:                                              ; preds = %181, %190
  %193 = phi i64 [ %191, %190 ], [ 0, %181 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* %1, i64 %193) #9
  %194 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #9
  %195 = bitcast i8* %194 to %"class.blink::CoopAccessViolationReportBody"*
  %196 = load i32, i32* %154, align 4
  call void @_ZN5blink29CoopAccessViolationReportBodyC1ENSt3__110unique_ptrINS_14SourceLocationENS1_14default_deleteIS3_EEEEN7network5mojom20CoopAccessReportTypeERKN3WTF6StringESD_(%"class.blink::CoopAccessViolationReportBody"* %195, %"class.blink::SourceLocation"* %104, i32 %196, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.WTF::String"* dereferenceable(8) %162) #9
  %197 = getelementptr inbounds i8, i8* %194, i64 -4
  %198 = bitcast i8* %197 to i16*
  %199 = load atomic i16, i16* %198 monotonic, align 2
  %200 = or i16 %199, 1
  store atomic i16 %200, i16* %198 release, align 2
  store i8* %194, i8** %69, align 8
  %201 = call %"class.blink::Report"* @_ZN5blink25MakeGarbageCollectedTraitINS_6ReportEE4CallIJRA22_KcRKN3WTF6StringEPNS_29CoopAccessViolationReportBodyEEEEPS1_DpOT_([22 x i8]* nonnull dereferenceable(22) @_ZN5blink10ReportType20kCoopAccessViolationE, %"class.WTF::String"* dereferenceable(8) %189, %"class.blink::CoopAccessViolationReportBody"** nonnull dereferenceable(8) %8) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %72, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i64 0, i64 0), i64 7) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %73, align 8
  store i32 0, i32* %74, align 8
  %202 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 8) #9
  %203 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %202, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #9
  %204 = ptrtoint i8* %203 to i64
  store atomic i64 %204, i64* %75 monotonic, align 8
  %205 = lshr i64 %202, 3
  %206 = trunc i64 %205 to i32
  store i32 %206, i32* %74, align 8
  store i32 1, i32* %76, align 4
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %208 = bitcast i8* %203 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %207, %"class.WTF::StringImpl"** %208, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %209, label %227, label %210

210:                                              ; preds = %192
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %227

215:                                              ; preds = %210
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  %218 = zext i32 %217 to i33
  %219 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %218, i33 1) #9
  %220 = extractvalue { i33, i1 } %219, 1
  %221 = extractvalue { i33, i1 } %219, 0
  %222 = icmp slt i33 %221, 0
  %223 = or i1 %220, %222
  br i1 %223, label %224, label %225, !prof !3

224:                                              ; preds = %215
  call void @llvm.trap() #9
  unreachable

225:                                              ; preds = %215
  %226 = trunc i33 %221 to i32
  store i32 %226, i32* %216, align 4
  br label %227

227:                                              ; preds = %225, %210, %192
  %228 = bitcast %"class.blink::ReportingContext"* %187 to void (%"class.blink::ReportingContext"*, %"class.blink::Report"*, %"class.WTF::Vector.1139"*)***
  %229 = load void (%"class.blink::ReportingContext"*, %"class.blink::Report"*, %"class.WTF::Vector.1139"*)**, void (%"class.blink::ReportingContext"*, %"class.blink::Report"*, %"class.WTF::Vector.1139"*)*** %228, align 8
  %230 = getelementptr inbounds void (%"class.blink::ReportingContext"*, %"class.blink::Report"*, %"class.WTF::Vector.1139"*)*, void (%"class.blink::ReportingContext"*, %"class.blink::Report"*, %"class.WTF::Vector.1139"*)** %229, i64 3
  %231 = load void (%"class.blink::ReportingContext"*, %"class.blink::Report"*, %"class.WTF::Vector.1139"*)*, void (%"class.blink::ReportingContext"*, %"class.blink::Report"*, %"class.WTF::Vector.1139"*)** %230, align 8
  call void %231(%"class.blink::ReportingContext"* %187, %"class.blink::Report"* %201, %"class.WTF::Vector.1139"* nonnull dereferenceable(16) %10) #9
  %232 = load %"class.WTF::String"*, %"class.WTF::String"** %73, align 8
  %233 = icmp eq %"class.WTF::String"* %232, null
  br i1 %233, label %266, label %234, !prof !2

234:                                              ; preds = %227
  %235 = bitcast %"class.WTF::String"* %232 to i8*
  %236 = load i32, i32* %76, align 4
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %264, label %238, !prof !3

238:                                              ; preds = %234
  %239 = zext i32 %236 to i64
  %240 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %232, i64 %239
  br label %241

241:                                              ; preds = %259, %238
  %242 = phi %"class.WTF::String"* [ %260, %259 ], [ %232, %238 ]
  %243 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %242, i64 0, i32 0, i32 0
  %244 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %243, align 8
  %245 = icmp eq %"class.WTF::StringImpl"* %244, null
  br i1 %245, label %259, label %246

246:                                              ; preds = %241
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = load atomic i32, i32* %247 monotonic, align 4
  %249 = and i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 0, i32 0
  %252 = load i32, i32* %251, align 4
  br i1 %250, label %253, label %255

253:                                              ; preds = %246
  %254 = add i32 %252, -1
  store i32 %254, i32* %251, align 4
  br label %255

255:                                              ; preds = %253, %246
  %256 = phi i32 [ %254, %253 ], [ %252, %246 ]
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %259

258:                                              ; preds = %255
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %244) #9
  br label %259

259:                                              ; preds = %258, %255, %241
  %260 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %242, i64 1
  %261 = icmp eq %"class.WTF::String"* %260, %240
  br i1 %261, label %262, label %241

262:                                              ; preds = %259
  store i32 0, i32* %76, align 4
  %263 = load i8*, i8** %77, align 8
  br label %264

264:                                              ; preds = %262, %234
  %265 = phi i8* [ %263, %262 ], [ %235, %234 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %265) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %73, align 8
  br label %266

266:                                              ; preds = %227, %264
  %267 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %268 = icmp eq %"class.WTF::StringImpl"* %267, null
  br i1 %268, label %282, label %269

269:                                              ; preds = %266
  %270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %271 = load atomic i32, i32* %270 monotonic, align 4
  %272 = and i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 0
  %275 = load i32, i32* %274, align 4
  br i1 %273, label %276, label %278

276:                                              ; preds = %269
  %277 = add i32 %275, -1
  store i32 %277, i32* %274, align 4
  br label %278

278:                                              ; preds = %276, %269
  %279 = phi i32 [ %277, %276 ], [ %275, %269 ]
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %282

281:                                              ; preds = %278
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %267) #9
  br label %282

282:                                              ; preds = %266, %278, %281
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #9
  %283 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %284 = icmp eq %"class.WTF::StringImpl"* %283, null
  br i1 %284, label %298, label %285

285:                                              ; preds = %282
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %283, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = load atomic i32, i32* %286 monotonic, align 4
  %288 = and i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %283, i64 0, i32 0
  %291 = load i32, i32* %290, align 4
  br i1 %289, label %292, label %294

292:                                              ; preds = %285
  %293 = add i32 %291, -1
  store i32 %293, i32* %290, align 4
  br label %294

294:                                              ; preds = %292, %285
  %295 = phi i32 [ %293, %292 ], [ %291, %285 ]
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %298

297:                                              ; preds = %294
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %283) #9
  br label %298

298:                                              ; preds = %282, %294, %297
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #9
  br label %299

299:                                              ; preds = %146, %178, %298
  %300 = phi %"class.blink::SourceLocation"* [ %104, %146 ], [ null, %298 ], [ %104, %178 ]
  %301 = load i64, i64* %79, align 8
  %302 = ptrtoint %"struct.blink::DOMWindow::CoopAccessMonitor"* %84 to i64
  %303 = sub i64 %302, %301
  %304 = sdiv exact i64 %303, 88
  %305 = trunc i64 %304 to i32
  call void @_ZN3WTF6VectorIN5blink9DOMWindow17CoopAccessMonitorELj0ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector.224"* %12, i32 %305) #9
  %306 = load %"struct.blink::DOMWindow::CoopAccessMonitor"*, %"struct.blink::DOMWindow::CoopAccessMonitor"** %52, align 8
  %307 = and i64 %304, 4294967295
  %308 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %306, i64 %307
  call void @_ZN7network5mojom5blink14SourceLocationD1Ev(%"class.network::mojom::blink::SourceLocation"* nonnull %61) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #9
  %309 = icmp eq %"class.blink::SourceLocation"* %300, null
  br i1 %309, label %94, label %310

310:                                              ; preds = %299
  call void @_ZN5blink14SourceLocationD1Ev(%"class.blink::SourceLocation"* nonnull %300) #9
  %311 = bitcast %"class.blink::SourceLocation"* %300 to i8*
  call void @free(i8* %311) #9
  br label %94

312:                                              ; preds = %94, %47, %16, %26, %29, %2
  ret void
}

declare %"class.blink::Frame"* @_ZNK5blink9FrameTree11ScopedChildEj(%"class.blink::FrameTree"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9DOMWindow27IsCurrentlyDisplayedInFrameEv(%"class.blink::DOMWindow"* readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::Frame"*, %"class.blink::Frame"** %3, align 8
  %5 = icmp eq %"class.blink::Frame"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %4, i64 0, i32 4, i32 0, i32 0
  %8 = load %"class.blink::DOMWindow"*, %"class.blink::DOMWindow"** %7, align 8
  %9 = icmp eq %"class.blink::DOMWindow"* %8, %0
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 180, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0)) #9
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  %13 = load %"class.blink::Frame"*, %"class.blink::Frame"** %3, align 8
  %14 = icmp eq %"class.blink::Frame"* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %6, %10
  %16 = phi %"class.blink::Frame"* [ %13, %10 ], [ %4, %6 ]
  %17 = call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* nonnull %16) #9
  %18 = icmp ne %"class.blink::Page"* %17, null
  br label %19

19:                                               ; preds = %1, %10, %15
  %20 = phi i1 [ false, %10 ], [ %18, %15 ], [ false, %1 ]
  ret i1 %20
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink9DOMWindow38SanitizedCrossDomainAccessErrorMessageEPKNS_14LocalDOMWindowENS0_25CrossDocumentAccessPolicyE(%"class.blink::DOMWindow"* nocapture readonly, %"class.blink::LocalDOMWindow"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringAppend", align 8
  %5 = alloca %"class.WTF::StringAppend", align 8
  %6 = icmp eq %"class.blink::LocalDOMWindow"* %1, null
  br i1 %6, label %301, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.blink::Frame"*, %"class.blink::Frame"** %8, align 8
  %10 = icmp eq %"class.blink::Frame"* %9, null
  br i1 %10, label %301, label %11

11:                                               ; preds = %7
  %12 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink14LocalDOMWindow3UrlEv(%"class.blink::LocalDOMWindow"* nonnull %1) #9
  %13 = tail call zeroext i1 @_ZNK5blink4KURL6IsNullEv(%"class.blink::KURL"* %12) #9
  br i1 %13, label %301, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %1, i64 0, i32 1
  %16 = bitcast %"class.blink::ExecutionContext.base"* %15 to %"class.blink::ExecutionContext"*
  %17 = tail call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %16) #9
  %18 = icmp eq i32 %2, 1
  br i1 %18, label %19, label %160

19:                                               ; preds = %14
  %20 = bitcast %"class.WTF::StringAppend"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #9
  %21 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin8ToStringEv(%"class.blink::SecurityOrigin"* %17) #9
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %98, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %40

30:                                               ; preds = %23
  %31 = zext i32 %29 to i33
  %32 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %31, i33 1) #9
  %33 = extractvalue { i33, i1 } %32, 1
  %34 = extractvalue { i33, i1 } %32, 0
  %35 = icmp slt i33 %34, 0
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %38, !prof !3

37:                                               ; preds = %30
  tail call void @llvm.trap() #9
  unreachable

38:                                               ; preds = %30
  %39 = trunc i33 %34 to i32
  store i32 %39, i32* %28, align 4
  br label %40

40:                                               ; preds = %38, %23
  %41 = phi i32 [ %39, %38 ], [ %29, %23 ]
  %42 = load atomic i32, i32* %24 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %55

45:                                               ; preds = %40
  %46 = zext i32 %41 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #9
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %45
  tail call void @llvm.trap() #9
  unreachable

53:                                               ; preds = %45
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %28, align 4
  br label %55

55:                                               ; preds = %53, %40
  %56 = phi i32 [ %54, %53 ], [ %41, %40 ]
  %57 = load atomic i32, i32* %24 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %55
  %61 = add i32 %56, -1
  store i32 %61, i32* %28, align 4
  br label %62

62:                                               ; preds = %60, %55
  %63 = phi i32 [ %61, %60 ], [ %56, %55 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #9
  br label %66

66:                                               ; preds = %62, %65
  %67 = load atomic i32, i32* %24 monotonic, align 4, !noalias !13
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = load i32, i32* %28, align 4
  br i1 %69, label %71, label %81

71:                                               ; preds = %66
  %72 = zext i32 %70 to i33
  %73 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %72, i33 1) #9
  %74 = extractvalue { i33, i1 } %73, 1
  %75 = extractvalue { i33, i1 } %73, 0
  %76 = icmp slt i33 %75, 0
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %79, !prof !3

78:                                               ; preds = %71
  tail call void @llvm.trap() #9, !noalias !13
  unreachable

79:                                               ; preds = %71
  %80 = trunc i33 %75 to i32
  store i32 %80, i32* %28, align 4, !noalias !13
  br label %81

81:                                               ; preds = %66, %79
  %82 = phi i32 [ %80, %79 ], [ %70, %66 ]
  %83 = bitcast %"class.WTF::StringAppend"* %4 to i64*
  store i64 ptrtoint ([41 x i8]* @.str.3 to i64), i64* %83, align 8, !alias.scope !13
  %84 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %84, align 8, !alias.scope !13
  %85 = load atomic i32, i32* %24 monotonic, align 4, !noalias !13
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %102

88:                                               ; preds = %81
  %89 = zext i32 %82 to i33
  %90 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %89, i33 1) #9
  %91 = extractvalue { i33, i1 } %90, 1
  %92 = extractvalue { i33, i1 } %90, 0
  %93 = icmp slt i33 %92, 0
  %94 = or i1 %91, %93
  br i1 %94, label %95, label %96, !prof !3

95:                                               ; preds = %88
  tail call void @llvm.trap() #9, !noalias !13
  unreachable

96:                                               ; preds = %88
  %97 = trunc i33 %92 to i32
  store i32 %97, i32* %28, align 4, !noalias !13
  br label %102

98:                                               ; preds = %19
  %99 = bitcast %"class.WTF::StringAppend"* %4 to i64*
  store i64 ptrtoint ([41 x i8]* @.str.3 to i64), i64* %99, align 8, !alias.scope !13
  %100 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %100, align 8, !alias.scope !13
  %101 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i8** %101, align 8, !alias.scope !13
  br label %114

102:                                              ; preds = %96, %81
  %103 = phi i32 [ %97, %96 ], [ %82, %81 ]
  %104 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i8** %104, align 8, !alias.scope !13
  %105 = load atomic i32, i32* %24 monotonic, align 4, !noalias !13
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %102
  %109 = add i32 %103, -1
  store i32 %109, i32* %28, align 4, !noalias !13
  br label %110

110:                                              ; preds = %108, %102
  %111 = phi i32 [ %109, %108 ], [ %103, %102 ]
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #9, !noalias !13
  br label %114

114:                                              ; preds = %98, %110, %113
  %115 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %4)
  %116 = ptrtoint %"class.WTF::StringImpl"* %115 to i64
  %117 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %119, label %133, label %120

120:                                              ; preds = %114
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  br i1 %124, label %127, label %129

127:                                              ; preds = %120
  %128 = add i32 %126, -1
  store i32 %128, i32* %125, align 4
  br label %129

129:                                              ; preds = %127, %120
  %130 = phi i32 [ %128, %127 ], [ %126, %120 ]
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %129
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %118) #9
  br label %133

133:                                              ; preds = %114, %129, %132
  br i1 %22, label %159, label %134

134:                                              ; preds = %133
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %148

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #9
  %147 = load i32, i32* %139, align 4
  br label %148

148:                                              ; preds = %143, %146
  %149 = phi i32 [ %144, %143 ], [ %147, %146 ]
  %150 = load atomic i32, i32* %135 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %155

153:                                              ; preds = %148
  %154 = add i32 %149, -1
  store i32 %154, i32* %139, align 4
  br label %155

155:                                              ; preds = %153, %148
  %156 = phi i32 [ %154, %153 ], [ %149, %148 ]
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %155
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #9
  br label %159

159:                                              ; preds = %133, %155, %158
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #9
  br label %301

160:                                              ; preds = %14
  %161 = bitcast %"class.WTF::StringAppend"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %161) #9
  %162 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin8ToStringEv(%"class.blink::SecurityOrigin"* %17) #9
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %239, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %181

171:                                              ; preds = %164
  %172 = zext i32 %170 to i33
  %173 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %172, i33 1) #9
  %174 = extractvalue { i33, i1 } %173, 1
  %175 = extractvalue { i33, i1 } %173, 0
  %176 = icmp slt i33 %175, 0
  %177 = or i1 %174, %176
  br i1 %177, label %178, label %179, !prof !3

178:                                              ; preds = %171
  tail call void @llvm.trap() #9
  unreachable

179:                                              ; preds = %171
  %180 = trunc i33 %175 to i32
  store i32 %180, i32* %169, align 4
  br label %181

181:                                              ; preds = %179, %164
  %182 = phi i32 [ %180, %179 ], [ %170, %164 ]
  %183 = load atomic i32, i32* %165 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %196

186:                                              ; preds = %181
  %187 = zext i32 %182 to i33
  %188 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %187, i33 1) #9
  %189 = extractvalue { i33, i1 } %188, 1
  %190 = extractvalue { i33, i1 } %188, 0
  %191 = icmp slt i33 %190, 0
  %192 = or i1 %189, %191
  br i1 %192, label %193, label %194, !prof !3

193:                                              ; preds = %186
  tail call void @llvm.trap() #9
  unreachable

194:                                              ; preds = %186
  %195 = trunc i33 %190 to i32
  store i32 %195, i32* %169, align 4
  br label %196

196:                                              ; preds = %194, %181
  %197 = phi i32 [ %195, %194 ], [ %182, %181 ]
  %198 = load atomic i32, i32* %165 monotonic, align 4
  %199 = and i32 %198, 2
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %203

201:                                              ; preds = %196
  %202 = add i32 %197, -1
  store i32 %202, i32* %169, align 4
  br label %203

203:                                              ; preds = %201, %196
  %204 = phi i32 [ %202, %201 ], [ %197, %196 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #9
  br label %207

207:                                              ; preds = %203, %206
  %208 = load atomic i32, i32* %165 monotonic, align 4, !noalias !16
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = load i32, i32* %169, align 4
  br i1 %210, label %212, label %222

212:                                              ; preds = %207
  %213 = zext i32 %211 to i33
  %214 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %213, i33 1) #9
  %215 = extractvalue { i33, i1 } %214, 1
  %216 = extractvalue { i33, i1 } %214, 0
  %217 = icmp slt i33 %216, 0
  %218 = or i1 %215, %217
  br i1 %218, label %219, label %220, !prof !3

219:                                              ; preds = %212
  tail call void @llvm.trap() #9, !noalias !16
  unreachable

220:                                              ; preds = %212
  %221 = trunc i33 %216 to i32
  store i32 %221, i32* %169, align 4, !noalias !16
  br label %222

222:                                              ; preds = %207, %220
  %223 = phi i32 [ %221, %220 ], [ %211, %207 ]
  %224 = bitcast %"class.WTF::StringAppend"* %5 to i64*
  store i64 ptrtoint ([30 x i8]* @.str.5 to i64), i64* %224, align 8, !alias.scope !16
  %225 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %162, %"class.WTF::StringImpl"** %225, align 8, !alias.scope !16
  %226 = load atomic i32, i32* %165 monotonic, align 4, !noalias !16
  %227 = and i32 %226, 2
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %243

229:                                              ; preds = %222
  %230 = zext i32 %223 to i33
  %231 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %230, i33 1) #9
  %232 = extractvalue { i33, i1 } %231, 1
  %233 = extractvalue { i33, i1 } %231, 0
  %234 = icmp slt i33 %233, 0
  %235 = or i1 %232, %234
  br i1 %235, label %236, label %237, !prof !3

236:                                              ; preds = %229
  tail call void @llvm.trap() #9, !noalias !16
  unreachable

237:                                              ; preds = %229
  %238 = trunc i33 %233 to i32
  store i32 %238, i32* %169, align 4, !noalias !16
  br label %243

239:                                              ; preds = %160
  %240 = bitcast %"class.WTF::StringAppend"* %5 to i64*
  store i64 ptrtoint ([30 x i8]* @.str.5 to i64), i64* %240, align 8, !alias.scope !16
  %241 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %241, align 8, !alias.scope !16
  %242 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0), i8** %242, align 8, !alias.scope !16
  br label %255

243:                                              ; preds = %237, %222
  %244 = phi i32 [ %238, %237 ], [ %223, %222 ]
  %245 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0), i8** %245, align 8, !alias.scope !16
  %246 = load atomic i32, i32* %165 monotonic, align 4, !noalias !16
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %251

249:                                              ; preds = %243
  %250 = add i32 %244, -1
  store i32 %250, i32* %169, align 4, !noalias !16
  br label %251

251:                                              ; preds = %249, %243
  %252 = phi i32 [ %250, %249 ], [ %244, %243 ]
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %255

254:                                              ; preds = %251
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #9, !noalias !16
  br label %255

255:                                              ; preds = %239, %251, %254
  %256 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %5)
  %257 = ptrtoint %"class.WTF::StringImpl"* %256 to i64
  %258 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %258, align 8
  %260 = icmp eq %"class.WTF::StringImpl"* %259, null
  br i1 %260, label %274, label %261

261:                                              ; preds = %255
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = load atomic i32, i32* %262 monotonic, align 4
  %264 = and i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 0
  %267 = load i32, i32* %266, align 4
  br i1 %265, label %268, label %270

268:                                              ; preds = %261
  %269 = add i32 %267, -1
  store i32 %269, i32* %266, align 4
  br label %270

270:                                              ; preds = %268, %261
  %271 = phi i32 [ %269, %268 ], [ %267, %261 ]
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %274

273:                                              ; preds = %270
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %259) #9
  br label %274

274:                                              ; preds = %255, %270, %273
  br i1 %163, label %300, label %275

275:                                              ; preds = %274
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %277 = load atomic i32, i32* %276 monotonic, align 4
  %278 = and i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %281 = load i32, i32* %280, align 4
  br i1 %279, label %282, label %284

282:                                              ; preds = %275
  %283 = add i32 %281, -1
  store i32 %283, i32* %280, align 4
  br label %284

284:                                              ; preds = %282, %275
  %285 = phi i32 [ %283, %282 ], [ %281, %275 ]
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %289

287:                                              ; preds = %284
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #9
  %288 = load i32, i32* %280, align 4
  br label %289

289:                                              ; preds = %284, %287
  %290 = phi i32 [ %285, %284 ], [ %288, %287 ]
  %291 = load atomic i32, i32* %276 monotonic, align 4
  %292 = and i32 %291, 2
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %296

294:                                              ; preds = %289
  %295 = add i32 %290, -1
  store i32 %295, i32* %280, align 4
  br label %296

296:                                              ; preds = %294, %289
  %297 = phi i32 [ %295, %294 ], [ %290, %289 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #9
  br label %300

300:                                              ; preds = %274, %296, %299
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %161) #9
  br label %301

301:                                              ; preds = %300, %159, %11, %3, %7
  %302 = phi i64 [ 0, %7 ], [ 0, %3 ], [ 0, %11 ], [ %116, %159 ], [ %257, %300 ]
  %303 = inttoptr i64 %302 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %303
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink14LocalDOMWindow3UrlEv(%"class.blink::LocalDOMWindow"*) unnamed_addr #4

declare zeroext i1 @_ZNK5blink4KURL6IsNullEv(%"class.blink::KURL"*) local_unnamed_addr #4

declare %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin8ToStringEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.2334"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #9
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %3, i8* %8) #9
  %9 = bitcast %"class.WTF::StringTypeAdapter.2334"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #9
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %2, i8* %11) #9
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #9
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #9
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %34
  call void @llvm.trap() #9
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #9
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #9
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #9
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #9
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !3

77:                                               ; preds = %70
  call void @llvm.trap() #9
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #9
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #9
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink9DOMWindow29CrossDomainAccessErrorMessageEPKNS_14LocalDOMWindowENS0_25CrossDocumentAccessPolicyE(%"class.blink::DOMWindow"*, %"class.blink::LocalDOMWindow"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringAppend.2133", align 8
  %5 = alloca %"class.WTF::StringAppend.2133", align 8
  %6 = alloca %"class.WTF::StringAppend.2133", align 8
  %7 = alloca %"class.WTF::StringAppend.2133", align 8
  %8 = alloca %"class.WTF::StringAppend.2129", align 8
  %9 = alloca %"class.WTF::StringAppend.2129", align 8
  %10 = alloca %"class.WTF::StringAppend.2128", align 8
  %11 = alloca %"class.WTF::StringAppend.2129", align 8
  %12 = alloca %"class.WTF::StringAppend", align 8
  %13 = alloca %"class.blink::KURL", align 8
  %14 = alloca %"class.blink::KURL", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::StringAppend.2128", align 8
  %17 = alloca %"class.WTF::StringAppend.2129", align 8
  %18 = alloca %"class.WTF::StringAppend", align 8
  %19 = alloca %"class.WTF::StringAppend", align 8
  %20 = alloca %"class.WTF::StringAppend", align 8
  %21 = alloca %"class.WTF::StringAppend", align 8
  %22 = alloca %"class.WTF::StringAppend.2130", align 8
  %23 = alloca %"class.WTF::StringAppend.2131", align 8
  %24 = alloca %"class.WTF::StringAppend.2132", align 8
  %25 = alloca %"class.WTF::StringAppend.2133", align 8
  %26 = alloca %"class.WTF::StringAppend.2134", align 8
  %27 = alloca %"class.WTF::StringAppend.2130", align 8
  %28 = alloca %"class.WTF::StringAppend.2131", align 8
  %29 = alloca %"class.WTF::StringAppend.2132", align 8
  %30 = alloca %"class.WTF::StringAppend.2133", align 8
  %31 = alloca %"class.WTF::StringAppend.2134", align 8
  %32 = alloca %"class.WTF::StringAppend.2132", align 8
  %33 = alloca %"class.WTF::StringAppend.2133", align 8
  %34 = alloca %"class.WTF::StringAppend.2134", align 8
  %35 = alloca %"class.WTF::StringAppend.2132", align 8
  %36 = alloca %"class.WTF::StringAppend.2133", align 8
  %37 = alloca %"class.WTF::StringAppend.2134", align 8
  %38 = alloca %"class.WTF::StringAppend.2134", align 8
  %39 = alloca %"class.WTF::StringAppend.2134", align 8
  %40 = icmp eq %"class.blink::LocalDOMWindow"* %1, null
  br i1 %40, label %2336, label %41

41:                                               ; preds = %3
  %42 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 1, i32 0, i32 0
  %43 = load %"class.blink::Frame"*, %"class.blink::Frame"** %42, align 8
  %44 = icmp eq %"class.blink::Frame"* %43, null
  br i1 %44, label %2336, label %45

45:                                               ; preds = %41
  %46 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink14LocalDOMWindow3UrlEv(%"class.blink::LocalDOMWindow"* nonnull %1) #9
  %47 = tail call zeroext i1 @_ZNK5blink4KURL6IsNullEv(%"class.blink::KURL"* %46) #9
  br i1 %47, label %2336, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %1, i64 0, i32 1
  %50 = bitcast %"class.blink::ExecutionContext.base"* %49 to %"class.blink::ExecutionContext"*
  %51 = tail call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %50) #9
  %52 = load %"class.blink::Frame"*, %"class.blink::Frame"** %42, align 8
  %53 = bitcast %"class.blink::Frame"* %52 to %"class.blink::SecurityContext"* (%"class.blink::Frame"*)***
  %54 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)**, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*** %53, align 8
  %55 = getelementptr inbounds %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %54, i64 10
  %56 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %55, align 8
  %57 = tail call %"class.blink::SecurityContext"* %56(%"class.blink::Frame"* %52) #9
  %58 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %57, i64 0, i32 2, i32 0
  %59 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %58, align 8
  %60 = icmp eq %"class.blink::DOMWindow"* %0, null
  br i1 %60, label %69, label %61

61:                                               ; preds = %48
  %62 = bitcast %"class.blink::DOMWindow"* %0 to i1 (%"class.blink::DOMWindow"*)***
  %63 = load i1 (%"class.blink::DOMWindow"*)**, i1 (%"class.blink::DOMWindow"*)*** %62, align 8
  %64 = getelementptr inbounds i1 (%"class.blink::DOMWindow"*)*, i1 (%"class.blink::DOMWindow"*)** %63, i64 27
  %65 = load i1 (%"class.blink::DOMWindow"*)*, i1 (%"class.blink::DOMWindow"*)** %64, align 8
  %66 = tail call zeroext i1 %65(%"class.blink::DOMWindow"* nonnull %0) #9
  %67 = bitcast %"class.blink::DOMWindow"* %0 to %"class.blink::LocalDOMWindow"*
  %68 = select i1 %66, %"class.blink::LocalDOMWindow"* %67, %"class.blink::LocalDOMWindow"* null
  br label %69

69:                                               ; preds = %48, %61
  %70 = phi %"class.blink::LocalDOMWindow"* [ %68, %61 ], [ null, %48 ]
  %71 = bitcast %"class.WTF::StringAppend.2128"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %71) #9
  %72 = bitcast %"class.WTF::StringAppend.2129"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %72) #9
  %73 = bitcast %"class.WTF::StringAppend"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #9
  %74 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin8ToStringEv(%"class.blink::SecurityOrigin"* %51) #9
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %151, label %76

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %93

83:                                               ; preds = %76
  %84 = zext i32 %82 to i33
  %85 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %84, i33 1) #9
  %86 = extractvalue { i33, i1 } %85, 1
  %87 = extractvalue { i33, i1 } %85, 0
  %88 = icmp slt i33 %87, 0
  %89 = or i1 %86, %88
  br i1 %89, label %90, label %91, !prof !3

90:                                               ; preds = %83
  tail call void @llvm.trap() #9
  unreachable

91:                                               ; preds = %83
  %92 = trunc i33 %87 to i32
  store i32 %92, i32* %81, align 4
  br label %93

93:                                               ; preds = %91, %76
  %94 = phi i32 [ %92, %91 ], [ %82, %76 ]
  %95 = load atomic i32, i32* %77 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %108

98:                                               ; preds = %93
  %99 = zext i32 %94 to i33
  %100 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %99, i33 1) #9
  %101 = extractvalue { i33, i1 } %100, 1
  %102 = extractvalue { i33, i1 } %100, 0
  %103 = icmp slt i33 %102, 0
  %104 = or i1 %101, %103
  br i1 %104, label %105, label %106, !prof !3

105:                                              ; preds = %98
  tail call void @llvm.trap() #9
  unreachable

106:                                              ; preds = %98
  %107 = trunc i33 %102 to i32
  store i32 %107, i32* %81, align 4
  br label %108

108:                                              ; preds = %106, %93
  %109 = phi i32 [ %107, %106 ], [ %94, %93 ]
  %110 = load atomic i32, i32* %77 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %108
  %114 = add i32 %109, -1
  store i32 %114, i32* %81, align 4
  br label %115

115:                                              ; preds = %113, %108
  %116 = phi i32 [ %114, %113 ], [ %109, %108 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #9
  br label %119

119:                                              ; preds = %115, %118
  %120 = load atomic i32, i32* %77 monotonic, align 4, !noalias !19
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = load i32, i32* %81, align 4
  br i1 %122, label %124, label %134

124:                                              ; preds = %119
  %125 = zext i32 %123 to i33
  %126 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %125, i33 1) #9
  %127 = extractvalue { i33, i1 } %126, 1
  %128 = extractvalue { i33, i1 } %126, 0
  %129 = icmp slt i33 %128, 0
  %130 = or i1 %127, %129
  br i1 %130, label %131, label %132, !prof !3

131:                                              ; preds = %124
  tail call void @llvm.trap() #9, !noalias !19
  unreachable

132:                                              ; preds = %124
  %133 = trunc i33 %128 to i32
  store i32 %133, i32* %81, align 4, !noalias !19
  br label %134

134:                                              ; preds = %119, %132
  %135 = phi i32 [ %133, %132 ], [ %123, %119 ]
  %136 = bitcast %"class.WTF::StringAppend"* %12 to i64*
  store i64 ptrtoint ([30 x i8]* @.str.5 to i64), i64* %136, align 8, !alias.scope !19
  %137 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %137, align 8, !alias.scope !19
  %138 = load atomic i32, i32* %77 monotonic, align 4, !noalias !19
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %155

141:                                              ; preds = %134
  %142 = zext i32 %135 to i33
  %143 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %142, i33 1) #9
  %144 = extractvalue { i33, i1 } %143, 1
  %145 = extractvalue { i33, i1 } %143, 0
  %146 = icmp slt i33 %145, 0
  %147 = or i1 %144, %146
  br i1 %147, label %148, label %149, !prof !3

148:                                              ; preds = %141
  tail call void @llvm.trap() #9, !noalias !19
  unreachable

149:                                              ; preds = %141
  %150 = trunc i33 %145 to i32
  store i32 %150, i32* %81, align 4, !noalias !19
  br label %155

151:                                              ; preds = %69
  %152 = bitcast %"class.WTF::StringAppend"* %12 to i64*
  store i64 ptrtoint ([30 x i8]* @.str.5 to i64), i64* %152, align 8, !alias.scope !19
  %153 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %153, align 8, !alias.scope !19
  %154 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.7, i64 0, i64 0), i8** %154, align 8, !alias.scope !19
  br label %167

155:                                              ; preds = %149, %134
  %156 = phi i32 [ %150, %149 ], [ %135, %134 ]
  %157 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.7, i64 0, i64 0), i8** %157, align 8, !alias.scope !19
  %158 = load atomic i32, i32* %77 monotonic, align 4, !noalias !19
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %163

161:                                              ; preds = %155
  %162 = add i32 %156, -1
  store i32 %162, i32* %81, align 4, !noalias !19
  br label %163

163:                                              ; preds = %161, %155
  %164 = phi i32 [ %162, %161 ], [ %156, %155 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #9, !noalias !19
  br label %167

167:                                              ; preds = %151, %163, %166
  %168 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin8ToStringEv(%"class.blink::SecurityOrigin"* %59) #9
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.2129"* nonnull sret %11, %"class.WTF::StringAppend"* nonnull dereferenceable(24) %12, %"class.WTF::StringImpl"* %168)
  %169 = bitcast %"class.WTF::StringAppend.2129"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %169)
  %170 = bitcast %"class.WTF::StringAppend.2129"* %11 to i64*
  %171 = load i64, i64* %170, align 8, !noalias !22
  %172 = bitcast %"class.WTF::StringAppend.2129"* %9 to i64*
  store i64 %171, i64* %172, align 8, !noalias !22
  %173 = getelementptr inbounds %"class.WTF::StringAppend.2129", %"class.WTF::StringAppend.2129"* %11, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8, !noalias !22
  %175 = getelementptr inbounds %"class.WTF::StringAppend.2129", %"class.WTF::StringAppend.2129"* %9, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %174, %"class.WTF::StringImpl"** %175, align 8, !noalias !22
  %176 = icmp eq %"class.WTF::StringImpl"* %174, null
  br i1 %176, label %194, label %177

177:                                              ; preds = %167
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load atomic i32, i32* %178 monotonic, align 4
  %180 = and i32 %179, 2
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %194

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  %185 = zext i32 %184 to i33
  %186 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %185, i33 1) #9
  %187 = extractvalue { i33, i1 } %186, 1
  %188 = extractvalue { i33, i1 } %186, 0
  %189 = icmp slt i33 %188, 0
  %190 = or i1 %187, %189
  br i1 %190, label %191, label %192, !prof !3

191:                                              ; preds = %182
  call void @llvm.trap() #9
  unreachable

192:                                              ; preds = %182
  %193 = trunc i33 %188 to i32
  store i32 %193, i32* %183, align 4
  br label %194

194:                                              ; preds = %192, %177, %167
  %195 = getelementptr inbounds %"class.WTF::StringAppend.2129", %"class.WTF::StringAppend.2129"* %9, i64 0, i32 0, i32 1
  %196 = getelementptr inbounds %"class.WTF::StringAppend.2129", %"class.WTF::StringAppend.2129"* %11, i64 0, i32 0, i32 1
  %197 = bitcast i8** %196 to i64*
  %198 = load i64, i64* %197, align 8, !noalias !22
  %199 = bitcast i8** %195 to i64*
  store i64 %198, i64* %199, align 8, !noalias !22
  %200 = getelementptr inbounds %"class.WTF::StringAppend.2129", %"class.WTF::StringAppend.2129"* %11, i64 0, i32 1, i32 0, i32 0
  %201 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %200, align 8, !noalias !22
  %202 = getelementptr inbounds %"class.WTF::StringAppend.2129", %"class.WTF::StringAppend.2129"* %9, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %201, %"class.WTF::StringImpl"** %202, align 8, !noalias !22
  %203 = icmp eq %"class.WTF::StringImpl"* %201, null
  br i1 %203, label %221, label %204

204:                                              ; preds = %194
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %201, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load atomic i32, i32* %205 monotonic, align 4
  %207 = and i32 %206, 2
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %221

209:                                              ; preds = %204
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %201, i64 0, i32 0
  %211 = load i32, i32* %210, align 4
  %212 = zext i32 %211 to i33
  %213 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %212, i33 1) #9
  %214 = extractvalue { i33, i1 } %213, 1
  %215 = extractvalue { i33, i1 } %213, 0
  %216 = icmp slt i33 %215, 0
  %217 = or i1 %214, %216
  br i1 %217, label %218, label %219, !prof !3

218:                                              ; preds = %209
  call void @llvm.trap() #9
  unreachable

219:                                              ; preds = %209
  %220 = trunc i33 %215 to i32
  store i32 %220, i32* %210, align 4
  br label %221

221:                                              ; preds = %194, %204, %219
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.2128"* nonnull %10, %"class.WTF::StringAppend.2129"* nonnull byval(%"class.WTF::StringAppend.2129") align 8 %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0)) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %169)
  %222 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.2128"* nonnull %10)
  %223 = getelementptr inbounds %"class.WTF::StringAppend.2128", %"class.WTF::StringAppend.2128"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %223, align 8
  %225 = icmp eq %"class.WTF::StringImpl"* %224, null
  br i1 %225, label %239, label %226

226:                                              ; preds = %221
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = load atomic i32, i32* %227 monotonic, align 4
  %229 = and i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 0
  %232 = load i32, i32* %231, align 4
  br i1 %230, label %233, label %235

233:                                              ; preds = %226
  %234 = add i32 %232, -1
  store i32 %234, i32* %231, align 4
  br label %235

235:                                              ; preds = %233, %226
  %236 = phi i32 [ %234, %233 ], [ %232, %226 ]
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %239

238:                                              ; preds = %235
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %224) #9
  br label %239

239:                                              ; preds = %238, %235, %221
  %240 = getelementptr inbounds %"class.WTF::StringAppend.2128", %"class.WTF::StringAppend.2128"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %241 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %240, align 8
  %242 = icmp eq %"class.WTF::StringImpl"* %241, null
  br i1 %242, label %256, label %243

243:                                              ; preds = %239
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %241, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = load atomic i32, i32* %244 monotonic, align 4
  %246 = and i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %241, i64 0, i32 0
  %249 = load i32, i32* %248, align 4
  br i1 %247, label %250, label %252

250:                                              ; preds = %243
  %251 = add i32 %249, -1
  store i32 %251, i32* %248, align 4
  br label %252

252:                                              ; preds = %250, %243
  %253 = phi i32 [ %251, %250 ], [ %249, %243 ]
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %256

255:                                              ; preds = %252
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %241) #9
  br label %256

256:                                              ; preds = %239, %252, %255
  %257 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %200, align 8
  %258 = icmp eq %"class.WTF::StringImpl"* %257, null
  br i1 %258, label %272, label %259

259:                                              ; preds = %256
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %261 = load atomic i32, i32* %260 monotonic, align 4
  %262 = and i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 0
  %265 = load i32, i32* %264, align 4
  br i1 %263, label %266, label %268

266:                                              ; preds = %259
  %267 = add i32 %265, -1
  store i32 %267, i32* %264, align 4
  br label %268

268:                                              ; preds = %266, %259
  %269 = phi i32 [ %267, %266 ], [ %265, %259 ]
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %272

271:                                              ; preds = %268
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %257) #9
  br label %272

272:                                              ; preds = %271, %268, %256
  %273 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  %274 = icmp eq %"class.WTF::StringImpl"* %273, null
  br i1 %274, label %288, label %275

275:                                              ; preds = %272
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %273, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %277 = load atomic i32, i32* %276 monotonic, align 4
  %278 = and i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %273, i64 0, i32 0
  %281 = load i32, i32* %280, align 4
  br i1 %279, label %282, label %284

282:                                              ; preds = %275
  %283 = add i32 %281, -1
  store i32 %283, i32* %280, align 4
  br label %284

284:                                              ; preds = %282, %275
  %285 = phi i32 [ %283, %282 ], [ %281, %275 ]
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %288

287:                                              ; preds = %284
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %273) #9
  br label %288

288:                                              ; preds = %272, %284, %287
  %289 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  %290 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %291 = icmp eq %"class.WTF::StringImpl"* %290, null
  br i1 %291, label %305, label %292

292:                                              ; preds = %288
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %290, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %294 = load atomic i32, i32* %293 monotonic, align 4
  %295 = and i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %290, i64 0, i32 0
  %298 = load i32, i32* %297, align 4
  br i1 %296, label %299, label %301

299:                                              ; preds = %292
  %300 = add i32 %298, -1
  store i32 %300, i32* %297, align 4
  br label %301

301:                                              ; preds = %299, %292
  %302 = phi i32 [ %300, %299 ], [ %298, %292 ]
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %304, label %305

304:                                              ; preds = %301
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %290) #9
  br label %305

305:                                              ; preds = %288, %301, %304
  br i1 %75, label %331, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %308 = load atomic i32, i32* %307 monotonic, align 4
  %309 = and i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %312 = load i32, i32* %311, align 4
  br i1 %310, label %313, label %315

313:                                              ; preds = %306
  %314 = add i32 %312, -1
  store i32 %314, i32* %311, align 4
  br label %315

315:                                              ; preds = %313, %306
  %316 = phi i32 [ %314, %313 ], [ %312, %306 ]
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %318, label %320

318:                                              ; preds = %315
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #9
  %319 = load i32, i32* %311, align 4
  br label %320

320:                                              ; preds = %315, %318
  %321 = phi i32 [ %316, %315 ], [ %319, %318 ]
  %322 = load atomic i32, i32* %307 monotonic, align 4
  %323 = and i32 %322, 2
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %325, label %327

325:                                              ; preds = %320
  %326 = add i32 %321, -1
  store i32 %326, i32* %311, align 4
  br label %327

327:                                              ; preds = %325, %320
  %328 = phi i32 [ %326, %325 ], [ %321, %320 ]
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %331

330:                                              ; preds = %327
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #9
  br label %331

331:                                              ; preds = %305, %327, %330
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %72) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %71) #9
  %332 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %13, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %332) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %332, i8 -86, i64 112, i1 false)
  %333 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink14LocalDOMWindow3UrlEv(%"class.blink::LocalDOMWindow"* nonnull %1) #9
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %13, %"class.blink::KURL"* dereferenceable(112) %333) #9
  %334 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %334) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %334, i8 -86, i64 112, i1 false)
  %335 = icmp eq %"class.blink::LocalDOMWindow"* %70, null
  br i1 %335, label %338, label %336

336:                                              ; preds = %331
  %337 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink14LocalDOMWindow3UrlEv(%"class.blink::LocalDOMWindow"* nonnull %70) #9
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %14, %"class.blink::KURL"* dereferenceable(112) %337) #9
  br label %359

338:                                              ; preds = %331
  %339 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() #9
  %340 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %340) #9
  %341 = call %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin8ToStringEv(%"class.blink::SecurityOrigin"* %59) #9
  %342 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %341, %"class.WTF::StringImpl"** %342, align 8
  call void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"* nonnull %14, %"class.blink::KURL"* dereferenceable(112) %339, %"class.WTF::String"* nonnull dereferenceable(8) %15) #9
  %343 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %342, align 8
  %344 = icmp eq %"class.WTF::StringImpl"* %343, null
  br i1 %344, label %358, label %345

345:                                              ; preds = %338
  %346 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %343, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %347 = load atomic i32, i32* %346 monotonic, align 4
  %348 = and i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %343, i64 0, i32 0
  %351 = load i32, i32* %350, align 4
  br i1 %349, label %352, label %354

352:                                              ; preds = %345
  %353 = add i32 %351, -1
  store i32 %353, i32* %350, align 4
  br label %354

354:                                              ; preds = %352, %345
  %355 = phi i32 [ %353, %352 ], [ %351, %345 ]
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %357, label %358

357:                                              ; preds = %354
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %343) #9
  br label %358

358:                                              ; preds = %338, %354, %357
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %340) #9
  br label %359

359:                                              ; preds = %336, %358
  %360 = load %"class.blink::Frame"*, %"class.blink::Frame"** %42, align 8
  %361 = bitcast %"class.blink::Frame"* %360 to %"class.blink::SecurityContext"* (%"class.blink::Frame"*)***
  %362 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)**, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*** %361, align 8
  %363 = getelementptr inbounds %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %362, i64 10
  %364 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %363, align 8
  %365 = call %"class.blink::SecurityContext"* %364(%"class.blink::Frame"* %360) #9
  %366 = call zeroext i1 @_ZNK5blink15SecurityContext11IsSandboxedEN7network5mojom15WebSandboxFlagsE(%"class.blink::SecurityContext"* %365, i32 4) #9
  br i1 %366, label %369, label %367

367:                                              ; preds = %359
  %368 = call zeroext i1 @_ZNK5blink16ExecutionContext11IsSandboxedEN7network5mojom15WebSandboxFlagsE(%"class.blink::ExecutionContext"* %50, i32 4) #9
  br i1 %368, label %369, label %1064

369:                                              ; preds = %367, %359
  %370 = bitcast %"class.WTF::StringAppend.2128"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %370) #9
  %371 = bitcast %"class.WTF::StringAppend.2129"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %371) #9
  %372 = bitcast %"class.WTF::StringAppend"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %372) #9
  %373 = call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin6CreateERKNS_4KURLE(%"class.blink::KURL"* nonnull dereferenceable(112) %13) #9
  %374 = call %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin8ToStringEv(%"class.blink::SecurityOrigin"* %373) #9
  %375 = icmp eq %"class.WTF::StringImpl"* %374, null
  br i1 %375, label %451, label %376

376:                                              ; preds = %369
  %377 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %374, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %378 = load atomic i32, i32* %377 monotonic, align 4
  %379 = and i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %374, i64 0, i32 0
  %382 = load i32, i32* %381, align 4
  br i1 %380, label %383, label %393

383:                                              ; preds = %376
  %384 = zext i32 %382 to i33
  %385 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %384, i33 1) #9
  %386 = extractvalue { i33, i1 } %385, 1
  %387 = extractvalue { i33, i1 } %385, 0
  %388 = icmp slt i33 %387, 0
  %389 = or i1 %386, %388
  br i1 %389, label %390, label %391, !prof !3

390:                                              ; preds = %383
  call void @llvm.trap() #9
  unreachable

391:                                              ; preds = %383
  %392 = trunc i33 %387 to i32
  store i32 %392, i32* %381, align 4
  br label %393

393:                                              ; preds = %391, %376
  %394 = phi i32 [ %392, %391 ], [ %382, %376 ]
  %395 = load atomic i32, i32* %377 monotonic, align 4
  %396 = and i32 %395, 2
  %397 = icmp eq i32 %396, 0
  br i1 %397, label %398, label %408

398:                                              ; preds = %393
  %399 = zext i32 %394 to i33
  %400 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %399, i33 1) #9
  %401 = extractvalue { i33, i1 } %400, 1
  %402 = extractvalue { i33, i1 } %400, 0
  %403 = icmp slt i33 %402, 0
  %404 = or i1 %401, %403
  br i1 %404, label %405, label %406, !prof !3

405:                                              ; preds = %398
  call void @llvm.trap() #9
  unreachable

406:                                              ; preds = %398
  %407 = trunc i33 %402 to i32
  store i32 %407, i32* %381, align 4
  br label %408

408:                                              ; preds = %406, %393
  %409 = phi i32 [ %407, %406 ], [ %394, %393 ]
  %410 = load atomic i32, i32* %377 monotonic, align 4
  %411 = and i32 %410, 2
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %413, label %415

413:                                              ; preds = %408
  %414 = add i32 %409, -1
  store i32 %414, i32* %381, align 4
  br label %415

415:                                              ; preds = %413, %408
  %416 = phi i32 [ %414, %413 ], [ %409, %408 ]
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %418, label %419

418:                                              ; preds = %415
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %374) #9
  br label %419

419:                                              ; preds = %415, %418
  %420 = load atomic i32, i32* %377 monotonic, align 4, !noalias !25
  %421 = and i32 %420, 2
  %422 = icmp eq i32 %421, 0
  %423 = load i32, i32* %381, align 4
  br i1 %422, label %424, label %434

424:                                              ; preds = %419
  %425 = zext i32 %423 to i33
  %426 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %425, i33 1) #9
  %427 = extractvalue { i33, i1 } %426, 1
  %428 = extractvalue { i33, i1 } %426, 0
  %429 = icmp slt i33 %428, 0
  %430 = or i1 %427, %429
  br i1 %430, label %431, label %432, !prof !3

431:                                              ; preds = %424
  call void @llvm.trap() #9, !noalias !25
  unreachable

432:                                              ; preds = %424
  %433 = trunc i33 %428 to i32
  store i32 %433, i32* %381, align 4, !noalias !25
  br label %434

434:                                              ; preds = %419, %432
  %435 = phi i32 [ %433, %432 ], [ %423, %419 ]
  %436 = bitcast %"class.WTF::StringAppend"* %18 to i64*
  store i64 ptrtoint ([21 x i8]* @.str.9 to i64), i64* %436, align 8, !alias.scope !25
  %437 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %18, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %374, %"class.WTF::StringImpl"** %437, align 8, !alias.scope !25
  %438 = load atomic i32, i32* %377 monotonic, align 4, !noalias !25
  %439 = and i32 %438, 2
  %440 = icmp eq i32 %439, 0
  br i1 %440, label %441, label %455

441:                                              ; preds = %434
  %442 = zext i32 %435 to i33
  %443 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %442, i33 1) #9
  %444 = extractvalue { i33, i1 } %443, 1
  %445 = extractvalue { i33, i1 } %443, 0
  %446 = icmp slt i33 %445, 0
  %447 = or i1 %444, %446
  br i1 %447, label %448, label %449, !prof !3

448:                                              ; preds = %441
  call void @llvm.trap() #9, !noalias !25
  unreachable

449:                                              ; preds = %441
  %450 = trunc i33 %445 to i32
  store i32 %450, i32* %381, align 4, !noalias !25
  br label %455

451:                                              ; preds = %369
  %452 = bitcast %"class.WTF::StringAppend"* %18 to i64*
  store i64 ptrtoint ([21 x i8]* @.str.9 to i64), i64* %452, align 8, !alias.scope !25
  %453 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %18, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %453, align 8, !alias.scope !25
  %454 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %18, i64 0, i32 1
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i64 0, i64 0), i8** %454, align 8, !alias.scope !25
  br label %467

455:                                              ; preds = %449, %434
  %456 = phi i32 [ %450, %449 ], [ %435, %434 ]
  %457 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %18, i64 0, i32 1
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i64 0, i64 0), i8** %457, align 8, !alias.scope !25
  %458 = load atomic i32, i32* %377 monotonic, align 4, !noalias !25
  %459 = and i32 %458, 2
  %460 = icmp eq i32 %459, 0
  br i1 %460, label %461, label %463

461:                                              ; preds = %455
  %462 = add i32 %456, -1
  store i32 %462, i32* %381, align 4, !noalias !25
  br label %463

463:                                              ; preds = %461, %455
  %464 = phi i32 [ %462, %461 ], [ %456, %455 ]
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %466, label %467

466:                                              ; preds = %463
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %374) #9, !noalias !25
  br label %467

467:                                              ; preds = %451, %463, %466
  %468 = call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin6CreateERKNS_4KURLE(%"class.blink::KURL"* nonnull dereferenceable(112) %14) #9
  %469 = call %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin8ToStringEv(%"class.blink::SecurityOrigin"* %468) #9
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.2129"* nonnull sret %17, %"class.WTF::StringAppend"* nonnull dereferenceable(24) %18, %"class.WTF::StringImpl"* %469)
  %470 = bitcast %"class.WTF::StringAppend.2129"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %470)
  %471 = bitcast %"class.WTF::StringAppend.2129"* %17 to i64*
  %472 = load i64, i64* %471, align 8, !noalias !28
  %473 = bitcast %"class.WTF::StringAppend.2129"* %8 to i64*
  store i64 %472, i64* %473, align 8, !noalias !28
  %474 = getelementptr inbounds %"class.WTF::StringAppend.2129", %"class.WTF::StringAppend.2129"* %17, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %475 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %474, align 8, !noalias !28
  %476 = getelementptr inbounds %"class.WTF::StringAppend.2129", %"class.WTF::StringAppend.2129"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %475, %"class.WTF::StringImpl"** %476, align 8, !noalias !28
  %477 = icmp eq %"class.WTF::StringImpl"* %475, null
  br i1 %477, label %495, label %478

478:                                              ; preds = %467
  %479 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %475, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %480 = load atomic i32, i32* %479 monotonic, align 4
  %481 = and i32 %480, 2
  %482 = icmp eq i32 %481, 0
  br i1 %482, label %483, label %495

483:                                              ; preds = %478
  %484 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %475, i64 0, i32 0
  %485 = load i32, i32* %484, align 4
  %486 = zext i32 %485 to i33
  %487 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %486, i33 1) #9
  %488 = extractvalue { i33, i1 } %487, 1
  %489 = extractvalue { i33, i1 } %487, 0
  %490 = icmp slt i33 %489, 0
  %491 = or i1 %488, %490
  br i1 %491, label %492, label %493, !prof !3

492:                                              ; preds = %483
  call void @llvm.trap() #9
  unreachable

493:                                              ; preds = %483
  %494 = trunc i33 %489 to i32
  store i32 %494, i32* %484, align 4
  br label %495

495:                                              ; preds = %493, %478, %467
  %496 = getelementptr inbounds %"class.WTF::StringAppend.2129", %"class.WTF::StringAppend.2129"* %8, i64 0, i32 0, i32 1
  %497 = getelementptr inbounds %"class.WTF::StringAppend.2129", %"class.WTF::StringAppend.2129"* %17, i64 0, i32 0, i32 1
  %498 = bitcast i8** %497 to i64*
  %499 = load i64, i64* %498, align 8, !noalias !28
  %500 = bitcast i8** %496 to i64*
  store i64 %499, i64* %500, align 8, !noalias !28
  %501 = getelementptr inbounds %"class.WTF::StringAppend.2129", %"class.WTF::StringAppend.2129"* %17, i64 0, i32 1, i32 0, i32 0
  %502 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %501, align 8, !noalias !28
  %503 = getelementptr inbounds %"class.WTF::StringAppend.2129", %"class.WTF::StringAppend.2129"* %8, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %502, %"class.WTF::StringImpl"** %503, align 8, !noalias !28
  %504 = icmp eq %"class.WTF::StringImpl"* %502, null
  br i1 %504, label %522, label %505

505:                                              ; preds = %495
  %506 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %502, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %507 = load atomic i32, i32* %506 monotonic, align 4
  %508 = and i32 %507, 2
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %510, label %522

510:                                              ; preds = %505
  %511 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %502, i64 0, i32 0
  %512 = load i32, i32* %511, align 4
  %513 = zext i32 %512 to i33
  %514 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %513, i33 1) #9
  %515 = extractvalue { i33, i1 } %514, 1
  %516 = extractvalue { i33, i1 } %514, 0
  %517 = icmp slt i33 %516, 0
  %518 = or i1 %515, %517
  br i1 %518, label %519, label %520, !prof !3

519:                                              ; preds = %510
  call void @llvm.trap() #9
  unreachable

520:                                              ; preds = %510
  %521 = trunc i33 %516 to i32
  store i32 %521, i32* %511, align 4
  br label %522

522:                                              ; preds = %495, %505, %520
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.2128"* nonnull %16, %"class.WTF::StringAppend.2129"* nonnull byval(%"class.WTF::StringAppend.2129") align 8 %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0)) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %470)
  %523 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.2128"* nonnull %16)
  %524 = icmp eq %"class.WTF::StringImpl"* %222, null
  br i1 %524, label %538, label %525

525:                                              ; preds = %522
  %526 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %527 = load atomic i32, i32* %526 monotonic, align 4
  %528 = and i32 %527, 2
  %529 = icmp eq i32 %528, 0
  %530 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 0
  %531 = load i32, i32* %530, align 4
  br i1 %529, label %532, label %534

532:                                              ; preds = %525
  %533 = add i32 %531, -1
  store i32 %533, i32* %530, align 4
  br label %534

534:                                              ; preds = %532, %525
  %535 = phi i32 [ %533, %532 ], [ %531, %525 ]
  %536 = icmp eq i32 %535, 0
  br i1 %536, label %537, label %538

537:                                              ; preds = %534
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %222) #9
  br label %538

538:                                              ; preds = %537, %534, %522
  %539 = getelementptr inbounds %"class.WTF::StringAppend.2128", %"class.WTF::StringAppend.2128"* %16, i64 0, i32 0, i32 1, i32 0, i32 0
  %540 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %539, align 8
  %541 = icmp eq %"class.WTF::StringImpl"* %540, null
  br i1 %541, label %555, label %542

542:                                              ; preds = %538
  %543 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %540, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %544 = load atomic i32, i32* %543 monotonic, align 4
  %545 = and i32 %544, 2
  %546 = icmp eq i32 %545, 0
  %547 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %540, i64 0, i32 0
  %548 = load i32, i32* %547, align 4
  br i1 %546, label %549, label %551

549:                                              ; preds = %542
  %550 = add i32 %548, -1
  store i32 %550, i32* %547, align 4
  br label %551

551:                                              ; preds = %549, %542
  %552 = phi i32 [ %550, %549 ], [ %548, %542 ]
  %553 = icmp eq i32 %552, 0
  br i1 %553, label %554, label %555

554:                                              ; preds = %551
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %540) #9
  br label %555

555:                                              ; preds = %554, %551, %538
  %556 = getelementptr inbounds %"class.WTF::StringAppend.2128", %"class.WTF::StringAppend.2128"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %557 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %556, align 8
  %558 = icmp eq %"class.WTF::StringImpl"* %557, null
  br i1 %558, label %572, label %559

559:                                              ; preds = %555
  %560 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %557, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %561 = load atomic i32, i32* %560 monotonic, align 4
  %562 = and i32 %561, 2
  %563 = icmp eq i32 %562, 0
  %564 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %557, i64 0, i32 0
  %565 = load i32, i32* %564, align 4
  br i1 %563, label %566, label %568

566:                                              ; preds = %559
  %567 = add i32 %565, -1
  store i32 %567, i32* %564, align 4
  br label %568

568:                                              ; preds = %566, %559
  %569 = phi i32 [ %567, %566 ], [ %565, %559 ]
  %570 = icmp eq i32 %569, 0
  br i1 %570, label %571, label %572

571:                                              ; preds = %568
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %557) #9
  br label %572

572:                                              ; preds = %555, %568, %571
  %573 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %501, align 8
  %574 = icmp eq %"class.WTF::StringImpl"* %573, null
  br i1 %574, label %588, label %575

575:                                              ; preds = %572
  %576 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %573, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %577 = load atomic i32, i32* %576 monotonic, align 4
  %578 = and i32 %577, 2
  %579 = icmp eq i32 %578, 0
  %580 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %573, i64 0, i32 0
  %581 = load i32, i32* %580, align 4
  br i1 %579, label %582, label %584

582:                                              ; preds = %575
  %583 = add i32 %581, -1
  store i32 %583, i32* %580, align 4
  br label %584

584:                                              ; preds = %582, %575
  %585 = phi i32 [ %583, %582 ], [ %581, %575 ]
  %586 = icmp eq i32 %585, 0
  br i1 %586, label %587, label %588

587:                                              ; preds = %584
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %573) #9
  br label %588

588:                                              ; preds = %587, %584, %572
  %589 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %474, align 8
  %590 = icmp eq %"class.WTF::StringImpl"* %589, null
  br i1 %590, label %604, label %591

591:                                              ; preds = %588
  %592 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %589, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %593 = load atomic i32, i32* %592 monotonic, align 4
  %594 = and i32 %593, 2
  %595 = icmp eq i32 %594, 0
  %596 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %589, i64 0, i32 0
  %597 = load i32, i32* %596, align 4
  br i1 %595, label %598, label %600

598:                                              ; preds = %591
  %599 = add i32 %597, -1
  store i32 %599, i32* %596, align 4
  br label %600

600:                                              ; preds = %598, %591
  %601 = phi i32 [ %599, %598 ], [ %597, %591 ]
  %602 = icmp eq i32 %601, 0
  br i1 %602, label %603, label %604

603:                                              ; preds = %600
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %589) #9
  br label %604

604:                                              ; preds = %588, %600, %603
  %605 = icmp eq %"class.blink::SecurityOrigin"* %468, null
  br i1 %605, label %613, label %606

606:                                              ; preds = %604
  %607 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %468, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %607) #9
  %608 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %468, i64 0, i32 0, i32 0, i32 0, i32 0
  %609 = load i32, i32* %608, align 4
  %610 = icmp eq i32 %609, 0
  br i1 %610, label %611, label %613

611:                                              ; preds = %606
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %468) #9
  %612 = bitcast %"class.blink::SecurityOrigin"* %468 to i8*
  call void @free(i8* %612) #9
  br label %613

613:                                              ; preds = %604, %606, %611
  %614 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %18, i64 0, i32 0, i32 1, i32 0, i32 0
  %615 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %614, align 8
  %616 = icmp eq %"class.WTF::StringImpl"* %615, null
  br i1 %616, label %630, label %617

617:                                              ; preds = %613
  %618 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %615, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %619 = load atomic i32, i32* %618 monotonic, align 4
  %620 = and i32 %619, 2
  %621 = icmp eq i32 %620, 0
  %622 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %615, i64 0, i32 0
  %623 = load i32, i32* %622, align 4
  br i1 %621, label %624, label %626

624:                                              ; preds = %617
  %625 = add i32 %623, -1
  store i32 %625, i32* %622, align 4
  br label %626

626:                                              ; preds = %624, %617
  %627 = phi i32 [ %625, %624 ], [ %623, %617 ]
  %628 = icmp eq i32 %627, 0
  br i1 %628, label %629, label %630

629:                                              ; preds = %626
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %615) #9
  br label %630

630:                                              ; preds = %613, %626, %629
  br i1 %375, label %656, label %631

631:                                              ; preds = %630
  %632 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %374, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %633 = load atomic i32, i32* %632 monotonic, align 4
  %634 = and i32 %633, 2
  %635 = icmp eq i32 %634, 0
  %636 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %374, i64 0, i32 0
  %637 = load i32, i32* %636, align 4
  br i1 %635, label %638, label %640

638:                                              ; preds = %631
  %639 = add i32 %637, -1
  store i32 %639, i32* %636, align 4
  br label %640

640:                                              ; preds = %638, %631
  %641 = phi i32 [ %639, %638 ], [ %637, %631 ]
  %642 = icmp eq i32 %641, 0
  br i1 %642, label %643, label %645

643:                                              ; preds = %640
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %374) #9
  %644 = load i32, i32* %636, align 4
  br label %645

645:                                              ; preds = %640, %643
  %646 = phi i32 [ %641, %640 ], [ %644, %643 ]
  %647 = load atomic i32, i32* %632 monotonic, align 4
  %648 = and i32 %647, 2
  %649 = icmp eq i32 %648, 0
  br i1 %649, label %650, label %652

650:                                              ; preds = %645
  %651 = add i32 %646, -1
  store i32 %651, i32* %636, align 4
  br label %652

652:                                              ; preds = %650, %645
  %653 = phi i32 [ %651, %650 ], [ %646, %645 ]
  %654 = icmp eq i32 %653, 0
  br i1 %654, label %655, label %656

655:                                              ; preds = %652
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %374) #9
  br label %656

656:                                              ; preds = %630, %652, %655
  %657 = icmp eq %"class.blink::SecurityOrigin"* %373, null
  br i1 %657, label %665, label %658

658:                                              ; preds = %656
  %659 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %373, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %659) #9
  %660 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %373, i64 0, i32 0, i32 0, i32 0, i32 0
  %661 = load i32, i32* %660, align 4
  %662 = icmp eq i32 %661, 0
  br i1 %662, label %663, label %665

663:                                              ; preds = %658
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %373) #9
  %664 = bitcast %"class.blink::SecurityOrigin"* %373 to i8*
  call void @free(i8* %664) #9
  br label %665

665:                                              ; preds = %656, %658, %663
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %372) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %371) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %370) #9
  %666 = load %"class.blink::Frame"*, %"class.blink::Frame"** %42, align 8
  %667 = bitcast %"class.blink::Frame"* %666 to %"class.blink::SecurityContext"* (%"class.blink::Frame"*)***
  %668 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)**, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*** %667, align 8
  %669 = getelementptr inbounds %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %668, i64 10
  %670 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %669, align 8
  %671 = call %"class.blink::SecurityContext"* %670(%"class.blink::Frame"* %666) #9
  %672 = call zeroext i1 @_ZNK5blink15SecurityContext11IsSandboxedEN7network5mojom15WebSandboxFlagsE(%"class.blink::SecurityContext"* %671, i32 4) #9
  br i1 %672, label %673, label %802

673:                                              ; preds = %665
  %674 = call zeroext i1 @_ZNK5blink16ExecutionContext11IsSandboxedEN7network5mojom15WebSandboxFlagsE(%"class.blink::ExecutionContext"* %50, i32 4) #9
  br i1 %674, label %675, label %802

675:                                              ; preds = %673
  %676 = bitcast %"class.WTF::StringAppend"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %676) #9
  %677 = icmp eq %"class.WTF::StringImpl"* %523, null
  br i1 %677, label %753, label %678

678:                                              ; preds = %675
  %679 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %523, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %680 = load atomic i32, i32* %679 monotonic, align 4
  %681 = and i32 %680, 2
  %682 = icmp eq i32 %681, 0
  %683 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %523, i64 0, i32 0
  %684 = load i32, i32* %683, align 4
  br i1 %682, label %685, label %695

685:                                              ; preds = %678
  %686 = zext i32 %684 to i33
  %687 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %686, i33 1) #9
  %688 = extractvalue { i33, i1 } %687, 1
  %689 = extractvalue { i33, i1 } %687, 0
  %690 = icmp slt i33 %689, 0
  %691 = or i1 %688, %690
  br i1 %691, label %692, label %693, !prof !3

692:                                              ; preds = %685
  call void @llvm.trap() #9
  unreachable

693:                                              ; preds = %685
  %694 = trunc i33 %689 to i32
  store i32 %694, i32* %683, align 4
  br label %695

695:                                              ; preds = %693, %678
  %696 = phi i32 [ %694, %693 ], [ %684, %678 ]
  %697 = load atomic i32, i32* %679 monotonic, align 4
  %698 = and i32 %697, 2
  %699 = icmp eq i32 %698, 0
  br i1 %699, label %700, label %710

700:                                              ; preds = %695
  %701 = zext i32 %696 to i33
  %702 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %701, i33 1) #9
  %703 = extractvalue { i33, i1 } %702, 1
  %704 = extractvalue { i33, i1 } %702, 0
  %705 = icmp slt i33 %704, 0
  %706 = or i1 %703, %705
  br i1 %706, label %707, label %708, !prof !3

707:                                              ; preds = %700
  call void @llvm.trap() #9
  unreachable

708:                                              ; preds = %700
  %709 = trunc i33 %704 to i32
  store i32 %709, i32* %683, align 4
  br label %710

710:                                              ; preds = %708, %695
  %711 = phi i32 [ %709, %708 ], [ %696, %695 ]
  %712 = load atomic i32, i32* %679 monotonic, align 4
  %713 = and i32 %712, 2
  %714 = icmp eq i32 %713, 0
  br i1 %714, label %715, label %717

715:                                              ; preds = %710
  %716 = add i32 %711, -1
  store i32 %716, i32* %683, align 4
  br label %717

717:                                              ; preds = %715, %710
  %718 = phi i32 [ %716, %715 ], [ %711, %710 ]
  %719 = icmp eq i32 %718, 0
  br i1 %719, label %720, label %721

720:                                              ; preds = %717
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %523) #9
  br label %721

721:                                              ; preds = %717, %720
  %722 = load atomic i32, i32* %679 monotonic, align 4, !noalias !31
  %723 = and i32 %722, 2
  %724 = icmp eq i32 %723, 0
  %725 = load i32, i32* %683, align 4
  br i1 %724, label %726, label %736

726:                                              ; preds = %721
  %727 = zext i32 %725 to i33
  %728 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %727, i33 1) #9
  %729 = extractvalue { i33, i1 } %728, 1
  %730 = extractvalue { i33, i1 } %728, 0
  %731 = icmp slt i33 %730, 0
  %732 = or i1 %729, %731
  br i1 %732, label %733, label %734, !prof !3

733:                                              ; preds = %726
  call void @llvm.trap() #9, !noalias !31
  unreachable

734:                                              ; preds = %726
  %735 = trunc i33 %730 to i32
  store i32 %735, i32* %683, align 4, !noalias !31
  br label %736

736:                                              ; preds = %721, %734
  %737 = phi i32 [ %735, %734 ], [ %725, %721 ]
  %738 = bitcast %"class.WTF::StringAppend"* %19 to i64*
  store i64 ptrtoint ([27 x i8]* @.str.11 to i64), i64* %738, align 8, !alias.scope !31
  %739 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %19, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %523, %"class.WTF::StringImpl"** %739, align 8, !alias.scope !31
  %740 = load atomic i32, i32* %679 monotonic, align 4, !noalias !31
  %741 = and i32 %740, 2
  %742 = icmp eq i32 %741, 0
  br i1 %742, label %743, label %757

743:                                              ; preds = %736
  %744 = zext i32 %737 to i33
  %745 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %744, i33 1) #9
  %746 = extractvalue { i33, i1 } %745, 1
  %747 = extractvalue { i33, i1 } %745, 0
  %748 = icmp slt i33 %747, 0
  %749 = or i1 %746, %748
  br i1 %749, label %750, label %751, !prof !3

750:                                              ; preds = %743
  call void @llvm.trap() #9, !noalias !31
  unreachable

751:                                              ; preds = %743
  %752 = trunc i33 %747 to i32
  store i32 %752, i32* %683, align 4, !noalias !31
  br label %757

753:                                              ; preds = %675
  %754 = bitcast %"class.WTF::StringAppend"* %19 to i64*
  store i64 ptrtoint ([27 x i8]* @.str.11 to i64), i64* %754, align 8, !alias.scope !31
  %755 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %19, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %755, align 8, !alias.scope !31
  %756 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %19, i64 0, i32 1
  store i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.12, i64 0, i64 0), i8** %756, align 8, !alias.scope !31
  br label %769

757:                                              ; preds = %751, %736
  %758 = phi i32 [ %752, %751 ], [ %737, %736 ]
  %759 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %19, i64 0, i32 1
  store i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.12, i64 0, i64 0), i8** %759, align 8, !alias.scope !31
  %760 = load atomic i32, i32* %679 monotonic, align 4, !noalias !31
  %761 = and i32 %760, 2
  %762 = icmp eq i32 %761, 0
  br i1 %762, label %763, label %765

763:                                              ; preds = %757
  %764 = add i32 %758, -1
  store i32 %764, i32* %683, align 4, !noalias !31
  br label %765

765:                                              ; preds = %763, %757
  %766 = phi i32 [ %764, %763 ], [ %758, %757 ]
  %767 = icmp eq i32 %766, 0
  br i1 %767, label %768, label %769

768:                                              ; preds = %765
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %523) #9, !noalias !31
  br label %769

769:                                              ; preds = %753, %765, %768
  %770 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %19)
  %771 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %19, i64 0, i32 0, i32 1, i32 0, i32 0
  %772 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %771, align 8
  %773 = icmp eq %"class.WTF::StringImpl"* %772, null
  br i1 %773, label %787, label %774

774:                                              ; preds = %769
  %775 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %772, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %776 = load atomic i32, i32* %775 monotonic, align 4
  %777 = and i32 %776, 2
  %778 = icmp eq i32 %777, 0
  %779 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %772, i64 0, i32 0
  %780 = load i32, i32* %779, align 4
  br i1 %778, label %781, label %783

781:                                              ; preds = %774
  %782 = add i32 %780, -1
  store i32 %782, i32* %779, align 4
  br label %783

783:                                              ; preds = %781, %774
  %784 = phi i32 [ %782, %781 ], [ %780, %774 ]
  %785 = icmp eq i32 %784, 0
  br i1 %785, label %786, label %787

786:                                              ; preds = %783
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %772) #9
  br label %787

787:                                              ; preds = %769, %783, %786
  br i1 %677, label %801, label %788

788:                                              ; preds = %787
  %789 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %523, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %790 = load atomic i32, i32* %789 monotonic, align 4
  %791 = and i32 %790, 2
  %792 = icmp eq i32 %791, 0
  %793 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %523, i64 0, i32 0
  %794 = load i32, i32* %793, align 4
  br i1 %792, label %795, label %797

795:                                              ; preds = %788
  %796 = add i32 %794, -1
  store i32 %796, i32* %793, align 4
  br label %797

797:                                              ; preds = %795, %788
  %798 = phi i32 [ %796, %795 ], [ %794, %788 ]
  %799 = icmp eq i32 %798, 0
  br i1 %799, label %800, label %801

800:                                              ; preds = %797
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %523) #9
  br label %801

801:                                              ; preds = %787, %797, %800
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %676) #9
  br label %2318

802:                                              ; preds = %673, %665
  %803 = load %"class.blink::Frame"*, %"class.blink::Frame"** %42, align 8
  %804 = bitcast %"class.blink::Frame"* %803 to %"class.blink::SecurityContext"* (%"class.blink::Frame"*)***
  %805 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)**, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*** %804, align 8
  %806 = getelementptr inbounds %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %805, i64 10
  %807 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %806, align 8
  %808 = call %"class.blink::SecurityContext"* %807(%"class.blink::Frame"* %803) #9
  %809 = call zeroext i1 @_ZNK5blink15SecurityContext11IsSandboxedEN7network5mojom15WebSandboxFlagsE(%"class.blink::SecurityContext"* %808, i32 4) #9
  br i1 %809, label %810, label %937

810:                                              ; preds = %802
  %811 = bitcast %"class.WTF::StringAppend"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %811) #9
  %812 = icmp eq %"class.WTF::StringImpl"* %523, null
  br i1 %812, label %888, label %813

813:                                              ; preds = %810
  %814 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %523, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %815 = load atomic i32, i32* %814 monotonic, align 4
  %816 = and i32 %815, 2
  %817 = icmp eq i32 %816, 0
  %818 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %523, i64 0, i32 0
  %819 = load i32, i32* %818, align 4
  br i1 %817, label %820, label %830

820:                                              ; preds = %813
  %821 = zext i32 %819 to i33
  %822 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %821, i33 1) #9
  %823 = extractvalue { i33, i1 } %822, 1
  %824 = extractvalue { i33, i1 } %822, 0
  %825 = icmp slt i33 %824, 0
  %826 = or i1 %823, %825
  br i1 %826, label %827, label %828, !prof !3

827:                                              ; preds = %820
  call void @llvm.trap() #9
  unreachable

828:                                              ; preds = %820
  %829 = trunc i33 %824 to i32
  store i32 %829, i32* %818, align 4
  br label %830

830:                                              ; preds = %828, %813
  %831 = phi i32 [ %829, %828 ], [ %819, %813 ]
  %832 = load atomic i32, i32* %814 monotonic, align 4
  %833 = and i32 %832, 2
  %834 = icmp eq i32 %833, 0
  br i1 %834, label %835, label %845

835:                                              ; preds = %830
  %836 = zext i32 %831 to i33
  %837 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %836, i33 1) #9
  %838 = extractvalue { i33, i1 } %837, 1
  %839 = extractvalue { i33, i1 } %837, 0
  %840 = icmp slt i33 %839, 0
  %841 = or i1 %838, %840
  br i1 %841, label %842, label %843, !prof !3

842:                                              ; preds = %835
  call void @llvm.trap() #9
  unreachable

843:                                              ; preds = %835
  %844 = trunc i33 %839 to i32
  store i32 %844, i32* %818, align 4
  br label %845

845:                                              ; preds = %843, %830
  %846 = phi i32 [ %844, %843 ], [ %831, %830 ]
  %847 = load atomic i32, i32* %814 monotonic, align 4
  %848 = and i32 %847, 2
  %849 = icmp eq i32 %848, 0
  br i1 %849, label %850, label %852

850:                                              ; preds = %845
  %851 = add i32 %846, -1
  store i32 %851, i32* %818, align 4
  br label %852

852:                                              ; preds = %850, %845
  %853 = phi i32 [ %851, %850 ], [ %846, %845 ]
  %854 = icmp eq i32 %853, 0
  br i1 %854, label %855, label %856

855:                                              ; preds = %852
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %523) #9
  br label %856

856:                                              ; preds = %852, %855
  %857 = load atomic i32, i32* %814 monotonic, align 4, !noalias !34
  %858 = and i32 %857, 2
  %859 = icmp eq i32 %858, 0
  %860 = load i32, i32* %818, align 4
  br i1 %859, label %861, label %871

861:                                              ; preds = %856
  %862 = zext i32 %860 to i33
  %863 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %862, i33 1) #9
  %864 = extractvalue { i33, i1 } %863, 1
  %865 = extractvalue { i33, i1 } %863, 0
  %866 = icmp slt i33 %865, 0
  %867 = or i1 %864, %866
  br i1 %867, label %868, label %869, !prof !3

868:                                              ; preds = %861
  call void @llvm.trap() #9, !noalias !34
  unreachable

869:                                              ; preds = %861
  %870 = trunc i33 %865 to i32
  store i32 %870, i32* %818, align 4, !noalias !34
  br label %871

871:                                              ; preds = %856, %869
  %872 = phi i32 [ %870, %869 ], [ %860, %856 ]
  %873 = bitcast %"class.WTF::StringAppend"* %20 to i64*
  store i64 ptrtoint ([27 x i8]* @.str.11 to i64), i64* %873, align 8, !alias.scope !34
  %874 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %20, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %523, %"class.WTF::StringImpl"** %874, align 8, !alias.scope !34
  %875 = load atomic i32, i32* %814 monotonic, align 4, !noalias !34
  %876 = and i32 %875, 2
  %877 = icmp eq i32 %876, 0
  br i1 %877, label %878, label %892

878:                                              ; preds = %871
  %879 = zext i32 %872 to i33
  %880 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %879, i33 1) #9
  %881 = extractvalue { i33, i1 } %880, 1
  %882 = extractvalue { i33, i1 } %880, 0
  %883 = icmp slt i33 %882, 0
  %884 = or i1 %881, %883
  br i1 %884, label %885, label %886, !prof !3

885:                                              ; preds = %878
  call void @llvm.trap() #9, !noalias !34
  unreachable

886:                                              ; preds = %878
  %887 = trunc i33 %882 to i32
  store i32 %887, i32* %818, align 4, !noalias !34
  br label %892

888:                                              ; preds = %810
  %889 = bitcast %"class.WTF::StringAppend"* %20 to i64*
  store i64 ptrtoint ([27 x i8]* @.str.11 to i64), i64* %889, align 8, !alias.scope !34
  %890 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %20, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %890, align 8, !alias.scope !34
  %891 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %20, i64 0, i32 1
  store i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.13, i64 0, i64 0), i8** %891, align 8, !alias.scope !34
  br label %904

892:                                              ; preds = %886, %871
  %893 = phi i32 [ %887, %886 ], [ %872, %871 ]
  %894 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %20, i64 0, i32 1
  store i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.13, i64 0, i64 0), i8** %894, align 8, !alias.scope !34
  %895 = load atomic i32, i32* %814 monotonic, align 4, !noalias !34
  %896 = and i32 %895, 2
  %897 = icmp eq i32 %896, 0
  br i1 %897, label %898, label %900

898:                                              ; preds = %892
  %899 = add i32 %893, -1
  store i32 %899, i32* %818, align 4, !noalias !34
  br label %900

900:                                              ; preds = %898, %892
  %901 = phi i32 [ %899, %898 ], [ %893, %892 ]
  %902 = icmp eq i32 %901, 0
  br i1 %902, label %903, label %904

903:                                              ; preds = %900
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %523) #9, !noalias !34
  br label %904

904:                                              ; preds = %888, %900, %903
  %905 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %20)
  %906 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %20, i64 0, i32 0, i32 1, i32 0, i32 0
  %907 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %906, align 8
  %908 = icmp eq %"class.WTF::StringImpl"* %907, null
  br i1 %908, label %922, label %909

909:                                              ; preds = %904
  %910 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %907, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %911 = load atomic i32, i32* %910 monotonic, align 4
  %912 = and i32 %911, 2
  %913 = icmp eq i32 %912, 0
  %914 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %907, i64 0, i32 0
  %915 = load i32, i32* %914, align 4
  br i1 %913, label %916, label %918

916:                                              ; preds = %909
  %917 = add i32 %915, -1
  store i32 %917, i32* %914, align 4
  br label %918

918:                                              ; preds = %916, %909
  %919 = phi i32 [ %917, %916 ], [ %915, %909 ]
  %920 = icmp eq i32 %919, 0
  br i1 %920, label %921, label %922

921:                                              ; preds = %918
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %907) #9
  br label %922

922:                                              ; preds = %904, %918, %921
  br i1 %812, label %936, label %923

923:                                              ; preds = %922
  %924 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %523, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %925 = load atomic i32, i32* %924 monotonic, align 4
  %926 = and i32 %925, 2
  %927 = icmp eq i32 %926, 0
  %928 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %523, i64 0, i32 0
  %929 = load i32, i32* %928, align 4
  br i1 %927, label %930, label %932

930:                                              ; preds = %923
  %931 = add i32 %929, -1
  store i32 %931, i32* %928, align 4
  br label %932

932:                                              ; preds = %930, %923
  %933 = phi i32 [ %931, %930 ], [ %929, %923 ]
  %934 = icmp eq i32 %933, 0
  br i1 %934, label %935, label %936

935:                                              ; preds = %932
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %523) #9
  br label %936

936:                                              ; preds = %922, %932, %935
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %811) #9
  br label %2318

937:                                              ; preds = %802
  %938 = bitcast %"class.WTF::StringAppend"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %938) #9
  %939 = icmp eq %"class.WTF::StringImpl"* %523, null
  br i1 %939, label %1015, label %940

940:                                              ; preds = %937
  %941 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %523, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %942 = load atomic i32, i32* %941 monotonic, align 4
  %943 = and i32 %942, 2
  %944 = icmp eq i32 %943, 0
  %945 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %523, i64 0, i32 0
  %946 = load i32, i32* %945, align 4
  br i1 %944, label %947, label %957

947:                                              ; preds = %940
  %948 = zext i32 %946 to i33
  %949 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %948, i33 1) #9
  %950 = extractvalue { i33, i1 } %949, 1
  %951 = extractvalue { i33, i1 } %949, 0
  %952 = icmp slt i33 %951, 0
  %953 = or i1 %950, %952
  br i1 %953, label %954, label %955, !prof !3

954:                                              ; preds = %947
  call void @llvm.trap() #9
  unreachable

955:                                              ; preds = %947
  %956 = trunc i33 %951 to i32
  store i32 %956, i32* %945, align 4
  br label %957

957:                                              ; preds = %955, %940
  %958 = phi i32 [ %956, %955 ], [ %946, %940 ]
  %959 = load atomic i32, i32* %941 monotonic, align 4
  %960 = and i32 %959, 2
  %961 = icmp eq i32 %960, 0
  br i1 %961, label %962, label %972

962:                                              ; preds = %957
  %963 = zext i32 %958 to i33
  %964 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %963, i33 1) #9
  %965 = extractvalue { i33, i1 } %964, 1
  %966 = extractvalue { i33, i1 } %964, 0
  %967 = icmp slt i33 %966, 0
  %968 = or i1 %965, %967
  br i1 %968, label %969, label %970, !prof !3

969:                                              ; preds = %962
  call void @llvm.trap() #9
  unreachable

970:                                              ; preds = %962
  %971 = trunc i33 %966 to i32
  store i32 %971, i32* %945, align 4
  br label %972

972:                                              ; preds = %970, %957
  %973 = phi i32 [ %971, %970 ], [ %958, %957 ]
  %974 = load atomic i32, i32* %941 monotonic, align 4
  %975 = and i32 %974, 2
  %976 = icmp eq i32 %975, 0
  br i1 %976, label %977, label %979

977:                                              ; preds = %972
  %978 = add i32 %973, -1
  store i32 %978, i32* %945, align 4
  br label %979

979:                                              ; preds = %977, %972
  %980 = phi i32 [ %978, %977 ], [ %973, %972 ]
  %981 = icmp eq i32 %980, 0
  br i1 %981, label %982, label %983

982:                                              ; preds = %979
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %523) #9
  br label %983

983:                                              ; preds = %979, %982
  %984 = load atomic i32, i32* %941 monotonic, align 4, !noalias !37
  %985 = and i32 %984, 2
  %986 = icmp eq i32 %985, 0
  %987 = load i32, i32* %945, align 4
  br i1 %986, label %988, label %998

988:                                              ; preds = %983
  %989 = zext i32 %987 to i33
  %990 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %989, i33 1) #9
  %991 = extractvalue { i33, i1 } %990, 1
  %992 = extractvalue { i33, i1 } %990, 0
  %993 = icmp slt i33 %992, 0
  %994 = or i1 %991, %993
  br i1 %994, label %995, label %996, !prof !3

995:                                              ; preds = %988
  call void @llvm.trap() #9, !noalias !37
  unreachable

996:                                              ; preds = %988
  %997 = trunc i33 %992 to i32
  store i32 %997, i32* %945, align 4, !noalias !37
  br label %998

998:                                              ; preds = %983, %996
  %999 = phi i32 [ %997, %996 ], [ %987, %983 ]
  %1000 = bitcast %"class.WTF::StringAppend"* %21 to i64*
  store i64 ptrtoint ([27 x i8]* @.str.11 to i64), i64* %1000, align 8, !alias.scope !37
  %1001 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %523, %"class.WTF::StringImpl"** %1001, align 8, !alias.scope !37
  %1002 = load atomic i32, i32* %941 monotonic, align 4, !noalias !37
  %1003 = and i32 %1002, 2
  %1004 = icmp eq i32 %1003, 0
  br i1 %1004, label %1005, label %1019

1005:                                             ; preds = %998
  %1006 = zext i32 %999 to i33
  %1007 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1006, i33 1) #9
  %1008 = extractvalue { i33, i1 } %1007, 1
  %1009 = extractvalue { i33, i1 } %1007, 0
  %1010 = icmp slt i33 %1009, 0
  %1011 = or i1 %1008, %1010
  br i1 %1011, label %1012, label %1013, !prof !3

1012:                                             ; preds = %1005
  call void @llvm.trap() #9, !noalias !37
  unreachable

1013:                                             ; preds = %1005
  %1014 = trunc i33 %1009 to i32
  store i32 %1014, i32* %945, align 4, !noalias !37
  br label %1019

1015:                                             ; preds = %937
  %1016 = bitcast %"class.WTF::StringAppend"* %21 to i64*
  store i64 ptrtoint ([27 x i8]* @.str.11 to i64), i64* %1016, align 8, !alias.scope !37
  %1017 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1017, align 8, !alias.scope !37
  %1018 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %21, i64 0, i32 1
  store i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.14, i64 0, i64 0), i8** %1018, align 8, !alias.scope !37
  br label %1031

1019:                                             ; preds = %1013, %998
  %1020 = phi i32 [ %1014, %1013 ], [ %999, %998 ]
  %1021 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %21, i64 0, i32 1
  store i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.14, i64 0, i64 0), i8** %1021, align 8, !alias.scope !37
  %1022 = load atomic i32, i32* %941 monotonic, align 4, !noalias !37
  %1023 = and i32 %1022, 2
  %1024 = icmp eq i32 %1023, 0
  br i1 %1024, label %1025, label %1027

1025:                                             ; preds = %1019
  %1026 = add i32 %1020, -1
  store i32 %1026, i32* %945, align 4, !noalias !37
  br label %1027

1027:                                             ; preds = %1025, %1019
  %1028 = phi i32 [ %1026, %1025 ], [ %1020, %1019 ]
  %1029 = icmp eq i32 %1028, 0
  br i1 %1029, label %1030, label %1031

1030:                                             ; preds = %1027
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %523) #9, !noalias !37
  br label %1031

1031:                                             ; preds = %1015, %1027, %1030
  %1032 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %21)
  %1033 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  %1034 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1033, align 8
  %1035 = icmp eq %"class.WTF::StringImpl"* %1034, null
  br i1 %1035, label %1049, label %1036

1036:                                             ; preds = %1031
  %1037 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1034, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1038 = load atomic i32, i32* %1037 monotonic, align 4
  %1039 = and i32 %1038, 2
  %1040 = icmp eq i32 %1039, 0
  %1041 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1034, i64 0, i32 0
  %1042 = load i32, i32* %1041, align 4
  br i1 %1040, label %1043, label %1045

1043:                                             ; preds = %1036
  %1044 = add i32 %1042, -1
  store i32 %1044, i32* %1041, align 4
  br label %1045

1045:                                             ; preds = %1043, %1036
  %1046 = phi i32 [ %1044, %1043 ], [ %1042, %1036 ]
  %1047 = icmp eq i32 %1046, 0
  br i1 %1047, label %1048, label %1049

1048:                                             ; preds = %1045
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1034) #9
  br label %1049

1049:                                             ; preds = %1031, %1045, %1048
  br i1 %939, label %1063, label %1050

1050:                                             ; preds = %1049
  %1051 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %523, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1052 = load atomic i32, i32* %1051 monotonic, align 4
  %1053 = and i32 %1052, 2
  %1054 = icmp eq i32 %1053, 0
  %1055 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %523, i64 0, i32 0
  %1056 = load i32, i32* %1055, align 4
  br i1 %1054, label %1057, label %1059

1057:                                             ; preds = %1050
  %1058 = add i32 %1056, -1
  store i32 %1058, i32* %1055, align 4
  br label %1059

1059:                                             ; preds = %1057, %1050
  %1060 = phi i32 [ %1058, %1057 ], [ %1056, %1050 ]
  %1061 = icmp eq i32 %1060, 0
  br i1 %1061, label %1062, label %1063

1062:                                             ; preds = %1059
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %523) #9
  br label %1063

1063:                                             ; preds = %1049, %1059, %1062
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %938) #9
  br label %2318

1064:                                             ; preds = %367
  %1065 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %59, i64 0, i32 1, i32 0, i32 0
  %1066 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1065, align 8
  %1067 = icmp eq %"class.WTF::StringImpl"* %1066, null
  br i1 %1067, label %1085, label %1068

1068:                                             ; preds = %1064
  %1069 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1066, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1070 = load atomic i32, i32* %1069 monotonic, align 4
  %1071 = and i32 %1070, 2
  %1072 = icmp eq i32 %1071, 0
  br i1 %1072, label %1073, label %1085

1073:                                             ; preds = %1068
  %1074 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1066, i64 0, i32 0
  %1075 = load i32, i32* %1074, align 4
  %1076 = zext i32 %1075 to i33
  %1077 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1076, i33 1) #9
  %1078 = extractvalue { i33, i1 } %1077, 1
  %1079 = extractvalue { i33, i1 } %1077, 0
  %1080 = icmp slt i33 %1079, 0
  %1081 = or i1 %1078, %1080
  br i1 %1081, label %1082, label %1083, !prof !3

1082:                                             ; preds = %1073
  call void @llvm.trap() #9
  unreachable

1083:                                             ; preds = %1073
  %1084 = trunc i33 %1079 to i32
  store i32 %1084, i32* %1074, align 4
  br label %1085

1085:                                             ; preds = %1064, %1068, %1083
  %1086 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %51, i64 0, i32 1, i32 0, i32 0
  %1087 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1086, align 8
  %1088 = icmp eq %"class.WTF::StringImpl"* %1087, null
  br i1 %1088, label %1106, label %1089

1089:                                             ; preds = %1085
  %1090 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1087, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1091 = load atomic i32, i32* %1090 monotonic, align 4
  %1092 = and i32 %1091, 2
  %1093 = icmp eq i32 %1092, 0
  br i1 %1093, label %1094, label %1109

1094:                                             ; preds = %1089
  %1095 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1087, i64 0, i32 0
  %1096 = load i32, i32* %1095, align 4
  %1097 = zext i32 %1096 to i33
  %1098 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1097, i33 1) #9
  %1099 = extractvalue { i33, i1 } %1098, 1
  %1100 = extractvalue { i33, i1 } %1098, 0
  %1101 = icmp slt i33 %1100, 0
  %1102 = or i1 %1099, %1101
  br i1 %1102, label %1103, label %1104, !prof !3

1103:                                             ; preds = %1094
  call void @llvm.trap() #9
  unreachable

1104:                                             ; preds = %1094
  %1105 = trunc i33 %1100 to i32
  store i32 %1105, i32* %1095, align 4
  br label %1109

1106:                                             ; preds = %1085
  %1107 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %1066, %"class.WTF::StringImpl"* null) #9
  %1108 = xor i1 %1107, true
  br label %1123

1109:                                             ; preds = %1089, %1104
  %1110 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %1066, %"class.WTF::StringImpl"* nonnull %1087) #9
  %1111 = xor i1 %1110, true
  %1112 = load atomic i32, i32* %1090 monotonic, align 4
  %1113 = and i32 %1112, 2
  %1114 = icmp eq i32 %1113, 0
  %1115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1087, i64 0, i32 0
  %1116 = load i32, i32* %1115, align 4
  br i1 %1114, label %1117, label %1119

1117:                                             ; preds = %1109
  %1118 = add i32 %1116, -1
  store i32 %1118, i32* %1115, align 4
  br label %1119

1119:                                             ; preds = %1117, %1109
  %1120 = phi i32 [ %1118, %1117 ], [ %1116, %1109 ]
  %1121 = icmp eq i32 %1120, 0
  br i1 %1121, label %1122, label %1123

1122:                                             ; preds = %1119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1087) #9
  br label %1123

1123:                                             ; preds = %1106, %1119, %1122
  %1124 = phi i1 [ %1108, %1106 ], [ %1111, %1119 ], [ %1111, %1122 ]
  br i1 %1067, label %1138, label %1125

1125:                                             ; preds = %1123
  %1126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1066, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1127 = load atomic i32, i32* %1126 monotonic, align 4
  %1128 = and i32 %1127, 2
  %1129 = icmp eq i32 %1128, 0
  %1130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1066, i64 0, i32 0
  %1131 = load i32, i32* %1130, align 4
  br i1 %1129, label %1132, label %1134

1132:                                             ; preds = %1125
  %1133 = add i32 %1131, -1
  store i32 %1133, i32* %1130, align 4
  br label %1134

1134:                                             ; preds = %1132, %1125
  %1135 = phi i32 [ %1133, %1132 ], [ %1131, %1125 ]
  %1136 = icmp eq i32 %1135, 0
  br i1 %1136, label %1137, label %1138

1137:                                             ; preds = %1134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1066) #9
  br label %1138

1138:                                             ; preds = %1123, %1134, %1137
  br i1 %1124, label %1139, label %1430

1139:                                             ; preds = %1138
  %1140 = bitcast %"class.WTF::StringAppend.2130"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %1140) #9
  %1141 = bitcast %"class.WTF::StringAppend.2131"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1141) #9
  %1142 = bitcast %"class.WTF::StringAppend.2132"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1142) #9
  %1143 = bitcast %"class.WTF::StringAppend.2133"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1143) #9
  %1144 = bitcast %"class.WTF::StringAppend.2134"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1144) #9
  %1145 = icmp eq %"class.WTF::StringImpl"* %222, null
  br i1 %1145, label %1190, label %1146

1146:                                             ; preds = %1139
  %1147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1148 = load atomic i32, i32* %1147 monotonic, align 4
  %1149 = and i32 %1148, 2
  %1150 = icmp eq i32 %1149, 0
  %1151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 0
  %1152 = load i32, i32* %1151, align 4
  br i1 %1150, label %1153, label %1163

1153:                                             ; preds = %1146
  %1154 = zext i32 %1152 to i33
  %1155 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1154, i33 1) #9
  %1156 = extractvalue { i33, i1 } %1155, 1
  %1157 = extractvalue { i33, i1 } %1155, 0
  %1158 = icmp slt i33 %1157, 0
  %1159 = or i1 %1156, %1158
  br i1 %1159, label %1160, label %1161, !prof !3

1160:                                             ; preds = %1153
  call void @llvm.trap() #9
  unreachable

1161:                                             ; preds = %1153
  %1162 = trunc i33 %1157 to i32
  store i32 %1162, i32* %1151, align 4
  br label %1163

1163:                                             ; preds = %1146, %1161
  %1164 = phi i32 [ %1162, %1161 ], [ %1152, %1146 ]
  %1165 = load atomic i32, i32* %1147 monotonic, align 4
  %1166 = and i32 %1165, 2
  %1167 = icmp eq i32 %1166, 0
  %1168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 0
  br i1 %1167, label %1169, label %1179

1169:                                             ; preds = %1163
  %1170 = zext i32 %1164 to i33
  %1171 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1170, i33 1) #9
  %1172 = extractvalue { i33, i1 } %1171, 1
  %1173 = extractvalue { i33, i1 } %1171, 0
  %1174 = icmp slt i33 %1173, 0
  %1175 = or i1 %1172, %1174
  br i1 %1175, label %1176, label %1177, !prof !3

1176:                                             ; preds = %1169
  call void @llvm.trap() #9
  unreachable

1177:                                             ; preds = %1169
  %1178 = trunc i33 %1173 to i32
  store i32 %1178, i32* %1168, align 4
  br label %1179

1179:                                             ; preds = %1177, %1163
  %1180 = phi i32 [ %1178, %1177 ], [ %1164, %1163 ]
  %1181 = load atomic i32, i32* %1147 monotonic, align 4
  %1182 = and i32 %1181, 2
  %1183 = icmp eq i32 %1182, 0
  br i1 %1183, label %1184, label %1186

1184:                                             ; preds = %1179
  %1185 = add i32 %1180, -1
  store i32 %1185, i32* %1168, align 4
  br label %1186

1186:                                             ; preds = %1184, %1179
  %1187 = phi i32 [ %1185, %1184 ], [ %1180, %1179 ]
  %1188 = icmp eq i32 %1187, 0
  br i1 %1188, label %1189, label %1190

1189:                                             ; preds = %1186
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %222) #9
  br label %1190

1190:                                             ; preds = %1139, %1186, %1189
  %1191 = getelementptr inbounds %"class.WTF::StringAppend.2134", %"class.WTF::StringAppend.2134"* %26, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %222, %"class.WTF::StringImpl"** %1191, align 8
  %1192 = getelementptr inbounds %"class.WTF::StringAppend.2134", %"class.WTF::StringAppend.2134"* %26, i64 0, i32 1
  store i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.15, i64 0, i64 0), i8** %1192, align 8
  %1193 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL8ProtocolEv(%"class.blink::KURL"* nonnull %13) #9
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.2133"* nonnull sret %25, %"class.WTF::StringAppend.2134"* nonnull dereferenceable(16) %26, %"class.WTF::StringImpl"* %1193)
  %1194 = bitcast %"class.WTF::StringAppend.2133"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1194)
  %1195 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %1196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1195, align 8, !noalias !40
  %1197 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1196, %"class.WTF::StringImpl"** %1197, align 8, !noalias !40
  %1198 = icmp eq %"class.WTF::StringImpl"* %1196, null
  br i1 %1198, label %1216, label %1199

1199:                                             ; preds = %1190
  %1200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1201 = load atomic i32, i32* %1200 monotonic, align 4
  %1202 = and i32 %1201, 2
  %1203 = icmp eq i32 %1202, 0
  br i1 %1203, label %1204, label %1216

1204:                                             ; preds = %1199
  %1205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1196, i64 0, i32 0
  %1206 = load i32, i32* %1205, align 4
  %1207 = zext i32 %1206 to i33
  %1208 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1207, i33 1) #9
  %1209 = extractvalue { i33, i1 } %1208, 1
  %1210 = extractvalue { i33, i1 } %1208, 0
  %1211 = icmp slt i33 %1210, 0
  %1212 = or i1 %1209, %1211
  br i1 %1212, label %1213, label %1214, !prof !3

1213:                                             ; preds = %1204
  call void @llvm.trap() #9
  unreachable

1214:                                             ; preds = %1204
  %1215 = trunc i33 %1210 to i32
  store i32 %1215, i32* %1205, align 4
  br label %1216

1216:                                             ; preds = %1214, %1199, %1190
  %1217 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %7, i64 0, i32 0, i32 1
  %1218 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %25, i64 0, i32 0, i32 1
  %1219 = bitcast i8** %1218 to i64*
  %1220 = load i64, i64* %1219, align 8, !noalias !40
  %1221 = bitcast i8** %1217 to i64*
  store i64 %1220, i64* %1221, align 8, !noalias !40
  %1222 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %25, i64 0, i32 1, i32 0, i32 0
  %1223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1222, align 8, !noalias !40
  %1224 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %7, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1223, %"class.WTF::StringImpl"** %1224, align 8, !noalias !40
  %1225 = icmp eq %"class.WTF::StringImpl"* %1223, null
  br i1 %1225, label %1243, label %1226

1226:                                             ; preds = %1216
  %1227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1223, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1228 = load atomic i32, i32* %1227 monotonic, align 4
  %1229 = and i32 %1228, 2
  %1230 = icmp eq i32 %1229, 0
  br i1 %1230, label %1231, label %1243

1231:                                             ; preds = %1226
  %1232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1223, i64 0, i32 0
  %1233 = load i32, i32* %1232, align 4
  %1234 = zext i32 %1233 to i33
  %1235 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1234, i33 1) #9
  %1236 = extractvalue { i33, i1 } %1235, 1
  %1237 = extractvalue { i33, i1 } %1235, 0
  %1238 = icmp slt i33 %1237, 0
  %1239 = or i1 %1236, %1238
  br i1 %1239, label %1240, label %1241, !prof !3

1240:                                             ; preds = %1231
  call void @llvm.trap() #9
  unreachable

1241:                                             ; preds = %1231
  %1242 = trunc i33 %1237 to i32
  store i32 %1242, i32* %1232, align 4
  br label %1243

1243:                                             ; preds = %1216, %1226, %1241
  call void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.2132"* nonnull %24, %"class.WTF::StringAppend.2133"* nonnull byval(%"class.WTF::StringAppend.2133") align 8 %7, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.16, i64 0, i64 0)) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1194)
  %1244 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL8ProtocolEv(%"class.blink::KURL"* nonnull %14) #9
  call void @_ZN3WTFplINS_12StringAppendINS1_INS_6StringEPKcEES2_EES4_S2_EENS1_INS1_IT_T0_EET1_EERKS9_SA_(%"class.WTF::StringAppend.2131"* nonnull sret %23, %"class.WTF::StringAppend.2132"* nonnull dereferenceable(32) %24, %"class.WTF::StringImpl"* %1244)
  call void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS_6StringEPKcEES2_EES4_EES2_S4_EENS1_INS1_IT_T0_EET1_EERKSA_SB_(%"class.WTF::StringAppend.2130"* nonnull sret %22, %"class.WTF::StringAppend.2131"* nonnull dereferenceable(40) %23, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.17, i64 0, i64 0))
  %1245 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EES3_EcvS1_Ev(%"class.WTF::StringAppend.2130"* nonnull %22)
  %1246 = getelementptr inbounds %"class.WTF::StringAppend.2130", %"class.WTF::StringAppend.2130"* %22, i64 0, i32 0, i32 1, i32 0, i32 0
  %1247 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1246, align 8
  %1248 = icmp eq %"class.WTF::StringImpl"* %1247, null
  br i1 %1248, label %1262, label %1249

1249:                                             ; preds = %1243
  %1250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1247, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1251 = load atomic i32, i32* %1250 monotonic, align 4
  %1252 = and i32 %1251, 2
  %1253 = icmp eq i32 %1252, 0
  %1254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1247, i64 0, i32 0
  %1255 = load i32, i32* %1254, align 4
  br i1 %1253, label %1256, label %1258

1256:                                             ; preds = %1249
  %1257 = add i32 %1255, -1
  store i32 %1257, i32* %1254, align 4
  br label %1258

1258:                                             ; preds = %1256, %1249
  %1259 = phi i32 [ %1257, %1256 ], [ %1255, %1249 ]
  %1260 = icmp eq i32 %1259, 0
  br i1 %1260, label %1261, label %1262

1261:                                             ; preds = %1258
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1247) #9
  br label %1262

1262:                                             ; preds = %1261, %1258, %1243
  %1263 = getelementptr inbounds %"class.WTF::StringAppend.2130", %"class.WTF::StringAppend.2130"* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1264 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1263, align 8
  %1265 = icmp eq %"class.WTF::StringImpl"* %1264, null
  br i1 %1265, label %1279, label %1266

1266:                                             ; preds = %1262
  %1267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1264, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1268 = load atomic i32, i32* %1267 monotonic, align 4
  %1269 = and i32 %1268, 2
  %1270 = icmp eq i32 %1269, 0
  %1271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1264, i64 0, i32 0
  %1272 = load i32, i32* %1271, align 4
  br i1 %1270, label %1273, label %1275

1273:                                             ; preds = %1266
  %1274 = add i32 %1272, -1
  store i32 %1274, i32* %1271, align 4
  br label %1275

1275:                                             ; preds = %1273, %1266
  %1276 = phi i32 [ %1274, %1273 ], [ %1272, %1266 ]
  %1277 = icmp eq i32 %1276, 0
  br i1 %1277, label %1278, label %1279

1278:                                             ; preds = %1275
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1264) #9
  br label %1279

1279:                                             ; preds = %1278, %1275, %1262
  %1280 = getelementptr inbounds %"class.WTF::StringAppend.2130", %"class.WTF::StringAppend.2130"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1281 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1280, align 8
  %1282 = icmp eq %"class.WTF::StringImpl"* %1281, null
  br i1 %1282, label %1296, label %1283

1283:                                             ; preds = %1279
  %1284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1281, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1285 = load atomic i32, i32* %1284 monotonic, align 4
  %1286 = and i32 %1285, 2
  %1287 = icmp eq i32 %1286, 0
  %1288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1281, i64 0, i32 0
  %1289 = load i32, i32* %1288, align 4
  br i1 %1287, label %1290, label %1292

1290:                                             ; preds = %1283
  %1291 = add i32 %1289, -1
  store i32 %1291, i32* %1288, align 4
  br label %1292

1292:                                             ; preds = %1290, %1283
  %1293 = phi i32 [ %1291, %1290 ], [ %1289, %1283 ]
  %1294 = icmp eq i32 %1293, 0
  br i1 %1294, label %1295, label %1296

1295:                                             ; preds = %1292
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1281) #9
  br label %1296

1296:                                             ; preds = %1279, %1292, %1295
  %1297 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %23, i64 0, i32 1, i32 0, i32 0
  %1298 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1297, align 8
  %1299 = icmp eq %"class.WTF::StringImpl"* %1298, null
  br i1 %1299, label %1313, label %1300

1300:                                             ; preds = %1296
  %1301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1298, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1302 = load atomic i32, i32* %1301 monotonic, align 4
  %1303 = and i32 %1302, 2
  %1304 = icmp eq i32 %1303, 0
  %1305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1298, i64 0, i32 0
  %1306 = load i32, i32* %1305, align 4
  br i1 %1304, label %1307, label %1309

1307:                                             ; preds = %1300
  %1308 = add i32 %1306, -1
  store i32 %1308, i32* %1305, align 4
  br label %1309

1309:                                             ; preds = %1307, %1300
  %1310 = phi i32 [ %1308, %1307 ], [ %1306, %1300 ]
  %1311 = icmp eq i32 %1310, 0
  br i1 %1311, label %1312, label %1313

1312:                                             ; preds = %1309
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1298) #9
  br label %1313

1313:                                             ; preds = %1312, %1309, %1296
  %1314 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %23, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1315 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1314, align 8
  %1316 = icmp eq %"class.WTF::StringImpl"* %1315, null
  br i1 %1316, label %1330, label %1317

1317:                                             ; preds = %1313
  %1318 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1315, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1319 = load atomic i32, i32* %1318 monotonic, align 4
  %1320 = and i32 %1319, 2
  %1321 = icmp eq i32 %1320, 0
  %1322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1315, i64 0, i32 0
  %1323 = load i32, i32* %1322, align 4
  br i1 %1321, label %1324, label %1326

1324:                                             ; preds = %1317
  %1325 = add i32 %1323, -1
  store i32 %1325, i32* %1322, align 4
  br label %1326

1326:                                             ; preds = %1324, %1317
  %1327 = phi i32 [ %1325, %1324 ], [ %1323, %1317 ]
  %1328 = icmp eq i32 %1327, 0
  br i1 %1328, label %1329, label %1330

1329:                                             ; preds = %1326
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1315) #9
  br label %1330

1330:                                             ; preds = %1329, %1326, %1313
  %1331 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1332 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1331, align 8
  %1333 = icmp eq %"class.WTF::StringImpl"* %1332, null
  br i1 %1333, label %1347, label %1334

1334:                                             ; preds = %1330
  %1335 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1332, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1336 = load atomic i32, i32* %1335 monotonic, align 4
  %1337 = and i32 %1336, 2
  %1338 = icmp eq i32 %1337, 0
  %1339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1332, i64 0, i32 0
  %1340 = load i32, i32* %1339, align 4
  br i1 %1338, label %1341, label %1343

1341:                                             ; preds = %1334
  %1342 = add i32 %1340, -1
  store i32 %1342, i32* %1339, align 4
  br label %1343

1343:                                             ; preds = %1341, %1334
  %1344 = phi i32 [ %1342, %1341 ], [ %1340, %1334 ]
  %1345 = icmp eq i32 %1344, 0
  br i1 %1345, label %1346, label %1347

1346:                                             ; preds = %1343
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1332) #9
  br label %1347

1347:                                             ; preds = %1330, %1343, %1346
  %1348 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %24, i64 0, i32 0, i32 1, i32 0, i32 0
  %1349 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1348, align 8
  %1350 = icmp eq %"class.WTF::StringImpl"* %1349, null
  br i1 %1350, label %1364, label %1351

1351:                                             ; preds = %1347
  %1352 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1349, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1353 = load atomic i32, i32* %1352 monotonic, align 4
  %1354 = and i32 %1353, 2
  %1355 = icmp eq i32 %1354, 0
  %1356 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1349, i64 0, i32 0
  %1357 = load i32, i32* %1356, align 4
  br i1 %1355, label %1358, label %1360

1358:                                             ; preds = %1351
  %1359 = add i32 %1357, -1
  store i32 %1359, i32* %1356, align 4
  br label %1360

1360:                                             ; preds = %1358, %1351
  %1361 = phi i32 [ %1359, %1358 ], [ %1357, %1351 ]
  %1362 = icmp eq i32 %1361, 0
  br i1 %1362, label %1363, label %1364

1363:                                             ; preds = %1360
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1349) #9
  br label %1364

1364:                                             ; preds = %1363, %1360, %1347
  %1365 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1366 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1365, align 8
  %1367 = icmp eq %"class.WTF::StringImpl"* %1366, null
  br i1 %1367, label %1381, label %1368

1368:                                             ; preds = %1364
  %1369 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1366, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1370 = load atomic i32, i32* %1369 monotonic, align 4
  %1371 = and i32 %1370, 2
  %1372 = icmp eq i32 %1371, 0
  %1373 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1366, i64 0, i32 0
  %1374 = load i32, i32* %1373, align 4
  br i1 %1372, label %1375, label %1377

1375:                                             ; preds = %1368
  %1376 = add i32 %1374, -1
  store i32 %1376, i32* %1373, align 4
  br label %1377

1377:                                             ; preds = %1375, %1368
  %1378 = phi i32 [ %1376, %1375 ], [ %1374, %1368 ]
  %1379 = icmp eq i32 %1378, 0
  br i1 %1379, label %1380, label %1381

1380:                                             ; preds = %1377
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1366) #9
  br label %1381

1381:                                             ; preds = %1364, %1377, %1380
  %1382 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1222, align 8
  %1383 = icmp eq %"class.WTF::StringImpl"* %1382, null
  br i1 %1383, label %1397, label %1384

1384:                                             ; preds = %1381
  %1385 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1382, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1386 = load atomic i32, i32* %1385 monotonic, align 4
  %1387 = and i32 %1386, 2
  %1388 = icmp eq i32 %1387, 0
  %1389 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1382, i64 0, i32 0
  %1390 = load i32, i32* %1389, align 4
  br i1 %1388, label %1391, label %1393

1391:                                             ; preds = %1384
  %1392 = add i32 %1390, -1
  store i32 %1392, i32* %1389, align 4
  br label %1393

1393:                                             ; preds = %1391, %1384
  %1394 = phi i32 [ %1392, %1391 ], [ %1390, %1384 ]
  %1395 = icmp eq i32 %1394, 0
  br i1 %1395, label %1396, label %1397

1396:                                             ; preds = %1393
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1382) #9
  br label %1397

1397:                                             ; preds = %1396, %1393, %1381
  %1398 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1195, align 8
  %1399 = icmp eq %"class.WTF::StringImpl"* %1398, null
  br i1 %1399, label %1413, label %1400

1400:                                             ; preds = %1397
  %1401 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1398, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1402 = load atomic i32, i32* %1401 monotonic, align 4
  %1403 = and i32 %1402, 2
  %1404 = icmp eq i32 %1403, 0
  %1405 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1398, i64 0, i32 0
  %1406 = load i32, i32* %1405, align 4
  br i1 %1404, label %1407, label %1409

1407:                                             ; preds = %1400
  %1408 = add i32 %1406, -1
  store i32 %1408, i32* %1405, align 4
  br label %1409

1409:                                             ; preds = %1407, %1400
  %1410 = phi i32 [ %1408, %1407 ], [ %1406, %1400 ]
  %1411 = icmp eq i32 %1410, 0
  br i1 %1411, label %1412, label %1413

1412:                                             ; preds = %1409
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1398) #9
  br label %1413

1413:                                             ; preds = %1397, %1409, %1412
  %1414 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1191, align 8
  %1415 = icmp eq %"class.WTF::StringImpl"* %1414, null
  br i1 %1415, label %1429, label %1416

1416:                                             ; preds = %1413
  %1417 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1414, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1418 = load atomic i32, i32* %1417 monotonic, align 4
  %1419 = and i32 %1418, 2
  %1420 = icmp eq i32 %1419, 0
  %1421 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1414, i64 0, i32 0
  %1422 = load i32, i32* %1421, align 4
  br i1 %1420, label %1423, label %1425

1423:                                             ; preds = %1416
  %1424 = add i32 %1422, -1
  store i32 %1424, i32* %1421, align 4
  br label %1425

1425:                                             ; preds = %1423, %1416
  %1426 = phi i32 [ %1424, %1423 ], [ %1422, %1416 ]
  %1427 = icmp eq i32 %1426, 0
  br i1 %1427, label %1428, label %1429

1428:                                             ; preds = %1425
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1414) #9
  br label %1429

1429:                                             ; preds = %1413, %1425, %1428
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1144) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1143) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1142) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1141) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1140) #9
  br label %2318

1430:                                             ; preds = %1138
  %1431 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %59, i64 0, i32 7
  %1432 = load i8, i8* %1431, align 1, !range !4
  %1433 = icmp eq i8 %1432, 0
  %1434 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %51, i64 0, i32 7
  %1435 = load i8, i8* %1434, align 1, !range !4
  %1436 = icmp eq i8 %1435, 0
  br i1 %1433, label %1769, label %1437

1437:                                             ; preds = %1430
  br i1 %1436, label %1976, label %1438

1438:                                             ; preds = %1437
  %1439 = bitcast %"class.WTF::StringAppend.2130"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %1439) #9
  %1440 = bitcast %"class.WTF::StringAppend.2131"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1440) #9
  %1441 = bitcast %"class.WTF::StringAppend.2132"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1441) #9
  %1442 = bitcast %"class.WTF::StringAppend.2133"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1442) #9
  %1443 = bitcast %"class.WTF::StringAppend.2134"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1443) #9
  %1444 = icmp eq %"class.WTF::StringImpl"* %222, null
  br i1 %1444, label %1489, label %1445

1445:                                             ; preds = %1438
  %1446 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1447 = load atomic i32, i32* %1446 monotonic, align 4
  %1448 = and i32 %1447, 2
  %1449 = icmp eq i32 %1448, 0
  %1450 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 0
  %1451 = load i32, i32* %1450, align 4
  br i1 %1449, label %1452, label %1462

1452:                                             ; preds = %1445
  %1453 = zext i32 %1451 to i33
  %1454 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1453, i33 1) #9
  %1455 = extractvalue { i33, i1 } %1454, 1
  %1456 = extractvalue { i33, i1 } %1454, 0
  %1457 = icmp slt i33 %1456, 0
  %1458 = or i1 %1455, %1457
  br i1 %1458, label %1459, label %1460, !prof !3

1459:                                             ; preds = %1452
  call void @llvm.trap() #9
  unreachable

1460:                                             ; preds = %1452
  %1461 = trunc i33 %1456 to i32
  store i32 %1461, i32* %1450, align 4
  br label %1462

1462:                                             ; preds = %1445, %1460
  %1463 = phi i32 [ %1461, %1460 ], [ %1451, %1445 ]
  %1464 = load atomic i32, i32* %1446 monotonic, align 4
  %1465 = and i32 %1464, 2
  %1466 = icmp eq i32 %1465, 0
  %1467 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 0
  br i1 %1466, label %1468, label %1478

1468:                                             ; preds = %1462
  %1469 = zext i32 %1463 to i33
  %1470 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1469, i33 1) #9
  %1471 = extractvalue { i33, i1 } %1470, 1
  %1472 = extractvalue { i33, i1 } %1470, 0
  %1473 = icmp slt i33 %1472, 0
  %1474 = or i1 %1471, %1473
  br i1 %1474, label %1475, label %1476, !prof !3

1475:                                             ; preds = %1468
  call void @llvm.trap() #9
  unreachable

1476:                                             ; preds = %1468
  %1477 = trunc i33 %1472 to i32
  store i32 %1477, i32* %1467, align 4
  br label %1478

1478:                                             ; preds = %1476, %1462
  %1479 = phi i32 [ %1477, %1476 ], [ %1463, %1462 ]
  %1480 = load atomic i32, i32* %1446 monotonic, align 4
  %1481 = and i32 %1480, 2
  %1482 = icmp eq i32 %1481, 0
  br i1 %1482, label %1483, label %1485

1483:                                             ; preds = %1478
  %1484 = add i32 %1479, -1
  store i32 %1484, i32* %1467, align 4
  br label %1485

1485:                                             ; preds = %1483, %1478
  %1486 = phi i32 [ %1484, %1483 ], [ %1479, %1478 ]
  %1487 = icmp eq i32 %1486, 0
  br i1 %1487, label %1488, label %1489

1488:                                             ; preds = %1485
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %222) #9
  br label %1489

1489:                                             ; preds = %1438, %1485, %1488
  %1490 = getelementptr inbounds %"class.WTF::StringAppend.2134", %"class.WTF::StringAppend.2134"* %31, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %222, %"class.WTF::StringImpl"** %1490, align 8
  %1491 = getelementptr inbounds %"class.WTF::StringAppend.2134", %"class.WTF::StringAppend.2134"* %31, i64 0, i32 1
  store i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i8** %1491, align 8
  %1492 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %51, i64 0, i32 3, i32 0, i32 0
  %1493 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1492, align 8
  %1494 = icmp eq %"class.WTF::StringImpl"* %1493, null
  br i1 %1494, label %1512, label %1495

1495:                                             ; preds = %1489
  %1496 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1493, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1497 = load atomic i32, i32* %1496 monotonic, align 4
  %1498 = and i32 %1497, 2
  %1499 = icmp eq i32 %1498, 0
  br i1 %1499, label %1500, label %1512

1500:                                             ; preds = %1495
  %1501 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1493, i64 0, i32 0
  %1502 = load i32, i32* %1501, align 4
  %1503 = zext i32 %1502 to i33
  %1504 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1503, i33 1) #9
  %1505 = extractvalue { i33, i1 } %1504, 1
  %1506 = extractvalue { i33, i1 } %1504, 0
  %1507 = icmp slt i33 %1506, 0
  %1508 = or i1 %1505, %1507
  br i1 %1508, label %1509, label %1510, !prof !3

1509:                                             ; preds = %1500
  call void @llvm.trap() #9
  unreachable

1510:                                             ; preds = %1500
  %1511 = trunc i33 %1506 to i32
  store i32 %1511, i32* %1501, align 4
  br label %1512

1512:                                             ; preds = %1489, %1495, %1510
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.2133"* nonnull sret %30, %"class.WTF::StringAppend.2134"* nonnull dereferenceable(16) %31, %"class.WTF::StringImpl"* %1493)
  %1513 = bitcast %"class.WTF::StringAppend.2133"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1513)
  %1514 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %1515 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1514, align 8, !noalias !43
  %1516 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1515, %"class.WTF::StringImpl"** %1516, align 8, !noalias !43
  %1517 = icmp eq %"class.WTF::StringImpl"* %1515, null
  br i1 %1517, label %1535, label %1518

1518:                                             ; preds = %1512
  %1519 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1515, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1520 = load atomic i32, i32* %1519 monotonic, align 4
  %1521 = and i32 %1520, 2
  %1522 = icmp eq i32 %1521, 0
  br i1 %1522, label %1523, label %1535

1523:                                             ; preds = %1518
  %1524 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1515, i64 0, i32 0
  %1525 = load i32, i32* %1524, align 4
  %1526 = zext i32 %1525 to i33
  %1527 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1526, i33 1) #9
  %1528 = extractvalue { i33, i1 } %1527, 1
  %1529 = extractvalue { i33, i1 } %1527, 0
  %1530 = icmp slt i33 %1529, 0
  %1531 = or i1 %1528, %1530
  br i1 %1531, label %1532, label %1533, !prof !3

1532:                                             ; preds = %1523
  call void @llvm.trap() #9
  unreachable

1533:                                             ; preds = %1523
  %1534 = trunc i33 %1529 to i32
  store i32 %1534, i32* %1524, align 4
  br label %1535

1535:                                             ; preds = %1533, %1518, %1512
  %1536 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %6, i64 0, i32 0, i32 1
  %1537 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %30, i64 0, i32 0, i32 1
  %1538 = bitcast i8** %1537 to i64*
  %1539 = load i64, i64* %1538, align 8, !noalias !43
  %1540 = bitcast i8** %1536 to i64*
  store i64 %1539, i64* %1540, align 8, !noalias !43
  %1541 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %30, i64 0, i32 1, i32 0, i32 0
  %1542 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1541, align 8, !noalias !43
  %1543 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %6, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1542, %"class.WTF::StringImpl"** %1543, align 8, !noalias !43
  %1544 = icmp eq %"class.WTF::StringImpl"* %1542, null
  br i1 %1544, label %1562, label %1545

1545:                                             ; preds = %1535
  %1546 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1542, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1547 = load atomic i32, i32* %1546 monotonic, align 4
  %1548 = and i32 %1547, 2
  %1549 = icmp eq i32 %1548, 0
  br i1 %1549, label %1550, label %1562

1550:                                             ; preds = %1545
  %1551 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1542, i64 0, i32 0
  %1552 = load i32, i32* %1551, align 4
  %1553 = zext i32 %1552 to i33
  %1554 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1553, i33 1) #9
  %1555 = extractvalue { i33, i1 } %1554, 1
  %1556 = extractvalue { i33, i1 } %1554, 0
  %1557 = icmp slt i33 %1556, 0
  %1558 = or i1 %1555, %1557
  br i1 %1558, label %1559, label %1560, !prof !3

1559:                                             ; preds = %1550
  call void @llvm.trap() #9
  unreachable

1560:                                             ; preds = %1550
  %1561 = trunc i33 %1556 to i32
  store i32 %1561, i32* %1551, align 4
  br label %1562

1562:                                             ; preds = %1535, %1545, %1560
  call void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.2132"* nonnull %29, %"class.WTF::StringAppend.2133"* nonnull byval(%"class.WTF::StringAppend.2133") align 8 %6, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.19, i64 0, i64 0)) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1513)
  %1563 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %59, i64 0, i32 3, i32 0, i32 0
  %1564 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1563, align 8
  %1565 = icmp eq %"class.WTF::StringImpl"* %1564, null
  br i1 %1565, label %1583, label %1566

1566:                                             ; preds = %1562
  %1567 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1564, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1568 = load atomic i32, i32* %1567 monotonic, align 4
  %1569 = and i32 %1568, 2
  %1570 = icmp eq i32 %1569, 0
  br i1 %1570, label %1571, label %1583

1571:                                             ; preds = %1566
  %1572 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1564, i64 0, i32 0
  %1573 = load i32, i32* %1572, align 4
  %1574 = zext i32 %1573 to i33
  %1575 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1574, i33 1) #9
  %1576 = extractvalue { i33, i1 } %1575, 1
  %1577 = extractvalue { i33, i1 } %1575, 0
  %1578 = icmp slt i33 %1577, 0
  %1579 = or i1 %1576, %1578
  br i1 %1579, label %1580, label %1581, !prof !3

1580:                                             ; preds = %1571
  call void @llvm.trap() #9
  unreachable

1581:                                             ; preds = %1571
  %1582 = trunc i33 %1577 to i32
  store i32 %1582, i32* %1572, align 4
  br label %1583

1583:                                             ; preds = %1562, %1566, %1581
  call void @_ZN3WTFplINS_12StringAppendINS1_INS_6StringEPKcEES2_EES4_S2_EENS1_INS1_IT_T0_EET1_EERKS9_SA_(%"class.WTF::StringAppend.2131"* nonnull sret %28, %"class.WTF::StringAppend.2132"* nonnull dereferenceable(32) %29, %"class.WTF::StringImpl"* %1564)
  call void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS_6StringEPKcEES2_EES4_EES2_S4_EENS1_INS1_IT_T0_EET1_EERKSA_SB_(%"class.WTF::StringAppend.2130"* nonnull sret %27, %"class.WTF::StringAppend.2131"* nonnull dereferenceable(40) %28, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0))
  %1584 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EES3_EcvS1_Ev(%"class.WTF::StringAppend.2130"* nonnull %27)
  %1585 = getelementptr inbounds %"class.WTF::StringAppend.2130", %"class.WTF::StringAppend.2130"* %27, i64 0, i32 0, i32 1, i32 0, i32 0
  %1586 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1585, align 8
  %1587 = icmp eq %"class.WTF::StringImpl"* %1586, null
  br i1 %1587, label %1601, label %1588

1588:                                             ; preds = %1583
  %1589 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1586, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1590 = load atomic i32, i32* %1589 monotonic, align 4
  %1591 = and i32 %1590, 2
  %1592 = icmp eq i32 %1591, 0
  %1593 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1586, i64 0, i32 0
  %1594 = load i32, i32* %1593, align 4
  br i1 %1592, label %1595, label %1597

1595:                                             ; preds = %1588
  %1596 = add i32 %1594, -1
  store i32 %1596, i32* %1593, align 4
  br label %1597

1597:                                             ; preds = %1595, %1588
  %1598 = phi i32 [ %1596, %1595 ], [ %1594, %1588 ]
  %1599 = icmp eq i32 %1598, 0
  br i1 %1599, label %1600, label %1601

1600:                                             ; preds = %1597
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1586) #9
  br label %1601

1601:                                             ; preds = %1600, %1597, %1583
  %1602 = getelementptr inbounds %"class.WTF::StringAppend.2130", %"class.WTF::StringAppend.2130"* %27, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1603 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1602, align 8
  %1604 = icmp eq %"class.WTF::StringImpl"* %1603, null
  br i1 %1604, label %1618, label %1605

1605:                                             ; preds = %1601
  %1606 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1603, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1607 = load atomic i32, i32* %1606 monotonic, align 4
  %1608 = and i32 %1607, 2
  %1609 = icmp eq i32 %1608, 0
  %1610 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1603, i64 0, i32 0
  %1611 = load i32, i32* %1610, align 4
  br i1 %1609, label %1612, label %1614

1612:                                             ; preds = %1605
  %1613 = add i32 %1611, -1
  store i32 %1613, i32* %1610, align 4
  br label %1614

1614:                                             ; preds = %1612, %1605
  %1615 = phi i32 [ %1613, %1612 ], [ %1611, %1605 ]
  %1616 = icmp eq i32 %1615, 0
  br i1 %1616, label %1617, label %1618

1617:                                             ; preds = %1614
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1603) #9
  br label %1618

1618:                                             ; preds = %1617, %1614, %1601
  %1619 = getelementptr inbounds %"class.WTF::StringAppend.2130", %"class.WTF::StringAppend.2130"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1620 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1619, align 8
  %1621 = icmp eq %"class.WTF::StringImpl"* %1620, null
  br i1 %1621, label %1635, label %1622

1622:                                             ; preds = %1618
  %1623 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1620, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1624 = load atomic i32, i32* %1623 monotonic, align 4
  %1625 = and i32 %1624, 2
  %1626 = icmp eq i32 %1625, 0
  %1627 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1620, i64 0, i32 0
  %1628 = load i32, i32* %1627, align 4
  br i1 %1626, label %1629, label %1631

1629:                                             ; preds = %1622
  %1630 = add i32 %1628, -1
  store i32 %1630, i32* %1627, align 4
  br label %1631

1631:                                             ; preds = %1629, %1622
  %1632 = phi i32 [ %1630, %1629 ], [ %1628, %1622 ]
  %1633 = icmp eq i32 %1632, 0
  br i1 %1633, label %1634, label %1635

1634:                                             ; preds = %1631
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1620) #9
  br label %1635

1635:                                             ; preds = %1618, %1631, %1634
  %1636 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %28, i64 0, i32 1, i32 0, i32 0
  %1637 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1636, align 8
  %1638 = icmp eq %"class.WTF::StringImpl"* %1637, null
  br i1 %1638, label %1652, label %1639

1639:                                             ; preds = %1635
  %1640 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1637, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1641 = load atomic i32, i32* %1640 monotonic, align 4
  %1642 = and i32 %1641, 2
  %1643 = icmp eq i32 %1642, 0
  %1644 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1637, i64 0, i32 0
  %1645 = load i32, i32* %1644, align 4
  br i1 %1643, label %1646, label %1648

1646:                                             ; preds = %1639
  %1647 = add i32 %1645, -1
  store i32 %1647, i32* %1644, align 4
  br label %1648

1648:                                             ; preds = %1646, %1639
  %1649 = phi i32 [ %1647, %1646 ], [ %1645, %1639 ]
  %1650 = icmp eq i32 %1649, 0
  br i1 %1650, label %1651, label %1652

1651:                                             ; preds = %1648
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1637) #9
  br label %1652

1652:                                             ; preds = %1651, %1648, %1635
  %1653 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %28, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1654 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1653, align 8
  %1655 = icmp eq %"class.WTF::StringImpl"* %1654, null
  br i1 %1655, label %1669, label %1656

1656:                                             ; preds = %1652
  %1657 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1654, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1658 = load atomic i32, i32* %1657 monotonic, align 4
  %1659 = and i32 %1658, 2
  %1660 = icmp eq i32 %1659, 0
  %1661 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1654, i64 0, i32 0
  %1662 = load i32, i32* %1661, align 4
  br i1 %1660, label %1663, label %1665

1663:                                             ; preds = %1656
  %1664 = add i32 %1662, -1
  store i32 %1664, i32* %1661, align 4
  br label %1665

1665:                                             ; preds = %1663, %1656
  %1666 = phi i32 [ %1664, %1663 ], [ %1662, %1656 ]
  %1667 = icmp eq i32 %1666, 0
  br i1 %1667, label %1668, label %1669

1668:                                             ; preds = %1665
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1654) #9
  br label %1669

1669:                                             ; preds = %1668, %1665, %1652
  %1670 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1671 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1670, align 8
  %1672 = icmp eq %"class.WTF::StringImpl"* %1671, null
  br i1 %1672, label %1686, label %1673

1673:                                             ; preds = %1669
  %1674 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1671, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1675 = load atomic i32, i32* %1674 monotonic, align 4
  %1676 = and i32 %1675, 2
  %1677 = icmp eq i32 %1676, 0
  %1678 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1671, i64 0, i32 0
  %1679 = load i32, i32* %1678, align 4
  br i1 %1677, label %1680, label %1682

1680:                                             ; preds = %1673
  %1681 = add i32 %1679, -1
  store i32 %1681, i32* %1678, align 4
  br label %1682

1682:                                             ; preds = %1680, %1673
  %1683 = phi i32 [ %1681, %1680 ], [ %1679, %1673 ]
  %1684 = icmp eq i32 %1683, 0
  br i1 %1684, label %1685, label %1686

1685:                                             ; preds = %1682
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1671) #9
  br label %1686

1686:                                             ; preds = %1669, %1682, %1685
  %1687 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %29, i64 0, i32 0, i32 1, i32 0, i32 0
  %1688 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1687, align 8
  %1689 = icmp eq %"class.WTF::StringImpl"* %1688, null
  br i1 %1689, label %1703, label %1690

1690:                                             ; preds = %1686
  %1691 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1688, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1692 = load atomic i32, i32* %1691 monotonic, align 4
  %1693 = and i32 %1692, 2
  %1694 = icmp eq i32 %1693, 0
  %1695 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1688, i64 0, i32 0
  %1696 = load i32, i32* %1695, align 4
  br i1 %1694, label %1697, label %1699

1697:                                             ; preds = %1690
  %1698 = add i32 %1696, -1
  store i32 %1698, i32* %1695, align 4
  br label %1699

1699:                                             ; preds = %1697, %1690
  %1700 = phi i32 [ %1698, %1697 ], [ %1696, %1690 ]
  %1701 = icmp eq i32 %1700, 0
  br i1 %1701, label %1702, label %1703

1702:                                             ; preds = %1699
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1688) #9
  br label %1703

1703:                                             ; preds = %1702, %1699, %1686
  %1704 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1705 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1704, align 8
  %1706 = icmp eq %"class.WTF::StringImpl"* %1705, null
  br i1 %1706, label %1720, label %1707

1707:                                             ; preds = %1703
  %1708 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1705, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1709 = load atomic i32, i32* %1708 monotonic, align 4
  %1710 = and i32 %1709, 2
  %1711 = icmp eq i32 %1710, 0
  %1712 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1705, i64 0, i32 0
  %1713 = load i32, i32* %1712, align 4
  br i1 %1711, label %1714, label %1716

1714:                                             ; preds = %1707
  %1715 = add i32 %1713, -1
  store i32 %1715, i32* %1712, align 4
  br label %1716

1716:                                             ; preds = %1714, %1707
  %1717 = phi i32 [ %1715, %1714 ], [ %1713, %1707 ]
  %1718 = icmp eq i32 %1717, 0
  br i1 %1718, label %1719, label %1720

1719:                                             ; preds = %1716
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1705) #9
  br label %1720

1720:                                             ; preds = %1703, %1716, %1719
  %1721 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1541, align 8
  %1722 = icmp eq %"class.WTF::StringImpl"* %1721, null
  br i1 %1722, label %1736, label %1723

1723:                                             ; preds = %1720
  %1724 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1721, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1725 = load atomic i32, i32* %1724 monotonic, align 4
  %1726 = and i32 %1725, 2
  %1727 = icmp eq i32 %1726, 0
  %1728 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1721, i64 0, i32 0
  %1729 = load i32, i32* %1728, align 4
  br i1 %1727, label %1730, label %1732

1730:                                             ; preds = %1723
  %1731 = add i32 %1729, -1
  store i32 %1731, i32* %1728, align 4
  br label %1732

1732:                                             ; preds = %1730, %1723
  %1733 = phi i32 [ %1731, %1730 ], [ %1729, %1723 ]
  %1734 = icmp eq i32 %1733, 0
  br i1 %1734, label %1735, label %1736

1735:                                             ; preds = %1732
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1721) #9
  br label %1736

1736:                                             ; preds = %1735, %1732, %1720
  %1737 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1514, align 8
  %1738 = icmp eq %"class.WTF::StringImpl"* %1737, null
  br i1 %1738, label %1752, label %1739

1739:                                             ; preds = %1736
  %1740 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1737, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1741 = load atomic i32, i32* %1740 monotonic, align 4
  %1742 = and i32 %1741, 2
  %1743 = icmp eq i32 %1742, 0
  %1744 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1737, i64 0, i32 0
  %1745 = load i32, i32* %1744, align 4
  br i1 %1743, label %1746, label %1748

1746:                                             ; preds = %1739
  %1747 = add i32 %1745, -1
  store i32 %1747, i32* %1744, align 4
  br label %1748

1748:                                             ; preds = %1746, %1739
  %1749 = phi i32 [ %1747, %1746 ], [ %1745, %1739 ]
  %1750 = icmp eq i32 %1749, 0
  br i1 %1750, label %1751, label %1752

1751:                                             ; preds = %1748
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1737) #9
  br label %1752

1752:                                             ; preds = %1736, %1748, %1751
  %1753 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1490, align 8
  %1754 = icmp eq %"class.WTF::StringImpl"* %1753, null
  br i1 %1754, label %1768, label %1755

1755:                                             ; preds = %1752
  %1756 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1753, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1757 = load atomic i32, i32* %1756 monotonic, align 4
  %1758 = and i32 %1757, 2
  %1759 = icmp eq i32 %1758, 0
  %1760 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1753, i64 0, i32 0
  %1761 = load i32, i32* %1760, align 4
  br i1 %1759, label %1762, label %1764

1762:                                             ; preds = %1755
  %1763 = add i32 %1761, -1
  store i32 %1763, i32* %1760, align 4
  br label %1764

1764:                                             ; preds = %1762, %1755
  %1765 = phi i32 [ %1763, %1762 ], [ %1761, %1755 ]
  %1766 = icmp eq i32 %1765, 0
  br i1 %1766, label %1767, label %1768

1767:                                             ; preds = %1764
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1753) #9
  br label %1768

1768:                                             ; preds = %1752, %1764, %1767
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1443) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1442) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1441) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1440) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1439) #9
  br label %2318

1769:                                             ; preds = %1430
  br i1 %1436, label %2182, label %1770

1770:                                             ; preds = %1769
  %1771 = bitcast %"class.WTF::StringAppend.2132"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1771) #9
  %1772 = bitcast %"class.WTF::StringAppend.2133"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1772) #9
  %1773 = bitcast %"class.WTF::StringAppend.2134"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1773) #9
  %1774 = icmp eq %"class.WTF::StringImpl"* %222, null
  br i1 %1774, label %1819, label %1775

1775:                                             ; preds = %1770
  %1776 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1777 = load atomic i32, i32* %1776 monotonic, align 4
  %1778 = and i32 %1777, 2
  %1779 = icmp eq i32 %1778, 0
  %1780 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 0
  %1781 = load i32, i32* %1780, align 4
  br i1 %1779, label %1782, label %1792

1782:                                             ; preds = %1775
  %1783 = zext i32 %1781 to i33
  %1784 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1783, i33 1) #9
  %1785 = extractvalue { i33, i1 } %1784, 1
  %1786 = extractvalue { i33, i1 } %1784, 0
  %1787 = icmp slt i33 %1786, 0
  %1788 = or i1 %1785, %1787
  br i1 %1788, label %1789, label %1790, !prof !3

1789:                                             ; preds = %1782
  call void @llvm.trap() #9
  unreachable

1790:                                             ; preds = %1782
  %1791 = trunc i33 %1786 to i32
  store i32 %1791, i32* %1780, align 4
  br label %1792

1792:                                             ; preds = %1775, %1790
  %1793 = phi i32 [ %1791, %1790 ], [ %1781, %1775 ]
  %1794 = load atomic i32, i32* %1776 monotonic, align 4
  %1795 = and i32 %1794, 2
  %1796 = icmp eq i32 %1795, 0
  %1797 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 0
  br i1 %1796, label %1798, label %1808

1798:                                             ; preds = %1792
  %1799 = zext i32 %1793 to i33
  %1800 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1799, i33 1) #9
  %1801 = extractvalue { i33, i1 } %1800, 1
  %1802 = extractvalue { i33, i1 } %1800, 0
  %1803 = icmp slt i33 %1802, 0
  %1804 = or i1 %1801, %1803
  br i1 %1804, label %1805, label %1806, !prof !3

1805:                                             ; preds = %1798
  call void @llvm.trap() #9
  unreachable

1806:                                             ; preds = %1798
  %1807 = trunc i33 %1802 to i32
  store i32 %1807, i32* %1797, align 4
  br label %1808

1808:                                             ; preds = %1806, %1792
  %1809 = phi i32 [ %1807, %1806 ], [ %1793, %1792 ]
  %1810 = load atomic i32, i32* %1776 monotonic, align 4
  %1811 = and i32 %1810, 2
  %1812 = icmp eq i32 %1811, 0
  br i1 %1812, label %1813, label %1815

1813:                                             ; preds = %1808
  %1814 = add i32 %1809, -1
  store i32 %1814, i32* %1797, align 4
  br label %1815

1815:                                             ; preds = %1813, %1808
  %1816 = phi i32 [ %1814, %1813 ], [ %1809, %1808 ]
  %1817 = icmp eq i32 %1816, 0
  br i1 %1817, label %1818, label %1819

1818:                                             ; preds = %1815
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %222) #9
  br label %1819

1819:                                             ; preds = %1770, %1815, %1818
  %1820 = getelementptr inbounds %"class.WTF::StringAppend.2134", %"class.WTF::StringAppend.2134"* %34, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %222, %"class.WTF::StringImpl"** %1820, align 8
  %1821 = getelementptr inbounds %"class.WTF::StringAppend.2134", %"class.WTF::StringAppend.2134"* %34, i64 0, i32 1
  store i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i8** %1821, align 8
  %1822 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %51, i64 0, i32 3, i32 0, i32 0
  %1823 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1822, align 8
  %1824 = icmp eq %"class.WTF::StringImpl"* %1823, null
  br i1 %1824, label %1842, label %1825

1825:                                             ; preds = %1819
  %1826 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1823, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1827 = load atomic i32, i32* %1826 monotonic, align 4
  %1828 = and i32 %1827, 2
  %1829 = icmp eq i32 %1828, 0
  br i1 %1829, label %1830, label %1842

1830:                                             ; preds = %1825
  %1831 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1823, i64 0, i32 0
  %1832 = load i32, i32* %1831, align 4
  %1833 = zext i32 %1832 to i33
  %1834 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1833, i33 1) #9
  %1835 = extractvalue { i33, i1 } %1834, 1
  %1836 = extractvalue { i33, i1 } %1834, 0
  %1837 = icmp slt i33 %1836, 0
  %1838 = or i1 %1835, %1837
  br i1 %1838, label %1839, label %1840, !prof !3

1839:                                             ; preds = %1830
  call void @llvm.trap() #9
  unreachable

1840:                                             ; preds = %1830
  %1841 = trunc i33 %1836 to i32
  store i32 %1841, i32* %1831, align 4
  br label %1842

1842:                                             ; preds = %1819, %1825, %1840
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.2133"* nonnull sret %33, %"class.WTF::StringAppend.2134"* nonnull dereferenceable(16) %34, %"class.WTF::StringImpl"* %1823)
  %1843 = bitcast %"class.WTF::StringAppend.2133"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1843)
  %1844 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %1845 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1844, align 8, !noalias !46
  %1846 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1845, %"class.WTF::StringImpl"** %1846, align 8, !noalias !46
  %1847 = icmp eq %"class.WTF::StringImpl"* %1845, null
  br i1 %1847, label %1865, label %1848

1848:                                             ; preds = %1842
  %1849 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1845, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1850 = load atomic i32, i32* %1849 monotonic, align 4
  %1851 = and i32 %1850, 2
  %1852 = icmp eq i32 %1851, 0
  br i1 %1852, label %1853, label %1865

1853:                                             ; preds = %1848
  %1854 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1845, i64 0, i32 0
  %1855 = load i32, i32* %1854, align 4
  %1856 = zext i32 %1855 to i33
  %1857 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1856, i33 1) #9
  %1858 = extractvalue { i33, i1 } %1857, 1
  %1859 = extractvalue { i33, i1 } %1857, 0
  %1860 = icmp slt i33 %1859, 0
  %1861 = or i1 %1858, %1860
  br i1 %1861, label %1862, label %1863, !prof !3

1862:                                             ; preds = %1853
  call void @llvm.trap() #9
  unreachable

1863:                                             ; preds = %1853
  %1864 = trunc i33 %1859 to i32
  store i32 %1864, i32* %1854, align 4
  br label %1865

1865:                                             ; preds = %1863, %1848, %1842
  %1866 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %5, i64 0, i32 0, i32 1
  %1867 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %33, i64 0, i32 0, i32 1
  %1868 = bitcast i8** %1867 to i64*
  %1869 = load i64, i64* %1868, align 8, !noalias !46
  %1870 = bitcast i8** %1866 to i64*
  store i64 %1869, i64* %1870, align 8, !noalias !46
  %1871 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %33, i64 0, i32 1, i32 0, i32 0
  %1872 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1871, align 8, !noalias !46
  %1873 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %5, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1872, %"class.WTF::StringImpl"** %1873, align 8, !noalias !46
  %1874 = icmp eq %"class.WTF::StringImpl"* %1872, null
  br i1 %1874, label %1892, label %1875

1875:                                             ; preds = %1865
  %1876 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1872, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1877 = load atomic i32, i32* %1876 monotonic, align 4
  %1878 = and i32 %1877, 2
  %1879 = icmp eq i32 %1878, 0
  br i1 %1879, label %1880, label %1892

1880:                                             ; preds = %1875
  %1881 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1872, i64 0, i32 0
  %1882 = load i32, i32* %1881, align 4
  %1883 = zext i32 %1882 to i33
  %1884 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1883, i33 1) #9
  %1885 = extractvalue { i33, i1 } %1884, 1
  %1886 = extractvalue { i33, i1 } %1884, 0
  %1887 = icmp slt i33 %1886, 0
  %1888 = or i1 %1885, %1887
  br i1 %1888, label %1889, label %1890, !prof !3

1889:                                             ; preds = %1880
  call void @llvm.trap() #9
  unreachable

1890:                                             ; preds = %1880
  %1891 = trunc i33 %1886 to i32
  store i32 %1891, i32* %1881, align 4
  br label %1892

1892:                                             ; preds = %1865, %1875, %1890
  call void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.2132"* nonnull %32, %"class.WTF::StringAppend.2133"* nonnull byval(%"class.WTF::StringAppend.2133") align 8 %5, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @.str.21, i64 0, i64 0)) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1843)
  %1893 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EcvS1_Ev(%"class.WTF::StringAppend.2132"* nonnull %32)
  %1894 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %32, i64 0, i32 0, i32 1, i32 0, i32 0
  %1895 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1894, align 8
  %1896 = icmp eq %"class.WTF::StringImpl"* %1895, null
  br i1 %1896, label %1910, label %1897

1897:                                             ; preds = %1892
  %1898 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1895, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1899 = load atomic i32, i32* %1898 monotonic, align 4
  %1900 = and i32 %1899, 2
  %1901 = icmp eq i32 %1900, 0
  %1902 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1895, i64 0, i32 0
  %1903 = load i32, i32* %1902, align 4
  br i1 %1901, label %1904, label %1906

1904:                                             ; preds = %1897
  %1905 = add i32 %1903, -1
  store i32 %1905, i32* %1902, align 4
  br label %1906

1906:                                             ; preds = %1904, %1897
  %1907 = phi i32 [ %1905, %1904 ], [ %1903, %1897 ]
  %1908 = icmp eq i32 %1907, 0
  br i1 %1908, label %1909, label %1910

1909:                                             ; preds = %1906
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1895) #9
  br label %1910

1910:                                             ; preds = %1909, %1906, %1892
  %1911 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1912 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1911, align 8
  %1913 = icmp eq %"class.WTF::StringImpl"* %1912, null
  br i1 %1913, label %1927, label %1914

1914:                                             ; preds = %1910
  %1915 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1912, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1916 = load atomic i32, i32* %1915 monotonic, align 4
  %1917 = and i32 %1916, 2
  %1918 = icmp eq i32 %1917, 0
  %1919 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1912, i64 0, i32 0
  %1920 = load i32, i32* %1919, align 4
  br i1 %1918, label %1921, label %1923

1921:                                             ; preds = %1914
  %1922 = add i32 %1920, -1
  store i32 %1922, i32* %1919, align 4
  br label %1923

1923:                                             ; preds = %1921, %1914
  %1924 = phi i32 [ %1922, %1921 ], [ %1920, %1914 ]
  %1925 = icmp eq i32 %1924, 0
  br i1 %1925, label %1926, label %1927

1926:                                             ; preds = %1923
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1912) #9
  br label %1927

1927:                                             ; preds = %1910, %1923, %1926
  %1928 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1871, align 8
  %1929 = icmp eq %"class.WTF::StringImpl"* %1928, null
  br i1 %1929, label %1943, label %1930

1930:                                             ; preds = %1927
  %1931 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1928, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1932 = load atomic i32, i32* %1931 monotonic, align 4
  %1933 = and i32 %1932, 2
  %1934 = icmp eq i32 %1933, 0
  %1935 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1928, i64 0, i32 0
  %1936 = load i32, i32* %1935, align 4
  br i1 %1934, label %1937, label %1939

1937:                                             ; preds = %1930
  %1938 = add i32 %1936, -1
  store i32 %1938, i32* %1935, align 4
  br label %1939

1939:                                             ; preds = %1937, %1930
  %1940 = phi i32 [ %1938, %1937 ], [ %1936, %1930 ]
  %1941 = icmp eq i32 %1940, 0
  br i1 %1941, label %1942, label %1943

1942:                                             ; preds = %1939
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1928) #9
  br label %1943

1943:                                             ; preds = %1942, %1939, %1927
  %1944 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1844, align 8
  %1945 = icmp eq %"class.WTF::StringImpl"* %1944, null
  br i1 %1945, label %1959, label %1946

1946:                                             ; preds = %1943
  %1947 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1944, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1948 = load atomic i32, i32* %1947 monotonic, align 4
  %1949 = and i32 %1948, 2
  %1950 = icmp eq i32 %1949, 0
  %1951 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1944, i64 0, i32 0
  %1952 = load i32, i32* %1951, align 4
  br i1 %1950, label %1953, label %1955

1953:                                             ; preds = %1946
  %1954 = add i32 %1952, -1
  store i32 %1954, i32* %1951, align 4
  br label %1955

1955:                                             ; preds = %1953, %1946
  %1956 = phi i32 [ %1954, %1953 ], [ %1952, %1946 ]
  %1957 = icmp eq i32 %1956, 0
  br i1 %1957, label %1958, label %1959

1958:                                             ; preds = %1955
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1944) #9
  br label %1959

1959:                                             ; preds = %1943, %1955, %1958
  %1960 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1820, align 8
  %1961 = icmp eq %"class.WTF::StringImpl"* %1960, null
  br i1 %1961, label %1975, label %1962

1962:                                             ; preds = %1959
  %1963 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1960, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1964 = load atomic i32, i32* %1963 monotonic, align 4
  %1965 = and i32 %1964, 2
  %1966 = icmp eq i32 %1965, 0
  %1967 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1960, i64 0, i32 0
  %1968 = load i32, i32* %1967, align 4
  br i1 %1966, label %1969, label %1971

1969:                                             ; preds = %1962
  %1970 = add i32 %1968, -1
  store i32 %1970, i32* %1967, align 4
  br label %1971

1971:                                             ; preds = %1969, %1962
  %1972 = phi i32 [ %1970, %1969 ], [ %1968, %1962 ]
  %1973 = icmp eq i32 %1972, 0
  br i1 %1973, label %1974, label %1975

1974:                                             ; preds = %1971
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1960) #9
  br label %1975

1975:                                             ; preds = %1959, %1971, %1974
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1773) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1772) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1771) #9
  br label %2318

1976:                                             ; preds = %1437
  %1977 = bitcast %"class.WTF::StringAppend.2132"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1977) #9
  %1978 = bitcast %"class.WTF::StringAppend.2133"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1978) #9
  %1979 = bitcast %"class.WTF::StringAppend.2134"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1979) #9
  %1980 = icmp eq %"class.WTF::StringImpl"* %222, null
  br i1 %1980, label %2025, label %1981

1981:                                             ; preds = %1976
  %1982 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1983 = load atomic i32, i32* %1982 monotonic, align 4
  %1984 = and i32 %1983, 2
  %1985 = icmp eq i32 %1984, 0
  %1986 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 0
  %1987 = load i32, i32* %1986, align 4
  br i1 %1985, label %1988, label %1998

1988:                                             ; preds = %1981
  %1989 = zext i32 %1987 to i33
  %1990 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1989, i33 1) #9
  %1991 = extractvalue { i33, i1 } %1990, 1
  %1992 = extractvalue { i33, i1 } %1990, 0
  %1993 = icmp slt i33 %1992, 0
  %1994 = or i1 %1991, %1993
  br i1 %1994, label %1995, label %1996, !prof !3

1995:                                             ; preds = %1988
  call void @llvm.trap() #9
  unreachable

1996:                                             ; preds = %1988
  %1997 = trunc i33 %1992 to i32
  store i32 %1997, i32* %1986, align 4
  br label %1998

1998:                                             ; preds = %1981, %1996
  %1999 = phi i32 [ %1997, %1996 ], [ %1987, %1981 ]
  %2000 = load atomic i32, i32* %1982 monotonic, align 4
  %2001 = and i32 %2000, 2
  %2002 = icmp eq i32 %2001, 0
  %2003 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 0
  br i1 %2002, label %2004, label %2014

2004:                                             ; preds = %1998
  %2005 = zext i32 %1999 to i33
  %2006 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2005, i33 1) #9
  %2007 = extractvalue { i33, i1 } %2006, 1
  %2008 = extractvalue { i33, i1 } %2006, 0
  %2009 = icmp slt i33 %2008, 0
  %2010 = or i1 %2007, %2009
  br i1 %2010, label %2011, label %2012, !prof !3

2011:                                             ; preds = %2004
  call void @llvm.trap() #9
  unreachable

2012:                                             ; preds = %2004
  %2013 = trunc i33 %2008 to i32
  store i32 %2013, i32* %2003, align 4
  br label %2014

2014:                                             ; preds = %2012, %1998
  %2015 = phi i32 [ %2013, %2012 ], [ %1999, %1998 ]
  %2016 = load atomic i32, i32* %1982 monotonic, align 4
  %2017 = and i32 %2016, 2
  %2018 = icmp eq i32 %2017, 0
  br i1 %2018, label %2019, label %2021

2019:                                             ; preds = %2014
  %2020 = add i32 %2015, -1
  store i32 %2020, i32* %2003, align 4
  br label %2021

2021:                                             ; preds = %2019, %2014
  %2022 = phi i32 [ %2020, %2019 ], [ %2015, %2014 ]
  %2023 = icmp eq i32 %2022, 0
  br i1 %2023, label %2024, label %2025

2024:                                             ; preds = %2021
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %222) #9
  br label %2025

2025:                                             ; preds = %1976, %2021, %2024
  %2026 = getelementptr inbounds %"class.WTF::StringAppend.2134", %"class.WTF::StringAppend.2134"* %37, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %222, %"class.WTF::StringImpl"** %2026, align 8
  %2027 = getelementptr inbounds %"class.WTF::StringAppend.2134", %"class.WTF::StringAppend.2134"* %37, i64 0, i32 1
  store i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.22, i64 0, i64 0), i8** %2027, align 8
  %2028 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %59, i64 0, i32 3, i32 0, i32 0
  %2029 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2028, align 8
  %2030 = icmp eq %"class.WTF::StringImpl"* %2029, null
  br i1 %2030, label %2048, label %2031

2031:                                             ; preds = %2025
  %2032 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2029, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2033 = load atomic i32, i32* %2032 monotonic, align 4
  %2034 = and i32 %2033, 2
  %2035 = icmp eq i32 %2034, 0
  br i1 %2035, label %2036, label %2048

2036:                                             ; preds = %2031
  %2037 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2029, i64 0, i32 0
  %2038 = load i32, i32* %2037, align 4
  %2039 = zext i32 %2038 to i33
  %2040 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2039, i33 1) #9
  %2041 = extractvalue { i33, i1 } %2040, 1
  %2042 = extractvalue { i33, i1 } %2040, 0
  %2043 = icmp slt i33 %2042, 0
  %2044 = or i1 %2041, %2043
  br i1 %2044, label %2045, label %2046, !prof !3

2045:                                             ; preds = %2036
  call void @llvm.trap() #9
  unreachable

2046:                                             ; preds = %2036
  %2047 = trunc i33 %2042 to i32
  store i32 %2047, i32* %2037, align 4
  br label %2048

2048:                                             ; preds = %2025, %2031, %2046
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.2133"* nonnull sret %36, %"class.WTF::StringAppend.2134"* nonnull dereferenceable(16) %37, %"class.WTF::StringImpl"* %2029)
  %2049 = bitcast %"class.WTF::StringAppend.2133"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2049)
  %2050 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %2051 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2050, align 8, !noalias !49
  %2052 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2051, %"class.WTF::StringImpl"** %2052, align 8, !noalias !49
  %2053 = icmp eq %"class.WTF::StringImpl"* %2051, null
  br i1 %2053, label %2071, label %2054

2054:                                             ; preds = %2048
  %2055 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2051, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2056 = load atomic i32, i32* %2055 monotonic, align 4
  %2057 = and i32 %2056, 2
  %2058 = icmp eq i32 %2057, 0
  br i1 %2058, label %2059, label %2071

2059:                                             ; preds = %2054
  %2060 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2051, i64 0, i32 0
  %2061 = load i32, i32* %2060, align 4
  %2062 = zext i32 %2061 to i33
  %2063 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2062, i33 1) #9
  %2064 = extractvalue { i33, i1 } %2063, 1
  %2065 = extractvalue { i33, i1 } %2063, 0
  %2066 = icmp slt i33 %2065, 0
  %2067 = or i1 %2064, %2066
  br i1 %2067, label %2068, label %2069, !prof !3

2068:                                             ; preds = %2059
  call void @llvm.trap() #9
  unreachable

2069:                                             ; preds = %2059
  %2070 = trunc i33 %2065 to i32
  store i32 %2070, i32* %2060, align 4
  br label %2071

2071:                                             ; preds = %2069, %2054, %2048
  %2072 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %4, i64 0, i32 0, i32 1
  %2073 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %36, i64 0, i32 0, i32 1
  %2074 = bitcast i8** %2073 to i64*
  %2075 = load i64, i64* %2074, align 8, !noalias !49
  %2076 = bitcast i8** %2072 to i64*
  store i64 %2075, i64* %2076, align 8, !noalias !49
  %2077 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %36, i64 0, i32 1, i32 0, i32 0
  %2078 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2077, align 8, !noalias !49
  %2079 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %4, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2078, %"class.WTF::StringImpl"** %2079, align 8, !noalias !49
  %2080 = icmp eq %"class.WTF::StringImpl"* %2078, null
  br i1 %2080, label %2098, label %2081

2081:                                             ; preds = %2071
  %2082 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2078, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2083 = load atomic i32, i32* %2082 monotonic, align 4
  %2084 = and i32 %2083, 2
  %2085 = icmp eq i32 %2084, 0
  br i1 %2085, label %2086, label %2098

2086:                                             ; preds = %2081
  %2087 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2078, i64 0, i32 0
  %2088 = load i32, i32* %2087, align 4
  %2089 = zext i32 %2088 to i33
  %2090 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2089, i33 1) #9
  %2091 = extractvalue { i33, i1 } %2090, 1
  %2092 = extractvalue { i33, i1 } %2090, 0
  %2093 = icmp slt i33 %2092, 0
  %2094 = or i1 %2091, %2093
  br i1 %2094, label %2095, label %2096, !prof !3

2095:                                             ; preds = %2086
  call void @llvm.trap() #9
  unreachable

2096:                                             ; preds = %2086
  %2097 = trunc i33 %2092 to i32
  store i32 %2097, i32* %2087, align 4
  br label %2098

2098:                                             ; preds = %2071, %2081, %2096
  call void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.2132"* nonnull %35, %"class.WTF::StringAppend.2133"* nonnull byval(%"class.WTF::StringAppend.2133") align 8 %4, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.23, i64 0, i64 0)) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2049)
  %2099 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EcvS1_Ev(%"class.WTF::StringAppend.2132"* nonnull %35)
  %2100 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %35, i64 0, i32 0, i32 1, i32 0, i32 0
  %2101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2100, align 8
  %2102 = icmp eq %"class.WTF::StringImpl"* %2101, null
  br i1 %2102, label %2116, label %2103

2103:                                             ; preds = %2098
  %2104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2105 = load atomic i32, i32* %2104 monotonic, align 4
  %2106 = and i32 %2105, 2
  %2107 = icmp eq i32 %2106, 0
  %2108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2101, i64 0, i32 0
  %2109 = load i32, i32* %2108, align 4
  br i1 %2107, label %2110, label %2112

2110:                                             ; preds = %2103
  %2111 = add i32 %2109, -1
  store i32 %2111, i32* %2108, align 4
  br label %2112

2112:                                             ; preds = %2110, %2103
  %2113 = phi i32 [ %2111, %2110 ], [ %2109, %2103 ]
  %2114 = icmp eq i32 %2113, 0
  br i1 %2114, label %2115, label %2116

2115:                                             ; preds = %2112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2101) #9
  br label %2116

2116:                                             ; preds = %2115, %2112, %2098
  %2117 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2117, align 8
  %2119 = icmp eq %"class.WTF::StringImpl"* %2118, null
  br i1 %2119, label %2133, label %2120

2120:                                             ; preds = %2116
  %2121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2118, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2122 = load atomic i32, i32* %2121 monotonic, align 4
  %2123 = and i32 %2122, 2
  %2124 = icmp eq i32 %2123, 0
  %2125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2118, i64 0, i32 0
  %2126 = load i32, i32* %2125, align 4
  br i1 %2124, label %2127, label %2129

2127:                                             ; preds = %2120
  %2128 = add i32 %2126, -1
  store i32 %2128, i32* %2125, align 4
  br label %2129

2129:                                             ; preds = %2127, %2120
  %2130 = phi i32 [ %2128, %2127 ], [ %2126, %2120 ]
  %2131 = icmp eq i32 %2130, 0
  br i1 %2131, label %2132, label %2133

2132:                                             ; preds = %2129
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2118) #9
  br label %2133

2133:                                             ; preds = %2116, %2129, %2132
  %2134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2077, align 8
  %2135 = icmp eq %"class.WTF::StringImpl"* %2134, null
  br i1 %2135, label %2149, label %2136

2136:                                             ; preds = %2133
  %2137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2134, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2138 = load atomic i32, i32* %2137 monotonic, align 4
  %2139 = and i32 %2138, 2
  %2140 = icmp eq i32 %2139, 0
  %2141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2134, i64 0, i32 0
  %2142 = load i32, i32* %2141, align 4
  br i1 %2140, label %2143, label %2145

2143:                                             ; preds = %2136
  %2144 = add i32 %2142, -1
  store i32 %2144, i32* %2141, align 4
  br label %2145

2145:                                             ; preds = %2143, %2136
  %2146 = phi i32 [ %2144, %2143 ], [ %2142, %2136 ]
  %2147 = icmp eq i32 %2146, 0
  br i1 %2147, label %2148, label %2149

2148:                                             ; preds = %2145
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2134) #9
  br label %2149

2149:                                             ; preds = %2148, %2145, %2133
  %2150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2050, align 8
  %2151 = icmp eq %"class.WTF::StringImpl"* %2150, null
  br i1 %2151, label %2165, label %2152

2152:                                             ; preds = %2149
  %2153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2150, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2154 = load atomic i32, i32* %2153 monotonic, align 4
  %2155 = and i32 %2154, 2
  %2156 = icmp eq i32 %2155, 0
  %2157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2150, i64 0, i32 0
  %2158 = load i32, i32* %2157, align 4
  br i1 %2156, label %2159, label %2161

2159:                                             ; preds = %2152
  %2160 = add i32 %2158, -1
  store i32 %2160, i32* %2157, align 4
  br label %2161

2161:                                             ; preds = %2159, %2152
  %2162 = phi i32 [ %2160, %2159 ], [ %2158, %2152 ]
  %2163 = icmp eq i32 %2162, 0
  br i1 %2163, label %2164, label %2165

2164:                                             ; preds = %2161
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2150) #9
  br label %2165

2165:                                             ; preds = %2149, %2161, %2164
  %2166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2026, align 8
  %2167 = icmp eq %"class.WTF::StringImpl"* %2166, null
  br i1 %2167, label %2181, label %2168

2168:                                             ; preds = %2165
  %2169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2166, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2170 = load atomic i32, i32* %2169 monotonic, align 4
  %2171 = and i32 %2170, 2
  %2172 = icmp eq i32 %2171, 0
  %2173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2166, i64 0, i32 0
  %2174 = load i32, i32* %2173, align 4
  br i1 %2172, label %2175, label %2177

2175:                                             ; preds = %2168
  %2176 = add i32 %2174, -1
  store i32 %2176, i32* %2173, align 4
  br label %2177

2177:                                             ; preds = %2175, %2168
  %2178 = phi i32 [ %2176, %2175 ], [ %2174, %2168 ]
  %2179 = icmp eq i32 %2178, 0
  br i1 %2179, label %2180, label %2181

2180:                                             ; preds = %2177
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2166) #9
  br label %2181

2181:                                             ; preds = %2165, %2177, %2180
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1979) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1978) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1977) #9
  br label %2318

2182:                                             ; preds = %1769
  %2183 = icmp eq i32 %2, 1
  br i1 %2183, label %2184, label %2251

2184:                                             ; preds = %2182
  %2185 = bitcast %"class.WTF::StringAppend.2134"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2185) #9
  %2186 = icmp eq %"class.WTF::StringImpl"* %222, null
  br i1 %2186, label %2231, label %2187

2187:                                             ; preds = %2184
  %2188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2189 = load atomic i32, i32* %2188 monotonic, align 4
  %2190 = and i32 %2189, 2
  %2191 = icmp eq i32 %2190, 0
  %2192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 0
  %2193 = load i32, i32* %2192, align 4
  br i1 %2191, label %2194, label %2204

2194:                                             ; preds = %2187
  %2195 = zext i32 %2193 to i33
  %2196 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2195, i33 1) #9
  %2197 = extractvalue { i33, i1 } %2196, 1
  %2198 = extractvalue { i33, i1 } %2196, 0
  %2199 = icmp slt i33 %2198, 0
  %2200 = or i1 %2197, %2199
  br i1 %2200, label %2201, label %2202, !prof !3

2201:                                             ; preds = %2194
  call void @llvm.trap() #9
  unreachable

2202:                                             ; preds = %2194
  %2203 = trunc i33 %2198 to i32
  store i32 %2203, i32* %2192, align 4
  br label %2204

2204:                                             ; preds = %2187, %2202
  %2205 = phi i32 [ %2203, %2202 ], [ %2193, %2187 ]
  %2206 = load atomic i32, i32* %2188 monotonic, align 4
  %2207 = and i32 %2206, 2
  %2208 = icmp eq i32 %2207, 0
  %2209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 0
  br i1 %2208, label %2210, label %2220

2210:                                             ; preds = %2204
  %2211 = zext i32 %2205 to i33
  %2212 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2211, i33 1) #9
  %2213 = extractvalue { i33, i1 } %2212, 1
  %2214 = extractvalue { i33, i1 } %2212, 0
  %2215 = icmp slt i33 %2214, 0
  %2216 = or i1 %2213, %2215
  br i1 %2216, label %2217, label %2218, !prof !3

2217:                                             ; preds = %2210
  call void @llvm.trap() #9
  unreachable

2218:                                             ; preds = %2210
  %2219 = trunc i33 %2214 to i32
  store i32 %2219, i32* %2209, align 4
  br label %2220

2220:                                             ; preds = %2218, %2204
  %2221 = phi i32 [ %2219, %2218 ], [ %2205, %2204 ]
  %2222 = load atomic i32, i32* %2188 monotonic, align 4
  %2223 = and i32 %2222, 2
  %2224 = icmp eq i32 %2223, 0
  br i1 %2224, label %2225, label %2227

2225:                                             ; preds = %2220
  %2226 = add i32 %2221, -1
  store i32 %2226, i32* %2209, align 4
  br label %2227

2227:                                             ; preds = %2225, %2220
  %2228 = phi i32 [ %2226, %2225 ], [ %2221, %2220 ]
  %2229 = icmp eq i32 %2228, 0
  br i1 %2229, label %2230, label %2231

2230:                                             ; preds = %2227
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %222) #9
  br label %2231

2231:                                             ; preds = %2184, %2227, %2230
  %2232 = getelementptr inbounds %"class.WTF::StringAppend.2134", %"class.WTF::StringAppend.2134"* %38, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %222, %"class.WTF::StringImpl"** %2232, align 8
  %2233 = getelementptr inbounds %"class.WTF::StringAppend.2134", %"class.WTF::StringAppend.2134"* %38, i64 0, i32 1
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.24, i64 0, i64 0), i8** %2233, align 8
  %2234 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.2134"* nonnull %38)
  %2235 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2232, align 8
  %2236 = icmp eq %"class.WTF::StringImpl"* %2235, null
  br i1 %2236, label %2250, label %2237

2237:                                             ; preds = %2231
  %2238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2235, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2239 = load atomic i32, i32* %2238 monotonic, align 4
  %2240 = and i32 %2239, 2
  %2241 = icmp eq i32 %2240, 0
  %2242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2235, i64 0, i32 0
  %2243 = load i32, i32* %2242, align 4
  br i1 %2241, label %2244, label %2246

2244:                                             ; preds = %2237
  %2245 = add i32 %2243, -1
  store i32 %2245, i32* %2242, align 4
  br label %2246

2246:                                             ; preds = %2244, %2237
  %2247 = phi i32 [ %2245, %2244 ], [ %2243, %2237 ]
  %2248 = icmp eq i32 %2247, 0
  br i1 %2248, label %2249, label %2250

2249:                                             ; preds = %2246
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2235) #9
  br label %2250

2250:                                             ; preds = %2231, %2246, %2249
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2185) #9
  br label %2318

2251:                                             ; preds = %2182
  %2252 = bitcast %"class.WTF::StringAppend.2134"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2252) #9
  %2253 = icmp eq %"class.WTF::StringImpl"* %222, null
  br i1 %2253, label %2298, label %2254

2254:                                             ; preds = %2251
  %2255 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2256 = load atomic i32, i32* %2255 monotonic, align 4
  %2257 = and i32 %2256, 2
  %2258 = icmp eq i32 %2257, 0
  %2259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 0
  %2260 = load i32, i32* %2259, align 4
  br i1 %2258, label %2261, label %2271

2261:                                             ; preds = %2254
  %2262 = zext i32 %2260 to i33
  %2263 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2262, i33 1) #9
  %2264 = extractvalue { i33, i1 } %2263, 1
  %2265 = extractvalue { i33, i1 } %2263, 0
  %2266 = icmp slt i33 %2265, 0
  %2267 = or i1 %2264, %2266
  br i1 %2267, label %2268, label %2269, !prof !3

2268:                                             ; preds = %2261
  call void @llvm.trap() #9
  unreachable

2269:                                             ; preds = %2261
  %2270 = trunc i33 %2265 to i32
  store i32 %2270, i32* %2259, align 4
  br label %2271

2271:                                             ; preds = %2254, %2269
  %2272 = phi i32 [ %2270, %2269 ], [ %2260, %2254 ]
  %2273 = load atomic i32, i32* %2255 monotonic, align 4
  %2274 = and i32 %2273, 2
  %2275 = icmp eq i32 %2274, 0
  %2276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 0
  br i1 %2275, label %2277, label %2287

2277:                                             ; preds = %2271
  %2278 = zext i32 %2272 to i33
  %2279 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2278, i33 1) #9
  %2280 = extractvalue { i33, i1 } %2279, 1
  %2281 = extractvalue { i33, i1 } %2279, 0
  %2282 = icmp slt i33 %2281, 0
  %2283 = or i1 %2280, %2282
  br i1 %2283, label %2284, label %2285, !prof !3

2284:                                             ; preds = %2277
  call void @llvm.trap() #9
  unreachable

2285:                                             ; preds = %2277
  %2286 = trunc i33 %2281 to i32
  store i32 %2286, i32* %2276, align 4
  br label %2287

2287:                                             ; preds = %2285, %2271
  %2288 = phi i32 [ %2286, %2285 ], [ %2272, %2271 ]
  %2289 = load atomic i32, i32* %2255 monotonic, align 4
  %2290 = and i32 %2289, 2
  %2291 = icmp eq i32 %2290, 0
  br i1 %2291, label %2292, label %2294

2292:                                             ; preds = %2287
  %2293 = add i32 %2288, -1
  store i32 %2293, i32* %2276, align 4
  br label %2294

2294:                                             ; preds = %2292, %2287
  %2295 = phi i32 [ %2293, %2292 ], [ %2288, %2287 ]
  %2296 = icmp eq i32 %2295, 0
  br i1 %2296, label %2297, label %2298

2297:                                             ; preds = %2294
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %222) #9
  br label %2298

2298:                                             ; preds = %2251, %2294, %2297
  %2299 = getelementptr inbounds %"class.WTF::StringAppend.2134", %"class.WTF::StringAppend.2134"* %39, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %222, %"class.WTF::StringImpl"** %2299, align 8
  %2300 = getelementptr inbounds %"class.WTF::StringAppend.2134", %"class.WTF::StringAppend.2134"* %39, i64 0, i32 1
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.25, i64 0, i64 0), i8** %2300, align 8
  %2301 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.2134"* nonnull %39)
  %2302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2299, align 8
  %2303 = icmp eq %"class.WTF::StringImpl"* %2302, null
  br i1 %2303, label %2317, label %2304

2304:                                             ; preds = %2298
  %2305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2306 = load atomic i32, i32* %2305 monotonic, align 4
  %2307 = and i32 %2306, 2
  %2308 = icmp eq i32 %2307, 0
  %2309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2302, i64 0, i32 0
  %2310 = load i32, i32* %2309, align 4
  br i1 %2308, label %2311, label %2313

2311:                                             ; preds = %2304
  %2312 = add i32 %2310, -1
  store i32 %2312, i32* %2309, align 4
  br label %2313

2313:                                             ; preds = %2311, %2304
  %2314 = phi i32 [ %2312, %2311 ], [ %2310, %2304 ]
  %2315 = icmp eq i32 %2314, 0
  br i1 %2315, label %2316, label %2317

2316:                                             ; preds = %2313
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2302) #9
  br label %2317

2317:                                             ; preds = %2298, %2313, %2316
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2252) #9
  br label %2318

2318:                                             ; preds = %2317, %2250, %2181, %1975, %1768, %1429, %1063, %936, %801
  %2319 = phi %"class.WTF::StringImpl"* [ %523, %801 ], [ %523, %936 ], [ %523, %1063 ], [ %222, %1429 ], [ %222, %1768 ], [ %222, %1975 ], [ %222, %2181 ], [ %222, %2250 ], [ %222, %2317 ]
  %2320 = phi %"class.WTF::StringImpl"* [ %770, %801 ], [ %905, %936 ], [ %1032, %1063 ], [ %1245, %1429 ], [ %1584, %1768 ], [ %1893, %1975 ], [ %2099, %2181 ], [ %2234, %2250 ], [ %2301, %2317 ]
  %2321 = ptrtoint %"class.WTF::StringImpl"* %2320 to i64
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %334) #9
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %332) #9
  %2322 = icmp eq %"class.WTF::StringImpl"* %2319, null
  br i1 %2322, label %2336, label %2323

2323:                                             ; preds = %2318
  %2324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2319, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2325 = load atomic i32, i32* %2324 monotonic, align 4
  %2326 = and i32 %2325, 2
  %2327 = icmp eq i32 %2326, 0
  %2328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2319, i64 0, i32 0
  %2329 = load i32, i32* %2328, align 4
  br i1 %2327, label %2330, label %2332

2330:                                             ; preds = %2323
  %2331 = add i32 %2329, -1
  store i32 %2331, i32* %2328, align 4
  br label %2332

2332:                                             ; preds = %2330, %2323
  %2333 = phi i32 [ %2331, %2330 ], [ %2329, %2323 ]
  %2334 = icmp eq i32 %2333, 0
  br i1 %2334, label %2335, label %2336

2335:                                             ; preds = %2332
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2319) #9
  br label %2336

2336:                                             ; preds = %2335, %2332, %2318, %45, %3, %41
  %2337 = phi i64 [ 0, %41 ], [ 0, %3 ], [ 0, %45 ], [ %2321, %2318 ], [ %2321, %2332 ], [ %2321, %2335 ]
  %2338 = inttoptr i64 %2337 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %2338
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.2129"* noalias sret, %"class.WTF::StringAppend"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend", align 8
  %5 = bitcast %"class.WTF::StringAppend"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #9
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  tail call void @llvm.trap() #9
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #9
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %41
  tail call void @llvm.trap() #9
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %54

53:                                               ; preds = %29
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.2129"* %0, %"class.WTF::StringAppend"* nonnull byval(%"class.WTF::StringAppend") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %66

54:                                               ; preds = %36, %51
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.2129"* %0, %"class.WTF::StringAppend"* nonnull byval(%"class.WTF::StringAppend") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %54
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i32 [ %61, %60 ], [ %59, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #9
  br label %66

66:                                               ; preds = %53, %62, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.2128"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %5 = alloca i8*, align 8
  %6 = alloca i16*, align 8
  %7 = bitcast %"class.WTF::StringTypeAdapter.2334"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2128", %"class.WTF::StringAppend.2128"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false) #9
  %9 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %4, i8* %9) #9
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2128", %"class.WTF::StringAppend.2128"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = bitcast %"class.WTF::StringTypeAdapter.2334"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2128", %"class.WTF::StringAppend.2128"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #9
  %15 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %3, i8* %15) #9
  %16 = bitcast %"class.WTF::StringTypeAdapter.2334"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.WTF::StringAppend.2128", %"class.WTF::StringAppend.2128"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #9
  %18 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %2, i8* %18) #9
  %19 = getelementptr inbounds %"class.WTF::StringAppend.2128", %"class.WTF::StringAppend.2128"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %23 = select i1 %21, %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"* %20
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #9
  br i1 %27, label %28, label %29

28:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  br label %72

29:                                               ; preds = %1
  %30 = icmp eq %"class.WTF::StringImpl"* %11, null
  %31 = select i1 %30, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %11
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  br i1 %35, label %72, label %36

36:                                               ; preds = %29
  %37 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %38 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.2128"* %0)
  %39 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %38, i8** nonnull dereferenceable(8) %5) #9
  %40 = load i8*, i8** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.2128"* %0, i8* %40)
  %41 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %41, label %108, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %59

49:                                               ; preds = %42
  %50 = zext i32 %48 to i33
  %51 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #9
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !3

56:                                               ; preds = %49
  call void @llvm.trap() #9
  unreachable

57:                                               ; preds = %49
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %47, align 4
  br label %59

59:                                               ; preds = %42, %57
  %60 = phi i32 [ %58, %57 ], [ %48, %42 ]
  %61 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %62 = load atomic i32, i32* %43 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %67 = add i32 %60, -1
  store i32 %67, i32* %66, align 4
  br label %68

68:                                               ; preds = %65, %59
  %69 = phi i32 [ %67, %65 ], [ %60, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %108

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #9
  br label %108

72:                                               ; preds = %29, %28
  %73 = bitcast i16** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #9
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %6, align 8
  %74 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.2128"* %0)
  %75 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %74, i16** nonnull dereferenceable(8) %6) #9
  %76 = load i16*, i16** %6, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.2128"* %0, i16* %76)
  %77 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %77, label %108, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %95

85:                                               ; preds = %78
  %86 = zext i32 %84 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #9
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !3

92:                                               ; preds = %85
  call void @llvm.trap() #9
  unreachable

93:                                               ; preds = %85
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %83, align 4
  br label %95

95:                                               ; preds = %78, %93
  %96 = phi i32 [ %94, %93 ], [ %84, %78 ]
  %97 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %98 = load atomic i32, i32* %79 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %103 = add i32 %96, -1
  store i32 %103, i32* %102, align 4
  br label %104

104:                                              ; preds = %101, %95
  %105 = phi i32 [ %103, %101 ], [ %96, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #9
  br label %108

108:                                              ; preds = %107, %104, %72, %71, %68, %36
  %109 = phi i8* [ %37, %36 ], [ %37, %68 ], [ %37, %71 ], [ %73, %72 ], [ %73, %104 ], [ %73, %107 ]
  %110 = phi i64 [ 0, %36 ], [ %61, %68 ], [ %61, %71 ], [ 0, %72 ], [ %97, %104 ], [ %97, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #9
  %111 = inttoptr i64 %110 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %111
}

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #4

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() local_unnamed_addr #4

declare void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #4

declare zeroext i1 @_ZNK5blink15SecurityContext11IsSandboxedEN7network5mojom15WebSandboxFlagsE(%"class.blink::SecurityContext"*, i32) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink16ExecutionContext11IsSandboxedEN7network5mojom15WebSandboxFlagsE(%"class.blink::ExecutionContext"*, i32) local_unnamed_addr #4

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin6CreateERKNS_4KURLE(%"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS_6StringEPKcEES2_EES4_EES2_S4_EENS1_INS1_IT_T0_EET1_EERKSA_SB_(%"class.WTF::StringAppend.2130"* noalias sret, %"class.WTF::StringAppend.2131"* dereferenceable(40), i8*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.2131", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #9
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !3

23:                                               ; preds = %14
  tail call void @llvm.trap() #9
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %24, %9, %3
  %27 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast i8** %27 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %53

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #9
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %41
  tail call void @llvm.trap() #9
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %53

53:                                               ; preds = %51, %36, %26
  %54 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %4, i64 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %1, i64 0, i32 0, i32 1
  %56 = bitcast i8** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast i8** %54 to i64*
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %1, i64 0, i32 1, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %4, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"** %61, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %80, label %63

63:                                               ; preds = %53
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %80

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i33
  %72 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #9
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !3

77:                                               ; preds = %68
  tail call void @llvm.trap() #9
  unreachable

78:                                               ; preds = %68
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %69, align 4
  br label %80

80:                                               ; preds = %53, %63, %78
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EES3_EC2ES7_S3_(%"class.WTF::StringAppend.2130"* %0, %"class.WTF::StringAppend.2131"* nonnull byval(%"class.WTF::StringAppend.2131") align 8 %4, i8* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendINS1_INS_6StringEPKcEES2_EES4_S2_EENS1_INS1_IT_T0_EET1_EERKS9_SA_(%"class.WTF::StringAppend.2131"* noalias sret, %"class.WTF::StringAppend.2132"* dereferenceable(32), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.2132", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #9
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !3

23:                                               ; preds = %14
  tail call void @llvm.trap() #9
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %24, %9, %3
  %27 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %1, i64 0, i32 0, i32 0, i32 1
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast i8** %27 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %53

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #9
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %41
  tail call void @llvm.trap() #9
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %53

53:                                               ; preds = %26, %36, %51
  %54 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %4, i64 0, i32 1
  %55 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %1, i64 0, i32 1
  %56 = bitcast i8** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast i8** %54 to i64*
  store i64 %57, i64* %58, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %59, label %77, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %78

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i33
  %69 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %68, i33 1) #9
  %70 = extractvalue { i33, i1 } %69, 1
  %71 = extractvalue { i33, i1 } %69, 0
  %72 = icmp slt i33 %71, 0
  %73 = or i1 %70, %72
  br i1 %73, label %74, label %75, !prof !3

74:                                               ; preds = %65
  tail call void @llvm.trap() #9
  unreachable

75:                                               ; preds = %65
  %76 = trunc i33 %71 to i32
  store i32 %76, i32* %66, align 4
  br label %78

77:                                               ; preds = %53
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EC2ES6_S1_(%"class.WTF::StringAppend.2131"* %0, %"class.WTF::StringAppend.2132"* nonnull byval(%"class.WTF::StringAppend.2132") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %90

78:                                               ; preds = %60, %75
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EC2ES6_S1_(%"class.WTF::StringAppend.2131"* %0, %"class.WTF::StringAppend.2132"* nonnull byval(%"class.WTF::StringAppend.2132") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %79 = load atomic i32, i32* %61 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %78
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %78
  %87 = phi i32 [ %85, %84 ], [ %83, %78 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #9
  br label %90

90:                                               ; preds = %77, %86, %89
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.2133"* noalias sret, %"class.WTF::StringAppend.2134"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.2134", %"class.WTF::StringAppend.2134"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #9
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #9
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend.2134", %"class.WTF::StringAppend.2134"* %1, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %48

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #9
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !3

43:                                               ; preds = %34
  tail call void @llvm.trap() #9
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %48

46:                                               ; preds = %24
  %47 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.2133"* %0, %"class.WTF::StringImpl"* %5, i8* %47, %"class.WTF::StringImpl"* null)
  br label %61

48:                                               ; preds = %29, %44
  %49 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.2133"* %0, %"class.WTF::StringImpl"* %5, i8* %49, %"class.WTF::StringImpl"* nonnull %2)
  %50 = load atomic i32, i32* %30 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #9
  br label %61

61:                                               ; preds = %46, %57, %60
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL8ProtocolEv(%"class.blink::KURL"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EES3_EcvS1_Ev(%"class.WTF::StringAppend.2130"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2130", %"class.WTF::StringAppend.2130"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2334"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.WTF::StringAppend.2130", %"class.WTF::StringAppend.2130"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false) #9
  %12 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %6, i8* %12) #9
  %13 = getelementptr inbounds %"class.WTF::StringAppend.2130", %"class.WTF::StringAppend.2130"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = bitcast %"class.WTF::StringTypeAdapter.2334"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.WTF::StringAppend.2130", %"class.WTF::StringAppend.2130"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #9
  %18 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %3, i8* %18) #9
  %19 = getelementptr inbounds %"class.WTF::StringAppend.2130", %"class.WTF::StringAppend.2130"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %22 = getelementptr inbounds %"class.WTF::StringAppend.2130", %"class.WTF::StringAppend.2130"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  %25 = select i1 %24, %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"* %23
  %26 = bitcast %"class.WTF::StringTypeAdapter.2334"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #9
  %27 = getelementptr inbounds %"class.WTF::StringAppend.2130", %"class.WTF::StringAppend.2130"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false) #9
  %28 = load i8*, i8** %27, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %2, i8* %28) #9
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #9
  br i1 %32, label %33, label %34

33:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  br label %41

34:                                               ; preds = %1
  %35 = icmp eq %"class.WTF::StringImpl"* %20, null
  %36 = select i1 %35, %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"* %20
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  br i1 %40, label %41, label %42

41:                                               ; preds = %34, %33
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  br label %90

42:                                               ; preds = %34
  %43 = icmp eq %"class.WTF::StringImpl"* %14, null
  %44 = select i1 %43, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %14
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  br i1 %48, label %90, label %49

49:                                               ; preds = %42
  %50 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %51 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EES3_E6lengthEv(%"class.WTF::StringAppend.2130"* %0)
  %52 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %51, i8** nonnull dereferenceable(8) %7) #9
  %53 = load i8*, i8** %7, align 8
  %54 = bitcast %"class.WTF::StringTypeAdapter.2334"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 16, i1 false) #9
  %55 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %5, i8* %55) #9
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_E7WriteToEPh(%"class.WTF::StringAppend.2131"* %9, i8* %53) #9
  %56 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_E6lengthEv(%"class.WTF::StringAppend.2131"* %9) #9
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %53, i64 %57
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2334"* nonnull %5, i8* %58) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #9
  %59 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %59, label %131, label %60

60:                                               ; preds = %49
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %77

67:                                               ; preds = %60
  %68 = zext i32 %66 to i33
  %69 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %68, i33 1) #9
  %70 = extractvalue { i33, i1 } %69, 1
  %71 = extractvalue { i33, i1 } %69, 0
  %72 = icmp slt i33 %71, 0
  %73 = or i1 %70, %72
  br i1 %73, label %74, label %75, !prof !3

74:                                               ; preds = %67
  call void @llvm.trap() #9
  unreachable

75:                                               ; preds = %67
  %76 = trunc i33 %71 to i32
  store i32 %76, i32* %65, align 4
  br label %77

77:                                               ; preds = %60, %75
  %78 = phi i32 [ %76, %75 ], [ %66, %60 ]
  %79 = ptrtoint %"class.WTF::StringImpl"* %52 to i64
  %80 = load atomic i32, i32* %61 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %85 = add i32 %78, -1
  store i32 %85, i32* %84, align 4
  br label %86

86:                                               ; preds = %83, %77
  %87 = phi i32 [ %85, %83 ], [ %78, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %131

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #9
  br label %131

90:                                               ; preds = %42, %41
  %91 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #9
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %92 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EES3_E6lengthEv(%"class.WTF::StringAppend.2130"* %0)
  %93 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %92, i16** nonnull dereferenceable(8) %8) #9
  %94 = load i16*, i16** %8, align 8
  %95 = bitcast %"class.WTF::StringTypeAdapter.2334"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %95) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 -86, i64 16, i1 false) #9
  %96 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %4, i8* %96) #9
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_E7WriteToEPDs(%"class.WTF::StringAppend.2131"* %9, i16* %94) #9
  %97 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_E6lengthEv(%"class.WTF::StringAppend.2131"* %9) #9
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds i16, i16* %94, i64 %98
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2334"* nonnull %4, i16* %99) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %95) #9
  %100 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %100, label %131, label %101

101:                                              ; preds = %90
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  br i1 %105, label %108, label %118

108:                                              ; preds = %101
  %109 = zext i32 %107 to i33
  %110 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %109, i33 1) #9
  %111 = extractvalue { i33, i1 } %110, 1
  %112 = extractvalue { i33, i1 } %110, 0
  %113 = icmp slt i33 %112, 0
  %114 = or i1 %111, %113
  br i1 %114, label %115, label %116, !prof !3

115:                                              ; preds = %108
  call void @llvm.trap() #9
  unreachable

116:                                              ; preds = %108
  %117 = trunc i33 %112 to i32
  store i32 %117, i32* %106, align 4
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i32 [ %117, %116 ], [ %107, %101 ]
  %120 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %121 = load atomic i32, i32* %102 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %126 = add i32 %119, -1
  store i32 %126, i32* %125, align 4
  br label %127

127:                                              ; preds = %124, %118
  %128 = phi i32 [ %126, %124 ], [ %119, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #9
  br label %131

131:                                              ; preds = %130, %127, %90, %89, %86, %49
  %132 = phi i8* [ %50, %49 ], [ %50, %86 ], [ %50, %89 ], [ %91, %90 ], [ %91, %127 ], [ %91, %130 ]
  %133 = phi i64 [ 0, %49 ], [ %79, %86 ], [ %79, %89 ], [ 0, %90 ], [ %120, %127 ], [ %120, %130 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #9
  %134 = inttoptr i64 %133 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %134
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EcvS1_Ev(%"class.WTF::StringAppend.2132"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = bitcast %"class.WTF::StringTypeAdapter.2334"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false) #9
  %10 = load i8*, i8** %9, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %5, i8* %10) #9
  %11 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  %17 = select i1 %16, %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"* %15
  %18 = bitcast %"class.WTF::StringTypeAdapter.2334"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false) #9
  %20 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %4, i8* %20) #9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #9
  br i1 %24, label %25, label %26

25:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  br label %75

26:                                               ; preds = %1
  %27 = icmp eq %"class.WTF::StringImpl"* %12, null
  %28 = select i1 %27, %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"* %12
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  br i1 %32, label %75, label %33

33:                                               ; preds = %26
  %34 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %35 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.2132"* %0)
  %36 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %35, i8** nonnull dereferenceable(8) %6) #9
  %37 = load i8*, i8** %6, align 8
  %38 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %0, i64 0, i32 0
  %39 = bitcast %"class.WTF::StringTypeAdapter.2334"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 16, i1 false) #9
  %40 = load i8*, i8** %9, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %3, i8* %40) #9
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend.2133"* %38, i8* %37) #9
  %41 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.2133"* %38) #9
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %37, i64 %42
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2334"* nonnull %3, i8* %43) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #9
  %44 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %44, label %117, label %45

45:                                               ; preds = %33
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %62

52:                                               ; preds = %45
  %53 = zext i32 %51 to i33
  %54 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %53, i33 1) #9
  %55 = extractvalue { i33, i1 } %54, 1
  %56 = extractvalue { i33, i1 } %54, 0
  %57 = icmp slt i33 %56, 0
  %58 = or i1 %55, %57
  br i1 %58, label %59, label %60, !prof !3

59:                                               ; preds = %52
  call void @llvm.trap() #9
  unreachable

60:                                               ; preds = %52
  %61 = trunc i33 %56 to i32
  store i32 %61, i32* %50, align 4
  br label %62

62:                                               ; preds = %45, %60
  %63 = phi i32 [ %61, %60 ], [ %51, %45 ]
  %64 = ptrtoint %"class.WTF::StringImpl"* %36 to i64
  %65 = load atomic i32, i32* %46 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %70 = add i32 %63, -1
  store i32 %70, i32* %69, align 4
  br label %71

71:                                               ; preds = %68, %62
  %72 = phi i32 [ %70, %68 ], [ %63, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %117

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #9
  br label %117

75:                                               ; preds = %26, %25
  %76 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #9
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %77 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.2132"* %0)
  %78 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %77, i16** nonnull dereferenceable(8) %7) #9
  %79 = load i16*, i16** %7, align 8
  %80 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %0, i64 0, i32 0
  %81 = bitcast %"class.WTF::StringTypeAdapter.2334"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 16, i1 false) #9
  %82 = load i8*, i8** %9, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %2, i8* %82) #9
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend.2133"* %80, i16* %79) #9
  %83 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.2133"* %80) #9
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds i16, i16* %79, i64 %84
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2334"* nonnull %2, i16* %85) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #9
  %86 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %86, label %117, label %87

87:                                               ; preds = %75
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %104

94:                                               ; preds = %87
  %95 = zext i32 %93 to i33
  %96 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %95, i33 1) #9
  %97 = extractvalue { i33, i1 } %96, 1
  %98 = extractvalue { i33, i1 } %96, 0
  %99 = icmp slt i33 %98, 0
  %100 = or i1 %97, %99
  br i1 %100, label %101, label %102, !prof !3

101:                                              ; preds = %94
  call void @llvm.trap() #9
  unreachable

102:                                              ; preds = %94
  %103 = trunc i33 %98 to i32
  store i32 %103, i32* %92, align 4
  br label %104

104:                                              ; preds = %87, %102
  %105 = phi i32 [ %103, %102 ], [ %93, %87 ]
  %106 = ptrtoint %"class.WTF::StringImpl"* %78 to i64
  %107 = load atomic i32, i32* %88 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %112 = add i32 %105, -1
  store i32 %112, i32* %111, align 4
  br label %113

113:                                              ; preds = %110, %104
  %114 = phi i32 [ %112, %110 ], [ %105, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #9
  br label %117

117:                                              ; preds = %116, %113, %75, %74, %71, %33
  %118 = phi i8* [ %34, %33 ], [ %34, %71 ], [ %34, %74 ], [ %76, %75 ], [ %76, %113 ], [ %76, %116 ]
  %119 = phi i64 [ 0, %33 ], [ %64, %71 ], [ %64, %74 ], [ 0, %75 ], [ %106, %113 ], [ %106, %116 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #9
  %120 = inttoptr i64 %119 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %120
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.2134"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2335", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2335", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2134", %"class.WTF::StringAppend.2134"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = select i1 %11, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %10
  %14 = bitcast %"class.WTF::StringTypeAdapter.2334"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.WTF::StringAppend.2134", %"class.WTF::StringAppend.2134"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #9
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %6, i8* %16) #9
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9
  br i1 %20, label %81, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2134"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #9
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter.2335"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #9
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false) #9
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %21
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %39

33:                                               ; preds = %21
  %34 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %38 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  br label %39

39:                                               ; preds = %31, %33
  %40 = phi i8* [ null, %31 ], [ %38, %33 ]
  %41 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %42 = phi i32 [ 0, %31 ], [ %36, %33 ]
  %43 = bitcast %"class.WTF::StringTypeAdapter.2335"* %4 to i64*
  store i64 %41, i64* %43, align 8
  store i8* %40, i8** %27, align 8
  store i32 %42, i32* %28, align 8
  %44 = bitcast %"class.WTF::StringTypeAdapter.2334"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false) #9
  %45 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %5, i8* %45) #9
  %46 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2336"* nonnull %46, i8* %25) #9
  %47 = load i32, i32* %28, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %25, i64 %48
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2334"* nonnull %5, i8* %49) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #9
  %50 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %50, label %141, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #9
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !3

65:                                               ; preds = %58
  call void @llvm.trap() #9
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %51, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %71 = load atomic i32, i32* %52 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %76 = add i32 %69, -1
  store i32 %76, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi i32 [ %76, %74 ], [ %69, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %141

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #9
  br label %141

81:                                               ; preds = %1
  %82 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #9
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %83 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2134"* %0)
  %84 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %83, i16** nonnull dereferenceable(8) %8) #9
  %85 = load i16*, i16** %8, align 8
  %86 = bitcast %"class.WTF::StringTypeAdapter.2335"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #9
  %87 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %2, i64 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false) #9
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %99

93:                                               ; preds = %81
  %94 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %98 = bitcast %"class.WTF::StringImpl"* %97 to i8*
  br label %99

99:                                               ; preds = %91, %93
  %100 = phi i8* [ null, %91 ], [ %98, %93 ]
  %101 = phi i64 [ %92, %91 ], [ %94, %93 ]
  %102 = phi i32 [ 0, %91 ], [ %96, %93 ]
  %103 = bitcast %"class.WTF::StringTypeAdapter.2335"* %2 to i64*
  store i64 %101, i64* %103, align 8
  store i8* %100, i8** %87, align 8
  store i32 %102, i32* %88, align 8
  %104 = bitcast %"class.WTF::StringTypeAdapter.2334"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 16, i1 false) #9
  %105 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %3, i8* %105) #9
  %106 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2336"* nonnull %106, i16* %85) #9
  %107 = load i32, i32* %88, align 8
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i16, i16* %85, i64 %108
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2334"* nonnull %3, i16* %109) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #9
  %110 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %110, label %141, label %111

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %128

118:                                              ; preds = %111
  %119 = zext i32 %117 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #9
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !3

125:                                              ; preds = %118
  call void @llvm.trap() #9
  unreachable

126:                                              ; preds = %118
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %116, align 4
  br label %128

128:                                              ; preds = %111, %126
  %129 = phi i32 [ %127, %126 ], [ %117, %111 ]
  %130 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %131 = load atomic i32, i32* %112 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %136 = add i32 %129, -1
  store i32 %136, i32* %135, align 4
  br label %137

137:                                              ; preds = %134, %128
  %138 = phi i32 [ %136, %134 ], [ %129, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #9
  br label %141

141:                                              ; preds = %140, %137, %99, %80, %77, %39
  %142 = phi i8* [ %22, %39 ], [ %22, %77 ], [ %22, %80 ], [ %82, %99 ], [ %82, %137 ], [ %82, %140 ]
  %143 = phi i64 [ 0, %39 ], [ %70, %77 ], [ %70, %80 ], [ 0, %99 ], [ %130, %137 ], [ %130, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #9
  %144 = inttoptr i64 %143 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %144
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9DOMWindow5closeEPN2v87IsolateE(%"class.blink::DOMWindow"*, %"class.v8::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::LocalDOMWindow"* @_ZN5blink18IncumbentDOMWindowEPN2v87IsolateE(%"class.v8::Isolate"* %1) #9
  tail call void @_ZN5blink9DOMWindow5CloseEPNS_14LocalDOMWindowE(%"class.blink::DOMWindow"* %0, %"class.blink::LocalDOMWindow"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9DOMWindow5CloseEPNS_14LocalDOMWindowE(%"class.blink::DOMWindow"*, %"class.blink::LocalDOMWindow"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::Frame"*, %"class.blink::Frame"** %6, align 8
  %8 = icmp eq %"class.blink::Frame"* %7, null
  br i1 %8, label %85, label %9

9:                                                ; preds = %2
  %10 = tail call zeroext i1 @_ZNK5blink5Frame11IsMainFrameEv(%"class.blink::Frame"* nonnull %7) #9
  br i1 %10, label %11, label %85

11:                                               ; preds = %9
  %12 = load %"class.blink::Frame"*, %"class.blink::Frame"** %6, align 8
  %13 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %12) #9
  %14 = icmp eq %"class.blink::Page"* %13, null
  br i1 %14, label %85, label %15

15:                                               ; preds = %11
  %16 = tail call zeroext i1 @_ZNK5blink4Page12InsidePortalEv(%"class.blink::Page"* nonnull %13) #9
  br i1 %16, label %85, label %17

17:                                               ; preds = %15
  %18 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %1) #9
  %19 = icmp eq %"class.blink::Document"* %18, null
  br i1 %19, label %85, label %20

20:                                               ; preds = %17
  %21 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %18) #9
  %22 = icmp eq %"class.blink::LocalFrame"* %21, null
  br i1 %22, label %85, label %23

23:                                               ; preds = %20
  %24 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %18) #9
  %25 = load %"class.blink::Frame"*, %"class.blink::Frame"** %6, align 8
  %26 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %26) #9
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %3) #9
  %27 = call zeroext i1 @_ZN5blink10LocalFrame11CanNavigateERKNS_5FrameERKNS_4KURLE(%"class.blink::LocalFrame"* %24, %"class.blink::Frame"* dereferenceable(392) %25, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #9
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %26) #9
  br i1 %27, label %28, label %85

28:                                               ; preds = %23
  %29 = load %"class.blink::Frame"*, %"class.blink::Frame"** %6, align 8
  %30 = call %"class.blink::Settings"* @_ZNK5blink5Frame11GetSettingsEv(%"class.blink::Frame"* %29) #9
  %31 = icmp eq %"class.blink::Settings"* %30, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %30, i64 0, i32 71
  %34 = bitcast [14 x i8]* %33 to i112*
  %35 = load i112, i112* %34, align 8
  %36 = and i112 %35, 8192
  %37 = icmp ne i112 %36, 0
  br label %38

38:                                               ; preds = %28, %32
  %39 = phi i1 [ false, %28 ], [ %37, %32 ]
  %40 = call zeroext i1 @_ZNK5blink4Page11OpenedByDOMEv(%"class.blink::Page"* nonnull %13) #9
  br i1 %40, label %59, label %41

41:                                               ; preds = %38
  %42 = load %"class.blink::Frame"*, %"class.blink::Frame"** %6, align 8
  %43 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %42, i64 0, i32 9, i32 0, i32 0
  %44 = load %"class.blink::FrameClient"*, %"class.blink::FrameClient"** %43, align 8
  %45 = bitcast %"class.blink::FrameClient"* %44 to i32 (%"class.blink::FrameClient"*)***
  %46 = load i32 (%"class.blink::FrameClient"*)**, i32 (%"class.blink::FrameClient"*)*** %45, align 8
  %47 = getelementptr inbounds i32 (%"class.blink::FrameClient"*)*, i32 (%"class.blink::FrameClient"*)** %46, i64 2
  %48 = load i32 (%"class.blink::FrameClient"*)*, i32 (%"class.blink::FrameClient"*)** %47, align 8
  %49 = call i32 %48(%"class.blink::FrameClient"* %44) #9
  %50 = icmp ult i32 %49, 2
  %51 = or i1 %39, %50
  br i1 %51, label %59, label %52

52:                                               ; preds = %41
  %53 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %18, i64 0, i32 12, i32 0, i32 0
  %54 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %53, align 8
  %55 = call %"class.blink::FrameConsole"* @_ZNK5blink14LocalDOMWindow15GetFrameConsoleEv(%"class.blink::LocalDOMWindow"* %54) #9
  %56 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56) #9
  store i32 1, i32* %4, align 4
  %57 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #9
  store i32 2, i32* %5, align 4
  %58 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA61_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %5, [61 x i8]* nonnull dereferenceable(61) @.str.26) #9
  call void @_ZN5blink12FrameConsole10AddMessageEPNS_14ConsoleMessageEb(%"class.blink::FrameConsole"* %55, %"class.blink::ConsoleMessage"* %58, i1 zeroext false) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #9
  br label %85

59:                                               ; preds = %41, %38
  %60 = load %"class.blink::Frame"*, %"class.blink::Frame"** %6, align 8
  %61 = bitcast %"class.blink::Frame"* %60 to i1 (%"class.blink::Frame"*)***
  %62 = load i1 (%"class.blink::Frame"*)**, i1 (%"class.blink::Frame"*)*** %61, align 8
  %63 = getelementptr inbounds i1 (%"class.blink::Frame"*)*, i1 (%"class.blink::Frame"*)** %62, i64 6
  %64 = load i1 (%"class.blink::Frame"*)*, i1 (%"class.blink::Frame"*)** %63, align 8
  %65 = call zeroext i1 %64(%"class.blink::Frame"* %60) #9
  br i1 %65, label %66, label %85

66:                                               ; preds = %59
  %67 = icmp eq %"class.blink::DOMWindow"* %0, null
  br i1 %67, label %77, label %68

68:                                               ; preds = %66
  %69 = bitcast %"class.blink::DOMWindow"* %0 to i1 (%"class.blink::DOMWindow"*)***
  %70 = load i1 (%"class.blink::DOMWindow"*)**, i1 (%"class.blink::DOMWindow"*)*** %69, align 8
  %71 = getelementptr inbounds i1 (%"class.blink::DOMWindow"*)*, i1 (%"class.blink::DOMWindow"*)** %70, i64 27
  %72 = load i1 (%"class.blink::DOMWindow"*)*, i1 (%"class.blink::DOMWindow"*)** %71, align 8
  %73 = call zeroext i1 %72(%"class.blink::DOMWindow"* nonnull %0) #9
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = bitcast %"class.blink::DOMWindow"* %0 to %"class.blink::LocalDOMWindow"*
  %76 = call %"class.blink::ExecutionContext"* @_ZNK5blink14LocalDOMWindow19GetExecutionContextEv(%"class.blink::LocalDOMWindow"* nonnull %75) #9
  br label %77

77:                                               ; preds = %68, %66, %74
  %78 = phi %"class.blink::ExecutionContext"* [ %76, %74 ], [ null, %68 ], [ null, %66 ]
  %79 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %80 = trunc i32 %79 to i8
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %77
  call void @_ZN5blink5probe21BreakableLocationImplEPNS_16ExecutionContextEPKc(%"class.blink::ExecutionContext"* %78, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.27, i64 0, i64 0)) #9
  br label %83

83:                                               ; preds = %77, %82
  call void @_ZN5blink4Page9CloseSoonEv(%"class.blink::Page"* nonnull %13) #9
  %84 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 5
  store i8 1, i8* %84, align 8
  br label %85

85:                                               ; preds = %23, %20, %17, %11, %15, %52, %83, %59, %2, %9
  ret void
}

declare zeroext i1 @_ZNK5blink5Frame11IsMainFrameEv(%"class.blink::Frame"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink4Page12InsidePortalEv(%"class.blink::Page"*) local_unnamed_addr #4

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #4

declare zeroext i1 @_ZN5blink10LocalFrame11CanNavigateERKNS_5FrameERKNS_4KURLE(%"class.blink::LocalFrame"*, %"class.blink::Frame"* dereferenceable(392), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #4

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #4

declare %"class.blink::Settings"* @_ZNK5blink5Frame11GetSettingsEv(%"class.blink::Frame"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink4Page11OpenedByDOMEv(%"class.blink::Page"*) local_unnamed_addr #4

declare %"class.blink::FrameConsole"* @_ZNK5blink14LocalDOMWindow15GetFrameConsoleEv(%"class.blink::LocalDOMWindow"*) local_unnamed_addr #4

declare void @_ZN5blink12FrameConsole10AddMessageEPNS_14ConsoleMessageEb(%"class.blink::FrameConsole"*, %"class.blink::ConsoleMessage"*, i1 zeroext) local_unnamed_addr #4

declare %"class.blink::ExecutionContext"* @_ZNK5blink14LocalDOMWindow19GetExecutionContextEv(%"class.blink::LocalDOMWindow"*) unnamed_addr #4

declare void @_ZN5blink4Page9CloseSoonEv(%"class.blink::Page"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9DOMWindow5focusEPN2v87IsolateE(%"class.blink::DOMWindow"* readonly, %"class.v8::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::Frame"*, %"class.blink::Frame"** %3, align 8
  %5 = icmp eq %"class.blink::Frame"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* nonnull %4) #9
  %8 = icmp eq %"class.blink::Page"* %7, null
  br i1 %8, label %63, label %9

9:                                                ; preds = %6
  %10 = tail call %"class.blink::LocalDOMWindow"* @_ZN5blink18IncumbentDOMWindowEPN2v87IsolateE(%"class.v8::Isolate"* %1) #9
  %11 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %10, i64 0, i32 1
  %12 = bitcast %"class.blink::ExecutionContext.base"* %11 to %"class.blink::ExecutionContext"*
  %13 = tail call zeroext i1 @_ZNK5blink16ExecutionContext26IsWindowInteractionAllowedEv(%"class.blink::ExecutionContext"* %12) #9
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZN5blink16ExecutionContext24ConsumeWindowInteractionEv(%"class.blink::ExecutionContext"* %12) #9
  br label %37

15:                                               ; preds = %9
  %16 = load %"class.blink::Frame"*, %"class.blink::Frame"** %3, align 8
  %17 = icmp eq %"class.blink::Frame"* %16, null
  br i1 %17, label %35, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %16, i64 0, i32 9, i32 0, i32 0
  %20 = load %"class.blink::FrameClient"*, %"class.blink::FrameClient"** %19, align 8
  %21 = icmp eq %"class.blink::FrameClient"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %16, i64 0, i32 12, i32 0, i32 0
  %24 = load %"class.blink::Frame"*, %"class.blink::Frame"** %23, align 8
  %25 = icmp eq %"class.blink::Frame"* %24, null
  br i1 %25, label %35, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %24, i64 0, i32 4, i32 0, i32 0
  %28 = load %"class.blink::DOMWindow"*, %"class.blink::DOMWindow"** %27, align 8
  %29 = icmp eq %"class.blink::DOMWindow"* %28, null
  %30 = icmp eq %"class.blink::DOMWindow"* %28, %0
  %31 = or i1 %29, %30
  br i1 %31, label %35, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %10, i64 0, i32 0
  %34 = icmp ne %"class.blink::DOMWindow"* %33, %28
  br label %37

35:                                               ; preds = %26, %18, %15, %22
  %36 = tail call zeroext i1 @_ZNK5blink5Frame11IsMainFrameEv(%"class.blink::Frame"* nonnull %4) #9
  br label %46

37:                                               ; preds = %32, %14
  %38 = phi i1 [ false, %14 ], [ %34, %32 ]
  %39 = tail call zeroext i1 @_ZNK5blink5Frame11IsMainFrameEv(%"class.blink::Frame"* nonnull %4) #9
  %40 = xor i1 %39, true
  %41 = or i1 %38, %40
  br i1 %41, label %46, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %44 = bitcast %"class.blink::Frame"** %43 to %"class.blink::LocalFrame"**
  %45 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %44, align 8
  tail call void @_ZN5blink5Frame9FocusPageEPNS_10LocalFrameE(%"class.blink::Frame"* nonnull %4, %"class.blink::LocalFrame"* %45) #9
  br label %59

46:                                               ; preds = %35, %37
  %47 = bitcast %"class.blink::Frame"* %4 to i1 (%"class.blink::Frame"*)***
  %48 = load i1 (%"class.blink::Frame"*)**, i1 (%"class.blink::Frame"*)*** %47, align 8
  %49 = getelementptr inbounds i1 (%"class.blink::Frame"*)*, i1 (%"class.blink::Frame"*)** %48, i64 3
  %50 = load i1 (%"class.blink::Frame"*)*, i1 (%"class.blink::Frame"*)** %49, align 8
  %51 = tail call zeroext i1 %50(%"class.blink::Frame"* nonnull %4) #9
  %52 = bitcast %"class.blink::Frame"* %4 to %"class.blink::LocalFrame"*
  br i1 %51, label %53, label %59

53:                                               ; preds = %46
  %54 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* nonnull %52) #9
  %55 = icmp eq %"class.blink::Document"* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %53
  %57 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* nonnull %52) #9
  %58 = tail call zeroext i1 @_ZNK5blink8Document14IsFocusAllowedEv(%"class.blink::Document"* %57) #9
  br i1 %58, label %59, label %63

59:                                               ; preds = %46, %53, %56, %42
  %60 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %7, i64 0, i32 10, i32 0, i32 0
  %61 = load %"class.blink::FocusController"*, %"class.blink::FocusController"** %60, align 8
  %62 = load %"class.blink::Frame"*, %"class.blink::Frame"** %3, align 8
  tail call void @_ZN5blink15FocusController17FocusDocumentViewEPNS_5FrameEb(%"class.blink::FocusController"* %61, %"class.blink::Frame"* %62, i1 zeroext true) #9
  br label %63

63:                                               ; preds = %6, %56, %59, %2
  ret void
}

declare zeroext i1 @_ZNK5blink16ExecutionContext26IsWindowInteractionAllowedEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #4

declare void @_ZN5blink16ExecutionContext24ConsumeWindowInteractionEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #4

declare void @_ZN5blink5Frame9FocusPageEPNS_10LocalFrameE(%"class.blink::Frame"*, %"class.blink::LocalFrame"*) local_unnamed_addr #4

declare %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink8Document14IsFocusAllowedEv(%"class.blink::Document"*) local_unnamed_addr #4

declare void @_ZN5blink15FocusController17FocusDocumentViewEPNS_5FrameEb(%"class.blink::FocusController"*, %"class.blink::Frame"*, i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InputDeviceCapabilitiesConstants"* @_ZN5blink9DOMWindow26GetInputDeviceCapabilitiesEv(%"class.blink::DOMWindow"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.blink::Member.214", %"class.blink::Member.214"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::InputDeviceCapabilitiesConstants"*, %"class.blink::InputDeviceCapabilitiesConstants"** %3, align 8
  %5 = icmp eq %"class.blink::InputDeviceCapabilitiesConstants"* %4, null
  br i1 %5, label %6, label %20

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_32InputDeviceCapabilitiesConstantsEEEPhm(i64 16) #9
  %8 = getelementptr inbounds i8, i8* %7, i64 -4
  %9 = bitcast i8* %8 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #9
  %10 = load atomic i16, i16* %9 monotonic, align 2
  %11 = or i16 %10, 1
  store atomic i16 %11, i16* %9 release, align 2
  %12 = ptrtoint i8* %7 to i64
  %13 = bitcast %"class.blink::Member.214"* %2 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %15 = icmp eq i32 %14, 0
  %16 = bitcast i8* %7 to %"class.blink::InputDeviceCapabilitiesConstants"*
  br i1 %15, label %20, label %17

17:                                               ; preds = %6
  %18 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %7) #9
  %19 = load %"class.blink::InputDeviceCapabilitiesConstants"*, %"class.blink::InputDeviceCapabilitiesConstants"** %3, align 8
  br label %20

20:                                               ; preds = %1, %17, %6
  %21 = phi %"class.blink::InputDeviceCapabilitiesConstants"* [ %4, %1 ], [ %19, %17 ], [ %16, %6 ]
  ret %"class.blink::InputDeviceCapabilitiesConstants"* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9DOMWindow21PostMessageForTestingE13scoped_refptrINS_21SerializedScriptValueEERKNS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEERKN3WTF6StringEPNS_14LocalDOMWindowERNS_14ExceptionStateE(%"class.blink::DOMWindow"*, %"class.blink::SerializedScriptValue"*, %"class.blink::HeapVector.2065"* dereferenceable(16), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::LocalDOMWindow"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 48) #9
  %8 = bitcast i8* %7 to %"class.blink::WindowPostMessageOptions"*
  tail call void @_ZN5blink24WindowPostMessageOptionsC1Ev(%"class.blink::WindowPostMessageOptions"* %8) #9
  %9 = getelementptr inbounds i8, i8* %7, i64 -4
  %10 = bitcast i8* %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = or i16 %11, 1
  store atomic i16 %12, i16* %10 release, align 2
  %13 = getelementptr inbounds i8, i8* %7, i64 40
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %34, label %17

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i33
  %26 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %25, i33 1) #9
  %27 = extractvalue { i33, i1 } %26, 1
  %28 = extractvalue { i33, i1 } %26, 0
  %29 = icmp slt i33 %28, 0
  %30 = or i1 %27, %29
  br i1 %30, label %31, label %32, !prof !3

31:                                               ; preds = %22
  tail call void @llvm.trap() #9
  unreachable

32:                                               ; preds = %22
  %33 = trunc i33 %28 to i32
  store i32 %33, i32* %23, align 4
  br label %34

34:                                               ; preds = %32, %17, %6
  %35 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %36 = bitcast i8* %13 to i64*
  %37 = bitcast i8* %13 to %"class.WTF::StringImpl"**
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  store i64 %35, i64* %36, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #9
  br label %53

53:                                               ; preds = %52, %49, %34
  tail call void @_ZN5blink9DOMWindow13DoPostMessageE13scoped_refptrINS_21SerializedScriptValueEERKNS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEPKNS_24WindowPostMessageOptionsEPNS_14LocalDOMWindowERNS_14ExceptionStateE(%"class.blink::DOMWindow"* %0, %"class.blink::SerializedScriptValue"* %1, %"class.blink::HeapVector.2065"* dereferenceable(16) %2, %"class.blink::WindowPostMessageOptions"* %8, %"class.blink::LocalDOMWindow"* %4, %"class.blink::ExceptionState"* dereferenceable(72) %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9DOMWindow24InstallCoopAccessMonitorEN7network5mojom20CoopAccessReportTypeEPNS_10LocalFrameEN4mojo13PendingRemoteINS2_5blink31CrossOriginOpenerPolicyReporterEEEbRKN3WTF6StringE(%"class.blink::DOMWindow"*, i32, %"class.blink::LocalFrame"* nocapture readonly, %"class.mojo::PendingRemote.2154"*, i1 zeroext, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.mojo::PendingRemote.2154", align 4
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"struct.blink::DOMWindow::CoopAccessMonitor", align 8
  %12 = alloca %"class.mojo::PendingRemote.2154", align 4
  %13 = alloca %"class.base::OnceCallback", align 8
  %14 = alloca <2 x i64>, align 16
  %15 = bitcast <2 x i64>* %14 to { i64, i64 }*
  %16 = alloca %"class.blink::WeakPersistent", align 8
  %17 = zext i1 %4 to i8
  %18 = bitcast %"struct.blink::DOMWindow::CoopAccessMonitor"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %18) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 88, i1 false)
  %19 = tail call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #9
  %20 = extractvalue { i64, i64 } %19, 0
  %21 = extractvalue { i64, i64 } %19, 1
  %22 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %20, i64* %22, align 8
  %23 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store i64 %21, i64* %23, align 8
  %24 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %11, i64 0, i32 2
  %25 = bitcast %"class.mojo::Remote"* %24 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %25) #9
  %26 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %11, i64 0, i32 2, i32 0, i32 1
  %27 = bitcast %"class.std::__1::unique_ptr.399"* %26 to i64*
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %11, i64 0, i32 4, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %28, align 8
  %29 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %11, i64 0, i32 0
  store i32 %1, i32* %29, align 8
  %30 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %2, i64 0, i32 0, i32 30, i32 1
  %31 = load i32, i32* %30, align 8, !noalias !52
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %6
  %34 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9, !noalias !52
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.38, i64 0, i64 0), i32 97, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.39, i64 0, i64 0)) #9, !noalias !52
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9, !noalias !52
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %35, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.40, i64 0, i64 0), i64 23) #9, !noalias !52
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9, !noalias !52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9, !noalias !52
  br label %37

37:                                               ; preds = %6, %33
  %38 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %2, i64 0, i32 0, i32 30
  %39 = bitcast %"class.blink::MultiToken"* %38 to i8*
  %40 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %11, i64 0, i32 1
  %41 = bitcast %"class.util::TokenType"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %39, i64 16, i1 false)
  %42 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %11, i64 0, i32 3
  store i8 %17, i8* %42, align 8
  %43 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %11, i64 0, i32 4
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %37
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #9
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !3

61:                                               ; preds = %52
  call void @llvm.trap() #9
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %62, %47, %37
  %65 = ptrtoint %"class.WTF::StringImpl"* %45 to i64
  %66 = bitcast %"class.WTF::String"* %43 to i64*
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  store i64 %65, i64* %66, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #9
  br label %83

83:                                               ; preds = %64, %79, %82
  %84 = getelementptr inbounds %"class.mojo::PendingRemote.2154", %"class.mojo::PendingRemote.2154"* %12, i64 0, i32 0
  %85 = getelementptr inbounds %"class.mojo::PendingRemote.2154", %"class.mojo::PendingRemote.2154"* %3, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %84, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %85) #9
  %86 = bitcast %"class.mojo::PendingRemote.2154"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86)
  %87 = getelementptr inbounds %"class.mojo::PendingRemote.2154", %"class.mojo::PendingRemote.2154"* %9, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %87, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %84) #9
  call void @_ZN4mojo6RemoteIN7network5mojom5blink31CrossOriginOpenerPolicyReporterEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote"* %24, %"class.mojo::PendingRemote.2154"* nonnull %9, %"class.base::SequencedTaskRunner"* null) #9
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %87) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86)
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %84) #9
  %88 = bitcast <2 x i64>* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #9
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::DOMWindow"*, %"class.util::TokenType"*)* @_ZN5blink9DOMWindow27DisconnectCoopAccessMonitorERKN4util9TokenTypeINS_25LocalFrameTokenTypeMarkerEEE to i64), i64 0>, <2 x i64>* %14, align 16
  %89 = bitcast %"class.blink::WeakPersistent"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89) #9
  %90 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %16, i64 0, i32 0
  %91 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %16, i64 0, i32 0, i32 0
  store %"class.blink::DOMWindow"* %0, %"class.blink::DOMWindow"** %91, align 8, !alias.scope !57
  %92 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %16, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %92, align 8, !alias.scope !57
  %93 = ptrtoint %"class.blink::DOMWindow"* %0 to i64
  switch i64 %93, label %94 [
    i64 0, label %120
    i64 -1, label %120
  ]

94:                                               ; preds = %83
  %95 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !57
  %96 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %95, i64 0, i32 1
  %97 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %96) #9, !noalias !57
  %98 = icmp eq i8* %97, null
  br i1 %98, label %99, label %101, !prof !3

99:                                               ; preds = %94
  %100 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %96, i8* %100) #9
  br label %101

101:                                              ; preds = %99, %94
  %102 = phi i8* [ %100, %99 ], [ %97, %94 ]
  %103 = bitcast i8* %102 to %"class.blink::ThreadState"**
  %104 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %103, align 8, !noalias !57
  %105 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %104, i64 0, i32 4, i32 0, i32 0, i32 0
  %106 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %105, align 8, !noalias !57
  %107 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %106, i64 0, i32 0, i32 0
  %108 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %107, align 8, !noalias !57
  %109 = icmp eq %"class.blink::PersistentNode"* %108, null
  br i1 %109, label %110, label %113, !prof !3

110:                                              ; preds = %101
  %111 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %106, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %111) #9
  %112 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %107, align 8
  br label %113

113:                                              ; preds = %110, %101
  %114 = phi %"class.blink::PersistentNode"* [ %112, %110 ], [ %108, %101 ]
  %115 = bitcast %"class.blink::PersistentNode"* %114 to i64*
  %116 = load i64, i64* %115, align 8, !noalias !57
  %117 = bitcast %"class.blink::PersistentRegion"* %106 to i64*
  store i64 %116, i64* %117, align 8, !noalias !57
  %118 = bitcast %"class.blink::PersistentNode"* %114 to %"class.blink::PersistentBase.2155"**
  store %"class.blink::PersistentBase.2155"* %90, %"class.blink::PersistentBase.2155"** %118, align 8, !noalias !57
  %119 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %114, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_9DOMWindowELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %119, align 8
  store %"class.blink::PersistentNode"* %114, %"class.blink::PersistentNode"** %92, align 8, !alias.scope !57
  br label %120

120:                                              ; preds = %83, %83, %113
  %121 = call i8* @_Znwm(i64 80) #17, !noalias !60
  %122 = bitcast i8* %121 to %"struct.base::internal::BindState"*
  call void @_ZN4base8internal9BindStateIMN5blink9DOMWindowEFvRKN4util9TokenTypeINS2_25LocalFrameTokenTypeMarkerEEEEJNS2_14WeakPersistentIS3_EES7_EEC2ISB_JSD_RS7_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"* nonnull %122, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink9DOMWindowEFvRKN4util9TokenTypeINS3_25LocalFrameTokenTypeMarkerEEEEJNS3_14WeakPersistentIS4_EES8_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), { i64, i64 }* nonnull dereferenceable(16) %15, %"class.blink::WeakPersistent"* nonnull dereferenceable(16) %16, %"class.util::TokenType"* dereferenceable(16) %40) #9, !noalias !60
  %123 = bitcast %"class.base::OnceCallback"* %13 to i8**
  store i8* %121, i8** %123, align 8, !alias.scope !60
  %124 = bitcast %"class.base::OnceCallback"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124)
  %125 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %11, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %126 = load %"class.mojo::InterfaceEndpointClient"*, %"class.mojo::InterfaceEndpointClient"** %125, align 8
  %127 = icmp eq %"class.mojo::InterfaceEndpointClient"* %126, null
  %128 = ptrtoint i8* %121 to i64
  br i1 %127, label %133, label %129

129:                                              ; preds = %120
  %130 = getelementptr inbounds %"class.mojo::InterfaceEndpointClient", %"class.mojo::InterfaceEndpointClient"* %126, i64 0, i32 19
  %131 = load i8, i8* %130, align 8, !range !4
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %133, label %145

133:                                              ; preds = %129, %120
  %134 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %24, i64 0, i32 0
  %135 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %13, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %135, align 8
  %136 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #9
  call void @_ZN4mojo8internal17InterfacePtrStateIN7network5mojom5blink31CrossOriginOpenerPolicyReporterEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState"* %134) #9
  %137 = load %"class.mojo::InterfaceEndpointClient"*, %"class.mojo::InterfaceEndpointClient"** %125, align 8
  %138 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0, i32 0, i32 0
  %139 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %128, i64* %139, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %138, align 8
  %140 = getelementptr inbounds %"class.mojo::InterfaceEndpointClient", %"class.mojo::InterfaceEndpointClient"* %137, i64 0, i32 17, i32 0
  %141 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  %142 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %140, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %141) #9
  %143 = getelementptr inbounds %"class.mojo::InterfaceEndpointClient", %"class.mojo::InterfaceEndpointClient"* %137, i64 0, i32 18, i32 0
  call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %143) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %141) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #9
  %144 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %144) #9
  br label %145

145:                                              ; preds = %129, %133
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124)
  %146 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %13, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %146) #9
  %147 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %92, align 8
  %148 = icmp eq %"class.blink::PersistentNode"* %147, null
  br i1 %148, label %168, label %149

149:                                              ; preds = %145
  %150 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %151 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %150, i64 0, i32 1
  %152 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %151) #9
  %153 = icmp eq i8* %152, null
  br i1 %153, label %154, label %156, !prof !3

154:                                              ; preds = %149
  %155 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %151, i8* %155) #9
  br label %156

156:                                              ; preds = %154, %149
  %157 = phi i8* [ %155, %154 ], [ %152, %149 ]
  %158 = bitcast i8* %157 to %"class.blink::ThreadState"**
  %159 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %158, align 8
  %160 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %159, i64 0, i32 4, i32 0, i32 0, i32 0
  %161 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %160, align 8
  %162 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %92, align 8
  %163 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %161, i64 0, i32 0, i32 0
  %164 = bitcast %"class.blink::PersistentRegion"* %161 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = bitcast %"class.blink::PersistentNode"* %162 to i64*
  store i64 %165, i64* %166, align 8
  %167 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %162, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %167, align 8
  store %"class.blink::PersistentNode"* %162, %"class.blink::PersistentNode"** %163, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %92, align 8
  br label %168

168:                                              ; preds = %145, %156
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #9
  %169 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 6
  %170 = getelementptr inbounds %"class.WTF::Vector.224", %"class.WTF::Vector.224"* %169, i64 0, i32 0, i32 0, i32 0
  %171 = load %"struct.blink::DOMWindow::CoopAccessMonitor"*, %"struct.blink::DOMWindow::CoopAccessMonitor"** %170, align 8
  %172 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %173 = load i32, i32* %172, align 4
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %171, i64 %174
  %176 = icmp eq i32 %173, 0
  br i1 %176, label %231, label %177

177:                                              ; preds = %168
  %178 = getelementptr inbounds %"class.util::TokenType", %"class.util::TokenType"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %226
  %180 = phi %"struct.blink::DOMWindow::CoopAccessMonitor"* [ %171, %177 ], [ %227, %226 ]
  %181 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %180, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %182 = load i64, i64* %181, align 8
  %183 = load i64, i64* %178, align 8
  %184 = icmp eq i64 %182, %183
  br i1 %184, label %185, label %226

185:                                              ; preds = %179
  %186 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %180, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %187 = load i64, i64* %186, align 8
  %188 = load i64, i64* %23, align 8
  %189 = icmp eq i64 %187, %188
  br i1 %189, label %190, label %226

190:                                              ; preds = %185
  %191 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %180, i64 0, i32 0
  %192 = load i32, i32* %191, align 8
  %193 = call zeroext i1 @_ZN7network20IsAccessFromCoopPageENS_5mojom20CoopAccessReportTypeE(i32 %192) #9
  %194 = load i32, i32* %29, align 8
  %195 = call zeroext i1 @_ZN7network20IsAccessFromCoopPageENS_5mojom20CoopAccessReportTypeE(i32 %194) #9
  %196 = xor i1 %193, %195
  br i1 %196, label %226, label %197

197:                                              ; preds = %190
  %198 = bitcast %"struct.blink::DOMWindow::CoopAccessMonitor"* %180 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %198, i8* nonnull align 8 %18, i64 24, i1 false) #9
  %199 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %180, i64 0, i32 2
  %200 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %180, i64 0, i32 2, i32 0, i32 1
  %201 = load i64, i64* %27, align 8
  %202 = bitcast %"class.std::__1::unique_ptr.399"* %200 to i64*
  %203 = load i64, i64* %202, align 8
  store i64 %203, i64* %27, align 8
  store i64 %201, i64* %202, align 8
  %204 = bitcast %"class.mojo::Remote"* %199 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %204, %"class.mojo::internal::InterfacePtrStateBase"* %25) #9
  %205 = load i8, i8* %42, align 8, !range !4
  %206 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %180, i64 0, i32 3
  store i8 %205, i8* %206, align 8
  %207 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %180, i64 0, i32 4
  %208 = load i64, i64* %66, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %67, align 8
  %209 = bitcast %"class.WTF::String"* %207 to i64*
  %210 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %207, i64 0, i32 0, i32 0
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %210, align 8
  store i64 %208, i64* %209, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %256, label %213

213:                                              ; preds = %197
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  br i1 %217, label %220, label %222

220:                                              ; preds = %213
  %221 = add i32 %219, -1
  store i32 %221, i32* %218, align 4
  br label %222

222:                                              ; preds = %220, %213
  %223 = phi i32 [ %221, %220 ], [ %219, %213 ]
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %256

225:                                              ; preds = %222
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %211) #9
  br label %256

226:                                              ; preds = %179, %190, %185
  %227 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %180, i64 1
  %228 = icmp eq %"struct.blink::DOMWindow::CoopAccessMonitor"* %227, %175
  br i1 %228, label %229, label %179

229:                                              ; preds = %226
  %230 = load i32, i32* %172, align 4
  br label %231

231:                                              ; preds = %229, %168
  %232 = phi i32 [ %230, %229 ], [ 0, %168 ]
  %233 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %234 = load i32, i32* %233, align 8
  %235 = icmp eq i32 %232, %234
  br i1 %235, label %255, label %236, !prof !3

236:                                              ; preds = %231
  %237 = load %"struct.blink::DOMWindow::CoopAccessMonitor"*, %"struct.blink::DOMWindow::CoopAccessMonitor"** %170, align 8
  %238 = zext i32 %232 to i64
  %239 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %237, i64 %238, i32 0
  %240 = load i32, i32* %29, align 8
  store i32 %240, i32* %239, align 8
  %241 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %237, i64 %238, i32 1
  %242 = bitcast %"class.util::TokenType"* %241 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %242, i8* align 8 %41, i64 16, i1 false) #9
  %243 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %237, i64 %238, i32 2
  %244 = bitcast %"class.mojo::Remote"* %243 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %244) #9
  %245 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %237, i64 %238, i32 2, i32 0, i32 1
  %246 = bitcast %"class.std::__1::unique_ptr.399"* %245 to i64*
  store i64 0, i64* %246, align 8
  %247 = load i64, i64* %27, align 8
  store i64 0, i64* %27, align 8
  store i64 %247, i64* %246, align 8
  call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %244, %"class.mojo::internal::InterfacePtrStateBase"* %25) #9
  %248 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %237, i64 %238, i32 3
  %249 = load i8, i8* %42, align 8, !range !4
  store i8 %249, i8* %248, align 8
  %250 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %237, i64 %238, i32 4
  %251 = load i64, i64* %66, align 8
  %252 = bitcast %"class.WTF::String"* %250 to i64*
  store i64 %251, i64* %252, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %67, align 8
  %253 = load i32, i32* %172, align 4
  %254 = add i32 %253, 1
  store i32 %254, i32* %172, align 4
  br label %256

255:                                              ; preds = %231
  call void @_ZN3WTF6VectorIN5blink9DOMWindow17CoopAccessMonitorELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.224"* %169, %"struct.blink::DOMWindow::CoopAccessMonitor"* nonnull dereferenceable(88) %11) #9
  br label %256

256:                                              ; preds = %225, %222, %197, %255, %236
  %257 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %258 = icmp eq %"class.WTF::StringImpl"* %257, null
  br i1 %258, label %272, label %259

259:                                              ; preds = %256
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %261 = load atomic i32, i32* %260 monotonic, align 4
  %262 = and i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 0
  %265 = load i32, i32* %264, align 4
  br i1 %263, label %266, label %268

266:                                              ; preds = %259
  %267 = add i32 %265, -1
  store i32 %267, i32* %264, align 4
  br label %268

268:                                              ; preds = %266, %259
  %269 = phi i32 [ %267, %266 ], [ %265, %259 ]
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %272

271:                                              ; preds = %268
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %257) #9
  br label %272

272:                                              ; preds = %271, %268, %256
  %273 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %11, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %274 = load %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*, %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"** %273, align 8
  store %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* null, %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"** %273, align 8
  %275 = icmp eq %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* %274, null
  br i1 %275, label %281, label %276

276:                                              ; preds = %272
  %277 = bitcast %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* %274 to void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)***
  %278 = load void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)**, void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)*** %277, align 8
  %279 = getelementptr inbounds void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)*, void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)** %278, i64 1
  %280 = load void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)*, void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)** %279, align 8
  call void %280(%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* nonnull %274) #9
  br label %281

281:                                              ; preds = %272, %276
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %25) #9
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %18) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9DOMWindow27DisconnectCoopAccessMonitorERKN4util9TokenTypeINS_25LocalFrameTokenTypeMarkerEEE(%"class.blink::DOMWindow"*, %"class.util::TokenType"* nocapture readonly dereferenceable(16)) #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 6
  %4 = getelementptr inbounds %"class.WTF::Vector.224", %"class.WTF::Vector.224"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %44, label %8

8:                                                ; preds = %2
  %9 = load %"struct.blink::DOMWindow::CoopAccessMonitor"*, %"struct.blink::DOMWindow::CoopAccessMonitor"** %4, align 8
  %10 = getelementptr inbounds %"class.util::TokenType", %"class.util::TokenType"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.util::TokenType", %"class.util::TokenType"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  br label %12

12:                                               ; preds = %8, %37
  %13 = phi i32 [ %6, %8 ], [ %38, %37 ]
  %14 = phi %"struct.blink::DOMWindow::CoopAccessMonitor"* [ %9, %8 ], [ %39, %37 ]
  %15 = phi %"struct.blink::DOMWindow::CoopAccessMonitor"* [ %9, %8 ], [ %40, %37 ]
  %16 = ptrtoint %"struct.blink::DOMWindow::CoopAccessMonitor"* %14 to i64
  %17 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = load i64, i64* %10, align 8
  %20 = icmp eq i64 %18, %19
  br i1 %20, label %21, label %35

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = load i64, i64* %11, align 8
  %25 = icmp eq i64 %23, %24
  br i1 %25, label %26, label %35

26:                                               ; preds = %21
  %27 = ptrtoint %"struct.blink::DOMWindow::CoopAccessMonitor"* %15 to i64
  %28 = sub i64 %27, %16
  %29 = sdiv exact i64 %28, 88
  %30 = trunc i64 %29 to i32
  tail call void @_ZN3WTF6VectorIN5blink9DOMWindow17CoopAccessMonitorELj0ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector.224"* %3, i32 %30) #9
  %31 = load %"struct.blink::DOMWindow::CoopAccessMonitor"*, %"struct.blink::DOMWindow::CoopAccessMonitor"** %4, align 8
  %32 = and i64 %29, 4294967295
  %33 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %31, i64 %32
  %34 = load i32, i32* %5, align 4
  br label %37

35:                                               ; preds = %12, %21
  %36 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %15, i64 1
  br label %37

37:                                               ; preds = %35, %26
  %38 = phi i32 [ %34, %26 ], [ %13, %35 ]
  %39 = phi %"struct.blink::DOMWindow::CoopAccessMonitor"* [ %31, %26 ], [ %14, %35 ]
  %40 = phi %"struct.blink::DOMWindow::CoopAccessMonitor"* [ %33, %26 ], [ %36, %35 ]
  %41 = zext i32 %38 to i64
  %42 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %39, i64 %41
  %43 = icmp eq %"struct.blink::DOMWindow::CoopAccessMonitor"* %40, %42
  br i1 %43, label %44, label %12

44:                                               ; preds = %37, %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #7

declare zeroext i1 @_ZN7network20IsAccessFromCoopPageENS_5mojom20CoopAccessReportTypeE(i32) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink5Frame24IsCrossOriginToMainFrameEv(%"class.blink::Frame"*) local_unnamed_addr #4

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #4

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #4

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #4

declare void @_ZN7network5mojom5blink36CrossOriginOpenerPolicyReporterProxy17QueueAccessReportENS0_20CoopAccessReportTypeERKN3WTF6StringEN4mojo16InlinedStructPtrINS1_14SourceLocationEEES7_(%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*, i32, %"class.WTF::String"* dereferenceable(8), %"class.mojo::InlinedStructPtr.2157"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #4

declare %"class.blink::ReportingContext"* @_ZN5blink16ReportingContext4FromEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #4

declare %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"*) local_unnamed_addr #4

declare zeroext i1 @_ZN5blink4Page32DispatchedPagehideAndStillHiddenEv(%"class.blink::Page"*) local_unnamed_addr #4

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #4

declare %"class.blink::SecurityOrigin"* @_ZN5blink17PostMessageHelper15GetTargetOriginEPKNS_24WindowPostMessageOptionsERKNS_16ExecutionContextERNS_14ExceptionStateE(%"class.blink::WindowPostMessageOptions"*, %"class.blink::ExecutionContext"* dereferenceable(376), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #4

declare void @_ZN5blink11MessagePort16DisentanglePortsEPNS_16ExecutionContextERKNS_10HeapVectorINS_6MemberIS0_EELj0EEERNS_14ExceptionStateE(%"class.WTF::Vector.2193"* sret, %"class.blink::ExecutionContext"*, %"class.blink::HeapVector.2065"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink14SecurityOrigin24IsPotentiallyTrustworthyEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin17RegistrableDomainEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #4

declare %"class.blink::ContentSecurityPolicy"* @_ZNK5blink16ExecutionContext24GetContentSecurityPolicyEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #4

declare zeroext i1 @_ZN5blink21ContentSecurityPolicy20AllowConnectToSourceERKNS_4KURLES3_NS_19ResourceRequestHead14RedirectStatusENS_20ReportingDispositionENS0_15CheckHeaderTypeE(%"class.blink::ContentSecurityPolicy"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112), i8 zeroext, i32, i32) local_unnamed_addr #4

declare %"class.blink::UserActivation"* @_ZN5blink14UserActivation14CreateSnapshotEPNS_14LocalDOMWindowE(%"class.blink::LocalDOMWindow"*) local_unnamed_addr #4

declare zeroext i1 @_ZN5blink10LocalFrame26HasTransientUserActivationEPS0_(%"class.blink::LocalFrame"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9DOMWindow5TraceEPNS_7VisitorE(%"class.blink::DOMWindow"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.8"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_5FrameEE5TraceEPNS_7VisitorEPKv) #9
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member.10"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18WindowProxyManagerEE5TraceEPNS_7VisitorEPKv) #9
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 3
  %26 = bitcast %"class.blink::Member.214"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_32InputDeviceCapabilitiesConstantsEE5TraceEPNS_7VisitorEPKv) #9
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 4
  %37 = bitcast %"class.blink::Member.220"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = inttoptr i64 %38 to i8*
  %42 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %1, i8* nonnull %41, i8* nonnull %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8LocationEE5TraceEPNS_7VisitorEPKv) #9
  br label %46

46:                                               ; preds = %35, %40
  %47 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 0, i32 1
  %48 = bitcast %"class.blink::EventTargetData"* %47 to i8*
  %49 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %48, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.34, i64 0, i64 0), i32 261) #9
  %50 = bitcast i8* %49 to %"class.blink::EventTargetData"*
  tail call void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"* %50, %"class.blink::Visitor"* %1) #9
  %51 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %51, %"class.blink::Visitor"* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE(%"class.blink::EventTargetWithInlineData"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::EventTargetData"* %3 to i8*
  %5 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.34, i64 0, i64 0), i32 261)
  %6 = bitcast i8* %5 to %"class.blink::EventTargetData"*
  tail call void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"* %6, %"class.blink::Visitor"* %1) #9
  %7 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %7, %"class.blink::Visitor"* %1) #9
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #9
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink9DOMWindow18GetWrapperTypeInfoEv(%"class.blink::DOMWindow"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink9DOMWindow18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare void @__cxa_pure_virtual() unnamed_addr

declare %"class.blink::Node"* @_ZN5blink11EventTarget6ToNodeEv(%"class.blink::EventTarget"*) unnamed_addr #4

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #4

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #4

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #4

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #4

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #4

declare void @_ZN5blink11EventTarget23RemoveAllEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #4

declare void @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #4

declare void @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #4

declare i32 @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.34, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.34, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

declare void @_ZN5blink11EventTargetC2Ev(%"class.blink::EventTarget"*) unnamed_addr #4

; Function Attrs: nounwind
declare i8* @llvm.ptr.annotation.p0i8(i8*, i8*, i8*, i32) #9

declare void @_ZN5blink15EventTargetDataC1Ev(%"class.blink::EventTargetData"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25EventTargetWithInlineDataD2Ev(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::EventTargetData"* %3 to i8*
  %5 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.34, i64 0, i64 0), i32 261)
  %6 = bitcast i8* %5 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"* %6) #9
  %7 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0
  tail call void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"* %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25EventTargetWithInlineDataD0Ev(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink11EventTarget18GetWrapperTypeInfoEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11EventTarget18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #4

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #4

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"*) unnamed_addr #7

declare void @_ZN5blink24WindowPostMessageOptionsC1Ev(%"class.blink::WindowPostMessageOptions"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #8 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #9
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35, i64 0, i64 0), i8* %21, i8* %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.36, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #9
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #9
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #4

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #4

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #4

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #4

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #4

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

declare void @_ZN5blink5probe21BreakableLocationImplEPNS_16ExecutionContextEPKc(%"class.blink::ExecutionContext"*, i8*) local_unnamed_addr #4

declare { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() local_unnamed_addr #4

declare void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #17
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #17
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #7

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #13

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #7

declare void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"*, %"class.mojo::internal::InterfacePtrStateBase"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #7

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink14SourceLocationD1Ev(%"class.network::mojom::blink::SourceLocation"*) unnamed_addr #7

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #4

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #4

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #4

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #4

declare void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"*, i16 zeroext, i1 zeroext, %"class.WTF::Vector.1139"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::MessageEvent"* @_ZN5blink25MakeGarbageCollectedTraitINS_12MessageEventEE4CallIJ13scoped_refptrINS_21SerializedScriptValueEERKN3WTF6StringESA_RPNS_11EventTargetENS7_6VectorINS_18MessagePortChannelELj0ENS7_18PartitionAllocatorEEERPNS_14UserActivationERbEEEPS1_DpOT_(%class.scoped_refptr.1212* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::EventTarget"** dereferenceable(8), %"class.WTF::Vector.2193"* dereferenceable(16), %"class.blink::UserActivation"** dereferenceable(8), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %8 = alloca %"class.WTF::Vector.2193", align 8
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 256) #9
  %10 = bitcast i8* %9 to %"class.blink::MessageEvent"*
  %11 = getelementptr inbounds %class.scoped_refptr.1212, %class.scoped_refptr.1212* %0, i64 0, i32 0
  %12 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %11, align 8
  store %"class.blink::SerializedScriptValue"* null, %"class.blink::SerializedScriptValue"** %11, align 8
  %13 = load %"class.blink::EventTarget"*, %"class.blink::EventTarget"** %3, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.2193", %"class.WTF::Vector.2193"* %8, i64 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.WTF::Vector.2193", %"class.WTF::Vector.2193"* %8, i64 0, i32 0, i32 0, i32 2
  %16 = bitcast %"class.WTF::Vector.2193"* %4 to i64*
  %17 = bitcast %"class.WTF::Vector.2193"* %8 to i64*
  store i64 0, i64* %17, align 8
  %18 = load i64, i64* %16, align 8
  %19 = bitcast %"class.WTF::Vector.2193"* %8 to i64*
  store atomic i64 0, i64* %16 monotonic, align 8
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = getelementptr inbounds %"class.WTF::Vector.2193", %"class.WTF::Vector.2193"* %4, i64 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %14, align 8
  store i32 0, i32* %20, align 4
  %22 = getelementptr inbounds %"class.WTF::Vector.2193", %"class.WTF::Vector.2193"* %4, i64 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %15, align 4
  store i32 0, i32* %22, align 4
  %24 = load %"class.blink::UserActivation"*, %"class.blink::UserActivation"** %5, align 8
  %25 = load i8, i8* %6, align 1, !range !4
  %26 = icmp ne i8 %25, 0
  call void @_ZN5blink12MessageEventC1E13scoped_refptrINS_21SerializedScriptValueEERKN3WTF6StringES7_PNS_11EventTargetENS4_6VectorINS_18MessagePortChannelELj0ENS4_18PartitionAllocatorEEEPNS_14UserActivationEb(%"class.blink::MessageEvent"* %10, %"class.blink::SerializedScriptValue"* %12, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::EventTarget"* %13, %"class.WTF::Vector.2193"* nonnull %8, %"class.blink::UserActivation"* %24, i1 zeroext %26) #9
  %27 = getelementptr inbounds %"class.WTF::Vector.2193", %"class.WTF::Vector.2193"* %8, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::MessagePortChannel"*, %"class.blink::MessagePortChannel"** %27, align 8
  %29 = icmp eq %"class.blink::MessagePortChannel"* %28, null
  br i1 %29, label %46, label %30, !prof !2

30:                                               ; preds = %7
  %31 = bitcast %"class.blink::MessagePortChannel"* %28 to i8*
  %32 = load i32, i32* %15, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %44, label %34, !prof !3

34:                                               ; preds = %30
  %35 = zext i32 %32 to i64
  %36 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %28, i64 %35
  br label %37

37:                                               ; preds = %37, %34
  %38 = phi %"class.blink::MessagePortChannel"* [ %39, %37 ], [ %28, %34 ]
  call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* %38) #9
  %39 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %38, i64 1
  %40 = icmp eq %"class.blink::MessagePortChannel"* %39, %36
  br i1 %40, label %41, label %37

41:                                               ; preds = %37
  store i32 0, i32* %15, align 4
  %42 = bitcast %"class.WTF::Vector.2193"* %8 to i8**
  %43 = load i8*, i8** %42, align 8
  br label %44

44:                                               ; preds = %41, %30
  %45 = phi i8* [ %43, %41 ], [ %31, %30 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %45) #9
  store %"class.blink::MessagePortChannel"* null, %"class.blink::MessagePortChannel"** %27, align 8
  br label %46

46:                                               ; preds = %7, %44
  %47 = getelementptr inbounds i8, i8* %9, i64 -4
  %48 = bitcast i8* %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = or i16 %49, 1
  store atomic i16 %50, i16* %48 release, align 2
  ret %"class.blink::MessageEvent"* %10
}

declare void @_ZN5blink12MessageEventC1E13scoped_refptrINS_21SerializedScriptValueEERKN3WTF6StringES7_PNS_11EventTargetENS4_6VectorINS_18MessagePortChannelELj0ENS4_18PartitionAllocatorEEEPNS_14UserActivationEb(%"class.blink::MessageEvent"*, %"class.blink::SerializedScriptValue"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::EventTarget"*, %"class.WTF::Vector.2193"*, %"class.blink::UserActivation"*, i1 zeroext) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #9
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: nounwind
declare void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"*) unnamed_addr #7

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #4

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #4

declare void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"*, %"class.blink::Visitor"*) local_unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #9
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #9
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #9
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #9
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #9
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #9
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN5blink14SourceLocationD1Ev(%"class.blink::SourceLocation"*) unnamed_addr #7

declare void @_ZN5blink8LocationC1EPNS_9DOMWindowE(%"class.blink::Location"*, %"class.blink::DOMWindow"*) unnamed_addr #4

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2334"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2334", %"class.WTF::StringTypeAdapter.2334"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2334"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %4, i8* %14) #9
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2127"* %9) #9
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2127"* %9) #9
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.42, i64 0, i64 0), i8* %25, i8* %26) #9
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.43, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.44, i64 0, i64 0), i8* %41, i8* %42) #9
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.43, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2335", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2334"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2334"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %5, i8* %10) #9
  %11 = bitcast %"class.WTF::StringTypeAdapter.2334"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2334", %"class.WTF::StringTypeAdapter.2334"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #9
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %3, i8* %14) #9
  %15 = bitcast %"class.WTF::StringTypeAdapter.2335"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #9
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2335"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2334"* nonnull %3, i8* %1) #9
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2336"* nonnull %34, i8* %37) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2127"* %6) #9
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2334"* nonnull %5, i8* %40) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2335", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2334"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2334"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %5, i8* %10) #9
  %11 = bitcast %"class.WTF::StringTypeAdapter.2334"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2334", %"class.WTF::StringTypeAdapter.2334"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #9
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %3, i8* %14) #9
  %15 = bitcast %"class.WTF::StringTypeAdapter.2335"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #9
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2335"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2334"* nonnull %3, i16* %1) #9
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2336"* nonnull %34, i16* %37) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2127"* %6) #9
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2334"* nonnull %5, i16* %40) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"*, i8*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2127"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.2334"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2334", %"class.WTF::StringTypeAdapter.2334"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.2127", %"class.WTF::StringAppend.2127"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.2334"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %4, i8* %13) #9
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2127", %"class.WTF::StringAppend.2127"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #9
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.42, i64 0, i64 0), i8* %30, i8* %31) #9
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.43, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #9
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.44, i64 0, i64 0), i8* %45, i8* %46) #9
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.43, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #9
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret i32 %23
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2334"*, i8*) local_unnamed_addr #4

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2336"*, i8*) local_unnamed_addr #4

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2334"*, i16*) local_unnamed_addr #4

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2336"*, i16*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.2129"*, %"class.WTF::StringAppend"* byval(%"class.WTF::StringAppend") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.2129"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2129", %"class.WTF::StringAppend.2129"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #9
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #9
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %3, %11, %26
  %29 = getelementptr inbounds %"class.WTF::StringAppend.2129", %"class.WTF::StringAppend.2129"* %0, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.2129", %"class.WTF::StringAppend.2129"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #9
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %43
  tail call void @llvm.trap() #9
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %36, %51
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %60 = add i32 %54, -1
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i32 [ %60, %58 ], [ %54, %53 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #9
  br label %65

65:                                               ; preds = %28, %61, %64
  br i1 %10, label %79, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #9
  br label %79

79:                                               ; preds = %65, %75, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.2128"*, %"class.WTF::StringAppend.2129"* byval(%"class.WTF::StringAppend.2129") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.2129"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.2128"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2129", %"class.WTF::StringAppend.2129"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2128", %"class.WTF::StringAppend.2128"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #9
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #9
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend.2128", %"class.WTF::StringAppend.2128"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2129", %"class.WTF::StringAppend.2129"* %1, i64 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.2129", %"class.WTF::StringAppend.2129"* %1, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend.2128", %"class.WTF::StringAppend.2128"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #9
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %43
  tail call void @llvm.trap() #9
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %57

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend.2128", %"class.WTF::StringAppend.2128"* %0, i64 0, i32 1
  store i8* %2, i8** %56, align 8
  br label %70

57:                                               ; preds = %38, %53
  %58 = getelementptr inbounds %"class.WTF::StringAppend.2128", %"class.WTF::StringAppend.2128"* %0, i64 0, i32 1
  store i8* %2, i8** %58, align 8
  %59 = load atomic i32, i32* %39 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #9
  br label %70

70:                                               ; preds = %55, %69, %66
  br i1 %10, label %84, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #9
  br label %84

84:                                               ; preds = %70, %80, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.2128"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2128", %"class.WTF::StringAppend.2128"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2334"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2334", %"class.WTF::StringTypeAdapter.2334"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.2128", %"class.WTF::StringAppend.2128"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2334"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %4, i8* %14) #9
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2129"* %9) #9
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2129"* %9) #9
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.42, i64 0, i64 0), i8* %25, i8* %26) #9
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.43, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.44, i64 0, i64 0), i8* %41, i8* %42) #9
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.43, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.2128"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2335", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.2128", %"class.WTF::StringAppend.2128"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.2334"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2128", %"class.WTF::StringAppend.2128"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.2334"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %4, i8* %9) #9
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2128", %"class.WTF::StringAppend.2128"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2335"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2128", %"class.WTF::StringAppend.2128"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #9
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.2335"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %10, i8* %1) #9
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %10) #9
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2336"* nonnull %30, i8* %33) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2129"* %5) #9
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2334"* nonnull %4, i8* %36) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.2128"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2335", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.2128", %"class.WTF::StringAppend.2128"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.2334"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2128", %"class.WTF::StringAppend.2128"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.2334"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %4, i8* %9) #9
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2128", %"class.WTF::StringAppend.2128"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2335"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2128", %"class.WTF::StringAppend.2128"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #9
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.2335"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %10, i16* %1) #9
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %10) #9
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2336"* nonnull %30, i16* %33) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2129"* %5) #9
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2334"* nonnull %4, i16* %36) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2129"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2129", %"class.WTF::StringAppend.2129"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2129", %"class.WTF::StringAppend.2129"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %8) #9
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #9
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %8) #9
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #9
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.42, i64 0, i64 0), i8* %26, i8* %27) #9
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.43, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #9
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #9
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #9
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #9
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.44, i64 0, i64 0), i8* %41, i8* %42) #9
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.43, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #9
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.2133"*, %"class.WTF::StringImpl"*, i8*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #9
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #9
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %4, %8, %23
  %26 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %0, i64 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %47

37:                                               ; preds = %30
  %38 = zext i32 %36 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #9
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !3

44:                                               ; preds = %37
  tail call void @llvm.trap() #9
  unreachable

45:                                               ; preds = %37
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %35, align 4
  br label %47

47:                                               ; preds = %30, %45
  %48 = phi i32 [ %46, %45 ], [ %36, %30 ]
  %49 = load atomic i32, i32* %31 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %54 = add i32 %48, -1
  store i32 %54, i32* %53, align 4
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi i32 [ %54, %52 ], [ %48, %47 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #9
  br label %59

59:                                               ; preds = %25, %55, %58
  br i1 %7, label %73, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #9
  br label %73

73:                                               ; preds = %59, %69, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.2132"*, %"class.WTF::StringAppend.2133"* byval(%"class.WTF::StringAppend.2133") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #9
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #9
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %23, %8, %3
  %26 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %0, i64 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %1, i64 0, i32 0, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8** %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %1, i64 0, i32 1, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %54

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #9
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !3

49:                                               ; preds = %40
  tail call void @llvm.trap() #9
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %54

52:                                               ; preds = %25
  %53 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %0, i64 0, i32 1
  store i8* %2, i8** %53, align 8
  br label %67

54:                                               ; preds = %35, %50
  %55 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %0, i64 0, i32 1
  store i8* %2, i8** %55, align 8
  %56 = load atomic i32, i32* %36 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #9
  br label %67

67:                                               ; preds = %52, %66, %63
  br i1 %7, label %81, label %68

68:                                               ; preds = %67
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #9
  br label %81

81:                                               ; preds = %67, %77, %80
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EC2ES6_S1_(%"class.WTF::StringAppend.2131"*, %"class.WTF::StringAppend.2132"* byval(%"class.WTF::StringAppend.2132") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #9
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #9
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %23, %8, %3
  %26 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %1, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8** %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #9
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !3

49:                                               ; preds = %40
  tail call void @llvm.trap() #9
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %25, %35, %50
  %53 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %0, i64 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %1, i64 0, i32 1
  %55 = bitcast i8** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast i8** %53 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %58, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %59, label %89, label %60

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %77

67:                                               ; preds = %60
  %68 = zext i32 %66 to i33
  %69 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %68, i33 1) #9
  %70 = extractvalue { i33, i1 } %69, 1
  %71 = extractvalue { i33, i1 } %69, 0
  %72 = icmp slt i33 %71, 0
  %73 = or i1 %70, %72
  br i1 %73, label %74, label %75, !prof !3

74:                                               ; preds = %67
  tail call void @llvm.trap() #9
  unreachable

75:                                               ; preds = %67
  %76 = trunc i33 %71 to i32
  store i32 %76, i32* %65, align 4
  br label %77

77:                                               ; preds = %60, %75
  %78 = phi i32 [ %76, %75 ], [ %66, %60 ]
  %79 = load atomic i32, i32* %61 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %84 = add i32 %78, -1
  store i32 %84, i32* %83, align 4
  br label %85

85:                                               ; preds = %82, %77
  %86 = phi i32 [ %84, %82 ], [ %78, %77 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #9
  br label %89

89:                                               ; preds = %52, %85, %88
  br i1 %34, label %103, label %90

90:                                               ; preds = %89
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #9
  br label %103

103:                                              ; preds = %102, %99, %89
  br i1 %7, label %117, label %104

104:                                              ; preds = %103
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #9
  br label %117

117:                                              ; preds = %103, %113, %116
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EES3_EC2ES7_S3_(%"class.WTF::StringAppend.2130"*, %"class.WTF::StringAppend.2131"* byval(%"class.WTF::StringAppend.2131") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2130", %"class.WTF::StringAppend.2130"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #9
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #9
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %23, %8, %3
  %26 = getelementptr inbounds %"class.WTF::StringAppend.2130", %"class.WTF::StringAppend.2130"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8** %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.WTF::StringAppend.2130", %"class.WTF::StringAppend.2130"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #9
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !3

49:                                               ; preds = %40
  tail call void @llvm.trap() #9
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %50, %35, %25
  %53 = getelementptr inbounds %"class.WTF::StringAppend.2130", %"class.WTF::StringAppend.2130"* %0, i64 0, i32 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %1, i64 0, i32 0, i32 1
  %55 = bitcast i8** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast i8** %53 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %1, i64 0, i32 1, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.WTF::StringAppend.2130", %"class.WTF::StringAppend.2130"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %60, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %61, label %79, label %62

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %81

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = zext i32 %69 to i33
  %71 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %70, i33 1) #9
  %72 = extractvalue { i33, i1 } %71, 1
  %73 = extractvalue { i33, i1 } %71, 0
  %74 = icmp slt i33 %73, 0
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %77, !prof !3

76:                                               ; preds = %67
  tail call void @llvm.trap() #9
  unreachable

77:                                               ; preds = %67
  %78 = trunc i33 %73 to i32
  store i32 %78, i32* %68, align 4
  br label %81

79:                                               ; preds = %52
  %80 = getelementptr inbounds %"class.WTF::StringAppend.2130", %"class.WTF::StringAppend.2130"* %0, i64 0, i32 1
  store i8* %2, i8** %80, align 8
  br label %94

81:                                               ; preds = %62, %77
  %82 = getelementptr inbounds %"class.WTF::StringAppend.2130", %"class.WTF::StringAppend.2130"* %0, i64 0, i32 1
  store i8* %2, i8** %82, align 8
  %83 = load atomic i32, i32* %63 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #9
  br label %94

94:                                               ; preds = %79, %93, %90
  br i1 %34, label %108, label %95

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #9
  br label %108

108:                                              ; preds = %107, %104, %94
  br i1 %7, label %122, label %109

109:                                              ; preds = %108
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #9
  br label %122

122:                                              ; preds = %108, %118, %121
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_EES3_E6lengthEv(%"class.WTF::StringAppend.2130"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2130", %"class.WTF::StringAppend.2130"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2334"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2334", %"class.WTF::StringTypeAdapter.2334"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.2130", %"class.WTF::StringAppend.2130"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2334"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %4, i8* %14) #9
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_E6lengthEv(%"class.WTF::StringAppend.2131"* %9) #9
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_E6lengthEv(%"class.WTF::StringAppend.2131"* %9) #9
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.42, i64 0, i64 0), i8* %25, i8* %26) #9
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.43, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.44, i64 0, i64 0), i8* %41, i8* %42) #9
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.43, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_E6lengthEv(%"class.WTF::StringAppend.2131"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.2132"* %8) #9
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #9
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.2132"* %8) #9
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #9
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.42, i64 0, i64 0), i8* %26, i8* %27) #9
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.43, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #9
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #9
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #9
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #9
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.44, i64 0, i64 0), i8* %41, i8* %42) #9
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.43, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #9
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.2132"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2334"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2334", %"class.WTF::StringTypeAdapter.2334"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.2132", %"class.WTF::StringAppend.2132"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2334"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %4, i8* %14) #9
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.2133"* %9) #9
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.2133"* %9) #9
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.42, i64 0, i64 0), i8* %25, i8* %26) #9
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.43, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.44, i64 0, i64 0), i8* %41, i8* %42) #9
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.43, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.2133"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2134"* %8) #9
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #9
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2134"* %8) #9
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #9
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.42, i64 0, i64 0), i8* %26, i8* %27) #9
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.43, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #9
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #9
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #9
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #9
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.44, i64 0, i64 0), i8* %41, i8* %42) #9
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.43, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #9
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2134"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2134", %"class.WTF::StringAppend.2134"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.2334"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2334", %"class.WTF::StringTypeAdapter.2334"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend.2134", %"class.WTF::StringAppend.2134"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.2334"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %4, i8* %21) #9
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #9
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.42, i64 0, i64 0), i8* %30, i8* %31) #9
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.43, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #9
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.44, i64 0, i64 0), i8* %46, i8* %47) #9
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.43, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #9
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #9
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_E7WriteToEPh(%"class.WTF::StringAppend.2131"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2335", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.2335"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %4, i64 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2335"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %21

15:                                               ; preds = %2
  %16 = ptrtoint %"class.WTF::StringImpl"* %11 to i64
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 1
  %20 = bitcast %"class.WTF::StringImpl"* %19 to i8*
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ null, %13 ], [ %20, %15 ]
  %23 = phi i64 [ %14, %13 ], [ %16, %15 ]
  %24 = phi i32 [ 0, %13 ], [ %18, %15 ]
  %25 = bitcast %"class.WTF::StringTypeAdapter.2335"* %4 to i64*
  store i64 %23, i64* %25, align 8
  store i8* %22, i8** %7, align 8
  store i32 %24, i32* %8, align 8
  %26 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %0, i64 0, i32 0, i32 0
  %27 = bitcast %"class.WTF::StringTypeAdapter.2334"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #9
  %28 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false) #9
  %29 = load i8*, i8** %28, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %3, i8* %29) #9
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend.2133"* %26, i8* %1) #9
  %30 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.2133"* %26) #9
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %1, i64 %31
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2334"* nonnull %3, i8* %32) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #9
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %4, i64 0, i32 0
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.2132"* %5) #9
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2336"* nonnull %33, i8* %36) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend.2133"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2335", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2335", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2335"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2335"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.2335"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.2335"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #9
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #9
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.2335"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.2334"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #9
  %47 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #9
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %4, i8* %48) #9
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2336"* nonnull %49, i8* %1) #9
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2334"* nonnull %4, i8* %52) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #9
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2134"* %6) #9
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2336"* nonnull %53, i8* %56) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES1_E7WriteToEPDs(%"class.WTF::StringAppend.2131"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2335", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.2335"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %4, i64 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2335"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %21

15:                                               ; preds = %2
  %16 = ptrtoint %"class.WTF::StringImpl"* %11 to i64
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 1
  %20 = bitcast %"class.WTF::StringImpl"* %19 to i8*
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ null, %13 ], [ %20, %15 ]
  %23 = phi i64 [ %14, %13 ], [ %16, %15 ]
  %24 = phi i32 [ 0, %13 ], [ %18, %15 ]
  %25 = bitcast %"class.WTF::StringTypeAdapter.2335"* %4 to i64*
  store i64 %23, i64* %25, align 8
  store i8* %22, i8** %7, align 8
  store i32 %24, i32* %8, align 8
  %26 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %0, i64 0, i32 0, i32 0
  %27 = bitcast %"class.WTF::StringTypeAdapter.2334"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #9
  %28 = getelementptr inbounds %"class.WTF::StringAppend.2131", %"class.WTF::StringAppend.2131"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false) #9
  %29 = load i8*, i8** %28, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %3, i8* %29) #9
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend.2133"* %26, i16* %1) #9
  %30 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.2133"* %26) #9
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i16, i16* %1, i64 %31
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2334"* nonnull %3, i16* %32) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #9
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %4, i64 0, i32 0
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.2132"* %5) #9
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2336"* nonnull %33, i16* %36) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend.2133"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2335", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2334", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2335", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2335"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2335"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.2335"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.2335"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #9
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #9
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.2335"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.2334"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #9
  %47 = getelementptr inbounds %"class.WTF::StringAppend.2133", %"class.WTF::StringAppend.2133"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #9
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2334"* nonnull %4, i8* %48) #9
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2336"* nonnull %49, i16* %1) #9
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2334"* nonnull %4, i16* %52) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #9
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2335", %"class.WTF::StringTypeAdapter.2335"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2134"* %6) #9
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2336"* nonnull %53, i16* %56) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA61_KcEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), [61 x i8]* dereferenceable(61)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #9
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds [61 x i8], [61 x i8]* %2, i64 0, i64 0
  %11 = icmp eq [61 x i8]* %2, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = tail call i64 @strlen(i8* nonnull %10) #16
  br label %14

14:                                               ; preds = %3, %12
  %15 = phi i64 [ %13, %12 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %10, i64 %15) #9
  %16 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #9
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %16) #9
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #9
  br label %33

33:                                               ; preds = %14, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %34 = getelementptr inbounds i8, i8* %5, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_32InputDeviceCapabilitiesConstantsEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_32InputDeviceCapabilitiesConstantsEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_32InputDeviceCapabilitiesConstantsEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_32InputDeviceCapabilitiesConstantsEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink32InputDeviceCapabilitiesConstantsEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_32InputDeviceCapabilitiesConstantsEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23InputDeviceCapabilitiesEE5TraceEPNS_7VisitorEPKv) #9
  br label %12

12:                                               ; preds = %6, %2
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = inttoptr i64 %15 to i8*
  %19 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %20 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %20, i64 5
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %0, i8* nonnull %18, i8* nonnull %18, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23InputDeviceCapabilitiesEE5TraceEPNS_7VisitorEPKv) #9
  br label %23

23:                                               ; preds = %12, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_32InputDeviceCapabilitiesConstantsEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23InputDeviceCapabilitiesEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo6RemoteIN7network5mojom5blink31CrossOriginOpenerPolicyReporterEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote"*, %"class.mojo::PendingRemote.2154"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::internal::InterfacePtrState", align 8
  %5 = getelementptr inbounds %"class.mojo::PendingRemote.2154", %"class.mojo::PendingRemote.2154"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %25

8:                                                ; preds = %3
  %9 = bitcast %"class.mojo::internal::InterfacePtrState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false) #9
  %10 = bitcast %"class.mojo::internal::InterfacePtrState"* %4 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #9
  %11 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %4, i64 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr.399"* %11 to i64*
  %13 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr.399"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 0, i64* %14, align 8
  %16 = bitcast %"class.mojo::Remote"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %16, %"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #9
  %17 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*, %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"** %17, align 8
  store %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* null, %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"** %17, align 8
  %19 = icmp eq %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %8
  %21 = bitcast %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* %18 to void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)***
  %22 = load void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)**, void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)*, void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)** %22, i64 1
  %24 = load void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)*, void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)** %23, align 8
  call void %24(%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* nonnull %18) #9
  br label %29

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0
  %27 = getelementptr inbounds %"class.mojo::PendingRemote.2154", %"class.mojo::PendingRemote.2154"* %1, i64 0, i32 0
  %28 = bitcast %"class.mojo::Remote"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"* %28, %"struct.mojo::internal::PendingRemoteState"* %27, %"class.base::SequencedTaskRunner"* %2) #9
  tail call void @_ZN4mojo8internal17InterfacePtrStateIN7network5mojom5blink31CrossOriginOpenerPolicyReporterEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState"* %26) #9
  br label %39

29:                                               ; preds = %20, %8
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #9
  %30 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %30, label %39, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe.234", %"class.base::RefCountedThreadSafe.234"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw sub i32* %33, i32 1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %39

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe.234", %"class.base::RefCountedThreadSafe.234"* %32, i64 -2
  %38 = bitcast %"class.base::RefCountedThreadSafe.234"* %37 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %38) #9
  br label %39

39:                                               ; preds = %25, %29, %31, %36
  ret void
}

declare void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"*, %"struct.mojo::internal::PendingRemoteState"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal17InterfacePtrStateIN7network5mojom5blink31CrossOriginOpenerPolicyReporterEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.399", %"class.std::__1::unique_ptr.399"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*, %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"** %3, align 8
  %5 = icmp eq %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* %4, null
  br i1 %5, label %6, label %27

6:                                                ; preds = %1
  %7 = bitcast %"class.mojo::internal::InterfacePtrState"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  %8 = tail call i8* @_Znwm(i64 8) #17
  %9 = bitcast i8* %8 to %"class.mojo::PassThroughFilter"*
  tail call void @_ZN4mojo17PassThroughFilterC1Ev(%"class.mojo::PassThroughFilter"* nonnull %9) #9
  %10 = bitcast i8* %8 to %"class.mojo::MessageReceiver"*
  %11 = tail call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %7, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %10, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7network5mojom5blink31CrossOriginOpenerPolicyReporter5Name_E, i64 0, i64 0)) #9
  br i1 %11, label %12, label %27

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %14 = bitcast %"class.mojo::InterfaceEndpointClient"** %13 to %"class.mojo::MessageReceiverWithResponder"**
  %15 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %14, align 8
  %16 = tail call i8* @_Znwm(i64 16) #17
  %17 = bitcast i8* %16 to %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*
  tail call void @_ZN7network5mojom5blink36CrossOriginOpenerPolicyReporterProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* nonnull %17, %"class.mojo::MessageReceiverWithResponder"* %15) #9
  %18 = ptrtoint i8* %16 to i64
  %19 = load %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*, %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"** %3, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.399"* %2 to i64*
  store i64 %18, i64* %20, align 8
  %21 = icmp eq %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* %19, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %12
  %23 = bitcast %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* %19 to void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)***
  %24 = load void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)**, void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)*, void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)** %24, i64 1
  %26 = load void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)*, void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)** %25, align 8
  tail call void %26(%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* nonnull %19) #9
  br label %27

27:                                               ; preds = %1, %12, %22, %6
  ret void
}

declare zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"*, i1 zeroext, i1 zeroext, i1 zeroext, %"class.mojo::MessageReceiver"*, i8*) local_unnamed_addr #4

declare void @_ZN4mojo17PassThroughFilterC1Ev(%"class.mojo::PassThroughFilter"*) unnamed_addr #4

declare void @_ZN7network5mojom5blink36CrossOriginOpenerPolicyReporterProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*, %"class.mojo::MessageReceiverWithResponder"*) unnamed_addr #4

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #4

declare void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_9DOMWindowELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_9DOMWindowELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_9DOMWindowELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DOMWindow"**
  %4 = load %"class.blink::DOMWindow"*, %"class.blink::DOMWindow"** %3, align 8
  %5 = icmp eq %"class.blink::DOMWindow"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #9
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %4, i64 -1, i32 6, i32 0, i32 0, i32 1
  %20 = bitcast i32* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::DOMWindow"* null, %"class.blink::DOMWindow"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #9
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !3

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #9
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink9DOMWindowEFvRKN4util9TokenTypeINS3_25LocalFrameTokenTypeMarkerEEEEJNS3_14WeakPersistentIS4_EES8_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %3 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %2, i64 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.util::TokenType"*
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %2 to %"class.blink::DOMWindow"**
  %6 = load %"class.blink::DOMWindow"*, %"class.blink::DOMWindow"** %5, align 8
  %7 = icmp eq %"class.blink::DOMWindow"* %6, null
  br i1 %7, label %31, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %10 = bitcast %"class.blink::DOMWindow"* %6 to i8*
  %11 = bitcast %"class.base::internal::BindStateBase"* %9 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %14 = bitcast void ()** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds i8, i8* %10, i64 %15
  %17 = bitcast i8* %16 to %"class.blink::DOMWindow"*
  %18 = and i64 %12, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %8
  %21 = bitcast i8* %16 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = add i64 %12, -1
  %24 = getelementptr i8, i8* %22, i64 %23
  %25 = bitcast i8* %24 to void (%"class.blink::DOMWindow"*, %"class.util::TokenType"*)**
  %26 = load void (%"class.blink::DOMWindow"*, %"class.util::TokenType"*)*, void (%"class.blink::DOMWindow"*, %"class.util::TokenType"*)** %25, align 8
  br label %29

27:                                               ; preds = %8
  %28 = inttoptr i64 %12 to void (%"class.blink::DOMWindow"*, %"class.util::TokenType"*)*
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi void (%"class.blink::DOMWindow"*, %"class.util::TokenType"*)* [ %26, %20 ], [ %28, %27 ]
  tail call void %30(%"class.blink::DOMWindow"* %17, %"class.util::TokenType"* dereferenceable(16) %4) #9
  br label %31

31:                                               ; preds = %1, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink9DOMWindowEFvRKN4util9TokenTypeINS2_25LocalFrameTokenTypeMarkerEEEEJNS2_14WeakPersistentIS3_EES7_EEC2ISB_JSD_RS7_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"*, void ()*, { i64, i64 }* dereferenceable(16), %"class.blink::WeakPersistent"* dereferenceable(16), %"class.util::TokenType"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* %6, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink9DOMWindowEFvRKN4util9TokenTypeINS2_25LocalFrameTokenTypeMarkerEEEEJNS2_14WeakPersistentIS3_EES7_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink9DOMWindowEFvRKN4util9TokenTypeINS3_25LocalFrameTokenTypeMarkerEEEEJNS3_14WeakPersistentIS4_EES8_EEEEEbPKNS0_13BindStateBaseENSG_21CancellationQueryModeE) #9
  %7 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %8 = load <2 x i64>, <2 x i64>* %7, align 8
  %9 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 1, i32 0
  %10 = bitcast i64* %9 to <2 x i64>*
  store <2 x i64> %8, <2 x i64>* %10, align 8
  %11 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.blink::WeakPersistent"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::tuple"* %11 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %16, align 8
  switch i64 %14, label %17 [
    i64 0, label %43
    i64 -1, label %43
  ]

17:                                               ; preds = %5
  %18 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %19 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %18, i64 0, i32 1
  %20 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #9
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %24, !prof !3

22:                                               ; preds = %17
  %23 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %19, i8* %23) #9
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i8* [ %23, %22 ], [ %20, %17 ]
  %26 = bitcast i8* %25 to %"class.blink::ThreadState"**
  %27 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %27, i64 0, i32 4, i32 0, i32 0, i32 0
  %29 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %30, align 8
  %32 = icmp eq %"class.blink::PersistentNode"* %31, null
  br i1 %32, label %33, label %36, !prof !3

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %29, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %34) #9
  %35 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %30, align 8
  br label %36

36:                                               ; preds = %33, %24
  %37 = phi %"class.blink::PersistentNode"* [ %35, %33 ], [ %31, %24 ]
  %38 = bitcast %"class.blink::PersistentNode"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentRegion"* %29 to i64*
  store i64 %39, i64* %40, align 8
  %41 = bitcast %"class.blink::PersistentNode"* %37 to %"class.blink::PersistentBase.2155"**
  store %"class.blink::PersistentBase.2155"* %12, %"class.blink::PersistentBase.2155"** %41, align 8
  %42 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %37, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_9DOMWindowELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %42, align 8
  store %"class.blink::PersistentNode"* %37, %"class.blink::PersistentNode"** %16, align 8
  br label %43

43:                                               ; preds = %5, %5, %36
  %44 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 1
  %45 = bitcast %"class.std::__1::__tuple_leaf.2358"* %44 to i8*
  %46 = bitcast %"class.util::TokenType"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 16, i1 false) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink9DOMWindowEFvRKN4util9TokenTypeINS2_25LocalFrameTokenTypeMarkerEEEEJNS2_14WeakPersistentIS3_EES7_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #9
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !3

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #9
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #17
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink9DOMWindowEFvRKN4util9TokenTypeINS3_25LocalFrameTokenTypeMarkerEEEEJNS3_14WeakPersistentIS4_EES8_EEEEEbPKNS0_13BindStateBaseENSG_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  switch i32 %1, label %9 [
    i32 0, label %3
    i32 1, label %8
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::DOMWindow"**
  %6 = load %"class.blink::DOMWindow"*, %"class.blink::DOMWindow"** %5, align 8
  %7 = icmp eq %"class.blink::DOMWindow"* %6, null
  br label %9

8:                                                ; preds = %2
  br label %9

9:                                                ; preds = %2, %3, %8
  %10 = phi i1 [ true, %8 ], [ %7, %3 ], [ false, %2 ]
  ret i1 %10
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9DOMWindow17CoopAccessMonitorELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.224"*, %"struct.blink::DOMWindow::CoopAccessMonitor"* dereferenceable(88)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.224", %"class.WTF::Vector.224"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.224", %"class.WTF::Vector.224"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::DOMWindow::CoopAccessMonitor"*, %"struct.blink::DOMWindow::CoopAccessMonitor"** %6, align 8
  %8 = icmp ugt %"struct.blink::DOMWindow::CoopAccessMonitor"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::DOMWindow::CoopAccessMonitor"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.224", %"class.WTF::Vector.224"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::DOMWindow::CoopAccessMonitor"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9DOMWindow17CoopAccessMonitorEEEmm(i64 %27) #9
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9DOMWindow17CoopAccessMonitorEEEPKcv, i64 0, i64 0)) #9
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.224"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %28, 88
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"struct.blink::DOMWindow::CoopAccessMonitor"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink9DOMWindow17CoopAccessMonitorELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.224"* %0, i32 %22) #9
  %36 = load %"struct.blink::DOMWindow::CoopAccessMonitor"*, %"struct.blink::DOMWindow::CoopAccessMonitor"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"struct.blink::DOMWindow::CoopAccessMonitor"* %1 to i64
  %39 = ptrtoint %"struct.blink::DOMWindow::CoopAccessMonitor"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = sdiv exact i64 %40, 88
  %42 = getelementptr inbounds %"class.WTF::Vector.224", %"class.WTF::Vector.224"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !2

52:                                               ; preds = %37
  %53 = icmp eq %"struct.blink::DOMWindow::CoopAccessMonitor"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9DOMWindow17CoopAccessMonitorEEEmm(i64 %55) #9
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9DOMWindow17CoopAccessMonitorEEEPKcv, i64 0, i64 0)) #9
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.224"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = udiv i64 %56, 88
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"struct.blink::DOMWindow::CoopAccessMonitor"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink9DOMWindow17CoopAccessMonitorELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.224"* %0, i32 %50) #9
  %64 = load %"struct.blink::DOMWindow::CoopAccessMonitor"*, %"struct.blink::DOMWindow::CoopAccessMonitor"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"struct.blink::DOMWindow::CoopAccessMonitor"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"struct.blink::DOMWindow::CoopAccessMonitor"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"struct.blink::DOMWindow::CoopAccessMonitor"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %69, i64 %72, i32 0
  %74 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %70, i64 0, i32 0
  %75 = load i32, i32* %74, align 8
  store i32 %75, i32* %73, align 8
  %76 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %69, i64 %72, i32 1
  %77 = bitcast %"class.util::TokenType"* %76 to i8*
  %78 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %70, i64 0, i32 1
  %79 = bitcast %"class.util::TokenType"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %79, i64 16, i1 false) #9
  %80 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %69, i64 %72, i32 2
  %81 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %70, i64 0, i32 2
  %82 = bitcast %"class.mojo::Remote"* %80 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %82) #9
  %83 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %69, i64 %72, i32 2, i32 0, i32 1
  %84 = bitcast %"class.std::__1::unique_ptr.399"* %83 to i64*
  store i64 0, i64* %84, align 8
  %85 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %70, i64 0, i32 2, i32 0, i32 1
  %86 = bitcast %"class.std::__1::unique_ptr.399"* %85 to i64*
  %87 = load i64, i64* %86, align 8
  store i64 0, i64* %86, align 8
  store i64 %87, i64* %84, align 8
  %88 = bitcast %"class.mojo::Remote"* %81 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %82, %"class.mojo::internal::InterfacePtrStateBase"* %88) #9
  %89 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %69, i64 %72, i32 3
  %90 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %70, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !4
  store i8 %91, i8* %89, align 8
  %92 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %69, i64 %72, i32 4
  %93 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %70, i64 0, i32 4
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %93, i64 0, i32 0, i32 0
  %95 = bitcast %"class.WTF::String"* %93 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.WTF::String"* %92 to i64*
  store i64 %96, i64* %97, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %94, align 8
  %98 = load i32, i32* %3, align 4
  %99 = add i32 %98, 1
  store i32 %99, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9DOMWindow17CoopAccessMonitorELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.224"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %56

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.224", %"class.WTF::Vector.224"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::DOMWindow::CoopAccessMonitor"*, %"struct.blink::DOMWindow::CoopAccessMonitor"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.224", %"class.WTF::Vector.224"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.224"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.224", %"class.WTF::Vector.224"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %54, label %14

14:                                               ; preds = %4, %50
  %15 = phi %"struct.blink::DOMWindow::CoopAccessMonitor"* [ %52, %50 ], [ %6, %4 ]
  %16 = phi %"struct.blink::DOMWindow::CoopAccessMonitor"* [ %51, %50 ], [ null, %4 ]
  %17 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %16, i64 0, i32 0
  %18 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %15, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %17, align 8
  %20 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %16, i64 0, i32 1
  %21 = bitcast %"class.util::TokenType"* %20 to i8*
  %22 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %15, i64 0, i32 1
  %23 = bitcast %"class.util::TokenType"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %23, i64 16, i1 false) #9
  %24 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %16, i64 0, i32 2
  %25 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %15, i64 0, i32 2
  %26 = bitcast %"class.mojo::Remote"* %24 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %26) #9
  %27 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %16, i64 0, i32 2, i32 0, i32 1
  %28 = bitcast %"class.std::__1::unique_ptr.399"* %27 to i64*
  store i64 0, i64* %28, align 8
  %29 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %15, i64 0, i32 2, i32 0, i32 1
  %30 = bitcast %"class.std::__1::unique_ptr.399"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  store i64 0, i64* %30, align 8
  store i64 %31, i64* %28, align 8
  %32 = bitcast %"class.mojo::Remote"* %25 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %26, %"class.mojo::internal::InterfacePtrStateBase"* %32) #9
  %33 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %16, i64 0, i32 3
  %34 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %15, i64 0, i32 3
  %35 = load i8, i8* %34, align 8, !range !4
  store i8 %35, i8* %33, align 8
  %36 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %16, i64 0, i32 4
  %37 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %15, i64 0, i32 4
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 0, i32 0, i32 0
  %39 = bitcast %"class.WTF::String"* %37 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.WTF::String"* %36 to i64*
  store i64 %40, i64* %41, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %38, align 8
  %42 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %15, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*, %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"** %42, align 8
  store %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* null, %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"** %42, align 8
  %44 = icmp eq %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %14
  %46 = bitcast %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* %43 to void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)***
  %47 = load void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)**, void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)*, void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)** %47, i64 1
  %49 = load void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)*, void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)** %48, align 8
  tail call void %49(%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* nonnull %43) #9
  br label %50

50:                                               ; preds = %45, %14
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %32) #9
  %51 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %16, i64 1
  %52 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %15, i64 1
  %53 = icmp eq %"struct.blink::DOMWindow::CoopAccessMonitor"* %52, %10
  br i1 %53, label %54, label %14

54:                                               ; preds = %50, %4
  %55 = bitcast %"struct.blink::DOMWindow::CoopAccessMonitor"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %55) #9
  br label %121

56:                                               ; preds = %2
  %57 = zext i32 %1 to i64
  %58 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9DOMWindow17CoopAccessMonitorEEEmm(i64 %57) #9
  %59 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %58, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9DOMWindow17CoopAccessMonitorEEEPKcv, i64 0, i64 0)) #9
  %60 = udiv i64 %58, 88
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"class.WTF::Vector.224", %"class.WTF::Vector.224"* %0, i64 0, i32 0, i32 0, i32 0
  %63 = load %"struct.blink::DOMWindow::CoopAccessMonitor"*, %"struct.blink::DOMWindow::CoopAccessMonitor"** %62, align 8
  %64 = getelementptr inbounds %"class.WTF::Vector.224", %"class.WTF::Vector.224"* %0, i64 0, i32 0, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %63, i64 %66
  %68 = icmp eq i32 %65, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %56
  %70 = bitcast %"struct.blink::DOMWindow::CoopAccessMonitor"* %63 to i8*
  br label %116

71:                                               ; preds = %56
  %72 = bitcast i8* %59 to %"struct.blink::DOMWindow::CoopAccessMonitor"*
  br label %73

73:                                               ; preds = %71, %109
  %74 = phi %"struct.blink::DOMWindow::CoopAccessMonitor"* [ %111, %109 ], [ %63, %71 ]
  %75 = phi %"struct.blink::DOMWindow::CoopAccessMonitor"* [ %110, %109 ], [ %72, %71 ]
  %76 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %75, i64 0, i32 0
  %77 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %74, i64 0, i32 0
  %78 = load i32, i32* %77, align 8
  store i32 %78, i32* %76, align 8
  %79 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %75, i64 0, i32 1
  %80 = bitcast %"class.util::TokenType"* %79 to i8*
  %81 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %74, i64 0, i32 1
  %82 = bitcast %"class.util::TokenType"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %82, i64 16, i1 false) #9
  %83 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %75, i64 0, i32 2
  %84 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %74, i64 0, i32 2
  %85 = bitcast %"class.mojo::Remote"* %83 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %85) #9
  %86 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %75, i64 0, i32 2, i32 0, i32 1
  %87 = bitcast %"class.std::__1::unique_ptr.399"* %86 to i64*
  store i64 0, i64* %87, align 8
  %88 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %74, i64 0, i32 2, i32 0, i32 1
  %89 = bitcast %"class.std::__1::unique_ptr.399"* %88 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 0, i64* %89, align 8
  store i64 %90, i64* %87, align 8
  %91 = bitcast %"class.mojo::Remote"* %84 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %85, %"class.mojo::internal::InterfacePtrStateBase"* %91) #9
  %92 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %75, i64 0, i32 3
  %93 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %74, i64 0, i32 3
  %94 = load i8, i8* %93, align 8, !range !4
  store i8 %94, i8* %92, align 8
  %95 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %75, i64 0, i32 4
  %96 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %74, i64 0, i32 4
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 0, i32 0, i32 0
  %98 = bitcast %"class.WTF::String"* %96 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.WTF::String"* %95 to i64*
  store i64 %99, i64* %100, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %97, align 8
  %101 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %74, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %102 = load %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*, %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"** %101, align 8
  store %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* null, %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"** %101, align 8
  %103 = icmp eq %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* %102, null
  br i1 %103, label %109, label %104

104:                                              ; preds = %73
  %105 = bitcast %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* %102 to void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)***
  %106 = load void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)**, void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)*, void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)** %106, i64 1
  %108 = load void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)*, void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)** %107, align 8
  tail call void %108(%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* nonnull %102) #9
  br label %109

109:                                              ; preds = %104, %73
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %91) #9
  %110 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %75, i64 1
  %111 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %74, i64 1
  %112 = icmp eq %"struct.blink::DOMWindow::CoopAccessMonitor"* %111, %67
  br i1 %112, label %113, label %73

113:                                              ; preds = %109
  %114 = bitcast %"class.WTF::Vector.224"* %0 to i8**
  %115 = load i8*, i8** %114, align 8
  br label %116

116:                                              ; preds = %69, %113
  %117 = phi i8* [ %115, %113 ], [ %70, %69 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %117) #9
  %118 = bitcast %"class.WTF::Vector.224"* %0 to i64*
  store atomic i64 %61, i64* %118 monotonic, align 8
  %119 = trunc i64 %60 to i32
  %120 = getelementptr inbounds %"class.WTF::Vector.224", %"class.WTF::Vector.224"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %119, i32* %120, align 8
  br label %121

121:                                              ; preds = %116, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9DOMWindow17CoopAccessMonitorEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 24379392
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 24379392) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.47, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.48, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = mul i64 %0, 88
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

declare void @_ZN7network5mojom5blink14SourceLocationC1ERKN3WTF6StringEjj(%"class.network::mojom::blink::SourceLocation"*, %"class.WTF::String"* dereferenceable(8), i32, i32) unnamed_addr #4

declare void @_ZN7network5mojom5blink14SourceLocationC1Ev(%"class.network::mojom::blink::SourceLocation"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14swapIN7network5mojom5blink14SourceLocationEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.network::mojom::blink::SourceLocation"* dereferenceable(16), %"class.network::mojom::blink::SourceLocation"* dereferenceable(16)) local_unnamed_addr #8 comdat {
  %3 = alloca %"class.network::mojom::blink::SourceLocation", align 8
  %4 = bitcast %"class.network::mojom::blink::SourceLocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.network::mojom::blink::SourceLocation", %"class.network::mojom::blink::SourceLocation"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.network::mojom::blink::SourceLocation", %"class.network::mojom::blink::SourceLocation"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.network::mojom::blink::SourceLocation", %"class.network::mojom::blink::SourceLocation"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.network::mojom::blink::SourceLocation", %"class.network::mojom::blink::SourceLocation"* %3, i64 0, i32 1
  %9 = bitcast i32* %8 to i64*
  store i64 -6148914691236517206, i64* %9, align 8
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %5, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #9
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  tail call void @llvm.trap() #9
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %2, %12, %27
  %30 = getelementptr inbounds %"class.network::mojom::blink::SourceLocation", %"class.network::mojom::blink::SourceLocation"* %0, i64 0, i32 1
  %31 = bitcast i32* %30 to i64*
  %32 = bitcast i32* %6 to i64*
  %33 = load i64, i64* %31, align 8
  store i64 %33, i64* %32, align 8
  %34 = getelementptr inbounds %"class.network::mojom::blink::SourceLocation", %"class.network::mojom::blink::SourceLocation"* %1, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %54, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i33
  %46 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #9
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !3

51:                                               ; preds = %42
  tail call void @llvm.trap() #9
  unreachable

52:                                               ; preds = %42
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %43, align 4
  br label %54

54:                                               ; preds = %52, %37, %29
  %55 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %56 = bitcast %"class.network::mojom::blink::SourceLocation"* %0 to i64*
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %55, i64* %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #9
  br label %72

72:                                               ; preds = %54, %68, %71
  %73 = getelementptr inbounds %"class.network::mojom::blink::SourceLocation", %"class.network::mojom::blink::SourceLocation"* %1, i64 0, i32 1
  %74 = bitcast i32* %73 to i64*
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %31, align 8
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %95, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i33
  %87 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #9
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !3

92:                                               ; preds = %83
  tail call void @llvm.trap() #9
  unreachable

93:                                               ; preds = %83
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %84, align 4
  br label %95

95:                                               ; preds = %93, %78, %72
  %96 = ptrtoint %"class.WTF::StringImpl"* %76 to i64
  %97 = bitcast %"class.network::mojom::blink::SourceLocation"* %1 to i64*
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  store i64 %96, i64* %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #9
  br label %113

113:                                              ; preds = %95, %109, %112
  %114 = load i64, i64* %32, align 8
  store i64 %114, i64* %74, align 8
  call void @_ZN7network5mojom5blink14SourceLocationD1Ev(%"class.network::mojom::blink::SourceLocation"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #9
  ret void
}

declare void @_ZN5blink29CoopAccessViolationReportBodyC1ENSt3__110unique_ptrINS_14SourceLocationENS1_14default_deleteIS3_EEEEN7network5mojom20CoopAccessReportTypeERKN3WTF6StringESD_(%"class.blink::CoopAccessViolationReportBody"*, %"class.blink::SourceLocation"*, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Report"* @_ZN5blink25MakeGarbageCollectedTraitINS_6ReportEE4CallIJRA22_KcRKN3WTF6StringEPNS_29CoopAccessViolationReportBodyEEEEPS1_DpOT_([22 x i8]* dereferenceable(22), %"class.WTF::String"* dereferenceable(8), %"class.blink::CoopAccessViolationReportBody"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 40) #9
  %6 = bitcast i8* %5 to %"class.blink::Report"*
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = getelementptr inbounds [22 x i8], [22 x i8]* %0, i64 0, i64 0
  %9 = icmp eq [22 x i8]* %0, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = tail call i64 @strlen(i8* nonnull %8) #16
  br label %12

12:                                               ; preds = %3, %10
  %13 = phi i64 [ %11, %10 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %8, i64 %13) #9
  %14 = bitcast %"class.blink::CoopAccessViolationReportBody"** %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast i8* %5 to i32 (...)***
  %17 = getelementptr inbounds i8, i8* %5, i64 8
  %18 = bitcast i8* %17 to i64**
  store i64* null, i64** %18, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink6ReportE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = getelementptr inbounds i8, i8* %5, i64 16
  %22 = bitcast i8* %21 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %22, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %23, label %41, label %24

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %41

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i33
  %33 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #9
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !3

38:                                               ; preds = %29
  call void @llvm.trap() #9
  unreachable

39:                                               ; preds = %29
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %30, align 4
  br label %41

41:                                               ; preds = %39, %24, %12
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = getelementptr inbounds i8, i8* %5, i64 24
  %45 = bitcast i8* %44 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %45, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #9
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !3

61:                                               ; preds = %52
  call void @llvm.trap() #9
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %41, %47, %62
  %65 = getelementptr inbounds i8, i8* %5, i64 32
  %66 = bitcast i8* %65 to i64*
  store i64 %15, i64* %66, align 8
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #9
  br label %82

82:                                               ; preds = %64, %78, %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  %83 = getelementptr inbounds i8, i8* %5, i64 -4
  %84 = bitcast i8* %83 to i16*
  %85 = load atomic i16, i16* %84 monotonic, align 2
  %86 = or i16 %85, 1
  store atomic i16 %86, i16* %84 release, align 2
  ret %"class.blink::Report"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink6ReportD2Ev(%"class.blink::Report"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Report", %"class.blink::Report"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink6ReportE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::Report", %"class.blink::Report"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #9
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::Report", %"class.blink::Report"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #9
  br label %36

36:                                               ; preds = %19, %32, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink6ReportD0Ev(%"class.blink::Report"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Report", %"class.blink::Report"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink6ReportE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::Report", %"class.blink::Report"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #9
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds %"class.blink::Report", %"class.blink::Report"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #9
  br label %36

36:                                               ; preds = %19, %32, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink6Report5TraceEPNS_7VisitorE(%"class.blink::Report"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::Report", %"class.blink::Report"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member.2186"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10ReportBodyEE5TraceEPNS_7VisitorEPKv) #9
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::Report", %"class.blink::Report"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %14, %"class.blink::Visitor"* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink6Report18GetWrapperTypeInfoEv(%"class.blink::Report"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink6Report18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10ReportBodyEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9DOMWindow17CoopAccessMonitorELj0ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector.224"*, i32) local_unnamed_addr #8 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.224", %"class.WTF::Vector.224"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.49, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.45, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.224", %"class.WTF::Vector.224"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::DOMWindow::CoopAccessMonitor"*, %"struct.blink::DOMWindow::CoopAccessMonitor"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %24, i64 %25
  %27 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %24, i64 %25, i32 4, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #9
  br label %43

43:                                               ; preds = %42, %39, %22
  %44 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %24, i64 %25, i32 2
  %45 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %24, i64 %25, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %46 = load %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*, %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"** %45, align 8
  store %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* null, %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"** %45, align 8
  %47 = icmp eq %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = bitcast %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* %46 to void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)***
  %50 = load void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)**, void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)*, void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)** %50, i64 1
  %52 = load void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)*, void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)** %51, align 8
  call void %52(%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* nonnull %46) #9
  br label %53

53:                                               ; preds = %43, %48
  %54 = bitcast %"class.mojo::Remote"* %44 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %54) #9
  %55 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %26, i64 1
  %56 = load %"struct.blink::DOMWindow::CoopAccessMonitor"*, %"struct.blink::DOMWindow::CoopAccessMonitor"** %23, align 8
  %57 = load i32, i32* %8, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %56, i64 %58
  call void @_ZN3WTF11VectorMoverILb0EN5blink9DOMWindow17CoopAccessMonitorENS_18PartitionAllocatorEE15MoveOverlappingEPS3_S6_S6_b(%"struct.blink::DOMWindow::CoopAccessMonitor"* %55, %"struct.blink::DOMWindow::CoopAccessMonitor"* %59, %"struct.blink::DOMWindow::CoopAccessMonitor"* %26, i1 zeroext true) #9
  %60 = load i32, i32* %8, align 4
  %61 = add i32 %60, -1
  store i32 %61, i32* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF11VectorMoverILb0EN5blink9DOMWindow17CoopAccessMonitorENS_18PartitionAllocatorEE15MoveOverlappingEPS3_S6_S6_b(%"struct.blink::DOMWindow::CoopAccessMonitor"*, %"struct.blink::DOMWindow::CoopAccessMonitor"*, %"struct.blink::DOMWindow::CoopAccessMonitor"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp ugt %"struct.blink::DOMWindow::CoopAccessMonitor"* %0, %2
  br i1 %5, label %6, label %48

6:                                                ; preds = %4
  %7 = icmp eq %"struct.blink::DOMWindow::CoopAccessMonitor"* %0, %1
  br i1 %7, label %96, label %8

8:                                                ; preds = %6, %44
  %9 = phi %"struct.blink::DOMWindow::CoopAccessMonitor"* [ %46, %44 ], [ %0, %6 ]
  %10 = phi %"struct.blink::DOMWindow::CoopAccessMonitor"* [ %45, %44 ], [ %2, %6 ]
  %11 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %10, i64 0, i32 0
  %12 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %9, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  store i32 %13, i32* %11, align 8
  %14 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %10, i64 0, i32 1
  %15 = bitcast %"class.util::TokenType"* %14 to i8*
  %16 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %9, i64 0, i32 1
  %17 = bitcast %"class.util::TokenType"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %17, i64 16, i1 false) #9
  %18 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %10, i64 0, i32 2
  %19 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %9, i64 0, i32 2
  %20 = bitcast %"class.mojo::Remote"* %18 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %20) #9
  %21 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %10, i64 0, i32 2, i32 0, i32 1
  %22 = bitcast %"class.std::__1::unique_ptr.399"* %21 to i64*
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %9, i64 0, i32 2, i32 0, i32 1
  %24 = bitcast %"class.std::__1::unique_ptr.399"* %23 to i64*
  %25 = load i64, i64* %24, align 8
  store i64 0, i64* %24, align 8
  store i64 %25, i64* %22, align 8
  %26 = bitcast %"class.mojo::Remote"* %19 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %20, %"class.mojo::internal::InterfacePtrStateBase"* %26) #9
  %27 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %10, i64 0, i32 3
  %28 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %9, i64 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !4
  store i8 %29, i8* %27, align 8
  %30 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %10, i64 0, i32 4
  %31 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %9, i64 0, i32 4
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 0, i32 0, i32 0
  %33 = bitcast %"class.WTF::String"* %31 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.WTF::String"* %30 to i64*
  store i64 %34, i64* %35, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %32, align 8
  %36 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %9, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*, %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"** %36, align 8
  store %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* null, %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"** %36, align 8
  %38 = icmp eq %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %8
  %40 = bitcast %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* %37 to void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)***
  %41 = load void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)**, void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)*, void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)** %41, i64 1
  %43 = load void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)*, void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)** %42, align 8
  tail call void %43(%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* nonnull %37) #9
  br label %44

44:                                               ; preds = %39, %8
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %26) #9
  %45 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %10, i64 1
  %46 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %9, i64 1
  %47 = icmp eq %"struct.blink::DOMWindow::CoopAccessMonitor"* %46, %1
  br i1 %47, label %96, label %8

48:                                               ; preds = %4
  %49 = icmp eq %"struct.blink::DOMWindow::CoopAccessMonitor"* %1, %0
  br i1 %49, label %96, label %50

50:                                               ; preds = %48
  %51 = ptrtoint %"struct.blink::DOMWindow::CoopAccessMonitor"* %1 to i64
  %52 = ptrtoint %"struct.blink::DOMWindow::CoopAccessMonitor"* %0 to i64
  %53 = sub i64 %51, %52
  %54 = sdiv exact i64 %53, 88
  %55 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %2, i64 %54
  br label %56

56:                                               ; preds = %94, %50
  %57 = phi %"struct.blink::DOMWindow::CoopAccessMonitor"* [ %60, %94 ], [ %55, %50 ]
  %58 = phi %"struct.blink::DOMWindow::CoopAccessMonitor"* [ %59, %94 ], [ %1, %50 ]
  %59 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %58, i64 -1
  %60 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %57, i64 -1
  %61 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %60, i64 0, i32 0
  %62 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %59, i64 0, i32 0
  %63 = load i32, i32* %62, align 8
  store i32 %63, i32* %61, align 8
  %64 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %57, i64 -1, i32 1
  %65 = bitcast %"class.util::TokenType"* %64 to i8*
  %66 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %58, i64 -1, i32 1
  %67 = bitcast %"class.util::TokenType"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %67, i64 16, i1 false) #9
  %68 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %57, i64 -1, i32 2
  %69 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %58, i64 -1, i32 2
  %70 = bitcast %"class.mojo::Remote"* %68 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %70) #9
  %71 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %57, i64 -1, i32 2, i32 0, i32 1
  %72 = bitcast %"class.std::__1::unique_ptr.399"* %71 to i64*
  store i64 0, i64* %72, align 8
  %73 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %58, i64 -1, i32 2, i32 0, i32 1
  %74 = bitcast %"class.std::__1::unique_ptr.399"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  store i64 0, i64* %74, align 8
  store i64 %75, i64* %72, align 8
  %76 = bitcast %"class.mojo::Remote"* %69 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %70, %"class.mojo::internal::InterfacePtrStateBase"* %76) #9
  %77 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %57, i64 -1, i32 3
  %78 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %58, i64 -1, i32 3
  %79 = load i8, i8* %78, align 8, !range !4
  store i8 %79, i8* %77, align 8
  %80 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %57, i64 -1, i32 4
  %81 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %58, i64 -1, i32 4
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %81, i64 0, i32 0, i32 0
  %83 = bitcast %"class.WTF::String"* %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.WTF::String"* %80 to i64*
  store i64 %84, i64* %85, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %82, align 8
  %86 = getelementptr inbounds %"struct.blink::DOMWindow::CoopAccessMonitor", %"struct.blink::DOMWindow::CoopAccessMonitor"* %58, i64 -1, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %87 = load %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*, %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"** %86, align 8
  store %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* null, %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"** %86, align 8
  %88 = icmp eq %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* %87, null
  br i1 %88, label %94, label %89

89:                                               ; preds = %56
  %90 = bitcast %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* %87 to void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)***
  %91 = load void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)**, void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)*, void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)** %91, i64 1
  %93 = load void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)*, void (%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"*)** %92, align 8
  tail call void %93(%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* nonnull %87) #9
  br label %94

94:                                               ; preds = %56, %89
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %76) #9
  %95 = icmp eq %"struct.blink::DOMWindow::CoopAccessMonitor"* %59, %0
  br i1 %95, label %96, label %56

96:                                               ; preds = %94, %44, %48, %6
  ret void
}

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_5FrameEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Frame"*
  %4 = bitcast i8* %1 to void (%"class.blink::Frame"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Frame"*, %"class.blink::Visitor"*)**, void (%"class.blink::Frame"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Frame"*, %"class.blink::Visitor"*)*, void (%"class.blink::Frame"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::Frame"*, %"class.blink::Visitor"*)*, void (%"class.blink::Frame"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Frame"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18WindowProxyManagerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WindowProxyManager"*
  tail call void @_ZNK5blink18WindowProxyManager5TraceEPNS_7VisitorE(%"class.blink::WindowProxyManager"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink18WindowProxyManager5TraceEPNS_7VisitorE(%"class.blink::WindowProxyManager"*, %"class.blink::Visitor"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8LocationEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Location"*
  tail call void @_ZNK5blink8Location5TraceEPNS_7VisitorE(%"class.blink::Location"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink8Location5TraceEPNS_7VisitorE(%"class.blink::Location"*, %"class.blink::Visitor"*) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone speculatable }
attributes #14 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn nounwind }
attributes #16 = { nounwind readonly }
attributes #17 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZNK5blink10MultiTokenIN4util9TokenTypeINS_25LocalFrameTokenTypeMarkerEEENS2_INS_26RemoteFrameTokenTypeMarkerEEEJEE5GetAsIS4_vEET_v: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink10MultiTokenIN4util9TokenTypeINS_25LocalFrameTokenTypeMarkerEEENS2_INS_26RemoteFrameTokenTypeMarkerEEEJEE5GetAsIS4_vEET_v"}
!8 = distinct !{!8, !9, !"_ZNK5blink10LocalFrame18GetLocalFrameTokenEv: argument 0"}
!9 = distinct !{!9, !"_ZNK5blink10LocalFrame18GetLocalFrameTokenEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN7network5mojom5blink14SourceLocation3NewIJKN3WTF6StringEjjEEEN4mojo16InlinedStructPtrIS2_EEDpOT_: argument 0"}
!12 = distinct !{!12, !"_ZN7network5mojom5blink14SourceLocation3NewIJKN3WTF6StringEjjEEEN4mojo16InlinedStructPtrIS2_EEDpOT_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!15 = distinct !{!15, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!18 = distinct !{!18, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!21 = distinct !{!21, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!24 = distinct !{!24, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!27 = distinct !{!27, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!30 = distinct !{!30, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!33 = distinct !{!33, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!36 = distinct !{!36, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!39 = distinct !{!39, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_: argument 0"}
!42 = distinct !{!42, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_: argument 0"}
!45 = distinct !{!45, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_: argument 0"}
!48 = distinct !{!48, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_: argument 0"}
!51 = distinct !{!51, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_"}
!52 = !{!53, !55}
!53 = distinct !{!53, !54, !"_ZNK5blink10MultiTokenIN4util9TokenTypeINS_25LocalFrameTokenTypeMarkerEEENS2_INS_26RemoteFrameTokenTypeMarkerEEEJEE5GetAsIS4_vEET_v: argument 0"}
!54 = distinct !{!54, !"_ZNK5blink10MultiTokenIN4util9TokenTypeINS_25LocalFrameTokenTypeMarkerEEENS2_INS_26RemoteFrameTokenTypeMarkerEEEJEE5GetAsIS4_vEET_v"}
!55 = distinct !{!55, !56, !"_ZNK5blink10LocalFrame18GetLocalFrameTokenEv: argument 0"}
!56 = distinct !{!56, !"_ZNK5blink10LocalFrame18GetLocalFrameTokenEv"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZN5blink18WrapWeakPersistentINS_9DOMWindowEEENS_14WeakPersistentIT_EEPS3_: argument 0"}
!59 = distinct !{!59, !"_ZN5blink18WrapWeakPersistentINS_9DOMWindowEEENS_14WeakPersistentIT_EEPS3_"}
!60 = !{!61, !63, !65}
!61 = distinct !{!61, !62, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink9DOMWindowEFvRKN4util9TokenTypeINS3_25LocalFrameTokenTypeMarkerEEEEJNS3_14WeakPersistentIS4_EERS8_EEEDcOT0_DpOT1_: argument 0"}
!62 = distinct !{!62, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink9DOMWindowEFvRKN4util9TokenTypeINS3_25LocalFrameTokenTypeMarkerEEEEJNS3_14WeakPersistentIS4_EERS8_EEEDcOT0_DpOT1_"}
!63 = distinct !{!63, !64, !"_ZN4base8BindOnceIMN5blink9DOMWindowEFvRKN4util9TokenTypeINS1_25LocalFrameTokenTypeMarkerEEEEJNS1_14WeakPersistentIS2_EERS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!64 = distinct !{!64, !"_ZN4base8BindOnceIMN5blink9DOMWindowEFvRKN4util9TokenTypeINS1_25LocalFrameTokenTypeMarkerEEEEJNS1_14WeakPersistentIS2_EERS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!65 = distinct !{!65, !66, !"_ZN3WTF4BindIMN5blink9DOMWindowEFvRKN4util9TokenTypeINS1_25LocalFrameTokenTypeMarkerEEEEJNS1_14WeakPersistentIS2_EERS6_EFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!66 = distinct !{!66, !"_ZN3WTF4BindIMN5blink9DOMWindowEFvRKN4util9TokenTypeINS1_25LocalFrameTokenTypeMarkerEEEEJNS1_14WeakPersistentIS2_EERS6_EFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
