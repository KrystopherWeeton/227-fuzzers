; ModuleID = '../../cc/raster/raster_buffer_provider.cc'
source_filename = "../../cc/raster/raster_buffer_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%class.SkPaint = type <{ %class.sk_sp.22, %class.sk_sp.23, %class.sk_sp.24, %class.sk_sp.25, %class.sk_sp.26, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.22 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.23 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.24 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type opaque
%class.sk_sp.25 = type { %class.SkColorFilter* }
%class.SkColorFilter = type opaque
%class.sk_sp.26 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%"class.cc::RasterBufferProvider" = type { i32 (...)** }
%"class.gfx::Size" = type { i32, i32 }
%"class.cc::RasterSource" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], i64, %class.scoped_refptr, i32, i8, i8, [2 x i8], i32, %"class.gfx::Rect", %"class.gfx::Size", i32, float, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%class.scoped_refptr = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::AxisTransform2d" = type { %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"class.gfx::Vector2dF" = type { float, float }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"struct.cc::RasterSource::PlaybackSettings" = type { i8, i32, %"class.cc::ImageProvider"* }
%"class.cc::ImageProvider" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%class.sk_sp.6 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.7, [384 x i64], %class.sk_sp.8, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.10" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.7 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.8 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::WaitableEvent" = type opaque

$_ZN2cc20RasterBufferProvider16SetShutdownEventEPN4base13WaitableEventE = comdat any

@_ZTVN2cc20RasterBufferProviderE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::RasterBufferProvider"*)* @_ZN2cc20RasterBufferProviderD2Ev to i8*), i8* bitcast (void (%"class.cc::RasterBufferProvider"*)* @_ZN2cc20RasterBufferProviderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.cc::RasterBufferProvider"*, %"class.base::WaitableEvent"*)* @_ZN2cc20RasterBufferProvider16SetShutdownEventEPN4base13WaitableEventE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [39 x i8] c"RasterBufferProvider::PlaybackToMemory\00", align 1
@.str.1 = private unnamed_addr constant [42 x i8] c"../../cc/raster/raster_buffer_provider.cc\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"surface\00", align 1
@.str.3 = private unnamed_addr constant [56 x i8] c"RasterBufferProvider::PlaybackToMemory::ConvertRGBA4444\00", align 1
@__const._ZN2cc20RasterBufferProvider16PlaybackToMemoryEPvN3viz14ResourceFormatERKN3gfx4SizeEmPKNS_12RasterSourceERKNS4_4RectESD_RKNS4_15AxisTransform2dERKNS4_10ColorSpaceEbRKNS8_16PlaybackSettingsE.paint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.22 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.23 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.24 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.25 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.26 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8

@_ZN2cc20RasterBufferProviderD1Ev = hidden unnamed_addr alias void (%"class.cc::RasterBufferProvider"*), void (%"class.cc::RasterBufferProvider"*)* @_ZN2cc20RasterBufferProviderD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc20RasterBufferProviderC2Ev(%"class.cc::RasterBufferProvider"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::RasterBufferProvider", %"class.cc::RasterBufferProvider"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN2cc20RasterBufferProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2cc20RasterBufferProviderD2Ev(%"class.cc::RasterBufferProvider"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2cc20RasterBufferProviderD0Ev(%"class.cc::RasterBufferProvider"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20RasterBufferProvider16PlaybackToMemoryEPvN3viz14ResourceFormatERKN3gfx4SizeEmPKNS_12RasterSourceERKNS4_4RectESD_RKNS4_15AxisTransform2dERKNS4_10ColorSpaceEbRKNS8_16PlaybackSettingsE(i8*, i32, %"class.gfx::Size"* nocapture readonly dereferenceable(8), i64, %"class.cc::RasterSource"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::AxisTransform2d"* dereferenceable(16), %"class.gfx::ColorSpace"* dereferenceable(68), i1 zeroext, %"struct.cc::RasterSource::PlaybackSettings"* dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %12 = alloca %"class.base::TimeTicks", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = alloca %struct.SkImageInfo, align 8
  %15 = alloca %class.sk_sp, align 8
  %16 = alloca %class.SkSurfaceProps, align 4
  %17 = alloca %class.SkSurfaceProps, align 4
  %18 = alloca i64, align 8
  %19 = bitcast i64* %18 to %"class.gfx::Size"*
  %20 = alloca %class.sk_sp.6, align 8
  %21 = alloca %"class.logging::CheckError", align 8
  %22 = alloca %class.sk_sp.6, align 8
  %23 = alloca %struct.SkImageInfo, align 8
  %24 = alloca %class.SkPaint, align 8
  %25 = alloca %struct.SkSamplingOptions, align 4
  %26 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), align 16
  %27 = and i8 %26, 25
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %35, label %29, !prof !2

29:                                               ; preds = %11
  %30 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %31 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %33 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %33, i64* %32, align 8
  %34 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %30, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* null, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10
  br label %35

35:                                               ; preds = %29, %11
  %36 = phi i8* [ null, %11 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), %29 ]
  %37 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %11 ], [ getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), %29 ]
  %38 = phi i64 [ -6148914691236517206, %11 ], [ %34, %29 ]
  %39 = call i32 @_ZN3viz34ResourceFormatToClosestSkColorTypeEbNS_14ResourceFormatE(i1 zeroext %9, i32 %1) #10
  %40 = bitcast %struct.SkImageInfo* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #10
  %41 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %14, i64 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %14, i64 0, i32 0, i32 1
  %43 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %14, i64 0, i32 0, i32 2
  %44 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %14, i64 0, i32 1, i32 0
  %45 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  call void @_ZNK3gfx10ColorSpace14ToSkColorSpaceEv(%class.sk_sp* nonnull sret %15, %"class.gfx::ColorSpace"* %8) #10
  %49 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %15, i64 0, i32 0
  %50 = bitcast %class.sk_sp* %15 to i64*
  %51 = load i64, i64* %50, align 8, !noalias !3
  store %class.SkColorSpace* null, %class.SkColorSpace** %49, align 8, !noalias !3
  %52 = zext i32 %39 to i64
  %53 = or i64 %52, 8589934592
  %54 = zext i32 %48 to i64
  %55 = shl nuw i64 %54, 32
  %56 = zext i32 %46 to i64
  %57 = or i64 %55, %56
  %58 = bitcast %struct.SkImageInfo* %14 to i64*
  store i64 %51, i64* %58, align 8, !alias.scope !3
  %59 = bitcast i32* %42 to i64*
  store i64 %53, i64* %59, align 8, !alias.scope !3
  %60 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %14, i64 0, i32 1
  %61 = bitcast %struct.SkISize* %60 to i64*
  store i64 %57, i64* %61, align 8, !alias.scope !3
  %62 = bitcast %class.SkSurfaceProps* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #10
  %63 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %16, i64 0, i32 0
  store i32 -1431655766, i32* %63, align 4
  %64 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %16, i64 0, i32 1
  store i32 -1431655766, i32* %64, align 4
  call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* nonnull %16, i32 0, i32 0) #10
  %65 = getelementptr inbounds %"struct.cc::RasterSource::PlaybackSettings", %"struct.cc::RasterSource::PlaybackSettings"* %10, i64 0, i32 0
  %66 = load i8, i8* %65, align 8, !range !6
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %35
  %69 = bitcast %class.SkSurfaceProps* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #10
  call void @_ZN4skia20LegacyDisplayGlobals17GetSkSurfacePropsEv(%class.SkSurfaceProps* nonnull sret %17) #10
  %70 = call dereferenceable(8) %class.SkSurfaceProps* @_ZN14SkSurfacePropsaSERKS_(%class.SkSurfaceProps* nonnull %16, %class.SkSurfaceProps* nonnull dereferenceable(8) %17) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #10
  br label %71

71:                                               ; preds = %35, %68
  %72 = icmp eq i64 %3, 0
  br i1 %72, label %73, label %82

73:                                               ; preds = %71
  %74 = load i32, i32* %44, align 8
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %14, i64 0, i32 0
  %77 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %76) #10
  %78 = sext i32 %77 to i64
  %79 = mul nsw i64 %78, %75
  %80 = icmp ult i64 %79, 2147483648
  %81 = select i1 %80, i64 %79, i64 0
  br label %82

82:                                               ; preds = %71, %73
  %83 = phi i64 [ %3, %71 ], [ %81, %73 ]
  %84 = bitcast i64* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #10
  %85 = getelementptr inbounds %"class.gfx::AxisTransform2d", %"class.gfx::AxisTransform2d"* %7, i64 0, i32 0
  %86 = call i64 @_ZNK2cc12RasterSource14GetContentSizeERKN3gfx9Vector2dFE(%"class.cc::RasterSource"* %4, %"class.gfx::Vector2dF"* dereferenceable(8) %85) #10
  store i64 %86, i64* %18, align 8
  switch i32 %1, label %195 [
    i32 0, label %87
    i32 2, label %87
    i32 11, label %87
    i32 1, label %111
  ]

87:                                               ; preds = %82, %82, %82
  %88 = bitcast %class.sk_sp.6* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #10
  %89 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %20, i64 0, i32 0
  store %class.SkSurface* inttoptr (i64 -6148914691236517206 to %class.SkSurface*), %class.SkSurface** %89, align 8
  call void @_ZN9SkSurface16MakeRasterDirectERK11SkImageInfoPvmPK14SkSurfaceProps(%class.sk_sp.6* nonnull sret %20, %struct.SkImageInfo* nonnull dereferenceable(24) %14, i8* %0, i64 %83, %class.SkSurfaceProps* nonnull %16) #10
  %90 = load %class.SkSurface*, %class.SkSurface** %89, align 8
  %91 = icmp eq %class.SkSurface* %90, null
  br i1 %91, label %92, label %96

92:                                               ; preds = %87
  %93 = bitcast %"class.logging::CheckError"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %21, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 107, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0)) #10
  %94 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %21) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %21) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #10
  %95 = load %class.SkSurface*, %class.SkSurface** %89, align 8
  br label %96

96:                                               ; preds = %87, %92
  %97 = phi %class.SkSurface* [ %90, %87 ], [ %95, %92 ]
  %98 = call %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface* %97) #10
  call void @_ZNK2cc12RasterSource16PlaybackToCanvasEP8SkCanvasRKN3gfx4SizeERKNS3_4RectES9_RKNS3_15AxisTransform2dERKNS0_16PlaybackSettingsE(%"class.cc::RasterSource"* %4, %class.SkCanvas* %98, %"class.gfx::Size"* nonnull dereferenceable(8) %19, %"class.gfx::Rect"* dereferenceable(16) %5, %"class.gfx::Rect"* dereferenceable(16) %6, %"class.gfx::AxisTransform2d"* dereferenceable(16) %7, %"struct.cc::RasterSource::PlaybackSettings"* dereferenceable(16) %10) #10
  %99 = load %class.SkSurface*, %class.SkSurface** %89, align 8
  %100 = icmp eq %class.SkSurface* %99, null
  br i1 %100, label %193, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %99, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = atomicrmw add i32* %102, i32 -1 acq_rel
  %104 = icmp eq i32 %103, 1
  br i1 %104, label %105, label %193

105:                                              ; preds = %101
  %106 = bitcast %class.SkSurface* %99 to %class.SkRefCntBase*
  %107 = bitcast %class.SkSurface* %99 to void (%class.SkRefCntBase*)***
  %108 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %107, align 8
  %109 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %108, i64 2
  %110 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %109, align 8
  call void %110(%class.SkRefCntBase* nonnull %106) #10
  br label %193

111:                                              ; preds = %82
  %112 = bitcast %class.sk_sp.6* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #10
  %113 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %22, i64 0, i32 0
  store %class.SkSurface* inttoptr (i64 -6148914691236517206 to %class.SkSurface*), %class.SkSurface** %113, align 8
  call void @_ZN9SkSurface10MakeRasterERK11SkImageInfomPK14SkSurfaceProps(%class.sk_sp.6* nonnull sret %22, %struct.SkImageInfo* nonnull dereferenceable(24) %14, i64 0, %class.SkSurfaceProps* nonnull %16) #10
  %114 = load %class.SkSurface*, %class.SkSurface** %113, align 8
  %115 = call %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface* %114) #10
  call void @_ZNK2cc12RasterSource16PlaybackToCanvasEP8SkCanvasRKN3gfx4SizeERKNS3_4RectES9_RKNS3_15AxisTransform2dERKNS0_16PlaybackSettingsE(%"class.cc::RasterSource"* %4, %class.SkCanvas* %115, %"class.gfx::Size"* nonnull dereferenceable(8) %19, %"class.gfx::Rect"* dereferenceable(16) %5, %"class.gfx::Rect"* dereferenceable(16) %5, %"class.gfx::AxisTransform2d"* dereferenceable(16) %7, %"struct.cc::RasterSource::PlaybackSettings"* dereferenceable(16) %10) #10
  %116 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %117 = and i8 %116, 25
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %125, label %119, !prof !2

119:                                              ; preds = %111
  %120 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %121 = bitcast %"class.base::TimeTicks"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #10
  %122 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %12, i64 0, i32 0, i32 0
  %123 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %123, i64* %122, align 8
  %124 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %120, %"class.base::TimeTicks"* nonnull dereferenceable(8) %12, %"class.base::trace_event::TraceArguments"* null, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #10
  br label %125

125:                                              ; preds = %111, %119
  %126 = phi i64 [ -6148914691236517206, %111 ], [ %124, %119 ]
  %127 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %111 ], [ getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3, i64 0, i64 0), %119 ]
  %128 = phi i8* [ null, %111 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %119 ]
  %129 = bitcast %struct.SkImageInfo* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %129) #10
  %130 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %23, i64 0, i32 0, i32 0, i32 0
  %131 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %23, i64 0, i32 0, i32 1
  %132 = bitcast %struct.SkImageInfo* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %132, i8 -86, i64 24, i1 false)
  %133 = call i32 @_ZN3viz34ResourceFormatToClosestSkColorTypeEbNS_14ResourceFormatE(i1 zeroext %9, i32 1) #10
  %134 = load i64, i64* %61, align 8, !noalias !7
  %135 = load i32, i32* %43, align 4, !noalias !10
  %136 = load %class.SkColorSpace*, %class.SkColorSpace** %41, align 8, !noalias !13
  %137 = icmp eq %class.SkColorSpace* %136, null
  br i1 %137, label %141, label %138

138:                                              ; preds = %125
  %139 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %136, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = atomicrmw add i32* %139, i32 1 monotonic, !noalias !13
  br label %141

141:                                              ; preds = %125, %138
  %142 = ptrtoint %class.SkColorSpace* %136 to i64
  %143 = zext i32 %133 to i64
  %144 = zext i32 %135 to i64
  %145 = shl nuw i64 %144, 32
  %146 = or i64 %145, %143
  %147 = bitcast %struct.SkImageInfo* %23 to i64*
  store i64 %142, i64* %147, align 8, !alias.scope !16
  %148 = bitcast i32* %131 to i64*
  store i64 %146, i64* %148, align 8, !alias.scope !16
  %149 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %23, i64 0, i32 1
  %150 = bitcast %struct.SkISize* %149 to i64*
  store i64 %134, i64* %150, align 8, !alias.scope !16
  %151 = call %class.SkCanvas* @_ZN8SkCanvas16MakeRasterDirectERK11SkImageInfoPvmPK14SkSurfaceProps(%struct.SkImageInfo* nonnull dereferenceable(24) %23, i8* %0, i64 %83, %class.SkSurfaceProps* nonnull %16) #10
  %152 = bitcast %class.SkPaint* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %152) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %152, i8* align 8 bitcast (%class.SkPaint* @__const._ZN2cc20RasterBufferProvider16PlaybackToMemoryEPvN3viz14ResourceFormatERKN3gfx4SizeEmPKNS_12RasterSourceERKNS4_4RectESD_RKNS4_15AxisTransform2dERKNS4_10ColorSpaceEbRKNS8_16PlaybackSettingsE.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %24) #10
  %153 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %24, i64 0, i32 8, i32 0, i32 0
  %154 = load i32, i32* %153, align 8
  %155 = and i32 %154, -261123
  %156 = or i32 %155, 1026
  store i32 %156, i32* %153, align 8
  %157 = load %class.SkSurface*, %class.SkSurface** %113, align 8
  %158 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %25, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %158) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %158, i8 0, i64 20, i1 false)
  call void @_ZN9SkSurface4drawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSurface* %157, %class.SkCanvas* %151, float 0.000000e+00, float 0.000000e+00, %struct.SkSamplingOptions* nonnull dereferenceable(20) %25, %class.SkPaint* nonnull %24) #10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %158) #10
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %24) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %152) #10
  %159 = icmp eq %class.SkCanvas* %151, null
  br i1 %159, label %165, label %160

160:                                              ; preds = %141
  %161 = bitcast %class.SkCanvas* %151 to void (%class.SkCanvas*)***
  %162 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %161, align 8
  %163 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %162, i64 1
  %164 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %163, align 8
  call void %164(%class.SkCanvas* nonnull %151) #10
  br label %165

165:                                              ; preds = %141, %160
  %166 = load %class.SkColorSpace*, %class.SkColorSpace** %130, align 8
  %167 = icmp eq %class.SkColorSpace* %166, null
  br i1 %167, label %174, label %168

168:                                              ; preds = %165
  %169 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %166, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = atomicrmw add i32* %169, i32 -1 acq_rel
  %171 = icmp eq i32 %170, 1
  br i1 %171, label %172, label %174

172:                                              ; preds = %168
  %173 = bitcast %class.SkColorSpace* %166 to i8*
  call void @_ZdlPv(i8* %173) #11
  br label %174

174:                                              ; preds = %165, %168, %172
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %129) #10
  %175 = icmp eq i8* %128, null
  br i1 %175, label %180, label %176

176:                                              ; preds = %174
  %177 = load i8, i8* %128, align 1
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %180, label %179

179:                                              ; preds = %176
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %128, i8* %127, i64 %126) #10
  br label %180

180:                                              ; preds = %174, %176, %179
  %181 = load %class.SkSurface*, %class.SkSurface** %113, align 8
  %182 = icmp eq %class.SkSurface* %181, null
  br i1 %182, label %193, label %183

183:                                              ; preds = %180
  %184 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %181, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = atomicrmw add i32* %184, i32 -1 acq_rel
  %186 = icmp eq i32 %185, 1
  br i1 %186, label %187, label %193

187:                                              ; preds = %183
  %188 = bitcast %class.SkSurface* %181 to %class.SkRefCntBase*
  %189 = bitcast %class.SkSurface* %181 to void (%class.SkRefCntBase*)***
  %190 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %189, align 8
  %191 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %190, i64 2
  %192 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %191, align 8
  call void %192(%class.SkRefCntBase* nonnull %188) #10
  br label %193

193:                                              ; preds = %187, %183, %180, %105, %101, %96
  %194 = phi i8* [ %88, %96 ], [ %88, %101 ], [ %88, %105 ], [ %112, %180 ], [ %112, %183 ], [ %112, %187 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %194) #10
  br label %195

195:                                              ; preds = %193, %82
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #10
  %196 = load %class.SkColorSpace*, %class.SkColorSpace** %41, align 8
  %197 = icmp eq %class.SkColorSpace* %196, null
  br i1 %197, label %204, label %198

198:                                              ; preds = %195
  %199 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %196, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = atomicrmw add i32* %199, i32 -1 acq_rel
  %201 = icmp eq i32 %200, 1
  br i1 %201, label %202, label %204

202:                                              ; preds = %198
  %203 = bitcast %class.SkColorSpace* %196 to i8*
  call void @_ZdlPv(i8* %203) #11
  br label %204

204:                                              ; preds = %195, %198, %202
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #10
  %205 = icmp eq i8* %36, null
  br i1 %205, label %210, label %206

206:                                              ; preds = %204
  %207 = load i8, i8* %36, align 1
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %210, label %209

209:                                              ; preds = %206
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %36, i8* %37, i64 %38) #10
  br label %210

210:                                              ; preds = %204, %206, %209
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare i32 @_ZN3viz34ResourceFormatToClosestSkColorTypeEbNS_14ResourceFormatE(i1 zeroext, i32) local_unnamed_addr #6

declare void @_ZNK3gfx10ColorSpace14ToSkColorSpaceEv(%class.sk_sp* sret, %"class.gfx::ColorSpace"*) local_unnamed_addr #6

declare void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps*, i32, i32) unnamed_addr #6

declare void @_ZN4skia20LegacyDisplayGlobals17GetSkSurfacePropsEv(%class.SkSurfaceProps* sret) local_unnamed_addr #6

declare dereferenceable(8) %class.SkSurfaceProps* @_ZN14SkSurfacePropsaSERKS_(%class.SkSurfaceProps*, %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #6

declare i64 @_ZNK2cc12RasterSource14GetContentSizeERKN3gfx9Vector2dFE(%"class.cc::RasterSource"*, %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #6

declare void @_ZN9SkSurface16MakeRasterDirectERK11SkImageInfoPvmPK14SkSurfaceProps(%class.sk_sp.6* sret, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %class.SkSurfaceProps*) local_unnamed_addr #6

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare void @_ZNK2cc12RasterSource16PlaybackToCanvasEP8SkCanvasRKN3gfx4SizeERKNS3_4RectES9_RKNS3_15AxisTransform2dERKNS0_16PlaybackSettingsE(%"class.cc::RasterSource"*, %class.SkCanvas*, %"class.gfx::Size"* dereferenceable(8), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::AxisTransform2d"* dereferenceable(16), %"struct.cc::RasterSource::PlaybackSettings"* dereferenceable(16)) local_unnamed_addr #6

declare %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface*) local_unnamed_addr #6

declare %class.SkCanvas* @_ZN8SkCanvas16MakeRasterDirectERK11SkImageInfoPvmPK14SkSurfaceProps(%struct.SkImageInfo* dereferenceable(24), i8*, i64, %class.SkSurfaceProps*) local_unnamed_addr #6

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #6

declare void @_ZN9SkSurface4drawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSurface*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #7

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc20RasterBufferProvider16SetShutdownEventEPN4base13WaitableEventE(%"class.cc::RasterBufferProvider"*, %"class.base::WaitableEvent"*) unnamed_addr #4 comdat align 2 {
  ret void
}

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #6

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #6

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #6

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #6

declare void @_ZN9SkSurface10MakeRasterERK11SkImageInfomPK14SkSurfaceProps(%class.sk_sp.6* sret, %struct.SkImageInfo* dereferenceable(24), i64, %class.SkSurfaceProps*) local_unnamed_addr #6

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!5 = distinct !{!5, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!6 = !{i8 0, i8 2}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType: argument 0"}
!9 = distinct !{!9, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType"}
!10 = !{!11, !8}
!11 = distinct !{!11, !12, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType: argument 0"}
!12 = distinct !{!12, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType"}
!13 = !{!14, !11, !8}
!14 = distinct !{!14, !15, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!15 = distinct !{!15, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!16 = !{!17, !8}
!17 = distinct !{!17, !18, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo: argument 0"}
!18 = distinct !{!18, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo"}
