; ModuleID = '../../net/nqe/network_quality_estimator_util.cc'
source_filename = "../../net/nqe/network_quality_estimator_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::URLRequest" = type { %"class.base::SupportsUserData.base", %"class.net::URLRequestContext"*, %"class.net::NetLogWithSource", %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.238", %"class.std::__1::vector.245", %"class.net::SiteForCookies", %"class.net::IsolationInfo", i32, i8, i8, %"class.absl::optional.258", %class.GURL, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, %"class.net::HttpRequestHeaders", i32, i8, i32, i32, %"class.std::__1::vector.290", %"class.std::__1::vector.297", i32, %"class.net::URLRequest::Delegate"*, i32, %"class.net::HttpResponseInfo", i8, i8, i32, %"class.net::UploadProgress", i32, i32, i8, %"class.std::__1::basic_string", i8, i8, i64, %"class.base::TimeTicks", %"struct.net::LoadTimingInfo", %"class.net::ProxyServer", %"class.absl::optional.354", %"struct.net::NetworkTrafficAnnotationTag", %"class.net::SocketTag", %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.367", %"class.base::RepeatingCallback.367", i8, i8, i32, %"class.base::WeakPtrFactory.368" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.net::URLRequestContext" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.net::NetLog"*, %"class.net::HostResolver"*, %"class.net::CertVerifier"*, %"class.net::HttpAuthHandlerFactory"*, %"class.net::ProxyResolutionService"*, %"class.net::ProxyDelegate"*, %"class.net::SSLConfigService"*, %"class.net::NetworkDelegate"*, %"class.net::HttpServerProperties"*, %"class.net::HttpUserAgentSettings"*, %"class.net::CookieStore"*, %"class.net::TransportSecurityState"*, %"class.net::CTPolicyEnforcer"*, %"class.net::SCTAuditingDelegate"*, %"class.net::HttpTransactionFactory"*, %"class.net::URLRequestJobFactory"*, %"class.net::URLRequestThrottlerManager"*, %"class.net::QuicContext"*, %"class.net::NetworkQualityEstimator"*, %"class.net::ReportingService"*, %"class.net::NetworkErrorLoggingService"*, %"class.net::FtpAuthCache"*, %"class.std::__1::unique_ptr.225", i8, i8, i8, %"class.std::__1::basic_string" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.9" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.4" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.11" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.net::HostResolver" = type { i32 (...)** }
%"class.net::CertVerifier" = type opaque
%"class.net::HttpAuthHandlerFactory" = type opaque
%"class.net::ProxyResolutionService" = type opaque
%"class.net::ProxyDelegate" = type opaque
%"class.net::SSLConfigService" = type { i32 (...)**, %"class.base::ObserverList" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.16", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.18" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.net::NetworkDelegate" = type { i32 (...)** }
%"class.net::HttpServerProperties" = type { %"class.net::BrokenAlternativeServices::Delegate", %"class.base::TickClock"*, %"class.base::Clock"*, i8, i8, i8, %"class.std::__1::unique_ptr", %"class.net::HttpServerProperties::ServerInfoMap", %"class.net::BrokenAlternativeServices", %"class.net::IPAddress", %"class.base::flat_map", %"class.std::__1::vector.102", %"class.base::MRUCache.114", %"class.base::flat_map.134", i64, %"class.base::OneShotTimer" }
%"class.net::BrokenAlternativeServices::Delegate" = type { i32 (...)** }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::Clock" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.net::HttpServerPropertiesManager"* }
%"class.net::HttpServerPropertiesManager" = type opaque
%"class.net::HttpServerProperties::ServerInfoMap" = type { %"class.base::MRUCache" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map.30", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.26" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.30" = type { %"class.std::__1::__tree.31" }
%"class.std::__1::__tree.31" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.net::BrokenAlternativeServices" = type { %"class.net::BrokenAlternativeServices::Delegate"*, %"class.base::TickClock"*, %"class.std::__1::list.41", %"class.std::__1::map.48", %"class.std::__1::set", %"class.net::RecentlyBrokenAlternativeServices", %"class.base::OneShotTimer", %"class.base::WeakPtrFactory.94" }
%"class.std::__1::list.41" = type { %"class.std::__1::__list_imp.42" }
%"class.std::__1::__list_imp.42" = type { %"struct.std::__1::__list_node_base.43", %"class.std::__1::__compressed_pair.44" }
%"struct.std::__1::__list_node_base.43" = type { %"struct.std::__1::__list_node_base.43"*, %"struct.std::__1::__list_node_base.43"* }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.48" = type { %"class.std::__1::__tree.49" }
%"class.std::__1::__tree.49" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.50", %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.59" }
%"class.std::__1::__tree.59" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.60", %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.net::RecentlyBrokenAlternativeServices" = type { %"class.base::MRUCache.66" }
%"class.base::MRUCache.66" = type { %"class.base::MRUCacheBase.67" }
%"class.base::MRUCacheBase.67" = type { i32 (...)**, %"class.std::__1::list.68", %"class.std::__1::map.75", i64 }
%"class.std::__1::list.68" = type { %"class.std::__1::__list_imp.69" }
%"class.std::__1::__list_imp.69" = type { %"struct.std::__1::__list_node_base.70", %"class.std::__1::__compressed_pair.71" }
%"struct.std::__1::__list_node_base.70" = type { %"struct.std::__1::__list_node_base.70"*, %"struct.std::__1::__list_node_base.70"* }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.75" = type { %"class.std::__1::__tree.76" }
%"class.std::__1::__tree.76" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.77", %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::WeakPtrFactory.94" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.85 }
%class.scoped_refptr.85 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.86", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.86" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.84" }
%"struct.std::__1::__atomic_base.84" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.87" }
%"struct.std::__1::atomic.87" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__atomic_base.89" }
%"struct.std::__1::__atomic_base.89" = type { %"struct.std::__1::__cxx_atomic_impl.90" }
%"struct.std::__1::__cxx_atomic_impl.90" = type { %"struct.std::__1::__cxx_atomic_base_impl.91" }
%"struct.std::__1::__cxx_atomic_base_impl.91" = type { i8 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.95" }
%"class.std::__1::vector.95" = type { %"class.std::__1::__vector_base.96" }
%"class.std::__1::__vector_base.96" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.97" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.103" }
%"class.std::__1::__vector_base.103" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.std::__1::basic_string"* }
%"class.base::MRUCache.114" = type { %"class.base::MRUCacheBase.115" }
%"class.base::MRUCacheBase.115" = type { i32 (...)**, %"class.std::__1::list.116", %"class.std::__1::map.123", i64 }
%"class.std::__1::list.116" = type { %"class.std::__1::__list_imp.117" }
%"class.std::__1::__list_imp.117" = type { %"struct.std::__1::__list_node_base.118", %"class.std::__1::__compressed_pair.119" }
%"struct.std::__1::__list_node_base.118" = type { %"struct.std::__1::__list_node_base.118"*, %"struct.std::__1::__list_node_base.118"* }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.123" = type { %"class.std::__1::__tree.124" }
%"class.std::__1::__tree.124" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.125", %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::flat_map.134" = type { %"class.base::internal::flat_tree.135" }
%"class.base::internal::flat_tree.135" = type { %"class.std::__1::vector.136" }
%"class.std::__1::vector.136" = type { %"class.std::__1::__vector_base.137" }
%"class.std::__1::__vector_base.137" = type { %"struct.std::__1::pair.138"*, %"struct.std::__1::pair.138"*, %"class.std::__1::__compressed_pair.139" }
%"struct.std::__1::pair.138" = type opaque
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"struct.std::__1::pair.138"* }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.92 }
%class.scoped_refptr.92 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.93", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.93" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::HttpUserAgentSettings" = type opaque
%"class.net::CookieStore" = type opaque
%"class.net::TransportSecurityState" = type <{ %"class.std::__1::map.144", %"class.std::__1::map.155", %"class.std::__1::map.164", %"class.net::TransportSecurityState::Delegate"*, %"class.net::TransportSecurityState::ReportSenderInterface"*, i8, i8, i8, [5 x i8], %"class.net::TransportSecurityState::ExpectCTReporter"*, %"class.net::TransportSecurityState::RequireCTDelegate"*, %"class.net::ExpiringCache", %"class.net::ExpiringCache", i8, [7 x i8], %"class.base::Time", %"class.std::__1::set.187", i8, [7 x i8] }>
%"class.std::__1::map.144" = type { %"class.std::__1::__tree.145" }
%"class.std::__1::__tree.145" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.146", %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.155" = type { %"class.std::__1::__tree.156" }
%"class.std::__1::__tree.156" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.157", %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.164" = type { %"class.std::__1::__tree.165" }
%"class.std::__1::__tree.165" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.166", %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.net::TransportSecurityState::Delegate" = type { i32 (...)** }
%"class.net::TransportSecurityState::ReportSenderInterface" = type { i32 (...)** }
%"class.net::TransportSecurityState::ExpectCTReporter" = type { i32 (...)** }
%"class.net::TransportSecurityState::RequireCTDelegate" = type { i32 (...)** }
%"class.net::ExpiringCache" = type <{ i64, %"class.std::__1::map.175", %"struct.std::__1::less.184", %"class.net::NoopEvictionHandler", [6 x i8] }>
%"class.std::__1::map.175" = type { %"class.std::__1::__tree.176" }
%"class.std::__1::__tree.176" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.177", %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::less.184" = type { i8 }
%"class.net::NoopEvictionHandler" = type { i8 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.186" }
%"class.base::time_internal::TimeBase.186" = type { i64 }
%"class.std::__1::set.187" = type { %"class.std::__1::__tree.188" }
%"class.std::__1::__tree.188" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.189", %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.net::CTPolicyEnforcer" = type opaque
%"class.net::SCTAuditingDelegate" = type opaque
%"class.net::HttpTransactionFactory" = type opaque
%"class.net::URLRequestJobFactory" = type opaque
%"class.net::URLRequestThrottlerManager" = type opaque
%"class.net::QuicContext" = type { %"class.std::__1::unique_ptr.195", %"struct.net::QuicParams" }
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.quic::QuicConnectionHelperInterface"* }
%"class.quic::QuicConnectionHelperInterface" = type { i32 (...)** }
%"struct.net::QuicParams" = type { %"class.std::__1::vector.201", %"class.std::__1::basic_string", i64, i64, %"class.std::__1::set.208", %"class.std::__1::vector.218", %"class.std::__1::vector.218", i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", i32, i32, i8, i8, i8, i8, i8, i8, i8, %"class.base::TimeDelta", i8, i8, i32 }
%"class.std::__1::vector.201" = type { %"class.std::__1::__vector_base.202" }
%"class.std::__1::__vector_base.202" = type { %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"*, %"class.std::__1::__compressed_pair.203" }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"struct.quic::ParsedQuicVersion"* }
%"class.std::__1::set.208" = type { %"class.std::__1::__tree.209" }
%"class.std::__1::__tree.209" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.210", %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.218" = type { %"class.std::__1::__vector_base.219" }
%"class.std::__1::__vector_base.219" = type { i32*, i32*, %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { i32* }
%"class.net::NetworkQualityEstimator" = type opaque
%"class.net::ReportingService" = type opaque
%"class.net::NetworkErrorLoggingService" = type opaque
%"class.net::FtpAuthCache" = type opaque
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.std::__1::set.228"* }
%"class.std::__1::set.228" = type opaque
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.net::URLRequestJob"* }
%"class.net::URLRequestJob" = type opaque
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.net::UploadDataStream"* }
%"class.net::UploadDataStream" = type { i32 (...)**, i64, i64, i64, i8, i8, i8, %"class.base::OnceCallback.241", %"class.net::NetLogWithSource" }
%"class.base::OnceCallback.241" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.245" = type { %"class.std::__1::__vector_base.246" }
%"class.std::__1::__vector_base.246" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %class.GURL* }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.257 }
%union.anon.257 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.net::IsolationInfo" = type { i32, %"class.absl::optional.258", %"class.absl::optional.258", %"class.net::NetworkIsolationKey", %"class.net::SiteForCookies", i8, %"class.absl::optional.268" }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional.263", %"class.absl::optional.263" }
%"class.absl::optional.263" = type { %"class.absl::optional_internal::optional_data.264" }
%"class.absl::optional_internal::optional_data.264" = type { %"class.absl::optional_internal::optional_data_base.265" }
%"class.absl::optional_internal::optional_data_base.265" = type { %"class.absl::optional_internal::optional_data_dtor_base.266" }
%"class.absl::optional_internal::optional_data_dtor_base.266" = type { i8, %union.anon.267 }
%union.anon.267 = type { %"class.net::SchemefulSite" }
%"class.absl::optional.268" = type { %"class.absl::optional_internal::optional_data.269" }
%"class.absl::optional_internal::optional_data.269" = type { %"class.absl::optional_internal::optional_data_base.270" }
%"class.absl::optional_internal::optional_data_base.270" = type { %"class.absl::optional_internal::optional_data_dtor_base.271" }
%"class.absl::optional_internal::optional_data_dtor_base.271" = type { i8, %union.anon.272 }
%union.anon.272 = type { %"class.std::__1::set.273" }
%"class.std::__1::set.273" = type { %"class.std::__1::__tree.274" }
%"class.std::__1::__tree.274" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.275", %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::optional.258" = type { %"class.absl::optional_internal::optional_data.259" }
%"class.absl::optional_internal::optional_data.259" = type { %"class.absl::optional_internal::optional_data_base.260" }
%"class.absl::optional_internal::optional_data_base.260" = type { %"class.absl::optional_internal::optional_data_dtor_base.261" }
%"class.absl::optional_internal::optional_data_dtor_base.261" = type { i8, %union.anon.262 }
%union.anon.262 = type { %"class.url::Origin" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.247" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"class.net::HttpRequestHeaders" = type { %"class.std::__1::vector.283" }
%"class.std::__1::vector.283" = type { %"class.std::__1::__vector_base.284" }
%"class.std::__1::__vector_base.284" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"class.std::__1::__compressed_pair.285" }
%"struct.net::HttpRequestHeaders::HeaderKeyValuePair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* }
%"class.std::__1::vector.290" = type { %"class.std::__1::__vector_base.291" }
%"class.std::__1::__vector_base.291" = type { %"struct.net::CookieWithAccessResult"*, %"struct.net::CookieWithAccessResult"*, %"class.std::__1::__compressed_pair.292" }
%"struct.net::CookieWithAccessResult" = type <{ %"class.net::CanonicalCookie", %"struct.net::CookieAccessResult", [4 x i8] }>
%"class.net::CanonicalCookie" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.base::Time", %"class.base::Time", %"class.base::Time", i8, i8, i32, i32, i8, i32, i32 }
%"struct.net::CookieAccessResult" = type <{ %"class.net::CookieInclusionStatus", i32, i32, i8, [3 x i8] }>
%"class.net::CookieInclusionStatus" = type { i32, i32 }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"struct.net::CookieWithAccessResult"* }
%"class.std::__1::vector.297" = type { %"class.std::__1::__vector_base.298" }
%"class.std::__1::__vector_base.298" = type { %"struct.net::CookieAndLineWithAccessResult"*, %"struct.net::CookieAndLineWithAccessResult"*, %"class.std::__1::__compressed_pair.304" }
%"struct.net::CookieAndLineWithAccessResult" = type <{ %"class.absl::optional.299", %"class.std::__1::basic_string", %"struct.net::CookieAccessResult", [4 x i8] }>
%"class.absl::optional.299" = type { %"class.absl::optional_internal::optional_data.300" }
%"class.absl::optional_internal::optional_data.300" = type { %"class.absl::optional_internal::optional_data_base.301" }
%"class.absl::optional_internal::optional_data_base.301" = type { %"class.absl::optional_internal::optional_data_dtor_base.302" }
%"class.absl::optional_internal::optional_data_dtor_base.302" = type { i8, %union.anon.303 }
%union.anon.303 = type { %"class.net::CanonicalCookie" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"struct.net::CookieAndLineWithAccessResult"* }
%"class.net::URLRequest::Delegate" = type { i32 (...)** }
%"class.net::HttpResponseInfo" = type { i8, i32, i8, i8, i8, i8, i8, %"class.net::ProxyServer", i8, i8, i8, i8, %"class.base::Time", %"class.net::IPEndPoint", %"class.std::__1::basic_string", i32, %"class.base::Time", %"class.base::Time", %"struct.net::ResolveErrorInfo", %"class.absl::optional.309", %class.scoped_refptr.314, %"class.net::SSLInfo", %class.scoped_refptr.345, %"class.net::HttpVaryData", %"class.std::__1::vector.102" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.309" = type { %"class.absl::optional_internal::optional_data.310" }
%"class.absl::optional_internal::optional_data.310" = type { %"class.absl::optional_internal::optional_data_base.311" }
%"class.absl::optional_internal::optional_data_base.311" = type { %"class.absl::optional_internal::optional_data_dtor_base.312" }
%"class.absl::optional_internal::optional_data_dtor_base.312" = type { i8, %union.anon.313 }
%union.anon.313 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.314 = type { %"class.net::SSLCertRequestInfo"* }
%"class.net::SSLCertRequestInfo" = type opaque
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.315, %class.scoped_refptr.315, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.328", %"class.std::__1::basic_string", %"class.std::__1::vector.336", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.315 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.316", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.317", %"class.std::__1::vector.321" }
%"class.base::RefCountedThreadSafe.316" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.102", %"class.std::__1::vector.102", %"class.std::__1::vector.102", %"class.std::__1::vector.102" }
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.321" = type { %"class.std::__1::__vector_base.322" }
%"class.std::__1::__vector_base.322" = type { %"class.std::__1::unique_ptr.317"*, %"class.std::__1::unique_ptr.317"*, %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.std::__1::unique_ptr.317"* }
%"class.std::__1::vector.328" = type { %"class.std::__1::__vector_base.329" }
%"class.std::__1::__vector_base.329" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.331" }
%"class.net::HashValue" = type { i32, %union.anon.330 }
%union.anon.330 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.336" = type { %"class.std::__1::__vector_base.337" }
%"class.std::__1::__vector_base.337" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.340" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.338, i32, [4 x i8] }>
%class.scoped_refptr.338 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.339", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.339" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%class.scoped_refptr.345 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.346", %"class.std::__1::vector.347", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.346" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.347" = type { %"class.std::__1::__vector_base.348" }
%"class.std::__1::__vector_base.348" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.349" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"class.net::HttpVaryData" = type { %"struct.base::MD5Digest", i8 }
%"struct.base::MD5Digest" = type { [16 x i8] }
%"class.net::UploadProgress" = type { i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.354" = type { %"class.absl::optional_internal::optional_data.355" }
%"class.absl::optional_internal::optional_data.355" = type { %"class.absl::optional_internal::optional_data_base.356" }
%"class.absl::optional_internal::optional_data_base.356" = type { %"class.absl::optional_internal::optional_data_dtor_base.357" }
%"class.absl::optional_internal::optional_data_dtor_base.357" = type { i8, %union.anon.358 }
%union.anon.358 = type { %"class.base::internal::flat_tree.359" }
%"class.base::internal::flat_tree.359" = type { %"class.std::__1::vector.360" }
%"class.std::__1::vector.360" = type { %"class.std::__1::__vector_base.361" }
%"class.std::__1::__vector_base.361" = type { i32*, i32*, %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { i32* }
%"struct.net::NetworkTrafficAnnotationTag" = type { i32 }
%"class.net::SocketTag" = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.367" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.368" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.net::HostResolver::ResolveHostParameters" = type { i32, i32, i32, i32, i8, i8, i8, i8, i32 }
%"class.absl::optional.375" = type { %"class.absl::optional_internal::optional_data.376" }
%"class.absl::optional_internal::optional_data.376" = type { %"class.absl::optional_internal::optional_data_base.377" }
%"class.absl::optional_internal::optional_data_base.377" = type { %"class.absl::optional_internal::optional_data_dtor_base.378" }
%"class.absl::optional_internal::optional_data_dtor_base.378" = type { i8, %union.anon.379 }
%union.anon.379 = type { %"struct.net::HostResolver::ResolveHostParameters" }
%"class.net::HostResolver::ResolveHostRequest" = type { i32 (...)** }
%"class.absl::optional.380" = type { %"class.absl::optional_internal::optional_data.381" }
%"class.absl::optional_internal::optional_data.381" = type { %"class.absl::optional_internal::optional_data_base.382" }
%"class.absl::optional_internal::optional_data_base.382" = type { %"class.absl::optional_internal::optional_data_dtor_base.383" }
%"class.absl::optional_internal::optional_data_dtor_base.383" = type { i8, %union.anon.384 }
%union.anon.384 = type { %"class.net::AddressList" }
%"class.net::AddressList" = type { %"class.std::__1::vector.385", %"class.std::__1::vector.102" }
%"class.std::__1::vector.385" = type { %"class.std::__1::__vector_base.386" }
%"class.std::__1::__vector_base.386" = type { %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*, %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"class.net::IPEndPoint"* }

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net3nqe8internal23IsRequestForPrivateHostERKNS_10URLRequestE(%"class.net::URLRequest"* dereferenceable(2016)) local_unnamed_addr #0 {
  %2 = alloca %"class.net::HostPortPair", align 8
  %3 = tail call %"class.net::URLRequestContext"* @_ZNK3net10URLRequest7contextEv(%"class.net::URLRequest"* %0) #8
  %4 = getelementptr inbounds %"class.net::URLRequestContext", %"class.net::URLRequestContext"* %3, i64 0, i32 2
  %5 = load %"class.net::HostResolver"*, %"class.net::HostResolver"** %4, align 8
  %6 = bitcast %"class.net::HostPortPair"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %0, i64 0, i32 5, i32 0, i32 1
  %8 = load %class.GURL*, %class.GURL** %7, align 8
  %9 = getelementptr inbounds %class.GURL, %class.GURL* %8, i64 -1
  call void @_ZN3net12HostPortPair7FromURLERK4GURL(%"class.net::HostPortPair"* nonnull sret %2, %class.GURL* dereferenceable(120) %9) #8
  %10 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %0, i64 0, i32 7, i32 3
  %11 = call fastcc zeroext i1 @_ZN3net3nqe12_GLOBAL__N_113IsPrivateHostEPNS_12HostResolverERKNS_12HostPortPairERKNS_19NetworkIsolationKeyE(%"class.net::HostResolver"* %5, %"class.net::HostPortPair"* nonnull dereferenceable(32) %2, %"class.net::NetworkIsolationKey"* dereferenceable(184) %10)
  %12 = bitcast %"class.net::HostPortPair"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %18) #9
  br label %19

19:                                               ; preds = %1, %16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #8
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN3net3nqe12_GLOBAL__N_113IsPrivateHostEPNS_12HostResolverERKNS_12HostPortPairERKNS_19NetworkIsolationKeyE(%"class.net::HostResolver"*, %"class.net::HostPortPair"* dereferenceable(32), %"class.net::NetworkIsolationKey"* dereferenceable(184)) unnamed_addr #0 {
  %4 = alloca %"struct.net::HostResolver::ResolveHostParameters", align 4
  %5 = alloca %"class.net::NetLogWithSource", align 8
  %6 = alloca %"class.absl::optional.375", align 4
  %7 = alloca %"class.base::OnceCallback.241", align 8
  %8 = alloca %"class.net::IPEndPoint", align 2
  %9 = alloca %"class.net::IPAddress", align 1
  %10 = bitcast %"struct.net::HostResolver::ResolveHostParameters"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"struct.net::HostResolver::ResolveHostParameters", %"struct.net::HostResolver::ResolveHostParameters"* %4, i64 0, i32 2
  %12 = bitcast %"struct.net::HostResolver::ResolveHostParameters"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %12, i8 -86, i64 24, i1 false)
  call void @_ZN3net12HostResolver21ResolveHostParametersC1Ev(%"struct.net::HostResolver::ResolveHostParameters"* nonnull %4) #8
  store i32 4, i32* %11, align 4
  %13 = bitcast %"class.net::NetLogWithSource"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #8
  call void @_ZN3net16NetLogWithSourceC1Ev(%"class.net::NetLogWithSource"* nonnull %5) #8
  %14 = getelementptr inbounds %"class.absl::optional.375", %"class.absl::optional.375"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %14) #8
  store i8 1, i8* %14, align 4
  %15 = getelementptr inbounds %"class.absl::optional.375", %"class.absl::optional.375"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net12HostResolver21ResolveHostParametersC1ERKS1_(%"struct.net::HostResolver::ResolveHostParameters"* %15, %"struct.net::HostResolver::ResolveHostParameters"* nonnull dereferenceable(24) %4) #8
  %16 = bitcast %"class.net::HostResolver"* %0 to %"class.net::HostResolver::ResolveHostRequest"* (%"class.net::HostResolver"*, %"class.net::HostPortPair"*, %"class.net::NetworkIsolationKey"*, %"class.net::NetLogWithSource"*, %"class.absl::optional.375"*)***
  %17 = load %"class.net::HostResolver::ResolveHostRequest"* (%"class.net::HostResolver"*, %"class.net::HostPortPair"*, %"class.net::NetworkIsolationKey"*, %"class.net::NetLogWithSource"*, %"class.absl::optional.375"*)**, %"class.net::HostResolver::ResolveHostRequest"* (%"class.net::HostResolver"*, %"class.net::HostPortPair"*, %"class.net::NetworkIsolationKey"*, %"class.net::NetLogWithSource"*, %"class.absl::optional.375"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.net::HostResolver::ResolveHostRequest"* (%"class.net::HostResolver"*, %"class.net::HostPortPair"*, %"class.net::NetworkIsolationKey"*, %"class.net::NetLogWithSource"*, %"class.absl::optional.375"*)*, %"class.net::HostResolver::ResolveHostRequest"* (%"class.net::HostResolver"*, %"class.net::HostPortPair"*, %"class.net::NetworkIsolationKey"*, %"class.net::NetLogWithSource"*, %"class.absl::optional.375"*)** %17, i64 3
  %19 = load %"class.net::HostResolver::ResolveHostRequest"* (%"class.net::HostResolver"*, %"class.net::HostPortPair"*, %"class.net::NetworkIsolationKey"*, %"class.net::NetLogWithSource"*, %"class.absl::optional.375"*)*, %"class.net::HostResolver::ResolveHostRequest"* (%"class.net::HostResolver"*, %"class.net::HostPortPair"*, %"class.net::NetworkIsolationKey"*, %"class.net::NetLogWithSource"*, %"class.absl::optional.375"*)** %18, align 8
  %20 = call %"class.net::HostResolver::ResolveHostRequest"* %19(%"class.net::HostResolver"* %0, %"class.net::HostPortPair"* dereferenceable(32) %1, %"class.net::NetworkIsolationKey"* dereferenceable(184) %2, %"class.net::NetLogWithSource"* nonnull dereferenceable(24) %5, %"class.absl::optional.375"* nonnull dereferenceable(28) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %14) #8
  call void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #8
  %21 = call i8* @_Znwm(i64 40) #9, !noalias !2
  %22 = bitcast i8* %21 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %22, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN3net3nqe12_GLOBAL__N_113IsPrivateHostEPNS3_12HostResolverERKNS3_12HostPortPairERKNS3_19NetworkIsolationKeyEE3$_0JEEEFviEE7RunOnceEPNS0_13BindStateBaseEi" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN3net3nqe12_GLOBAL__N_113IsPrivateHostEPNS2_12HostResolverERKNS2_12HostPortPairERKNS2_19NetworkIsolationKeyEE3$_0JEE7DestroyEPKNS0_13BindStateBaseE") #8, !noalias !2
  %23 = bitcast %"class.base::OnceCallback.241"* %7 to i8**
  store i8* %21, i8** %23, align 8, !alias.scope !2
  %24 = bitcast %"class.net::HostResolver::ResolveHostRequest"* %20 to i32 (%"class.net::HostResolver::ResolveHostRequest"*, %"class.base::OnceCallback.241"*)***
  %25 = load i32 (%"class.net::HostResolver::ResolveHostRequest"*, %"class.base::OnceCallback.241"*)**, i32 (%"class.net::HostResolver::ResolveHostRequest"*, %"class.base::OnceCallback.241"*)*** %24, align 8
  %26 = getelementptr inbounds i32 (%"class.net::HostResolver::ResolveHostRequest"*, %"class.base::OnceCallback.241"*)*, i32 (%"class.net::HostResolver::ResolveHostRequest"*, %"class.base::OnceCallback.241"*)** %25, i64 2
  %27 = load i32 (%"class.net::HostResolver::ResolveHostRequest"*, %"class.base::OnceCallback.241"*)*, i32 (%"class.net::HostResolver::ResolveHostRequest"*, %"class.base::OnceCallback.241"*)** %26, align 8
  %28 = call i32 %27(%"class.net::HostResolver::ResolveHostRequest"* %20, %"class.base::OnceCallback.241"* nonnull %7) #8
  %29 = getelementptr inbounds %"class.base::OnceCallback.241", %"class.base::OnceCallback.241"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #8
  %30 = icmp eq i32 %28, 0
  br i1 %30, label %31, label %71

31:                                               ; preds = %3
  %32 = bitcast %"class.net::HostResolver::ResolveHostRequest"* %20 to %"class.absl::optional.380"* (%"class.net::HostResolver::ResolveHostRequest"*)***
  %33 = load %"class.absl::optional.380"* (%"class.net::HostResolver::ResolveHostRequest"*)**, %"class.absl::optional.380"* (%"class.net::HostResolver::ResolveHostRequest"*)*** %32, align 8
  %34 = getelementptr inbounds %"class.absl::optional.380"* (%"class.net::HostResolver::ResolveHostRequest"*)*, %"class.absl::optional.380"* (%"class.net::HostResolver::ResolveHostRequest"*)** %33, i64 3
  %35 = load %"class.absl::optional.380"* (%"class.net::HostResolver::ResolveHostRequest"*)*, %"class.absl::optional.380"* (%"class.net::HostResolver::ResolveHostRequest"*)** %34, align 8
  %36 = call dereferenceable(56) %"class.absl::optional.380"* %35(%"class.net::HostResolver::ResolveHostRequest"* %20) #8
  %37 = getelementptr inbounds %"class.absl::optional.380", %"class.absl::optional.380"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8, i8* %37, align 8, !range !7
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %71, label %40

40:                                               ; preds = %31
  %41 = load %"class.absl::optional.380"* (%"class.net::HostResolver::ResolveHostRequest"*)**, %"class.absl::optional.380"* (%"class.net::HostResolver::ResolveHostRequest"*)*** %32, align 8
  %42 = getelementptr inbounds %"class.absl::optional.380"* (%"class.net::HostResolver::ResolveHostRequest"*)*, %"class.absl::optional.380"* (%"class.net::HostResolver::ResolveHostRequest"*)** %41, i64 3
  %43 = load %"class.absl::optional.380"* (%"class.net::HostResolver::ResolveHostRequest"*)*, %"class.absl::optional.380"* (%"class.net::HostResolver::ResolveHostRequest"*)** %42, align 8
  %44 = call dereferenceable(56) %"class.absl::optional.380"* %43(%"class.net::HostResolver::ResolveHostRequest"* %20) #8
  %45 = getelementptr inbounds %"class.absl::optional.380", %"class.absl::optional.380"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8, i8* %45, align 8, !range !7
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %40
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #10
  unreachable

49:                                               ; preds = %40
  %50 = getelementptr inbounds %"class.absl::optional.380", %"class.absl::optional.380"* %44, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %51 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %50, align 8
  %52 = getelementptr inbounds %"class.absl::optional.380", %"class.absl::optional.380"* %44, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %53 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %52, align 8
  %54 = icmp eq %"class.net::IPEndPoint"* %51, %53
  br i1 %54, label %71, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %56) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %56, i8 -86, i64 20, i1 false)
  %57 = load %"class.absl::optional.380"* (%"class.net::HostResolver::ResolveHostRequest"*)**, %"class.absl::optional.380"* (%"class.net::HostResolver::ResolveHostRequest"*)*** %32, align 8
  %58 = getelementptr inbounds %"class.absl::optional.380"* (%"class.net::HostResolver::ResolveHostRequest"*)*, %"class.absl::optional.380"* (%"class.net::HostResolver::ResolveHostRequest"*)** %57, i64 3
  %59 = load %"class.absl::optional.380"* (%"class.net::HostResolver::ResolveHostRequest"*)*, %"class.absl::optional.380"* (%"class.net::HostResolver::ResolveHostRequest"*)** %58, align 8
  %60 = call dereferenceable(56) %"class.absl::optional.380"* %59(%"class.net::HostResolver::ResolveHostRequest"* %20) #8
  %61 = getelementptr inbounds %"class.absl::optional.380", %"class.absl::optional.380"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8, i8* %61, align 8, !range !7
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %55
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #10
  unreachable

65:                                               ; preds = %55
  %66 = getelementptr inbounds %"class.absl::optional.380", %"class.absl::optional.380"* %60, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %67 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %66, align 8
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %8, %"class.net::IPEndPoint"* dereferenceable(20) %67) #8
  %68 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %9, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %68) #8
  %69 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %8, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %68, i8 -86, i64 17, i1 false)
  call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* nonnull %9, %"class.net::IPAddress"* nonnull dereferenceable(17) %69) #8
  %70 = call zeroext i1 @_ZNK3net9IPAddress18IsPubliclyRoutableEv(%"class.net::IPAddress"* nonnull %9) #8
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %68) #8
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %56) #8
  br i1 %70, label %71, label %72

71:                                               ; preds = %31, %65, %49, %3
  br label %72

72:                                               ; preds = %65, %71
  %73 = phi i1 [ false, %71 ], [ true, %65 ]
  %74 = icmp eq %"class.net::HostResolver::ResolveHostRequest"* %20, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %72
  %76 = bitcast %"class.net::HostResolver::ResolveHostRequest"* %20 to void (%"class.net::HostResolver::ResolveHostRequest"*)***
  %77 = load void (%"class.net::HostResolver::ResolveHostRequest"*)**, void (%"class.net::HostResolver::ResolveHostRequest"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.net::HostResolver::ResolveHostRequest"*)*, void (%"class.net::HostResolver::ResolveHostRequest"*)** %77, i64 1
  %79 = load void (%"class.net::HostResolver::ResolveHostRequest"*)*, void (%"class.net::HostResolver::ResolveHostRequest"*)** %78, align 8
  call void %79(%"class.net::HostResolver::ResolveHostRequest"* nonnull %20) #8
  br label %80

80:                                               ; preds = %72, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8
  ret i1 %73
}

declare %"class.net::URLRequestContext"* @_ZNK3net10URLRequest7contextEv(%"class.net::URLRequest"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN3net12HostPortPair7FromURLERK4GURL(%"class.net::HostPortPair"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net3nqe8internal23IsPrivateHostForTestingEPNS_12HostResolverERKNS_12HostPortPairERKNS_19NetworkIsolationKeyE(%"class.net::HostResolver"*, %"class.net::HostPortPair"* dereferenceable(32), %"class.net::NetworkIsolationKey"* dereferenceable(184)) local_unnamed_addr #0 {
  %4 = tail call fastcc zeroext i1 @_ZN3net3nqe12_GLOBAL__N_113IsPrivateHostEPNS_12HostResolverERKNS_12HostPortPairERKNS_19NetworkIsolationKeyE(%"class.net::HostResolver"* %0, %"class.net::HostPortPair"* dereferenceable(32) %1, %"class.net::NetworkIsolationKey"* dereferenceable(184) %2)
  ret i1 %4
}

declare void @_ZN3net12HostResolver21ResolveHostParametersC1Ev(%"struct.net::HostResolver::ResolveHostParameters"*) unnamed_addr #1

declare void @_ZN3net16NetLogWithSourceC1Ev(%"class.net::NetLogWithSource"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

declare void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #1

declare void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"*, %"class.net::IPAddress"* dereferenceable(17)) unnamed_addr #1

declare zeroext i1 @_ZNK3net9IPAddress18IsPubliclyRoutableEv(%"class.net::IPAddress"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #3

declare void @_ZN3net12HostResolver21ResolveHostParametersC1ERKS1_(%"struct.net::HostResolver::ResolveHostParameters"*, %"struct.net::HostResolver::ResolveHostParameters"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN3net3nqe12_GLOBAL__N_113IsPrivateHostEPNS3_12HostResolverERKNS3_12HostPortPairERKNS3_19NetworkIsolationKeyEE3$_0JEEEFviEE7RunOnceEPNS0_13BindStateBaseEi"(%"class.base::internal::BindStateBase"* nocapture, i32) #4 align 2 {
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN3net3nqe12_GLOBAL__N_113IsPrivateHostEPNS2_12HostResolverERKNS2_12HostPortPairERKNS2_19NetworkIsolationKeyEE3$_0JEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #9
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN3net3nqe12_GLOBAL__N_113IsPrivateHostEPNS3_12HostResolverERKNS3_12HostPortPairERKNS3_19NetworkIsolationKeyEE3$_0JEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN3net3nqe12_GLOBAL__N_113IsPrivateHostEPNS3_12HostResolverERKNS3_12HostPortPairERKNS3_19NetworkIsolationKeyEE3$_0JEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN3net3nqe12_GLOBAL__N_113IsPrivateHostEPNS1_12HostResolverERKNS1_12HostPortPairERKNS1_19NetworkIsolationKeyEE3$_0JEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN3net3nqe12_GLOBAL__N_113IsPrivateHostEPNS1_12HostResolverERKNS1_12HostPortPairERKNS1_19NetworkIsolationKeyEE3$_0JEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
!7 = !{i8 0, i8 2}
