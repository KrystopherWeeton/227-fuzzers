; ModuleID = '../../chrome/browser/media_galleries/fileapi/media_file_validator_factory.cc'
source_filename = "../../chrome/browser/media_galleries/fileapi/media_file_validator_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.MediaFileValidatorFactory = type { %"class.storage::CopyOrMoveFileValidatorFactory", %"class.base::RepeatingCallback" }
%"class.storage::CopyOrMoveFileValidatorFactory" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.storage::CopyOrMoveFileValidator" = type { i32 (...)** }
%"class.storage::FileSystemURL" = type <{ i8, i8, [6 x i8], %"class.url::Origin", i32, [4 x i8], %"class.base::FilePath", %"class.std::__1::basic_string", i32, [4 x i8], %"class.base::FilePath", %"class.std::__1::basic_string", %"class.storage::FileSystemMountOption", [4 x i8] }>
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.2 }
%union.anon.2 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.storage::FileSystemMountOption" = type { i32 }
%class.SupportedImageTypeValidator = type { %class.AVScanningFileValidator, %"class.base::FilePath", %"class.base::OnceCallback", %"class.base::WeakPtrFactory" }
%class.AVScanningFileValidator = type { %"class.storage::CopyOrMoveFileValidator", %"class.base::RepeatingCallback" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.3 }
%class.scoped_refptr.3 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.4", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i8 }
%class.SupportedAudioVideoChecker = type { %class.AVScanningFileValidator, %"class.base::FilePath", %"class.base::OnceCallback", %"class.std::__1::unique_ptr", %"class.base::WeakPtrFactory.13" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %class.SafeAudioVideoChecker* }
%class.SafeAudioVideoChecker = type opaque
%"class.base::WeakPtrFactory.13" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.(anonymous namespace)::InvalidFileValidator" = type { %"class.storage::CopyOrMoveFileValidator" }

$_ZN7storage23CopyOrMoveFileValidatorD2Ev = comdat any

@_ZTV25MediaFileValidatorFactory = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.MediaFileValidatorFactory*)* @_ZN25MediaFileValidatorFactoryD2Ev to i8*), i8* bitcast (void (%class.MediaFileValidatorFactory*)* @_ZN25MediaFileValidatorFactoryD0Ev to i8*), i8* bitcast (%"class.storage::CopyOrMoveFileValidator"* (%class.MediaFileValidatorFactory*, %"class.storage::FileSystemURL"*, %"class.base::FilePath"*)* @_ZN25MediaFileValidatorFactory29CreateCopyOrMoveFileValidatorERKN7storage13FileSystemURLERKN4base8FilePathE to i8*)] }, align 8
@_ZTVN12_GLOBAL__N_120InvalidFileValidatorE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.storage::CopyOrMoveFileValidator"*)* @_ZN7storage23CopyOrMoveFileValidatorD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::InvalidFileValidator"*)* @_ZN12_GLOBAL__N_120InvalidFileValidatorD0Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::InvalidFileValidator"*, %"class.base::OnceCallback"*)* @_ZN12_GLOBAL__N_120InvalidFileValidator23StartPreWriteValidationEN4base12OnceCallbackIFvNS1_4File5ErrorEEEE to i8*), i8* bitcast (void (%"class.(anonymous namespace)::InvalidFileValidator"*, %"class.base::FilePath"*, %"class.base::OnceCallback"*)* @_ZN12_GLOBAL__N_120InvalidFileValidator24StartPostWriteValidationERKN4base8FilePathENS1_12OnceCallbackIFvNS1_4File5ErrorEEEE to i8*)] }, align 8

@_ZN25MediaFileValidatorFactoryC1EN4base17RepeatingCallbackIFvN4mojo15PendingReceiverIN10quarantine5mojom10QuarantineEEEEEE = hidden unnamed_addr alias void (%class.MediaFileValidatorFactory*, %"class.base::RepeatingCallback"*), void (%class.MediaFileValidatorFactory*, %"class.base::RepeatingCallback"*)* @_ZN25MediaFileValidatorFactoryC2EN4base17RepeatingCallbackIFvN4mojo15PendingReceiverIN10quarantine5mojom10QuarantineEEEEEE
@_ZN25MediaFileValidatorFactoryD1Ev = hidden unnamed_addr alias void (%class.MediaFileValidatorFactory*), void (%class.MediaFileValidatorFactory*)* @_ZN25MediaFileValidatorFactoryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN25MediaFileValidatorFactoryC2EN4base17RepeatingCallbackIFvN4mojo15PendingReceiverIN10quarantine5mojom10QuarantineEEEEEE(%class.MediaFileValidatorFactory*, %"class.base::RepeatingCallback"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.MediaFileValidatorFactory, %class.MediaFileValidatorFactory* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV25MediaFileValidatorFactory, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.MediaFileValidatorFactory, %class.MediaFileValidatorFactory* %0, i64 0, i32 1, i32 0
  %5 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %4, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %5) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN25MediaFileValidatorFactoryD2Ev(%class.MediaFileValidatorFactory*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.MediaFileValidatorFactory, %class.MediaFileValidatorFactory* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV25MediaFileValidatorFactory, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.MediaFileValidatorFactory, %class.MediaFileValidatorFactory* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN25MediaFileValidatorFactoryD0Ev(%class.MediaFileValidatorFactory*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.MediaFileValidatorFactory, %class.MediaFileValidatorFactory* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV25MediaFileValidatorFactory, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.MediaFileValidatorFactory, %class.MediaFileValidatorFactory* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #6
  %4 = bitcast %class.MediaFileValidatorFactory* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.storage::CopyOrMoveFileValidator"* @_ZN25MediaFileValidatorFactory29CreateCopyOrMoveFileValidatorERKN7storage13FileSystemURLERKN4base8FilePathE(%class.MediaFileValidatorFactory*, %"class.storage::FileSystemURL"* dereferenceable(208), %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::FilePath", align 8
  %5 = alloca %"class.base::RepeatingCallback", align 8
  %6 = alloca %"class.base::RepeatingCallback", align 8
  %7 = bitcast %"class.base::FilePath"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #6
  %8 = getelementptr inbounds %"class.storage::FileSystemURL", %"class.storage::FileSystemURL"* %1, i64 0, i32 6
  %9 = bitcast %"class.base::FilePath"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZN4base8FilePathC1ERKS0_(%"class.base::FilePath"* nonnull %4, %"class.base::FilePath"* dereferenceable(24) %8) #6
  %10 = call zeroext i1 @_ZN27SupportedImageTypeValidator16SupportsFileTypeERKN4base8FilePathE(%"class.base::FilePath"* nonnull dereferenceable(24) %4) #6
  br i1 %10, label %11, label %17

11:                                               ; preds = %3
  %12 = call i8* @_Znwm(i64 64) #7
  %13 = bitcast i8* %12 to %class.SupportedImageTypeValidator*
  %14 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0
  %15 = getelementptr inbounds %class.MediaFileValidatorFactory, %class.MediaFileValidatorFactory* %0, i64 0, i32 1, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %14, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %15) #6
  call void @_ZN27SupportedImageTypeValidatorC1ERKN4base8FilePathENS0_17RepeatingCallbackIFvN4mojo15PendingReceiverIN10quarantine5mojom10QuarantineEEEEEE(%class.SupportedImageTypeValidator* nonnull %13, %"class.base::FilePath"* dereferenceable(24) %2, %"class.base::RepeatingCallback"* nonnull %5) #6
  %16 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %16) #6
  br label %28

17:                                               ; preds = %3
  %18 = call zeroext i1 @_ZN26SupportedAudioVideoChecker16SupportsFileTypeERKN4base8FilePathE(%"class.base::FilePath"* nonnull dereferenceable(24) %4) #6
  br i1 %18, label %19, label %25

19:                                               ; preds = %17
  %20 = call i8* @_Znwm(i64 72) #7
  %21 = bitcast i8* %20 to %class.SupportedAudioVideoChecker*
  %22 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0
  %23 = getelementptr inbounds %class.MediaFileValidatorFactory, %class.MediaFileValidatorFactory* %0, i64 0, i32 1, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %22, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %23) #6
  call void @_ZN26SupportedAudioVideoCheckerC1ERKN4base8FilePathENS0_17RepeatingCallbackIFvN4mojo15PendingReceiverIN10quarantine5mojom10QuarantineEEEEEE(%class.SupportedAudioVideoChecker* nonnull %21, %"class.base::FilePath"* dereferenceable(24) %2, %"class.base::RepeatingCallback"* nonnull %6) #6
  %24 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #6
  br label %28

25:                                               ; preds = %17
  %26 = call i8* @_Znwm(i64 8) #7
  %27 = bitcast i8* %26 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_120InvalidFileValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  br label %28

28:                                               ; preds = %25, %19, %11
  %29 = phi i8* [ %12, %11 ], [ %20, %19 ], [ %26, %25 ]
  %30 = bitcast i8* %29 to %"class.storage::CopyOrMoveFileValidator"*
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #6
  ret %"class.storage::CopyOrMoveFileValidator"* %30
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN4base8FilePathC1ERKS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #4

declare zeroext i1 @_ZN27SupportedImageTypeValidator16SupportsFileTypeERKN4base8FilePathE(%"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN27SupportedImageTypeValidatorC1ERKN4base8FilePathENS0_17RepeatingCallbackIFvN4mojo15PendingReceiverIN10quarantine5mojom10QuarantineEEEEEE(%class.SupportedImageTypeValidator*, %"class.base::FilePath"* dereferenceable(24), %"class.base::RepeatingCallback"*) unnamed_addr #4

declare zeroext i1 @_ZN26SupportedAudioVideoChecker16SupportsFileTypeERKN4base8FilePathE(%"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #4

declare void @_ZN26SupportedAudioVideoCheckerC1ERKN4base8FilePathENS0_17RepeatingCallbackIFvN4mojo15PendingReceiverIN10quarantine5mojom10QuarantineEEEEEE(%class.SupportedAudioVideoChecker*, %"class.base::FilePath"* dereferenceable(24), %"class.base::RepeatingCallback"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7storage23CopyOrMoveFileValidatorD2Ev(%"class.storage::CopyOrMoveFileValidator"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_120InvalidFileValidatorD0Ev(%"class.(anonymous namespace)::InvalidFileValidator"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::InvalidFileValidator"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_120InvalidFileValidator23StartPreWriteValidationEN4base12OnceCallbackIFvNS1_4File5ErrorEEEE(%"class.(anonymous namespace)::InvalidFileValidator"* nocapture readnone, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6
  %5 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %7, i64* %8, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %10 = inttoptr i64 %7 to %"class.base::internal::BindStateBase"*
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %10, i64 0, i32 1
  %12 = bitcast void ()** %11 to void (%"class.base::internal::BindStateBase"*, i32)**
  %13 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %12, align 8
  tail call void %13(%"class.base::internal::BindStateBase"* %10, i32 -11) #6
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_120InvalidFileValidator24StartPostWriteValidationERKN4base8FilePathENS1_12OnceCallbackIFvNS1_4File5ErrorEEEE(%"class.(anonymous namespace)::InvalidFileValidator"* nocapture readnone, %"class.base::FilePath"* nocapture readnone dereferenceable(24), %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %11 = inttoptr i64 %8 to %"class.base::internal::BindStateBase"*
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %11, i64 0, i32 1
  %13 = bitcast void ()** %12 to void (%"class.base::internal::BindStateBase"*, i32)**
  %14 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %13, align 8
  tail call void %14(%"class.base::internal::BindStateBase"* %11, i32 -11) #6
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
