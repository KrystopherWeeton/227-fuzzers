; ModuleID = '../../components/subresource_filter/core/common/memory_mapped_ruleset.cc'
source_filename = "../../components/subresource_filter/core/common/memory_mapped_ruleset.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.subresource_filter::MemoryMappedRuleset" = type { %"class.base::RefCounted", %"class.base::SupportsWeakPtr", %"class.base::MemoryMappedFile" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%"class.base::MemoryMappedFile" = type { %"class.base::File", i8*, i64 }
%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }

@_ZN18subresource_filterL44g_fail_memory_map_initialization_for_testingE = internal unnamed_addr global i8 0, align 1

@_ZN18subresource_filter19MemoryMappedRulesetC1Ev = hidden unnamed_addr alias void (%"class.subresource_filter::MemoryMappedRuleset"*), void (%"class.subresource_filter::MemoryMappedRuleset"*)* @_ZN18subresource_filter19MemoryMappedRulesetC2Ev
@_ZN18subresource_filter19MemoryMappedRulesetD1Ev = hidden unnamed_addr alias void (%"class.subresource_filter::MemoryMappedRuleset"*), void (%"class.subresource_filter::MemoryMappedRuleset"*)* @_ZN18subresource_filter19MemoryMappedRulesetD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.subresource_filter::MemoryMappedRuleset"* @_ZN18subresource_filter19MemoryMappedRuleset19CreateAndInitializeEN4base4FileE(%"class.base::File"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::File", align 8
  %3 = alloca %"class.base::File", align 8
  %4 = load i8, i8* @_ZN18subresource_filterL44g_fail_memory_map_initialization_for_testingE, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %24

6:                                                ; preds = %1
  %7 = tail call i8* @_Znwm(i64 88) #7
  %8 = bitcast i8* %7 to i32*
  store i32 1, i32* %8, align 4
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to %"class.base::internal::WeakReferenceOwner"*
  tail call void @_ZN4base8internal18WeakReferenceOwnerC1Ev(%"class.base::internal::WeakReferenceOwner"* %10) #8
  %11 = getelementptr inbounds i8, i8* %7, i64 16
  %12 = bitcast i8* %11 to %"class.base::MemoryMappedFile"*
  tail call void @_ZN4base16MemoryMappedFileC1Ev(%"class.base::MemoryMappedFile"* %12) #8
  %13 = load i8, i8* @_ZN18subresource_filterL44g_fail_memory_map_initialization_for_testingE, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %6
  %16 = ptrtoint i8* %7 to i64
  call void @_ZN4base4FileC1EOS0_(%"class.base::File"* nonnull %3, %"class.base::File"* dereferenceable(56) %0) #8
  %17 = bitcast %"class.base::File"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %17)
  call void @_ZN4base4FileC1EOS0_(%"class.base::File"* nonnull %2, %"class.base::File"* nonnull dereferenceable(56) %3) #8
  %18 = call zeroext i1 @_ZN4base16MemoryMappedFile10InitializeENS_4FileENS0_6AccessE(%"class.base::MemoryMappedFile"* %12, %"class.base::File"* nonnull %2, i32 0) #8
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %17)
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %3) #8
  br i1 %18, label %24, label %19

19:                                               ; preds = %6, %15
  %20 = bitcast i8* %7 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* nonnull %20) #8
  %21 = load i32, i32* %8, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %19
  call void @_ZN4base16MemoryMappedFileD1Ev(%"class.base::MemoryMappedFile"* %12) #8
  call void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"* %10) #8
  call void @_ZdlPv(i8* nonnull %7) #7
  br label %24

24:                                               ; preds = %15, %23, %19, %1
  %25 = phi i64 [ 0, %1 ], [ 0, %19 ], [ 0, %23 ], [ %16, %15 ]
  %26 = inttoptr i64 %25 to %"class.subresource_filter::MemoryMappedRuleset"*
  ret %"class.subresource_filter::MemoryMappedRuleset"* %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN4base4FileC1EOS0_(%"class.base::File"*, %"class.base::File"* dereferenceable(56)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base4FileD1Ev(%"class.base::File"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN18subresource_filter19MemoryMappedRuleset30SetMemoryMapFailuresForTestingEb(i1 zeroext) local_unnamed_addr #5 align 2 {
  %2 = zext i1 %0 to i8
  store i8 %2, i8* @_ZN18subresource_filterL44g_fail_memory_map_initialization_for_testingE, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18subresource_filter19MemoryMappedRulesetC2Ev(%"class.subresource_filter::MemoryMappedRuleset"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.subresource_filter::MemoryMappedRuleset", %"class.subresource_filter::MemoryMappedRuleset"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 1, i32* %2, align 4
  %3 = getelementptr inbounds %"class.subresource_filter::MemoryMappedRuleset", %"class.subresource_filter::MemoryMappedRuleset"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerC1Ev(%"class.base::internal::WeakReferenceOwner"* %3) #8
  %4 = getelementptr inbounds %"class.subresource_filter::MemoryMappedRuleset", %"class.subresource_filter::MemoryMappedRuleset"* %0, i64 0, i32 2
  tail call void @_ZN4base16MemoryMappedFileC1Ev(%"class.base::MemoryMappedFile"* %4) #8
  ret void
}

declare void @_ZN4base16MemoryMappedFileC1Ev(%"class.base::MemoryMappedFile"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18subresource_filter19MemoryMappedRulesetD2Ev(%"class.subresource_filter::MemoryMappedRuleset"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.subresource_filter::MemoryMappedRuleset", %"class.subresource_filter::MemoryMappedRuleset"* %0, i64 0, i32 2
  tail call void @_ZN4base16MemoryMappedFileD1Ev(%"class.base::MemoryMappedFile"* %2) #8
  %3 = getelementptr inbounds %"class.subresource_filter::MemoryMappedRuleset", %"class.subresource_filter::MemoryMappedRuleset"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"* %3) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base16MemoryMappedFileD1Ev(%"class.base::MemoryMappedFile"*) unnamed_addr #4

declare zeroext i1 @_ZN4base16MemoryMappedFile10InitializeENS_4FileENS0_6AccessE(%"class.base::MemoryMappedFile"*, %"class.base::File"*, i32) local_unnamed_addr #3

declare void @_ZN4base8internal18WeakReferenceOwnerC1Ev(%"class.base::internal::WeakReferenceOwner"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"*) unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
