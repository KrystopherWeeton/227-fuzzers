; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/aggressive_dead_code_elim_pass.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/aggressive_dead_code_elim_pass.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.spvtools::opt::AggressiveDCEPass" = type { %"class.spvtools::opt::MemPass", i8, i8, i8, %"class.std::__1::queue", %"class.std::__1::unordered_map.941", %"class.std::__1::unordered_map.941", %"class.std::__1::unordered_map.969", %"class.std::__1::unordered_map.993", %"class.std::__1::vector.1017", %"class.spvtools::utils::BitVector", %"class.std::__1::unordered_set.910", %"class.std::__1::vector.1017", %"class.std::__1::unordered_set.1021" }
%"class.spvtools::opt::MemPass" = type { %"class.spvtools::opt::Pass.base", [7 x i8], %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_map.249" }
%"class.spvtools::opt::Pass.base" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8 }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%struct.spv_position_t = type { i64, i64, i64 }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.937" }
%"struct.std::__1::__split_buffer" = type { %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"***, %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.spvtools::opt::Instruction"*** }
%"class.std::__1::__compressed_pair.937" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.941" = type { %"class.std::__1::__hash_table.942" }
%"class.std::__1::__hash_table.942" = type <{ %"class.std::__1::unique_ptr.943", %"class.std::__1::__compressed_pair.953", %"class.std::__1::__compressed_pair.958", %"class.std::__1::__compressed_pair.963", [4 x i8] }>
%"class.std::__1::unique_ptr.943" = type { %"class.std::__1::__compressed_pair.944" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.945", %"struct.std::__1::__compressed_pair_elem.947" }
%"struct.std::__1::__compressed_pair_elem.945" = type { %"struct.std::__1::__hash_node_base.946"** }
%"struct.std::__1::__hash_node_base.946" = type { %"struct.std::__1::__hash_node_base.946"* }
%"struct.std::__1::__compressed_pair_elem.947" = type { %"class.std::__1::__bucket_list_deallocator.948" }
%"class.std::__1::__bucket_list_deallocator.948" = type { %"class.std::__1::__compressed_pair.949" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.953" = type { %"struct.std::__1::__compressed_pair_elem.954" }
%"struct.std::__1::__compressed_pair_elem.954" = type { %"struct.std::__1::__hash_node_base.946" }
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.969" = type { %"class.std::__1::__hash_table.970" }
%"class.std::__1::__hash_table.970" = type <{ %"class.std::__1::unique_ptr.971", %"class.std::__1::__compressed_pair.981", %"class.std::__1::__compressed_pair.986", %"class.std::__1::__compressed_pair.989", [4 x i8] }>
%"class.std::__1::unique_ptr.971" = type { %"class.std::__1::__compressed_pair.972" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973", %"struct.std::__1::__compressed_pair_elem.975" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"struct.std::__1::__hash_node_base.974"** }
%"struct.std::__1::__hash_node_base.974" = type { %"struct.std::__1::__hash_node_base.974"* }
%"struct.std::__1::__compressed_pair_elem.975" = type { %"class.std::__1::__bucket_list_deallocator.976" }
%"class.std::__1::__bucket_list_deallocator.976" = type { %"class.std::__1::__compressed_pair.977" }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.982" }
%"struct.std::__1::__compressed_pair_elem.982" = type { %"struct.std::__1::__hash_node_base.974" }
%"class.std::__1::__compressed_pair.986" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.993" = type { %"class.std::__1::__hash_table.994" }
%"class.std::__1::__hash_table.994" = type <{ %"class.std::__1::unique_ptr.995", %"class.std::__1::__compressed_pair.1005", %"class.std::__1::__compressed_pair.1010", %"class.std::__1::__compressed_pair.1013", [4 x i8] }>
%"class.std::__1::unique_ptr.995" = type { %"class.std::__1::__compressed_pair.996" }
%"class.std::__1::__compressed_pair.996" = type { %"struct.std::__1::__compressed_pair_elem.997", %"struct.std::__1::__compressed_pair_elem.999" }
%"struct.std::__1::__compressed_pair_elem.997" = type { %"struct.std::__1::__hash_node_base.998"** }
%"struct.std::__1::__hash_node_base.998" = type { %"struct.std::__1::__hash_node_base.998"* }
%"struct.std::__1::__compressed_pair_elem.999" = type { %"class.std::__1::__bucket_list_deallocator.1000" }
%"class.std::__1::__bucket_list_deallocator.1000" = type { %"class.std::__1::__compressed_pair.1001" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.1006" }
%"struct.std::__1::__compressed_pair_elem.1006" = type { %"struct.std::__1::__hash_node_base.998" }
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.std::__1::unordered_set.910" = type { %"class.std::__1::__hash_table.911" }
%"class.std::__1::__hash_table.911" = type <{ %"class.std::__1::unique_ptr.912", %"class.std::__1::__compressed_pair.922", %"class.std::__1::__compressed_pair.927", %"class.std::__1::__compressed_pair.929", [4 x i8] }>
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914", %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"struct.std::__1::__hash_node_base.915"** }
%"struct.std::__1::__hash_node_base.915" = type { %"struct.std::__1::__hash_node_base.915"* }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.std::__1::__bucket_list_deallocator.917" }
%"class.std::__1::__bucket_list_deallocator.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"struct.std::__1::__hash_node_base.915" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.1017" = type { %"class.std::__1::__vector_base.1018" }
%"class.std::__1::__vector_base.1018" = type { %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"**, %"class.std::__1::__compressed_pair.1019" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"class.spvtools::opt::Instruction"** }
%"class.std::__1::unordered_set.1021" = type { %"class.std::__1::__hash_table.1022" }
%"class.std::__1::__hash_table.1022" = type <{ %"class.std::__1::unique_ptr.1023", %"class.std::__1::__compressed_pair.1033", %"class.std::__1::__compressed_pair.1038", %"class.std::__1::__compressed_pair.1042", [4 x i8] }>
%"class.std::__1::unique_ptr.1023" = type { %"class.std::__1::__compressed_pair.1024" }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.1025", %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1025" = type { %"struct.std::__1::__hash_node_base.1026"** }
%"struct.std::__1::__hash_node_base.1026" = type { %"struct.std::__1::__hash_node_base.1026"* }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"class.std::__1::__bucket_list_deallocator.1028" }
%"class.std::__1::__bucket_list_deallocator.1028" = type { %"class.std::__1::__compressed_pair.1029" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.1034" }
%"struct.std::__1::__compressed_pair_elem.1034" = type { %"struct.std::__1::__hash_node_base.1026" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::default_delete.120" = type { i8 }
%"class.std::__1::function.1047" = type { %"class.std::__1::__function::__policy_func.1051" }
%"class.std::__1::__function::__policy_func.1051" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1052", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1052" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1053" }
%"class.std::__1::__compressed_pair.1053" = type { %"struct.std::__1::__compressed_pair_elem.1054" }
%"struct.std::__1::__compressed_pair_elem.1054" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1060" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.spvtools::opt::Instruction"** }
%"class.std::__1::tuple.1147" = type { i8 }
%"class.std::__1::tuple.1275" = type { %"struct.std::__1::__tuple_impl.1276" }
%"struct.std::__1::__tuple_impl.1276" = type { %"class.std::__1::__tuple_leaf.1277" }
%"class.std::__1::__tuple_leaf.1277" = type { %"class.spvtools::opt::BasicBlock"** }
%"class.std::__1::stack" = type { %"class.std::__1::deque" }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"class.spvtools::opt::BasicBlock"* }
%"class.std::__1::function.1179" = type { %"class.std::__1::__function::__policy_func.1183" }
%"class.std::__1::__function::__policy_func.1183" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1184", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1184" = type { i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.std::__1::function.1218" = type { %"class.std::__1::__function::__policy_func.1222" }
%"class.std::__1::__function::__policy_func.1222" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1223", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1223" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::stack.1068" = type { %"class.std::__1::deque.1069" }
%"class.std::__1::deque.1069" = type { %"class.std::__1::__deque_base.1070" }
%"class.std::__1::__deque_base.1070" = type { %"struct.std::__1::__split_buffer.1071", i64, %"class.std::__1::__compressed_pair.1077" }
%"struct.std::__1::__split_buffer.1071" = type { i8**, i8**, i8**, %"class.std::__1::__compressed_pair.1072" }
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.1073" }
%"struct.std::__1::__compressed_pair_elem.1073" = type { i8** }
%"class.std::__1::__compressed_pair.1077" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::stack.1081" = type { %"class.std::__1::deque.1082" }
%"class.std::__1::deque.1082" = type { %"class.std::__1::__deque_base.1083" }
%"class.std::__1::__deque_base.1083" = type { %"struct.std::__1::__split_buffer.1084", i64, %"class.std::__1::__compressed_pair.1090" }
%"struct.std::__1::__split_buffer.1084" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.1085" }
%"class.std::__1::__compressed_pair.1085" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"struct.std::__1::__compressed_pair_elem.1086" = type { i32** }
%"class.std::__1::__compressed_pair.1090" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::function.1092" = type { %"class.std::__1::__function::__policy_func.1096" }
%"class.std::__1::__function::__policy_func.1096" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1097", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1097" = type { void (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::default_delete.150" = type { i8 }
%"class.std::__1::function.1102" = type { %"class.std::__1::__function::__policy_func.1106" }
%"class.std::__1::__function::__policy_func.1106" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1107", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1107" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)* }
%"class.std::__1::__tree_node.1239" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::unordered_set.1110" = type { %"class.std::__1::__hash_table.1111" }
%"class.std::__1::__hash_table.1111" = type <{ %"class.std::__1::unique_ptr.1112", %"class.std::__1::__compressed_pair.1122", %"class.std::__1::__compressed_pair.1127", %"class.std::__1::__compressed_pair.1129", [4 x i8] }>
%"class.std::__1::unique_ptr.1112" = type { %"class.std::__1::__compressed_pair.1113" }
%"class.std::__1::__compressed_pair.1113" = type { %"struct.std::__1::__compressed_pair_elem.1114", %"struct.std::__1::__compressed_pair_elem.1116" }
%"struct.std::__1::__compressed_pair_elem.1114" = type { %"struct.std::__1::__hash_node_base.1115"** }
%"struct.std::__1::__hash_node_base.1115" = type { %"struct.std::__1::__hash_node_base.1115"* }
%"struct.std::__1::__compressed_pair_elem.1116" = type { %"class.std::__1::__bucket_list_deallocator.1117" }
%"class.std::__1::__bucket_list_deallocator.1117" = type { %"class.std::__1::__compressed_pair.1118" }
%"class.std::__1::__compressed_pair.1118" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1122" = type { %"struct.std::__1::__compressed_pair_elem.1123" }
%"struct.std::__1::__compressed_pair_elem.1123" = type { %"struct.std::__1::__hash_node_base.1115" }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1129" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::opt::UptrVectorIterator.1133" = type { %"class.std::__1::vector.26"*, %"class.std::__1::__wrap_iter.1134" }
%"class.std::__1::__wrap_iter.1134" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.1137" }
%"struct.std::__1::pair.1137" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"struct.std::__1::__split_buffer.1157" = type { %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"***, %"class.std::__1::__compressed_pair.1158" }
%"class.std::__1::__compressed_pair.1158" = type { %"struct.std::__1::__compressed_pair_elem.933", %"struct.std::__1::__compressed_pair_elem.1159" }
%"struct.std::__1::__compressed_pair_elem.1159" = type { %"class.std::__1::allocator.935"* }
%"class.std::__1::allocator.935" = type { i8 }
%"struct.std::__1::__hash_node_base.1197" = type { %"struct.std::__1::__hash_node_base.1197"* }
%"class.spvtools::opt::Pass" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8, [7 x i8] }>
%"class.std::__1::__function::__default_alloc_func.1268" = type { %class.anon }
%class.anon = type { %"class.spvtools::opt::AggressiveDCEPass"*, i32, %"class.spvtools::opt::Function"* }
%"class.std::__1::__function::__default_alloc_func.1304" = type { %class.anon.1065 }
%class.anon.1065 = type { i32, i32, %"class.spvtools::opt::AggressiveDCEPass"* }
%"struct.std::__1::__split_buffer.1310" = type { i8**, i8**, i8**, %"class.std::__1::__compressed_pair.1311" }
%"class.std::__1::__compressed_pair.1311" = type { %"struct.std::__1::__compressed_pair_elem.1073", %"struct.std::__1::__compressed_pair_elem.1312" }
%"struct.std::__1::__compressed_pair_elem.1312" = type { %"class.std::__1::allocator.1075"* }
%"class.std::__1::allocator.1075" = type { i8 }
%"struct.std::__1::__split_buffer.1319" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.1320" }
%"class.std::__1::__compressed_pair.1320" = type { %"struct.std::__1::__compressed_pair_elem.1086", %"struct.std::__1::__compressed_pair_elem.1321" }
%"struct.std::__1::__compressed_pair_elem.1321" = type { %"class.std::__1::allocator.1088"* }
%"class.std::__1::allocator.1088" = type { i8 }
%"class.std::__1::__function::__default_alloc_func.1334" = type { %class.anon.1100 }
%class.anon.1100 = type { %"class.spvtools::opt::AggressiveDCEPass"*, i8*, i32* }

$_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools3opt9IRContext15get_instr_blockEj = comdat any

$_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE = comdat any

$_ZN8spvtools3opt17AggressiveDCEPassD2Ev = comdat any

$_ZN8spvtools3opt17AggressiveDCEPassD0Ev = comdat any

$_ZNK8spvtools3opt17AggressiveDCEPass4nameEv = comdat any

$_ZN8spvtools3opt17AggressiveDCEPass20GetPreservedAnalysesEv = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv = comdat any

$_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZNSt3__112__deque_baseIPN8spvtools3opt11InstructionENS_9allocatorIS4_EEED2Ev = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZNSt3__15dequeIPN8spvtools3opt11InstructionENS_9allocatorIS4_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPPN8spvtools3opt11InstructionENS_9allocatorIS5_EEE9push_backEOS5_ = comdat any

$_ZNSt3__114__split_bufferIPPN8spvtools3opt11InstructionENS_9allocatorIS5_EEE10push_frontEOS5_ = comdat any

$_ZNSt3__114__split_bufferIPPN8spvtools3opt11InstructionERNS_9allocatorIS5_EEE10push_frontERKS5_ = comdat any

$_ZN8spvtools3opt3CFGD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD0Ev = comdat any

$_ZN8spvtools3opt11InstructionD2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt11InstructionD0Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_ = comdat any

$_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__16vectorImNS_9allocatorImEEE8__appendEmRKm = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZN8spvtools3opt7MemPassD2Ev = comdat any

$_ZN8spvtools3opt7MemPassD0Ev = comdat any

$_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv = comdat any

$_ZN8spvtools3opt4PassD2Ev = comdat any

$_ZN8spvtools3opt4PassD0Ev = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm = comdat any

$_ZNKSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZNSt3__15dequeIbNS_9allocatorIbEEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPbNS_9allocatorIS1_EEE9push_backEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPbNS_9allocatorIS1_EEE10push_frontEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPbRNS_9allocatorIS1_EEE10push_frontERKS1_ = comdat any

$_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE9push_backEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE10push_frontERKS1_ = comdat any

$_ZNSt3__112__hash_tableIPKN8spvtools3opt8FunctionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS5_JS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPKN8spvtools3opt8FunctionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPKN8spvtools3opt8FunctionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZTVN8spvtools3opt15InstructionListE = comdat any

$_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = comdat any

$_ZTVN8spvtools3opt11InstructionE = comdat any

$_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVN8spvtools3opt7MemPassE = comdat any

$_ZTVN8spvtools3opt4PassE = comdat any

@_ZTVN8spvtools3opt17AggressiveDCEPassE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::AggressiveDCEPass"*)* @_ZN8spvtools3opt17AggressiveDCEPassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::AggressiveDCEPass"*)* @_ZN8spvtools3opt17AggressiveDCEPassD0Ev to i8*), i8* bitcast (i8* (%"class.spvtools::opt::AggressiveDCEPass"*)* @_ZNK8spvtools3opt17AggressiveDCEPass4nameEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::AggressiveDCEPass"*)* @_ZN8spvtools3opt17AggressiveDCEPass20GetPreservedAnalysesEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::AggressiveDCEPass"*)* @_ZN8spvtools3opt17AggressiveDCEPass7ProcessEv to i8*)] }, align 8
@.str = private unnamed_addr constant [41 x i8] c"SPV_AMD_shader_explicit_vertex_parameter\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"SPV_AMD_shader_trinary_minmax\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"SPV_AMD_gcn_shader\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"SPV_KHR_shader_ballot\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"SPV_AMD_shader_ballot\00", align 1
@.str.5 = private unnamed_addr constant [30 x i8] c"SPV_AMD_gpu_shader_half_float\00", align 1
@.str.6 = private unnamed_addr constant [31 x i8] c"SPV_KHR_shader_draw_parameters\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"SPV_KHR_subgroup_vote\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"SPV_KHR_8bit_storage\00", align 1
@.str.9 = private unnamed_addr constant [22 x i8] c"SPV_KHR_16bit_storage\00", align 1
@.str.10 = private unnamed_addr constant [21 x i8] c"SPV_KHR_device_group\00", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"SPV_KHR_multiview\00", align 1
@.str.12 = private unnamed_addr constant [38 x i8] c"SPV_NVX_multiview_per_view_attributes\00", align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"SPV_NV_viewport_array2\00", align 1
@.str.14 = private unnamed_addr constant [29 x i8] c"SPV_NV_stereo_view_rendering\00", align 1
@.str.15 = private unnamed_addr constant [37 x i8] c"SPV_NV_sample_mask_override_coverage\00", align 1
@.str.16 = private unnamed_addr constant [35 x i8] c"SPV_NV_geometry_shader_passthrough\00", align 1
@.str.17 = private unnamed_addr constant [32 x i8] c"SPV_AMD_texture_gather_bias_lod\00", align 1
@.str.18 = private unnamed_addr constant [37 x i8] c"SPV_KHR_storage_buffer_storage_class\00", align 1
@.str.19 = private unnamed_addr constant [25 x i8] c"SPV_AMD_gpu_shader_int16\00", align 1
@.str.20 = private unnamed_addr constant [28 x i8] c"SPV_KHR_post_depth_coverage\00", align 1
@.str.21 = private unnamed_addr constant [34 x i8] c"SPV_KHR_shader_atomic_counter_ops\00", align 1
@.str.22 = private unnamed_addr constant [30 x i8] c"SPV_EXT_shader_stencil_export\00", align 1
@.str.23 = private unnamed_addr constant [36 x i8] c"SPV_EXT_shader_viewport_index_layer\00", align 1
@.str.24 = private unnamed_addr constant [36 x i8] c"SPV_AMD_shader_image_load_store_lod\00", align 1
@.str.25 = private unnamed_addr constant [29 x i8] c"SPV_AMD_shader_fragment_mask\00", align 1
@.str.26 = private unnamed_addr constant [31 x i8] c"SPV_EXT_fragment_fully_covered\00", align 1
@.str.27 = private unnamed_addr constant [36 x i8] c"SPV_AMD_gpu_shader_half_float_fetch\00", align 1
@.str.28 = private unnamed_addr constant [27 x i8] c"SPV_GOOGLE_decorate_string\00", align 1
@.str.29 = private unnamed_addr constant [31 x i8] c"SPV_GOOGLE_hlsl_functionality1\00", align 1
@.str.30 = private unnamed_addr constant [21 x i8] c"SPV_GOOGLE_user_type\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"SPV_NV_shader_subgroup_partitioned\00", align 1
@.str.32 = private unnamed_addr constant [36 x i8] c"SPV_EXT_demote_to_helper_invocation\00", align 1
@.str.33 = private unnamed_addr constant [28 x i8] c"SPV_EXT_descriptor_indexing\00", align 1
@.str.34 = private unnamed_addr constant [35 x i8] c"SPV_NV_fragment_shader_barycentric\00", align 1
@.str.35 = private unnamed_addr constant [34 x i8] c"SPV_NV_compute_shader_derivatives\00", align 1
@.str.36 = private unnamed_addr constant [30 x i8] c"SPV_NV_shader_image_footprint\00", align 1
@.str.37 = private unnamed_addr constant [20 x i8] c"SPV_NV_shading_rate\00", align 1
@.str.38 = private unnamed_addr constant [19 x i8] c"SPV_NV_mesh_shader\00", align 1
@.str.39 = private unnamed_addr constant [19 x i8] c"SPV_NV_ray_tracing\00", align 1
@.str.40 = private unnamed_addr constant [20 x i8] c"SPV_KHR_ray_tracing\00", align 1
@.str.41 = private unnamed_addr constant [18 x i8] c"SPV_KHR_ray_query\00", align 1
@.str.42 = private unnamed_addr constant [36 x i8] c"SPV_EXT_fragment_invocation_density\00", align 1
@.str.43 = private unnamed_addr constant [32 x i8] c"SPV_EXT_physical_storage_buffer\00", align 1
@.str.44 = private unnamed_addr constant [29 x i8] c"SPV_KHR_terminate_invocation\00", align 1
@.str.45 = private unnamed_addr constant [21 x i8] c"SPV_KHR_shader_clock\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt15InstructionListE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt11InstructionE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZTVN8spvtools3opt7MemPassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::MemPass"*)* @_ZN8spvtools3opt7MemPassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::MemPass"*)* @_ZN8spvtools3opt7MemPassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt4PassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.47 = private unnamed_addr constant [31 x i8] c"eliminate-dead-code-aggressive\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass9AddStoresEPNS5_8FunctionEjE3$_0FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass9AddStoresEPNS5_8FunctionEjE3$_0FvPNS5_11InstructionEEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass9AddStoresEPNS5_8FunctionEjE3$_0FvPNS5_11InstructionEEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass12IsTargetDeadEPNS5_11InstructionEE3$_1FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass31AddBreaksAndContinuesToWorklistEPNS5_11InstructionEE3$_2FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass31AddBreaksAndContinuesToWorklistEPNS5_11InstructionEE3$_3FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass13AggressiveDCEEPNS5_8FunctionEE3$_4FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass13AggressiveDCEEPNS5_8FunctionEE3$_5FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass13AggressiveDCEEPNS5_8FunctionEE3$_6FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass13AggressiveDCEEPNS5_8FunctionEE3$_7FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass13AggressiveDCEEPNS5_8FunctionEE3$_7FvPNS5_11InstructionEEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass13AggressiveDCEEPNS5_8FunctionEE3$_7FvPNS5_11InstructionEEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass37InitializeModuleScopeLiveInstructionsEvE3$_8FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass11ProcessImplEvE3$_9FbPNS5_8FunctionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass11ProcessImplEvE4$_10FbPNS5_8FunctionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass22EliminateDeadFunctionsEvE4$_11FbPNS5_8FunctionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

@_ZN8spvtools3opt17AggressiveDCEPassC1Ev = hidden unnamed_addr alias void (%"class.spvtools::opt::AggressiveDCEPass"*), void (%"class.spvtools::opt::AggressiveDCEPass"*)* @_ZN8spvtools3opt17AggressiveDCEPassC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt17AggressiveDCEPass14IsVarOfStorageEjj(%"class.spvtools::opt::AggressiveDCEPass"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %100, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 11
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %36

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %13, align 8
  %15 = tail call i8* @_Znwm(i64 104) #14
  %16 = bitcast i8* %15 to %"class.spvtools::opt::analysis::DefUseManager"*
  %17 = getelementptr inbounds i8, i8* %15, i64 32
  %18 = bitcast i8* %17 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %15, i64 48
  %20 = getelementptr inbounds i8, i8* %15, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #15
  %21 = bitcast i8* %20 to i8**
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds i8, i8* %15, i64 64
  %23 = getelementptr inbounds i8, i8* %15, i64 96
  %24 = bitcast i8* %23 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %24, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %16, %"class.spvtools::opt::Module"* %14) #15
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 6
  %26 = ptrtoint i8* %15 to i64
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %25, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %27, align 8
  %29 = bitcast %"class.std::__1::unique_ptr.62"* %25 to i64*
  store i64 %26, i64* %29, align 8
  %30 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %28, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %12
  %32 = bitcast %"class.std::__1::unique_ptr.62"* %25 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %32, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %28) #15
  br label %33

33:                                               ; preds = %31, %12
  %34 = load i32, i32* %8, align 8
  %35 = or i32 %34, 1
  store i32 %35, i32* %8, align 8
  br label %36

36:                                               ; preds = %5, %33
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 6, i32 0, i32 0, i32 0
  %38 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %37, align 8
  %39 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %38, i32 %1) #15
  %40 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %39, i64 0, i32 2
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 59
  br i1 %42, label %43, label %100

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %39, i64 0, i32 3
  %45 = load i8, i8* %44, align 4, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %43
  %48 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %39, i32 0) #15
  br label %49

49:                                               ; preds = %43, %47
  %50 = phi i32 [ %48, %47 ], [ 0, %43 ]
  %51 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %52 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %51, i64 0, i32 11
  %53 = load i32, i32* %52, align 8
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %80

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %51, i64 0, i32 4, i32 0, i32 0, i32 0
  %58 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %57, align 8
  %59 = tail call i8* @_Znwm(i64 104) #14
  %60 = bitcast i8* %59 to %"class.spvtools::opt::analysis::DefUseManager"*
  %61 = getelementptr inbounds i8, i8* %59, i64 32
  %62 = bitcast i8* %61 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %62, align 4
  %63 = getelementptr inbounds i8, i8* %59, i64 48
  %64 = getelementptr inbounds i8, i8* %59, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #15
  %65 = bitcast i8* %64 to i8**
  store i8* %63, i8** %65, align 8
  %66 = getelementptr inbounds i8, i8* %59, i64 64
  %67 = getelementptr inbounds i8, i8* %59, i64 96
  %68 = bitcast i8* %67 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %68, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %60, %"class.spvtools::opt::Module"* %58) #15
  %69 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %51, i64 0, i32 6
  %70 = ptrtoint i8* %59 to i64
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %69, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %71, align 8
  %73 = bitcast %"class.std::__1::unique_ptr.62"* %69 to i64*
  store i64 %70, i64* %73, align 8
  %74 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %72, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %56
  %76 = bitcast %"class.std::__1::unique_ptr.62"* %69 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %76, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %72) #15
  br label %77

77:                                               ; preds = %75, %56
  %78 = load i32, i32* %52, align 8
  %79 = or i32 %78, 1
  store i32 %79, i32* %52, align 8
  br label %80

80:                                               ; preds = %49, %77
  %81 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %51, i64 0, i32 6, i32 0, i32 0, i32 0
  %82 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %81, align 8
  %83 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %82, i32 %50) #15
  %84 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %83, i64 0, i32 2
  %85 = load i32, i32* %84, align 8
  %86 = icmp eq i32 %85, 32
  br i1 %86, label %87, label %100

87:                                               ; preds = %80
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %83, i64 0, i32 3
  %89 = load i8, i8* %88, align 4, !range !2
  %90 = icmp eq i8 %89, 0
  %91 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %83, i64 0, i32 4
  %92 = load i8, i8* %91, align 1, !range !2
  %93 = icmp eq i8 %92, 0
  %94 = select i1 %93, i32 1, i32 2
  %95 = xor i1 %93, true
  %96 = zext i1 %95 to i32
  %97 = select i1 %90, i32 %96, i32 %94
  %98 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %83, i32 %97) #15
  %99 = icmp eq i32 %98, %2
  br label %100

100:                                              ; preds = %36, %80, %87, %3
  %101 = phi i1 [ false, %3 ], [ false, %36 ], [ %99, %87 ], [ false, %80 ]
  ret i1 %101
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt17AggressiveDCEPass10IsLocalVarEj(%"class.spvtools::opt::AggressiveDCEPass"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN8spvtools3opt17AggressiveDCEPass14IsVarOfStorageEjj(%"class.spvtools::opt::AggressiveDCEPass"* %0, i32 %1, i32 7)
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 2, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = tail call zeroext i1 @_ZN8spvtools3opt17AggressiveDCEPass14IsVarOfStorageEjj(%"class.spvtools::opt::AggressiveDCEPass"* %0, i32 %1, i32 6)
  br i1 %9, label %12, label %10

10:                                               ; preds = %8
  %11 = tail call zeroext i1 @_ZN8spvtools3opt17AggressiveDCEPass14IsVarOfStorageEjj(%"class.spvtools::opt::AggressiveDCEPass"* %0, i32 %1, i32 4)
  br label %12

12:                                               ; preds = %8, %10, %4, %2
  %13 = phi i1 [ true, %2 ], [ false, %4 ], [ true, %8 ], [ %11, %10 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt17AggressiveDCEPass9AddStoresEPNS0_8FunctionEj(%"class.spvtools::opt::AggressiveDCEPass"*, %"class.spvtools::opt::Function"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::function.1047", align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 11
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %35

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %12, align 8
  %14 = tail call i8* @_Znwm(i64 104) #14
  %15 = bitcast i8* %14 to %"class.spvtools::opt::analysis::DefUseManager"*
  %16 = getelementptr inbounds i8, i8* %14, i64 32
  %17 = bitcast i8* %16 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = getelementptr inbounds i8, i8* %14, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #15
  %20 = bitcast i8* %19 to i8**
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds i8, i8* %14, i64 64
  %22 = getelementptr inbounds i8, i8* %14, i64 96
  %23 = bitcast i8* %22 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %23, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %15, %"class.spvtools::opt::Module"* %13) #15
  %24 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 6
  %25 = ptrtoint i8* %14 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %24, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %26, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.62"* %24 to i64*
  store i64 %25, i64* %28, align 8
  %29 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %27, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %11
  %31 = bitcast %"class.std::__1::unique_ptr.62"* %24 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %31, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %27) #15
  br label %32

32:                                               ; preds = %30, %11
  %33 = load i32, i32* %7, align 8
  %34 = or i32 %33, 1
  store i32 %34, i32* %7, align 8
  br label %35

35:                                               ; preds = %3, %32
  %36 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 6, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %36, align 8
  %38 = bitcast %"class.std::__1::function.1047"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #15
  %39 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %4, i64 0, i32 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %4, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_17AggressiveDCEPass9AddStoresEPNS3_8FunctionEjE3$_0S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %39, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass9AddStoresEPNS5_8FunctionEjE3$_0FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %40, align 8
  %41 = tail call i8* @_Znwm(i64 24) #14, !noalias !3
  %42 = bitcast i8* %41 to %"class.spvtools::opt::AggressiveDCEPass"**
  store %"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::AggressiveDCEPass"** %42, align 8
  %43 = getelementptr inbounds i8, i8* %41, i64 8
  %44 = bitcast i8* %43 to i32*
  store i32 %2, i32* %44, align 8
  %45 = getelementptr inbounds i8, i8* %41, i64 16
  %46 = bitcast i8* %45 to %"class.spvtools::opt::Function"**
  store %"class.spvtools::opt::Function"* %1, %"class.spvtools::opt::Function"** %46, align 8
  %47 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %4, i64 0, i32 0, i32 0, i32 0
  store i8* %41, i8** %47, align 8
  call void @_ZNK8spvtools3opt8analysis13DefUseManager11ForEachUserEjRKNSt3__18functionIFvPNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DefUseManager"* %37, i32 %2, %"class.std::__1::function.1047"* nonnull dereferenceable(32) %4) #15
  %48 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %40, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %48, i64 0, i32 1
  %50 = load void (i8*)*, void (i8*)** %49, align 8
  %51 = icmp eq void (i8*)* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %35
  %53 = load i8*, i8** %47, align 8
  call void %50(i8* %53) #15
  br label %54

54:                                               ; preds = %35, %52
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #15
  ret void
}

declare void @_ZNK8spvtools3opt8analysis13DefUseManager11ForEachUserEjRKNSt3__18functionIFvPNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DefUseManager"*, i32, %"class.std::__1::function.1047"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt17AggressiveDCEPass22AllExtensionsSupportedEv(%"class.spvtools::opt::AggressiveDCEPass"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %6 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %6, i64 0, i32 4, i32 0, i32 1, i32 0, i32 1
  %8 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %6, i64 0, i32 4, i32 0, i32 1
  %9 = bitcast %"class.spvtools::opt::Instruction"** %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to %"class.spvtools::opt::Instruction"*
  %12 = icmp eq %"class.spvtools::opt::Instruction"* %8, %11
  br i1 %12, label %77, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 13, i32 0
  br label %21

21:                                               ; preds = %13, %70
  %22 = phi %"class.spvtools::opt::Instruction"* [ %11, %13 ], [ %75, %70 ]
  %23 = phi i64 [ %10, %13 ], [ %74, %70 ]
  %24 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %22, i64 0, i32 3
  %25 = load i8, i8* %24, align 4, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %22, i64 0, i32 4
  %28 = load i8, i8* %27, align 1, !range !2
  %29 = icmp eq i8 %28, 0
  %30 = select i1 %29, i64 1, i64 2
  %31 = xor i1 %29, true
  %32 = zext i1 %31 to i64
  %33 = select i1 %26, i64 %32, i64 %30
  %34 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %22, i64 0, i32 6, i32 0, i32 0
  %35 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %34, align 8
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 %33, i32 1, i32 4, i32 0, i32 0, i32 0
  %37 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %36, align 8
  %38 = icmp eq %"class.std::__1::vector.3"* %37, null
  %39 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %37, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 %33, i32 1, i32 2
  %41 = select i1 %38, i32** %40, i32** %39
  %42 = bitcast i32** %41 to i8**
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #15
  %44 = call i64 @strlen(i8* %43) #15
  %45 = icmp ugt i64 %44, -17
  br i1 %45, label %46, label %48

46:                                               ; preds = %21
  %47 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %47) #16
  unreachable

48:                                               ; preds = %21
  %49 = icmp ult i64 %44, 23
  br i1 %49, label %55, label %50

50:                                               ; preds = %48
  %51 = add nuw i64 %44, 16
  %52 = and i64 %51, -16
  %53 = call i8* @_Znwm(i64 %52) #14
  store i8* %53, i8** %15, align 8
  %54 = or i64 %52, -9223372036854775808
  store i64 %54, i64* %16, align 8
  store i64 %44, i64* %17, align 8
  br label %58

55:                                               ; preds = %48
  %56 = trunc i64 %44 to i8
  store i8 %56, i8* %19, align 1
  %57 = icmp eq i64 %44, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %55, %50
  %59 = phi i8* [ %53, %50 ], [ %14, %55 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %59, i8* align 1 %43, i64 %44, i1 false) #15
  br label %60

60:                                               ; preds = %55, %58
  %61 = phi i8* [ %14, %55 ], [ %59, %58 ]
  %62 = getelementptr inbounds i8, i8* %61, i64 %44
  store i8 0, i8* %62, align 1
  %63 = call %"struct.std::__1::__hash_node_base.1026"* @_ZNKSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table.1022"* %20, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #15
  %64 = icmp eq %"struct.std::__1::__hash_node_base.1026"* %63, null
  %65 = load i8, i8* %19, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %60
  %68 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %68) #14
  br label %69

69:                                               ; preds = %60, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #15
  br i1 %64, label %77, label %70

70:                                               ; preds = %69
  %71 = inttoptr i64 %23 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %72 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %71, i64 0, i32 1
  %73 = bitcast %"class.spvtools::opt::Instruction"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %74 to %"class.spvtools::opt::Instruction"*
  %76 = icmp eq %"class.spvtools::opt::Instruction"* %8, %75
  br i1 %76, label %77, label %21

77:                                               ; preds = %70, %69, %1
  %78 = phi i1 [ true, %1 ], [ false, %69 ], [ true, %70 ]
  ret i1 %78
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt17AggressiveDCEPass6IsDeadEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 10
  %4 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = lshr i32 %5, 6
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %9 = bitcast i64** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.spvtools::utils::BitVector"* %3 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %14, %7
  br i1 %15, label %16, label %25

16:                                               ; preds = %2
  %17 = inttoptr i64 %12 to i64*
  %18 = and i32 %5, 63
  %19 = getelementptr inbounds i64, i64* %17, i64 %7
  %20 = load i64, i64* %19, align 8
  %21 = zext i32 %18 to i64
  %22 = shl i64 1, %21
  %23 = and i64 %20, %22
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %41

25:                                               ; preds = %16, %2
  %26 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = tail call zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32 %27) #15
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = load i32, i32* %26, align 8
  %31 = icmp eq i32 %30, 255
  br i1 %31, label %32, label %41

32:                                               ; preds = %29, %25
  %33 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 0, i32 0, i32 2
  %34 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %33, align 8
  %35 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %34, %"class.spvtools::opt::Instruction"* %1)
  %36 = icmp eq %"class.spvtools::opt::BasicBlock"* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"* nonnull %35) #15
  %39 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  br i1 %39, label %40, label %41

40:                                               ; preds = %32, %37
  br label %41

41:                                               ; preds = %16, %29, %37, %40
  %42 = phi i1 [ false, %16 ], [ false, %40 ], [ true, %37 ], [ true, %29 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt17AggressiveDCEPass18IsStructuredHeaderEPNS0_10BasicBlockEPPNS0_11InstructionES6_Pj(%"class.spvtools::opt::AggressiveDCEPass"* nocapture readnone, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"**, i32*) local_unnamed_addr #0 align 2 {
  %6 = icmp eq %"class.spvtools::opt::BasicBlock"* %1, null
  br i1 %6, label %34, label %7

7:                                                ; preds = %5
  %8 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"* nonnull %1) #15
  %9 = icmp eq %"class.spvtools::opt::Instruction"* %8, null
  br i1 %9, label %34, label %10

10:                                               ; preds = %7
  %11 = icmp eq %"class.spvtools::opt::Instruction"** %3, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %14 = bitcast %"class.spvtools::opt::Instruction"** %13 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !8
  %16 = bitcast %"class.spvtools::opt::Instruction"** %3 to i64*
  store i64 %15, i64* %16, align 8
  br label %17

17:                                               ; preds = %10, %12
  %18 = icmp eq %"class.spvtools::opt::Instruction"** %2, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  store %"class.spvtools::opt::Instruction"* %8, %"class.spvtools::opt::Instruction"** %2, align 8
  br label %20

20:                                               ; preds = %17, %19
  %21 = icmp eq i32* %4, null
  br i1 %21, label %34, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %8, i64 0, i32 3
  %24 = load i8, i8* %23, align 4, !range !2
  %25 = icmp eq i8 %24, 0
  %26 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %8, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = select i1 %28, i32 1, i32 2
  %30 = xor i1 %28, true
  %31 = zext i1 %30 to i32
  %32 = select i1 %25, i32 %31, i32 %29
  %33 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %8, i32 %32) #15
  store i32 %33, i32* %4, align 4
  br label %34

34:                                               ; preds = %7, %20, %22, %5
  %35 = phi i1 [ false, %5 ], [ false, %7 ], [ true, %20 ], [ true, %22 ]
  ret i1 %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %4 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 2
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"* %0)
  br label %9

9:                                                ; preds = %2, %8
  %10 = lshr i64 %3, 32
  %11 = shl i64 %3, 3
  %12 = and i64 %11, 4294967288
  %13 = add nuw nsw i64 %12, 8
  %14 = xor i64 %13, %10
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %15, %10
  %18 = xor i64 %17, %16
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, -7070675565921424023
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %78, label %26

26:                                               ; preds = %9
  %27 = tail call i64 @llvm.ctpop.i64(i64 %24) #15, !range !11
  %28 = icmp ugt i64 %27, 1
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = add i64 %24, -1
  %31 = and i64 %30, %22
  br label %36

32:                                               ; preds = %26
  %33 = icmp ult i64 %22, %24
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = urem i64 %22, %24
  br label %36

36:                                               ; preds = %34, %32, %29
  %37 = phi i64 [ %31, %29 ], [ %35, %34 ], [ %22, %32 ]
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, i64 %37
  %41 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.178"* %41, null
  br i1 %42, label %78, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %41, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.178"* %45, null
  br i1 %46, label %78, label %47

47:                                               ; preds = %43
  %48 = add i64 %24, -1
  br label %49

49:                                               ; preds = %70, %47
  %50 = phi %"struct.std::__1::__hash_node_base.178"* [ %45, %47 ], [ %72, %70 ]
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 1
  %52 = bitcast %"struct.std::__1::__hash_node_base.178"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, %22
  br i1 %54, label %65, label %55

55:                                               ; preds = %49
  br i1 %28, label %58, label %56

56:                                               ; preds = %55
  %57 = and i64 %53, %48
  br label %62

58:                                               ; preds = %55
  %59 = icmp ult i64 %53, %24
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %53, %24
  br label %62

62:                                               ; preds = %60, %58, %56
  %63 = phi i64 [ %57, %56 ], [ %61, %60 ], [ %53, %58 ]
  %64 = icmp eq i64 %63, %37
  br i1 %64, label %70, label %78

65:                                               ; preds = %49
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base.178"* %66 to %"class.spvtools::opt::Instruction"**
  %68 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, align 8
  %69 = icmp eq %"class.spvtools::opt::Instruction"* %68, %1
  br i1 %69, label %74, label %70

70:                                               ; preds = %65, %62
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.178"* %72, null
  br i1 %73, label %78, label %49

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base.178"* %75 to %"class.spvtools::opt::BasicBlock"**
  %77 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %76, align 8
  br label %78

78:                                               ; preds = %70, %62, %43, %9, %36, %74
  %79 = phi %"class.spvtools::opt::BasicBlock"* [ %77, %74 ], [ null, %36 ], [ null, %9 ], [ null, %43 ], [ null, %62 ], [ null, %70 ]
  ret %"class.spvtools::opt::BasicBlock"* %79
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt17AggressiveDCEPass12IsTargetDeadEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca %"class.std::__1::function.1047", align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = select i1 %10, i32 1, i32 2
  %12 = xor i1 %10, true
  %13 = zext i1 %12 to i32
  %14 = select i1 %7, i32 %13, i32 %11
  %15 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %14) #15
  %16 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %17, i64 0, i32 11
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %46

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %17, i64 0, i32 4, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %23, align 8
  %25 = tail call i8* @_Znwm(i64 104) #14
  %26 = bitcast i8* %25 to %"class.spvtools::opt::analysis::DefUseManager"*
  %27 = getelementptr inbounds i8, i8* %25, i64 32
  %28 = bitcast i8* %27 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %25, i64 48
  %30 = getelementptr inbounds i8, i8* %25, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #15
  %31 = bitcast i8* %30 to i8**
  store i8* %29, i8** %31, align 8
  %32 = getelementptr inbounds i8, i8* %25, i64 64
  %33 = getelementptr inbounds i8, i8* %25, i64 96
  %34 = bitcast i8* %33 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %34, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %26, %"class.spvtools::opt::Module"* %24) #15
  %35 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %17, i64 0, i32 6
  %36 = ptrtoint i8* %25 to i64
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %35, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %37, align 8
  %39 = bitcast %"class.std::__1::unique_ptr.62"* %35 to i64*
  store i64 %36, i64* %39, align 8
  %40 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %38, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %22
  %42 = bitcast %"class.std::__1::unique_ptr.62"* %35 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %42, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %38) #15
  br label %43

43:                                               ; preds = %41, %22
  %44 = load i32, i32* %18, align 8
  %45 = or i32 %44, 1
  store i32 %45, i32* %18, align 8
  br label %46

46:                                               ; preds = %2, %43
  %47 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %17, i64 0, i32 6, i32 0, i32 0, i32 0
  %48 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %47, align 8
  %49 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %48, i32 %15) #15
  %50 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %49, i64 0, i32 2
  %51 = load i32, i32* %50, align 8
  switch i32 %51, label %100 [
    i32 5632, label %52
    i32 332, label %52
    i32 75, label %52
    i32 74, label %52
    i32 73, label %52
    i32 72, label %52
    i32 71, label %52
    i32 5633, label %52
  ]

52:                                               ; preds = %46, %46, %46, %46, %46, %46, %46, %46
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #15
  store i8 1, i8* %3, align 1
  %53 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %16, align 8
  %54 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %53, i64 0, i32 11
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %82

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %53, i64 0, i32 4, i32 0, i32 0, i32 0
  %60 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %59, align 8
  %61 = tail call i8* @_Znwm(i64 104) #14
  %62 = bitcast i8* %61 to %"class.spvtools::opt::analysis::DefUseManager"*
  %63 = getelementptr inbounds i8, i8* %61, i64 32
  %64 = bitcast i8* %63 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %64, align 4
  %65 = getelementptr inbounds i8, i8* %61, i64 48
  %66 = getelementptr inbounds i8, i8* %61, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 16, i1 false) #15
  %67 = bitcast i8* %66 to i8**
  store i8* %65, i8** %67, align 8
  %68 = getelementptr inbounds i8, i8* %61, i64 64
  %69 = getelementptr inbounds i8, i8* %61, i64 96
  %70 = bitcast i8* %69 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %70, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %62, %"class.spvtools::opt::Module"* %60) #15
  %71 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %53, i64 0, i32 6
  %72 = ptrtoint i8* %61 to i64
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %71, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %73, align 8
  %75 = bitcast %"class.std::__1::unique_ptr.62"* %71 to i64*
  store i64 %72, i64* %75, align 8
  %76 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %74, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %58
  %78 = bitcast %"class.std::__1::unique_ptr.62"* %71 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %78, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %74) #15
  br label %79

79:                                               ; preds = %77, %58
  %80 = load i32, i32* %54, align 8
  %81 = or i32 %80, 1
  store i32 %81, i32* %54, align 8
  br label %82

82:                                               ; preds = %52, %79
  %83 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %53, i64 0, i32 6, i32 0, i32 0, i32 0
  %84 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %83, align 8
  %85 = bitcast %"class.std::__1::function.1047"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %85) #15
  %86 = ptrtoint i8* %3 to i64
  %87 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %4, i64 0, i32 0, i32 1, i32 0
  %88 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %4, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_17AggressiveDCEPass12IsTargetDeadES5_E3$_1S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %87, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass12IsTargetDeadEPNS5_11InstructionEE3$_1FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %88, align 8
  %89 = bitcast %"class.std::__1::function.1047"* %4 to i64*
  store i64 %86, i64* %89, align 8
  call void @_ZNK8spvtools3opt8analysis13DefUseManager11ForEachUserEPKNS0_11InstructionERKNSt3__18functionIFvPS3_EEE(%"class.spvtools::opt::analysis::DefUseManager"* %84, %"class.spvtools::opt::Instruction"* %49, %"class.std::__1::function.1047"* nonnull dereferenceable(32) %4) #15
  %90 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %88, align 8
  %91 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %90, i64 0, i32 1
  %92 = load void (i8*)*, void (i8*)** %91, align 8
  %93 = icmp eq void (i8*)* %92, null
  br i1 %93, label %97, label %94

94:                                               ; preds = %82
  %95 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %4, i64 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  call void %92(i8* %96) #15
  br label %97

97:                                               ; preds = %82, %94
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %85) #15
  %98 = load i8, i8* %3, align 1, !range !2
  %99 = icmp ne i8 %98, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #15
  br label %136

100:                                              ; preds = %46
  %101 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 10
  %102 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %49, i64 0, i32 5
  %103 = load i32, i32* %102, align 8
  %104 = lshr i32 %103, 6
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %107 = bitcast i64** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.spvtools::utils::BitVector"* %101 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = sub i64 %108, %110
  %112 = ashr exact i64 %111, 3
  %113 = icmp ugt i64 %112, %105
  br i1 %113, label %114, label %123

114:                                              ; preds = %100
  %115 = inttoptr i64 %110 to i64*
  %116 = and i32 %103, 63
  %117 = getelementptr inbounds i64, i64* %115, i64 %105
  %118 = load i64, i64* %117, align 8
  %119 = zext i32 %116 to i64
  %120 = shl i64 1, %119
  %121 = and i64 %118, %120
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %136

123:                                              ; preds = %114, %100
  %124 = tail call zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32 %51) #15
  br i1 %124, label %128, label %125

125:                                              ; preds = %123
  %126 = load i32, i32* %50, align 8
  %127 = icmp eq i32 %126, 255
  br i1 %127, label %128, label %136

128:                                              ; preds = %125, %123
  %129 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %16, align 8
  %130 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %129, %"class.spvtools::opt::Instruction"* %49) #15
  %131 = icmp eq %"class.spvtools::opt::BasicBlock"* %130, null
  br i1 %131, label %135, label %132

132:                                              ; preds = %128
  %133 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"* nonnull %130) #15
  %134 = icmp eq %"class.spvtools::opt::Instruction"* %133, null
  br i1 %134, label %135, label %136

135:                                              ; preds = %132, %128
  br label %136

136:                                              ; preds = %135, %132, %125, %114, %97
  %137 = phi i1 [ %99, %97 ], [ false, %114 ], [ false, %135 ], [ true, %132 ], [ true, %125 ]
  ret i1 %137
}

declare void @_ZNK8spvtools3opt8analysis13DefUseManager11ForEachUserEPKNS0_11InstructionERKNSt3__18functionIFvPS3_EEE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::function.1047"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt17AggressiveDCEPass11ProcessLoadEPNS0_8FunctionEj(%"class.spvtools::opt::AggressiveDCEPass"*, %"class.spvtools::opt::Function"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  store i32 %2, i32* %4, align 4
  %5 = tail call zeroext i1 @_ZN8spvtools3opt17AggressiveDCEPass14IsVarOfStorageEjj(%"class.spvtools::opt::AggressiveDCEPass"* %0, i32 %2, i32 7) #15
  br i1 %5, label %14, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 3
  %8 = load i8, i8* %7, align 2, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %71, label %10

10:                                               ; preds = %6
  %11 = tail call zeroext i1 @_ZN8spvtools3opt17AggressiveDCEPass14IsVarOfStorageEjj(%"class.spvtools::opt::AggressiveDCEPass"* %0, i32 %2, i32 6) #15
  br i1 %11, label %14, label %12

12:                                               ; preds = %10
  %13 = tail call zeroext i1 @_ZN8spvtools3opt17AggressiveDCEPass14IsVarOfStorageEjj(%"class.spvtools::opt::AggressiveDCEPass"* %0, i32 %2, i32 4) #15
  br i1 %13, label %14, label %71

14:                                               ; preds = %10, %3, %12
  %15 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 11
  %16 = zext i32 %2 to i64
  %17 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %68, label %20

20:                                               ; preds = %14
  %21 = tail call i64 @llvm.ctpop.i64(i64 %18) #15, !range !11
  %22 = icmp ugt i64 %21, 1
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  %24 = add i64 %18, 4294967295
  %25 = and i64 %24, %16
  br label %30

26:                                               ; preds = %20
  %27 = icmp ugt i64 %18, %16
  br i1 %27, label %30, label %28

28:                                               ; preds = %26
  %29 = urem i64 %16, %18
  br label %30

30:                                               ; preds = %28, %26, %23
  %31 = phi i64 [ %25, %23 ], [ %29, %28 ], [ %16, %26 ]
  %32 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %33, i64 %31
  %35 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base.915"* %35, null
  br i1 %36, label %68, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %35, i64 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.915"* %39, null
  br i1 %40, label %68, label %41

41:                                               ; preds = %37
  %42 = add i64 %18, -1
  br label %43

43:                                               ; preds = %64, %41
  %44 = phi %"struct.std::__1::__hash_node_base.915"* [ %39, %41 ], [ %66, %64 ]
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %44, i64 1
  %46 = bitcast %"struct.std::__1::__hash_node_base.915"* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, %16
  br i1 %48, label %59, label %49

49:                                               ; preds = %43
  br i1 %22, label %52, label %50

50:                                               ; preds = %49
  %51 = and i64 %47, %42
  br label %56

52:                                               ; preds = %49
  %53 = icmp ult i64 %47, %18
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = urem i64 %47, %18
  br label %56

56:                                               ; preds = %54, %52, %50
  %57 = phi i64 [ %51, %50 ], [ %55, %54 ], [ %47, %52 ]
  %58 = icmp eq i64 %57, %31
  br i1 %58, label %64, label %68

59:                                               ; preds = %43
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %44, i64 2
  %61 = bitcast %"struct.std::__1::__hash_node_base.915"* %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, %2
  br i1 %63, label %71, label %64

64:                                               ; preds = %59, %56
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %44, i64 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base.915"* %66, null
  br i1 %67, label %68, label %43

68:                                               ; preds = %56, %64, %30, %14, %37
  tail call void @_ZN8spvtools3opt17AggressiveDCEPass9AddStoresEPNS0_8FunctionEj(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Function"* %1, i32 %2)
  %69 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %15, i64 0, i32 0
  %70 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %69, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %4) #15
  br label %71

71:                                               ; preds = %59, %6, %12, %68
  ret void
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt17AggressiveDCEPass23ComputeBlock2HeaderMapsERNSt3__14listIPNS0_10BasicBlockENS2_9allocatorIS5_EEEE(%"class.spvtools::opt::AggressiveDCEPass"*, %"class.std::__1::list"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1147", align 1
  %5 = alloca %"class.std::__1::tuple.1275", align 8
  %6 = alloca %"class.std::__1::tuple.1147", align 1
  %7 = alloca %"class.std::__1::tuple.1275", align 8
  %8 = alloca %"class.std::__1::tuple.1147", align 1
  %9 = alloca %"class.std::__1::tuple", align 8
  %10 = alloca %"class.std::__1::tuple.1147", align 1
  %11 = alloca %"class.std::__1::tuple.1275", align 8
  %12 = alloca %"class.std::__1::tuple.1147", align 1
  %13 = alloca %"class.std::__1::tuple", align 8
  %14 = alloca %"class.std::__1::tuple.1147", align 1
  %15 = alloca %"class.std::__1::stack", align 8
  %16 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %17 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 5
  %19 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %72, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.946"* %24, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %22, %26
  %27 = phi %"struct.std::__1::__hash_node_base.946"* [ %29, %26 ], [ %24, %22 ]
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946", %"struct.std::__1::__hash_node_base.946"* %27, i64 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %28, align 8
  %30 = bitcast %"struct.std::__1::__hash_node_base.946"* %27 to i8*
  tail call void @_ZdlPv(i8* %30) #14
  %31 = icmp eq %"struct.std::__1::__hash_node_base.946"* %29, null
  br i1 %31, label %32, label %26

32:                                               ; preds = %26, %22
  store %"struct.std::__1::__hash_node_base.946"* null, %"struct.std::__1::__hash_node_base.946"** %23, align 8
  %33 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %54, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.std::__1::unordered_map.941", %"class.std::__1::unordered_map.941"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = add i64 %34, -1
  %39 = and i64 %34, 3
  %40 = icmp ult i64 %38, 3
  br i1 %40, label %43, label %41

41:                                               ; preds = %36
  %42 = sub i64 %34, %39
  br label %55

43:                                               ; preds = %55, %36
  %44 = phi i64 [ 0, %36 ], [ %69, %55 ]
  %45 = icmp eq i64 %39, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %43, %46
  %47 = phi i64 [ %51, %46 ], [ %44, %43 ]
  %48 = phi i64 [ %52, %46 ], [ %39, %43 ]
  %49 = load %"struct.std::__1::__hash_node_base.946"**, %"struct.std::__1::__hash_node_base.946"*** %37, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %49, i64 %47
  store %"struct.std::__1::__hash_node_base.946"* null, %"struct.std::__1::__hash_node_base.946"** %50, align 8
  %51 = add nuw i64 %47, 1
  %52 = add i64 %48, -1
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %46, !llvm.loop !12

54:                                               ; preds = %43, %46, %32
  store i64 0, i64* %19, align 8
  br label %72

55:                                               ; preds = %55, %41
  %56 = phi i64 [ 0, %41 ], [ %69, %55 ]
  %57 = phi i64 [ %42, %41 ], [ %70, %55 ]
  %58 = load %"struct.std::__1::__hash_node_base.946"**, %"struct.std::__1::__hash_node_base.946"*** %37, align 8
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %58, i64 %56
  store %"struct.std::__1::__hash_node_base.946"* null, %"struct.std::__1::__hash_node_base.946"** %59, align 8
  %60 = or i64 %56, 1
  %61 = load %"struct.std::__1::__hash_node_base.946"**, %"struct.std::__1::__hash_node_base.946"*** %37, align 8
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %61, i64 %60
  store %"struct.std::__1::__hash_node_base.946"* null, %"struct.std::__1::__hash_node_base.946"** %62, align 8
  %63 = or i64 %56, 2
  %64 = load %"struct.std::__1::__hash_node_base.946"**, %"struct.std::__1::__hash_node_base.946"*** %37, align 8
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %64, i64 %63
  store %"struct.std::__1::__hash_node_base.946"* null, %"struct.std::__1::__hash_node_base.946"** %65, align 8
  %66 = or i64 %56, 3
  %67 = load %"struct.std::__1::__hash_node_base.946"**, %"struct.std::__1::__hash_node_base.946"*** %37, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %67, i64 %66
  store %"struct.std::__1::__hash_node_base.946"* null, %"struct.std::__1::__hash_node_base.946"** %68, align 8
  %69 = add nuw i64 %56, 4
  %70 = add i64 %57, -4
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %43, label %55

72:                                               ; preds = %2, %54
  %73 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 6
  %74 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %127, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %79 = load %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base.946"* %79, null
  br i1 %80, label %87, label %81

81:                                               ; preds = %77, %81
  %82 = phi %"struct.std::__1::__hash_node_base.946"* [ %84, %81 ], [ %79, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946", %"struct.std::__1::__hash_node_base.946"* %82, i64 0, i32 0
  %84 = load %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %83, align 8
  %85 = bitcast %"struct.std::__1::__hash_node_base.946"* %82 to i8*
  tail call void @_ZdlPv(i8* %85) #14
  %86 = icmp eq %"struct.std::__1::__hash_node_base.946"* %84, null
  br i1 %86, label %87, label %81

87:                                               ; preds = %81, %77
  store %"struct.std::__1::__hash_node_base.946"* null, %"struct.std::__1::__hash_node_base.946"** %78, align 8
  %88 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %109, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.std::__1::unordered_map.941", %"class.std::__1::unordered_map.941"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = add i64 %89, -1
  %94 = and i64 %89, 3
  %95 = icmp ult i64 %93, 3
  br i1 %95, label %98, label %96

96:                                               ; preds = %91
  %97 = sub i64 %89, %94
  br label %110

98:                                               ; preds = %110, %91
  %99 = phi i64 [ 0, %91 ], [ %124, %110 ]
  %100 = icmp eq i64 %94, 0
  br i1 %100, label %109, label %101

101:                                              ; preds = %98, %101
  %102 = phi i64 [ %106, %101 ], [ %99, %98 ]
  %103 = phi i64 [ %107, %101 ], [ %94, %98 ]
  %104 = load %"struct.std::__1::__hash_node_base.946"**, %"struct.std::__1::__hash_node_base.946"*** %92, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %104, i64 %102
  store %"struct.std::__1::__hash_node_base.946"* null, %"struct.std::__1::__hash_node_base.946"** %105, align 8
  %106 = add nuw i64 %102, 1
  %107 = add i64 %103, -1
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %101, !llvm.loop !14

109:                                              ; preds = %98, %101, %87
  store i64 0, i64* %74, align 8
  br label %127

110:                                              ; preds = %110, %96
  %111 = phi i64 [ 0, %96 ], [ %124, %110 ]
  %112 = phi i64 [ %97, %96 ], [ %125, %110 ]
  %113 = load %"struct.std::__1::__hash_node_base.946"**, %"struct.std::__1::__hash_node_base.946"*** %92, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %113, i64 %111
  store %"struct.std::__1::__hash_node_base.946"* null, %"struct.std::__1::__hash_node_base.946"** %114, align 8
  %115 = or i64 %111, 1
  %116 = load %"struct.std::__1::__hash_node_base.946"**, %"struct.std::__1::__hash_node_base.946"*** %92, align 8
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %116, i64 %115
  store %"struct.std::__1::__hash_node_base.946"* null, %"struct.std::__1::__hash_node_base.946"** %117, align 8
  %118 = or i64 %111, 2
  %119 = load %"struct.std::__1::__hash_node_base.946"**, %"struct.std::__1::__hash_node_base.946"*** %92, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %119, i64 %118
  store %"struct.std::__1::__hash_node_base.946"* null, %"struct.std::__1::__hash_node_base.946"** %120, align 8
  %121 = or i64 %111, 3
  %122 = load %"struct.std::__1::__hash_node_base.946"**, %"struct.std::__1::__hash_node_base.946"*** %92, align 8
  %123 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %122, i64 %121
  store %"struct.std::__1::__hash_node_base.946"* null, %"struct.std::__1::__hash_node_base.946"** %123, align 8
  %124 = add nuw i64 %111, 4
  %125 = add i64 %112, -4
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %98, label %110

127:                                              ; preds = %72, %109
  %128 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 8
  %129 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %130 = load i64, i64* %129, align 8
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %182, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %134 = load %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %133, align 8
  %135 = icmp eq %"struct.std::__1::__hash_node_base.998"* %134, null
  br i1 %135, label %142, label %136

136:                                              ; preds = %132, %136
  %137 = phi %"struct.std::__1::__hash_node_base.998"* [ %139, %136 ], [ %134, %132 ]
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998", %"struct.std::__1::__hash_node_base.998"* %137, i64 0, i32 0
  %139 = load %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %138, align 8
  %140 = bitcast %"struct.std::__1::__hash_node_base.998"* %137 to i8*
  tail call void @_ZdlPv(i8* %140) #14
  %141 = icmp eq %"struct.std::__1::__hash_node_base.998"* %139, null
  br i1 %141, label %142, label %136

142:                                              ; preds = %136, %132
  store %"struct.std::__1::__hash_node_base.998"* null, %"struct.std::__1::__hash_node_base.998"** %133, align 8
  %143 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %144 = load i64, i64* %143, align 8
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %164, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.std::__1::unordered_map.993", %"class.std::__1::unordered_map.993"* %128, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = add i64 %144, -1
  %149 = and i64 %144, 3
  %150 = icmp ult i64 %148, 3
  br i1 %150, label %153, label %151

151:                                              ; preds = %146
  %152 = sub i64 %144, %149
  br label %165

153:                                              ; preds = %165, %146
  %154 = phi i64 [ 0, %146 ], [ %179, %165 ]
  %155 = icmp eq i64 %149, 0
  br i1 %155, label %164, label %156

156:                                              ; preds = %153, %156
  %157 = phi i64 [ %161, %156 ], [ %154, %153 ]
  %158 = phi i64 [ %162, %156 ], [ %149, %153 ]
  %159 = load %"struct.std::__1::__hash_node_base.998"**, %"struct.std::__1::__hash_node_base.998"*** %147, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %159, i64 %157
  store %"struct.std::__1::__hash_node_base.998"* null, %"struct.std::__1::__hash_node_base.998"** %160, align 8
  %161 = add nuw i64 %157, 1
  %162 = add i64 %158, -1
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %156, !llvm.loop !15

164:                                              ; preds = %153, %156, %142
  store i64 0, i64* %129, align 8
  br label %182

165:                                              ; preds = %165, %151
  %166 = phi i64 [ 0, %151 ], [ %179, %165 ]
  %167 = phi i64 [ %152, %151 ], [ %180, %165 ]
  %168 = load %"struct.std::__1::__hash_node_base.998"**, %"struct.std::__1::__hash_node_base.998"*** %147, align 8
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %168, i64 %166
  store %"struct.std::__1::__hash_node_base.998"* null, %"struct.std::__1::__hash_node_base.998"** %169, align 8
  %170 = or i64 %166, 1
  %171 = load %"struct.std::__1::__hash_node_base.998"**, %"struct.std::__1::__hash_node_base.998"*** %147, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %171, i64 %170
  store %"struct.std::__1::__hash_node_base.998"* null, %"struct.std::__1::__hash_node_base.998"** %172, align 8
  %173 = or i64 %166, 2
  %174 = load %"struct.std::__1::__hash_node_base.998"**, %"struct.std::__1::__hash_node_base.998"*** %147, align 8
  %175 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %174, i64 %173
  store %"struct.std::__1::__hash_node_base.998"* null, %"struct.std::__1::__hash_node_base.998"** %175, align 8
  %176 = or i64 %166, 3
  %177 = load %"struct.std::__1::__hash_node_base.998"**, %"struct.std::__1::__hash_node_base.998"*** %147, align 8
  %178 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %177, i64 %176
  store %"struct.std::__1::__hash_node_base.998"* null, %"struct.std::__1::__hash_node_base.998"** %178, align 8
  %179 = add nuw i64 %166, 4
  %180 = add i64 %167, -4
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %153, label %165

182:                                              ; preds = %127, %164
  %183 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 7
  %184 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %185 = load i64, i64* %184, align 8
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %237, label %187

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %189 = load %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %188, align 8
  %190 = icmp eq %"struct.std::__1::__hash_node_base.974"* %189, null
  br i1 %190, label %197, label %191

191:                                              ; preds = %187, %191
  %192 = phi %"struct.std::__1::__hash_node_base.974"* [ %194, %191 ], [ %189, %187 ]
  %193 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974", %"struct.std::__1::__hash_node_base.974"* %192, i64 0, i32 0
  %194 = load %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %193, align 8
  %195 = bitcast %"struct.std::__1::__hash_node_base.974"* %192 to i8*
  tail call void @_ZdlPv(i8* %195) #14
  %196 = icmp eq %"struct.std::__1::__hash_node_base.974"* %194, null
  br i1 %196, label %197, label %191

197:                                              ; preds = %191, %187
  store %"struct.std::__1::__hash_node_base.974"* null, %"struct.std::__1::__hash_node_base.974"** %188, align 8
  %198 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %199 = load i64, i64* %198, align 8
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %219, label %201

201:                                              ; preds = %197
  %202 = getelementptr inbounds %"class.std::__1::unordered_map.969", %"class.std::__1::unordered_map.969"* %183, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = add i64 %199, -1
  %204 = and i64 %199, 3
  %205 = icmp ult i64 %203, 3
  br i1 %205, label %208, label %206

206:                                              ; preds = %201
  %207 = sub i64 %199, %204
  br label %220

208:                                              ; preds = %220, %201
  %209 = phi i64 [ 0, %201 ], [ %234, %220 ]
  %210 = icmp eq i64 %204, 0
  br i1 %210, label %219, label %211

211:                                              ; preds = %208, %211
  %212 = phi i64 [ %216, %211 ], [ %209, %208 ]
  %213 = phi i64 [ %217, %211 ], [ %204, %208 ]
  %214 = load %"struct.std::__1::__hash_node_base.974"**, %"struct.std::__1::__hash_node_base.974"*** %202, align 8
  %215 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %214, i64 %212
  store %"struct.std::__1::__hash_node_base.974"* null, %"struct.std::__1::__hash_node_base.974"** %215, align 8
  %216 = add nuw i64 %212, 1
  %217 = add i64 %213, -1
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %219, label %211, !llvm.loop !16

219:                                              ; preds = %208, %211, %197
  store i64 0, i64* %184, align 8
  br label %237

220:                                              ; preds = %220, %206
  %221 = phi i64 [ 0, %206 ], [ %234, %220 ]
  %222 = phi i64 [ %207, %206 ], [ %235, %220 ]
  %223 = load %"struct.std::__1::__hash_node_base.974"**, %"struct.std::__1::__hash_node_base.974"*** %202, align 8
  %224 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %223, i64 %221
  store %"struct.std::__1::__hash_node_base.974"* null, %"struct.std::__1::__hash_node_base.974"** %224, align 8
  %225 = or i64 %221, 1
  %226 = load %"struct.std::__1::__hash_node_base.974"**, %"struct.std::__1::__hash_node_base.974"*** %202, align 8
  %227 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %226, i64 %225
  store %"struct.std::__1::__hash_node_base.974"* null, %"struct.std::__1::__hash_node_base.974"** %227, align 8
  %228 = or i64 %221, 2
  %229 = load %"struct.std::__1::__hash_node_base.974"**, %"struct.std::__1::__hash_node_base.974"*** %202, align 8
  %230 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %229, i64 %228
  store %"struct.std::__1::__hash_node_base.974"* null, %"struct.std::__1::__hash_node_base.974"** %230, align 8
  %231 = or i64 %221, 3
  %232 = load %"struct.std::__1::__hash_node_base.974"**, %"struct.std::__1::__hash_node_base.974"*** %202, align 8
  %233 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %232, i64 %231
  store %"struct.std::__1::__hash_node_base.974"* null, %"struct.std::__1::__hash_node_base.974"** %233, align 8
  %234 = add nuw i64 %221, 4
  %235 = add i64 %222, -4
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %208, label %220

237:                                              ; preds = %182, %219
  %238 = bitcast %"class.std::__1::stack"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %238) #15
  %239 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %15, i64 0, i32 0, i32 0, i32 0, i32 1
  %240 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %15, i64 0, i32 0, i32 0, i32 0, i32 2
  %241 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %15, i64 0, i32 0, i32 0, i32 1
  %242 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %15, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %238, i8 0, i64 48, i1 false) #15
  %243 = bitcast %"class.spvtools::opt::Instruction"**** %240 to i64*
  %244 = bitcast %"class.spvtools::opt::Instruction"**** %239 to i64*
  %245 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %15, i64 0, i32 0
  call void @_ZNSt3__15dequeIPN8spvtools3opt11InstructionENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque"* nonnull %245) #15
  %246 = load i64, i64* %242, align 8
  %247 = load i64, i64* %241, align 8
  %248 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %239, align 8
  %249 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %240, align 8
  %250 = add i64 %247, %246
  %251 = icmp eq %"class.spvtools::opt::Instruction"*** %249, %248
  br i1 %251, label %259, label %252

252:                                              ; preds = %237
  %253 = lshr i64 %250, 9
  %254 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %248, i64 %253
  %255 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %254, align 8
  %256 = and i64 %250, 511
  %257 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %255, i64 %256
  %258 = bitcast %"class.spvtools::opt::Instruction"** %257 to i64*
  br label %259

259:                                              ; preds = %237, %252
  %260 = phi i64* [ %258, %252 ], [ null, %237 ]
  store i64 0, i64* %260, align 8
  %261 = load i64, i64* %242, align 8
  %262 = add i64 %261, 1
  store i64 %262, i64* %242, align 8
  %263 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %1, i64 0, i32 0, i32 0, i32 1
  %264 = bitcast %"struct.std::__1::__list_node_base"** %263 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %1, i64 0, i32 0, i32 0
  %267 = inttoptr i64 %265 to %"struct.std::__1::__list_node_base"*
  %268 = icmp eq %"struct.std::__1::__list_node_base"* %266, %267
  br i1 %268, label %296, label %269

269:                                              ; preds = %259
  %270 = getelementptr inbounds %"class.std::__1::unordered_map.969", %"class.std::__1::unordered_map.969"* %183, i64 0, i32 0
  %271 = bitcast %"class.std::__1::tuple.1275"* %7 to i8*
  %272 = getelementptr inbounds %"class.std::__1::tuple.1275", %"class.std::__1::tuple.1275"* %7, i64 0, i32 0, i32 0, i32 0
  %273 = getelementptr inbounds %"class.std::__1::tuple.1147", %"class.std::__1::tuple.1147"* %8, i64 0, i32 0
  %274 = bitcast %"class.spvtools::opt::Instruction"** %16 to i8*
  %275 = getelementptr inbounds %"class.std::__1::unordered_map.993", %"class.std::__1::unordered_map.993"* %128, i64 0, i32 0
  %276 = bitcast %"class.std::__1::tuple"* %3 to i8*
  %277 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %278 = getelementptr inbounds %"class.std::__1::tuple.1147", %"class.std::__1::tuple.1147"* %4, i64 0, i32 0
  %279 = bitcast %"class.spvtools::opt::Instruction"** %17 to i8*
  %280 = bitcast %"class.spvtools::opt::Instruction"** %17 to i64*
  %281 = getelementptr inbounds %"class.std::__1::unordered_map.941", %"class.std::__1::unordered_map.941"* %73, i64 0, i32 0
  %282 = bitcast %"class.std::__1::tuple.1275"* %5 to i8*
  %283 = getelementptr inbounds %"class.std::__1::tuple.1275", %"class.std::__1::tuple.1275"* %5, i64 0, i32 0, i32 0, i32 0
  %284 = getelementptr inbounds %"class.std::__1::tuple.1147", %"class.std::__1::tuple.1147"* %6, i64 0, i32 0
  %285 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %15, i64 0, i32 0
  %286 = bitcast %"class.std::__1::tuple"* %9 to i8*
  %287 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 0, i32 0
  %288 = getelementptr inbounds %"class.std::__1::tuple.1147", %"class.std::__1::tuple.1147"* %10, i64 0, i32 0
  %289 = getelementptr inbounds %"class.std::__1::unordered_map.941", %"class.std::__1::unordered_map.941"* %18, i64 0, i32 0
  %290 = bitcast %"class.std::__1::tuple.1275"* %11 to i8*
  %291 = getelementptr inbounds %"class.std::__1::tuple.1275", %"class.std::__1::tuple.1275"* %11, i64 0, i32 0, i32 0, i32 0
  %292 = getelementptr inbounds %"class.std::__1::tuple.1147", %"class.std::__1::tuple.1147"* %12, i64 0, i32 0
  %293 = bitcast %"class.std::__1::tuple"* %13 to i8*
  %294 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %13, i64 0, i32 0, i32 0, i32 0
  %295 = getelementptr inbounds %"class.std::__1::tuple.1147", %"class.std::__1::tuple.1147"* %14, i64 0, i32 0
  br label %298

296:                                              ; preds = %531, %259
  %297 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %15, i64 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIPN8spvtools3opt11InstructionENS_9allocatorIS4_EEED2Ev(%"class.std::__1::__deque_base"* nonnull %297) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %238) #15
  ret void

298:                                              ; preds = %269, %531
  %299 = phi %"struct.std::__1::__list_node_base"* [ %267, %269 ], [ %537, %531 ]
  %300 = phi i64 [ %265, %269 ], [ %536, %531 ]
  %301 = phi i32 [ 0, %269 ], [ %534, %531 ]
  %302 = phi i32 [ 0, %269 ], [ %532, %531 ]
  %303 = inttoptr i64 %300 to %"struct.std::__1::__list_node"*
  %304 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %303, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %271) #15
  store %"class.spvtools::opt::BasicBlock"** %304, %"class.spvtools::opt::BasicBlock"*** %272, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %273) #15
  %305 = call { %"struct.std::__1::__hash_node_base.974"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.970"* %270, %"class.spvtools::opt::BasicBlock"** dereferenceable(8) %304, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1275"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.1147"* nonnull dereferenceable(1) %8) #15
  %306 = extractvalue { %"struct.std::__1::__hash_node_base.974"*, i8 } %305, 0
  %307 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974", %"struct.std::__1::__hash_node_base.974"* %306, i64 3
  %308 = bitcast %"struct.std::__1::__hash_node_base.974"* %307 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %273) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %271) #15
  store i32 %301, i32* %308, align 4
  %309 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %304, align 8
  %310 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %309, i64 0, i32 1, i32 0, i32 0, i32 0
  %311 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %310, align 8
  %312 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %311, i64 0, i32 4
  %313 = load i8, i8* %312, align 1, !range !2
  %314 = icmp eq i8 %313, 0
  br i1 %314, label %320, label %315

315:                                              ; preds = %298
  %316 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %311, i64 0, i32 3
  %317 = load i8, i8* %316, align 4, !range !2
  %318 = zext i8 %317 to i32
  %319 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %311, i32 %318) #15
  br label %320

320:                                              ; preds = %298, %315
  %321 = phi i32 [ %319, %315 ], [ 0, %298 ]
  %322 = icmp eq i32 %321, %302
  br i1 %322, label %323, label %381

323:                                              ; preds = %320
  %324 = load i64, i64* %242, align 8
  %325 = load i64, i64* %241, align 8
  %326 = add i64 %324, -1
  store i64 %326, i64* %242, align 8
  %327 = load i64, i64* %243, align 8
  %328 = load i64, i64* %244, align 8
  %329 = sub i64 %327, %328
  %330 = icmp eq i64 %329, 0
  %331 = shl i64 %329, 6
  %332 = add i64 %331, -1
  %333 = select i1 %330, i64 0, i64 %332
  %334 = sub i64 1, %324
  %335 = sub i64 %334, %325
  %336 = add i64 %335, %333
  %337 = icmp ult i64 %336, 1024
  %338 = inttoptr i64 %328 to %"class.spvtools::opt::Instruction"***
  br i1 %337, label %349, label %339

339:                                              ; preds = %323
  %340 = inttoptr i64 %327 to %"class.spvtools::opt::Instruction"***
  %341 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %340, i64 -1
  %342 = bitcast %"class.spvtools::opt::Instruction"*** %341 to i8**
  %343 = load i8*, i8** %342, align 8
  call void @_ZdlPv(i8* %343) #14
  %344 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %240, align 8
  %345 = getelementptr %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %344, i64 -1
  store %"class.spvtools::opt::Instruction"*** %345, %"class.spvtools::opt::Instruction"**** %240, align 8
  %346 = load i64, i64* %242, align 8
  %347 = load i64, i64* %241, align 8
  %348 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %239, align 8
  br label %349

349:                                              ; preds = %323, %339
  %350 = phi %"class.spvtools::opt::Instruction"*** [ %338, %323 ], [ %348, %339 ]
  %351 = phi i64 [ %325, %323 ], [ %347, %339 ]
  %352 = phi i64 [ %326, %323 ], [ %346, %339 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %274) #15
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %16, align 8
  %353 = add i64 %352, -1
  %354 = add i64 %353, %351
  %355 = lshr i64 %354, 9
  %356 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %350, i64 %355
  %357 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %356, align 8
  %358 = and i64 %354, 511
  %359 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %357, i64 %358
  %360 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %359, align 8
  store %"class.spvtools::opt::Instruction"* %360, %"class.spvtools::opt::Instruction"** %16, align 8
  %361 = icmp eq %"class.spvtools::opt::Instruction"* %360, null
  br i1 %361, label %379, label %362

362:                                              ; preds = %349
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %276) #15
  store %"class.spvtools::opt::Instruction"** %16, %"class.spvtools::opt::Instruction"*** %277, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %278) #15
  %363 = call { %"struct.std::__1::__hash_node_base.998"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.994"* %275, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %16, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1147"* nonnull dereferenceable(1) %4) #15
  %364 = extractvalue { %"struct.std::__1::__hash_node_base.998"*, i8 } %363, 0
  %365 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998", %"struct.std::__1::__hash_node_base.998"* %364, i64 3
  %366 = bitcast %"struct.std::__1::__hash_node_base.998"* %365 to %"class.spvtools::opt::Instruction"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %278) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %276) #15
  %367 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %366, align 8
  %368 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %367, i64 0, i32 3
  %369 = load i8, i8* %368, align 4, !range !2
  %370 = icmp eq i8 %369, 0
  %371 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %367, i64 0, i32 4
  %372 = load i8, i8* %371, align 1, !range !2
  %373 = icmp eq i8 %372, 0
  %374 = select i1 %373, i32 1, i32 2
  %375 = xor i1 %373, true
  %376 = zext i1 %375 to i32
  %377 = select i1 %370, i32 %376, i32 %374
  %378 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %367, i32 %377) #15
  br label %379

379:                                              ; preds = %349, %362
  %380 = phi i32 [ %378, %362 ], [ %302, %349 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %274) #15
  br label %381

381:                                              ; preds = %379, %320
  %382 = phi i32 [ %380, %379 ], [ %302, %320 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %279) #15
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %17, align 8
  %383 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %304, align 8
  %384 = icmp eq %"class.spvtools::opt::BasicBlock"* %383, null
  br i1 %384, label %464, label %385

385:                                              ; preds = %381
  %386 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"* nonnull %383) #15
  %387 = icmp eq %"class.spvtools::opt::Instruction"* %386, null
  br i1 %387, label %464, label %388

388:                                              ; preds = %385
  %389 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %383, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %390 = bitcast %"class.spvtools::opt::Instruction"** %389 to i64*
  %391 = load i64, i64* %390, align 8, !noalias !17
  store i64 %391, i64* %280, align 8
  %392 = ptrtoint %"class.spvtools::opt::Instruction"* %386 to i64
  %393 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %386, i64 0, i32 3
  %394 = load i8, i8* %393, align 4, !range !2
  %395 = icmp eq i8 %394, 0
  %396 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %386, i64 0, i32 4
  %397 = load i8, i8* %396, align 1, !range !2
  %398 = icmp eq i8 %397, 0
  %399 = select i1 %398, i32 1, i32 2
  %400 = xor i1 %398, true
  %401 = zext i1 %400 to i32
  %402 = select i1 %395, i32 %401, i32 %399
  %403 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %386, i32 %402) #15
  %404 = load i64, i64* %242, align 8
  %405 = load i64, i64* %241, align 8
  %406 = add i64 %404, -1
  %407 = add i64 %406, %405
  %408 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %239, align 8
  %409 = lshr i64 %407, 9
  %410 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %408, i64 %409
  %411 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %410, align 8
  %412 = and i64 %407, 511
  %413 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %411, i64 %412
  %414 = bitcast %"class.spvtools::opt::Instruction"** %413 to i64*
  %415 = load i64, i64* %414, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %282) #15
  store %"class.spvtools::opt::BasicBlock"** %304, %"class.spvtools::opt::BasicBlock"*** %283, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %284) #15
  %416 = call { %"struct.std::__1::__hash_node_base.946"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.942"* %281, %"class.spvtools::opt::BasicBlock"** dereferenceable(8) %304, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1275"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.1147"* nonnull dereferenceable(1) %6) #15
  %417 = extractvalue { %"struct.std::__1::__hash_node_base.946"*, i8 } %416, 0
  %418 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946", %"struct.std::__1::__hash_node_base.946"* %417, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %284) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %282) #15
  %419 = bitcast %"struct.std::__1::__hash_node_base.946"* %418 to i64*
  store i64 %415, i64* %419, align 8
  %420 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %386, i64 0, i32 2
  %421 = load i32, i32* %420, align 8
  %422 = icmp eq i32 %421, 246
  br i1 %422, label %423, label %464

423:                                              ; preds = %388
  %424 = load i64, i64* %243, align 8
  %425 = load i64, i64* %244, align 8
  %426 = sub i64 %424, %425
  %427 = icmp eq i64 %426, 0
  %428 = shl i64 %426, 6
  %429 = add i64 %428, -1
  %430 = select i1 %427, i64 0, i64 %429
  %431 = load i64, i64* %241, align 8
  %432 = load i64, i64* %242, align 8
  %433 = add i64 %432, %431
  %434 = icmp eq i64 %430, %433
  %435 = inttoptr i64 %425 to %"class.spvtools::opt::Instruction"***
  %436 = inttoptr i64 %424 to %"class.spvtools::opt::Instruction"***
  br i1 %434, label %437, label %443

437:                                              ; preds = %423
  call void @_ZNSt3__15dequeIPN8spvtools3opt11InstructionENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque"* nonnull %285) #15
  %438 = load i64, i64* %242, align 8
  %439 = load i64, i64* %241, align 8
  %440 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %239, align 8
  %441 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %240, align 8
  %442 = add i64 %439, %438
  br label %443

443:                                              ; preds = %437, %423
  %444 = phi i64 [ %442, %437 ], [ %433, %423 ]
  %445 = phi %"class.spvtools::opt::Instruction"*** [ %441, %437 ], [ %436, %423 ]
  %446 = phi %"class.spvtools::opt::Instruction"*** [ %440, %437 ], [ %435, %423 ]
  %447 = icmp eq %"class.spvtools::opt::Instruction"*** %445, %446
  br i1 %447, label %455, label %448

448:                                              ; preds = %443
  %449 = lshr i64 %444, 9
  %450 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %446, i64 %449
  %451 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %450, align 8
  %452 = and i64 %444, 511
  %453 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %451, i64 %452
  %454 = bitcast %"class.spvtools::opt::Instruction"** %453 to i64*
  br label %455

455:                                              ; preds = %443, %448
  %456 = phi i64* [ %454, %448 ], [ null, %443 ]
  %457 = load i64, i64* %280, align 8
  store i64 %457, i64* %456, align 8
  %458 = load i64, i64* %242, align 8
  %459 = add i64 %458, 1
  store i64 %459, i64* %242, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %286) #15
  store %"class.spvtools::opt::Instruction"** %17, %"class.spvtools::opt::Instruction"*** %287, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %288) #15
  %460 = call { %"struct.std::__1::__hash_node_base.998"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.994"* %275, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %17, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.1147"* nonnull dereferenceable(1) %10) #15
  %461 = extractvalue { %"struct.std::__1::__hash_node_base.998"*, i8 } %460, 0
  %462 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998", %"struct.std::__1::__hash_node_base.998"* %461, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %288) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %286) #15
  %463 = bitcast %"struct.std::__1::__hash_node_base.998"* %462 to i64*
  store i64 %392, i64* %463, align 8
  br label %464

464:                                              ; preds = %385, %381, %455, %388
  %465 = phi i1 [ true, %455 ], [ true, %388 ], [ false, %381 ], [ false, %385 ]
  %466 = phi i32 [ %403, %455 ], [ %403, %388 ], [ -1431655766, %381 ], [ -1431655766, %385 ]
  %467 = phi i64 [ %392, %455 ], [ %392, %388 ], [ -6148914691236517206, %381 ], [ -6148914691236517206, %385 ]
  %468 = phi i32 [ %403, %455 ], [ %382, %388 ], [ %382, %381 ], [ %382, %385 ]
  %469 = load i64, i64* %242, align 8
  %470 = load i64, i64* %241, align 8
  %471 = add i64 %469, -1
  %472 = add i64 %471, %470
  %473 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %239, align 8
  %474 = lshr i64 %472, 9
  %475 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %473, i64 %474
  %476 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %475, align 8
  %477 = and i64 %472, 511
  %478 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %476, i64 %477
  %479 = bitcast %"class.spvtools::opt::Instruction"** %478 to i64*
  %480 = load i64, i64* %479, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %290) #15
  store %"class.spvtools::opt::BasicBlock"** %304, %"class.spvtools::opt::BasicBlock"*** %291, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %292) #15
  %481 = call { %"struct.std::__1::__hash_node_base.946"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.942"* %289, %"class.spvtools::opt::BasicBlock"** dereferenceable(8) %304, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1275"* nonnull dereferenceable(8) %11, %"class.std::__1::tuple.1147"* nonnull dereferenceable(1) %12) #15
  %482 = extractvalue { %"struct.std::__1::__hash_node_base.946"*, i8 } %481, 0
  %483 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946", %"struct.std::__1::__hash_node_base.946"* %482, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %292) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %290) #15
  %484 = bitcast %"struct.std::__1::__hash_node_base.946"* %483 to i64*
  store i64 %480, i64* %484, align 8
  br i1 %465, label %485, label %531

485:                                              ; preds = %464
  %486 = inttoptr i64 %467 to %"class.spvtools::opt::Instruction"*
  %487 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %486, i64 0, i32 2
  %488 = load i32, i32* %487, align 8
  %489 = icmp eq i32 %488, 247
  br i1 %489, label %490, label %531

490:                                              ; preds = %485
  %491 = load i64, i64* %243, align 8
  %492 = load i64, i64* %244, align 8
  %493 = sub i64 %491, %492
  %494 = icmp eq i64 %493, 0
  %495 = shl i64 %493, 6
  %496 = add i64 %495, -1
  %497 = select i1 %494, i64 0, i64 %496
  %498 = load i64, i64* %241, align 8
  %499 = load i64, i64* %242, align 8
  %500 = add i64 %499, %498
  %501 = icmp eq i64 %497, %500
  %502 = inttoptr i64 %492 to %"class.spvtools::opt::Instruction"***
  %503 = inttoptr i64 %491 to %"class.spvtools::opt::Instruction"***
  br i1 %501, label %504, label %510

504:                                              ; preds = %490
  call void @_ZNSt3__15dequeIPN8spvtools3opt11InstructionENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque"* nonnull %285) #15
  %505 = load i64, i64* %242, align 8
  %506 = load i64, i64* %241, align 8
  %507 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %239, align 8
  %508 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %240, align 8
  %509 = add i64 %506, %505
  br label %510

510:                                              ; preds = %504, %490
  %511 = phi i64 [ %509, %504 ], [ %500, %490 ]
  %512 = phi %"class.spvtools::opt::Instruction"*** [ %508, %504 ], [ %503, %490 ]
  %513 = phi %"class.spvtools::opt::Instruction"*** [ %507, %504 ], [ %502, %490 ]
  %514 = icmp eq %"class.spvtools::opt::Instruction"*** %512, %513
  br i1 %514, label %522, label %515

515:                                              ; preds = %510
  %516 = lshr i64 %511, 9
  %517 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %513, i64 %516
  %518 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %517, align 8
  %519 = and i64 %511, 511
  %520 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %518, i64 %519
  %521 = bitcast %"class.spvtools::opt::Instruction"** %520 to i64*
  br label %522

522:                                              ; preds = %510, %515
  %523 = phi i64* [ %521, %515 ], [ null, %510 ]
  %524 = load i64, i64* %280, align 8
  store i64 %524, i64* %523, align 8
  %525 = load i64, i64* %242, align 8
  %526 = add i64 %525, 1
  store i64 %526, i64* %242, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %293) #15
  store %"class.spvtools::opt::Instruction"** %17, %"class.spvtools::opt::Instruction"*** %294, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %295) #15
  %527 = call { %"struct.std::__1::__hash_node_base.998"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.994"* %275, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %17, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %13, %"class.std::__1::tuple.1147"* nonnull dereferenceable(1) %14) #15
  %528 = extractvalue { %"struct.std::__1::__hash_node_base.998"*, i8 } %527, 0
  %529 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998", %"struct.std::__1::__hash_node_base.998"* %528, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %295) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %293) #15
  %530 = bitcast %"struct.std::__1::__hash_node_base.998"* %529 to i64*
  store i64 %467, i64* %530, align 8
  br label %531

531:                                              ; preds = %522, %485, %464
  %532 = phi i32 [ %466, %522 ], [ %468, %485 ], [ %468, %464 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %279) #15
  %533 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %299, i64 0, i32 1
  %534 = add i32 %301, 1
  %535 = bitcast %"struct.std::__1::__list_node_base"** %533 to i64*
  %536 = load i64, i64* %535, align 8
  %537 = inttoptr i64 %536 to %"struct.std::__1::__list_node_base"*
  %538 = icmp eq %"struct.std::__1::__list_node_base"* %266, %537
  br i1 %538, label %296, label %298
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt17AggressiveDCEPass9AddBranchEjPNS0_10BasicBlockE(%"class.spvtools::opt::AggressiveDCEPass"* nocapture readonly, i32, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.1147", align 1
  %6 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %9 = alloca %"class.spvtools::utils::SmallVector", align 8
  %10 = tail call i8* @_Znwm(i64 112) #14
  %11 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 0, i32 0, i32 2
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #15
  %14 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #15
  %15 = bitcast %"class.spvtools::utils::SmallVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #15
  %16 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 1
  %18 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 2
  %19 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 3, i64 0
  %20 = bitcast i32** %18 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %19, %"struct.std::__1::aligned_storage<4, 4>::type"** %20, align 8
  %21 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4
  %22 = bitcast %"class.std::__1::unique_ptr.0"* %21 to i64*
  store i64 0, i64* %22, align 8
  %23 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %19 to i32*
  store i64 1, i64* %17, align 8
  store i32 %1, i32* %23, align 8
  %24 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 0
  store i32 1, i32* %24, align 8
  %25 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1
  %26 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %25, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 2
  %29 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 3, i64 0
  %30 = bitcast i32** %28 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %29, %"struct.std::__1::aligned_storage<4, 4>::type"** %30, align 8
  %31 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 4
  %32 = bitcast %"class.std::__1::unique_ptr.0"* %31 to i64*
  store i64 0, i64* %32, align 8
  %33 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %25, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %9) #15
  %34 = call i8* @_Znwm(i64 48) #14
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %36 = bitcast %"class.std::__1::vector"* %7 to i8**
  store i8* %34, i8** %36, align 8
  %37 = getelementptr inbounds i8, i8* %34, i64 48
  %38 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast %"struct.spvtools::opt::Operand"** %38 to i8**
  store i8* %37, i8** %39, align 8
  %40 = bitcast i8* %34 to i32*
  %41 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  store i32 %42, i32* %40, align 8
  %43 = getelementptr inbounds i8, i8* %34, i64 8
  %44 = bitcast i8* %43 to %"class.spvtools::utils::SmallVector"*
  %45 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1
  %46 = bitcast i8* %43 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %47 = getelementptr inbounds i8, i8* %34, i64 16
  %48 = bitcast i8* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds i8, i8* %34, i64 24
  %50 = getelementptr inbounds i8, i8* %34, i64 32
  %51 = bitcast i8* %49 to i8**
  store i8* %50, i8** %51, align 8
  %52 = getelementptr inbounds i8, i8* %34, i64 40
  %53 = bitcast i8* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %44, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %45) #15
  %55 = getelementptr inbounds i8, i8* %34, i64 48
  %56 = bitcast i8* %10 to %"class.spvtools::opt::Instruction"*
  %57 = bitcast %"struct.spvtools::opt::Operand"** %35 to i64*
  %58 = ptrtoint i8* %55 to i64
  store i64 %58, i64* %57, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %56, %"class.spvtools::opt::IRContext"* %12, i32 249, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %7) #15
  %59 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %60 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %59, align 8
  %61 = icmp eq %"struct.spvtools::opt::Operand"* %60, null
  br i1 %61, label %90, label %62

62:                                               ; preds = %3
  %63 = bitcast %"struct.spvtools::opt::Operand"* %60 to i8*
  %64 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %35, align 8
  %65 = icmp eq %"struct.spvtools::opt::Operand"* %64, %60
  br i1 %65, label %88, label %66

66:                                               ; preds = %62, %84
  %67 = phi %"struct.spvtools::opt::Operand"* [ %68, %84 ], [ %64, %62 ]
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %67, i64 -1
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %67, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %67, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %71 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %70, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %70, align 8
  %72 = icmp eq %"class.std::__1::vector.3"* %71, null
  br i1 %72, label %84, label %73

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %71, i64 0, i32 0, i32 0
  %75 = load i32*, i32** %74, align 8
  %76 = icmp eq i32* %75, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %73
  %78 = ptrtoint i32* %75 to i64
  %79 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %71, i64 0, i32 0, i32 1
  %80 = bitcast i32** %79 to i64*
  store i64 %78, i64* %80, align 8
  %81 = bitcast i32* %75 to i8*
  call void @_ZdlPv(i8* %81) #14
  br label %82

82:                                               ; preds = %77, %73
  %83 = bitcast %"class.std::__1::vector.3"* %71 to i8*
  call void @_ZdlPv(i8* %83) #14
  br label %84

84:                                               ; preds = %82, %66
  %85 = icmp eq %"struct.spvtools::opt::Operand"* %68, %60
  br i1 %85, label %86, label %66

86:                                               ; preds = %84
  %87 = load i8*, i8** %36, align 8
  br label %88

88:                                               ; preds = %86, %62
  %89 = phi i8* [ %87, %86 ], [ %63, %62 ]
  store %"struct.spvtools::opt::Operand"* %60, %"struct.spvtools::opt::Operand"** %35, align 8
  call void @_ZdlPv(i8* %89) #14
  br label %90

90:                                               ; preds = %3, %88
  %91 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %91, align 8
  %92 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %93 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %92, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %92, align 8
  %94 = icmp eq %"class.std::__1::vector.3"* %93, null
  br i1 %94, label %106, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %93, i64 0, i32 0, i32 0
  %97 = load i32*, i32** %96, align 8
  %98 = icmp eq i32* %97, null
  br i1 %98, label %104, label %99

99:                                               ; preds = %95
  %100 = ptrtoint i32* %97 to i64
  %101 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %93, i64 0, i32 0, i32 1
  %102 = bitcast i32** %101 to i64*
  store i64 %100, i64* %102, align 8
  %103 = bitcast i32* %97 to i8*
  call void @_ZdlPv(i8* %103) #14
  br label %104

104:                                              ; preds = %99, %95
  %105 = bitcast %"class.std::__1::vector.3"* %93 to i8*
  call void @_ZdlPv(i8* %105) #14
  br label %106

106:                                              ; preds = %90, %104
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %107 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %108 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %107, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %107, align 8
  %109 = icmp eq %"class.std::__1::vector.3"* %108, null
  br i1 %109, label %121, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %108, i64 0, i32 0, i32 0
  %112 = load i32*, i32** %111, align 8
  %113 = icmp eq i32* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %110
  %115 = ptrtoint i32* %112 to i64
  %116 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %108, i64 0, i32 0, i32 1
  %117 = bitcast i32** %116 to i64*
  store i64 %115, i64* %117, align 8
  %118 = bitcast i32* %112 to i8*
  call void @_ZdlPv(i8* %118) #14
  br label %119

119:                                              ; preds = %114, %110
  %120 = bitcast %"class.std::__1::vector.3"* %108 to i8*
  call void @_ZdlPv(i8* %120) #14
  br label %121

121:                                              ; preds = %106, %119
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #15
  %122 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %123 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %122, i64 0, i32 11
  %124 = load i32, i32* %123, align 8
  %125 = and i32 %124, 1
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %133, label %127

127:                                              ; preds = %121
  %128 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %122, i64 0, i32 6, i32 0, i32 0, i32 0
  %129 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %128, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %129, %"class.spvtools::opt::Instruction"* nonnull %56) #15
  %130 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %130, i64 0, i32 11
  %132 = load i32, i32* %131, align 8
  br label %133

133:                                              ; preds = %121, %127
  %134 = phi i32 [ %124, %121 ], [ %132, %127 ]
  %135 = phi %"class.spvtools::opt::IRContext"* [ %122, %121 ], [ %130, %127 ]
  %136 = bitcast %"class.spvtools::opt::Instruction"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136)
  %137 = bitcast %"class.spvtools::opt::Instruction"** %6 to i8**
  store i8* %10, i8** %137, align 8
  %138 = and i32 %134, 2
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %149, label %140

140:                                              ; preds = %133
  %141 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %135, i64 0, i32 9, i32 0
  %142 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #15
  %143 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %6, %"class.spvtools::opt::Instruction"*** %143, align 8
  %144 = getelementptr inbounds %"class.std::__1::tuple.1147", %"class.std::__1::tuple.1147"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %144) #15
  %145 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %141, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %6, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.1147"* nonnull dereferenceable(1) %5) #15
  %146 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %145, 0
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %146, i64 3
  %148 = bitcast %"struct.std::__1::__hash_node_base.178"* %147 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %144) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #15
  store %"class.spvtools::opt::BasicBlock"* %2, %"class.spvtools::opt::BasicBlock"** %148, align 8
  br label %149

149:                                              ; preds = %133, %140
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136)
  %150 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %2, i64 0, i32 2, i32 0, i32 1
  %151 = getelementptr inbounds i8, i8* %10, i64 8
  %152 = bitcast i8* %151 to %"class.spvtools::opt::Instruction"**
  %153 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %152, align 8
  %154 = icmp eq %"class.spvtools::opt::Instruction"* %153, null
  br i1 %154, label %167, label %155

155:                                              ; preds = %149
  %156 = getelementptr inbounds i8, i8* %10, i64 16
  %157 = bitcast i8* %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %153, i64 0, i32 0, i32 2
  %160 = bitcast %"class.spvtools::opt::Instruction"** %159 to i64*
  store i64 %158, i64* %160, align 8
  %161 = bitcast i8* %151 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = bitcast i8* %156 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %164 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %163, align 8
  %165 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %164, i64 0, i32 1
  %166 = bitcast %"class.spvtools::opt::Instruction"** %165 to i64*
  store i64 %162, i64* %166, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %151, i8 0, i64 16, i1 false) #15
  br label %167

167:                                              ; preds = %149, %155
  store %"class.spvtools::opt::Instruction"* %150, %"class.spvtools::opt::Instruction"** %152, align 8
  %168 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %2, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %169 = bitcast %"class.spvtools::opt::Instruction"** %168 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = getelementptr inbounds i8, i8* %10, i64 16
  %172 = bitcast i8* %171 to i64*
  store i64 %170, i64* %172, align 8
  %173 = bitcast %"class.spvtools::opt::Instruction"** %168 to i8**
  store i8* %10, i8** %173, align 8
  %174 = inttoptr i64 %170 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %175 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %174, i64 0, i32 1
  %176 = bitcast %"class.spvtools::opt::Instruction"** %175 to i8**
  store i8* %10, i8** %176, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*, i32, i32, i32, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #14
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt17AggressiveDCEPass31AddBreaksAndContinuesToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.1275", align 8
  %4 = alloca %"class.std::__1::tuple.1147", align 1
  %5 = alloca %"class.std::__1::tuple.1275", align 8
  %6 = alloca %"class.std::__1::tuple.1147", align 1
  %7 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %8 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %9 = alloca %"class.std::__1::function.1047", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.std::__1::function.1047", align 8
  %12 = bitcast %"class.spvtools::opt::BasicBlock"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #15
  %13 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 0, i32 0, i32 2
  %14 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %13, align 8
  %15 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %14, %"class.spvtools::opt::Instruction"* %1)
  store %"class.spvtools::opt::BasicBlock"* %15, %"class.spvtools::opt::BasicBlock"** %7, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 7, i32 0
  %17 = bitcast %"class.std::__1::tuple.1275"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  %18 = getelementptr inbounds %"class.std::__1::tuple.1275", %"class.std::__1::tuple.1275"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"** %7, %"class.spvtools::opt::BasicBlock"*** %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::tuple.1147", %"class.std::__1::tuple.1147"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #15
  %20 = call { %"struct.std::__1::__hash_node_base.974"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.970"* %16, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1275"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.1147"* nonnull dereferenceable(1) %6) #15
  %21 = extractvalue { %"struct.std::__1::__hash_node_base.974"*, i8 } %20, 0
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974", %"struct.std::__1::__hash_node_base.974"* %21, i64 3
  %23 = bitcast %"struct.std::__1::__hash_node_base.974"* %22 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %26 = load i8, i8* %25, align 4, !range !2
  %27 = icmp eq i8 %26, 0
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %29 = load i8, i8* %28, align 1, !range !2
  %30 = icmp eq i8 %29, 0
  %31 = select i1 %30, i32 1, i32 2
  %32 = xor i1 %30, true
  %33 = zext i1 %32 to i32
  %34 = select i1 %27, i32 %33, i32 %31
  %35 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %34) #15
  %36 = bitcast %"class.spvtools::opt::BasicBlock"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #15
  %37 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %13, align 8
  %38 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEj(%"class.spvtools::opt::IRContext"* %37, i32 %35)
  store %"class.spvtools::opt::BasicBlock"* %38, %"class.spvtools::opt::BasicBlock"** %8, align 8
  %39 = bitcast %"class.std::__1::tuple.1275"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #15
  %40 = getelementptr inbounds %"class.std::__1::tuple.1275", %"class.std::__1::tuple.1275"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"** %8, %"class.spvtools::opt::BasicBlock"*** %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::tuple.1147", %"class.std::__1::tuple.1147"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %41) #15
  %42 = call { %"struct.std::__1::__hash_node_base.974"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.970"* %16, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1275"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1147"* nonnull dereferenceable(1) %4) #15
  %43 = extractvalue { %"struct.std::__1::__hash_node_base.974"*, i8 } %42, 0
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974", %"struct.std::__1::__hash_node_base.974"* %43, i64 3
  %45 = bitcast %"struct.std::__1::__hash_node_base.974"* %44 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %41) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #15
  %46 = load i32, i32* %45, align 4
  %47 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %13, align 8
  %48 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %47, i64 0, i32 11
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %76

52:                                               ; preds = %2
  %53 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %47, i64 0, i32 4, i32 0, i32 0, i32 0
  %54 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %53, align 8
  %55 = call i8* @_Znwm(i64 104) #14
  %56 = bitcast i8* %55 to %"class.spvtools::opt::analysis::DefUseManager"*
  %57 = getelementptr inbounds i8, i8* %55, i64 32
  %58 = bitcast i8* %57 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %58, align 4
  %59 = getelementptr inbounds i8, i8* %55, i64 48
  %60 = getelementptr inbounds i8, i8* %55, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 16, i1 false) #15
  %61 = bitcast i8* %60 to i8**
  store i8* %59, i8** %61, align 8
  %62 = getelementptr inbounds i8, i8* %55, i64 64
  %63 = getelementptr inbounds i8, i8* %55, i64 96
  %64 = bitcast i8* %63 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %64, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %56, %"class.spvtools::opt::Module"* %54) #15
  %65 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %47, i64 0, i32 6
  %66 = ptrtoint i8* %55 to i64
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %65, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %67, align 8
  %69 = bitcast %"class.std::__1::unique_ptr.62"* %65 to i64*
  store i64 %66, i64* %69, align 8
  %70 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %68, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %52
  %72 = bitcast %"class.std::__1::unique_ptr.62"* %65 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %72, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %68) #15
  br label %73

73:                                               ; preds = %71, %52
  %74 = load i32, i32* %48, align 8
  %75 = or i32 %74, 1
  store i32 %75, i32* %48, align 8
  br label %76

76:                                               ; preds = %2, %73
  %77 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %47, i64 0, i32 6, i32 0, i32 0, i32 0
  %78 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %77, align 8
  %79 = bitcast %"class.std::__1::function.1047"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #15
  %80 = zext i32 %46 to i64
  %81 = shl nuw i64 %80, 32
  %82 = zext i32 %24 to i64
  %83 = or i64 %81, %82
  %84 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %9, i64 0, i32 0, i32 1, i32 0
  %85 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %9, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_17AggressiveDCEPass31AddBreaksAndContinuesToWorklistES5_E3$_2S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %84, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass31AddBreaksAndContinuesToWorklistEPNS5_11InstructionEE3$_2FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %85, align 8
  %86 = bitcast %"class.std::__1::function.1047"* %9 to i64*
  store i64 %83, i64* %86, align 8
  %87 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %9, i64 0, i32 0, i32 0, i32 1
  %88 = bitcast [8 x i8]* %87 to %"class.spvtools::opt::AggressiveDCEPass"**
  store %"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::AggressiveDCEPass"** %88, align 8
  call void @_ZNK8spvtools3opt8analysis13DefUseManager11ForEachUserEjRKNSt3__18functionIFvPNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DefUseManager"* %78, i32 %35, %"class.std::__1::function.1047"* nonnull dereferenceable(32) %9) #15
  %89 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %85, align 8
  %90 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %89, i64 0, i32 1
  %91 = load void (i8*)*, void (i8*)** %90, align 8
  %92 = icmp eq void (i8*)* %91, null
  br i1 %92, label %96, label %93

93:                                               ; preds = %76
  %94 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %9, i64 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  call void %91(i8* %95) #15
  br label %96

96:                                               ; preds = %76, %93
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #15
  %97 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %98 = load i32, i32* %97, align 8
  %99 = icmp eq i32 %98, 246
  br i1 %99, label %100, label %160

100:                                              ; preds = %96
  %101 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %101) #15
  %102 = load i8, i8* %25, align 4, !range !2
  %103 = icmp eq i8 %102, 0
  %104 = load i8, i8* %28, align 1, !range !2
  %105 = icmp eq i8 %104, 0
  %106 = select i1 %105, i32 1, i32 2
  %107 = xor i1 %105, true
  %108 = zext i1 %107 to i32
  %109 = select i1 %103, i32 %108, i32 %106
  %110 = add nuw nsw i32 %109, 1
  %111 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %110) #15
  store i32 %111, i32* %10, align 4
  %112 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %13, align 8
  %113 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %112, i64 0, i32 11
  %114 = load i32, i32* %113, align 8
  %115 = and i32 %114, 1
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %142

117:                                              ; preds = %100
  %118 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %112, i64 0, i32 4, i32 0, i32 0, i32 0
  %119 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %118, align 8
  %120 = call i8* @_Znwm(i64 104) #14
  %121 = bitcast i8* %120 to %"class.spvtools::opt::analysis::DefUseManager"*
  %122 = getelementptr inbounds i8, i8* %120, i64 32
  %123 = bitcast i8* %122 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %120, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %123, align 4
  %124 = getelementptr inbounds i8, i8* %120, i64 48
  %125 = getelementptr inbounds i8, i8* %120, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 16, i1 false) #15
  %126 = bitcast i8* %125 to i8**
  store i8* %124, i8** %126, align 8
  %127 = getelementptr inbounds i8, i8* %120, i64 64
  %128 = getelementptr inbounds i8, i8* %120, i64 96
  %129 = bitcast i8* %128 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %127, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %129, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %121, %"class.spvtools::opt::Module"* %119) #15
  %130 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %112, i64 0, i32 6
  %131 = ptrtoint i8* %120 to i64
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %130, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %132, align 8
  %134 = bitcast %"class.std::__1::unique_ptr.62"* %130 to i64*
  store i64 %131, i64* %134, align 8
  %135 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %133, null
  br i1 %135, label %138, label %136

136:                                              ; preds = %117
  %137 = bitcast %"class.std::__1::unique_ptr.62"* %130 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %137, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %133) #15
  br label %138

138:                                              ; preds = %136, %117
  %139 = load i32, i32* %113, align 8
  %140 = or i32 %139, 1
  store i32 %140, i32* %113, align 8
  %141 = load i32, i32* %10, align 4
  br label %142

142:                                              ; preds = %100, %138
  %143 = phi i32 [ %111, %100 ], [ %141, %138 ]
  %144 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %112, i64 0, i32 6, i32 0, i32 0, i32 0
  %145 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %144, align 8
  %146 = bitcast %"class.std::__1::function.1047"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %146) #15
  %147 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %11, i64 0, i32 0, i32 1, i32 0
  %148 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %11, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_17AggressiveDCEPass31AddBreaksAndContinuesToWorklistES5_E3$_3S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %147, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass31AddBreaksAndContinuesToWorklistEPNS5_11InstructionEE3$_3FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %148, align 8
  %149 = bitcast %"class.std::__1::function.1047"* %11 to i32**
  store i32* %10, i32** %149, align 8
  %150 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %11, i64 0, i32 0, i32 0, i32 1
  %151 = bitcast [8 x i8]* %150 to %"class.spvtools::opt::AggressiveDCEPass"**
  store %"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::AggressiveDCEPass"** %151, align 8
  call void @_ZNK8spvtools3opt8analysis13DefUseManager11ForEachUserEjRKNSt3__18functionIFvPNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DefUseManager"* %145, i32 %143, %"class.std::__1::function.1047"* nonnull dereferenceable(32) %11) #15
  %152 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %148, align 8
  %153 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %152, i64 0, i32 1
  %154 = load void (i8*)*, void (i8*)** %153, align 8
  %155 = icmp eq void (i8*)* %154, null
  br i1 %155, label %159, label %156

156:                                              ; preds = %142
  %157 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %11, i64 0, i32 0, i32 0, i32 0
  %158 = load i8*, i8** %157, align 8
  call void %154(i8* %158) #15
  br label %159

159:                                              ; preds = %142, %156
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %146) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %101) #15
  br label %160

160:                                              ; preds = %96, %159
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEj(%"class.spvtools::opt::IRContext"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %31

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %9 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %8, align 8
  %10 = tail call i8* @_Znwm(i64 104) #14
  %11 = bitcast i8* %10 to %"class.spvtools::opt::analysis::DefUseManager"*
  %12 = getelementptr inbounds i8, i8* %10, i64 32
  %13 = bitcast i8* %12 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %10, i64 48
  %15 = getelementptr inbounds i8, i8* %10, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #15
  %16 = bitcast i8* %15 to i8**
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %10, i64 64
  %18 = getelementptr inbounds i8, i8* %10, i64 96
  %19 = bitcast i8* %18 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %19, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %11, %"class.spvtools::opt::Module"* %9) #15
  %20 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 6
  %21 = ptrtoint i8* %10 to i64
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %20, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %22, align 8
  %24 = bitcast %"class.std::__1::unique_ptr.62"* %20 to i64*
  store i64 %21, i64* %24, align 8
  %25 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %23, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %7
  %27 = bitcast %"class.std::__1::unique_ptr.62"* %20 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %27, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %23) #15
  br label %28

28:                                               ; preds = %26, %7
  %29 = load i32, i32* %3, align 8
  %30 = or i32 %29, 1
  store i32 %30, i32* %3, align 8
  br label %31

31:                                               ; preds = %2, %28
  %32 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %33 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %32, align 8
  %34 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %33, i32 %1) #15
  %35 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %0, %"class.spvtools::opt::Instruction"* %34)
  ret %"class.spvtools::opt::BasicBlock"* %35
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt17AggressiveDCEPass13AggressiveDCEEPNS0_8FunctionE(%"class.spvtools::opt::AggressiveDCEPass"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::function.1179", align 8
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.1147", align 1
  %6 = alloca %"class.std::__1::tuple.1275", align 8
  %7 = alloca %"class.std::__1::tuple.1147", align 1
  %8 = alloca %"class.std::__1::tuple", align 8
  %9 = alloca %"class.std::__1::tuple.1147", align 1
  %10 = alloca %"class.std::__1::tuple.1275", align 8
  %11 = alloca %"class.std::__1::tuple.1147", align 1
  %12 = alloca %"class.std::__1::function.1179", align 8
  %13 = alloca %"class.std::__1::function.1218", align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca %"class.std::__1::function.1047", align 8
  %17 = alloca %"class.std::__1::list", align 8
  %18 = alloca i8, align 1
  %19 = alloca %"class.std::__1::stack.1068", align 8
  %20 = alloca %"class.std::__1::stack.1081", align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %24 = alloca %"class.std::__1::function.1092", align 8
  %25 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %26 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %27 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca %"class.std::__1::function.1092", align 8
  %31 = alloca i32, align 4
  %32 = alloca %"class.std::__1::vector.1017", align 8
  %33 = alloca i32, align 4
  %34 = alloca %"class.std::__1::function.1047", align 8
  %35 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %36 = alloca %"class.spvtools::utils::SmallVector", align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %37, align 8
  tail call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Instruction"* %38)
  %39 = bitcast %"class.std::__1::function.1047"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #15
  %40 = ptrtoint %"class.spvtools::opt::AggressiveDCEPass"* %0 to i64
  %41 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %16, i64 0, i32 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %16, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_17AggressiveDCEPass13AggressiveDCEEPNS3_8FunctionEE3$_4S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %41, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass13AggressiveDCEEPNS5_8FunctionEE3$_4FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %42, align 8
  %43 = bitcast %"class.std::__1::function.1047"* %16 to i64*
  store i64 %40, i64* %43, align 8
  call void @_ZN8spvtools3opt8Function12ForEachParamERKNSt3__18functionIFvPNS0_11InstructionEEEEb(%"class.spvtools::opt::Function"* %1, %"class.std::__1::function.1047"* nonnull dereferenceable(32) %16, i1 zeroext false) #15
  %44 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %42, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %44, i64 0, i32 1
  %46 = load void (i8*)*, void (i8*)** %45, align 8
  %47 = icmp eq void (i8*)* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %2
  %49 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %16, i64 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void %46(i8* %50) #15
  br label %51

51:                                               ; preds = %2, %48
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #15
  %52 = bitcast %"class.std::__1::list"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #15
  %53 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %17, i64 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %17, i64 0, i32 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  %56 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %17, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %56, %"struct.std::__1::__list_node_base"** %53, align 8
  store %"struct.std::__1::__list_node_base"* %56, %"struct.std::__1::__list_node_base"** %54, align 8
  store i64 0, i64* %55, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 0, i32 0, i32 2
  %58 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %57, align 8
  %59 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %58, i64 0, i32 11
  %60 = load i32, i32* %59, align 8
  %61 = and i32 %60, 16
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %79

63:                                               ; preds = %51
  %64 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %58, i64 0, i32 4, i32 0, i32 0, i32 0
  %65 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %64, align 8
  %66 = call i8* @_Znwm(i64 400) #14
  %67 = bitcast i8* %66 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %67, %"class.spvtools::opt::Module"* %65) #15
  %68 = ptrtoint i8* %66 to i64
  %69 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %58, i64 0, i32 15
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %69, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %70, align 8
  %72 = bitcast %"class.std::__1::unique_ptr.273"* %69 to i64*
  store i64 %68, i64* %72, align 8
  %73 = icmp eq %"class.spvtools::opt::CFG"* %71, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %63
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %71) #15
  %75 = bitcast %"class.spvtools::opt::CFG"* %71 to i8*
  call void @_ZdlPv(i8* %75) #14
  br label %76

76:                                               ; preds = %74, %63
  %77 = load i32, i32* %59, align 8
  %78 = or i32 %77, 16
  store i32 %78, i32* %59, align 8
  br label %79

79:                                               ; preds = %51, %76
  %80 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %58, i64 0, i32 15, i32 0, i32 0, i32 0
  %81 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %80, align 8
  %82 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 0
  %83 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %84, align 8
  call void @_ZN8spvtools3opt3CFG22ComputeStructuredOrderEPNS0_8FunctionEPNS0_10BasicBlockEPNSt3__14listIS5_NS6_9allocatorIS5_EEEE(%"class.spvtools::opt::CFG"* %81, %"class.spvtools::opt::Function"* %1, %"class.spvtools::opt::BasicBlock"* %85, %"class.std::__1::list"* nonnull %17) #15
  call void @_ZN8spvtools3opt17AggressiveDCEPass23ComputeBlock2HeaderMapsERNSt3__14listIPNS0_10BasicBlockENS2_9allocatorIS5_EEEE(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.std::__1::list"* nonnull dereferenceable(24) %17)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #15
  store i8 0, i8* %18, align 1
  %86 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 1
  store i8 0, i8* %86, align 8
  %87 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 2
  store i8 0, i8* %87, align 1
  %88 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 9
  %89 = bitcast %"class.std::__1::vector.1017"* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 9, i32 0, i32 1
  %92 = bitcast %"class.spvtools::opt::Instruction"*** %91 to i64*
  store i64 %90, i64* %92, align 8
  %93 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %146, label %96

96:                                               ; preds = %79
  %97 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %98 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.915"* %98, null
  br i1 %99, label %106, label %100

100:                                              ; preds = %96, %100
  %101 = phi %"struct.std::__1::__hash_node_base.915"* [ %103, %100 ], [ %98, %96 ]
  %102 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %101, i64 0, i32 0
  %103 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %102, align 8
  %104 = bitcast %"struct.std::__1::__hash_node_base.915"* %101 to i8*
  call void @_ZdlPv(i8* %104) #14
  %105 = icmp eq %"struct.std::__1::__hash_node_base.915"* %103, null
  br i1 %105, label %106, label %100

106:                                              ; preds = %100, %96
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %97, align 8
  %107 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %128, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = add i64 %108, -1
  %113 = and i64 %108, 3
  %114 = icmp ult i64 %112, 3
  br i1 %114, label %117, label %115

115:                                              ; preds = %110
  %116 = sub i64 %108, %113
  br label %129

117:                                              ; preds = %129, %110
  %118 = phi i64 [ 0, %110 ], [ %143, %129 ]
  %119 = icmp eq i64 %113, 0
  br i1 %119, label %128, label %120

120:                                              ; preds = %117, %120
  %121 = phi i64 [ %125, %120 ], [ %118, %117 ]
  %122 = phi i64 [ %126, %120 ], [ %113, %117 ]
  %123 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %111, align 8
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %123, i64 %121
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %124, align 8
  %125 = add nuw i64 %121, 1
  %126 = add i64 %122, -1
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %128, label %120, !llvm.loop !20

128:                                              ; preds = %117, %120, %106
  store i64 0, i64* %93, align 8
  br label %146

129:                                              ; preds = %129, %115
  %130 = phi i64 [ 0, %115 ], [ %143, %129 ]
  %131 = phi i64 [ %116, %115 ], [ %144, %129 ]
  %132 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %111, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %132, i64 %130
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %133, align 8
  %134 = or i64 %130, 1
  %135 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %111, align 8
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %135, i64 %134
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %136, align 8
  %137 = or i64 %130, 2
  %138 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %111, align 8
  %139 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %138, i64 %137
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %139, align 8
  %140 = or i64 %130, 3
  %141 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %111, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %141, i64 %140
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %142, align 8
  %143 = add nuw i64 %130, 4
  %144 = add i64 %131, -4
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %117, label %129

146:                                              ; preds = %79, %128
  %147 = bitcast %"class.std::__1::stack.1068"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %147) #15
  %148 = getelementptr inbounds %"class.std::__1::stack.1068", %"class.std::__1::stack.1068"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %149 = getelementptr inbounds %"class.std::__1::stack.1068", %"class.std::__1::stack.1068"* %19, i64 0, i32 0, i32 0, i32 0, i32 1
  %150 = getelementptr inbounds %"class.std::__1::stack.1068", %"class.std::__1::stack.1068"* %19, i64 0, i32 0, i32 0, i32 0, i32 2
  %151 = getelementptr inbounds %"class.std::__1::stack.1068", %"class.std::__1::stack.1068"* %19, i64 0, i32 0, i32 0, i32 1
  %152 = getelementptr inbounds %"class.std::__1::stack.1068", %"class.std::__1::stack.1068"* %19, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %147, i8 0, i64 48, i1 false) #15
  %153 = bitcast %"class.std::__1::stack.1081"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %153) #15
  %154 = getelementptr inbounds %"class.std::__1::stack.1081", %"class.std::__1::stack.1081"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %155 = getelementptr inbounds %"class.std::__1::stack.1081", %"class.std::__1::stack.1081"* %20, i64 0, i32 0, i32 0, i32 0, i32 1
  %156 = getelementptr inbounds %"class.std::__1::stack.1081", %"class.std::__1::stack.1081"* %20, i64 0, i32 0, i32 0, i32 0, i32 2
  %157 = getelementptr inbounds %"class.std::__1::stack.1081", %"class.std::__1::stack.1081"* %20, i64 0, i32 0, i32 0, i32 1
  %158 = getelementptr inbounds %"class.std::__1::stack.1081", %"class.std::__1::stack.1081"* %20, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %153, i8 0, i64 48, i1 false) #15
  %159 = bitcast i8*** %150 to i64*
  %160 = bitcast i8*** %149 to i64*
  %161 = getelementptr inbounds %"class.std::__1::stack.1068", %"class.std::__1::stack.1068"* %19, i64 0, i32 0
  call void @_ZNSt3__15dequeIbNS_9allocatorIbEEE19__add_back_capacityEv(%"class.std::__1::deque.1069"* nonnull %161) #15
  %162 = load i64, i64* %152, align 8
  %163 = load i64, i64* %151, align 8
  %164 = load i8**, i8*** %149, align 8
  %165 = load i8**, i8*** %150, align 8
  %166 = add i64 %163, %162
  %167 = icmp eq i8** %165, %164
  br i1 %167, label %174, label %168

168:                                              ; preds = %146
  %169 = lshr i64 %166, 12
  %170 = getelementptr inbounds i8*, i8** %164, i64 %169
  %171 = load i8*, i8** %170, align 8
  %172 = and i64 %166, 4095
  %173 = getelementptr inbounds i8, i8* %171, i64 %172
  br label %174

174:                                              ; preds = %146, %168
  %175 = phi i8* [ %173, %168 ], [ null, %146 ]
  store i8 1, i8* %175, align 1
  %176 = load i64, i64* %152, align 8
  %177 = add i64 %176, 1
  store i64 %177, i64* %152, align 8
  %178 = bitcast i32*** %156 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = bitcast i32*** %155 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = sub i64 %179, %181
  %183 = icmp eq i64 %182, 0
  %184 = shl i64 %182, 7
  %185 = add i64 %184, -1
  %186 = select i1 %183, i64 0, i64 %185
  %187 = load i64, i64* %157, align 8
  %188 = load i64, i64* %158, align 8
  %189 = add i64 %188, %187
  %190 = icmp eq i64 %186, %189
  %191 = inttoptr i64 %181 to i32**
  %192 = inttoptr i64 %179 to i32**
  br i1 %190, label %193, label %200

193:                                              ; preds = %174
  %194 = getelementptr inbounds %"class.std::__1::stack.1081", %"class.std::__1::stack.1081"* %20, i64 0, i32 0
  call void @_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv(%"class.std::__1::deque.1082"* nonnull %194) #15
  %195 = load i64, i64* %158, align 8
  %196 = load i64, i64* %157, align 8
  %197 = load i32**, i32*** %155, align 8
  %198 = load i32**, i32*** %156, align 8
  %199 = add i64 %196, %195
  br label %200

200:                                              ; preds = %193, %174
  %201 = phi i64 [ %199, %193 ], [ %189, %174 ]
  %202 = phi i32** [ %198, %193 ], [ %192, %174 ]
  %203 = phi i32** [ %197, %193 ], [ %191, %174 ]
  %204 = icmp eq i32** %202, %203
  br i1 %204, label %211, label %205

205:                                              ; preds = %200
  %206 = lshr i64 %201, 10
  %207 = getelementptr inbounds i32*, i32** %203, i64 %206
  %208 = load i32*, i32** %207, align 8
  %209 = and i64 %201, 1023
  %210 = getelementptr inbounds i32, i32* %208, i64 %209
  br label %211

211:                                              ; preds = %200, %205
  %212 = phi i32* [ %210, %205 ], [ null, %200 ]
  store i32 0, i32* %212, align 4
  %213 = load i64, i64* %158, align 8
  %214 = add i64 %213, 1
  store i64 %214, i64* %158, align 8
  %215 = bitcast %"struct.std::__1::__list_node_base"** %54 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = inttoptr i64 %216 to %"struct.std::__1::__list_node_base"*
  %218 = icmp eq %"struct.std::__1::__list_node_base"* %56, %217
  br i1 %218, label %227, label %219

219:                                              ; preds = %211
  %220 = getelementptr inbounds %"class.std::__1::stack.1081", %"class.std::__1::stack.1081"* %20, i64 0, i32 0
  %221 = bitcast i32* %22 to i8*
  %222 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 0
  %223 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %224 = bitcast %"class.spvtools::opt::Instruction"*** %223 to i64*
  %225 = getelementptr inbounds %"class.std::__1::vector.1017", %"class.std::__1::vector.1017"* %88, i64 0, i32 0, i32 0
  %226 = bitcast i32* %21 to i8*
  br label %237

227:                                              ; preds = %323, %211
  %228 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %57, align 8
  %229 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %228, i64 0, i32 4, i32 0, i32 0, i32 0
  %230 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %229, align 8
  %231 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %230, i64 0, i32 7, i32 0, i32 1, i32 0, i32 1
  %232 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %230, i64 0, i32 7, i32 0, i32 1
  %233 = bitcast %"class.spvtools::opt::Instruction"** %231 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = inttoptr i64 %234 to %"class.spvtools::opt::Instruction"*
  %236 = icmp eq %"class.spvtools::opt::Instruction"* %232, %235
  br i1 %236, label %717, label %682

237:                                              ; preds = %219, %323
  %238 = phi %"struct.std::__1::__list_node_base"* [ %217, %219 ], [ %327, %323 ]
  %239 = phi i64 [ %216, %219 ], [ %326, %323 ]
  %240 = inttoptr i64 %239 to %"struct.std::__1::__list_node"*
  %241 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %240, i64 0, i32 1
  %242 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %241, align 8
  %243 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %242, i64 0, i32 1, i32 0, i32 0, i32 0
  %244 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %243, align 8
  %245 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %244, i64 0, i32 4
  %246 = load i8, i8* %245, align 1, !range !2
  %247 = icmp eq i8 %246, 0
  br i1 %247, label %253, label %248

248:                                              ; preds = %237
  %249 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %244, i64 0, i32 3
  %250 = load i8, i8* %249, align 4, !range !2
  %251 = zext i8 %250 to i32
  %252 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %244, i32 %251) #15
  br label %253

253:                                              ; preds = %237, %248
  %254 = phi i32 [ %252, %248 ], [ 0, %237 ]
  %255 = load i64, i64* %158, align 8
  %256 = load i64, i64* %157, align 8
  %257 = add i64 %255, -1
  %258 = add i64 %257, %256
  %259 = load i32**, i32*** %155, align 8
  %260 = lshr i64 %258, 10
  %261 = getelementptr inbounds i32*, i32** %259, i64 %260
  %262 = load i32*, i32** %261, align 8
  %263 = and i64 %258, 1023
  %264 = getelementptr inbounds i32, i32* %262, i64 %263
  %265 = load i32, i32* %264, align 4
  %266 = icmp eq i32 %254, %265
  br i1 %266, label %267, label %315

267:                                              ; preds = %253
  %268 = ptrtoint i32** %259 to i64
  %269 = load i64, i64* %152, align 8
  %270 = load i64, i64* %151, align 8
  %271 = add i64 %269, -1
  store i64 %271, i64* %152, align 8
  %272 = load i64, i64* %159, align 8
  %273 = load i64, i64* %160, align 8
  %274 = sub i64 %272, %273
  %275 = icmp eq i64 %274, 0
  %276 = shl i64 %274, 9
  %277 = add i64 %276, -1
  %278 = select i1 %275, i64 0, i64 %277
  %279 = sub i64 1, %269
  %280 = sub i64 %279, %270
  %281 = add i64 %280, %278
  %282 = icmp ult i64 %281, 8192
  br i1 %282, label %293, label %283

283:                                              ; preds = %267
  %284 = inttoptr i64 %272 to i8**
  %285 = getelementptr inbounds i8*, i8** %284, i64 -1
  %286 = load i8*, i8** %285, align 8
  call void @_ZdlPv(i8* %286) #14
  %287 = load i8**, i8*** %150, align 8
  %288 = getelementptr i8*, i8** %287, i64 -1
  store i8** %288, i8*** %150, align 8
  %289 = load i64, i64* %158, align 8
  %290 = load i64, i64* %157, align 8
  %291 = load i64, i64* %180, align 8
  %292 = add i64 %289, -1
  br label %293

293:                                              ; preds = %267, %283
  %294 = phi i64 [ %257, %267 ], [ %292, %283 ]
  %295 = phi i64 [ %268, %267 ], [ %291, %283 ]
  %296 = phi i64 [ %256, %267 ], [ %290, %283 ]
  %297 = phi i64 [ %255, %267 ], [ %289, %283 ]
  store i64 %294, i64* %158, align 8
  %298 = load i64, i64* %178, align 8
  %299 = sub i64 %298, %295
  %300 = icmp eq i64 %299, 0
  %301 = shl i64 %299, 7
  %302 = add i64 %301, -1
  %303 = select i1 %300, i64 0, i64 %302
  %304 = sub i64 1, %296
  %305 = sub i64 %304, %297
  %306 = add i64 %305, %303
  %307 = icmp ult i64 %306, 2048
  br i1 %307, label %315, label %308

308:                                              ; preds = %293
  %309 = inttoptr i64 %298 to i32**
  %310 = getelementptr inbounds i32*, i32** %309, i64 -1
  %311 = bitcast i32** %310 to i8**
  %312 = load i8*, i8** %311, align 8
  call void @_ZdlPv(i8* %312) #14
  %313 = load i32**, i32*** %156, align 8
  %314 = getelementptr i32*, i32** %313, i64 -1
  store i32** %314, i32*** %156, align 8
  br label %315

315:                                              ; preds = %308, %293, %253
  %316 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %241, align 8
  %317 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %316, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %318 = bitcast %"class.spvtools::opt::Instruction"** %317 to i64*
  %319 = load i64, i64* %318, align 8
  %320 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %316, i64 0, i32 2, i32 0, i32 1
  %321 = inttoptr i64 %319 to %"class.spvtools::opt::Instruction"*
  %322 = icmp eq %"class.spvtools::opt::Instruction"* %320, %321
  br i1 %322, label %323, label %329

323:                                              ; preds = %673, %315
  %324 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %238, i64 0, i32 1
  %325 = bitcast %"struct.std::__1::__list_node_base"** %324 to i64*
  %326 = load i64, i64* %325, align 8
  %327 = inttoptr i64 %326 to %"struct.std::__1::__list_node_base"*
  %328 = icmp eq %"struct.std::__1::__list_node_base"* %56, %327
  br i1 %328, label %227, label %237

329:                                              ; preds = %315, %673
  %330 = phi %"class.spvtools::opt::Instruction"* [ %680, %673 ], [ %321, %315 ]
  %331 = phi i64 [ %677, %673 ], [ %319, %315 ]
  %332 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %330, i64 0, i32 2
  %333 = load i32, i32* %332, align 8
  switch i32 %333, label %667 [
    i32 62, label %334
    i32 63, label %408
    i32 64, label %408
    i32 246, label %493
    i32 247, label %573
    i32 251, label %653
    i32 249, label %653
    i32 250, label %653
    i32 255, label %653
  ]

334:                                              ; preds = %329
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %226) #15
  store i32 -1431655766, i32* %21, align 4
  %335 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt7MemPass6GetPtrEPNS0_11InstructionEPj(%"class.spvtools::opt::MemPass"* %222, %"class.spvtools::opt::Instruction"* %330, i32* nonnull %21) #15
  %336 = load i32, i32* %21, align 4
  %337 = call zeroext i1 @_ZN8spvtools3opt17AggressiveDCEPass14IsVarOfStorageEjj(%"class.spvtools::opt::AggressiveDCEPass"* %0, i32 %336, i32 6)
  br i1 %337, label %341, label %338

338:                                              ; preds = %334
  %339 = load i32, i32* %21, align 4
  %340 = call zeroext i1 @_ZN8spvtools3opt17AggressiveDCEPass14IsVarOfStorageEjj(%"class.spvtools::opt::AggressiveDCEPass"* %0, i32 %339, i32 4)
  br i1 %340, label %341, label %403

341:                                              ; preds = %338, %334
  %342 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %91, align 8
  %343 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %223, align 8
  %344 = icmp ult %"class.spvtools::opt::Instruction"** %342, %343
  %345 = ptrtoint %"class.spvtools::opt::Instruction"** %343 to i64
  br i1 %344, label %346, label %350

346:                                              ; preds = %341
  %347 = bitcast %"class.spvtools::opt::Instruction"** %342 to i64*
  store i64 %331, i64* %347, align 8
  %348 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %342, i64 1
  %349 = ptrtoint %"class.spvtools::opt::Instruction"** %348 to i64
  store i64 %349, i64* %92, align 8
  br label %407

350:                                              ; preds = %341
  %351 = ptrtoint %"class.spvtools::opt::Instruction"** %342 to i64
  %352 = load i64, i64* %89, align 8
  %353 = sub i64 %351, %352
  %354 = ashr exact i64 %353, 3
  %355 = add nsw i64 %354, 1
  %356 = icmp ugt i64 %355, 2305843009213693951
  br i1 %356, label %357, label %359

357:                                              ; preds = %350
  %358 = bitcast %"class.std::__1::vector.1017"* %88 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %358) #16
  unreachable

359:                                              ; preds = %350
  %360 = sub i64 %345, %352
  %361 = ashr exact i64 %360, 3
  %362 = icmp ult i64 %361, 1152921504606846975
  br i1 %362, label %363, label %371

363:                                              ; preds = %359
  %364 = ashr exact i64 %360, 2
  %365 = icmp ult i64 %364, %355
  %366 = select i1 %365, i64 %355, i64 %364
  %367 = icmp eq i64 %366, 0
  br i1 %367, label %376, label %368

368:                                              ; preds = %363
  %369 = icmp ugt i64 %366, 2305843009213693951
  br i1 %369, label %370, label %371

370:                                              ; preds = %368
  call void @abort() #16
  unreachable

371:                                              ; preds = %368, %359
  %372 = phi i64 [ %366, %368 ], [ 2305843009213693951, %359 ]
  %373 = shl i64 %372, 3
  %374 = call i8* @_Znwm(i64 %373) #14
  %375 = bitcast i8* %374 to %"class.spvtools::opt::Instruction"**
  br label %376

376:                                              ; preds = %371, %363
  %377 = phi i64 [ %372, %371 ], [ 0, %363 ]
  %378 = phi %"class.spvtools::opt::Instruction"** [ %375, %371 ], [ null, %363 ]
  %379 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %378, i64 %354
  %380 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %378, i64 %377
  %381 = ptrtoint %"class.spvtools::opt::Instruction"** %380 to i64
  %382 = bitcast %"class.spvtools::opt::Instruction"** %379 to i64*
  store i64 %331, i64* %382, align 8
  %383 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %379, i64 1
  %384 = ptrtoint %"class.spvtools::opt::Instruction"** %383 to i64
  %385 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %225, align 8
  %386 = load i64, i64* %92, align 8
  %387 = ptrtoint %"class.spvtools::opt::Instruction"** %385 to i64
  %388 = sub i64 %386, %387
  %389 = ashr exact i64 %388, 3
  %390 = sub nsw i64 0, %389
  %391 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %379, i64 %390
  %392 = ptrtoint %"class.spvtools::opt::Instruction"** %391 to i64
  %393 = icmp sgt i64 %388, 0
  br i1 %393, label %394, label %398

394:                                              ; preds = %376
  %395 = bitcast %"class.spvtools::opt::Instruction"** %391 to i8*
  %396 = bitcast %"class.spvtools::opt::Instruction"** %385 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %395, i8* align 8 %396, i64 %388, i1 false) #15
  %397 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %225, align 8
  br label %398

398:                                              ; preds = %394, %376
  %399 = phi %"class.spvtools::opt::Instruction"** [ %385, %376 ], [ %397, %394 ]
  store i64 %392, i64* %89, align 8
  store i64 %384, i64* %92, align 8
  store i64 %381, i64* %224, align 8
  %400 = icmp eq %"class.spvtools::opt::Instruction"** %399, null
  br i1 %400, label %407, label %401

401:                                              ; preds = %398
  %402 = bitcast %"class.spvtools::opt::Instruction"** %399 to i8*
  call void @_ZdlPv(i8* %402) #14
  br label %407

403:                                              ; preds = %338
  %404 = load i32, i32* %21, align 4
  %405 = call zeroext i1 @_ZN8spvtools3opt17AggressiveDCEPass14IsVarOfStorageEjj(%"class.spvtools::opt::AggressiveDCEPass"* %0, i32 %404, i32 7)
  br i1 %405, label %407, label %406

406:                                              ; preds = %403
  call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Instruction"* %330)
  br label %407

407:                                              ; preds = %401, %398, %346, %403, %406
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %226) #15
  br label %673

408:                                              ; preds = %329, %329
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %221) #15
  store i32 -1431655766, i32* %22, align 4
  %409 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %330, i64 0, i32 3
  %410 = load i8, i8* %409, align 4, !range !2
  %411 = icmp eq i8 %410, 0
  %412 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %330, i64 0, i32 4
  %413 = load i8, i8* %412, align 1, !range !2
  %414 = icmp eq i8 %413, 0
  %415 = select i1 %414, i32 1, i32 2
  %416 = xor i1 %414, true
  %417 = zext i1 %416 to i32
  %418 = select i1 %411, i32 %417, i32 %415
  %419 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %330, i32 %418) #15
  %420 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt7MemPass6GetPtrEjPj(%"class.spvtools::opt::MemPass"* %222, i32 %419, i32* nonnull %22) #15
  %421 = load i32, i32* %22, align 4
  %422 = call zeroext i1 @_ZN8spvtools3opt17AggressiveDCEPass14IsVarOfStorageEjj(%"class.spvtools::opt::AggressiveDCEPass"* %0, i32 %421, i32 6)
  br i1 %422, label %426, label %423

423:                                              ; preds = %408
  %424 = load i32, i32* %22, align 4
  %425 = call zeroext i1 @_ZN8spvtools3opt17AggressiveDCEPass14IsVarOfStorageEjj(%"class.spvtools::opt::AggressiveDCEPass"* %0, i32 %424, i32 4)
  br i1 %425, label %426, label %488

426:                                              ; preds = %423, %408
  %427 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %91, align 8
  %428 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %223, align 8
  %429 = icmp ult %"class.spvtools::opt::Instruction"** %427, %428
  %430 = ptrtoint %"class.spvtools::opt::Instruction"** %428 to i64
  br i1 %429, label %431, label %435

431:                                              ; preds = %426
  %432 = bitcast %"class.spvtools::opt::Instruction"** %427 to i64*
  store i64 %331, i64* %432, align 8
  %433 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %427, i64 1
  %434 = ptrtoint %"class.spvtools::opt::Instruction"** %433 to i64
  store i64 %434, i64* %92, align 8
  br label %492

435:                                              ; preds = %426
  %436 = ptrtoint %"class.spvtools::opt::Instruction"** %427 to i64
  %437 = load i64, i64* %89, align 8
  %438 = sub i64 %436, %437
  %439 = ashr exact i64 %438, 3
  %440 = add nsw i64 %439, 1
  %441 = icmp ugt i64 %440, 2305843009213693951
  br i1 %441, label %442, label %444

442:                                              ; preds = %435
  %443 = bitcast %"class.std::__1::vector.1017"* %88 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %443) #16
  unreachable

444:                                              ; preds = %435
  %445 = sub i64 %430, %437
  %446 = ashr exact i64 %445, 3
  %447 = icmp ult i64 %446, 1152921504606846975
  br i1 %447, label %448, label %456

448:                                              ; preds = %444
  %449 = ashr exact i64 %445, 2
  %450 = icmp ult i64 %449, %440
  %451 = select i1 %450, i64 %440, i64 %449
  %452 = icmp eq i64 %451, 0
  br i1 %452, label %461, label %453

453:                                              ; preds = %448
  %454 = icmp ugt i64 %451, 2305843009213693951
  br i1 %454, label %455, label %456

455:                                              ; preds = %453
  call void @abort() #16
  unreachable

456:                                              ; preds = %453, %444
  %457 = phi i64 [ %451, %453 ], [ 2305843009213693951, %444 ]
  %458 = shl i64 %457, 3
  %459 = call i8* @_Znwm(i64 %458) #14
  %460 = bitcast i8* %459 to %"class.spvtools::opt::Instruction"**
  br label %461

461:                                              ; preds = %456, %448
  %462 = phi i64 [ %457, %456 ], [ 0, %448 ]
  %463 = phi %"class.spvtools::opt::Instruction"** [ %460, %456 ], [ null, %448 ]
  %464 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %463, i64 %439
  %465 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %463, i64 %462
  %466 = ptrtoint %"class.spvtools::opt::Instruction"** %465 to i64
  %467 = bitcast %"class.spvtools::opt::Instruction"** %464 to i64*
  store i64 %331, i64* %467, align 8
  %468 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %464, i64 1
  %469 = ptrtoint %"class.spvtools::opt::Instruction"** %468 to i64
  %470 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %225, align 8
  %471 = load i64, i64* %92, align 8
  %472 = ptrtoint %"class.spvtools::opt::Instruction"** %470 to i64
  %473 = sub i64 %471, %472
  %474 = ashr exact i64 %473, 3
  %475 = sub nsw i64 0, %474
  %476 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %464, i64 %475
  %477 = ptrtoint %"class.spvtools::opt::Instruction"** %476 to i64
  %478 = icmp sgt i64 %473, 0
  br i1 %478, label %479, label %483

479:                                              ; preds = %461
  %480 = bitcast %"class.spvtools::opt::Instruction"** %476 to i8*
  %481 = bitcast %"class.spvtools::opt::Instruction"** %470 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %480, i8* align 8 %481, i64 %473, i1 false) #15
  %482 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %225, align 8
  br label %483

483:                                              ; preds = %479, %461
  %484 = phi %"class.spvtools::opt::Instruction"** [ %470, %461 ], [ %482, %479 ]
  store i64 %477, i64* %89, align 8
  store i64 %469, i64* %92, align 8
  store i64 %466, i64* %224, align 8
  %485 = icmp eq %"class.spvtools::opt::Instruction"** %484, null
  br i1 %485, label %492, label %486

486:                                              ; preds = %483
  %487 = bitcast %"class.spvtools::opt::Instruction"** %484 to i8*
  call void @_ZdlPv(i8* %487) #14
  br label %492

488:                                              ; preds = %423
  %489 = load i32, i32* %22, align 4
  %490 = call zeroext i1 @_ZN8spvtools3opt17AggressiveDCEPass14IsVarOfStorageEjj(%"class.spvtools::opt::AggressiveDCEPass"* %0, i32 %489, i32 7)
  br i1 %490, label %492, label %491

491:                                              ; preds = %488
  call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Instruction"* %330)
  br label %492

492:                                              ; preds = %486, %483, %431, %488, %491
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %221) #15
  br label %673

493:                                              ; preds = %329
  %494 = load i64, i64* %159, align 8
  %495 = load i64, i64* %160, align 8
  %496 = sub i64 %494, %495
  %497 = icmp eq i64 %496, 0
  %498 = shl i64 %496, 9
  %499 = add i64 %498, -1
  %500 = select i1 %497, i64 0, i64 %499
  %501 = load i64, i64* %151, align 8
  %502 = load i64, i64* %152, align 8
  %503 = add i64 %502, %501
  %504 = icmp eq i64 %500, %503
  %505 = inttoptr i64 %495 to i8**
  %506 = inttoptr i64 %494 to i8**
  br i1 %504, label %507, label %513

507:                                              ; preds = %493
  call void @_ZNSt3__15dequeIbNS_9allocatorIbEEE19__add_back_capacityEv(%"class.std::__1::deque.1069"* nonnull %161) #15
  %508 = load i64, i64* %152, align 8
  %509 = load i64, i64* %151, align 8
  %510 = load i8**, i8*** %149, align 8
  %511 = load i8**, i8*** %150, align 8
  %512 = add i64 %509, %508
  br label %513

513:                                              ; preds = %507, %493
  %514 = phi i64 [ %512, %507 ], [ %503, %493 ]
  %515 = phi i8** [ %511, %507 ], [ %506, %493 ]
  %516 = phi i8** [ %510, %507 ], [ %505, %493 ]
  %517 = icmp eq i8** %515, %516
  br i1 %517, label %524, label %518

518:                                              ; preds = %513
  %519 = lshr i64 %514, 12
  %520 = getelementptr inbounds i8*, i8** %516, i64 %519
  %521 = load i8*, i8** %520, align 8
  %522 = and i64 %514, 4095
  %523 = getelementptr inbounds i8, i8* %521, i64 %522
  br label %524

524:                                              ; preds = %513, %518
  %525 = phi i8* [ %523, %518 ], [ null, %513 ]
  store i8 0, i8* %525, align 1
  %526 = load i64, i64* %152, align 8
  %527 = add i64 %526, 1
  store i64 %527, i64* %152, align 8
  %528 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %330, i64 0, i32 3
  %529 = load i8, i8* %528, align 4, !range !2
  %530 = icmp eq i8 %529, 0
  %531 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %330, i64 0, i32 4
  %532 = load i8, i8* %531, align 1, !range !2
  %533 = icmp eq i8 %532, 0
  %534 = select i1 %533, i32 1, i32 2
  %535 = xor i1 %533, true
  %536 = zext i1 %535 to i32
  %537 = select i1 %530, i32 %536, i32 %534
  %538 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %330, i32 %537) #15
  %539 = load i64, i64* %178, align 8
  %540 = load i64, i64* %180, align 8
  %541 = sub i64 %539, %540
  %542 = icmp eq i64 %541, 0
  %543 = shl i64 %541, 7
  %544 = add i64 %543, -1
  %545 = select i1 %542, i64 0, i64 %544
  %546 = load i64, i64* %157, align 8
  %547 = load i64, i64* %158, align 8
  %548 = add i64 %547, %546
  %549 = icmp eq i64 %545, %548
  %550 = inttoptr i64 %540 to i32**
  %551 = inttoptr i64 %539 to i32**
  br i1 %549, label %552, label %558

552:                                              ; preds = %524
  call void @_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv(%"class.std::__1::deque.1082"* nonnull %220) #15
  %553 = load i64, i64* %158, align 8
  %554 = load i64, i64* %157, align 8
  %555 = load i32**, i32*** %155, align 8
  %556 = load i32**, i32*** %156, align 8
  %557 = add i64 %554, %553
  br label %558

558:                                              ; preds = %552, %524
  %559 = phi i64 [ %557, %552 ], [ %548, %524 ]
  %560 = phi i32** [ %556, %552 ], [ %551, %524 ]
  %561 = phi i32** [ %555, %552 ], [ %550, %524 ]
  %562 = icmp eq i32** %560, %561
  br i1 %562, label %569, label %563

563:                                              ; preds = %558
  %564 = lshr i64 %559, 10
  %565 = getelementptr inbounds i32*, i32** %561, i64 %564
  %566 = load i32*, i32** %565, align 8
  %567 = and i64 %559, 1023
  %568 = getelementptr inbounds i32, i32* %566, i64 %567
  br label %569

569:                                              ; preds = %558, %563
  %570 = phi i32* [ %568, %563 ], [ null, %558 ]
  store i32 %538, i32* %570, align 4
  %571 = load i64, i64* %158, align 8
  %572 = add i64 %571, 1
  store i64 %572, i64* %158, align 8
  br label %673

573:                                              ; preds = %329
  %574 = load i64, i64* %159, align 8
  %575 = load i64, i64* %160, align 8
  %576 = sub i64 %574, %575
  %577 = icmp eq i64 %576, 0
  %578 = shl i64 %576, 9
  %579 = add i64 %578, -1
  %580 = select i1 %577, i64 0, i64 %579
  %581 = load i64, i64* %151, align 8
  %582 = load i64, i64* %152, align 8
  %583 = add i64 %582, %581
  %584 = icmp eq i64 %580, %583
  %585 = inttoptr i64 %575 to i8**
  %586 = inttoptr i64 %574 to i8**
  br i1 %584, label %587, label %593

587:                                              ; preds = %573
  call void @_ZNSt3__15dequeIbNS_9allocatorIbEEE19__add_back_capacityEv(%"class.std::__1::deque.1069"* nonnull %161) #15
  %588 = load i64, i64* %152, align 8
  %589 = load i64, i64* %151, align 8
  %590 = load i8**, i8*** %149, align 8
  %591 = load i8**, i8*** %150, align 8
  %592 = add i64 %589, %588
  br label %593

593:                                              ; preds = %587, %573
  %594 = phi i64 [ %592, %587 ], [ %583, %573 ]
  %595 = phi i8** [ %591, %587 ], [ %586, %573 ]
  %596 = phi i8** [ %590, %587 ], [ %585, %573 ]
  %597 = icmp eq i8** %595, %596
  br i1 %597, label %604, label %598

598:                                              ; preds = %593
  %599 = lshr i64 %594, 12
  %600 = getelementptr inbounds i8*, i8** %596, i64 %599
  %601 = load i8*, i8** %600, align 8
  %602 = and i64 %594, 4095
  %603 = getelementptr inbounds i8, i8* %601, i64 %602
  br label %604

604:                                              ; preds = %593, %598
  %605 = phi i8* [ %603, %598 ], [ null, %593 ]
  store i8 0, i8* %605, align 1
  %606 = load i64, i64* %152, align 8
  %607 = add i64 %606, 1
  store i64 %607, i64* %152, align 8
  %608 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %330, i64 0, i32 3
  %609 = load i8, i8* %608, align 4, !range !2
  %610 = icmp eq i8 %609, 0
  %611 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %330, i64 0, i32 4
  %612 = load i8, i8* %611, align 1, !range !2
  %613 = icmp eq i8 %612, 0
  %614 = select i1 %613, i32 1, i32 2
  %615 = xor i1 %613, true
  %616 = zext i1 %615 to i32
  %617 = select i1 %610, i32 %616, i32 %614
  %618 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %330, i32 %617) #15
  %619 = load i64, i64* %178, align 8
  %620 = load i64, i64* %180, align 8
  %621 = sub i64 %619, %620
  %622 = icmp eq i64 %621, 0
  %623 = shl i64 %621, 7
  %624 = add i64 %623, -1
  %625 = select i1 %622, i64 0, i64 %624
  %626 = load i64, i64* %157, align 8
  %627 = load i64, i64* %158, align 8
  %628 = add i64 %627, %626
  %629 = icmp eq i64 %625, %628
  %630 = inttoptr i64 %620 to i32**
  %631 = inttoptr i64 %619 to i32**
  br i1 %629, label %632, label %638

632:                                              ; preds = %604
  call void @_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv(%"class.std::__1::deque.1082"* nonnull %220) #15
  %633 = load i64, i64* %158, align 8
  %634 = load i64, i64* %157, align 8
  %635 = load i32**, i32*** %155, align 8
  %636 = load i32**, i32*** %156, align 8
  %637 = add i64 %634, %633
  br label %638

638:                                              ; preds = %632, %604
  %639 = phi i64 [ %637, %632 ], [ %628, %604 ]
  %640 = phi i32** [ %636, %632 ], [ %631, %604 ]
  %641 = phi i32** [ %635, %632 ], [ %630, %604 ]
  %642 = icmp eq i32** %640, %641
  br i1 %642, label %649, label %643

643:                                              ; preds = %638
  %644 = lshr i64 %639, 10
  %645 = getelementptr inbounds i32*, i32** %641, i64 %644
  %646 = load i32*, i32** %645, align 8
  %647 = and i64 %639, 1023
  %648 = getelementptr inbounds i32, i32* %646, i64 %647
  br label %649

649:                                              ; preds = %638, %643
  %650 = phi i32* [ %648, %643 ], [ null, %638 ]
  store i32 %618, i32* %650, align 4
  %651 = load i64, i64* %158, align 8
  %652 = add i64 %651, 1
  store i64 %652, i64* %158, align 8
  br label %673

653:                                              ; preds = %329, %329, %329, %329
  %654 = load i64, i64* %152, align 8
  %655 = load i64, i64* %151, align 8
  %656 = add i64 %654, -1
  %657 = add i64 %656, %655
  %658 = load i8**, i8*** %149, align 8
  %659 = lshr i64 %657, 12
  %660 = getelementptr inbounds i8*, i8** %658, i64 %659
  %661 = load i8*, i8** %660, align 8
  %662 = and i64 %657, 4095
  %663 = getelementptr inbounds i8, i8* %661, i64 %662
  %664 = load i8, i8* %663, align 1, !range !2
  %665 = icmp eq i8 %664, 0
  br i1 %665, label %673, label %666

666:                                              ; preds = %653
  call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Instruction"* %330)
  br label %673

667:                                              ; preds = %329
  %668 = call zeroext i1 @_ZNK8spvtools3opt11Instruction20IsOpcodeSafeToDeleteEv(%"class.spvtools::opt::Instruction"* %330) #15
  br i1 %668, label %670, label %669

669:                                              ; preds = %667
  call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Instruction"* %330)
  br label %670

670:                                              ; preds = %669, %667
  %671 = icmp eq i32 %333, 57
  br i1 %671, label %672, label %673

672:                                              ; preds = %670
  store i8 1, i8* %86, align 8
  br label %673

673:                                              ; preds = %653, %670, %672, %666, %649, %569, %492, %407
  %674 = inttoptr i64 %331 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %675 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %674, i64 0, i32 1
  %676 = bitcast %"class.spvtools::opt::Instruction"** %675 to i64*
  %677 = load i64, i64* %676, align 8
  %678 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %241, align 8
  %679 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %678, i64 0, i32 2, i32 0, i32 1
  %680 = inttoptr i64 %677 to %"class.spvtools::opt::Instruction"*
  %681 = icmp eq %"class.spvtools::opt::Instruction"* %679, %680
  br i1 %681, label %323, label %329

682:                                              ; preds = %227, %710
  %683 = phi %"class.spvtools::opt::Instruction"* [ %715, %710 ], [ %235, %227 ]
  %684 = phi i64 [ %714, %710 ], [ %234, %227 ]
  %685 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %683, i64 0, i32 3
  %686 = load i8, i8* %685, align 4, !range !2
  %687 = icmp eq i8 %686, 0
  %688 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %683, i64 0, i32 4
  %689 = load i8, i8* %688, align 1, !range !2
  %690 = icmp eq i8 %689, 0
  %691 = select i1 %690, i32 1, i32 2
  %692 = xor i1 %690, true
  %693 = zext i1 %692 to i32
  %694 = select i1 %687, i32 %693, i32 %691
  %695 = add nuw nsw i32 %694, 1
  %696 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %683, i32 %695) #15
  %697 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %37, align 8
  %698 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %697, i64 0, i32 4
  %699 = load i8, i8* %698, align 1, !range !2
  %700 = icmp eq i8 %699, 0
  br i1 %700, label %706, label %701

701:                                              ; preds = %682
  %702 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %697, i64 0, i32 3
  %703 = load i8, i8* %702, align 4, !range !2
  %704 = zext i8 %703 to i32
  %705 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %697, i32 %704) #15
  br label %706

706:                                              ; preds = %682, %701
  %707 = phi i32 [ %705, %701 ], [ 0, %682 ]
  %708 = icmp eq i32 %696, %707
  br i1 %708, label %709, label %710

709:                                              ; preds = %706
  store i8 1, i8* %87, align 1
  br label %722

710:                                              ; preds = %706
  %711 = inttoptr i64 %684 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %712 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %711, i64 0, i32 1
  %713 = bitcast %"class.spvtools::opt::Instruction"** %712 to i64*
  %714 = load i64, i64* %713, align 8
  %715 = inttoptr i64 %714 to %"class.spvtools::opt::Instruction"*
  %716 = icmp eq %"class.spvtools::opt::Instruction"* %232, %715
  br i1 %716, label %717, label %682

717:                                              ; preds = %710, %227
  %718 = load i8, i8* %87, align 1
  %719 = icmp eq i8 %718, 0
  br i1 %719, label %720, label %722

720:                                              ; preds = %717
  %721 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 3
  store i8 0, i8* %721, align 2
  br label %727

722:                                              ; preds = %717, %709
  %723 = load i8, i8* %86, align 8, !range !2
  %724 = icmp eq i8 %723, 0
  %725 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 3
  %726 = xor i8 %723, 1
  store i8 %726, i8* %725, align 2
  br i1 %724, label %737, label %727

727:                                              ; preds = %720, %722
  %728 = getelementptr inbounds %"class.std::__1::vector.1017", %"class.std::__1::vector.1017"* %88, i64 0, i32 0, i32 0
  %729 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %728, align 8
  %730 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %91, align 8
  %731 = icmp eq %"class.spvtools::opt::Instruction"** %729, %730
  br i1 %731, label %737, label %732

732:                                              ; preds = %727, %732
  %733 = phi %"class.spvtools::opt::Instruction"** [ %735, %732 ], [ %729, %727 ]
  %734 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %733, align 8
  call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Instruction"* %734)
  %735 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %733, i64 1
  %736 = icmp eq %"class.spvtools::opt::Instruction"** %735, %730
  br i1 %736, label %737, label %732

737:                                              ; preds = %732, %727, %722
  %738 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %739 = load i64, i64* %738, align 8
  %740 = icmp eq i64 %739, 0
  br i1 %740, label %1242, label %741

741:                                              ; preds = %737
  %742 = bitcast %"class.spvtools::opt::Instruction"** %23 to i8*
  %743 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %744 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %745 = bitcast %"class.std::__1::function.1092"* %24 to i8*
  %746 = getelementptr inbounds %"class.std::__1::function.1092", %"class.std::__1::function.1092"* %24, i64 0, i32 0, i32 1, i32 0
  %747 = getelementptr inbounds %"class.std::__1::function.1092", %"class.std::__1::function.1092"* %24, i64 0, i32 0, i32 2
  %748 = bitcast %"class.std::__1::function.1092"* %24 to %"class.spvtools::opt::Instruction"***
  %749 = getelementptr inbounds %"class.std::__1::function.1092", %"class.std::__1::function.1092"* %24, i64 0, i32 0, i32 0, i32 1
  %750 = bitcast [8 x i8]* %749 to %"class.spvtools::opt::AggressiveDCEPass"**
  %751 = bitcast %"class.std::__1::function.1179"* %12 to i8*
  %752 = ptrtoint %"class.std::__1::function.1092"* %24 to i64
  %753 = getelementptr inbounds %"class.std::__1::function.1179", %"class.std::__1::function.1179"* %12, i64 0, i32 0, i32 1, i32 0
  %754 = getelementptr inbounds %"class.std::__1::function.1179", %"class.std::__1::function.1179"* %12, i64 0, i32 0, i32 2
  %755 = bitcast %"class.std::__1::function.1179"* %12 to i64*
  %756 = getelementptr inbounds %"class.std::__1::function.1179", %"class.std::__1::function.1179"* %12, i64 0, i32 0, i32 0
  %757 = getelementptr inbounds %"class.std::__1::function.1179", %"class.std::__1::function.1179"* %12, i64 0, i32 0, i32 0, i32 0
  %758 = getelementptr inbounds %"class.std::__1::function.1092", %"class.std::__1::function.1092"* %24, i64 0, i32 0, i32 0, i32 0
  %759 = bitcast %"class.spvtools::opt::BasicBlock"** %25 to i8*
  %760 = bitcast %"class.spvtools::opt::Instruction"** %26 to i8*
  %761 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 5, i32 0
  %762 = bitcast %"class.std::__1::tuple.1275"* %10 to i8*
  %763 = getelementptr inbounds %"class.std::__1::tuple.1275", %"class.std::__1::tuple.1275"* %10, i64 0, i32 0, i32 0, i32 0
  %764 = getelementptr inbounds %"class.std::__1::tuple.1147", %"class.std::__1::tuple.1147"* %11, i64 0, i32 0
  %765 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 8, i32 0
  %766 = bitcast %"class.std::__1::tuple"* %8 to i8*
  %767 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 0, i32 0
  %768 = getelementptr inbounds %"class.std::__1::tuple.1147", %"class.std::__1::tuple.1147"* %9, i64 0, i32 0
  %769 = bitcast %"class.spvtools::opt::Instruction"** %27 to i8*
  %770 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 6, i32 0
  %771 = bitcast %"class.std::__1::tuple.1275"* %6 to i8*
  %772 = getelementptr inbounds %"class.std::__1::tuple.1275", %"class.std::__1::tuple.1275"* %6, i64 0, i32 0, i32 0, i32 0
  %773 = getelementptr inbounds %"class.std::__1::tuple.1147", %"class.std::__1::tuple.1147"* %7, i64 0, i32 0
  %774 = bitcast %"class.std::__1::tuple"* %4 to i8*
  %775 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  %776 = getelementptr inbounds %"class.std::__1::tuple.1147", %"class.std::__1::tuple.1147"* %5, i64 0, i32 0
  %777 = bitcast i32* %31 to i8*
  %778 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 0
  %779 = bitcast %"class.std::__1::function.1092"* %30 to i8*
  %780 = getelementptr inbounds %"class.std::__1::function.1092", %"class.std::__1::function.1092"* %30, i64 0, i32 0, i32 1, i32 0
  %781 = getelementptr inbounds %"class.std::__1::function.1092", %"class.std::__1::function.1092"* %30, i64 0, i32 0, i32 2
  %782 = bitcast %"class.std::__1::function.1092"* %30 to %"class.spvtools::opt::AggressiveDCEPass"**
  %783 = getelementptr inbounds %"class.std::__1::function.1092", %"class.std::__1::function.1092"* %30, i64 0, i32 0, i32 0, i32 1
  %784 = bitcast [8 x i8]* %783 to %"class.spvtools::opt::Function"**
  %785 = bitcast %"class.std::__1::function.1179"* %3 to i8*
  %786 = ptrtoint %"class.std::__1::function.1092"* %30 to i64
  %787 = getelementptr inbounds %"class.std::__1::function.1179", %"class.std::__1::function.1179"* %3, i64 0, i32 0, i32 1, i32 0
  %788 = getelementptr inbounds %"class.std::__1::function.1179", %"class.std::__1::function.1179"* %3, i64 0, i32 0, i32 2
  %789 = bitcast %"class.std::__1::function.1179"* %3 to i64*
  %790 = getelementptr inbounds %"class.std::__1::function.1179", %"class.std::__1::function.1179"* %3, i64 0, i32 0, i32 0
  %791 = getelementptr inbounds %"class.std::__1::function.1179", %"class.std::__1::function.1179"* %3, i64 0, i32 0, i32 0, i32 0
  %792 = getelementptr inbounds %"class.std::__1::function.1092", %"class.std::__1::function.1092"* %30, i64 0, i32 0, i32 0, i32 0
  %793 = bitcast i32* %29 to i8*
  %794 = bitcast i32* %28 to i8*
  %795 = bitcast %"class.std::__1::vector.1017"* %32 to i8*
  %796 = getelementptr inbounds %"class.std::__1::vector.1017", %"class.std::__1::vector.1017"* %32, i64 0, i32 0, i32 0
  %797 = getelementptr inbounds %"class.std::__1::vector.1017", %"class.std::__1::vector.1017"* %32, i64 0, i32 0, i32 1
  %798 = bitcast %"class.spvtools::opt::Instruction"**** %743 to i8***
  %799 = bitcast %"class.spvtools::opt::Instruction"*** %797 to i64*
  %800 = bitcast i64* %744 to <2 x i64>*
  %801 = bitcast i64* %744 to <2 x i64>*
  br label %802

802:                                              ; preds = %741, %1239
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %742) #15
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %23, align 8
  %803 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %743, align 8
  %804 = load i64, i64* %744, align 8
  %805 = lshr i64 %804, 9
  %806 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %803, i64 %805
  %807 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %806, align 8
  %808 = and i64 %804, 511
  %809 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %807, i64 %808
  %810 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %809, align 8
  store %"class.spvtools::opt::Instruction"* %810, %"class.spvtools::opt::Instruction"** %23, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %745) #15
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass13AggressiveDCEEPNS8_8FunctionEE3$_5S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %746, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass13AggressiveDCEEPNS5_8FunctionEE3$_5FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %747, align 8
  store %"class.spvtools::opt::Instruction"** %23, %"class.spvtools::opt::Instruction"*** %748, align 8
  store %"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::AggressiveDCEPass"** %750, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %751) #15
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %753, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %754, align 8
  store i64 %752, i64* %755, align 8
  %811 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %810, i64 0, i32 6, i32 0, i32 0
  %812 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %811, align 8
  %813 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %810, i64 0, i32 6, i32 0, i32 1
  %814 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %813, align 8
  %815 = icmp eq %"struct.spvtools::opt::Operand"* %812, %814
  br i1 %815, label %836, label %816

816:                                              ; preds = %802, %831
  %817 = phi %"struct.spvtools::opt::Operand"* [ %832, %831 ], [ %812, %802 ]
  %818 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %817, i64 0, i32 0
  %819 = load i32, i32* %818, align 8
  %820 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %819) #15
  br i1 %820, label %821, label %831

821:                                              ; preds = %816
  %822 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %817, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %823 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %822, align 8
  %824 = icmp eq %"class.std::__1::vector.3"* %823, null
  %825 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %823, i64 0, i32 0, i32 0
  %826 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %817, i64 0, i32 1, i32 2
  %827 = select i1 %824, i32** %826, i32** %825
  %828 = load i32*, i32** %827, align 8
  %829 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %753, align 8
  %830 = call zeroext i1 %829(%"union.std::__1::__function::__policy_storage"* nonnull %756, i32* %828) #15
  br i1 %830, label %831, label %834

831:                                              ; preds = %821, %816
  %832 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %817, i64 1
  %833 = icmp eq %"struct.spvtools::opt::Operand"* %832, %814
  br i1 %833, label %834, label %816

834:                                              ; preds = %831, %821
  %835 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %754, align 8
  br label %836

836:                                              ; preds = %834, %802
  %837 = phi %"struct.std::__1::__function::__policy"* [ %835, %834 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %802 ]
  %838 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %837, i64 0, i32 1
  %839 = load void (i8*)*, void (i8*)** %838, align 8
  %840 = icmp eq void (i8*)* %839, null
  br i1 %840, label %843, label %841

841:                                              ; preds = %836
  %842 = load i8*, i8** %757, align 8
  call void %839(i8* %842) #15
  br label %843

843:                                              ; preds = %836, %841
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %751) #15
  %844 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %747, align 8
  %845 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %844, i64 0, i32 1
  %846 = load void (i8*)*, void (i8*)** %845, align 8
  %847 = icmp eq void (i8*)* %846, null
  br i1 %847, label %850, label %848

848:                                              ; preds = %843
  %849 = load i8*, i8** %758, align 8
  call void %846(i8* %849) #15
  br label %850

850:                                              ; preds = %843, %848
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %745) #15
  %851 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %23, align 8
  %852 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %851, i64 0, i32 3
  %853 = load i8, i8* %852, align 4, !range !2
  %854 = icmp eq i8 %853, 0
  br i1 %854, label %900, label %855

855:                                              ; preds = %850
  %856 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %851, i32 0) #15
  %857 = icmp eq i32 %856, 0
  br i1 %857, label %900, label %858

858:                                              ; preds = %855
  %859 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %57, align 8
  %860 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %859, i64 0, i32 11
  %861 = load i32, i32* %860, align 8
  %862 = and i32 %861, 1
  %863 = icmp eq i32 %862, 0
  br i1 %863, label %864, label %888

864:                                              ; preds = %858
  %865 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %859, i64 0, i32 4, i32 0, i32 0, i32 0
  %866 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %865, align 8
  %867 = call i8* @_Znwm(i64 104) #14
  %868 = bitcast i8* %867 to %"class.spvtools::opt::analysis::DefUseManager"*
  %869 = getelementptr inbounds i8, i8* %867, i64 32
  %870 = bitcast i8* %869 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %867, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %870, align 4
  %871 = getelementptr inbounds i8, i8* %867, i64 48
  %872 = getelementptr inbounds i8, i8* %867, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %871, i8 0, i64 16, i1 false) #15
  %873 = bitcast i8* %872 to i8**
  store i8* %871, i8** %873, align 8
  %874 = getelementptr inbounds i8, i8* %867, i64 64
  %875 = getelementptr inbounds i8, i8* %867, i64 96
  %876 = bitcast i8* %875 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %874, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %876, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %868, %"class.spvtools::opt::Module"* %866) #15
  %877 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %859, i64 0, i32 6
  %878 = ptrtoint i8* %867 to i64
  %879 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %877, i64 0, i32 0, i32 0, i32 0
  %880 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %879, align 8
  %881 = bitcast %"class.std::__1::unique_ptr.62"* %877 to i64*
  store i64 %878, i64* %881, align 8
  %882 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %880, null
  br i1 %882, label %885, label %883

883:                                              ; preds = %864
  %884 = bitcast %"class.std::__1::unique_ptr.62"* %877 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %884, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %880) #15
  br label %885

885:                                              ; preds = %883, %864
  %886 = load i32, i32* %860, align 8
  %887 = or i32 %886, 1
  store i32 %887, i32* %860, align 8
  br label %888

888:                                              ; preds = %858, %885
  %889 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %859, i64 0, i32 6, i32 0, i32 0, i32 0
  %890 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %889, align 8
  %891 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %23, align 8
  %892 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %891, i64 0, i32 3
  %893 = load i8, i8* %892, align 4, !range !2
  %894 = icmp eq i8 %893, 0
  br i1 %894, label %897, label %895

895:                                              ; preds = %888
  %896 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %891, i32 0) #15
  br label %897

897:                                              ; preds = %888, %895
  %898 = phi i32 [ %896, %895 ], [ 0, %888 ]
  %899 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %890, i32 %898) #15
  call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Instruction"* %899)
  br label %900

900:                                              ; preds = %850, %855, %897
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %759) #15
  store %"class.spvtools::opt::BasicBlock"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::BasicBlock"*), %"class.spvtools::opt::BasicBlock"** %25, align 8
  %901 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %57, align 8
  %902 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %23, align 8
  %903 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %901, %"class.spvtools::opt::Instruction"* %902)
  store %"class.spvtools::opt::BasicBlock"* %903, %"class.spvtools::opt::BasicBlock"** %25, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %760) #15
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %26, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %762) #15
  store %"class.spvtools::opt::BasicBlock"** %25, %"class.spvtools::opt::BasicBlock"*** %763, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %764) #15
  %904 = call { %"struct.std::__1::__hash_node_base.946"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.942"* %761, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %25, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1275"* nonnull dereferenceable(8) %10, %"class.std::__1::tuple.1147"* nonnull dereferenceable(1) %11) #15
  %905 = extractvalue { %"struct.std::__1::__hash_node_base.946"*, i8 } %904, 0
  %906 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946", %"struct.std::__1::__hash_node_base.946"* %905, i64 3
  %907 = bitcast %"struct.std::__1::__hash_node_base.946"* %906 to %"class.spvtools::opt::Instruction"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %764) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %762) #15
  %908 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %907, align 8
  store %"class.spvtools::opt::Instruction"* %908, %"class.spvtools::opt::Instruction"** %26, align 8
  %909 = icmp eq %"class.spvtools::opt::Instruction"* %908, null
  br i1 %909, label %916, label %910

910:                                              ; preds = %900
  call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Instruction"* nonnull %908)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %766) #15
  store %"class.spvtools::opt::Instruction"** %26, %"class.spvtools::opt::Instruction"*** %767, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %768) #15
  %911 = call { %"struct.std::__1::__hash_node_base.998"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.994"* %765, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %26, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.1147"* nonnull dereferenceable(1) %9) #15
  %912 = extractvalue { %"struct.std::__1::__hash_node_base.998"*, i8 } %911, 0
  %913 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998", %"struct.std::__1::__hash_node_base.998"* %912, i64 3
  %914 = bitcast %"struct.std::__1::__hash_node_base.998"* %913 to %"class.spvtools::opt::Instruction"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %768) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %766) #15
  %915 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %914, align 8
  call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Instruction"* %915)
  br label %916

916:                                              ; preds = %900, %910
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %769) #15
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %771) #15
  store %"class.spvtools::opt::BasicBlock"** %25, %"class.spvtools::opt::BasicBlock"*** %772, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %773) #15
  %917 = call { %"struct.std::__1::__hash_node_base.946"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.942"* %770, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %25, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1275"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.1147"* nonnull dereferenceable(1) %7) #15
  %918 = extractvalue { %"struct.std::__1::__hash_node_base.946"*, i8 } %917, 0
  %919 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946", %"struct.std::__1::__hash_node_base.946"* %918, i64 3
  %920 = bitcast %"struct.std::__1::__hash_node_base.946"* %919 to %"class.spvtools::opt::Instruction"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %773) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %771) #15
  %921 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %920, align 8
  store %"class.spvtools::opt::Instruction"* %921, %"class.spvtools::opt::Instruction"** %27, align 8
  %922 = icmp eq %"class.spvtools::opt::Instruction"* %921, null
  br i1 %922, label %929, label %923

923:                                              ; preds = %916
  call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Instruction"* nonnull %921)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %774) #15
  store %"class.spvtools::opt::Instruction"** %27, %"class.spvtools::opt::Instruction"*** %775, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %776) #15
  %924 = call { %"struct.std::__1::__hash_node_base.998"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.994"* %765, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %27, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.1147"* nonnull dereferenceable(1) %5) #15
  %925 = extractvalue { %"struct.std::__1::__hash_node_base.998"*, i8 } %924, 0
  %926 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998", %"struct.std::__1::__hash_node_base.998"* %925, i64 3
  %927 = bitcast %"struct.std::__1::__hash_node_base.998"* %926 to %"class.spvtools::opt::Instruction"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %776) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %774) #15
  %928 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %927, align 8
  call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Instruction"* %928)
  br label %929

929:                                              ; preds = %916, %923
  %930 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %23, align 8
  %931 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %930, i64 0, i32 2
  %932 = load i32, i32* %931, align 8
  %933 = icmp eq i32 %932, 61
  br i1 %933, label %937, label %934

934:                                              ; preds = %929
  %935 = call zeroext i1 @_Z25spvOpcodeIsAtomicWithLoad6SpvOp_(i32 %932) #15
  %936 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %23, align 8
  br i1 %935, label %937, label %944

937:                                              ; preds = %934, %929
  %938 = phi %"class.spvtools::opt::Instruction"* [ %930, %929 ], [ %936, %934 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %794) #15
  store i32 -1431655766, i32* %28, align 4
  %939 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt7MemPass6GetPtrEPNS0_11InstructionEPj(%"class.spvtools::opt::MemPass"* %778, %"class.spvtools::opt::Instruction"* %938, i32* nonnull %28) #15
  %940 = load i32, i32* %28, align 4
  %941 = icmp eq i32 %940, 0
  br i1 %941, label %943, label %942

942:                                              ; preds = %937
  call void @_ZN8spvtools3opt17AggressiveDCEPass11ProcessLoadEPNS0_8FunctionEj(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Function"* %1, i32 %940)
  br label %943

943:                                              ; preds = %937, %942
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %794) #15
  br label %1066

944:                                              ; preds = %934
  %945 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %936, i64 0, i32 2
  %946 = load i32, i32* %945, align 8
  %947 = add i32 %946, -63
  %948 = icmp ult i32 %947, 2
  br i1 %948, label %949, label %967

949:                                              ; preds = %944
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %793) #15
  store i32 -1431655766, i32* %29, align 4
  %950 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %936, i64 0, i32 3
  %951 = load i8, i8* %950, align 4, !range !2
  %952 = icmp eq i8 %951, 0
  %953 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %936, i64 0, i32 4
  %954 = load i8, i8* %953, align 1, !range !2
  %955 = icmp eq i8 %954, 0
  %956 = select i1 %955, i32 1, i32 2
  %957 = xor i1 %955, true
  %958 = zext i1 %957 to i32
  %959 = select i1 %952, i32 %958, i32 %956
  %960 = add nuw nsw i32 %959, 1
  %961 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %936, i32 %960) #15
  %962 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt7MemPass6GetPtrEjPj(%"class.spvtools::opt::MemPass"* %778, i32 %961, i32* nonnull %29) #15
  %963 = load i32, i32* %29, align 4
  %964 = icmp eq i32 %963, 0
  br i1 %964, label %966, label %965

965:                                              ; preds = %949
  call void @_ZN8spvtools3opt17AggressiveDCEPass11ProcessLoadEPNS0_8FunctionEj(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Function"* %1, i32 %963)
  br label %966

966:                                              ; preds = %949, %965
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %793) #15
  br label %1066

967:                                              ; preds = %944
  %968 = call i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"* %936) #15
  %969 = icmp eq i32 %968, 28
  %970 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %23, align 8
  br i1 %969, label %971, label %973

971:                                              ; preds = %967
  %972 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %970, i32 5) #15
  call void @_ZN8spvtools3opt17AggressiveDCEPass11ProcessLoadEPNS0_8FunctionEj(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Function"* %1, i32 %972)
  br label %1066

973:                                              ; preds = %967
  %974 = call i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"* %970) #15
  %975 = icmp eq i32 %974, 29
  br i1 %975, label %976, label %1003

976:                                              ; preds = %973
  %977 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %57, align 8
  %978 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %977, i64 0, i32 11
  %979 = load i32, i32* %978, align 8
  %980 = and i32 %979, 65536
  %981 = icmp eq i32 %980, 0
  br i1 %981, label %982, label %996

982:                                              ; preds = %976
  %983 = call i8* @_Znwm(i64 232) #14
  %984 = bitcast i8* %983 to %"class.spvtools::opt::analysis::DebugInfoManager"*
  call void @_ZN8spvtools3opt8analysis16DebugInfoManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %984, %"class.spvtools::opt::IRContext"* %977) #15
  %985 = ptrtoint i8* %983 to i64
  %986 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %977, i64 0, i32 21
  %987 = getelementptr inbounds %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.593"* %986, i64 0, i32 0, i32 0, i32 0
  %988 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %987, align 8
  %989 = bitcast %"class.std::__1::unique_ptr.593"* %986 to i64*
  store i64 %985, i64* %989, align 8
  %990 = icmp eq %"class.spvtools::opt::analysis::DebugInfoManager"* %988, null
  br i1 %990, label %993, label %991

991:                                              ; preds = %982
  call void @_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %988) #15
  %992 = bitcast %"class.spvtools::opt::analysis::DebugInfoManager"* %988 to i8*
  call void @_ZdlPv(i8* %992) #14
  br label %993

993:                                              ; preds = %991, %982
  %994 = load i32, i32* %978, align 8
  %995 = or i32 %994, 65536
  store i32 %995, i32* %978, align 8
  br label %996

996:                                              ; preds = %976, %993
  %997 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %977, i64 0, i32 21, i32 0, i32 0, i32 0
  %998 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %997, align 8
  %999 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %23, align 8
  %1000 = call i32 @_ZN8spvtools3opt8analysis16DebugInfoManager39GetVariableIdOfDebugValueUsedForDeclareEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DebugInfoManager"* %998, %"class.spvtools::opt::Instruction"* %999) #15
  %1001 = icmp eq i32 %1000, 0
  br i1 %1001, label %1066, label %1002

1002:                                             ; preds = %996
  call void @_ZN8spvtools3opt17AggressiveDCEPass11ProcessLoadEPNS0_8FunctionEj(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Function"* %1, i32 %1000)
  br label %1066

1003:                                             ; preds = %973
  %1004 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %23, align 8
  %1005 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1004, i64 0, i32 2
  %1006 = load i32, i32* %1005, align 8
  switch i32 %1006, label %1066 [
    i32 246, label %1007
    i32 247, label %1007
    i32 57, label %1008
    i32 55, label %1049
    i32 60, label %1060
  ]

1007:                                             ; preds = %1003, %1003
  call void @_ZN8spvtools3opt17AggressiveDCEPass31AddBreaksAndContinuesToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Instruction"* %1004)
  br label %1066

1008:                                             ; preds = %1003
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %779) #15
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass13AggressiveDCEEPNS8_8FunctionEE3$_6S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %780, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass13AggressiveDCEEPNS5_8FunctionEE3$_6FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %781, align 8
  store %"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::AggressiveDCEPass"** %782, align 8
  store %"class.spvtools::opt::Function"* %1, %"class.spvtools::opt::Function"** %784, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %785) #15
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %787, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %788, align 8
  store i64 %786, i64* %789, align 8
  %1009 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1004, i64 0, i32 6, i32 0, i32 0
  %1010 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %1009, align 8
  %1011 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1004, i64 0, i32 6, i32 0, i32 1
  %1012 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %1011, align 8
  %1013 = icmp eq %"struct.spvtools::opt::Operand"* %1010, %1012
  br i1 %1013, label %1034, label %1014

1014:                                             ; preds = %1008, %1029
  %1015 = phi %"struct.spvtools::opt::Operand"* [ %1030, %1029 ], [ %1010, %1008 ]
  %1016 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1015, i64 0, i32 0
  %1017 = load i32, i32* %1016, align 8
  %1018 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %1017) #15
  br i1 %1018, label %1019, label %1029

1019:                                             ; preds = %1014
  %1020 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1015, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %1021 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %1020, align 8
  %1022 = icmp eq %"class.std::__1::vector.3"* %1021, null
  %1023 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1021, i64 0, i32 0, i32 0
  %1024 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1015, i64 0, i32 1, i32 2
  %1025 = select i1 %1022, i32** %1024, i32** %1023
  %1026 = load i32*, i32** %1025, align 8
  %1027 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %787, align 8
  %1028 = call zeroext i1 %1027(%"union.std::__1::__function::__policy_storage"* nonnull %790, i32* %1026) #15
  br i1 %1028, label %1029, label %1032

1029:                                             ; preds = %1019, %1014
  %1030 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1015, i64 1
  %1031 = icmp eq %"struct.spvtools::opt::Operand"* %1030, %1012
  br i1 %1031, label %1032, label %1014

1032:                                             ; preds = %1029, %1019
  %1033 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %788, align 8
  br label %1034

1034:                                             ; preds = %1032, %1008
  %1035 = phi %"struct.std::__1::__function::__policy"* [ %1033, %1032 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %1008 ]
  %1036 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1035, i64 0, i32 1
  %1037 = load void (i8*)*, void (i8*)** %1036, align 8
  %1038 = icmp eq void (i8*)* %1037, null
  br i1 %1038, label %1041, label %1039

1039:                                             ; preds = %1034
  %1040 = load i8*, i8** %791, align 8
  call void %1037(i8* %1040) #15
  br label %1041

1041:                                             ; preds = %1034, %1039
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %785) #15
  %1042 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %781, align 8
  %1043 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1042, i64 0, i32 1
  %1044 = load void (i8*)*, void (i8*)** %1043, align 8
  %1045 = icmp eq void (i8*)* %1044, null
  br i1 %1045, label %1048, label %1046

1046:                                             ; preds = %1041
  %1047 = load i8*, i8** %792, align 8
  call void %1044(i8* %1047) #15
  br label %1048

1048:                                             ; preds = %1041, %1046
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %779) #15
  br label %1066

1049:                                             ; preds = %1003
  %1050 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1004, i64 0, i32 4
  %1051 = load i8, i8* %1050, align 1, !range !2
  %1052 = icmp eq i8 %1051, 0
  br i1 %1052, label %1058, label %1053

1053:                                             ; preds = %1049
  %1054 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1004, i64 0, i32 3
  %1055 = load i8, i8* %1054, align 4, !range !2
  %1056 = zext i8 %1055 to i32
  %1057 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1004, i32 %1056) #15
  br label %1058

1058:                                             ; preds = %1049, %1053
  %1059 = phi i32 [ %1057, %1053 ], [ 0, %1049 ]
  call void @_ZN8spvtools3opt17AggressiveDCEPass11ProcessLoadEPNS0_8FunctionEj(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Function"* %1, i32 %1059)
  br label %1066

1060:                                             ; preds = %1003
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %777) #15
  store i32 -1431655766, i32* %31, align 4
  %1061 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt7MemPass6GetPtrEPNS0_11InstructionEPj(%"class.spvtools::opt::MemPass"* %778, %"class.spvtools::opt::Instruction"* %1004, i32* nonnull %31) #15
  %1062 = load i32, i32* %31, align 4
  %1063 = icmp eq i32 %1062, 0
  br i1 %1063, label %1065, label %1064

1064:                                             ; preds = %1060
  call void @_ZN8spvtools3opt17AggressiveDCEPass11ProcessLoadEPNS0_8FunctionEj(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Function"* %1, i32 %1062)
  br label %1065

1065:                                             ; preds = %1060, %1064
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %777) #15
  br label %1066

1066:                                             ; preds = %1003, %1002, %996, %966, %1048, %1065, %1058, %1007, %971, %943
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %795) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %795, i8 -86, i64 24, i1 false)
  %1067 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %57, align 8
  %1068 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1067, i64 0, i32 11
  %1069 = load i32, i32* %1068, align 8
  %1070 = and i32 %1069, 4
  %1071 = icmp eq i32 %1070, 0
  br i1 %1071, label %1072, label %1093

1072:                                             ; preds = %1066
  %1073 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1067, i64 0, i32 4, i32 0, i32 0, i32 0
  %1074 = bitcast %"class.spvtools::opt::Module"** %1073 to i64*
  %1075 = load i64, i64* %1074, align 8
  %1076 = call i8* @_Znwm(i64 48) #14
  %1077 = bitcast i8* %1076 to %"class.spvtools::opt::analysis::DecorationManager"*
  %1078 = getelementptr inbounds i8, i8* %1076, i64 32
  %1079 = bitcast i8* %1078 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1076, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %1079, align 4
  %1080 = getelementptr inbounds i8, i8* %1076, i64 40
  %1081 = bitcast i8* %1080 to i64*
  store i64 %1075, i64* %1081, align 8
  call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %1077) #15
  %1082 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1067, i64 0, i32 7
  %1083 = ptrtoint i8* %1076 to i64
  %1084 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %1082, i64 0, i32 0, i32 0, i32 0
  %1085 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %1084, align 8
  %1086 = bitcast %"class.std::__1::unique_ptr.122"* %1082 to i64*
  store i64 %1083, i64* %1086, align 8
  %1087 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %1085, null
  br i1 %1087, label %1090, label %1088

1088:                                             ; preds = %1072
  %1089 = bitcast %"class.std::__1::unique_ptr.122"* %1082 to %"struct.std::__1::default_delete.150"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"* %1089, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %1085) #15
  br label %1090

1090:                                             ; preds = %1088, %1072
  %1091 = load i32, i32* %1068, align 8
  %1092 = or i32 %1091, 4
  store i32 %1092, i32* %1068, align 8
  br label %1093

1093:                                             ; preds = %1066, %1090
  %1094 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1067, i64 0, i32 7, i32 0, i32 0, i32 0
  %1095 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %1094, align 8
  %1096 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %23, align 8
  %1097 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1096, i64 0, i32 4
  %1098 = load i8, i8* %1097, align 1, !range !2
  %1099 = icmp eq i8 %1098, 0
  br i1 %1099, label %1105, label %1100

1100:                                             ; preds = %1093
  %1101 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1096, i64 0, i32 3
  %1102 = load i8, i8* %1101, align 4, !range !2
  %1103 = zext i8 %1102 to i32
  %1104 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1096, i32 %1103) #15
  br label %1105

1105:                                             ; preds = %1093, %1100
  %1106 = phi i32 [ %1104, %1100 ], [ 0, %1093 ]
  call void @_ZN8spvtools3opt8analysis17DecorationManager17GetDecorationsForEjb(%"class.std::__1::vector.1017"* nonnull sret %32, %"class.spvtools::opt::analysis::DecorationManager"* %1095, i32 %1106, i1 zeroext false) #15
  %1107 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %796, align 8
  %1108 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %797, align 8
  %1109 = icmp eq %"class.spvtools::opt::Instruction"** %1107, %1108
  br i1 %1109, label %1110, label %1115

1110:                                             ; preds = %1136, %1105
  %1111 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %23, align 8
  %1112 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1111, i64 0, i32 8, i32 0
  %1113 = load i32, i32* %1112, align 4
  %1114 = icmp eq i32 %1113, 0
  br i1 %1114, label %1178, label %1139

1115:                                             ; preds = %1105, %1136
  %1116 = phi %"class.spvtools::opt::Instruction"** [ %1137, %1136 ], [ %1107, %1105 ]
  %1117 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1116, align 8
  %1118 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1117, i64 0, i32 2
  %1119 = load i32, i32* %1118, align 8
  %1120 = icmp eq i32 %1119, 332
  br i1 %1120, label %1121, label %1136

1121:                                             ; preds = %1115
  %1122 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1117, i64 0, i32 3
  %1123 = load i8, i8* %1122, align 4, !range !2
  %1124 = icmp eq i8 %1123, 0
  %1125 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1117, i64 0, i32 4
  %1126 = load i8, i8* %1125, align 1, !range !2
  %1127 = icmp eq i8 %1126, 0
  %1128 = select i1 %1127, i32 1, i32 2
  %1129 = xor i1 %1127, true
  %1130 = zext i1 %1129 to i32
  %1131 = select i1 %1124, i32 %1130, i32 %1128
  %1132 = add nuw nsw i32 %1131, 1
  %1133 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1117, i32 %1132) #15
  %1134 = icmp eq i32 %1133, 5634
  br i1 %1134, label %1136, label %1135

1135:                                             ; preds = %1121
  call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Instruction"* %1117)
  br label %1136

1136:                                             ; preds = %1121, %1115, %1135
  %1137 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1116, i64 1
  %1138 = icmp eq %"class.spvtools::opt::Instruction"** %1137, %1108
  br i1 %1138, label %1110, label %1115

1139:                                             ; preds = %1110
  %1140 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %57, align 8
  %1141 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1140, i64 0, i32 11
  %1142 = load i32, i32* %1141, align 8
  %1143 = and i32 %1142, 1
  %1144 = icmp eq i32 %1143, 0
  br i1 %1144, label %1145, label %1172

1145:                                             ; preds = %1139
  %1146 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1140, i64 0, i32 4, i32 0, i32 0, i32 0
  %1147 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %1146, align 8
  %1148 = call i8* @_Znwm(i64 104) #14
  %1149 = bitcast i8* %1148 to %"class.spvtools::opt::analysis::DefUseManager"*
  %1150 = getelementptr inbounds i8, i8* %1148, i64 32
  %1151 = bitcast i8* %1150 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1148, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %1151, align 4
  %1152 = getelementptr inbounds i8, i8* %1148, i64 48
  %1153 = getelementptr inbounds i8, i8* %1148, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %1152, i8 0, i64 16, i1 false) #15
  %1154 = bitcast i8* %1153 to i8**
  store i8* %1152, i8** %1154, align 8
  %1155 = getelementptr inbounds i8, i8* %1148, i64 64
  %1156 = getelementptr inbounds i8, i8* %1148, i64 96
  %1157 = bitcast i8* %1156 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1155, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %1157, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %1149, %"class.spvtools::opt::Module"* %1147) #15
  %1158 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1140, i64 0, i32 6
  %1159 = ptrtoint i8* %1148 to i64
  %1160 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %1158, i64 0, i32 0, i32 0, i32 0
  %1161 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %1160, align 8
  %1162 = bitcast %"class.std::__1::unique_ptr.62"* %1158 to i64*
  store i64 %1159, i64* %1162, align 8
  %1163 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1161, null
  br i1 %1163, label %1166, label %1164

1164:                                             ; preds = %1145
  %1165 = bitcast %"class.std::__1::unique_ptr.62"* %1158 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %1165, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %1161) #15
  br label %1166

1166:                                             ; preds = %1164, %1145
  %1167 = load i32, i32* %1141, align 8
  %1168 = or i32 %1167, 1
  store i32 %1168, i32* %1141, align 8
  %1169 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %23, align 8
  %1170 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1169, i64 0, i32 8, i32 0
  %1171 = load i32, i32* %1170, align 4
  br label %1172

1172:                                             ; preds = %1139, %1166
  %1173 = phi i32 [ %1113, %1139 ], [ %1171, %1166 ]
  %1174 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1140, i64 0, i32 6, i32 0, i32 0, i32 0
  %1175 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %1174, align 8
  %1176 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %1175, i32 %1173) #15
  call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Instruction"* %1176)
  %1177 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %23, align 8
  br label %1178

1178:                                             ; preds = %1110, %1172
  %1179 = phi %"class.spvtools::opt::Instruction"* [ %1111, %1110 ], [ %1177, %1172 ]
  %1180 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1179, i64 0, i32 8, i32 1
  %1181 = load i32, i32* %1180, align 4
  %1182 = icmp eq i32 %1181, 0
  br i1 %1182, label %1221, label %1183

1183:                                             ; preds = %1178
  %1184 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %57, align 8
  %1185 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1184, i64 0, i32 11
  %1186 = load i32, i32* %1185, align 8
  %1187 = and i32 %1186, 1
  %1188 = icmp eq i32 %1187, 0
  br i1 %1188, label %1189, label %1216

1189:                                             ; preds = %1183
  %1190 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1184, i64 0, i32 4, i32 0, i32 0, i32 0
  %1191 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %1190, align 8
  %1192 = call i8* @_Znwm(i64 104) #14
  %1193 = bitcast i8* %1192 to %"class.spvtools::opt::analysis::DefUseManager"*
  %1194 = getelementptr inbounds i8, i8* %1192, i64 32
  %1195 = bitcast i8* %1194 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1192, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %1195, align 4
  %1196 = getelementptr inbounds i8, i8* %1192, i64 48
  %1197 = getelementptr inbounds i8, i8* %1192, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %1196, i8 0, i64 16, i1 false) #15
  %1198 = bitcast i8* %1197 to i8**
  store i8* %1196, i8** %1198, align 8
  %1199 = getelementptr inbounds i8, i8* %1192, i64 64
  %1200 = getelementptr inbounds i8, i8* %1192, i64 96
  %1201 = bitcast i8* %1200 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1199, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %1201, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %1193, %"class.spvtools::opt::Module"* %1191) #15
  %1202 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1184, i64 0, i32 6
  %1203 = ptrtoint i8* %1192 to i64
  %1204 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %1202, i64 0, i32 0, i32 0, i32 0
  %1205 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %1204, align 8
  %1206 = bitcast %"class.std::__1::unique_ptr.62"* %1202 to i64*
  store i64 %1203, i64* %1206, align 8
  %1207 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1205, null
  br i1 %1207, label %1210, label %1208

1208:                                             ; preds = %1189
  %1209 = bitcast %"class.std::__1::unique_ptr.62"* %1202 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %1209, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %1205) #15
  br label %1210

1210:                                             ; preds = %1208, %1189
  %1211 = load i32, i32* %1185, align 8
  %1212 = or i32 %1211, 1
  store i32 %1212, i32* %1185, align 8
  %1213 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %23, align 8
  %1214 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1213, i64 0, i32 8, i32 1
  %1215 = load i32, i32* %1214, align 4
  br label %1216

1216:                                             ; preds = %1183, %1210
  %1217 = phi i32 [ %1181, %1183 ], [ %1215, %1210 ]
  %1218 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1184, i64 0, i32 6, i32 0, i32 0, i32 0
  %1219 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %1218, align 8
  %1220 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %1219, i32 %1217) #15
  call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Instruction"* %1220)
  br label %1221

1221:                                             ; preds = %1178, %1216
  %1222 = load <2 x i64>, <2 x i64>* %800, align 8
  %1223 = add <2 x i64> %1222, <i64 1, i64 -1>
  store <2 x i64> %1223, <2 x i64>* %801, align 8
  %1224 = extractelement <2 x i64> %1223, i32 0
  %1225 = icmp ult i64 %1224, 1024
  br i1 %1225, label %1233, label %1226

1226:                                             ; preds = %1221
  %1227 = load i8**, i8*** %798, align 8
  %1228 = load i8*, i8** %1227, align 8
  call void @_ZdlPv(i8* %1228) #14
  %1229 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %743, align 8
  %1230 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %1229, i64 1
  store %"class.spvtools::opt::Instruction"*** %1230, %"class.spvtools::opt::Instruction"**** %743, align 8
  %1231 = load i64, i64* %744, align 8
  %1232 = add i64 %1231, -512
  store i64 %1232, i64* %744, align 8
  br label %1233

1233:                                             ; preds = %1221, %1226
  %1234 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %796, align 8
  %1235 = icmp eq %"class.spvtools::opt::Instruction"** %1234, null
  br i1 %1235, label %1239, label %1236

1236:                                             ; preds = %1233
  %1237 = ptrtoint %"class.spvtools::opt::Instruction"** %1234 to i64
  store i64 %1237, i64* %799, align 8
  %1238 = bitcast %"class.spvtools::opt::Instruction"** %1234 to i8*
  call void @_ZdlPv(i8* %1238) #14
  br label %1239

1239:                                             ; preds = %1233, %1236
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %795) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %769) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %760) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %759) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %742) #15
  %1240 = load i64, i64* %738, align 8
  %1241 = icmp eq i64 %1240, 0
  br i1 %1241, label %1242, label %802

1242:                                             ; preds = %1239, %737
  %1243 = load i64, i64* %215, align 8
  %1244 = inttoptr i64 %1243 to %"struct.std::__1::__list_node_base"*
  %1245 = icmp eq %"struct.std::__1::__list_node_base"* %56, %1244
  br i1 %1245, label %1298, label %1246

1246:                                             ; preds = %1242
  %1247 = bitcast i32* %33 to i8*
  %1248 = bitcast %"class.std::__1::function.1047"* %34 to i8*
  %1249 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %34, i64 0, i32 0, i32 1, i32 0
  %1250 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %34, i64 0, i32 0, i32 2
  %1251 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %34, i64 0, i32 0, i32 0, i32 0
  %1252 = bitcast %"class.std::__1::function.1218"* %13 to i8*
  %1253 = ptrtoint %"class.std::__1::function.1047"* %34 to i64
  %1254 = getelementptr inbounds %"class.std::__1::function.1218", %"class.std::__1::function.1218"* %13, i64 0, i32 0, i32 1, i32 0
  %1255 = getelementptr inbounds %"class.std::__1::function.1218", %"class.std::__1::function.1218"* %13, i64 0, i32 0, i32 2
  %1256 = bitcast %"class.std::__1::function.1218"* %13 to i64*
  %1257 = getelementptr inbounds %"class.std::__1::function.1218", %"class.std::__1::function.1218"* %13, i64 0, i32 0, i32 0
  %1258 = getelementptr inbounds %"class.std::__1::function.1218", %"class.std::__1::function.1218"* %13, i64 0, i32 0, i32 0, i32 0
  %1259 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 0
  %1260 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 10
  %1261 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %1260, i64 0, i32 0
  %1262 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %1263 = bitcast i64** %1262 to i64*
  %1264 = bitcast %"class.spvtools::utils::BitVector"* %1260 to i64*
  %1265 = bitcast i64* %14 to i8*
  %1266 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %1260, i64 0, i32 0, i32 0, i32 0
  %1267 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %35 to i8*
  %1268 = bitcast %"class.spvtools::utils::SmallVector"* %36 to i8*
  %1269 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %36, i64 0, i32 0
  %1270 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %36, i64 0, i32 1
  %1271 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %36, i64 0, i32 2
  %1272 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %36, i64 0, i32 3, i64 0
  %1273 = bitcast i32** %1271 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %1274 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %36, i64 0, i32 4
  %1275 = bitcast %"class.std::__1::unique_ptr.0"* %1274 to i64*
  %1276 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %1272 to i32*
  %1277 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %35, i64 0, i64 0, i32 0
  %1278 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %35, i64 0, i64 0, i32 1
  %1279 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1278, i64 0, i32 0
  %1280 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %35, i64 0, i64 0, i32 1, i32 1
  %1281 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %35, i64 0, i64 0, i32 1, i32 2
  %1282 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %35, i64 0, i64 0, i32 1, i32 3, i64 0
  %1283 = bitcast i32** %1281 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %1284 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %35, i64 0, i64 0, i32 1, i32 4
  %1285 = bitcast %"class.std::__1::unique_ptr.0"* %1284 to i64*
  %1286 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %36, i64 0, i32 4, i32 0, i32 0, i32 0
  %1287 = bitcast i64* %15 to i8*
  %1288 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %35, i64 0, i64 0, i32 1, i32 0
  %1289 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %35, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %1290 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 12
  %1291 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 12, i32 0, i32 1
  %1292 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %1293 = bitcast %"class.spvtools::opt::Instruction"*** %1291 to i64*
  %1294 = bitcast %"class.spvtools::opt::Instruction"*** %1291 to i64*
  %1295 = bitcast %"class.std::__1::vector.1017"* %1290 to i64*
  %1296 = bitcast %"class.spvtools::opt::Instruction"*** %1292 to i64*
  %1297 = getelementptr inbounds %"class.std::__1::vector.1017", %"class.std::__1::vector.1017"* %1290, i64 0, i32 0, i32 0
  br label %1499

1298:                                             ; preds = %2001, %1242
  %1299 = load i8, i8* %18, align 1, !range !2
  %1300 = icmp ne i8 %1299, 0
  %1301 = load i32**, i32*** %155, align 8
  %1302 = load i64, i64* %157, align 8
  %1303 = lshr i64 %1302, 10
  %1304 = getelementptr inbounds i32*, i32** %1301, i64 %1303
  %1305 = load i32**, i32*** %156, align 8
  %1306 = icmp eq i32** %1305, %1301
  %1307 = ptrtoint i32** %1305 to i64
  %1308 = ptrtoint i32** %1301 to i64
  br i1 %1306, label %1321, label %1309

1309:                                             ; preds = %1298
  %1310 = load i32*, i32** %1304, align 8
  %1311 = and i64 %1302, 1023
  %1312 = getelementptr inbounds i32, i32* %1310, i64 %1311
  %1313 = load i64, i64* %158, align 8
  %1314 = add i64 %1313, %1302
  %1315 = lshr i64 %1314, 10
  %1316 = getelementptr inbounds i32*, i32** %1301, i64 %1315
  %1317 = load i32*, i32** %1316, align 8
  %1318 = and i64 %1314, 1023
  %1319 = getelementptr inbounds i32, i32* %1317, i64 %1318
  %1320 = icmp eq i32* %1319, %1312
  br i1 %1320, label %1321, label %1325

1321:                                             ; preds = %1338, %1298, %1309
  store i64 0, i64* %158, align 8
  %1322 = sub i64 %1307, %1308
  %1323 = ashr exact i64 %1322, 3
  %1324 = icmp ugt i64 %1323, 2
  br i1 %1324, label %1343, label %1356

1325:                                             ; preds = %1309, %1338
  %1326 = phi i32* [ %1341, %1338 ], [ %1312, %1309 ]
  %1327 = phi i32** [ %1340, %1338 ], [ %1304, %1309 ]
  %1328 = getelementptr inbounds i32, i32* %1326, i64 1
  %1329 = ptrtoint i32* %1328 to i64
  %1330 = bitcast i32** %1327 to i64*
  %1331 = load i64, i64* %1330, align 8
  %1332 = sub i64 %1329, %1331
  %1333 = icmp eq i64 %1332, 4096
  br i1 %1333, label %1334, label %1338

1334:                                             ; preds = %1325
  %1335 = getelementptr inbounds i32*, i32** %1327, i64 1
  %1336 = bitcast i32** %1335 to i64*
  %1337 = load i64, i64* %1336, align 8
  br label %1338

1338:                                             ; preds = %1334, %1325
  %1339 = phi i64 [ %1337, %1334 ], [ %1329, %1325 ]
  %1340 = phi i32** [ %1335, %1334 ], [ %1327, %1325 ]
  %1341 = inttoptr i64 %1339 to i32*
  %1342 = icmp eq i32* %1319, %1341
  br i1 %1342, label %1321, label %1325

1343:                                             ; preds = %1321, %1343
  %1344 = phi i32** [ %1348, %1343 ], [ %1301, %1321 ]
  %1345 = bitcast i32** %1344 to i8**
  %1346 = load i8*, i8** %1345, align 8
  call void @_ZdlPv(i8* %1346) #14
  %1347 = load i32**, i32*** %155, align 8
  %1348 = getelementptr inbounds i32*, i32** %1347, i64 1
  store i32** %1348, i32*** %155, align 8
  %1349 = load i64, i64* %178, align 8
  %1350 = ptrtoint i32** %1348 to i64
  %1351 = sub i64 %1349, %1350
  %1352 = ashr exact i64 %1351, 3
  %1353 = icmp ugt i64 %1352, 2
  br i1 %1353, label %1343, label %1354

1354:                                             ; preds = %1343
  %1355 = inttoptr i64 %1349 to i32**
  br label %1356

1356:                                             ; preds = %1354, %1321
  %1357 = phi i32** [ %1305, %1321 ], [ %1355, %1354 ]
  %1358 = phi i32** [ %1301, %1321 ], [ %1348, %1354 ]
  %1359 = phi i64 [ %1323, %1321 ], [ %1352, %1354 ]
  switch i64 %1359, label %1363 [
    i64 1, label %1361
    i64 2, label %1360
  ]

1360:                                             ; preds = %1356
  br label %1361

1361:                                             ; preds = %1356, %1360
  %1362 = phi i64 [ 1024, %1360 ], [ 512, %1356 ]
  store i64 %1362, i64* %157, align 8
  br label %1363

1363:                                             ; preds = %1361, %1356
  %1364 = icmp eq i32** %1358, %1357
  br i1 %1364, label %1383, label %1365

1365:                                             ; preds = %1363, %1365
  %1366 = phi i32** [ %1369, %1365 ], [ %1358, %1363 ]
  %1367 = bitcast i32** %1366 to i8**
  %1368 = load i8*, i8** %1367, align 8
  call void @_ZdlPv(i8* %1368) #14
  %1369 = getelementptr inbounds i32*, i32** %1366, i64 1
  %1370 = icmp eq i32** %1369, %1357
  br i1 %1370, label %1371, label %1365

1371:                                             ; preds = %1365
  %1372 = load i32**, i32*** %155, align 8
  %1373 = load i32**, i32*** %156, align 8
  %1374 = icmp eq i32** %1373, %1372
  br i1 %1374, label %1383, label %1375

1375:                                             ; preds = %1371
  %1376 = ptrtoint i32** %1372 to i64
  %1377 = getelementptr i32*, i32** %1373, i64 -1
  %1378 = ptrtoint i32** %1377 to i64
  %1379 = sub i64 %1378, %1376
  %1380 = lshr i64 %1379, 3
  %1381 = xor i64 %1380, -1
  %1382 = getelementptr i32*, i32** %1373, i64 %1381
  store i32** %1382, i32*** %156, align 8
  br label %1383

1383:                                             ; preds = %1375, %1371, %1363
  %1384 = load i32**, i32*** %154, align 8
  %1385 = icmp eq i32** %1384, null
  br i1 %1385, label %1388, label %1386

1386:                                             ; preds = %1383
  %1387 = bitcast i32** %1384 to i8*
  call void @_ZdlPv(i8* %1387) #14
  br label %1388

1388:                                             ; preds = %1383, %1386
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %153) #15
  %1389 = load i8**, i8*** %149, align 8
  %1390 = load i64, i64* %151, align 8
  %1391 = lshr i64 %1390, 12
  %1392 = getelementptr inbounds i8*, i8** %1389, i64 %1391
  %1393 = load i8**, i8*** %150, align 8
  %1394 = icmp eq i8** %1393, %1389
  %1395 = ptrtoint i8** %1393 to i64
  %1396 = ptrtoint i8** %1389 to i64
  br i1 %1394, label %1409, label %1397

1397:                                             ; preds = %1388
  %1398 = load i8*, i8** %1392, align 8
  %1399 = and i64 %1390, 4095
  %1400 = getelementptr inbounds i8, i8* %1398, i64 %1399
  %1401 = load i64, i64* %152, align 8
  %1402 = add i64 %1401, %1390
  %1403 = lshr i64 %1402, 12
  %1404 = getelementptr inbounds i8*, i8** %1389, i64 %1403
  %1405 = load i8*, i8** %1404, align 8
  %1406 = and i64 %1402, 4095
  %1407 = getelementptr inbounds i8, i8* %1405, i64 %1406
  %1408 = icmp eq i8* %1407, %1400
  br i1 %1408, label %1409, label %1413

1409:                                             ; preds = %1426, %1388, %1397
  store i64 0, i64* %152, align 8
  %1410 = sub i64 %1395, %1396
  %1411 = ashr exact i64 %1410, 3
  %1412 = icmp ugt i64 %1411, 2
  br i1 %1412, label %1431, label %1443

1413:                                             ; preds = %1397, %1426
  %1414 = phi i8* [ %1429, %1426 ], [ %1400, %1397 ]
  %1415 = phi i8** [ %1428, %1426 ], [ %1392, %1397 ]
  %1416 = getelementptr inbounds i8, i8* %1414, i64 1
  %1417 = ptrtoint i8* %1416 to i64
  %1418 = bitcast i8** %1415 to i64*
  %1419 = load i64, i64* %1418, align 8
  %1420 = sub i64 %1417, %1419
  %1421 = icmp eq i64 %1420, 4096
  br i1 %1421, label %1422, label %1426

1422:                                             ; preds = %1413
  %1423 = getelementptr inbounds i8*, i8** %1415, i64 1
  %1424 = bitcast i8** %1423 to i64*
  %1425 = load i64, i64* %1424, align 8
  br label %1426

1426:                                             ; preds = %1422, %1413
  %1427 = phi i64 [ %1425, %1422 ], [ %1417, %1413 ]
  %1428 = phi i8** [ %1423, %1422 ], [ %1415, %1413 ]
  %1429 = inttoptr i64 %1427 to i8*
  %1430 = icmp eq i8* %1407, %1429
  br i1 %1430, label %1409, label %1413

1431:                                             ; preds = %1409, %1431
  %1432 = phi i8** [ %1435, %1431 ], [ %1389, %1409 ]
  %1433 = load i8*, i8** %1432, align 8
  call void @_ZdlPv(i8* %1433) #14
  %1434 = load i8**, i8*** %149, align 8
  %1435 = getelementptr inbounds i8*, i8** %1434, i64 1
  store i8** %1435, i8*** %149, align 8
  %1436 = load i64, i64* %159, align 8
  %1437 = ptrtoint i8** %1435 to i64
  %1438 = sub i64 %1436, %1437
  %1439 = ashr exact i64 %1438, 3
  %1440 = icmp ugt i64 %1439, 2
  br i1 %1440, label %1431, label %1441

1441:                                             ; preds = %1431
  %1442 = inttoptr i64 %1436 to i8**
  br label %1443

1443:                                             ; preds = %1441, %1409
  %1444 = phi i8** [ %1393, %1409 ], [ %1442, %1441 ]
  %1445 = phi i8** [ %1389, %1409 ], [ %1435, %1441 ]
  %1446 = phi i64 [ %1411, %1409 ], [ %1439, %1441 ]
  switch i64 %1446, label %1450 [
    i64 1, label %1448
    i64 2, label %1447
  ]

1447:                                             ; preds = %1443
  br label %1448

1448:                                             ; preds = %1443, %1447
  %1449 = phi i64 [ 4096, %1447 ], [ 2048, %1443 ]
  store i64 %1449, i64* %151, align 8
  br label %1450

1450:                                             ; preds = %1448, %1443
  %1451 = icmp eq i8** %1445, %1444
  br i1 %1451, label %1469, label %1452

1452:                                             ; preds = %1450, %1452
  %1453 = phi i8** [ %1455, %1452 ], [ %1445, %1450 ]
  %1454 = load i8*, i8** %1453, align 8
  call void @_ZdlPv(i8* %1454) #14
  %1455 = getelementptr inbounds i8*, i8** %1453, i64 1
  %1456 = icmp eq i8** %1455, %1444
  br i1 %1456, label %1457, label %1452

1457:                                             ; preds = %1452
  %1458 = load i8**, i8*** %149, align 8
  %1459 = load i8**, i8*** %150, align 8
  %1460 = icmp eq i8** %1459, %1458
  br i1 %1460, label %1469, label %1461

1461:                                             ; preds = %1457
  %1462 = ptrtoint i8** %1458 to i64
  %1463 = getelementptr i8*, i8** %1459, i64 -1
  %1464 = ptrtoint i8** %1463 to i64
  %1465 = sub i64 %1464, %1462
  %1466 = lshr i64 %1465, 3
  %1467 = xor i64 %1466, -1
  %1468 = getelementptr i8*, i8** %1459, i64 %1467
  store i8** %1468, i8*** %150, align 8
  br label %1469

1469:                                             ; preds = %1461, %1457, %1450
  %1470 = load i8**, i8*** %148, align 8
  %1471 = icmp eq i8** %1470, null
  br i1 %1471, label %1474, label %1472

1472:                                             ; preds = %1469
  %1473 = bitcast i8** %1470 to i8*
  call void @_ZdlPv(i8* %1473) #14
  br label %1474

1474:                                             ; preds = %1469, %1472
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %147) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #15
  %1475 = load i64, i64* %55, align 8
  %1476 = icmp eq i64 %1475, 0
  br i1 %1476, label %1498, label %1477

1477:                                             ; preds = %1474
  %1478 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %54, align 8
  %1479 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %53, align 8
  %1480 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1479, i64 0, i32 1
  %1481 = bitcast %"struct.std::__1::__list_node_base"** %1480 to i64*
  %1482 = load i64, i64* %1481, align 8
  %1483 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1478, i64 0, i32 0
  %1484 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %1483, align 8
  %1485 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1484, i64 0, i32 1
  %1486 = bitcast %"struct.std::__1::__list_node_base"** %1485 to i64*
  store i64 %1482, i64* %1486, align 8
  %1487 = bitcast %"struct.std::__1::__list_node_base"* %1478 to i64*
  %1488 = load i64, i64* %1487, align 8
  %1489 = bitcast %"struct.std::__1::__list_node_base"** %1480 to i64**
  %1490 = load i64*, i64** %1489, align 8
  store i64 %1488, i64* %1490, align 8
  store i64 0, i64* %55, align 8
  %1491 = icmp eq %"struct.std::__1::__list_node_base"* %1478, %56
  br i1 %1491, label %1498, label %1492

1492:                                             ; preds = %1477, %1492
  %1493 = phi %"struct.std::__1::__list_node_base"* [ %1495, %1492 ], [ %1478, %1477 ]
  %1494 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1493, i64 0, i32 1
  %1495 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %1494, align 8
  %1496 = bitcast %"struct.std::__1::__list_node_base"* %1493 to i8*
  call void @_ZdlPv(i8* %1496) #14
  %1497 = icmp eq %"struct.std::__1::__list_node_base"* %1495, %56
  br i1 %1497, label %1498, label %1492

1498:                                             ; preds = %1492, %1474, %1477
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #15
  ret i1 %1300

1499:                                             ; preds = %1246, %2001
  %1500 = phi %"struct.std::__1::__list_node_base"* [ %1244, %1246 ], [ %2003, %2001 ]
  %1501 = phi i64 [ %1243, %1246 ], [ %2002, %2001 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1247) #15
  store i32 0, i32* %33, align 4
  %1502 = inttoptr i64 %1501 to %"struct.std::__1::__list_node"*
  %1503 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %1502, i64 0, i32 1
  %1504 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1503, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1248) #15
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_17AggressiveDCEPass13AggressiveDCEEPNS3_8FunctionEE3$_7S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %1249, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass13AggressiveDCEEPNS5_8FunctionEE3$_7FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %1250, align 8
  %1505 = call i8* @_Znwm(i64 24) #14, !noalias !21
  %1506 = bitcast i8* %1505 to %"class.spvtools::opt::AggressiveDCEPass"**
  store %"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::AggressiveDCEPass"** %1506, align 8
  %1507 = getelementptr inbounds i8, i8* %1505, i64 8
  %1508 = bitcast i8* %1507 to i8**
  store i8* %18, i8** %1508, align 8
  %1509 = getelementptr inbounds i8, i8* %1505, i64 16
  %1510 = bitcast i8* %1509 to i32**
  store i32* %33, i32** %1510, align 8
  store i8* %1505, i8** %1251, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1252) #15
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %1254, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %1255, align 8
  store i64 %1253, i64* %1256, align 8
  %1511 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1504, i64 0, i32 1, i32 0, i32 0, i32 0
  %1512 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1511, align 8
  %1513 = icmp eq %"class.spvtools::opt::Instruction"* %1512, null
  br i1 %1513, label %1633, label %1514

1514:                                             ; preds = %1499
  %1515 = ptrtoint %"class.spvtools::opt::Instruction"* %1512 to i64
  %1516 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1512, i64 0, i32 5
  %1517 = load i32, i32* %1516, align 8
  %1518 = lshr i32 %1517, 6
  %1519 = zext i32 %1518 to i64
  %1520 = load i64, i64* %1263, align 8
  %1521 = load i64, i64* %1264, align 8
  %1522 = sub i64 %1520, %1521
  %1523 = ashr exact i64 %1522, 3
  %1524 = icmp ugt i64 %1523, %1519
  br i1 %1524, label %1525, label %1534

1525:                                             ; preds = %1514
  %1526 = inttoptr i64 %1521 to i64*
  %1527 = and i32 %1517, 63
  %1528 = getelementptr inbounds i64, i64* %1526, i64 %1519
  %1529 = load i64, i64* %1528, align 8
  %1530 = zext i32 %1527 to i64
  %1531 = shl i64 1, %1530
  %1532 = and i64 %1529, %1531
  %1533 = icmp eq i64 %1532, 0
  br i1 %1533, label %1534, label %1633

1534:                                             ; preds = %1525, %1514
  %1535 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1512, i64 0, i32 2
  %1536 = load i32, i32* %1535, align 8
  %1537 = call zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32 %1536) #15
  br i1 %1537, label %1541, label %1538

1538:                                             ; preds = %1534
  %1539 = load i32, i32* %1535, align 8
  %1540 = icmp eq i32 %1539, 255
  br i1 %1540, label %1541, label %1550

1541:                                             ; preds = %1538, %1534
  %1542 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %57, align 8
  %1543 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %1542, %"class.spvtools::opt::Instruction"* nonnull %1512) #15
  %1544 = icmp eq %"class.spvtools::opt::BasicBlock"* %1543, null
  br i1 %1544, label %1633, label %1545

1545:                                             ; preds = %1541
  %1546 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"* nonnull %1543) #15
  %1547 = icmp eq %"class.spvtools::opt::Instruction"* %1546, null
  br i1 %1547, label %1633, label %1548

1548:                                             ; preds = %1545
  %1549 = load i32, i32* %1535, align 8
  br label %1550

1550:                                             ; preds = %1548, %1538
  %1551 = phi i32 [ %1549, %1548 ], [ %1539, %1538 ]
  switch i32 %1551, label %1567 [
    i32 248, label %1633
    i32 247, label %1552
    i32 246, label %1552
  ]

1552:                                             ; preds = %1550, %1550
  %1553 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1512, i64 0, i32 3
  %1554 = load i8, i8* %1553, align 4, !range !2
  %1555 = icmp eq i8 %1554, 0
  %1556 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1512, i64 0, i32 4
  %1557 = load i8, i8* %1556, align 1, !range !2
  %1558 = icmp eq i8 %1557, 0
  %1559 = select i1 %1558, i32 1, i32 2
  %1560 = xor i1 %1558, true
  %1561 = zext i1 %1560 to i32
  %1562 = select i1 %1555, i32 %1561, i32 %1559
  %1563 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %1512, i32 %1562) #15
  %1564 = getelementptr inbounds i8, i8* %1505, i64 16
  %1565 = bitcast i8* %1564 to i32**
  %1566 = load i32*, i32** %1565, align 8
  store i32 %1563, i32* %1566, align 4
  br label %1567

1567:                                             ; preds = %1550, %1552
  %1568 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %1291, align 8
  %1569 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %1292, align 8
  %1570 = icmp eq %"class.spvtools::opt::Instruction"** %1568, %1569
  %1571 = ptrtoint %"class.spvtools::opt::Instruction"** %1569 to i64
  br i1 %1570, label %1576, label %1572

1572:                                             ; preds = %1567
  %1573 = bitcast %"class.spvtools::opt::Instruction"** %1568 to i64*
  store i64 %1515, i64* %1573, align 8
  %1574 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1568, i64 1
  %1575 = ptrtoint %"class.spvtools::opt::Instruction"** %1574 to i64
  store i64 %1575, i64* %1293, align 8
  br label %1629

1576:                                             ; preds = %1567
  %1577 = ptrtoint %"class.spvtools::opt::Instruction"** %1568 to i64
  %1578 = load i64, i64* %1295, align 8
  %1579 = sub i64 %1577, %1578
  %1580 = ashr exact i64 %1579, 3
  %1581 = add nsw i64 %1580, 1
  %1582 = icmp ugt i64 %1581, 2305843009213693951
  br i1 %1582, label %1583, label %1585

1583:                                             ; preds = %1576
  %1584 = bitcast %"class.std::__1::vector.1017"* %1290 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1584) #16
  unreachable

1585:                                             ; preds = %1576
  %1586 = sub i64 %1571, %1578
  %1587 = ashr exact i64 %1586, 3
  %1588 = icmp ult i64 %1587, 1152921504606846975
  br i1 %1588, label %1589, label %1597

1589:                                             ; preds = %1585
  %1590 = ashr exact i64 %1586, 2
  %1591 = icmp ult i64 %1590, %1581
  %1592 = select i1 %1591, i64 %1581, i64 %1590
  %1593 = icmp eq i64 %1592, 0
  br i1 %1593, label %1602, label %1594

1594:                                             ; preds = %1589
  %1595 = icmp ugt i64 %1592, 2305843009213693951
  br i1 %1595, label %1596, label %1597

1596:                                             ; preds = %1594
  call void @abort() #16
  unreachable

1597:                                             ; preds = %1585, %1594
  %1598 = phi i64 [ %1592, %1594 ], [ 2305843009213693951, %1585 ]
  %1599 = shl i64 %1598, 3
  %1600 = call i8* @_Znwm(i64 %1599) #14
  %1601 = bitcast i8* %1600 to %"class.spvtools::opt::Instruction"**
  br label %1602

1602:                                             ; preds = %1589, %1597
  %1603 = phi i64 [ %1598, %1597 ], [ 0, %1589 ]
  %1604 = phi %"class.spvtools::opt::Instruction"** [ %1601, %1597 ], [ null, %1589 ]
  %1605 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1604, i64 %1580
  %1606 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1604, i64 %1603
  %1607 = ptrtoint %"class.spvtools::opt::Instruction"** %1606 to i64
  %1608 = bitcast %"class.spvtools::opt::Instruction"** %1605 to i64*
  store i64 %1515, i64* %1608, align 8
  %1609 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1605, i64 1
  %1610 = ptrtoint %"class.spvtools::opt::Instruction"** %1609 to i64
  %1611 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %1297, align 8
  %1612 = load i64, i64* %1294, align 8
  %1613 = ptrtoint %"class.spvtools::opt::Instruction"** %1611 to i64
  %1614 = sub i64 %1612, %1613
  %1615 = ashr exact i64 %1614, 3
  %1616 = sub nsw i64 0, %1615
  %1617 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1605, i64 %1616
  %1618 = ptrtoint %"class.spvtools::opt::Instruction"** %1617 to i64
  %1619 = icmp sgt i64 %1614, 0
  br i1 %1619, label %1620, label %1624

1620:                                             ; preds = %1602
  %1621 = bitcast %"class.spvtools::opt::Instruction"** %1617 to i8*
  %1622 = bitcast %"class.spvtools::opt::Instruction"** %1611 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1621, i8* align 8 %1622, i64 %1614, i1 false) #15
  %1623 = load i64, i64* %1295, align 8
  br label %1624

1624:                                             ; preds = %1602, %1620
  %1625 = phi i64 [ %1613, %1602 ], [ %1623, %1620 ]
  store i64 %1618, i64* %1295, align 8
  store i64 %1610, i64* %1294, align 8
  store i64 %1607, i64* %1296, align 8
  %1626 = icmp eq i64 %1625, 0
  br i1 %1626, label %1629, label %1627

1627:                                             ; preds = %1624
  %1628 = inttoptr i64 %1625 to i8*
  call void @_ZdlPv(i8* %1628) #14
  br label %1629

1629:                                             ; preds = %1627, %1624, %1572
  %1630 = getelementptr inbounds i8, i8* %1505, i64 8
  %1631 = bitcast i8* %1630 to i8**
  %1632 = load i8*, i8** %1631, align 8
  store i8 1, i8* %1632, align 1
  br label %1633

1633:                                             ; preds = %1550, %1541, %1545, %1629, %1525, %1499
  %1634 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1504, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %1635 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1634, align 8
  %1636 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1635, i64 0, i32 0, i32 3
  %1637 = load i8, i8* %1636, align 8, !range !2
  %1638 = icmp ne i8 %1637, 0
  %1639 = icmp eq %"class.spvtools::opt::Instruction"* %1635, null
  %1640 = or i1 %1639, %1638
  br i1 %1640, label %1653, label %1641

1641:                                             ; preds = %1633, %1644
  %1642 = phi %"class.spvtools::opt::Instruction"* [ %1650, %1644 ], [ %1635, %1633 ]
  %1643 = icmp eq %"class.spvtools::opt::Instruction"* %1642, null
  br i1 %1643, label %1653, label %1644

1644:                                             ; preds = %1641
  %1645 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1642, i64 0, i32 0, i32 1
  %1646 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1645, align 8
  %1647 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1646, i64 0, i32 0, i32 3
  %1648 = load i8, i8* %1647, align 8, !range !2
  %1649 = icmp eq i8 %1648, 0
  %1650 = select i1 %1649, %"class.spvtools::opt::Instruction"* %1646, %"class.spvtools::opt::Instruction"* null
  %1651 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %1254, align 8
  %1652 = call zeroext i1 %1651(%"union.std::__1::__function::__policy_storage"* nonnull %1257, %"class.spvtools::opt::Instruction"* nonnull %1642) #15
  br i1 %1652, label %1641, label %1653

1653:                                             ; preds = %1644, %1641, %1633
  %1654 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %1255, align 8
  %1655 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1654, i64 0, i32 1
  %1656 = load void (i8*)*, void (i8*)** %1655, align 8
  %1657 = icmp eq void (i8*)* %1656, null
  br i1 %1657, label %1660, label %1658

1658:                                             ; preds = %1653
  %1659 = load i8*, i8** %1258, align 8
  call void %1656(i8* %1659) #15
  br label %1660

1660:                                             ; preds = %1653, %1658
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1252) #15
  %1661 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %1250, align 8
  %1662 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1661, i64 0, i32 1
  %1663 = load void (i8*)*, void (i8*)** %1662, align 8
  %1664 = icmp eq void (i8*)* %1663, null
  br i1 %1664, label %1667, label %1665

1665:                                             ; preds = %1660
  %1666 = load i8*, i8** %1251, align 8
  call void %1663(i8* %1666) #15
  br label %1667

1667:                                             ; preds = %1660, %1665
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1248) #15
  %1668 = load i32, i32* %33, align 4
  %1669 = icmp eq i32 %1668, 0
  br i1 %1669, label %1997, label %1670

1670:                                             ; preds = %1667
  %1671 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1503, align 8
  call void @_ZN8spvtools3opt17AggressiveDCEPass9AddBranchEjPNS0_10BasicBlockE(%"class.spvtools::opt::AggressiveDCEPass"* %0, i32 %1668, %"class.spvtools::opt::BasicBlock"* %1671)
  br label %1672

1672:                                             ; preds = %1694, %1670
  %1673 = phi %"struct.std::__1::__list_node_base"* [ %1500, %1670 ], [ %1695, %1694 ]
  %1674 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1673, i64 0, i32 1
  %1675 = bitcast %"struct.std::__1::__list_node_base"** %1674 to i64*
  %1676 = load i64, i64* %1675, align 8
  %1677 = inttoptr i64 %1676 to %"struct.std::__1::__list_node"*
  %1678 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %1677, i64 0, i32 1
  %1679 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1678, align 8
  %1680 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1679, i64 0, i32 1, i32 0, i32 0, i32 0
  %1681 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1680, align 8
  %1682 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1681, i64 0, i32 4
  %1683 = load i8, i8* %1682, align 1, !range !2
  %1684 = icmp eq i8 %1683, 0
  br i1 %1684, label %1690, label %1685

1685:                                             ; preds = %1672
  %1686 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1681, i64 0, i32 3
  %1687 = load i8, i8* %1686, align 4, !range !2
  %1688 = zext i8 %1687 to i32
  %1689 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1681, i32 %1688) #15
  br label %1690

1690:                                             ; preds = %1672, %1685
  %1691 = phi i32 [ %1689, %1685 ], [ 0, %1672 ]
  %1692 = load i32, i32* %33, align 4
  %1693 = icmp eq i32 %1691, %1692
  br i1 %1693, label %1696, label %1694

1694:                                             ; preds = %1690
  %1695 = inttoptr i64 %1676 to %"struct.std::__1::__list_node_base"*
  br label %1672

1696:                                             ; preds = %1690
  %1697 = inttoptr i64 %1676 to %"struct.std::__1::__list_node"*
  %1698 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %1697, i64 0, i32 1
  %1699 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1698, align 8
  %1700 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1699, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %1701 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1700, align 8, !noalias !26
  %1702 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1701, i64 0, i32 2
  %1703 = load i32, i32* %1702, align 8
  %1704 = icmp eq i32 %1703, 255
  br i1 %1704, label %1705, label %2001

1705:                                             ; preds = %1696
  %1706 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %57, align 8
  %1707 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1706, i64 0, i32 11
  %1708 = load i32, i32* %1707, align 8
  %1709 = and i32 %1708, 1
  %1710 = icmp eq i32 %1709, 0
  br i1 %1710, label %1711, label %1735

1711:                                             ; preds = %1705
  %1712 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1706, i64 0, i32 4, i32 0, i32 0, i32 0
  %1713 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %1712, align 8
  %1714 = call i8* @_Znwm(i64 104) #14
  %1715 = bitcast i8* %1714 to %"class.spvtools::opt::analysis::DefUseManager"*
  %1716 = getelementptr inbounds i8, i8* %1714, i64 32
  %1717 = bitcast i8* %1716 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1714, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %1717, align 4
  %1718 = getelementptr inbounds i8, i8* %1714, i64 48
  %1719 = getelementptr inbounds i8, i8* %1714, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %1718, i8 0, i64 16, i1 false) #15
  %1720 = bitcast i8* %1719 to i8**
  store i8* %1718, i8** %1720, align 8
  %1721 = getelementptr inbounds i8, i8* %1714, i64 64
  %1722 = getelementptr inbounds i8, i8* %1714, i64 96
  %1723 = bitcast i8* %1722 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1721, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %1723, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %1715, %"class.spvtools::opt::Module"* %1713) #15
  %1724 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1706, i64 0, i32 6
  %1725 = ptrtoint i8* %1714 to i64
  %1726 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %1724, i64 0, i32 0, i32 0, i32 0
  %1727 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %1726, align 8
  %1728 = bitcast %"class.std::__1::unique_ptr.62"* %1724 to i64*
  store i64 %1725, i64* %1728, align 8
  %1729 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1727, null
  br i1 %1729, label %1732, label %1730

1730:                                             ; preds = %1711
  %1731 = bitcast %"class.std::__1::unique_ptr.62"* %1724 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %1731, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %1727) #15
  br label %1732

1732:                                             ; preds = %1730, %1711
  %1733 = load i32, i32* %1707, align 8
  %1734 = or i32 %1733, 1
  store i32 %1734, i32* %1707, align 8
  br label %1735

1735:                                             ; preds = %1705, %1732
  %1736 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1706, i64 0, i32 6, i32 0, i32 0, i32 0
  %1737 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %1736, align 8
  %1738 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %37, align 8
  %1739 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1738, i64 0, i32 3
  %1740 = load i8, i8* %1739, align 4, !range !2
  %1741 = icmp eq i8 %1740, 0
  br i1 %1741, label %1744, label %1742

1742:                                             ; preds = %1735
  %1743 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1738, i32 0) #15
  br label %1744

1744:                                             ; preds = %1735, %1742
  %1745 = phi i32 [ %1743, %1742 ], [ 0, %1735 ]
  %1746 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %1737, i32 %1745) #15
  %1747 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1746, i64 0, i32 2
  %1748 = load i32, i32* %1747, align 8
  %1749 = icmp eq i32 %1748, 19
  br i1 %1749, label %1750, label %1751

1750:                                             ; preds = %1744
  store i32 253, i32* %1702, align 8
  br label %1962

1751:                                             ; preds = %1744
  %1752 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %37, align 8
  %1753 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1752, i64 0, i32 3
  %1754 = load i8, i8* %1753, align 4, !range !2
  %1755 = icmp eq i8 %1754, 0
  br i1 %1755, label %1758, label %1756

1756:                                             ; preds = %1751
  %1757 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1752, i32 0) #15
  br label %1758

1758:                                             ; preds = %1751, %1756
  %1759 = phi i32 [ %1757, %1756 ], [ 0, %1751 ]
  %1760 = call i32 @_ZN8spvtools3opt7MemPass10Type2UndefEj(%"class.spvtools::opt::MemPass"* %1259, i32 %1759) #15
  %1761 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %57, align 8
  %1762 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1761, i64 0, i32 11
  %1763 = load i32, i32* %1762, align 8
  %1764 = and i32 %1763, 1
  %1765 = icmp eq i32 %1764, 0
  br i1 %1765, label %1766, label %1790

1766:                                             ; preds = %1758
  %1767 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1761, i64 0, i32 4, i32 0, i32 0, i32 0
  %1768 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %1767, align 8
  %1769 = call i8* @_Znwm(i64 104) #14
  %1770 = bitcast i8* %1769 to %"class.spvtools::opt::analysis::DefUseManager"*
  %1771 = getelementptr inbounds i8, i8* %1769, i64 32
  %1772 = bitcast i8* %1771 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1769, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %1772, align 4
  %1773 = getelementptr inbounds i8, i8* %1769, i64 48
  %1774 = getelementptr inbounds i8, i8* %1769, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %1773, i8 0, i64 16, i1 false) #15
  %1775 = bitcast i8* %1774 to i8**
  store i8* %1773, i8** %1775, align 8
  %1776 = getelementptr inbounds i8, i8* %1769, i64 64
  %1777 = getelementptr inbounds i8, i8* %1769, i64 96
  %1778 = bitcast i8* %1777 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1776, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %1778, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %1770, %"class.spvtools::opt::Module"* %1768) #15
  %1779 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1761, i64 0, i32 6
  %1780 = ptrtoint i8* %1769 to i64
  %1781 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %1779, i64 0, i32 0, i32 0, i32 0
  %1782 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %1781, align 8
  %1783 = bitcast %"class.std::__1::unique_ptr.62"* %1779 to i64*
  store i64 %1780, i64* %1783, align 8
  %1784 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1782, null
  br i1 %1784, label %1787, label %1785

1785:                                             ; preds = %1766
  %1786 = bitcast %"class.std::__1::unique_ptr.62"* %1779 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %1786, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %1782) #15
  br label %1787

1787:                                             ; preds = %1785, %1766
  %1788 = load i32, i32* %1762, align 8
  %1789 = or i32 %1788, 1
  store i32 %1789, i32* %1762, align 8
  br label %1790

1790:                                             ; preds = %1758, %1787
  %1791 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1761, i64 0, i32 6, i32 0, i32 0, i32 0
  %1792 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %1791, align 8
  %1793 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %1792, i32 %1760) #15
  %1794 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1793, i64 0, i32 5
  %1795 = load i32, i32* %1794, align 8
  %1796 = lshr i32 %1795, 6
  %1797 = and i32 %1795, 63
  %1798 = zext i32 %1796 to i64
  %1799 = load i64, i64* %1263, align 8
  %1800 = load i64, i64* %1264, align 8
  %1801 = sub i64 %1799, %1800
  %1802 = ashr exact i64 %1801, 3
  %1803 = icmp ugt i64 %1802, %1798
  %1804 = inttoptr i64 %1800 to i64*
  br i1 %1803, label %1818, label %1805

1805:                                             ; preds = %1790
  %1806 = add nuw nsw i32 %1796, 1
  %1807 = zext i32 %1806 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1265) #15
  store i64 0, i64* %14, align 8
  %1808 = icmp ult i64 %1802, %1807
  br i1 %1808, label %1809, label %1812

1809:                                             ; preds = %1805
  %1810 = sub nsw i64 %1807, %1802
  call void @_ZNSt3__16vectorImNS_9allocatorImEEE8__appendEmRKm(%"class.std::__1::vector.900"* %1261, i64 %1810, i64* nonnull dereferenceable(8) %14) #15
  %1811 = load i64*, i64** %1266, align 8
  br label %1816

1812:                                             ; preds = %1805
  %1813 = icmp ugt i64 %1802, %1807
  br i1 %1813, label %1814, label %1816

1814:                                             ; preds = %1812
  %1815 = getelementptr inbounds i64, i64* %1804, i64 %1807
  store i64* %1815, i64** %1262, align 8
  br label %1816

1816:                                             ; preds = %1814, %1812, %1809
  %1817 = phi i64* [ %1811, %1809 ], [ %1804, %1812 ], [ %1804, %1814 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1265) #15
  br label %1818

1818:                                             ; preds = %1816, %1790
  %1819 = phi i64* [ %1804, %1790 ], [ %1817, %1816 ]
  %1820 = getelementptr inbounds i64, i64* %1819, i64 %1798
  %1821 = load i64, i64* %1820, align 8
  %1822 = zext i32 %1797 to i64
  %1823 = shl i64 1, %1822
  %1824 = and i64 %1821, %1823
  %1825 = icmp eq i64 %1824, 0
  br i1 %1825, label %1826, label %1828

1826:                                             ; preds = %1818
  %1827 = or i64 %1821, %1823
  store i64 %1827, i64* %1820, align 8
  br label %1828

1828:                                             ; preds = %1818, %1826
  store i32 254, i32* %1702, align 8
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %1267) #15
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1268) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1269, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %1272, %"struct.std::__1::aligned_storage<4, 4>::type"** %1273, align 8
  store i64 0, i64* %1275, align 8
  store i64 1, i64* %1270, align 8
  store i32 %1760, i32* %1276, align 8
  store i32 1, i32* %1277, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1279, align 8
  store i64 0, i64* %1280, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %1282, %"struct.std::__1::aligned_storage<4, 4>::type"** %1283, align 8
  store i64 0, i64* %1285, align 8
  %1829 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %1278, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %36) #15
  %1830 = call i8* @_Znwm(i64 48) #14
  %1831 = bitcast i8* %1830 to %"struct.spvtools::opt::Operand"*
  %1832 = bitcast i8* %1830 to i32*
  %1833 = load i32, i32* %1277, align 8
  store i32 %1833, i32* %1832, align 8
  %1834 = getelementptr inbounds i8, i8* %1830, i64 8
  %1835 = bitcast i8* %1834 to %"class.spvtools::utils::SmallVector"*
  %1836 = bitcast i8* %1834 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1836, align 8
  %1837 = getelementptr inbounds i8, i8* %1830, i64 16
  %1838 = bitcast i8* %1837 to i64*
  store i64 0, i64* %1838, align 8
  %1839 = getelementptr inbounds i8, i8* %1830, i64 24
  %1840 = getelementptr inbounds i8, i8* %1830, i64 32
  %1841 = bitcast i8* %1839 to i8**
  store i8* %1840, i8** %1841, align 8
  %1842 = getelementptr inbounds i8, i8* %1830, i64 40
  %1843 = bitcast i8* %1842 to i64*
  store i64 0, i64* %1843, align 8
  %1844 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %1835, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %1278) #15
  %1845 = getelementptr inbounds i8, i8* %1830, i64 48
  %1846 = bitcast i8* %1845 to %"struct.spvtools::opt::Operand"*
  %1847 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1701, i64 0, i32 6
  %1848 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1847, i64 0, i32 0, i32 0
  %1849 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %1848, align 8
  %1850 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1701, i64 0, i32 3
  %1851 = load i8, i8* %1850, align 4, !range !2
  %1852 = icmp eq i8 %1851, 0
  %1853 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1701, i64 0, i32 4
  %1854 = load i8, i8* %1853, align 1, !range !2
  %1855 = icmp eq i8 %1854, 0
  %1856 = select i1 %1855, i64 1, i64 2
  %1857 = xor i1 %1855, true
  %1858 = zext i1 %1857 to i64
  %1859 = select i1 %1852, i64 %1858, i64 %1856
  %1860 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1849, i64 %1859
  %1861 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1701, i64 0, i32 6, i32 0, i32 1
  %1862 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %1861, align 8
  %1863 = icmp eq %"struct.spvtools::opt::Operand"* %1860, %1862
  br i1 %1863, label %1885, label %1864

1864:                                             ; preds = %1828, %1882
  %1865 = phi %"struct.spvtools::opt::Operand"* [ %1866, %1882 ], [ %1862, %1828 ]
  %1866 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1865, i64 -1
  %1867 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1865, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1867, align 8
  %1868 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1865, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %1869 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %1868, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %1868, align 8
  %1870 = icmp eq %"class.std::__1::vector.3"* %1869, null
  br i1 %1870, label %1882, label %1871

1871:                                             ; preds = %1864
  %1872 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1869, i64 0, i32 0, i32 0
  %1873 = load i32*, i32** %1872, align 8
  %1874 = icmp eq i32* %1873, null
  br i1 %1874, label %1880, label %1875

1875:                                             ; preds = %1871
  %1876 = ptrtoint i32* %1873 to i64
  %1877 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1869, i64 0, i32 0, i32 1
  %1878 = bitcast i32** %1877 to i64*
  store i64 %1876, i64* %1878, align 8
  %1879 = bitcast i32* %1873 to i8*
  call void @_ZdlPv(i8* %1879) #14
  br label %1880

1880:                                             ; preds = %1875, %1871
  %1881 = bitcast %"class.std::__1::vector.3"* %1869 to i8*
  call void @_ZdlPv(i8* %1881) #14
  br label %1882

1882:                                             ; preds = %1880, %1864
  %1883 = icmp eq %"struct.spvtools::opt::Operand"* %1866, %1860
  br i1 %1883, label %1884, label %1864

1884:                                             ; preds = %1882
  store %"struct.spvtools::opt::Operand"* %1860, %"struct.spvtools::opt::Operand"** %1861, align 8
  br label %1885

1885:                                             ; preds = %1828, %1884
  %1886 = call %"struct.spvtools::opt::Operand"* @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_(%"class.std::__1::vector"* %1847, %"struct.spvtools::opt::Operand"* %1860, %"struct.spvtools::opt::Operand"* nonnull %1831, %"struct.spvtools::opt::Operand"* %1846) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1836, align 8
  %1887 = bitcast i8* %1842 to %"class.std::__1::vector.3"**
  %1888 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %1887, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %1887, align 8
  %1889 = icmp eq %"class.std::__1::vector.3"* %1888, null
  br i1 %1889, label %1901, label %1890

1890:                                             ; preds = %1885
  %1891 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1888, i64 0, i32 0, i32 0
  %1892 = load i32*, i32** %1891, align 8
  %1893 = icmp eq i32* %1892, null
  br i1 %1893, label %1899, label %1894

1894:                                             ; preds = %1890
  %1895 = ptrtoint i32* %1892 to i64
  %1896 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1888, i64 0, i32 0, i32 1
  %1897 = bitcast i32** %1896 to i64*
  store i64 %1895, i64* %1897, align 8
  %1898 = bitcast i32* %1892 to i8*
  call void @_ZdlPv(i8* %1898) #14
  br label %1899

1899:                                             ; preds = %1894, %1890
  %1900 = bitcast %"class.std::__1::vector.3"* %1888 to i8*
  call void @_ZdlPv(i8* %1900) #14
  br label %1901

1901:                                             ; preds = %1885, %1899
  call void @_ZdlPv(i8* nonnull %1830) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1288, align 8
  %1902 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %1289, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %1289, align 8
  %1903 = icmp eq %"class.std::__1::vector.3"* %1902, null
  br i1 %1903, label %1915, label %1904

1904:                                             ; preds = %1901
  %1905 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1902, i64 0, i32 0, i32 0
  %1906 = load i32*, i32** %1905, align 8
  %1907 = icmp eq i32* %1906, null
  br i1 %1907, label %1913, label %1908

1908:                                             ; preds = %1904
  %1909 = ptrtoint i32* %1906 to i64
  %1910 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1902, i64 0, i32 0, i32 1
  %1911 = bitcast i32** %1910 to i64*
  store i64 %1909, i64* %1911, align 8
  %1912 = bitcast i32* %1906 to i8*
  call void @_ZdlPv(i8* %1912) #14
  br label %1913

1913:                                             ; preds = %1908, %1904
  %1914 = bitcast %"class.std::__1::vector.3"* %1902 to i8*
  call void @_ZdlPv(i8* %1914) #14
  br label %1915

1915:                                             ; preds = %1901, %1913
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1269, align 8
  %1916 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %1286, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %1286, align 8
  %1917 = icmp eq %"class.std::__1::vector.3"* %1916, null
  br i1 %1917, label %1929, label %1918

1918:                                             ; preds = %1915
  %1919 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1916, i64 0, i32 0, i32 0
  %1920 = load i32*, i32** %1919, align 8
  %1921 = icmp eq i32* %1920, null
  br i1 %1921, label %1927, label %1922

1922:                                             ; preds = %1918
  %1923 = ptrtoint i32* %1920 to i64
  %1924 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1916, i64 0, i32 0, i32 1
  %1925 = bitcast i32** %1924 to i64*
  store i64 %1923, i64* %1925, align 8
  %1926 = bitcast i32* %1920 to i8*
  call void @_ZdlPv(i8* %1926) #14
  br label %1927

1927:                                             ; preds = %1922, %1918
  %1928 = bitcast %"class.std::__1::vector.3"* %1916 to i8*
  call void @_ZdlPv(i8* %1928) #14
  br label %1929

1929:                                             ; preds = %1915, %1927
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1268) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1267) #15
  %1930 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %57, align 8
  %1931 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1930, i64 0, i32 11
  %1932 = load i32, i32* %1931, align 8
  %1933 = and i32 %1932, 1
  %1934 = icmp eq i32 %1933, 0
  br i1 %1934, label %1935, label %1959

1935:                                             ; preds = %1929
  %1936 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1930, i64 0, i32 4, i32 0, i32 0, i32 0
  %1937 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %1936, align 8
  %1938 = call i8* @_Znwm(i64 104) #14
  %1939 = bitcast i8* %1938 to %"class.spvtools::opt::analysis::DefUseManager"*
  %1940 = getelementptr inbounds i8, i8* %1938, i64 32
  %1941 = bitcast i8* %1940 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1938, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %1941, align 4
  %1942 = getelementptr inbounds i8, i8* %1938, i64 48
  %1943 = getelementptr inbounds i8, i8* %1938, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %1942, i8 0, i64 16, i1 false) #15
  %1944 = bitcast i8* %1943 to i8**
  store i8* %1942, i8** %1944, align 8
  %1945 = getelementptr inbounds i8, i8* %1938, i64 64
  %1946 = getelementptr inbounds i8, i8* %1938, i64 96
  %1947 = bitcast i8* %1946 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1945, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %1947, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %1939, %"class.spvtools::opt::Module"* %1937) #15
  %1948 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1930, i64 0, i32 6
  %1949 = ptrtoint i8* %1938 to i64
  %1950 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %1948, i64 0, i32 0, i32 0, i32 0
  %1951 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %1950, align 8
  %1952 = bitcast %"class.std::__1::unique_ptr.62"* %1948 to i64*
  store i64 %1949, i64* %1952, align 8
  %1953 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1951, null
  br i1 %1953, label %1956, label %1954

1954:                                             ; preds = %1935
  %1955 = bitcast %"class.std::__1::unique_ptr.62"* %1948 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %1955, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %1951) #15
  br label %1956

1956:                                             ; preds = %1954, %1935
  %1957 = load i32, i32* %1931, align 8
  %1958 = or i32 %1957, 1
  store i32 %1958, i32* %1931, align 8
  br label %1959

1959:                                             ; preds = %1929, %1956
  %1960 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1930, i64 0, i32 6, i32 0, i32 0, i32 0
  %1961 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %1960, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %1961, %"class.spvtools::opt::Instruction"* %1701) #15
  br label %1962

1962:                                             ; preds = %1959, %1750
  %1963 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1701, i64 0, i32 5
  %1964 = load i32, i32* %1963, align 8
  %1965 = lshr i32 %1964, 6
  %1966 = and i32 %1964, 63
  %1967 = zext i32 %1965 to i64
  %1968 = load i64, i64* %1263, align 8
  %1969 = load i64, i64* %1264, align 8
  %1970 = sub i64 %1968, %1969
  %1971 = ashr exact i64 %1970, 3
  %1972 = icmp ugt i64 %1971, %1967
  %1973 = inttoptr i64 %1969 to i64*
  br i1 %1972, label %1987, label %1974

1974:                                             ; preds = %1962
  %1975 = add nuw nsw i32 %1965, 1
  %1976 = zext i32 %1975 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1287) #15
  store i64 0, i64* %15, align 8
  %1977 = icmp ult i64 %1971, %1976
  br i1 %1977, label %1978, label %1981

1978:                                             ; preds = %1974
  %1979 = sub nsw i64 %1976, %1971
  call void @_ZNSt3__16vectorImNS_9allocatorImEEE8__appendEmRKm(%"class.std::__1::vector.900"* %1261, i64 %1979, i64* nonnull dereferenceable(8) %15) #15
  %1980 = load i64*, i64** %1266, align 8
  br label %1985

1981:                                             ; preds = %1974
  %1982 = icmp ugt i64 %1971, %1976
  br i1 %1982, label %1983, label %1985

1983:                                             ; preds = %1981
  %1984 = getelementptr inbounds i64, i64* %1973, i64 %1976
  store i64* %1984, i64** %1262, align 8
  br label %1985

1985:                                             ; preds = %1983, %1981, %1978
  %1986 = phi i64* [ %1980, %1978 ], [ %1973, %1981 ], [ %1973, %1983 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1287) #15
  br label %1987

1987:                                             ; preds = %1985, %1962
  %1988 = phi i64* [ %1973, %1962 ], [ %1986, %1985 ]
  %1989 = getelementptr inbounds i64, i64* %1988, i64 %1967
  %1990 = load i64, i64* %1989, align 8
  %1991 = zext i32 %1966 to i64
  %1992 = shl i64 1, %1991
  %1993 = and i64 %1990, %1992
  %1994 = icmp eq i64 %1993, 0
  br i1 %1994, label %1995, label %2001

1995:                                             ; preds = %1987
  %1996 = or i64 %1990, %1992
  store i64 %1996, i64* %1989, align 8
  br label %2001

1997:                                             ; preds = %1667
  %1998 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1500, i64 0, i32 1
  %1999 = bitcast %"struct.std::__1::__list_node_base"** %1998 to i64*
  %2000 = load i64, i64* %1999, align 8
  br label %2001

2001:                                             ; preds = %1995, %1987, %1696, %1997
  %2002 = phi i64 [ %2000, %1997 ], [ %1676, %1696 ], [ %1676, %1987 ], [ %1676, %1995 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1247) #15
  %2003 = inttoptr i64 %2002 to %"struct.std::__1::__list_node_base"*
  %2004 = icmp eq %"struct.std::__1::__list_node_base"* %56, %2003
  br i1 %2004, label %1298, label %1499
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %5 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 10
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 5
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 6
  %9 = and i32 %7, 63
  %10 = zext i32 %8 to i64
  %11 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %13 = bitcast i64** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.spvtools::utils::BitVector"* %5 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 3
  %19 = icmp ugt i64 %18, %10
  %20 = inttoptr i64 %16 to i64*
  br i1 %19, label %36, label %21

21:                                               ; preds = %2
  %22 = add nuw nsw i32 %8, 1
  %23 = zext i32 %22 to i64
  %24 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #15
  store i64 0, i64* %3, align 8
  %25 = icmp ult i64 %18, %23
  br i1 %25, label %26, label %30

26:                                               ; preds = %21
  %27 = sub nsw i64 %23, %18
  call void @_ZNSt3__16vectorImNS_9allocatorImEEE8__appendEmRKm(%"class.std::__1::vector.900"* %11, i64 %27, i64* nonnull dereferenceable(8) %3) #15
  %28 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %5, i64 0, i32 0, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  br label %34

30:                                               ; preds = %21
  %31 = icmp ugt i64 %18, %23
  br i1 %31, label %32, label %34

32:                                               ; preds = %30
  %33 = getelementptr inbounds i64, i64* %20, i64 %23
  store i64* %33, i64** %12, align 8
  br label %34

34:                                               ; preds = %32, %30, %26
  %35 = phi i64* [ %29, %26 ], [ %20, %30 ], [ %20, %32 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #15
  br label %36

36:                                               ; preds = %34, %2
  %37 = phi i64* [ %20, %2 ], [ %35, %34 ]
  %38 = getelementptr inbounds i64, i64* %37, i64 %10
  %39 = load i64, i64* %38, align 8
  %40 = zext i32 %9 to i64
  %41 = shl i64 1, %40
  %42 = and i64 %39, %41
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %88

44:                                               ; preds = %36
  %45 = or i64 %39, %41
  store i64 %45, i64* %38, align 8
  %46 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"**** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"**** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = sub i64 %48, %51
  %53 = icmp eq i64 %52, 0
  %54 = shl i64 %52, 6
  %55 = add i64 %54, -1
  %56 = select i1 %53, i64 0, i64 %55
  %57 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, %58
  %62 = icmp eq i64 %56, %61
  %63 = inttoptr i64 %51 to %"class.spvtools::opt::Instruction"***
  %64 = inttoptr i64 %48 to %"class.spvtools::opt::Instruction"***
  br i1 %62, label %65, label %72

65:                                               ; preds = %44
  %66 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 4, i32 0
  call void @_ZNSt3__15dequeIPN8spvtools3opt11InstructionENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %66) #15
  %67 = load i64, i64* %59, align 8
  %68 = load i64, i64* %57, align 8
  %69 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %49, align 8
  %70 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %46, align 8
  %71 = add i64 %68, %67
  br label %72

72:                                               ; preds = %65, %44
  %73 = phi i64 [ %71, %65 ], [ %61, %44 ]
  %74 = phi %"class.spvtools::opt::Instruction"*** [ %70, %65 ], [ %64, %44 ]
  %75 = phi %"class.spvtools::opt::Instruction"*** [ %69, %65 ], [ %63, %44 ]
  %76 = icmp eq %"class.spvtools::opt::Instruction"*** %74, %75
  br i1 %76, label %84, label %77

77:                                               ; preds = %72
  %78 = lshr i64 %73, 9
  %79 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %75, i64 %78
  %80 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %79, align 8
  %81 = and i64 %73, 511
  %82 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %80, i64 %81
  %83 = bitcast %"class.spvtools::opt::Instruction"** %82 to i64*
  br label %84

84:                                               ; preds = %72, %77
  %85 = phi i64* [ %83, %77 ], [ null, %72 ]
  store i64 %4, i64* %85, align 8
  %86 = load i64, i64* %59, align 8
  %87 = add i64 %86, 1
  store i64 %87, i64* %59, align 8
  br label %88

88:                                               ; preds = %36, %84
  ret void
}

declare void @_ZN8spvtools3opt8Function12ForEachParamERKNSt3__18functionIFvPNS0_11InstructionEEEEb(%"class.spvtools::opt::Function"*, %"class.std::__1::function.1047"* dereferenceable(32), i1 zeroext) local_unnamed_addr #2

declare void @_ZN8spvtools3opt3CFG22ComputeStructuredOrderEPNS0_8FunctionEPNS0_10BasicBlockEPNSt3__14listIS5_NS6_9allocatorIS5_EEEE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::Function"*, %"class.spvtools::opt::BasicBlock"*, %"class.std::__1::list"*) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt7MemPass6GetPtrEPNS0_11InstructionEPj(%"class.spvtools::opt::MemPass"*, %"class.spvtools::opt::Instruction"*, i32*) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt7MemPass6GetPtrEjPj(%"class.spvtools::opt::MemPass"*, i32, i32*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8spvtools3opt11Instruction20IsOpcodeSafeToDeleteEv(%"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #2

declare i32 @_ZN8spvtools3opt8analysis16DebugInfoManager39GetVariableIdOfDebugValueUsedForDeclareEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis17DecorationManager17GetDecorationsForEjb(%"class.std::__1::vector.1017"* sret, %"class.spvtools::opt::analysis::DecorationManager"*, i32, i1 zeroext) local_unnamed_addr #2

declare i32 @_ZN8spvtools3opt7MemPass10Type2UndefEj(%"class.spvtools::opt::MemPass"*, i32) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt17AggressiveDCEPass37InitializeModuleScopeLiveInstructionsEv(%"class.spvtools::opt::AggressiveDCEPass"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = alloca %"class.std::__1::function.1179", align 8
  %4 = alloca %"class.std::__1::function.1092", align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %8 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %8, i64 0, i32 8, i32 0, i32 1, i32 0, i32 1
  %10 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %8, i64 0, i32 8, i32 0, i32 1
  %11 = bitcast %"class.spvtools::opt::Instruction"** %9 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = inttoptr i64 %12 to %"class.spvtools::opt::Instruction"*
  %14 = icmp eq %"class.spvtools::opt::Instruction"* %10, %13
  br i1 %14, label %19, label %36

15:                                               ; preds = %36
  %16 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %17 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %17, align 8
  br label %19

19:                                               ; preds = %15, %1
  %20 = phi %"class.spvtools::opt::Module"* [ %18, %15 ], [ %8, %1 ]
  %21 = phi %"class.spvtools::opt::IRContext"* [ %16, %15 ], [ %6, %1 ]
  %22 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %20, i64 0, i32 7, i32 0, i32 1, i32 0, i32 1
  %23 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %20, i64 0, i32 7, i32 0, i32 1
  %24 = bitcast %"class.spvtools::opt::Instruction"** %22 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = inttoptr i64 %25 to %"class.spvtools::opt::Instruction"*
  %27 = icmp eq %"class.spvtools::opt::Instruction"* %23, %26
  br i1 %27, label %45, label %28

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 10
  %30 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %29, i64 0, i32 0
  %31 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %32 = bitcast i64** %31 to i64*
  %33 = bitcast %"class.spvtools::utils::BitVector"* %29 to i64*
  %34 = bitcast i64* %2 to i8*
  %35 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %29, i64 0, i32 0, i32 0, i32 0
  br label %54

36:                                               ; preds = %1, %36
  %37 = phi %"class.spvtools::opt::Instruction"* [ %43, %36 ], [ %13, %1 ]
  %38 = phi i64 [ %42, %36 ], [ %12, %1 ]
  tail call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Instruction"* %37)
  %39 = inttoptr i64 %38 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %40 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %39, i64 0, i32 1
  %41 = bitcast %"class.spvtools::opt::Instruction"** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %42 to %"class.spvtools::opt::Instruction"*
  %44 = icmp eq %"class.spvtools::opt::Instruction"* %10, %43
  br i1 %44, label %15, label %36

45:                                               ; preds = %226, %19
  %46 = phi %"class.spvtools::opt::IRContext"* [ %21, %19 ], [ %233, %226 ]
  %47 = phi %"class.spvtools::opt::Module"* [ %20, %19 ], [ %235, %226 ]
  %48 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %47, i64 0, i32 13, i32 0, i32 1, i32 0, i32 1
  %49 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %47, i64 0, i32 13, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %48 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = inttoptr i64 %51 to %"class.spvtools::opt::Instruction"*
  %53 = icmp eq %"class.spvtools::opt::Instruction"* %49, %52
  br i1 %53, label %238, label %262

54:                                               ; preds = %28, %226
  %55 = phi %"class.spvtools::opt::Module"* [ %20, %28 ], [ %235, %226 ]
  %56 = phi %"class.spvtools::opt::Instruction"* [ %26, %28 ], [ %231, %226 ]
  %57 = phi i64 [ %25, %28 ], [ %230, %226 ]
  %58 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %55, i64 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = icmp ugt i32 %59, 66559
  br i1 %60, label %61, label %225

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %56, i64 0, i32 5
  %63 = load i32, i32* %62, align 8
  %64 = lshr i32 %63, 6
  %65 = and i32 %63, 63
  %66 = zext i32 %64 to i64
  %67 = load i64, i64* %32, align 8
  %68 = load i64, i64* %33, align 8
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = icmp ugt i64 %70, %66
  %72 = inttoptr i64 %68 to i64*
  br i1 %71, label %86, label %73

73:                                               ; preds = %61
  %74 = add nuw nsw i32 %64, 1
  %75 = zext i32 %74 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #15
  store i64 0, i64* %2, align 8
  %76 = icmp ult i64 %70, %75
  br i1 %76, label %77, label %80

77:                                               ; preds = %73
  %78 = sub nsw i64 %75, %70
  call void @_ZNSt3__16vectorImNS_9allocatorImEEE8__appendEmRKm(%"class.std::__1::vector.900"* %30, i64 %78, i64* nonnull dereferenceable(8) %2) #15
  %79 = load i64*, i64** %35, align 8
  br label %84

80:                                               ; preds = %73
  %81 = icmp ugt i64 %70, %75
  br i1 %81, label %82, label %84

82:                                               ; preds = %80
  %83 = getelementptr inbounds i64, i64* %72, i64 %75
  store i64* %83, i64** %31, align 8
  br label %84

84:                                               ; preds = %82, %80, %77
  %85 = phi i64* [ %79, %77 ], [ %72, %80 ], [ %72, %82 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #15
  br label %86

86:                                               ; preds = %84, %61
  %87 = phi i64* [ %72, %61 ], [ %85, %84 ]
  %88 = getelementptr inbounds i64, i64* %87, i64 %66
  %89 = load i64, i64* %88, align 8
  %90 = zext i32 %65 to i64
  %91 = shl i64 1, %90
  %92 = and i64 %89, %91
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %86
  %95 = or i64 %89, %91
  store i64 %95, i64* %88, align 8
  br label %96

96:                                               ; preds = %86, %94
  %97 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %97, i64 0, i32 11
  %99 = load i32, i32* %98, align 8
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %126

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %97, i64 0, i32 4, i32 0, i32 0, i32 0
  %104 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %103, align 8
  %105 = call i8* @_Znwm(i64 104) #14
  %106 = bitcast i8* %105 to %"class.spvtools::opt::analysis::DefUseManager"*
  %107 = getelementptr inbounds i8, i8* %105, i64 32
  %108 = bitcast i8* %107 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %108, align 4
  %109 = getelementptr inbounds i8, i8* %105, i64 48
  %110 = getelementptr inbounds i8, i8* %105, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 16, i1 false) #15
  %111 = bitcast i8* %110 to i8**
  store i8* %109, i8** %111, align 8
  %112 = getelementptr inbounds i8, i8* %105, i64 64
  %113 = getelementptr inbounds i8, i8* %105, i64 96
  %114 = bitcast i8* %113 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %114, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %106, %"class.spvtools::opt::Module"* %104) #15
  %115 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %97, i64 0, i32 6
  %116 = ptrtoint i8* %105 to i64
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %115, i64 0, i32 0, i32 0, i32 0
  %118 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %117, align 8
  %119 = bitcast %"class.std::__1::unique_ptr.62"* %115 to i64*
  store i64 %116, i64* %119, align 8
  %120 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %118, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %102
  %122 = bitcast %"class.std::__1::unique_ptr.62"* %115 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %122, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %118) #15
  br label %123

123:                                              ; preds = %121, %102
  %124 = load i32, i32* %98, align 8
  %125 = or i32 %124, 1
  store i32 %125, i32* %98, align 8
  br label %126

126:                                              ; preds = %96, %123
  %127 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %97, i64 0, i32 6, i32 0, i32 0, i32 0
  %128 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %127, align 8
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %56, i64 0, i32 3
  %130 = load i8, i8* %129, align 4, !range !2
  %131 = icmp eq i8 %130, 0
  %132 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %56, i64 0, i32 4
  %133 = load i8, i8* %132, align 1, !range !2
  %134 = icmp eq i8 %133, 0
  %135 = select i1 %134, i32 1, i32 2
  %136 = xor i1 %134, true
  %137 = zext i1 %136 to i32
  %138 = select i1 %131, i32 %137, i32 %135
  %139 = add nuw nsw i32 %138, 1
  %140 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %56, i32 %139) #15
  %141 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %128, i32 %140) #15
  call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Instruction"* %141)
  %142 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %56, i64 0, i32 6
  %143 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %56, i64 0, i32 6, i32 0, i32 1
  %144 = bitcast %"struct.spvtools::opt::Operand"** %143 to i64*
  %145 = bitcast %"class.std::__1::vector"* %142 to i64*
  br label %146

146:                                              ; preds = %223, %126
  %147 = phi i32 [ 3, %126 ], [ %224, %223 ]
  %148 = load i64, i64* %144, align 8
  %149 = load i64, i64* %145, align 8
  %150 = sub i64 %148, %149
  %151 = sdiv exact i64 %150, 48
  %152 = load i8, i8* %129, align 4, !range !2
  %153 = icmp eq i8 %152, 0
  %154 = load i8, i8* %132, align 1, !range !2
  %155 = icmp eq i8 %154, 0
  %156 = select i1 %155, i32 1, i32 2
  %157 = xor i1 %155, true
  %158 = zext i1 %157 to i32
  %159 = select i1 %153, i32 %158, i32 %156
  %160 = trunc i64 %151 to i32
  %161 = sub i32 %160, %159
  %162 = icmp ult i32 %147, %161
  br i1 %162, label %163, label %226

163:                                              ; preds = %146
  %164 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %165 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %164, i64 0, i32 11
  %166 = load i32, i32* %165, align 8
  %167 = and i32 %166, 1
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %195

169:                                              ; preds = %163
  %170 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %164, i64 0, i32 4, i32 0, i32 0, i32 0
  %171 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %170, align 8
  %172 = call i8* @_Znwm(i64 104) #14
  %173 = bitcast i8* %172 to %"class.spvtools::opt::analysis::DefUseManager"*
  %174 = getelementptr inbounds i8, i8* %172, i64 32
  %175 = bitcast i8* %174 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %172, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %175, align 4
  %176 = getelementptr inbounds i8, i8* %172, i64 48
  %177 = getelementptr inbounds i8, i8* %172, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %176, i8 0, i64 16, i1 false) #15
  %178 = bitcast i8* %177 to i8**
  store i8* %176, i8** %178, align 8
  %179 = getelementptr inbounds i8, i8* %172, i64 64
  %180 = getelementptr inbounds i8, i8* %172, i64 96
  %181 = bitcast i8* %180 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %179, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %181, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %173, %"class.spvtools::opt::Module"* %171) #15
  %182 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %164, i64 0, i32 6
  %183 = ptrtoint i8* %172 to i64
  %184 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %182, i64 0, i32 0, i32 0, i32 0
  %185 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %184, align 8
  %186 = bitcast %"class.std::__1::unique_ptr.62"* %182 to i64*
  store i64 %183, i64* %186, align 8
  %187 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %185, null
  br i1 %187, label %190, label %188

188:                                              ; preds = %169
  %189 = bitcast %"class.std::__1::unique_ptr.62"* %182 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %189, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %185) #15
  br label %190

190:                                              ; preds = %188, %169
  %191 = load i32, i32* %165, align 8
  %192 = or i32 %191, 1
  store i32 %192, i32* %165, align 8
  %193 = load i8, i8* %129, align 4, !range !2
  %194 = load i8, i8* %132, align 1, !range !2
  br label %195

195:                                              ; preds = %163, %190
  %196 = phi i8 [ %154, %163 ], [ %194, %190 ]
  %197 = phi i8 [ %152, %163 ], [ %193, %190 ]
  %198 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %164, i64 0, i32 6, i32 0, i32 0, i32 0
  %199 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %198, align 8
  %200 = icmp eq i8 %197, 0
  %201 = icmp eq i8 %196, 0
  %202 = select i1 %201, i32 1, i32 2
  %203 = xor i1 %201, true
  %204 = zext i1 %203 to i32
  %205 = select i1 %200, i32 %204, i32 %202
  %206 = add i32 %205, %147
  %207 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %56, i32 %206) #15
  %208 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %199, i32 %207) #15
  %209 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %208, i64 0, i32 3
  %210 = load i8, i8* %209, align 4, !range !2
  %211 = icmp eq i8 %210, 0
  %212 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %208, i64 0, i32 4
  %213 = load i8, i8* %212, align 1, !range !2
  %214 = icmp eq i8 %213, 0
  %215 = select i1 %214, i32 1, i32 2
  %216 = xor i1 %214, true
  %217 = zext i1 %216 to i32
  %218 = select i1 %211, i32 %217, i32 %215
  %219 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %208, i32 %218) #15
  %220 = or i32 %219, 2
  %221 = icmp eq i32 %220, 3
  br i1 %221, label %222, label %223

222:                                              ; preds = %195
  call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Instruction"* %208)
  br label %223

223:                                              ; preds = %195, %222
  %224 = add nuw i32 %147, 1
  br label %146

225:                                              ; preds = %54
  call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Instruction"* %56)
  br label %226

226:                                              ; preds = %146, %225
  %227 = inttoptr i64 %57 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %228 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %227, i64 0, i32 1
  %229 = bitcast %"class.spvtools::opt::Instruction"** %228 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = inttoptr i64 %230 to %"class.spvtools::opt::Instruction"*
  %232 = icmp eq %"class.spvtools::opt::Instruction"* %23, %231
  %233 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %234 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %233, i64 0, i32 4, i32 0, i32 0, i32 0
  %235 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %234, align 8
  br i1 %232, label %45, label %54

236:                                              ; preds = %343
  %237 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  br label %238

238:                                              ; preds = %236, %45
  %239 = phi %"class.spvtools::opt::IRContext"* [ %237, %236 ], [ %46, %45 ]
  %240 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %239, i64 0, i32 4, i32 0, i32 0, i32 0
  %241 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %240, align 8
  %242 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %241, i64 0, i32 12, i32 0, i32 1, i32 0, i32 1
  %243 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %241, i64 0, i32 12, i32 0, i32 1
  %244 = bitcast %"class.spvtools::opt::Instruction"** %242 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = inttoptr i64 %245 to %"class.spvtools::opt::Instruction"*
  %247 = icmp eq %"class.spvtools::opt::Instruction"* %243, %246
  br i1 %247, label %350, label %248

248:                                              ; preds = %238
  %249 = bitcast %"class.std::__1::function.1092"* %4 to i8*
  %250 = ptrtoint %"class.spvtools::opt::AggressiveDCEPass"* %0 to i64
  %251 = getelementptr inbounds %"class.std::__1::function.1092", %"class.std::__1::function.1092"* %4, i64 0, i32 0, i32 1, i32 0
  %252 = getelementptr inbounds %"class.std::__1::function.1092", %"class.std::__1::function.1092"* %4, i64 0, i32 0, i32 2
  %253 = bitcast %"class.std::__1::function.1092"* %4 to i64*
  %254 = bitcast %"class.std::__1::function.1179"* %3 to i8*
  %255 = ptrtoint %"class.std::__1::function.1092"* %4 to i64
  %256 = getelementptr inbounds %"class.std::__1::function.1179", %"class.std::__1::function.1179"* %3, i64 0, i32 0, i32 1, i32 0
  %257 = getelementptr inbounds %"class.std::__1::function.1179", %"class.std::__1::function.1179"* %3, i64 0, i32 0, i32 2
  %258 = bitcast %"class.std::__1::function.1179"* %3 to i64*
  %259 = getelementptr inbounds %"class.std::__1::function.1179", %"class.std::__1::function.1179"* %3, i64 0, i32 0, i32 0
  %260 = getelementptr inbounds %"class.std::__1::function.1179", %"class.std::__1::function.1179"* %3, i64 0, i32 0, i32 0, i32 0
  %261 = getelementptr inbounds %"class.std::__1::function.1092", %"class.std::__1::function.1092"* %4, i64 0, i32 0, i32 0, i32 0
  br label %351

262:                                              ; preds = %45, %343
  %263 = phi %"class.spvtools::opt::Instruction"* [ %348, %343 ], [ %52, %45 ]
  %264 = phi i64 [ %347, %343 ], [ %51, %45 ]
  %265 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %263, i64 0, i32 2
  %266 = load i32, i32* %265, align 8
  %267 = icmp eq i32 %266, 71
  br i1 %267, label %268, label %343

268:                                              ; preds = %262
  %269 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %263, i64 0, i32 3
  %270 = load i8, i8* %269, align 4, !range !2
  %271 = icmp eq i8 %270, 0
  %272 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %263, i64 0, i32 4
  %273 = load i8, i8* %272, align 1, !range !2
  %274 = icmp eq i8 %273, 0
  %275 = select i1 %274, i32 1, i32 2
  %276 = xor i1 %274, true
  %277 = zext i1 %276 to i32
  %278 = select i1 %271, i32 %277, i32 %275
  %279 = add nuw nsw i32 %278, 1
  %280 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %263, i32 %279) #15
  %281 = icmp eq i32 %280, 11
  br i1 %281, label %282, label %295

282:                                              ; preds = %268
  %283 = load i8, i8* %269, align 4, !range !2
  %284 = icmp eq i8 %283, 0
  %285 = load i8, i8* %272, align 1, !range !2
  %286 = icmp eq i8 %285, 0
  %287 = select i1 %286, i32 1, i32 2
  %288 = xor i1 %286, true
  %289 = zext i1 %288 to i32
  %290 = select i1 %284, i32 %289, i32 %287
  %291 = add nuw nsw i32 %290, 2
  %292 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %263, i32 %291) #15
  %293 = icmp eq i32 %292, 25
  br i1 %293, label %294, label %295

294:                                              ; preds = %282
  call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Instruction"* %263)
  br label %295

295:                                              ; preds = %294, %282, %268
  %296 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %297 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %296, i64 0, i32 29
  %298 = load i8, i8* %297, align 4, !range !2
  %299 = icmp eq i8 %298, 0
  br i1 %299, label %325, label %300

300:                                              ; preds = %295
  %301 = load i8, i8* %269, align 4, !range !2
  %302 = icmp eq i8 %301, 0
  %303 = load i8, i8* %272, align 1, !range !2
  %304 = icmp eq i8 %303, 0
  %305 = select i1 %304, i32 1, i32 2
  %306 = xor i1 %304, true
  %307 = zext i1 %306 to i32
  %308 = select i1 %302, i32 %307, i32 %305
  %309 = add nuw nsw i32 %308, 1
  %310 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %263, i32 %309) #15
  %311 = icmp eq i32 %310, 34
  br i1 %311, label %324, label %312

312:                                              ; preds = %300
  %313 = load i8, i8* %269, align 4, !range !2
  %314 = icmp eq i8 %313, 0
  %315 = load i8, i8* %272, align 1, !range !2
  %316 = icmp eq i8 %315, 0
  %317 = select i1 %316, i32 1, i32 2
  %318 = xor i1 %316, true
  %319 = zext i1 %318 to i32
  %320 = select i1 %314, i32 %319, i32 %317
  %321 = add nuw nsw i32 %320, 1
  %322 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %263, i32 %321) #15
  %323 = icmp eq i32 %322, 33
  br i1 %323, label %324, label %325

324:                                              ; preds = %312, %300
  call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Instruction"* %263)
  br label %325

325:                                              ; preds = %295, %312, %324
  %326 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %327 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %326, i64 0, i32 30
  %328 = load i8, i8* %327, align 1, !range !2
  %329 = icmp eq i8 %328, 0
  br i1 %329, label %343, label %330

330:                                              ; preds = %325
  %331 = load i8, i8* %269, align 4, !range !2
  %332 = icmp eq i8 %331, 0
  %333 = load i8, i8* %272, align 1, !range !2
  %334 = icmp eq i8 %333, 0
  %335 = select i1 %334, i32 1, i32 2
  %336 = xor i1 %334, true
  %337 = zext i1 %336 to i32
  %338 = select i1 %332, i32 %337, i32 %335
  %339 = add nuw nsw i32 %338, 1
  %340 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %263, i32 %339) #15
  %341 = icmp eq i32 %340, 1
  br i1 %341, label %342, label %343

342:                                              ; preds = %330
  call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Instruction"* %263)
  br label %343

343:                                              ; preds = %325, %342, %330, %262
  %344 = inttoptr i64 %264 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %345 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %344, i64 0, i32 1
  %346 = bitcast %"class.spvtools::opt::Instruction"** %345 to i64*
  %347 = load i64, i64* %346, align 8
  %348 = inttoptr i64 %347 to %"class.spvtools::opt::Instruction"*
  %349 = icmp eq %"class.spvtools::opt::Instruction"* %49, %348
  br i1 %349, label %236, label %262

350:                                              ; preds = %397, %238
  ret void

351:                                              ; preds = %248, %397
  %352 = phi %"class.spvtools::opt::Instruction"* [ %246, %248 ], [ %402, %397 ]
  %353 = phi i64 [ %245, %248 ], [ %401, %397 ]
  %354 = call i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"* %352) #15
  %355 = icmp eq i32 %354, 18
  br i1 %355, label %356, label %397

356:                                              ; preds = %351
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %249) #15
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass37InitializeModuleScopeLiveInstructionsEvE3$_8S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %251, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass37InitializeModuleScopeLiveInstructionsEvE3$_8FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %252, align 8
  store i64 %250, i64* %253, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %254) #15
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %256, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %257, align 8
  store i64 %255, i64* %258, align 8
  %357 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %352, i64 0, i32 6, i32 0, i32 0
  %358 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %357, align 8
  %359 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %352, i64 0, i32 6, i32 0, i32 1
  %360 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %359, align 8
  %361 = icmp eq %"struct.spvtools::opt::Operand"* %358, %360
  br i1 %361, label %382, label %362

362:                                              ; preds = %356, %377
  %363 = phi %"struct.spvtools::opt::Operand"* [ %378, %377 ], [ %358, %356 ]
  %364 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %363, i64 0, i32 0
  %365 = load i32, i32* %364, align 8
  %366 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %365) #15
  br i1 %366, label %367, label %377

367:                                              ; preds = %362
  %368 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %363, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %369 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %368, align 8
  %370 = icmp eq %"class.std::__1::vector.3"* %369, null
  %371 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %369, i64 0, i32 0, i32 0
  %372 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %363, i64 0, i32 1, i32 2
  %373 = select i1 %370, i32** %372, i32** %371
  %374 = load i32*, i32** %373, align 8
  %375 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %256, align 8
  %376 = call zeroext i1 %375(%"union.std::__1::__function::__policy_storage"* nonnull %259, i32* %374) #15
  br i1 %376, label %377, label %380

377:                                              ; preds = %367, %362
  %378 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %363, i64 1
  %379 = icmp eq %"struct.spvtools::opt::Operand"* %378, %360
  br i1 %379, label %380, label %362

380:                                              ; preds = %377, %367
  %381 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %257, align 8
  br label %382

382:                                              ; preds = %380, %356
  %383 = phi %"struct.std::__1::__function::__policy"* [ %381, %380 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %356 ]
  %384 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %383, i64 0, i32 1
  %385 = load void (i8*)*, void (i8*)** %384, align 8
  %386 = icmp eq void (i8*)* %385, null
  br i1 %386, label %389, label %387

387:                                              ; preds = %382
  %388 = load i8*, i8** %260, align 8
  call void %385(i8* %388) #15
  br label %389

389:                                              ; preds = %382, %387
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %254) #15
  %390 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %252, align 8
  %391 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %390, i64 0, i32 1
  %392 = load void (i8*)*, void (i8*)** %391, align 8
  %393 = icmp eq void (i8*)* %392, null
  br i1 %393, label %396, label %394

394:                                              ; preds = %389
  %395 = load i8*, i8** %261, align 8
  call void %392(i8* %395) #15
  br label %396

396:                                              ; preds = %389, %394
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %249) #15
  br label %397

397:                                              ; preds = %351, %396
  %398 = inttoptr i64 %353 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %399 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %398, i64 0, i32 1
  %400 = bitcast %"class.spvtools::opt::Instruction"** %399 to i64*
  %401 = load i64, i64* %400, align 8
  %402 = inttoptr i64 %401 to %"class.spvtools::opt::Instruction"*
  %403 = icmp eq %"class.spvtools::opt::Instruction"* %243, %402
  br i1 %403, label %350, label %351
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt17AggressiveDCEPass11ProcessImplEv(%"class.spvtools::opt::AggressiveDCEPass"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::function.1102", align 8
  %3 = alloca %"class.std::__1::function.1102", align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 0, i32 0, i32 2
  %5 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 8
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.152"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %7, align 8
  %9 = icmp eq %"class.spvtools::opt::FeatureManager"* %8, null
  br i1 %9, label %10, label %21

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 1
  %12 = tail call i8* @_Znwm(i64 48) #14
  %13 = bitcast i8* %12 to %"class.spvtools::AssemblyGrammar"**
  store %"class.spvtools::AssemblyGrammar"* %11, %"class.spvtools::AssemblyGrammar"** %13, align 8
  %14 = getelementptr inbounds i8, i8* %12, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 40, i1 false) #15
  %15 = ptrtoint i8* %12 to i64
  %16 = bitcast %"class.std::__1::unique_ptr.152"* %6 to i64*
  store i64 %15, i64* %16, align 8
  %17 = bitcast i8* %12 to %"class.spvtools::opt::FeatureManager"*
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %19 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %18, align 8
  tail call void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"* nonnull %17, %"class.spvtools::opt::Module"* %19) #15
  %20 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %7, align 8
  br label %21

21:                                               ; preds = %1, %10
  %22 = phi %"class.spvtools::opt::FeatureManager"* [ %8, %1 ], [ %20, %10 ]
  %23 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %22, i64 0, i32 2, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, 2
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %154, label %27

27:                                               ; preds = %21
  %28 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %28, i64 0, i32 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.152"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %30, align 8
  %32 = icmp eq %"class.spvtools::opt::FeatureManager"* %31, null
  br i1 %32, label %33, label %44

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %28, i64 0, i32 1
  %35 = tail call i8* @_Znwm(i64 48) #14
  %36 = bitcast i8* %35 to %"class.spvtools::AssemblyGrammar"**
  store %"class.spvtools::AssemblyGrammar"* %34, %"class.spvtools::AssemblyGrammar"** %36, align 8
  %37 = getelementptr inbounds i8, i8* %35, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 40, i1 false) #15
  %38 = ptrtoint i8* %35 to i64
  %39 = bitcast %"class.std::__1::unique_ptr.152"* %29 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast i8* %35 to %"class.spvtools::opt::FeatureManager"*
  %41 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %28, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %41, align 8
  tail call void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"* nonnull %40, %"class.spvtools::opt::Module"* %42) #15
  %43 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %30, align 8
  br label %44

44:                                               ; preds = %27, %33
  %45 = phi %"class.spvtools::opt::FeatureManager"* [ %31, %27 ], [ %43, %33 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %45, i64 0, i32 2, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = and i64 %47, 16
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %154

50:                                               ; preds = %44
  %51 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %52 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %51, i64 0, i32 8
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.152"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %53, align 8
  %55 = icmp eq %"class.spvtools::opt::FeatureManager"* %54, null
  br i1 %55, label %56, label %67

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %51, i64 0, i32 1
  %58 = tail call i8* @_Znwm(i64 48) #14
  %59 = bitcast i8* %58 to %"class.spvtools::AssemblyGrammar"**
  store %"class.spvtools::AssemblyGrammar"* %57, %"class.spvtools::AssemblyGrammar"** %59, align 8
  %60 = getelementptr inbounds i8, i8* %58, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 40, i1 false) #15
  %61 = ptrtoint i8* %58 to i64
  %62 = bitcast %"class.std::__1::unique_ptr.152"* %52 to i64*
  store i64 %61, i64* %62, align 8
  %63 = bitcast i8* %58 to %"class.spvtools::opt::FeatureManager"*
  %64 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %51, i64 0, i32 4, i32 0, i32 0, i32 0
  %65 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %64, align 8
  tail call void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"* nonnull %63, %"class.spvtools::opt::Module"* %65) #15
  %66 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %53, align 8
  br label %67

67:                                               ; preds = %50, %56
  %68 = phi %"class.spvtools::opt::FeatureManager"* [ %54, %50 ], [ %66, %56 ]
  %69 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %68, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %70 = load %"class.std::__1::set.158"*, %"class.std::__1::set.158"** %69, align 8
  %71 = icmp eq %"class.std::__1::set.158"* %70, null
  br i1 %71, label %98, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %70, i64 0, i32 0, i32 1, i32 0, i32 0
  %74 = bitcast %"class.std::__1::__tree_end_node"* %73 to %"class.std::__1::__tree_node.1239"**
  %75 = load %"class.std::__1::__tree_node.1239"*, %"class.std::__1::__tree_node.1239"** %74, align 8
  %76 = icmp eq %"class.std::__1::__tree_node.1239"* %75, null
  br i1 %76, label %98, label %77

77:                                               ; preds = %72, %77
  %78 = phi %"class.std::__1::__tree_end_node"* [ %88, %77 ], [ %73, %72 ]
  %79 = phi %"class.std::__1::__tree_node.1239"* [ %89, %77 ], [ %75, %72 ]
  %80 = getelementptr inbounds %"class.std::__1::__tree_node.1239", %"class.std::__1::__tree_node.1239"* %79, i64 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = icmp ult i32 %81, 4441
  %83 = getelementptr inbounds %"class.std::__1::__tree_node.1239", %"class.std::__1::__tree_node.1239"* %79, i64 0, i32 0, i32 1
  %84 = bitcast %"class.std::__1::__tree_node_base"** %83 to %"class.std::__1::__tree_node.1239"**
  %85 = getelementptr inbounds %"class.std::__1::__tree_node.1239", %"class.std::__1::__tree_node.1239"* %79, i64 0, i32 0, i32 0
  %86 = bitcast %"class.std::__1::__tree_node.1239"* %79 to %"class.std::__1::__tree_node.1239"**
  %87 = select i1 %82, %"class.std::__1::__tree_node.1239"** %84, %"class.std::__1::__tree_node.1239"** %86
  %88 = select i1 %82, %"class.std::__1::__tree_end_node"* %78, %"class.std::__1::__tree_end_node"* %85
  %89 = load %"class.std::__1::__tree_node.1239"*, %"class.std::__1::__tree_node.1239"** %87, align 8
  %90 = icmp eq %"class.std::__1::__tree_node.1239"* %89, null
  br i1 %90, label %91, label %77

91:                                               ; preds = %77
  %92 = icmp eq %"class.std::__1::__tree_end_node"* %88, %73
  br i1 %92, label %98, label %93

93:                                               ; preds = %91
  %94 = bitcast %"class.std::__1::__tree_end_node"* %88 to %"class.std::__1::__tree_node.1239"*
  %95 = getelementptr inbounds %"class.std::__1::__tree_node.1239", %"class.std::__1::__tree_node.1239"* %94, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = icmp ult i32 %96, 4442
  br i1 %97, label %154, label %98

98:                                               ; preds = %93, %91, %72, %67
  %99 = tail call zeroext i1 @_ZNK8spvtools3opt17AggressiveDCEPass22AllExtensionsSupportedEv(%"class.spvtools::opt::AggressiveDCEPass"* %0)
  br i1 %99, label %100, label %154

100:                                              ; preds = %98
  %101 = tail call zeroext i1 @_ZN8spvtools3opt17AggressiveDCEPass22EliminateDeadFunctionsEv(%"class.spvtools::opt::AggressiveDCEPass"* %0)
  tail call void @_ZN8spvtools3opt17AggressiveDCEPass37InitializeModuleScopeLiveInstructionsEv(%"class.spvtools::opt::AggressiveDCEPass"* %0)
  %102 = bitcast %"class.std::__1::function.1102"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %102) #15
  %103 = getelementptr inbounds %"class.std::__1::function.1102", %"class.std::__1::function.1102"* %2, i64 0, i32 0, i32 0, i32 0
  %104 = getelementptr inbounds %"class.std::__1::function.1102", %"class.std::__1::function.1102"* %2, i64 0, i32 0, i32 1, i32 0
  %105 = getelementptr inbounds %"class.std::__1::function.1102", %"class.std::__1::function.1102"* %2, i64 0, i32 0, i32 2
  %106 = ptrtoint %"class.spvtools::opt::AggressiveDCEPass"* %0 to i64
  %107 = getelementptr inbounds %"class.std::__1::function.1102", %"class.std::__1::function.1102"* %2, i64 0, i32 0, i32 0, i32 1, i64 0
  %108 = bitcast i8* %107 to i64*
  store i64 -6148914691236517206, i64* %108, align 8
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt8FunctionEEE11__call_implINS0_20__default_alloc_funcIZNS3_17AggressiveDCEPass11ProcessImplEvE3$_9S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)** %104, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass11ProcessImplEvE3$_9FbPNS5_8FunctionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %105, align 8
  %109 = bitcast %"class.std::__1::function.1102"* %2 to i64*
  store i64 %106, i64* %109, align 8
  %110 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %111 = call zeroext i1 @_ZN8spvtools3opt9IRContext25ProcessEntryPointCallTreeERNSt3__18functionIFbPNS0_8FunctionEEEE(%"class.spvtools::opt::IRContext"* %110, %"class.std::__1::function.1102"* nonnull dereferenceable(32) %2) #15
  %112 = or i1 %101, %111
  %113 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  call void @_ZN8spvtools3opt9IRContext18InvalidateAnalysesENS1_8AnalysisE(%"class.spvtools::opt::IRContext"* %113, i32 4) #15
  %114 = call zeroext i1 @_ZN8spvtools3opt17AggressiveDCEPass19ProcessGlobalValuesEv(%"class.spvtools::opt::AggressiveDCEPass"* %0)
  %115 = or i1 %112, %114
  %116 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 12, i32 0, i32 0
  %117 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %116, align 8
  %118 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 12, i32 0, i32 1
  %119 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %118, align 8
  %120 = icmp eq %"class.spvtools::opt::Instruction"** %117, %119
  br i1 %120, label %121, label %147

121:                                              ; preds = %147, %100
  %122 = bitcast %"class.std::__1::function.1102"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %122) #15
  %123 = getelementptr inbounds %"class.std::__1::function.1102", %"class.std::__1::function.1102"* %3, i64 0, i32 0, i32 1, i32 0
  %124 = getelementptr inbounds %"class.std::__1::function.1102", %"class.std::__1::function.1102"* %3, i64 0, i32 0, i32 2
  %125 = getelementptr inbounds %"class.std::__1::function.1102", %"class.std::__1::function.1102"* %3, i64 0, i32 0, i32 0, i32 1, i64 0
  %126 = bitcast i8* %125 to i64*
  store i64 -6148914691236517206, i64* %126, align 8
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt8FunctionEEE11__call_implINS0_20__default_alloc_funcIZNS3_17AggressiveDCEPass11ProcessImplEvE4$_10S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)** %123, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass11ProcessImplEvE4$_10FbPNS5_8FunctionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %124, align 8
  %127 = bitcast %"class.std::__1::function.1102"* %3 to i64*
  store i64 %106, i64* %127, align 8
  %128 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %129 = call zeroext i1 @_ZN8spvtools3opt9IRContext25ProcessEntryPointCallTreeERNSt3__18functionIFbPNS0_8FunctionEEEE(%"class.spvtools::opt::IRContext"* %128, %"class.std::__1::function.1102"* nonnull dereferenceable(32) %3) #15
  %130 = or i1 %115, %129
  %131 = select i1 %130, i32 16, i32 17
  %132 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %124, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %132, i64 0, i32 1
  %134 = load void (i8*)*, void (i8*)** %133, align 8
  %135 = icmp eq void (i8*)* %134, null
  br i1 %135, label %139, label %136

136:                                              ; preds = %121
  %137 = getelementptr inbounds %"class.std::__1::function.1102", %"class.std::__1::function.1102"* %3, i64 0, i32 0, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8
  call void %134(i8* %138) #15
  br label %139

139:                                              ; preds = %121, %136
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %122) #15
  %140 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %105, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %140, i64 0, i32 1
  %142 = load void (i8*)*, void (i8*)** %141, align 8
  %143 = icmp eq void (i8*)* %142, null
  br i1 %143, label %146, label %144

144:                                              ; preds = %139
  %145 = load i8*, i8** %103, align 8
  call void %142(i8* %145) #15
  br label %146

146:                                              ; preds = %139, %144
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %102) #15
  br label %154

147:                                              ; preds = %100, %147
  %148 = phi %"class.spvtools::opt::Instruction"** [ %152, %147 ], [ %117, %100 ]
  %149 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %148, align 8
  %150 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %151 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %150, %"class.spvtools::opt::Instruction"* %149) #15
  %152 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %148, i64 1
  %153 = icmp eq %"class.spvtools::opt::Instruction"** %152, %119
  br i1 %153, label %121, label %147

154:                                              ; preds = %44, %21, %93, %98, %146
  %155 = phi i32 [ %131, %146 ], [ 17, %21 ], [ 17, %44 ], [ 17, %98 ], [ 17, %93 ]
  ret i32 %155
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt17AggressiveDCEPass22EliminateDeadFunctionsEv(%"class.spvtools::opt::AggressiveDCEPass"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unordered_set.1110", align 8
  %3 = alloca %"class.std::__1::function.1102", align 8
  %4 = alloca %"class.spvtools::opt::UptrVectorIterator.1133", align 8
  %5 = bitcast %"class.std::__1::unordered_set.1110"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.std::__1::unordered_set.1110", %"class.std::__1::unordered_set.1110"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::unordered_set.1110", %"class.std::__1::unordered_set.1110"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::unordered_set.1110", %"class.std::__1::unordered_set.1110"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::unordered_set.1110", %"class.std::__1::unordered_set.1110"* %2, i64 0, i32 0, i32 4, i64 0
  %10 = getelementptr inbounds %"class.std::__1::unordered_set.1110", %"class.std::__1::unordered_set.1110"* %2, i64 0, i32 0, i32 3
  %11 = bitcast %"class.std::__1::__compressed_pair.1129"* %10 to i32*
  %12 = bitcast i8* %9 to i32*
  store i32 -1431655766, i32* %12, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %11, align 8
  %13 = bitcast %"class.std::__1::function.1102"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #15
  %14 = getelementptr inbounds %"class.std::__1::function.1102", %"class.std::__1::function.1102"* %3, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::function.1102", %"class.std::__1::function.1102"* %3, i64 0, i32 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.std::__1::function.1102", %"class.std::__1::function.1102"* %3, i64 0, i32 0, i32 2
  %17 = ptrtoint %"class.std::__1::unordered_set.1110"* %2 to i64
  %18 = getelementptr inbounds %"class.std::__1::function.1102", %"class.std::__1::function.1102"* %3, i64 0, i32 0, i32 0, i32 1, i64 0
  %19 = bitcast i8* %18 to i64*
  store i64 -6148914691236517206, i64* %19, align 8
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt8FunctionEEE11__call_implINS0_20__default_alloc_funcIZNS3_17AggressiveDCEPass22EliminateDeadFunctionsEvE4$_11S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)** %15, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass22EliminateDeadFunctionsEvE4$_11FbPNS5_8FunctionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %16, align 8
  %20 = bitcast %"class.std::__1::function.1102"* %3 to i64*
  store i64 %17, i64* %20, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %21, align 8
  %23 = call zeroext i1 @_ZN8spvtools3opt9IRContext25ProcessEntryPointCallTreeERNSt3__18functionIFbPNS0_8FunctionEEEE(%"class.spvtools::opt::IRContext"* %22, %"class.std::__1::function.1102"* nonnull dereferenceable(32) %3) #15
  %24 = bitcast %"class.spvtools::opt::UptrVectorIterator.1133"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #15
  %25 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator.1133", %"class.spvtools::opt::UptrVectorIterator.1133"* %4, i64 0, i32 0
  %26 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator.1133", %"class.spvtools::opt::UptrVectorIterator.1133"* %4, i64 0, i32 1, i32 0
  %27 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %21, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %27, i64 0, i32 4, i32 0, i32 0, i32 0
  %29 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %28, align 8
  %30 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %29, i64 0, i32 15
  %31 = bitcast %"class.std::__1::vector.26"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  store %"class.std::__1::vector.26"* %30, %"class.std::__1::vector.26"** %25, align 8
  %33 = bitcast %"class.std::__1::unique_ptr.28"** %26 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %29, i64 0, i32 15, i32 0, i32 1
  %35 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %34, align 8
  %36 = inttoptr i64 %32 to %"class.std::__1::unique_ptr.28"*
  %37 = icmp eq %"class.std::__1::unique_ptr.28"* %35, %36
  br i1 %37, label %38, label %63

38:                                               ; preds = %140, %1
  %39 = phi i8 [ 0, %1 ], [ %144, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #15
  %40 = and i8 %39, 1
  %41 = icmp ne i8 %40, 0
  %42 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %16, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %42, i64 0, i32 1
  %44 = load void (i8*)*, void (i8*)** %43, align 8
  %45 = icmp eq void (i8*)* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %38
  %47 = load i8*, i8** %14, align 8
  call void %44(i8* %47) #15
  br label %48

48:                                               ; preds = %38, %46
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #15
  %49 = load %"struct.std::__1::__hash_node_base.1115"*, %"struct.std::__1::__hash_node_base.1115"** %8, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.1115"* %49, null
  br i1 %50, label %57, label %51

51:                                               ; preds = %48, %51
  %52 = phi %"struct.std::__1::__hash_node_base.1115"* [ %54, %51 ], [ %49, %48 ]
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115", %"struct.std::__1::__hash_node_base.1115"* %52, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base.1115"*, %"struct.std::__1::__hash_node_base.1115"** %53, align 8
  %55 = bitcast %"struct.std::__1::__hash_node_base.1115"* %52 to i8*
  call void @_ZdlPv(i8* %55) #14
  %56 = icmp eq %"struct.std::__1::__hash_node_base.1115"* %54, null
  br i1 %56, label %57, label %51

57:                                               ; preds = %51, %48
  %58 = load %"struct.std::__1::__hash_node_base.1115"**, %"struct.std::__1::__hash_node_base.1115"*** %6, align 8
  store %"struct.std::__1::__hash_node_base.1115"** null, %"struct.std::__1::__hash_node_base.1115"*** %6, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base.1115"** %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = bitcast %"struct.std::__1::__hash_node_base.1115"** %58 to i8*
  call void @_ZdlPv(i8* %61) #14
  br label %62

62:                                               ; preds = %57, %60
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #15
  ret i1 %41

63:                                               ; preds = %1, %140
  %64 = phi %"class.std::__1::vector.26"* [ %141, %140 ], [ %30, %1 ]
  %65 = phi %"class.spvtools::opt::IRContext"* [ %142, %140 ], [ %27, %1 ]
  %66 = phi %"class.std::__1::unique_ptr.28"* [ %143, %140 ], [ %36, %1 ]
  %67 = phi i8 [ %144, %140 ], [ 0, %1 ]
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %66, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %68, align 8
  %70 = ptrtoint %"class.spvtools::opt::Function"* %69 to i64
  %71 = lshr i64 %70, 32
  %72 = shl i64 %70, 3
  %73 = and i64 %72, 4294967288
  %74 = add nuw nsw i64 %73, 8
  %75 = xor i64 %74, %71
  %76 = mul i64 %75, -7070675565921424023
  %77 = lshr i64 %76, 47
  %78 = xor i64 %76, %71
  %79 = xor i64 %78, %77
  %80 = mul i64 %79, -7070675565921424023
  %81 = lshr i64 %80, 47
  %82 = xor i64 %81, %80
  %83 = mul i64 %82, -7070675565921424023
  %84 = load i64, i64* %7, align 8
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %133, label %86

86:                                               ; preds = %63
  %87 = call i64 @llvm.ctpop.i64(i64 %84) #15, !range !11
  %88 = icmp ugt i64 %87, 1
  br i1 %88, label %92, label %89

89:                                               ; preds = %86
  %90 = add i64 %84, -1
  %91 = and i64 %83, %90
  br label %96

92:                                               ; preds = %86
  %93 = icmp ult i64 %83, %84
  br i1 %93, label %96, label %94

94:                                               ; preds = %92
  %95 = urem i64 %83, %84
  br label %96

96:                                               ; preds = %94, %92, %89
  %97 = phi i64 [ %91, %89 ], [ %95, %94 ], [ %83, %92 ]
  %98 = load %"struct.std::__1::__hash_node_base.1115"**, %"struct.std::__1::__hash_node_base.1115"*** %6, align 8
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115"*, %"struct.std::__1::__hash_node_base.1115"** %98, i64 %97
  %100 = load %"struct.std::__1::__hash_node_base.1115"*, %"struct.std::__1::__hash_node_base.1115"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.1115"* %100, null
  br i1 %101, label %133, label %102

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115", %"struct.std::__1::__hash_node_base.1115"* %100, i64 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base.1115"*, %"struct.std::__1::__hash_node_base.1115"** %103, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base.1115"* %104, null
  br i1 %105, label %133, label %106

106:                                              ; preds = %102
  %107 = add i64 %84, -1
  br label %108

108:                                              ; preds = %129, %106
  %109 = phi %"struct.std::__1::__hash_node_base.1115"* [ %104, %106 ], [ %131, %129 ]
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115", %"struct.std::__1::__hash_node_base.1115"* %109, i64 1
  %111 = bitcast %"struct.std::__1::__hash_node_base.1115"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = icmp eq i64 %83, %112
  br i1 %113, label %124, label %114

114:                                              ; preds = %108
  br i1 %88, label %117, label %115

115:                                              ; preds = %114
  %116 = and i64 %112, %107
  br label %121

117:                                              ; preds = %114
  %118 = icmp ult i64 %112, %84
  br i1 %118, label %121, label %119

119:                                              ; preds = %117
  %120 = urem i64 %112, %84
  br label %121

121:                                              ; preds = %119, %117, %115
  %122 = phi i64 [ %116, %115 ], [ %120, %119 ], [ %112, %117 ]
  %123 = icmp eq i64 %122, %97
  br i1 %123, label %129, label %133

124:                                              ; preds = %108
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115", %"struct.std::__1::__hash_node_base.1115"* %109, i64 2
  %126 = bitcast %"struct.std::__1::__hash_node_base.1115"* %125 to %"class.spvtools::opt::Function"**
  %127 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %126, align 8
  %128 = icmp eq %"class.spvtools::opt::Function"* %127, %69
  br i1 %128, label %138, label %129

129:                                              ; preds = %124, %121
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115", %"struct.std::__1::__hash_node_base.1115"* %109, i64 0, i32 0
  %131 = load %"struct.std::__1::__hash_node_base.1115"*, %"struct.std::__1::__hash_node_base.1115"** %130, align 8
  %132 = icmp eq %"struct.std::__1::__hash_node_base.1115"* %131, null
  br i1 %132, label %133, label %108

133:                                              ; preds = %129, %121, %96, %63, %102
  %134 = call { %"class.std::__1::vector.26"*, %"class.std::__1::unique_ptr.28"* } @_ZN8spvtools3opt26eliminatedeadfunctionsutil17EliminateFunctionEPNS0_9IRContextEPNS0_18UptrVectorIteratorINS0_8FunctionELb0EEE(%"class.spvtools::opt::IRContext"* %65, %"class.spvtools::opt::UptrVectorIterator.1133"* nonnull %4) #15
  %135 = extractvalue { %"class.std::__1::vector.26"*, %"class.std::__1::unique_ptr.28"* } %134, 0
  %136 = extractvalue { %"class.std::__1::vector.26"*, %"class.std::__1::unique_ptr.28"* } %134, 1
  store %"class.std::__1::vector.26"* %135, %"class.std::__1::vector.26"** %25, align 8
  %137 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %21, align 8
  br label %140

138:                                              ; preds = %124
  %139 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %66, i64 1
  br label %140

140:                                              ; preds = %138, %133
  %141 = phi %"class.std::__1::vector.26"* [ %135, %133 ], [ %64, %138 ]
  %142 = phi %"class.spvtools::opt::IRContext"* [ %137, %133 ], [ %65, %138 ]
  %143 = phi %"class.std::__1::unique_ptr.28"* [ %136, %133 ], [ %139, %138 ]
  %144 = phi i8 [ 1, %133 ], [ %67, %138 ]
  store %"class.std::__1::unique_ptr.28"* %143, %"class.std::__1::unique_ptr.28"** %26, align 8
  %145 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %142, i64 0, i32 4, i32 0, i32 0, i32 0
  %146 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %145, align 8
  %147 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %146, i64 0, i32 15
  %148 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %146, i64 0, i32 15, i32 0, i32 1
  %149 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %148, align 8
  %150 = icmp ne %"class.std::__1::vector.26"* %141, %147
  %151 = icmp ne %"class.std::__1::unique_ptr.28"* %143, %149
  %152 = or i1 %150, %151
  br i1 %152, label %63, label %38
}

declare zeroext i1 @_ZN8spvtools3opt9IRContext25ProcessEntryPointCallTreeERNSt3__18functionIFbPNS0_8FunctionEEEE(%"class.spvtools::opt::IRContext"*, %"class.std::__1::function.1102"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZN8spvtools3opt9IRContext18InvalidateAnalysesENS1_8AnalysisE(%"class.spvtools::opt::IRContext"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt17AggressiveDCEPass19ProcessGlobalValuesEv(%"class.spvtools::opt::AggressiveDCEPass"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.1017", align 8
  %3 = alloca %"class.spvtools::utils::SmallVector", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %8 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %8, i64 0, i32 10, i32 0, i32 1, i32 0, i32 1
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8, !noalias !29
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %10, null
  br i1 %11, label %43, label %12

12:                                               ; preds = %1, %39
  %13 = phi i8 [ %41, %39 ], [ 0, %1 ]
  %14 = phi %"class.spvtools::opt::Instruction"* [ %40, %39 ], [ %10, %1 ]
  br label %15

15:                                               ; preds = %12, %20
  %16 = phi %"class.spvtools::opt::Instruction"* [ %14, %12 ], [ %22, %20 ]
  %17 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %16, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 5
  br i1 %19, label %28, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %16, i64 0, i32 0, i32 1
  %22 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %21, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %22, i64 0, i32 0, i32 3
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp ne i8 %24, 0
  %26 = icmp eq %"class.spvtools::opt::Instruction"* %22, null
  %27 = or i1 %26, %25
  br i1 %27, label %43, label %15

28:                                               ; preds = %15
  %29 = tail call zeroext i1 @_ZN8spvtools3opt17AggressiveDCEPass12IsTargetDeadEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Instruction"* nonnull %16)
  br i1 %29, label %30, label %33

30:                                               ; preds = %28
  %31 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %32 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %31, %"class.spvtools::opt::Instruction"* nonnull %16) #15
  br label %39

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %16, i64 0, i32 0, i32 1
  %35 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %34, align 8
  %36 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %35, i64 0, i32 0, i32 3
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %43

39:                                               ; preds = %33, %30
  %40 = phi %"class.spvtools::opt::Instruction"* [ %32, %30 ], [ %35, %33 ]
  %41 = phi i8 [ 1, %30 ], [ %13, %33 ]
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %40, null
  br i1 %42, label %43, label %12

43:                                               ; preds = %33, %39, %20, %1
  %44 = phi i8 [ 0, %1 ], [ %13, %20 ], [ %13, %33 ], [ %41, %39 ]
  %45 = bitcast %"class.std::__1::vector.1017"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #15
  %46 = getelementptr inbounds %"class.std::__1::vector.1017", %"class.std::__1::vector.1017"* %2, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.std::__1::vector.1017", %"class.std::__1::vector.1017"* %2, i64 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.std::__1::vector.1017", %"class.std::__1::vector.1017"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 24, i1 false) #15
  %49 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %49, i64 0, i32 4, i32 0, i32 0, i32 0
  %51 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %51, i64 0, i32 13, i32 0, i32 1, i32 0, i32 1
  %53 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %51, i64 0, i32 13, i32 0, i32 1
  %54 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = inttoptr i64 %55 to %"class.spvtools::opt::Instruction"*
  %57 = icmp eq %"class.spvtools::opt::Instruction"* %53, %56
  br i1 %57, label %58, label %59

58:                                               ; preds = %43
  tail call fastcc void @_ZNSt3__16__sortIRN8spvtools3opt12_GLOBAL__N_114DecorationLessEPPNS2_11InstructionEEEvT0_S9_T_(%"class.spvtools::opt::Instruction"** null, %"class.spvtools::opt::Instruction"** null) #15
  br label %142

59:                                               ; preds = %43
  %60 = bitcast %"class.spvtools::opt::Instruction"*** %47 to i64*
  %61 = bitcast %"class.std::__1::vector.1017"* %2 to i64*
  %62 = bitcast %"class.spvtools::opt::Instruction"*** %48 to i64*
  br label %70

63:                                               ; preds = %130
  tail call fastcc void @_ZNSt3__16__sortIRN8spvtools3opt12_GLOBAL__N_114DecorationLessEPPNS2_11InstructionEEEvT0_S9_T_(%"class.spvtools::opt::Instruction"** %132, %"class.spvtools::opt::Instruction"** %131) #15
  %64 = icmp eq %"class.spvtools::opt::Instruction"** %132, %131
  br i1 %64, label %142, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 10
  %67 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %68 = bitcast i64** %67 to i64*
  %69 = bitcast %"class.spvtools::utils::BitVector"* %66 to i64*
  br label %175

70:                                               ; preds = %140, %59
  %71 = phi %"class.spvtools::opt::Instruction"** [ null, %59 ], [ %132, %140 ]
  %72 = phi i64 [ 0, %59 ], [ %133, %140 ]
  %73 = phi %"class.spvtools::opt::Instruction"** [ null, %59 ], [ %141, %140 ]
  %74 = phi %"class.spvtools::opt::Instruction"** [ null, %59 ], [ %131, %140 ]
  %75 = phi i64 [ %55, %59 ], [ %137, %140 ]
  %76 = icmp ult %"class.spvtools::opt::Instruction"** %74, %73
  %77 = ptrtoint %"class.spvtools::opt::Instruction"** %73 to i64
  br i1 %76, label %78, label %82

78:                                               ; preds = %70
  %79 = bitcast %"class.spvtools::opt::Instruction"** %74 to i64*
  store i64 %75, i64* %79, align 8
  %80 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %74, i64 1
  %81 = ptrtoint %"class.spvtools::opt::Instruction"** %80 to i64
  store i64 %81, i64* %60, align 8
  br label %130

82:                                               ; preds = %70
  %83 = ptrtoint %"class.spvtools::opt::Instruction"** %74 to i64
  %84 = load i64, i64* %61, align 8
  %85 = sub i64 %83, %84
  %86 = ashr exact i64 %85, 3
  %87 = add nsw i64 %86, 1
  %88 = icmp ugt i64 %87, 2305843009213693951
  br i1 %88, label %89, label %91

89:                                               ; preds = %82
  %90 = bitcast %"class.std::__1::vector.1017"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %90) #16
  unreachable

91:                                               ; preds = %82
  %92 = sub i64 %77, %84
  %93 = ashr exact i64 %92, 3
  %94 = icmp ult i64 %93, 1152921504606846975
  br i1 %94, label %95, label %103

95:                                               ; preds = %91
  %96 = ashr exact i64 %92, 2
  %97 = icmp ult i64 %96, %87
  %98 = select i1 %97, i64 %87, i64 %96
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %108, label %100

100:                                              ; preds = %95
  %101 = icmp ugt i64 %98, 2305843009213693951
  br i1 %101, label %102, label %103

102:                                              ; preds = %100
  tail call void @abort() #16
  unreachable

103:                                              ; preds = %100, %91
  %104 = phi i64 [ %98, %100 ], [ 2305843009213693951, %91 ]
  %105 = shl i64 %104, 3
  %106 = tail call i8* @_Znwm(i64 %105) #14
  %107 = bitcast i8* %106 to %"class.spvtools::opt::Instruction"**
  br label %108

108:                                              ; preds = %103, %95
  %109 = phi i64 [ %104, %103 ], [ 0, %95 ]
  %110 = phi %"class.spvtools::opt::Instruction"** [ %107, %103 ], [ null, %95 ]
  %111 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %110, i64 %86
  %112 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %110, i64 %109
  %113 = ptrtoint %"class.spvtools::opt::Instruction"** %112 to i64
  %114 = bitcast %"class.spvtools::opt::Instruction"** %111 to i64*
  store i64 %75, i64* %114, align 8
  %115 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, i64 1
  %116 = ptrtoint %"class.spvtools::opt::Instruction"** %115 to i64
  %117 = sub i64 %72, %84
  %118 = ashr exact i64 %117, 3
  %119 = sub nsw i64 0, %118
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, i64 %119
  %121 = ptrtoint %"class.spvtools::opt::Instruction"** %120 to i64
  %122 = icmp sgt i64 %117, 0
  br i1 %122, label %123, label %126

123:                                              ; preds = %108
  %124 = bitcast %"class.spvtools::opt::Instruction"** %120 to i8*
  %125 = inttoptr i64 %84 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 %117, i1 false) #15
  br label %126

126:                                              ; preds = %123, %108
  store i64 %121, i64* %61, align 8
  store i64 %116, i64* %60, align 8
  store i64 %113, i64* %62, align 8
  %127 = icmp eq i64 %84, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = inttoptr i64 %84 to i8*
  tail call void @_ZdlPv(i8* %129) #14
  br label %130

130:                                              ; preds = %78, %126, %128
  %131 = phi %"class.spvtools::opt::Instruction"** [ %80, %78 ], [ %115, %126 ], [ %115, %128 ]
  %132 = phi %"class.spvtools::opt::Instruction"** [ %71, %78 ], [ %120, %126 ], [ %120, %128 ]
  %133 = phi i64 [ %81, %78 ], [ %116, %126 ], [ %116, %128 ]
  %134 = inttoptr i64 %75 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %135 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %134, i64 0, i32 1
  %136 = bitcast %"class.spvtools::opt::Instruction"** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = inttoptr i64 %137 to %"class.spvtools::opt::Instruction"*
  %139 = icmp eq %"class.spvtools::opt::Instruction"* %53, %138
  br i1 %139, label %63, label %140

140:                                              ; preds = %130
  %141 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %48, align 8
  br label %70

142:                                              ; preds = %696, %58, %63
  %143 = phi i8 [ %44, %63 ], [ %44, %58 ], [ %697, %696 ]
  %144 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %145 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %144, i64 0, i32 4, i32 0, i32 0, i32 0
  %146 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %145, align 8
  %147 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %146, i64 0, i32 12, i32 0, i32 1, i32 0, i32 1
  %148 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %146, i64 0, i32 12, i32 0, i32 1
  %149 = bitcast %"class.spvtools::opt::Instruction"** %147 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = inttoptr i64 %150 to %"class.spvtools::opt::Instruction"*
  %152 = icmp eq %"class.spvtools::opt::Instruction"* %148, %151
  br i1 %152, label %704, label %153

153:                                              ; preds = %142
  %154 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 10
  %155 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %156 = bitcast i64** %155 to i64*
  %157 = bitcast %"class.spvtools::utils::BitVector"* %154 to i64*
  %158 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 12
  %159 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 12, i32 0, i32 1
  %160 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %161 = bitcast %"class.spvtools::opt::Instruction"*** %159 to i64*
  %162 = bitcast %"class.std::__1::vector.1017"* %158 to i64*
  %163 = bitcast %"class.spvtools::opt::Instruction"*** %160 to i64*
  %164 = getelementptr inbounds %"class.std::__1::vector.1017", %"class.std::__1::vector.1017"* %158, i64 0, i32 0, i32 0
  %165 = bitcast %"class.spvtools::utils::SmallVector"* %3 to i8*
  %166 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 0
  %167 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 1
  %168 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 2
  %169 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 3, i64 0
  %170 = bitcast i32** %168 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %171 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4
  %172 = bitcast %"class.std::__1::unique_ptr.0"* %171 to i64*
  %173 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %169 to i32*
  %174 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %725

175:                                              ; preds = %65, %696
  %176 = phi i8 [ %44, %65 ], [ %697, %696 ]
  %177 = phi %"class.spvtools::opt::Instruction"** [ %132, %65 ], [ %698, %696 ]
  %178 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %177, align 8
  %179 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %178, i64 0, i32 2
  %180 = load i32, i32* %179, align 8
  switch i32 %180, label %696 [
    i32 71, label %207
    i32 72, label %207
    i32 5632, label %207
    i32 5633, label %207
    i32 332, label %212
    i32 74, label %194
    i32 75, label %181
    i32 73, label %658
  ]

181:                                              ; preds = %175
  %182 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %178, i64 0, i32 6
  %183 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %178, i64 0, i32 6, i32 0, i32 1
  %184 = bitcast %"struct.spvtools::opt::Operand"** %183 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = bitcast %"class.std::__1::vector"* %182 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = sub i64 %185, %187
  %189 = sdiv exact i64 %188, 48
  %190 = trunc i64 %189 to i32
  %191 = icmp ugt i32 %190, 1
  br i1 %191, label %192, label %643

192:                                              ; preds = %181
  %193 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %178, i64 0, i32 6, i32 0, i32 0
  br label %464

194:                                              ; preds = %175
  %195 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %178, i64 0, i32 6
  %196 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %178, i64 0, i32 6, i32 0, i32 1
  %197 = bitcast %"struct.spvtools::opt::Operand"** %196 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"class.std::__1::vector"* %195 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = sub i64 %198, %200
  %202 = sdiv exact i64 %201, 48
  %203 = trunc i64 %202 to i32
  %204 = icmp ugt i32 %203, 1
  br i1 %204, label %205, label %446

205:                                              ; preds = %194
  %206 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %178, i64 0, i32 6, i32 0, i32 0
  br label %313

207:                                              ; preds = %175, %175, %175, %175
  %208 = tail call zeroext i1 @_ZN8spvtools3opt17AggressiveDCEPass12IsTargetDeadEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Instruction"* %178)
  br i1 %208, label %209, label %696

209:                                              ; preds = %207
  %210 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %211 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %210, %"class.spvtools::opt::Instruction"* %178) #15
  br label %696

212:                                              ; preds = %175
  %213 = tail call zeroext i1 @_ZN8spvtools3opt17AggressiveDCEPass12IsTargetDeadEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %0, %"class.spvtools::opt::Instruction"* %178)
  br i1 %213, label %214, label %217

214:                                              ; preds = %212
  %215 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %216 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %215, %"class.spvtools::opt::Instruction"* %178) #15
  br label %696

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %178, i64 0, i32 3
  %219 = load i8, i8* %218, align 4, !range !2
  %220 = icmp eq i8 %219, 0
  %221 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %178, i64 0, i32 4
  %222 = load i8, i8* %221, align 1, !range !2
  %223 = icmp eq i8 %222, 0
  %224 = select i1 %223, i32 1, i32 2
  %225 = xor i1 %223, true
  %226 = zext i1 %225 to i32
  %227 = select i1 %220, i32 %226, i32 %224
  %228 = add nuw nsw i32 %227, 1
  %229 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %178, i32 %228) #15
  %230 = icmp eq i32 %229, 5634
  br i1 %230, label %231, label %696

231:                                              ; preds = %217
  %232 = load i8, i8* %218, align 4, !range !2
  %233 = icmp eq i8 %232, 0
  %234 = load i8, i8* %221, align 1, !range !2
  %235 = icmp eq i8 %234, 0
  %236 = select i1 %235, i32 1, i32 2
  %237 = xor i1 %235, true
  %238 = zext i1 %237 to i32
  %239 = select i1 %233, i32 %238, i32 %236
  %240 = add nuw nsw i32 %239, 2
  %241 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %178, i32 %240) #15
  %242 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %243 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %242, i64 0, i32 11
  %244 = load i32, i32* %243, align 8
  %245 = and i32 %244, 1
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %271

247:                                              ; preds = %231
  %248 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %242, i64 0, i32 4, i32 0, i32 0, i32 0
  %249 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %248, align 8
  %250 = tail call i8* @_Znwm(i64 104) #14
  %251 = bitcast i8* %250 to %"class.spvtools::opt::analysis::DefUseManager"*
  %252 = getelementptr inbounds i8, i8* %250, i64 32
  %253 = bitcast i8* %252 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %250, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %253, align 4
  %254 = getelementptr inbounds i8, i8* %250, i64 48
  %255 = getelementptr inbounds i8, i8* %250, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %254, i8 0, i64 16, i1 false) #15
  %256 = bitcast i8* %255 to i8**
  store i8* %254, i8** %256, align 8
  %257 = getelementptr inbounds i8, i8* %250, i64 64
  %258 = getelementptr inbounds i8, i8* %250, i64 96
  %259 = bitcast i8* %258 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %257, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %259, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %251, %"class.spvtools::opt::Module"* %249) #15
  %260 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %242, i64 0, i32 6
  %261 = ptrtoint i8* %250 to i64
  %262 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %260, i64 0, i32 0, i32 0, i32 0
  %263 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %262, align 8
  %264 = bitcast %"class.std::__1::unique_ptr.62"* %260 to i64*
  store i64 %261, i64* %264, align 8
  %265 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %263, null
  br i1 %265, label %268, label %266

266:                                              ; preds = %247
  %267 = bitcast %"class.std::__1::unique_ptr.62"* %260 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %267, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %263) #15
  br label %268

268:                                              ; preds = %266, %247
  %269 = load i32, i32* %243, align 8
  %270 = or i32 %269, 1
  store i32 %270, i32* %243, align 8
  br label %271

271:                                              ; preds = %231, %268
  %272 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %242, i64 0, i32 6, i32 0, i32 0, i32 0
  %273 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %272, align 8
  %274 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %273, i32 %241) #15
  %275 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %274, i64 0, i32 5
  %276 = load i32, i32* %275, align 8
  %277 = lshr i32 %276, 6
  %278 = zext i32 %277 to i64
  %279 = load i64, i64* %68, align 8
  %280 = load i64, i64* %69, align 8
  %281 = sub i64 %279, %280
  %282 = ashr exact i64 %281, 3
  %283 = icmp ugt i64 %282, %278
  br i1 %283, label %284, label %293

284:                                              ; preds = %271
  %285 = inttoptr i64 %280 to i64*
  %286 = and i32 %276, 63
  %287 = getelementptr inbounds i64, i64* %285, i64 %278
  %288 = load i64, i64* %287, align 8
  %289 = zext i32 %286 to i64
  %290 = shl i64 1, %289
  %291 = and i64 %288, %290
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %293, label %696

293:                                              ; preds = %284, %271
  %294 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %274, i64 0, i32 2
  %295 = load i32, i32* %294, align 8
  %296 = tail call zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32 %295) #15
  br i1 %296, label %300, label %297

297:                                              ; preds = %293
  %298 = load i32, i32* %294, align 8
  %299 = icmp eq i32 %298, 255
  br i1 %299, label %300, label %307

300:                                              ; preds = %297, %293
  %301 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %302 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %301, %"class.spvtools::opt::Instruction"* %274) #15
  %303 = icmp eq %"class.spvtools::opt::BasicBlock"* %302, null
  br i1 %303, label %696, label %304

304:                                              ; preds = %300
  %305 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"* nonnull %302) #15
  %306 = icmp eq %"class.spvtools::opt::Instruction"* %305, null
  br i1 %306, label %696, label %307

307:                                              ; preds = %304, %297
  %308 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %309 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %308, %"class.spvtools::opt::Instruction"* %178) #15
  br label %696

310:                                              ; preds = %435
  %311 = and i8 %439, 1
  %312 = icmp eq i8 %311, 0
  br i1 %312, label %449, label %446

313:                                              ; preds = %205, %435
  %314 = phi i8 [ %176, %205 ], [ %440, %435 ]
  %315 = phi i8 [ 1, %205 ], [ %439, %435 ]
  %316 = phi i8 [ 0, %205 ], [ %438, %435 ]
  %317 = phi i32 [ 1, %205 ], [ %437, %435 ]
  %318 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %319 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %318, i64 0, i32 11
  %320 = load i32, i32* %319, align 8
  %321 = and i32 %320, 1
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %347

323:                                              ; preds = %313
  %324 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %318, i64 0, i32 4, i32 0, i32 0, i32 0
  %325 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %324, align 8
  %326 = tail call i8* @_Znwm(i64 104) #14
  %327 = bitcast i8* %326 to %"class.spvtools::opt::analysis::DefUseManager"*
  %328 = getelementptr inbounds i8, i8* %326, i64 32
  %329 = bitcast i8* %328 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %326, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %329, align 4
  %330 = getelementptr inbounds i8, i8* %326, i64 48
  %331 = getelementptr inbounds i8, i8* %326, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %330, i8 0, i64 16, i1 false) #15
  %332 = bitcast i8* %331 to i8**
  store i8* %330, i8** %332, align 8
  %333 = getelementptr inbounds i8, i8* %326, i64 64
  %334 = getelementptr inbounds i8, i8* %326, i64 96
  %335 = bitcast i8* %334 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %333, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %335, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %327, %"class.spvtools::opt::Module"* %325) #15
  %336 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %318, i64 0, i32 6
  %337 = ptrtoint i8* %326 to i64
  %338 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %336, i64 0, i32 0, i32 0, i32 0
  %339 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %338, align 8
  %340 = bitcast %"class.std::__1::unique_ptr.62"* %336 to i64*
  store i64 %337, i64* %340, align 8
  %341 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %339, null
  br i1 %341, label %344, label %342

342:                                              ; preds = %323
  %343 = bitcast %"class.std::__1::unique_ptr.62"* %336 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %343, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %339) #15
  br label %344

344:                                              ; preds = %342, %323
  %345 = load i32, i32* %319, align 8
  %346 = or i32 %345, 1
  store i32 %346, i32* %319, align 8
  br label %347

347:                                              ; preds = %313, %344
  %348 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %318, i64 0, i32 6, i32 0, i32 0, i32 0
  %349 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %348, align 8
  %350 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %178, i32 %317) #15
  %351 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %349, i32 %350) #15
  %352 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %351, i64 0, i32 5
  %353 = load i32, i32* %352, align 8
  %354 = lshr i32 %353, 6
  %355 = zext i32 %354 to i64
  %356 = load i64, i64* %68, align 8
  %357 = load i64, i64* %69, align 8
  %358 = sub i64 %356, %357
  %359 = ashr exact i64 %358, 3
  %360 = icmp ugt i64 %359, %355
  br i1 %360, label %361, label %370

361:                                              ; preds = %347
  %362 = inttoptr i64 %357 to i64*
  %363 = and i32 %353, 63
  %364 = getelementptr inbounds i64, i64* %362, i64 %355
  %365 = load i64, i64* %364, align 8
  %366 = zext i32 %363 to i64
  %367 = shl i64 1, %366
  %368 = and i64 %365, %367
  %369 = icmp eq i64 %368, 0
  br i1 %369, label %370, label %432

370:                                              ; preds = %361, %347
  %371 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %351, i64 0, i32 2
  %372 = load i32, i32* %371, align 8
  %373 = tail call zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32 %372) #15
  br i1 %373, label %377, label %374

374:                                              ; preds = %370
  %375 = load i32, i32* %371, align 8
  %376 = icmp eq i32 %375, 255
  br i1 %376, label %377, label %384

377:                                              ; preds = %374, %370
  %378 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %379 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %378, %"class.spvtools::opt::Instruction"* %351) #15
  %380 = icmp eq %"class.spvtools::opt::BasicBlock"* %379, null
  br i1 %380, label %432, label %381

381:                                              ; preds = %377
  %382 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"* nonnull %379) #15
  %383 = icmp eq %"class.spvtools::opt::Instruction"* %382, null
  br i1 %383, label %432, label %384

384:                                              ; preds = %381, %374
  %385 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %206, align 8
  %386 = zext i32 %317 to i64
  %387 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %385, i64 %386
  %388 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %387, i64 1
  %389 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %196, align 8
  %390 = icmp eq %"struct.spvtools::opt::Operand"* %388, %389
  br i1 %390, label %406, label %391

391:                                              ; preds = %384, %391
  %392 = phi %"struct.spvtools::opt::Operand"* [ %401, %391 ], [ %387, %384 ]
  %393 = phi %"struct.spvtools::opt::Operand"* [ %400, %391 ], [ %388, %384 ]
  %394 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %393, i64 0, i32 0
  %395 = load i32, i32* %394, align 8
  %396 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %392, i64 0, i32 0
  store i32 %395, i32* %396, align 8
  %397 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %392, i64 0, i32 1
  %398 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %393, i64 0, i32 1
  %399 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %397, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %398) #15
  %400 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %393, i64 1
  %401 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %392, i64 1
  %402 = icmp eq %"struct.spvtools::opt::Operand"* %400, %389
  br i1 %402, label %403, label %391

403:                                              ; preds = %391
  %404 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %196, align 8
  %405 = icmp eq %"struct.spvtools::opt::Operand"* %404, %401
  br i1 %405, label %429, label %406

406:                                              ; preds = %403, %384
  %407 = phi %"struct.spvtools::opt::Operand"* [ %401, %403 ], [ %387, %384 ]
  %408 = phi %"struct.spvtools::opt::Operand"* [ %404, %403 ], [ %388, %384 ]
  br label %409

409:                                              ; preds = %427, %406
  %410 = phi %"struct.spvtools::opt::Operand"* [ %411, %427 ], [ %408, %406 ]
  %411 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %410, i64 -1
  %412 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %410, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %412, align 8
  %413 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %410, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %414 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %413, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %413, align 8
  %415 = icmp eq %"class.std::__1::vector.3"* %414, null
  br i1 %415, label %427, label %416

416:                                              ; preds = %409
  %417 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %414, i64 0, i32 0, i32 0
  %418 = load i32*, i32** %417, align 8
  %419 = icmp eq i32* %418, null
  br i1 %419, label %425, label %420

420:                                              ; preds = %416
  %421 = ptrtoint i32* %418 to i64
  %422 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %414, i64 0, i32 0, i32 1
  %423 = bitcast i32** %422 to i64*
  store i64 %421, i64* %423, align 8
  %424 = bitcast i32* %418 to i8*
  tail call void @_ZdlPv(i8* %424) #14
  br label %425

425:                                              ; preds = %420, %416
  %426 = bitcast %"class.std::__1::vector.3"* %414 to i8*
  tail call void @_ZdlPv(i8* %426) #14
  br label %427

427:                                              ; preds = %425, %409
  %428 = icmp eq %"struct.spvtools::opt::Operand"* %411, %407
  br i1 %428, label %429, label %409

429:                                              ; preds = %427, %403
  %430 = phi %"struct.spvtools::opt::Operand"* [ %401, %403 ], [ %407, %427 ]
  store %"struct.spvtools::opt::Operand"* %430, %"struct.spvtools::opt::Operand"** %196, align 8
  %431 = ptrtoint %"struct.spvtools::opt::Operand"* %430 to i64
  br label %435

432:                                              ; preds = %377, %381, %361
  %433 = add nuw i32 %317, 1
  %434 = load i64, i64* %197, align 8
  br label %435

435:                                              ; preds = %432, %429
  %436 = phi i64 [ %431, %429 ], [ %434, %432 ]
  %437 = phi i32 [ %317, %429 ], [ %433, %432 ]
  %438 = phi i8 [ 1, %429 ], [ %316, %432 ]
  %439 = phi i8 [ %315, %429 ], [ 0, %432 ]
  %440 = phi i8 [ 1, %429 ], [ %314, %432 ]
  %441 = load i64, i64* %199, align 8
  %442 = sub i64 %436, %441
  %443 = sdiv exact i64 %442, 48
  %444 = trunc i64 %443 to i32
  %445 = icmp ult i32 %437, %444
  br i1 %445, label %313, label %310

446:                                              ; preds = %194, %310
  %447 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %448 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %447, %"class.spvtools::opt::Instruction"* %178) #15
  br label %696

449:                                              ; preds = %310
  %450 = and i8 %438, 1
  %451 = icmp eq i8 %450, 0
  br i1 %451, label %696, label %452

452:                                              ; preds = %449
  %453 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %454 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %453, i64 0, i32 11
  %455 = load i32, i32* %454, align 8
  %456 = and i32 %455, 1
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %696, label %458

458:                                              ; preds = %452
  %459 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %453, i64 0, i32 6, i32 0, i32 0, i32 0
  %460 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %459, align 8
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager12UpdateDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %460, %"class.spvtools::opt::Instruction"* %178) #15
  br label %696

461:                                              ; preds = %632
  %462 = and i8 %636, 1
  %463 = icmp eq i8 %462, 0
  br i1 %463, label %646, label %643

464:                                              ; preds = %192, %632
  %465 = phi i8 [ %176, %192 ], [ %637, %632 ]
  %466 = phi i8 [ 1, %192 ], [ %636, %632 ]
  %467 = phi i8 [ 0, %192 ], [ %635, %632 ]
  %468 = phi i32 [ 1, %192 ], [ %634, %632 ]
  %469 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %470 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %469, i64 0, i32 11
  %471 = load i32, i32* %470, align 8
  %472 = and i32 %471, 1
  %473 = icmp eq i32 %472, 0
  br i1 %473, label %474, label %498

474:                                              ; preds = %464
  %475 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %469, i64 0, i32 4, i32 0, i32 0, i32 0
  %476 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %475, align 8
  %477 = tail call i8* @_Znwm(i64 104) #14
  %478 = bitcast i8* %477 to %"class.spvtools::opt::analysis::DefUseManager"*
  %479 = getelementptr inbounds i8, i8* %477, i64 32
  %480 = bitcast i8* %479 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %477, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %480, align 4
  %481 = getelementptr inbounds i8, i8* %477, i64 48
  %482 = getelementptr inbounds i8, i8* %477, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %481, i8 0, i64 16, i1 false) #15
  %483 = bitcast i8* %482 to i8**
  store i8* %481, i8** %483, align 8
  %484 = getelementptr inbounds i8, i8* %477, i64 64
  %485 = getelementptr inbounds i8, i8* %477, i64 96
  %486 = bitcast i8* %485 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %484, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %486, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %478, %"class.spvtools::opt::Module"* %476) #15
  %487 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %469, i64 0, i32 6
  %488 = ptrtoint i8* %477 to i64
  %489 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %487, i64 0, i32 0, i32 0, i32 0
  %490 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %489, align 8
  %491 = bitcast %"class.std::__1::unique_ptr.62"* %487 to i64*
  store i64 %488, i64* %491, align 8
  %492 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %490, null
  br i1 %492, label %495, label %493

493:                                              ; preds = %474
  %494 = bitcast %"class.std::__1::unique_ptr.62"* %487 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %494, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %490) #15
  br label %495

495:                                              ; preds = %493, %474
  %496 = load i32, i32* %470, align 8
  %497 = or i32 %496, 1
  store i32 %497, i32* %470, align 8
  br label %498

498:                                              ; preds = %464, %495
  %499 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %469, i64 0, i32 6, i32 0, i32 0, i32 0
  %500 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %499, align 8
  %501 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %178, i32 %468) #15
  %502 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %500, i32 %501) #15
  %503 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %502, i64 0, i32 5
  %504 = load i32, i32* %503, align 8
  %505 = lshr i32 %504, 6
  %506 = zext i32 %505 to i64
  %507 = load i64, i64* %68, align 8
  %508 = load i64, i64* %69, align 8
  %509 = sub i64 %507, %508
  %510 = ashr exact i64 %509, 3
  %511 = icmp ugt i64 %510, %506
  br i1 %511, label %512, label %521

512:                                              ; preds = %498
  %513 = inttoptr i64 %508 to i64*
  %514 = and i32 %504, 63
  %515 = getelementptr inbounds i64, i64* %513, i64 %506
  %516 = load i64, i64* %515, align 8
  %517 = zext i32 %514 to i64
  %518 = shl i64 1, %517
  %519 = and i64 %516, %518
  %520 = icmp eq i64 %519, 0
  br i1 %520, label %521, label %629

521:                                              ; preds = %512, %498
  %522 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %502, i64 0, i32 2
  %523 = load i32, i32* %522, align 8
  %524 = tail call zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32 %523) #15
  br i1 %524, label %528, label %525

525:                                              ; preds = %521
  %526 = load i32, i32* %522, align 8
  %527 = icmp eq i32 %526, 255
  br i1 %527, label %528, label %535

528:                                              ; preds = %525, %521
  %529 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %530 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %529, %"class.spvtools::opt::Instruction"* %502) #15
  %531 = icmp eq %"class.spvtools::opt::BasicBlock"* %530, null
  br i1 %531, label %629, label %532

532:                                              ; preds = %528
  %533 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"* nonnull %530) #15
  %534 = icmp eq %"class.spvtools::opt::Instruction"* %533, null
  br i1 %534, label %629, label %535

535:                                              ; preds = %532, %525
  %536 = add nuw i32 %468, 1
  %537 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %193, align 8
  %538 = zext i32 %536 to i64
  %539 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %537, i64 %538
  %540 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %539, i64 1
  %541 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %183, align 8
  %542 = icmp eq %"struct.spvtools::opt::Operand"* %540, %541
  br i1 %542, label %558, label %543

543:                                              ; preds = %535, %543
  %544 = phi %"struct.spvtools::opt::Operand"* [ %553, %543 ], [ %539, %535 ]
  %545 = phi %"struct.spvtools::opt::Operand"* [ %552, %543 ], [ %540, %535 ]
  %546 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %545, i64 0, i32 0
  %547 = load i32, i32* %546, align 8
  %548 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %544, i64 0, i32 0
  store i32 %547, i32* %548, align 8
  %549 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %544, i64 0, i32 1
  %550 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %545, i64 0, i32 1
  %551 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %549, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %550) #15
  %552 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %545, i64 1
  %553 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %544, i64 1
  %554 = icmp eq %"struct.spvtools::opt::Operand"* %552, %541
  br i1 %554, label %555, label %543

555:                                              ; preds = %543
  %556 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %183, align 8
  %557 = icmp eq %"struct.spvtools::opt::Operand"* %556, %553
  br i1 %557, label %581, label %558

558:                                              ; preds = %555, %535
  %559 = phi %"struct.spvtools::opt::Operand"* [ %553, %555 ], [ %539, %535 ]
  %560 = phi %"struct.spvtools::opt::Operand"* [ %556, %555 ], [ %540, %535 ]
  br label %561

561:                                              ; preds = %579, %558
  %562 = phi %"struct.spvtools::opt::Operand"* [ %563, %579 ], [ %560, %558 ]
  %563 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %562, i64 -1
  %564 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %562, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %564, align 8
  %565 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %562, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %566 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %565, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %565, align 8
  %567 = icmp eq %"class.std::__1::vector.3"* %566, null
  br i1 %567, label %579, label %568

568:                                              ; preds = %561
  %569 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %566, i64 0, i32 0, i32 0
  %570 = load i32*, i32** %569, align 8
  %571 = icmp eq i32* %570, null
  br i1 %571, label %577, label %572

572:                                              ; preds = %568
  %573 = ptrtoint i32* %570 to i64
  %574 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %566, i64 0, i32 0, i32 1
  %575 = bitcast i32** %574 to i64*
  store i64 %573, i64* %575, align 8
  %576 = bitcast i32* %570 to i8*
  tail call void @_ZdlPv(i8* %576) #14
  br label %577

577:                                              ; preds = %572, %568
  %578 = bitcast %"class.std::__1::vector.3"* %566 to i8*
  tail call void @_ZdlPv(i8* %578) #14
  br label %579

579:                                              ; preds = %577, %561
  %580 = icmp eq %"struct.spvtools::opt::Operand"* %563, %559
  br i1 %580, label %581, label %561

581:                                              ; preds = %579, %555
  %582 = phi %"struct.spvtools::opt::Operand"* [ %553, %555 ], [ %559, %579 ]
  store %"struct.spvtools::opt::Operand"* %582, %"struct.spvtools::opt::Operand"** %183, align 8
  %583 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %193, align 8
  %584 = zext i32 %468 to i64
  %585 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %583, i64 %584
  %586 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %585, i64 1
  %587 = icmp eq %"struct.spvtools::opt::Operand"* %586, %582
  br i1 %587, label %603, label %588

588:                                              ; preds = %581, %588
  %589 = phi %"struct.spvtools::opt::Operand"* [ %598, %588 ], [ %585, %581 ]
  %590 = phi %"struct.spvtools::opt::Operand"* [ %597, %588 ], [ %586, %581 ]
  %591 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %590, i64 0, i32 0
  %592 = load i32, i32* %591, align 8
  %593 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %589, i64 0, i32 0
  store i32 %592, i32* %593, align 8
  %594 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %589, i64 0, i32 1
  %595 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %590, i64 0, i32 1
  %596 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %594, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %595) #15
  %597 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %590, i64 1
  %598 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %589, i64 1
  %599 = icmp eq %"struct.spvtools::opt::Operand"* %597, %582
  br i1 %599, label %600, label %588

600:                                              ; preds = %588
  %601 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %183, align 8
  %602 = icmp eq %"struct.spvtools::opt::Operand"* %601, %598
  br i1 %602, label %626, label %603

603:                                              ; preds = %600, %581
  %604 = phi %"struct.spvtools::opt::Operand"* [ %598, %600 ], [ %585, %581 ]
  %605 = phi %"struct.spvtools::opt::Operand"* [ %601, %600 ], [ %582, %581 ]
  br label %606

606:                                              ; preds = %624, %603
  %607 = phi %"struct.spvtools::opt::Operand"* [ %608, %624 ], [ %605, %603 ]
  %608 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %607, i64 -1
  %609 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %607, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %609, align 8
  %610 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %607, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %611 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %610, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %610, align 8
  %612 = icmp eq %"class.std::__1::vector.3"* %611, null
  br i1 %612, label %624, label %613

613:                                              ; preds = %606
  %614 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %611, i64 0, i32 0, i32 0
  %615 = load i32*, i32** %614, align 8
  %616 = icmp eq i32* %615, null
  br i1 %616, label %622, label %617

617:                                              ; preds = %613
  %618 = ptrtoint i32* %615 to i64
  %619 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %611, i64 0, i32 0, i32 1
  %620 = bitcast i32** %619 to i64*
  store i64 %618, i64* %620, align 8
  %621 = bitcast i32* %615 to i8*
  tail call void @_ZdlPv(i8* %621) #14
  br label %622

622:                                              ; preds = %617, %613
  %623 = bitcast %"class.std::__1::vector.3"* %611 to i8*
  tail call void @_ZdlPv(i8* %623) #14
  br label %624

624:                                              ; preds = %622, %606
  %625 = icmp eq %"struct.spvtools::opt::Operand"* %608, %604
  br i1 %625, label %626, label %606

626:                                              ; preds = %624, %600
  %627 = phi %"struct.spvtools::opt::Operand"* [ %598, %600 ], [ %604, %624 ]
  store %"struct.spvtools::opt::Operand"* %627, %"struct.spvtools::opt::Operand"** %183, align 8
  %628 = ptrtoint %"struct.spvtools::opt::Operand"* %627 to i64
  br label %632

629:                                              ; preds = %528, %532, %512
  %630 = add i32 %468, 2
  %631 = load i64, i64* %184, align 8
  br label %632

632:                                              ; preds = %629, %626
  %633 = phi i64 [ %628, %626 ], [ %631, %629 ]
  %634 = phi i32 [ %468, %626 ], [ %630, %629 ]
  %635 = phi i8 [ 1, %626 ], [ %467, %629 ]
  %636 = phi i8 [ %466, %626 ], [ 0, %629 ]
  %637 = phi i8 [ 1, %626 ], [ %465, %629 ]
  %638 = load i64, i64* %186, align 8
  %639 = sub i64 %633, %638
  %640 = sdiv exact i64 %639, 48
  %641 = trunc i64 %640 to i32
  %642 = icmp ult i32 %634, %641
  br i1 %642, label %464, label %461

643:                                              ; preds = %181, %461
  %644 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %645 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %644, %"class.spvtools::opt::Instruction"* %178) #15
  br label %696

646:                                              ; preds = %461
  %647 = and i8 %635, 1
  %648 = icmp eq i8 %647, 0
  br i1 %648, label %696, label %649

649:                                              ; preds = %646
  %650 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %651 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %650, i64 0, i32 11
  %652 = load i32, i32* %651, align 8
  %653 = and i32 %652, 1
  %654 = icmp eq i32 %653, 0
  br i1 %654, label %696, label %655

655:                                              ; preds = %649
  %656 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %650, i64 0, i32 6, i32 0, i32 0, i32 0
  %657 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %656, align 8
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager12UpdateDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %657, %"class.spvtools::opt::Instruction"* %178) #15
  br label %696

658:                                              ; preds = %175
  %659 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %660 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %659, i64 0, i32 11
  %661 = load i32, i32* %660, align 8
  %662 = and i32 %661, 1
  %663 = icmp eq i32 %662, 0
  br i1 %663, label %664, label %688

664:                                              ; preds = %658
  %665 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %659, i64 0, i32 4, i32 0, i32 0, i32 0
  %666 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %665, align 8
  %667 = tail call i8* @_Znwm(i64 104) #14
  %668 = bitcast i8* %667 to %"class.spvtools::opt::analysis::DefUseManager"*
  %669 = getelementptr inbounds i8, i8* %667, i64 32
  %670 = bitcast i8* %669 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %667, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %670, align 4
  %671 = getelementptr inbounds i8, i8* %667, i64 48
  %672 = getelementptr inbounds i8, i8* %667, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %671, i8 0, i64 16, i1 false) #15
  %673 = bitcast i8* %672 to i8**
  store i8* %671, i8** %673, align 8
  %674 = getelementptr inbounds i8, i8* %667, i64 64
  %675 = getelementptr inbounds i8, i8* %667, i64 96
  %676 = bitcast i8* %675 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %674, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %676, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %668, %"class.spvtools::opt::Module"* %666) #15
  %677 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %659, i64 0, i32 6
  %678 = ptrtoint i8* %667 to i64
  %679 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %677, i64 0, i32 0, i32 0, i32 0
  %680 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %679, align 8
  %681 = bitcast %"class.std::__1::unique_ptr.62"* %677 to i64*
  store i64 %678, i64* %681, align 8
  %682 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %680, null
  br i1 %682, label %685, label %683

683:                                              ; preds = %664
  %684 = bitcast %"class.std::__1::unique_ptr.62"* %677 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %684, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %680) #15
  br label %685

685:                                              ; preds = %683, %664
  %686 = load i32, i32* %660, align 8
  %687 = or i32 %686, 1
  store i32 %687, i32* %660, align 8
  br label %688

688:                                              ; preds = %658, %685
  %689 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %659, i64 0, i32 6, i32 0, i32 0, i32 0
  %690 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %689, align 8
  %691 = tail call i32 @_ZNK8spvtools3opt8analysis13DefUseManager8NumUsersEPKNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %690, %"class.spvtools::opt::Instruction"* %178) #15
  %692 = icmp eq i32 %691, 0
  br i1 %692, label %693, label %696

693:                                              ; preds = %688
  %694 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %695 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %694, %"class.spvtools::opt::Instruction"* %178) #15
  br label %696

696:                                              ; preds = %300, %304, %655, %649, %458, %452, %284, %643, %646, %446, %449, %307, %175, %688, %693, %214, %217, %207, %209
  %697 = phi i8 [ %176, %175 ], [ 1, %693 ], [ %176, %688 ], [ 1, %214 ], [ %176, %217 ], [ 1, %209 ], [ %176, %207 ], [ 1, %307 ], [ 1, %446 ], [ %440, %449 ], [ 1, %643 ], [ %637, %646 ], [ %176, %284 ], [ %440, %452 ], [ %440, %458 ], [ %637, %649 ], [ %637, %655 ], [ %176, %304 ], [ %176, %300 ]
  %698 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %177, i64 1
  %699 = icmp eq %"class.spvtools::opt::Instruction"** %698, %131
  br i1 %699, label %142, label %175

700:                                              ; preds = %947
  %701 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %702 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %701, i64 0, i32 4, i32 0, i32 0, i32 0
  %703 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %702, align 8
  br label %704

704:                                              ; preds = %700, %142
  %705 = phi %"class.spvtools::opt::Module"* [ %146, %142 ], [ %703, %700 ]
  %706 = phi i8 [ %143, %142 ], [ %948, %700 ]
  %707 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %705, i64 0, i32 14, i32 0, i32 1, i32 0, i32 1
  %708 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %705, i64 0, i32 14, i32 0, i32 1
  %709 = bitcast %"class.spvtools::opt::Instruction"** %707 to i64*
  %710 = load i64, i64* %709, align 8
  %711 = inttoptr i64 %710 to %"class.spvtools::opt::Instruction"*
  %712 = icmp eq %"class.spvtools::opt::Instruction"* %708, %711
  br i1 %712, label %959, label %713

713:                                              ; preds = %704
  %714 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 10
  %715 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %716 = bitcast i64** %715 to i64*
  %717 = bitcast %"class.spvtools::utils::BitVector"* %714 to i64*
  %718 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 12
  %719 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 12, i32 0, i32 1
  %720 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %721 = bitcast %"class.spvtools::opt::Instruction"*** %719 to i64*
  %722 = bitcast %"class.std::__1::vector.1017"* %718 to i64*
  %723 = bitcast %"class.spvtools::opt::Instruction"*** %720 to i64*
  %724 = getelementptr inbounds %"class.std::__1::vector.1017", %"class.std::__1::vector.1017"* %718, i64 0, i32 0, i32 0
  br label %965

725:                                              ; preds = %153, %947
  %726 = phi %"class.spvtools::opt::Instruction"* [ %151, %153 ], [ %953, %947 ]
  %727 = phi i64 [ %150, %153 ], [ %952, %947 ]
  %728 = phi i8 [ %143, %153 ], [ %948, %947 ]
  %729 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %726, i64 0, i32 5
  %730 = load i32, i32* %729, align 8
  %731 = lshr i32 %730, 6
  %732 = zext i32 %731 to i64
  %733 = load i64, i64* %156, align 8
  %734 = load i64, i64* %157, align 8
  %735 = sub i64 %733, %734
  %736 = ashr exact i64 %735, 3
  %737 = icmp ugt i64 %736, %732
  br i1 %737, label %738, label %747

738:                                              ; preds = %725
  %739 = inttoptr i64 %734 to i64*
  %740 = and i32 %730, 63
  %741 = getelementptr inbounds i64, i64* %739, i64 %732
  %742 = load i64, i64* %741, align 8
  %743 = zext i32 %740 to i64
  %744 = shl i64 1, %743
  %745 = and i64 %742, %744
  %746 = icmp eq i64 %745, 0
  br i1 %746, label %747, label %947

747:                                              ; preds = %738, %725
  %748 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %726, i64 0, i32 2
  %749 = load i32, i32* %748, align 8
  %750 = call zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32 %749) #15
  br i1 %750, label %754, label %751

751:                                              ; preds = %747
  %752 = load i32, i32* %748, align 8
  %753 = icmp eq i32 %752, 255
  br i1 %753, label %754, label %761

754:                                              ; preds = %751, %747
  %755 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %756 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %755, %"class.spvtools::opt::Instruction"* %726) #15
  %757 = icmp eq %"class.spvtools::opt::BasicBlock"* %756, null
  br i1 %757, label %947, label %758

758:                                              ; preds = %754
  %759 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"* nonnull %756) #15
  %760 = icmp eq %"class.spvtools::opt::Instruction"* %759, null
  br i1 %760, label %947, label %761

761:                                              ; preds = %758, %751
  %762 = call i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"* %726) #15
  %763 = icmp eq i32 %762, 18
  br i1 %763, label %764, label %885

764:                                              ; preds = %761
  %765 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %726, i32 12) #15
  %766 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %767 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %766, i64 0, i32 11
  %768 = load i32, i32* %767, align 8
  %769 = and i32 %768, 1
  %770 = icmp eq i32 %769, 0
  br i1 %770, label %771, label %795

771:                                              ; preds = %764
  %772 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %766, i64 0, i32 4, i32 0, i32 0, i32 0
  %773 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %772, align 8
  %774 = call i8* @_Znwm(i64 104) #14
  %775 = bitcast i8* %774 to %"class.spvtools::opt::analysis::DefUseManager"*
  %776 = getelementptr inbounds i8, i8* %774, i64 32
  %777 = bitcast i8* %776 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %774, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %777, align 4
  %778 = getelementptr inbounds i8, i8* %774, i64 48
  %779 = getelementptr inbounds i8, i8* %774, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %778, i8 0, i64 16, i1 false) #15
  %780 = bitcast i8* %779 to i8**
  store i8* %778, i8** %780, align 8
  %781 = getelementptr inbounds i8, i8* %774, i64 64
  %782 = getelementptr inbounds i8, i8* %774, i64 96
  %783 = bitcast i8* %782 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %781, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %783, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %775, %"class.spvtools::opt::Module"* %773) #15
  %784 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %766, i64 0, i32 6
  %785 = ptrtoint i8* %774 to i64
  %786 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %784, i64 0, i32 0, i32 0, i32 0
  %787 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %786, align 8
  %788 = bitcast %"class.std::__1::unique_ptr.62"* %784 to i64*
  store i64 %785, i64* %788, align 8
  %789 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %787, null
  br i1 %789, label %792, label %790

790:                                              ; preds = %771
  %791 = bitcast %"class.std::__1::unique_ptr.62"* %784 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %791, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %787) #15
  br label %792

792:                                              ; preds = %790, %771
  %793 = load i32, i32* %767, align 8
  %794 = or i32 %793, 1
  store i32 %794, i32* %767, align 8
  br label %795

795:                                              ; preds = %764, %792
  %796 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %766, i64 0, i32 6, i32 0, i32 0, i32 0
  %797 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %796, align 8
  %798 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %797, i32 %765) #15
  %799 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %798, i64 0, i32 5
  %800 = load i32, i32* %799, align 8
  %801 = lshr i32 %800, 6
  %802 = zext i32 %801 to i64
  %803 = load i64, i64* %156, align 8
  %804 = load i64, i64* %157, align 8
  %805 = sub i64 %803, %804
  %806 = ashr exact i64 %805, 3
  %807 = icmp ugt i64 %806, %802
  br i1 %807, label %808, label %817

808:                                              ; preds = %795
  %809 = inttoptr i64 %804 to i64*
  %810 = and i32 %800, 63
  %811 = getelementptr inbounds i64, i64* %809, i64 %802
  %812 = load i64, i64* %811, align 8
  %813 = zext i32 %810 to i64
  %814 = shl i64 1, %813
  %815 = and i64 %812, %814
  %816 = icmp eq i64 %815, 0
  br i1 %816, label %817, label %947

817:                                              ; preds = %808, %795
  %818 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %798, i64 0, i32 2
  %819 = load i32, i32* %818, align 8
  %820 = call zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32 %819) #15
  br i1 %820, label %824, label %821

821:                                              ; preds = %817
  %822 = load i32, i32* %818, align 8
  %823 = icmp eq i32 %822, 255
  br i1 %823, label %824, label %831

824:                                              ; preds = %821, %817
  %825 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %826 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %825, %"class.spvtools::opt::Instruction"* %798) #15
  %827 = icmp eq %"class.spvtools::opt::BasicBlock"* %826, null
  br i1 %827, label %947, label %828

828:                                              ; preds = %824
  %829 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"* nonnull %826) #15
  %830 = icmp eq %"class.spvtools::opt::Instruction"* %829, null
  br i1 %830, label %947, label %831

831:                                              ; preds = %828, %821
  %832 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  call void @_ZN8spvtools3opt9IRContext10ForgetUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %832, %"class.spvtools::opt::Instruction"* %726) #15
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %165) #15
  %833 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %834 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %833, i64 0, i32 11
  %835 = load i32, i32* %834, align 8
  %836 = and i32 %835, 65536
  %837 = icmp eq i32 %836, 0
  br i1 %837, label %838, label %852

838:                                              ; preds = %831
  %839 = call i8* @_Znwm(i64 232) #14
  %840 = bitcast i8* %839 to %"class.spvtools::opt::analysis::DebugInfoManager"*
  call void @_ZN8spvtools3opt8analysis16DebugInfoManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %840, %"class.spvtools::opt::IRContext"* %833) #15
  %841 = ptrtoint i8* %839 to i64
  %842 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %833, i64 0, i32 21
  %843 = getelementptr inbounds %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.593"* %842, i64 0, i32 0, i32 0, i32 0
  %844 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %843, align 8
  %845 = bitcast %"class.std::__1::unique_ptr.593"* %842 to i64*
  store i64 %841, i64* %845, align 8
  %846 = icmp eq %"class.spvtools::opt::analysis::DebugInfoManager"* %844, null
  br i1 %846, label %849, label %847

847:                                              ; preds = %838
  call void @_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %844) #15
  %848 = bitcast %"class.spvtools::opt::analysis::DebugInfoManager"* %844 to i8*
  call void @_ZdlPv(i8* %848) #14
  br label %849

849:                                              ; preds = %847, %838
  %850 = load i32, i32* %834, align 8
  %851 = or i32 %850, 65536
  store i32 %851, i32* %834, align 8
  br label %852

852:                                              ; preds = %831, %849
  %853 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %833, i64 0, i32 21, i32 0, i32 0, i32 0
  %854 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %853, align 8
  %855 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis16DebugInfoManager16GetDebugInfoNoneEv(%"class.spvtools::opt::analysis::DebugInfoManager"* %854) #15
  %856 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %855, i64 0, i32 4
  %857 = load i8, i8* %856, align 1, !range !2
  %858 = icmp eq i8 %857, 0
  br i1 %858, label %864, label %859

859:                                              ; preds = %852
  %860 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %855, i64 0, i32 3
  %861 = load i8, i8* %860, align 4, !range !2
  %862 = zext i8 %861 to i32
  %863 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %855, i32 %862) #15
  br label %864

864:                                              ; preds = %852, %859
  %865 = phi i32 [ %863, %859 ], [ 0, %852 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %166, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %169, %"struct.std::__1::aligned_storage<4, 4>::type"** %170, align 8
  store i64 0, i64* %172, align 8
  store i64 1, i64* %167, align 8
  store i32 %865, i32* %173, align 8
  %866 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %726, i64 0, i32 6, i32 0, i32 0
  %867 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %866, align 8
  %868 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %867, i64 12, i32 1
  %869 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %868, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %3) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %166, align 8
  %870 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %174, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %174, align 8
  %871 = icmp eq %"class.std::__1::vector.3"* %870, null
  br i1 %871, label %883, label %872

872:                                              ; preds = %864
  %873 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %870, i64 0, i32 0, i32 0
  %874 = load i32*, i32** %873, align 8
  %875 = icmp eq i32* %874, null
  br i1 %875, label %881, label %876

876:                                              ; preds = %872
  %877 = ptrtoint i32* %874 to i64
  %878 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %870, i64 0, i32 0, i32 1
  %879 = bitcast i32** %878 to i64*
  store i64 %877, i64* %879, align 8
  %880 = bitcast i32* %874 to i8*
  call void @_ZdlPv(i8* %880) #14
  br label %881

881:                                              ; preds = %876, %872
  %882 = bitcast %"class.std::__1::vector.3"* %870 to i8*
  call void @_ZdlPv(i8* %882) #14
  br label %883

883:                                              ; preds = %864, %881
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %165) #15
  %884 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %884, %"class.spvtools::opt::Instruction"* %726) #15
  br label %947

885:                                              ; preds = %761
  %886 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %159, align 8
  %887 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %160, align 8
  %888 = icmp ult %"class.spvtools::opt::Instruction"** %886, %887
  %889 = ptrtoint %"class.spvtools::opt::Instruction"** %887 to i64
  br i1 %888, label %890, label %894

890:                                              ; preds = %885
  %891 = bitcast %"class.spvtools::opt::Instruction"** %886 to i64*
  store i64 %727, i64* %891, align 8
  %892 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %886, i64 1
  %893 = ptrtoint %"class.spvtools::opt::Instruction"** %892 to i64
  store i64 %893, i64* %161, align 8
  br label %947

894:                                              ; preds = %885
  %895 = ptrtoint %"class.spvtools::opt::Instruction"** %886 to i64
  %896 = load i64, i64* %162, align 8
  %897 = sub i64 %895, %896
  %898 = ashr exact i64 %897, 3
  %899 = add nsw i64 %898, 1
  %900 = icmp ugt i64 %899, 2305843009213693951
  br i1 %900, label %901, label %903

901:                                              ; preds = %894
  %902 = bitcast %"class.std::__1::vector.1017"* %158 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %902) #16
  unreachable

903:                                              ; preds = %894
  %904 = sub i64 %889, %896
  %905 = ashr exact i64 %904, 3
  %906 = icmp ult i64 %905, 1152921504606846975
  br i1 %906, label %907, label %915

907:                                              ; preds = %903
  %908 = ashr exact i64 %904, 2
  %909 = icmp ult i64 %908, %899
  %910 = select i1 %909, i64 %899, i64 %908
  %911 = icmp eq i64 %910, 0
  br i1 %911, label %920, label %912

912:                                              ; preds = %907
  %913 = icmp ugt i64 %910, 2305843009213693951
  br i1 %913, label %914, label %915

914:                                              ; preds = %912
  call void @abort() #16
  unreachable

915:                                              ; preds = %912, %903
  %916 = phi i64 [ %910, %912 ], [ 2305843009213693951, %903 ]
  %917 = shl i64 %916, 3
  %918 = call i8* @_Znwm(i64 %917) #14
  %919 = bitcast i8* %918 to %"class.spvtools::opt::Instruction"**
  br label %920

920:                                              ; preds = %915, %907
  %921 = phi i64 [ %916, %915 ], [ 0, %907 ]
  %922 = phi %"class.spvtools::opt::Instruction"** [ %919, %915 ], [ null, %907 ]
  %923 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %922, i64 %898
  %924 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %922, i64 %921
  %925 = ptrtoint %"class.spvtools::opt::Instruction"** %924 to i64
  %926 = bitcast %"class.spvtools::opt::Instruction"** %923 to i64*
  store i64 %727, i64* %926, align 8
  %927 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %923, i64 1
  %928 = ptrtoint %"class.spvtools::opt::Instruction"** %927 to i64
  %929 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %164, align 8
  %930 = load i64, i64* %161, align 8
  %931 = ptrtoint %"class.spvtools::opt::Instruction"** %929 to i64
  %932 = sub i64 %930, %931
  %933 = ashr exact i64 %932, 3
  %934 = sub nsw i64 0, %933
  %935 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %923, i64 %934
  %936 = ptrtoint %"class.spvtools::opt::Instruction"** %935 to i64
  %937 = icmp sgt i64 %932, 0
  br i1 %937, label %938, label %942

938:                                              ; preds = %920
  %939 = bitcast %"class.spvtools::opt::Instruction"** %935 to i8*
  %940 = bitcast %"class.spvtools::opt::Instruction"** %929 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %939, i8* align 8 %940, i64 %932, i1 false) #15
  %941 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %164, align 8
  br label %942

942:                                              ; preds = %938, %920
  %943 = phi %"class.spvtools::opt::Instruction"** [ %929, %920 ], [ %941, %938 ]
  store i64 %936, i64* %162, align 8
  store i64 %928, i64* %161, align 8
  store i64 %925, i64* %163, align 8
  %944 = icmp eq %"class.spvtools::opt::Instruction"** %943, null
  br i1 %944, label %947, label %945

945:                                              ; preds = %942
  %946 = bitcast %"class.spvtools::opt::Instruction"** %943 to i8*
  call void @_ZdlPv(i8* %946) #14
  br label %947

947:                                              ; preds = %824, %828, %754, %758, %945, %942, %890, %808, %738, %883
  %948 = phi i8 [ %728, %883 ], [ %728, %738 ], [ %728, %808 ], [ 1, %890 ], [ 1, %942 ], [ 1, %945 ], [ %728, %758 ], [ %728, %754 ], [ %728, %828 ], [ %728, %824 ]
  %949 = inttoptr i64 %727 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %950 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %949, i64 0, i32 1
  %951 = bitcast %"class.spvtools::opt::Instruction"** %950 to i64*
  %952 = load i64, i64* %951, align 8
  %953 = inttoptr i64 %952 to %"class.spvtools::opt::Instruction"*
  %954 = icmp eq %"class.spvtools::opt::Instruction"* %148, %953
  br i1 %954, label %700, label %725

955:                                              ; preds = %1145
  %956 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %957 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %956, i64 0, i32 4, i32 0, i32 0, i32 0
  %958 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %957, align 8
  br label %959

959:                                              ; preds = %955, %704
  %960 = phi %"class.spvtools::opt::Module"* [ %705, %704 ], [ %958, %955 ]
  %961 = phi i8 [ %706, %704 ], [ %1146, %955 ]
  %962 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %960, i64 0, i32 0, i32 1
  %963 = load i32, i32* %962, align 4
  %964 = icmp ugt i32 %963, 66559
  br i1 %964, label %1153, label %1454

965:                                              ; preds = %713, %1145
  %966 = phi %"class.spvtools::opt::Instruction"* [ %711, %713 ], [ %1151, %1145 ]
  %967 = phi i64 [ %710, %713 ], [ %1150, %1145 ]
  %968 = phi i8 [ %706, %713 ], [ %1146, %1145 ]
  %969 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %966, i64 0, i32 5
  %970 = load i32, i32* %969, align 8
  %971 = lshr i32 %970, 6
  %972 = zext i32 %971 to i64
  %973 = load i64, i64* %716, align 8
  %974 = load i64, i64* %717, align 8
  %975 = sub i64 %973, %974
  %976 = ashr exact i64 %975, 3
  %977 = icmp ugt i64 %976, %972
  br i1 %977, label %978, label %987

978:                                              ; preds = %965
  %979 = inttoptr i64 %974 to i64*
  %980 = and i32 %970, 63
  %981 = getelementptr inbounds i64, i64* %979, i64 %972
  %982 = load i64, i64* %981, align 8
  %983 = zext i32 %980 to i64
  %984 = shl i64 1, %983
  %985 = and i64 %982, %984
  %986 = icmp eq i64 %985, 0
  br i1 %986, label %987, label %1145

987:                                              ; preds = %978, %965
  %988 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %966, i64 0, i32 2
  %989 = load i32, i32* %988, align 8
  %990 = call zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32 %989) #15
  br i1 %990, label %994, label %991

991:                                              ; preds = %987
  %992 = load i32, i32* %988, align 8
  %993 = icmp eq i32 %992, 255
  br i1 %993, label %994, label %1003

994:                                              ; preds = %991, %987
  %995 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %996 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %995, %"class.spvtools::opt::Instruction"* %966) #15
  %997 = icmp eq %"class.spvtools::opt::BasicBlock"* %996, null
  br i1 %997, label %1145, label %998

998:                                              ; preds = %994
  %999 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"* nonnull %996) #15
  %1000 = icmp eq %"class.spvtools::opt::Instruction"* %999, null
  br i1 %1000, label %1145, label %1001

1001:                                             ; preds = %998
  %1002 = load i32, i32* %988, align 8
  br label %1003

1003:                                             ; preds = %1001, %991
  %1004 = phi i32 [ %1002, %1001 ], [ %992, %991 ]
  %1005 = icmp eq i32 %1004, 39
  br i1 %1005, label %1006, label %1083

1006:                                             ; preds = %1003
  %1007 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %966, i64 0, i32 3
  %1008 = load i8, i8* %1007, align 4, !range !2
  %1009 = icmp eq i8 %1008, 0
  %1010 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %966, i64 0, i32 4
  %1011 = load i8, i8* %1010, align 1, !range !2
  %1012 = icmp eq i8 %1011, 0
  %1013 = select i1 %1012, i32 1, i32 2
  %1014 = xor i1 %1012, true
  %1015 = zext i1 %1014 to i32
  %1016 = select i1 %1009, i32 %1015, i32 %1013
  %1017 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %966, i32 %1016) #15
  %1018 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %1019 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1018, i64 0, i32 11
  %1020 = load i32, i32* %1019, align 8
  %1021 = and i32 %1020, 1
  %1022 = icmp eq i32 %1021, 0
  br i1 %1022, label %1023, label %1047

1023:                                             ; preds = %1006
  %1024 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1018, i64 0, i32 4, i32 0, i32 0, i32 0
  %1025 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %1024, align 8
  %1026 = call i8* @_Znwm(i64 104) #14
  %1027 = bitcast i8* %1026 to %"class.spvtools::opt::analysis::DefUseManager"*
  %1028 = getelementptr inbounds i8, i8* %1026, i64 32
  %1029 = bitcast i8* %1028 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1026, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %1029, align 4
  %1030 = getelementptr inbounds i8, i8* %1026, i64 48
  %1031 = getelementptr inbounds i8, i8* %1026, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %1030, i8 0, i64 16, i1 false) #15
  %1032 = bitcast i8* %1031 to i8**
  store i8* %1030, i8** %1032, align 8
  %1033 = getelementptr inbounds i8, i8* %1026, i64 64
  %1034 = getelementptr inbounds i8, i8* %1026, i64 96
  %1035 = bitcast i8* %1034 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1033, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %1035, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %1027, %"class.spvtools::opt::Module"* %1025) #15
  %1036 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1018, i64 0, i32 6
  %1037 = ptrtoint i8* %1026 to i64
  %1038 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %1036, i64 0, i32 0, i32 0, i32 0
  %1039 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %1038, align 8
  %1040 = bitcast %"class.std::__1::unique_ptr.62"* %1036 to i64*
  store i64 %1037, i64* %1040, align 8
  %1041 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1039, null
  br i1 %1041, label %1044, label %1042

1042:                                             ; preds = %1023
  %1043 = bitcast %"class.std::__1::unique_ptr.62"* %1036 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %1043, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %1039) #15
  br label %1044

1044:                                             ; preds = %1042, %1023
  %1045 = load i32, i32* %1019, align 8
  %1046 = or i32 %1045, 1
  store i32 %1046, i32* %1019, align 8
  br label %1047

1047:                                             ; preds = %1006, %1044
  %1048 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1018, i64 0, i32 6, i32 0, i32 0, i32 0
  %1049 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %1048, align 8
  %1050 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %1049, i32 %1017) #15
  %1051 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1050, i64 0, i32 5
  %1052 = load i32, i32* %1051, align 8
  %1053 = lshr i32 %1052, 6
  %1054 = zext i32 %1053 to i64
  %1055 = load i64, i64* %716, align 8
  %1056 = load i64, i64* %717, align 8
  %1057 = sub i64 %1055, %1056
  %1058 = ashr exact i64 %1057, 3
  %1059 = icmp ugt i64 %1058, %1054
  br i1 %1059, label %1060, label %1069

1060:                                             ; preds = %1047
  %1061 = inttoptr i64 %1056 to i64*
  %1062 = and i32 %1052, 63
  %1063 = getelementptr inbounds i64, i64* %1061, i64 %1054
  %1064 = load i64, i64* %1063, align 8
  %1065 = zext i32 %1062 to i64
  %1066 = shl i64 1, %1065
  %1067 = and i64 %1064, %1066
  %1068 = icmp eq i64 %1067, 0
  br i1 %1068, label %1069, label %1145

1069:                                             ; preds = %1060, %1047
  %1070 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1050, i64 0, i32 2
  %1071 = load i32, i32* %1070, align 8
  %1072 = call zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32 %1071) #15
  br i1 %1072, label %1076, label %1073

1073:                                             ; preds = %1069
  %1074 = load i32, i32* %1070, align 8
  %1075 = icmp eq i32 %1074, 255
  br i1 %1075, label %1076, label %1083

1076:                                             ; preds = %1073, %1069
  %1077 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %1078 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %1077, %"class.spvtools::opt::Instruction"* %1050) #15
  %1079 = icmp eq %"class.spvtools::opt::BasicBlock"* %1078, null
  br i1 %1079, label %1145, label %1080

1080:                                             ; preds = %1076
  %1081 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"* nonnull %1078) #15
  %1082 = icmp eq %"class.spvtools::opt::Instruction"* %1081, null
  br i1 %1082, label %1145, label %1083

1083:                                             ; preds = %1073, %1080, %1003
  %1084 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %719, align 8
  %1085 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %720, align 8
  %1086 = icmp ult %"class.spvtools::opt::Instruction"** %1084, %1085
  %1087 = ptrtoint %"class.spvtools::opt::Instruction"** %1085 to i64
  br i1 %1086, label %1088, label %1092

1088:                                             ; preds = %1083
  %1089 = bitcast %"class.spvtools::opt::Instruction"** %1084 to i64*
  store i64 %967, i64* %1089, align 8
  %1090 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1084, i64 1
  %1091 = ptrtoint %"class.spvtools::opt::Instruction"** %1090 to i64
  store i64 %1091, i64* %721, align 8
  br label %1145

1092:                                             ; preds = %1083
  %1093 = ptrtoint %"class.spvtools::opt::Instruction"** %1084 to i64
  %1094 = load i64, i64* %722, align 8
  %1095 = sub i64 %1093, %1094
  %1096 = ashr exact i64 %1095, 3
  %1097 = add nsw i64 %1096, 1
  %1098 = icmp ugt i64 %1097, 2305843009213693951
  br i1 %1098, label %1099, label %1101

1099:                                             ; preds = %1092
  %1100 = bitcast %"class.std::__1::vector.1017"* %718 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1100) #16
  unreachable

1101:                                             ; preds = %1092
  %1102 = sub i64 %1087, %1094
  %1103 = ashr exact i64 %1102, 3
  %1104 = icmp ult i64 %1103, 1152921504606846975
  br i1 %1104, label %1105, label %1113

1105:                                             ; preds = %1101
  %1106 = ashr exact i64 %1102, 2
  %1107 = icmp ult i64 %1106, %1097
  %1108 = select i1 %1107, i64 %1097, i64 %1106
  %1109 = icmp eq i64 %1108, 0
  br i1 %1109, label %1118, label %1110

1110:                                             ; preds = %1105
  %1111 = icmp ugt i64 %1108, 2305843009213693951
  br i1 %1111, label %1112, label %1113

1112:                                             ; preds = %1110
  call void @abort() #16
  unreachable

1113:                                             ; preds = %1110, %1101
  %1114 = phi i64 [ %1108, %1110 ], [ 2305843009213693951, %1101 ]
  %1115 = shl i64 %1114, 3
  %1116 = call i8* @_Znwm(i64 %1115) #14
  %1117 = bitcast i8* %1116 to %"class.spvtools::opt::Instruction"**
  br label %1118

1118:                                             ; preds = %1113, %1105
  %1119 = phi i64 [ %1114, %1113 ], [ 0, %1105 ]
  %1120 = phi %"class.spvtools::opt::Instruction"** [ %1117, %1113 ], [ null, %1105 ]
  %1121 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1120, i64 %1096
  %1122 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1120, i64 %1119
  %1123 = ptrtoint %"class.spvtools::opt::Instruction"** %1122 to i64
  %1124 = bitcast %"class.spvtools::opt::Instruction"** %1121 to i64*
  store i64 %967, i64* %1124, align 8
  %1125 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1121, i64 1
  %1126 = ptrtoint %"class.spvtools::opt::Instruction"** %1125 to i64
  %1127 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %724, align 8
  %1128 = load i64, i64* %721, align 8
  %1129 = ptrtoint %"class.spvtools::opt::Instruction"** %1127 to i64
  %1130 = sub i64 %1128, %1129
  %1131 = ashr exact i64 %1130, 3
  %1132 = sub nsw i64 0, %1131
  %1133 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1121, i64 %1132
  %1134 = ptrtoint %"class.spvtools::opt::Instruction"** %1133 to i64
  %1135 = icmp sgt i64 %1130, 0
  br i1 %1135, label %1136, label %1140

1136:                                             ; preds = %1118
  %1137 = bitcast %"class.spvtools::opt::Instruction"** %1133 to i8*
  %1138 = bitcast %"class.spvtools::opt::Instruction"** %1127 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1137, i8* align 8 %1138, i64 %1130, i1 false) #15
  %1139 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %724, align 8
  br label %1140

1140:                                             ; preds = %1136, %1118
  %1141 = phi %"class.spvtools::opt::Instruction"** [ %1127, %1118 ], [ %1139, %1136 ]
  store i64 %1134, i64* %722, align 8
  store i64 %1126, i64* %721, align 8
  store i64 %1123, i64* %723, align 8
  %1142 = icmp eq %"class.spvtools::opt::Instruction"** %1141, null
  br i1 %1142, label %1145, label %1143

1143:                                             ; preds = %1140
  %1144 = bitcast %"class.spvtools::opt::Instruction"** %1141 to i8*
  call void @_ZdlPv(i8* %1144) #14
  br label %1145

1145:                                             ; preds = %1076, %1080, %994, %998, %1143, %1140, %1088, %1060, %978
  %1146 = phi i8 [ %968, %978 ], [ %968, %1060 ], [ 1, %1088 ], [ 1, %1140 ], [ 1, %1143 ], [ %968, %998 ], [ %968, %994 ], [ %968, %1080 ], [ %968, %1076 ]
  %1147 = inttoptr i64 %967 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %1148 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %1147, i64 0, i32 1
  %1149 = bitcast %"class.spvtools::opt::Instruction"** %1148 to i64*
  %1150 = load i64, i64* %1149, align 8
  %1151 = inttoptr i64 %1150 to %"class.spvtools::opt::Instruction"*
  %1152 = icmp eq %"class.spvtools::opt::Instruction"* %708, %1151
  br i1 %1152, label %955, label %965

1153:                                             ; preds = %959
  %1154 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %960, i64 0, i32 7, i32 0, i32 1, i32 0, i32 1
  %1155 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %960, i64 0, i32 7, i32 0, i32 1
  %1156 = bitcast %"class.spvtools::opt::Instruction"** %1154 to i64*
  %1157 = load i64, i64* %1156, align 8
  %1158 = inttoptr i64 %1157 to %"class.spvtools::opt::Instruction"*
  %1159 = icmp eq %"class.spvtools::opt::Instruction"* %1155, %1158
  br i1 %1159, label %1454, label %1160

1160:                                             ; preds = %1153
  %1161 = bitcast %"class.std::__1::vector"* %4 to i8*
  %1162 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %1163 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %1164 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %1165 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 10
  %1166 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %1167 = bitcast i64** %1166 to i64*
  %1168 = bitcast %"class.spvtools::utils::BitVector"* %1165 to i64*
  %1169 = bitcast %"struct.spvtools::opt::Operand"** %1163 to i64*
  %1170 = bitcast %"class.std::__1::vector"* %4 to i64*
  %1171 = bitcast %"class.std::__1::vector"* %4 to i8**
  br label %1172

1172:                                             ; preds = %1160, %1447
  %1173 = phi %"class.spvtools::opt::Instruction"* [ %1158, %1160 ], [ %1452, %1447 ]
  %1174 = phi i64 [ %1157, %1160 ], [ %1451, %1447 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1161) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1161, i8 0, i64 24, i1 false) #15
  %1175 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1173, i64 0, i32 6
  %1176 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1173, i64 0, i32 6, i32 0, i32 1
  %1177 = bitcast %"struct.spvtools::opt::Operand"** %1176 to i64*
  %1178 = bitcast %"class.std::__1::vector"* %1175 to i64*
  %1179 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1173, i64 0, i32 3
  %1180 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1173, i64 0, i32 4
  %1181 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1173, i64 0, i32 6, i32 0, i32 0
  br label %1182

1182:                                             ; preds = %1346, %1172
  %1183 = phi i32 [ 0, %1172 ], [ %1347, %1346 ]
  %1184 = load i64, i64* %1177, align 8
  %1185 = load i64, i64* %1178, align 8
  %1186 = sub i64 %1184, %1185
  %1187 = sdiv exact i64 %1186, 48
  %1188 = load i8, i8* %1179, align 4, !range !2
  %1189 = icmp eq i8 %1188, 0
  %1190 = load i8, i8* %1180, align 1, !range !2
  %1191 = icmp eq i8 %1190, 0
  %1192 = select i1 %1191, i32 1, i32 2
  %1193 = xor i1 %1191, true
  %1194 = zext i1 %1193 to i32
  %1195 = select i1 %1189, i32 %1194, i32 %1192
  %1196 = trunc i64 %1187 to i32
  %1197 = sub i32 %1196, %1195
  %1198 = icmp ult i32 %1183, %1197
  %1199 = inttoptr i64 %1185 to %"struct.spvtools::opt::Operand"*
  br i1 %1198, label %1209, label %1200

1200:                                             ; preds = %1182
  %1201 = inttoptr i64 %1184 to %"struct.spvtools::opt::Operand"*
  %1202 = load i64, i64* %1169, align 8
  %1203 = load i64, i64* %1170, align 8
  %1204 = sub i64 %1202, %1203
  %1205 = sdiv exact i64 %1204, 48
  %1206 = zext i32 %1197 to i64
  %1207 = icmp eq i64 %1205, %1206
  %1208 = inttoptr i64 %1203 to %"struct.spvtools::opt::Operand"*
  br i1 %1207, label %1416, label %1348

1209:                                             ; preds = %1182
  %1210 = icmp ult i32 %1183, 3
  br i1 %1210, label %1211, label %1235

1211:                                             ; preds = %1209
  %1212 = add nuw nsw i32 %1195, %1183
  %1213 = zext i32 %1212 to i64
  %1214 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1199, i64 %1213
  %1215 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %1163, align 8
  %1216 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %1164, align 8
  %1217 = icmp eq %"struct.spvtools::opt::Operand"* %1215, %1216
  br i1 %1217, label %1234, label %1218

1218:                                             ; preds = %1211
  %1219 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1215, i64 0, i32 0
  %1220 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1214, i64 0, i32 0
  %1221 = load i32, i32* %1220, align 8
  store i32 %1221, i32* %1219, align 8
  %1222 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1215, i64 0, i32 1
  %1223 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1199, i64 %1213, i32 1
  %1224 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1222, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1224, align 8
  %1225 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1215, i64 0, i32 1, i32 1
  store i64 0, i64* %1225, align 8
  %1226 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1215, i64 0, i32 1, i32 2
  %1227 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1215, i64 0, i32 1, i32 3, i64 0
  %1228 = bitcast i32** %1226 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %1227, %"struct.std::__1::aligned_storage<4, 4>::type"** %1228, align 8
  %1229 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1215, i64 0, i32 1, i32 4
  %1230 = bitcast %"class.std::__1::unique_ptr.0"* %1229 to i64*
  store i64 0, i64* %1230, align 8
  %1231 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %1222, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %1223) #15
  %1232 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1215, i64 1
  %1233 = ptrtoint %"struct.spvtools::opt::Operand"* %1232 to i64
  store i64 %1233, i64* %1169, align 8
  br label %1346

1234:                                             ; preds = %1211
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"* nonnull %4, %"struct.spvtools::opt::Operand"* dereferenceable(48) %1214) #15
  br label %1346

1235:                                             ; preds = %1209
  %1236 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %1237 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1236, i64 0, i32 11
  %1238 = load i32, i32* %1237, align 8
  %1239 = and i32 %1238, 1
  %1240 = icmp eq i32 %1239, 0
  br i1 %1240, label %1241, label %1267

1241:                                             ; preds = %1235
  %1242 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1236, i64 0, i32 4, i32 0, i32 0, i32 0
  %1243 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %1242, align 8
  %1244 = call i8* @_Znwm(i64 104) #14
  %1245 = bitcast i8* %1244 to %"class.spvtools::opt::analysis::DefUseManager"*
  %1246 = getelementptr inbounds i8, i8* %1244, i64 32
  %1247 = bitcast i8* %1246 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1244, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %1247, align 4
  %1248 = getelementptr inbounds i8, i8* %1244, i64 48
  %1249 = getelementptr inbounds i8, i8* %1244, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %1248, i8 0, i64 16, i1 false) #15
  %1250 = bitcast i8* %1249 to i8**
  store i8* %1248, i8** %1250, align 8
  %1251 = getelementptr inbounds i8, i8* %1244, i64 64
  %1252 = getelementptr inbounds i8, i8* %1244, i64 96
  %1253 = bitcast i8* %1252 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1251, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %1253, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %1245, %"class.spvtools::opt::Module"* %1243) #15
  %1254 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1236, i64 0, i32 6
  %1255 = ptrtoint i8* %1244 to i64
  %1256 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %1254, i64 0, i32 0, i32 0, i32 0
  %1257 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %1256, align 8
  %1258 = bitcast %"class.std::__1::unique_ptr.62"* %1254 to i64*
  store i64 %1255, i64* %1258, align 8
  %1259 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1257, null
  br i1 %1259, label %1262, label %1260

1260:                                             ; preds = %1241
  %1261 = bitcast %"class.std::__1::unique_ptr.62"* %1254 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %1261, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %1257) #15
  br label %1262

1262:                                             ; preds = %1260, %1241
  %1263 = load i32, i32* %1237, align 8
  %1264 = or i32 %1263, 1
  store i32 %1264, i32* %1237, align 8
  %1265 = load i8, i8* %1179, align 4, !range !2
  %1266 = load i8, i8* %1180, align 1, !range !2
  br label %1267

1267:                                             ; preds = %1235, %1262
  %1268 = phi i8 [ %1190, %1235 ], [ %1266, %1262 ]
  %1269 = phi i8 [ %1188, %1235 ], [ %1265, %1262 ]
  %1270 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1236, i64 0, i32 6, i32 0, i32 0, i32 0
  %1271 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %1270, align 8
  %1272 = icmp eq i8 %1269, 0
  %1273 = icmp eq i8 %1268, 0
  %1274 = select i1 %1273, i32 1, i32 2
  %1275 = xor i1 %1273, true
  %1276 = zext i1 %1275 to i32
  %1277 = select i1 %1272, i32 %1276, i32 %1274
  %1278 = add i32 %1277, %1183
  %1279 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1173, i32 %1278) #15
  %1280 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %1271, i32 %1279) #15
  %1281 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1280, i64 0, i32 5
  %1282 = load i32, i32* %1281, align 8
  %1283 = lshr i32 %1282, 6
  %1284 = zext i32 %1283 to i64
  %1285 = load i64, i64* %1167, align 8
  %1286 = load i64, i64* %1168, align 8
  %1287 = sub i64 %1285, %1286
  %1288 = ashr exact i64 %1287, 3
  %1289 = icmp ugt i64 %1288, %1284
  br i1 %1289, label %1290, label %1299

1290:                                             ; preds = %1267
  %1291 = inttoptr i64 %1286 to i64*
  %1292 = and i32 %1282, 63
  %1293 = getelementptr inbounds i64, i64* %1291, i64 %1284
  %1294 = load i64, i64* %1293, align 8
  %1295 = zext i32 %1292 to i64
  %1296 = shl i64 1, %1295
  %1297 = and i64 %1294, %1296
  %1298 = icmp eq i64 %1297, 0
  br i1 %1298, label %1299, label %1313

1299:                                             ; preds = %1290, %1267
  %1300 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1280, i64 0, i32 2
  %1301 = load i32, i32* %1300, align 8
  %1302 = call zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32 %1301) #15
  br i1 %1302, label %1306, label %1303

1303:                                             ; preds = %1299
  %1304 = load i32, i32* %1300, align 8
  %1305 = icmp eq i32 %1304, 255
  br i1 %1305, label %1306, label %1346

1306:                                             ; preds = %1303, %1299
  %1307 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %1308 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %1307, %"class.spvtools::opt::Instruction"* %1280) #15
  %1309 = icmp eq %"class.spvtools::opt::BasicBlock"* %1308, null
  br i1 %1309, label %1313, label %1310

1310:                                             ; preds = %1306
  %1311 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"* nonnull %1308) #15
  %1312 = icmp eq %"class.spvtools::opt::Instruction"* %1311, null
  br i1 %1312, label %1313, label %1346

1313:                                             ; preds = %1306, %1310, %1290
  %1314 = load i8, i8* %1179, align 4, !range !2
  %1315 = icmp eq i8 %1314, 0
  %1316 = load i8, i8* %1180, align 1, !range !2
  %1317 = icmp eq i8 %1316, 0
  %1318 = select i1 %1317, i32 1, i32 2
  %1319 = xor i1 %1317, true
  %1320 = zext i1 %1319 to i32
  %1321 = select i1 %1315, i32 %1320, i32 %1318
  %1322 = add i32 %1321, %1183
  %1323 = zext i32 %1322 to i64
  %1324 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %1181, align 8
  %1325 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1324, i64 %1323
  %1326 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %1163, align 8
  %1327 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %1164, align 8
  %1328 = icmp eq %"struct.spvtools::opt::Operand"* %1326, %1327
  br i1 %1328, label %1345, label %1329

1329:                                             ; preds = %1313
  %1330 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1326, i64 0, i32 0
  %1331 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1325, i64 0, i32 0
  %1332 = load i32, i32* %1331, align 8
  store i32 %1332, i32* %1330, align 8
  %1333 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1326, i64 0, i32 1
  %1334 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1324, i64 %1323, i32 1
  %1335 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1333, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1335, align 8
  %1336 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1326, i64 0, i32 1, i32 1
  store i64 0, i64* %1336, align 8
  %1337 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1326, i64 0, i32 1, i32 2
  %1338 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1326, i64 0, i32 1, i32 3, i64 0
  %1339 = bitcast i32** %1337 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %1338, %"struct.std::__1::aligned_storage<4, 4>::type"** %1339, align 8
  %1340 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1326, i64 0, i32 1, i32 4
  %1341 = bitcast %"class.std::__1::unique_ptr.0"* %1340 to i64*
  store i64 0, i64* %1341, align 8
  %1342 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %1333, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %1334) #15
  %1343 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1326, i64 1
  %1344 = ptrtoint %"struct.spvtools::opt::Operand"* %1343 to i64
  store i64 %1344, i64* %1169, align 8
  br label %1346

1345:                                             ; preds = %1313
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"* nonnull %4, %"struct.spvtools::opt::Operand"* dereferenceable(48) %1325) #15
  br label %1346

1346:                                             ; preds = %1303, %1310, %1345, %1329, %1234, %1218
  %1347 = add nuw i32 %1183, 1
  br label %1182

1348:                                             ; preds = %1200
  %1349 = inttoptr i64 %1185 to %"struct.spvtools::opt::Operand"*
  %1350 = inttoptr i64 %1202 to %"struct.spvtools::opt::Operand"*
  %1351 = select i1 %1191, i64 1, i64 2
  %1352 = zext i1 %1193 to i64
  %1353 = select i1 %1189, i64 %1352, i64 %1351
  %1354 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1349, i64 %1353
  %1355 = icmp eq %"struct.spvtools::opt::Operand"* %1354, %1201
  br i1 %1355, label %1379, label %1356

1356:                                             ; preds = %1348, %1374
  %1357 = phi %"struct.spvtools::opt::Operand"* [ %1358, %1374 ], [ %1201, %1348 ]
  %1358 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1357, i64 -1
  %1359 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1357, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1359, align 8
  %1360 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1357, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %1361 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %1360, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %1360, align 8
  %1362 = icmp eq %"class.std::__1::vector.3"* %1361, null
  br i1 %1362, label %1374, label %1363

1363:                                             ; preds = %1356
  %1364 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1361, i64 0, i32 0, i32 0
  %1365 = load i32*, i32** %1364, align 8
  %1366 = icmp eq i32* %1365, null
  br i1 %1366, label %1372, label %1367

1367:                                             ; preds = %1363
  %1368 = ptrtoint i32* %1365 to i64
  %1369 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1361, i64 0, i32 0, i32 1
  %1370 = bitcast i32** %1369 to i64*
  store i64 %1368, i64* %1370, align 8
  %1371 = bitcast i32* %1365 to i8*
  call void @_ZdlPv(i8* %1371) #14
  br label %1372

1372:                                             ; preds = %1367, %1363
  %1373 = bitcast %"class.std::__1::vector.3"* %1361 to i8*
  call void @_ZdlPv(i8* %1373) #14
  br label %1374

1374:                                             ; preds = %1372, %1356
  %1375 = icmp eq %"struct.spvtools::opt::Operand"* %1358, %1354
  br i1 %1375, label %1376, label %1356

1376:                                             ; preds = %1374
  store %"struct.spvtools::opt::Operand"* %1354, %"struct.spvtools::opt::Operand"** %1176, align 8
  %1377 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %1162, align 8
  %1378 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %1163, align 8
  br label %1379

1379:                                             ; preds = %1348, %1376
  %1380 = phi %"struct.spvtools::opt::Operand"* [ %1350, %1348 ], [ %1378, %1376 ]
  %1381 = phi %"struct.spvtools::opt::Operand"* [ %1208, %1348 ], [ %1377, %1376 ]
  %1382 = call %"struct.spvtools::opt::Operand"* @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_(%"class.std::__1::vector"* %1175, %"struct.spvtools::opt::Operand"* %1354, %"struct.spvtools::opt::Operand"* %1381, %"struct.spvtools::opt::Operand"* %1380) #15
  %1383 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %1384 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1383, i64 0, i32 11
  %1385 = load i32, i32* %1384, align 8
  %1386 = and i32 %1385, 1
  %1387 = icmp eq i32 %1386, 0
  br i1 %1387, label %1388, label %1412

1388:                                             ; preds = %1379
  %1389 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1383, i64 0, i32 4, i32 0, i32 0, i32 0
  %1390 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %1389, align 8
  %1391 = call i8* @_Znwm(i64 104) #14
  %1392 = bitcast i8* %1391 to %"class.spvtools::opt::analysis::DefUseManager"*
  %1393 = getelementptr inbounds i8, i8* %1391, i64 32
  %1394 = bitcast i8* %1393 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1391, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %1394, align 4
  %1395 = getelementptr inbounds i8, i8* %1391, i64 48
  %1396 = getelementptr inbounds i8, i8* %1391, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %1395, i8 0, i64 16, i1 false) #15
  %1397 = bitcast i8* %1396 to i8**
  store i8* %1395, i8** %1397, align 8
  %1398 = getelementptr inbounds i8, i8* %1391, i64 64
  %1399 = getelementptr inbounds i8, i8* %1391, i64 96
  %1400 = bitcast i8* %1399 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1398, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %1400, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %1392, %"class.spvtools::opt::Module"* %1390) #15
  %1401 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1383, i64 0, i32 6
  %1402 = ptrtoint i8* %1391 to i64
  %1403 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %1401, i64 0, i32 0, i32 0, i32 0
  %1404 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %1403, align 8
  %1405 = bitcast %"class.std::__1::unique_ptr.62"* %1401 to i64*
  store i64 %1402, i64* %1405, align 8
  %1406 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1404, null
  br i1 %1406, label %1409, label %1407

1407:                                             ; preds = %1388
  %1408 = bitcast %"class.std::__1::unique_ptr.62"* %1401 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %1408, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %1404) #15
  br label %1409

1409:                                             ; preds = %1407, %1388
  %1410 = load i32, i32* %1384, align 8
  %1411 = or i32 %1410, 1
  store i32 %1411, i32* %1384, align 8
  br label %1412

1412:                                             ; preds = %1379, %1409
  %1413 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1383, i64 0, i32 6, i32 0, i32 0, i32 0
  %1414 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %1413, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager12UpdateDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %1414, %"class.spvtools::opt::Instruction"* %1173) #15
  %1415 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %1162, align 8
  br label %1416

1416:                                             ; preds = %1200, %1412
  %1417 = phi %"struct.spvtools::opt::Operand"* [ %1208, %1200 ], [ %1415, %1412 ]
  %1418 = icmp eq %"struct.spvtools::opt::Operand"* %1417, null
  br i1 %1418, label %1447, label %1419

1419:                                             ; preds = %1416
  %1420 = bitcast %"struct.spvtools::opt::Operand"* %1417 to i8*
  %1421 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %1163, align 8
  %1422 = icmp eq %"struct.spvtools::opt::Operand"* %1421, %1417
  br i1 %1422, label %1445, label %1423

1423:                                             ; preds = %1419, %1441
  %1424 = phi %"struct.spvtools::opt::Operand"* [ %1425, %1441 ], [ %1421, %1419 ]
  %1425 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1424, i64 -1
  %1426 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1424, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1426, align 8
  %1427 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1424, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %1428 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %1427, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %1427, align 8
  %1429 = icmp eq %"class.std::__1::vector.3"* %1428, null
  br i1 %1429, label %1441, label %1430

1430:                                             ; preds = %1423
  %1431 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1428, i64 0, i32 0, i32 0
  %1432 = load i32*, i32** %1431, align 8
  %1433 = icmp eq i32* %1432, null
  br i1 %1433, label %1439, label %1434

1434:                                             ; preds = %1430
  %1435 = ptrtoint i32* %1432 to i64
  %1436 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1428, i64 0, i32 0, i32 1
  %1437 = bitcast i32** %1436 to i64*
  store i64 %1435, i64* %1437, align 8
  %1438 = bitcast i32* %1432 to i8*
  call void @_ZdlPv(i8* %1438) #14
  br label %1439

1439:                                             ; preds = %1434, %1430
  %1440 = bitcast %"class.std::__1::vector.3"* %1428 to i8*
  call void @_ZdlPv(i8* %1440) #14
  br label %1441

1441:                                             ; preds = %1439, %1423
  %1442 = icmp eq %"struct.spvtools::opt::Operand"* %1425, %1417
  br i1 %1442, label %1443, label %1423

1443:                                             ; preds = %1441
  %1444 = load i8*, i8** %1171, align 8
  br label %1445

1445:                                             ; preds = %1443, %1419
  %1446 = phi i8* [ %1444, %1443 ], [ %1420, %1419 ]
  store %"struct.spvtools::opt::Operand"* %1417, %"struct.spvtools::opt::Operand"** %1163, align 8
  call void @_ZdlPv(i8* %1446) #14
  br label %1447

1447:                                             ; preds = %1416, %1445
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1161) #15
  %1448 = inttoptr i64 %1174 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %1449 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %1448, i64 0, i32 1
  %1450 = bitcast %"class.spvtools::opt::Instruction"** %1449 to i64*
  %1451 = load i64, i64* %1450, align 8
  %1452 = inttoptr i64 %1451 to %"class.spvtools::opt::Instruction"*
  %1453 = icmp eq %"class.spvtools::opt::Instruction"* %1155, %1452
  br i1 %1453, label %1454, label %1172

1454:                                             ; preds = %1447, %1153, %959
  %1455 = and i8 %961, 1
  %1456 = icmp ne i8 %1455, 0
  %1457 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %46, align 8
  %1458 = icmp eq %"class.spvtools::opt::Instruction"** %1457, null
  br i1 %1458, label %1463, label %1459

1459:                                             ; preds = %1454
  %1460 = ptrtoint %"class.spvtools::opt::Instruction"** %1457 to i64
  %1461 = bitcast %"class.spvtools::opt::Instruction"*** %47 to i64*
  store i64 %1460, i64* %1461, align 8
  %1462 = bitcast %"class.spvtools::opt::Instruction"** %1457 to i8*
  call void @_ZdlPv(i8* %1462) #14
  br label %1463

1463:                                             ; preds = %1454, %1459
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #15
  ret i1 %1456
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare { %"class.std::__1::vector.26"*, %"class.std::__1::unique_ptr.28"* } @_ZN8spvtools3opt26eliminatedeadfunctionsutil17EliminateFunctionEPNS0_9IRContextEPNS0_18UptrVectorIteratorINS0_8FunctionELb0EEE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::UptrVectorIterator.1133"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @_ZNK8spvtools3opt8analysis13DefUseManager8NumUsersEPKNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt9IRContext10ForgetUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis16DebugInfoManager16GetDebugInfoNoneEv(%"class.spvtools::opt::analysis::DebugInfoManager"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis13DefUseManager12UpdateDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt17AggressiveDCEPassC2Ev(%"class.spvtools::opt::AggressiveDCEPass"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 0
  tail call void @_ZN8spvtools3opt7MemPassC2Ev(%"class.spvtools::opt::MemPass"* %2) #15
  %3 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt17AggressiveDCEPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 5, i32 0, i32 3
  %6 = bitcast %"class.std::__1::__compressed_pair.963"* %5 to i32*
  %7 = bitcast %"class.std::__1::queue"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 80, i1 false)
  store i32 1065353216, i32* %6, align 4
  %8 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 6
  %9 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 6, i32 0, i32 3
  %10 = bitcast %"class.std::__1::__compressed_pair.963"* %9 to i32*
  %11 = bitcast %"class.std::__1::unordered_map.941"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %10, align 4
  %12 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 7
  %13 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 7, i32 0, i32 3
  %14 = bitcast %"class.std::__1::__compressed_pair.989"* %13 to i32*
  %15 = bitcast %"class.std::__1::unordered_map.969"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %14, align 4
  %16 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 8
  %17 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 8, i32 0, i32 3
  %18 = bitcast %"class.std::__1::__compressed_pair.1013"* %17 to i32*
  %19 = bitcast %"class.std::__1::unordered_map.993"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %18, align 4
  %20 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 9
  %21 = bitcast %"class.std::__1::vector.1017"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #15
  %22 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 10
  %23 = tail call i8* @_Znwm(i64 128) #14
  %24 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %25 = bitcast %"class.spvtools::utils::BitVector"* %22 to i8**
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds i8, i8* %23, i64 128
  %27 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 10, i32 0, i32 0, i32 2, i32 0, i32 0
  %28 = bitcast i64** %27 to i8**
  store i8* %26, i8** %28, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 128, i1 false) #15
  %29 = bitcast i64** %24 to i64*
  %30 = ptrtoint i8* %26 to i64
  store i64 %30, i64* %29, align 8
  %31 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 11
  %32 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 11, i32 0, i32 3
  %33 = bitcast %"class.std::__1::__compressed_pair.929"* %32 to i32*
  %34 = bitcast %"class.std::__1::unordered_set.910"* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %33, align 4
  %35 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 12
  %36 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 13, i32 0, i32 3
  %37 = bitcast %"class.std::__1::__compressed_pair.1042"* %36 to i32*
  %38 = bitcast %"class.std::__1::vector.1017"* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 56, i1 false)
  store i32 1065353216, i32* %37, align 4
  ret void
}

declare void @_ZN8spvtools3opt7MemPassC2Ev(%"class.spvtools::opt::MemPass"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt17AggressiveDCEPass7ProcessEv(%"class.spvtools::opt::AggressiveDCEPass"*) unnamed_addr #0 align 2 {
  tail call void @_ZN8spvtools3opt17AggressiveDCEPass14InitExtensionsEv(%"class.spvtools::opt::AggressiveDCEPass"* %0)
  %2 = tail call i32 @_ZN8spvtools3opt17AggressiveDCEPass11ProcessImplEv(%"class.spvtools::opt::AggressiveDCEPass"* %0)
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt17AggressiveDCEPass14InitExtensionsEv(%"class.spvtools::opt::AggressiveDCEPass"*) local_unnamed_addr #0 align 2 {
  %2 = alloca [46 x %"class.std::__1::basic_string"], align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 13
  %4 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %66, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %8, align 8
  %10 = icmp eq %"struct.std::__1::__hash_node_base.1026"* %9, null
  br i1 %10, label %26, label %11

11:                                               ; preds = %7, %23
  %12 = phi %"struct.std::__1::__hash_node_base.1026"* [ %14, %23 ], [ %9, %7 ]
  %13 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026", %"struct.std::__1::__hash_node_base.1026"* %12, i64 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026", %"struct.std::__1::__hash_node_base.1026"* %12, i64 2
  %16 = bitcast %"struct.std::__1::__hash_node_base.1026"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %11
  %21 = bitcast %"struct.std::__1::__hash_node_base.1026"* %15 to i8**
  %22 = load i8*, i8** %21, align 8
  tail call void @_ZdlPv(i8* %22) #14
  br label %23

23:                                               ; preds = %20, %11
  %24 = bitcast %"struct.std::__1::__hash_node_base.1026"* %12 to i8*
  tail call void @_ZdlPv(i8* %24) #14
  %25 = icmp eq %"struct.std::__1::__hash_node_base.1026"* %14, null
  br i1 %25, label %26, label %11

26:                                               ; preds = %23, %7
  store %"struct.std::__1::__hash_node_base.1026"* null, %"struct.std::__1::__hash_node_base.1026"** %8, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %48, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.std::__1::unordered_set.1021", %"class.std::__1::unordered_set.1021"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = add i64 %28, -1
  %33 = and i64 %28, 3
  %34 = icmp ult i64 %32, 3
  br i1 %34, label %37, label %35

35:                                               ; preds = %30
  %36 = sub i64 %28, %33
  br label %49

37:                                               ; preds = %49, %30
  %38 = phi i64 [ 0, %30 ], [ %63, %49 ]
  %39 = icmp eq i64 %33, 0
  br i1 %39, label %48, label %40

40:                                               ; preds = %37, %40
  %41 = phi i64 [ %45, %40 ], [ %38, %37 ]
  %42 = phi i64 [ %46, %40 ], [ %33, %37 ]
  %43 = load %"struct.std::__1::__hash_node_base.1026"**, %"struct.std::__1::__hash_node_base.1026"*** %31, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1026"* null, %"struct.std::__1::__hash_node_base.1026"** %44, align 8
  %45 = add nuw i64 %41, 1
  %46 = add i64 %42, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %40, !llvm.loop !36

48:                                               ; preds = %37, %40, %26
  store i64 0, i64* %4, align 8
  br label %66

49:                                               ; preds = %49, %35
  %50 = phi i64 [ 0, %35 ], [ %63, %49 ]
  %51 = phi i64 [ %36, %35 ], [ %64, %49 ]
  %52 = load %"struct.std::__1::__hash_node_base.1026"**, %"struct.std::__1::__hash_node_base.1026"*** %31, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %52, i64 %50
  store %"struct.std::__1::__hash_node_base.1026"* null, %"struct.std::__1::__hash_node_base.1026"** %53, align 8
  %54 = or i64 %50, 1
  %55 = load %"struct.std::__1::__hash_node_base.1026"**, %"struct.std::__1::__hash_node_base.1026"*** %31, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %55, i64 %54
  store %"struct.std::__1::__hash_node_base.1026"* null, %"struct.std::__1::__hash_node_base.1026"** %56, align 8
  %57 = or i64 %50, 2
  %58 = load %"struct.std::__1::__hash_node_base.1026"**, %"struct.std::__1::__hash_node_base.1026"*** %31, align 8
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %58, i64 %57
  store %"struct.std::__1::__hash_node_base.1026"* null, %"struct.std::__1::__hash_node_base.1026"** %59, align 8
  %60 = or i64 %50, 3
  %61 = load %"struct.std::__1::__hash_node_base.1026"**, %"struct.std::__1::__hash_node_base.1026"*** %31, align 8
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %61, i64 %60
  store %"struct.std::__1::__hash_node_base.1026"* null, %"struct.std::__1::__hash_node_base.1026"** %62, align 8
  %63 = add nuw i64 %50, 4
  %64 = add i64 %51, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %37, label %49

66:                                               ; preds = %1, %48
  %67 = bitcast [46 x %"class.std::__1::basic_string"]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1104, i8* nonnull %67) #15
  %68 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 0
  %69 = tail call i8* @_Znwm(i64 48) #14
  %70 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %69, i8** %70, align 8
  %71 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = bitcast i64* %71 to <2 x i64>*
  store <2 x i64> <i64 40, i64 -9223372036854775760>, <2 x i64>* %72, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %69, i8* align 1 getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i64 40, i1 false) #15
  %73 = getelementptr inbounds i8, i8* %69, i64 40
  store i8 0, i8* %73, align 1
  %74 = tail call i8* @_Znwm(i64 32) #14
  %75 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %74, i8** %75, align 8
  %76 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %77 = bitcast i64* %76 to <2 x i64>*
  store <2 x i64> <i64 29, i64 -9223372036854775776>, <2 x i64>* %77, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %74, i8* align 1 getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i64 29, i1 false) #15
  %78 = getelementptr inbounds i8, i8* %74, i64 29
  store i8 0, i8* %78, align 1
  %79 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 2
  %80 = bitcast %"class.std::__1::basic_string"* %79 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  store i8 18, i8* %81, align 1
  %82 = bitcast %"class.std::__1::basic_string"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 18, i1 false) #15
  %83 = getelementptr inbounds i8, i8* %82, i64 18
  store i8 0, i8* %83, align 2
  %84 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 3
  %85 = bitcast %"class.std::__1::basic_string"* %84 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  store i8 21, i8* %86, align 1
  %87 = bitcast %"class.std::__1::basic_string"* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0), i64 21, i1 false) #15
  %88 = getelementptr inbounds i8, i8* %87, i64 21
  store i8 0, i8* %88, align 1
  %89 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 4
  %90 = bitcast %"class.std::__1::basic_string"* %89 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  store i8 21, i8* %91, align 1
  %92 = bitcast %"class.std::__1::basic_string"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0), i64 21, i1 false) #15
  %93 = getelementptr inbounds i8, i8* %92, i64 21
  store i8 0, i8* %93, align 1
  %94 = tail call i8* @_Znwm(i64 32) #14
  %95 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %94, i8** %95, align 8
  %96 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = bitcast i64* %96 to <2 x i64>*
  store <2 x i64> <i64 29, i64 -9223372036854775776>, <2 x i64>* %97, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %94, i8* align 1 getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i64 0, i64 0), i64 29, i1 false) #15
  %98 = getelementptr inbounds i8, i8* %94, i64 29
  store i8 0, i8* %98, align 1
  %99 = tail call i8* @_Znwm(i64 32) #14
  %100 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %99, i8** %100, align 8
  %101 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = bitcast i64* %101 to <2 x i64>*
  store <2 x i64> <i64 30, i64 -9223372036854775776>, <2 x i64>* %102, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %99, i8* align 1 getelementptr inbounds ([31 x i8], [31 x i8]* @.str.6, i64 0, i64 0), i64 30, i1 false) #15
  %103 = getelementptr inbounds i8, i8* %99, i64 30
  store i8 0, i8* %103, align 1
  %104 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 7
  %105 = bitcast %"class.std::__1::basic_string"* %104 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  store i8 21, i8* %106, align 1
  %107 = bitcast %"class.std::__1::basic_string"* %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i64 21, i1 false) #15
  %108 = getelementptr inbounds i8, i8* %107, i64 21
  store i8 0, i8* %108, align 1
  %109 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 8
  %110 = bitcast %"class.std::__1::basic_string"* %109 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  store i8 20, i8* %111, align 1
  %112 = bitcast %"class.std::__1::basic_string"* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0), i64 20, i1 false) #15
  %113 = getelementptr inbounds i8, i8* %112, i64 20
  store i8 0, i8* %113, align 4
  %114 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 9
  %115 = bitcast %"class.std::__1::basic_string"* %114 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  store i8 21, i8* %116, align 1
  %117 = bitcast %"class.std::__1::basic_string"* %114 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i64 0, i64 0), i64 21, i1 false) #15
  %118 = getelementptr inbounds i8, i8* %117, i64 21
  store i8 0, i8* %118, align 1
  %119 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 10
  %120 = bitcast %"class.std::__1::basic_string"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  store i8 20, i8* %121, align 1
  %122 = bitcast %"class.std::__1::basic_string"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i64 20, i1 false) #15
  %123 = getelementptr inbounds i8, i8* %122, i64 20
  store i8 0, i8* %123, align 4
  %124 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 11
  %125 = bitcast %"class.std::__1::basic_string"* %124 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  store i8 17, i8* %126, align 1
  %127 = bitcast %"class.std::__1::basic_string"* %124 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* align 1 getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i64 17, i1 false) #15
  %128 = getelementptr inbounds i8, i8* %127, i64 17
  store i8 0, i8* %128, align 1
  %129 = tail call i8* @_Znwm(i64 48) #14
  %130 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %129, i8** %130, align 8
  %131 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %132 = bitcast i64* %131 to <2 x i64>*
  store <2 x i64> <i64 37, i64 -9223372036854775760>, <2 x i64>* %132, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %129, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.12, i64 0, i64 0), i64 37, i1 false) #15
  %133 = getelementptr inbounds i8, i8* %129, i64 37
  store i8 0, i8* %133, align 1
  %134 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 13
  %135 = bitcast %"class.std::__1::basic_string"* %134 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  store i8 22, i8* %136, align 1
  %137 = bitcast %"class.std::__1::basic_string"* %134 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i64 22, i1 false) #15
  %138 = getelementptr inbounds i8, i8* %137, i64 22
  store i8 0, i8* %138, align 2
  %139 = tail call i8* @_Znwm(i64 32) #14
  %140 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %139, i8** %140, align 8
  %141 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %142 = bitcast i64* %141 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %142, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %139, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i64 0, i64 0), i64 28, i1 false) #15
  %143 = getelementptr inbounds i8, i8* %139, i64 28
  store i8 0, i8* %143, align 1
  %144 = tail call i8* @_Znwm(i64 48) #14
  %145 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %144, i8** %145, align 8
  %146 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %147 = bitcast i64* %146 to <2 x i64>*
  store <2 x i64> <i64 36, i64 -9223372036854775760>, <2 x i64>* %147, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %144, i8* align 1 getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i64 36, i1 false) #15
  %148 = getelementptr inbounds i8, i8* %144, i64 36
  store i8 0, i8* %148, align 1
  %149 = tail call i8* @_Znwm(i64 48) #14
  %150 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 16, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %149, i8** %150, align 8
  %151 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 16, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %152 = bitcast i64* %151 to <2 x i64>*
  store <2 x i64> <i64 34, i64 -9223372036854775760>, <2 x i64>* %152, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %149, i8* align 1 getelementptr inbounds ([35 x i8], [35 x i8]* @.str.16, i64 0, i64 0), i64 34, i1 false) #15
  %153 = getelementptr inbounds i8, i8* %149, i64 34
  store i8 0, i8* %153, align 1
  %154 = tail call i8* @_Znwm(i64 32) #14
  %155 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 17, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %154, i8** %155, align 8
  %156 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 17, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %157 = bitcast i64* %156 to <2 x i64>*
  store <2 x i64> <i64 31, i64 -9223372036854775776>, <2 x i64>* %157, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %154, i8* align 1 getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17, i64 0, i64 0), i64 31, i1 false) #15
  %158 = getelementptr inbounds i8, i8* %154, i64 31
  store i8 0, i8* %158, align 1
  %159 = tail call i8* @_Znwm(i64 48) #14
  %160 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %159, i8** %160, align 8
  %161 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %162 = bitcast i64* %161 to <2 x i64>*
  store <2 x i64> <i64 36, i64 -9223372036854775760>, <2 x i64>* %162, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %159, i8* align 1 getelementptr inbounds ([37 x i8], [37 x i8]* @.str.18, i64 0, i64 0), i64 36, i1 false) #15
  %163 = getelementptr inbounds i8, i8* %159, i64 36
  store i8 0, i8* %163, align 1
  %164 = tail call i8* @_Znwm(i64 32) #14
  %165 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 19, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %164, i8** %165, align 8
  %166 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 19, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %167 = bitcast i64* %166 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %167, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %164, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.19, i64 0, i64 0), i64 24, i1 false) #15
  %168 = getelementptr inbounds i8, i8* %164, i64 24
  store i8 0, i8* %168, align 1
  %169 = tail call i8* @_Znwm(i64 32) #14
  %170 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %169, i8** %170, align 8
  %171 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %172 = bitcast i64* %171 to <2 x i64>*
  store <2 x i64> <i64 27, i64 -9223372036854775776>, <2 x i64>* %172, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %169, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.20, i64 0, i64 0), i64 27, i1 false) #15
  %173 = getelementptr inbounds i8, i8* %169, i64 27
  store i8 0, i8* %173, align 1
  %174 = tail call i8* @_Znwm(i64 48) #14
  %175 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 21, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %174, i8** %175, align 8
  %176 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 21, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %177 = bitcast i64* %176 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %177, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %174, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.21, i64 0, i64 0), i64 33, i1 false) #15
  %178 = getelementptr inbounds i8, i8* %174, i64 33
  store i8 0, i8* %178, align 1
  %179 = tail call i8* @_Znwm(i64 32) #14
  %180 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 22, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %179, i8** %180, align 8
  %181 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 22, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %182 = bitcast i64* %181 to <2 x i64>*
  store <2 x i64> <i64 29, i64 -9223372036854775776>, <2 x i64>* %182, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %179, i8* align 1 getelementptr inbounds ([30 x i8], [30 x i8]* @.str.22, i64 0, i64 0), i64 29, i1 false) #15
  %183 = getelementptr inbounds i8, i8* %179, i64 29
  store i8 0, i8* %183, align 1
  %184 = tail call i8* @_Znwm(i64 48) #14
  %185 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 23, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %184, i8** %185, align 8
  %186 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 23, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %187 = bitcast i64* %186 to <2 x i64>*
  store <2 x i64> <i64 35, i64 -9223372036854775760>, <2 x i64>* %187, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %184, i8* align 1 getelementptr inbounds ([36 x i8], [36 x i8]* @.str.23, i64 0, i64 0), i64 35, i1 false) #15
  %188 = getelementptr inbounds i8, i8* %184, i64 35
  store i8 0, i8* %188, align 1
  %189 = tail call i8* @_Znwm(i64 48) #14
  %190 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 24, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %189, i8** %190, align 8
  %191 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 24, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %192 = bitcast i64* %191 to <2 x i64>*
  store <2 x i64> <i64 35, i64 -9223372036854775760>, <2 x i64>* %192, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %189, i8* align 1 getelementptr inbounds ([36 x i8], [36 x i8]* @.str.24, i64 0, i64 0), i64 35, i1 false) #15
  %193 = getelementptr inbounds i8, i8* %189, i64 35
  store i8 0, i8* %193, align 1
  %194 = tail call i8* @_Znwm(i64 32) #14
  %195 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 25, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %194, i8** %195, align 8
  %196 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 25, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %197 = bitcast i64* %196 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %197, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %194, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i64 0, i64 0), i64 28, i1 false) #15
  %198 = getelementptr inbounds i8, i8* %194, i64 28
  store i8 0, i8* %198, align 1
  %199 = tail call i8* @_Znwm(i64 32) #14
  %200 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 26, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %199, i8** %200, align 8
  %201 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 26, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %202 = bitcast i64* %201 to <2 x i64>*
  store <2 x i64> <i64 30, i64 -9223372036854775776>, <2 x i64>* %202, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %199, i8* align 1 getelementptr inbounds ([31 x i8], [31 x i8]* @.str.26, i64 0, i64 0), i64 30, i1 false) #15
  %203 = getelementptr inbounds i8, i8* %199, i64 30
  store i8 0, i8* %203, align 1
  %204 = tail call i8* @_Znwm(i64 48) #14
  %205 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 27, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %204, i8** %205, align 8
  %206 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 27, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %207 = bitcast i64* %206 to <2 x i64>*
  store <2 x i64> <i64 35, i64 -9223372036854775760>, <2 x i64>* %207, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %204, i8* align 1 getelementptr inbounds ([36 x i8], [36 x i8]* @.str.27, i64 0, i64 0), i64 35, i1 false) #15
  %208 = getelementptr inbounds i8, i8* %204, i64 35
  store i8 0, i8* %208, align 1
  %209 = tail call i8* @_Znwm(i64 32) #14
  %210 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 28, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %209, i8** %210, align 8
  %211 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 28, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %212 = bitcast i64* %211 to <2 x i64>*
  store <2 x i64> <i64 26, i64 -9223372036854775776>, <2 x i64>* %212, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %209, i8* align 1 getelementptr inbounds ([27 x i8], [27 x i8]* @.str.28, i64 0, i64 0), i64 26, i1 false) #15
  %213 = getelementptr inbounds i8, i8* %209, i64 26
  store i8 0, i8* %213, align 1
  %214 = tail call i8* @_Znwm(i64 32) #14
  %215 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 29, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %214, i8** %215, align 8
  %216 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 29, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 -9223372036854775776, i64* %216, align 8
  %217 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 29, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 30, i64* %217, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %214, i8* align 1 getelementptr inbounds ([31 x i8], [31 x i8]* @.str.29, i64 0, i64 0), i64 30, i1 false) #15
  %218 = getelementptr inbounds i8, i8* %214, i64 30
  store i8 0, i8* %218, align 1
  %219 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 30
  %220 = bitcast %"class.std::__1::basic_string"* %219 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %221 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %220, i64 0, i32 1, i32 0
  store i8 20, i8* %221, align 1
  %222 = bitcast %"class.std::__1::basic_string"* %219 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.30, i64 0, i64 0), i64 20, i1 false) #15
  %223 = getelementptr inbounds i8, i8* %222, i64 20
  store i8 0, i8* %223, align 4
  %224 = tail call i8* @_Znwm(i64 48) #14
  %225 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 31, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %224, i8** %225, align 8
  %226 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 31, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %227 = bitcast i64* %226 to <2 x i64>*
  store <2 x i64> <i64 34, i64 -9223372036854775760>, <2 x i64>* %227, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %224, i8* align 1 getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i64 0, i64 0), i64 34, i1 false) #15
  %228 = getelementptr inbounds i8, i8* %224, i64 34
  store i8 0, i8* %228, align 1
  %229 = tail call i8* @_Znwm(i64 48) #14
  %230 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 32, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %229, i8** %230, align 8
  %231 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 32, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %232 = bitcast i64* %231 to <2 x i64>*
  store <2 x i64> <i64 35, i64 -9223372036854775760>, <2 x i64>* %232, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %229, i8* align 1 getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i64 0, i64 0), i64 35, i1 false) #15
  %233 = getelementptr inbounds i8, i8* %229, i64 35
  store i8 0, i8* %233, align 1
  %234 = tail call i8* @_Znwm(i64 32) #14
  %235 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 33, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %234, i8** %235, align 8
  %236 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 33, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %237 = bitcast i64* %236 to <2 x i64>*
  store <2 x i64> <i64 27, i64 -9223372036854775776>, <2 x i64>* %237, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %234, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i64 0, i64 0), i64 27, i1 false) #15
  %238 = getelementptr inbounds i8, i8* %234, i64 27
  store i8 0, i8* %238, align 1
  %239 = tail call i8* @_Znwm(i64 48) #14
  %240 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 34, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %239, i8** %240, align 8
  %241 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 34, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %242 = bitcast i64* %241 to <2 x i64>*
  store <2 x i64> <i64 34, i64 -9223372036854775760>, <2 x i64>* %242, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %239, i8* align 1 getelementptr inbounds ([35 x i8], [35 x i8]* @.str.34, i64 0, i64 0), i64 34, i1 false) #15
  %243 = getelementptr inbounds i8, i8* %239, i64 34
  store i8 0, i8* %243, align 1
  %244 = tail call i8* @_Znwm(i64 48) #14
  %245 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 35, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %244, i8** %245, align 8
  %246 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 35, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %247 = bitcast i64* %246 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %247, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %244, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.35, i64 0, i64 0), i64 33, i1 false) #15
  %248 = getelementptr inbounds i8, i8* %244, i64 33
  store i8 0, i8* %248, align 1
  %249 = tail call i8* @_Znwm(i64 32) #14
  %250 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 36, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %249, i8** %250, align 8
  %251 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 36, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %252 = bitcast i64* %251 to <2 x i64>*
  store <2 x i64> <i64 29, i64 -9223372036854775776>, <2 x i64>* %252, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %249, i8* align 1 getelementptr inbounds ([30 x i8], [30 x i8]* @.str.36, i64 0, i64 0), i64 29, i1 false) #15
  %253 = getelementptr inbounds i8, i8* %249, i64 29
  store i8 0, i8* %253, align 1
  %254 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 37
  %255 = bitcast %"class.std::__1::basic_string"* %254 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %256 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %255, i64 0, i32 1, i32 0
  store i8 19, i8* %256, align 1
  %257 = bitcast %"class.std::__1::basic_string"* %254 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %257, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.37, i64 0, i64 0), i64 19, i1 false) #15
  %258 = getelementptr inbounds i8, i8* %257, i64 19
  store i8 0, i8* %258, align 1
  %259 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 38
  %260 = bitcast %"class.std::__1::basic_string"* %259 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %261 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %260, i64 0, i32 1, i32 0
  store i8 18, i8* %261, align 1
  %262 = bitcast %"class.std::__1::basic_string"* %259 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %262, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.38, i64 0, i64 0), i64 18, i1 false) #15
  %263 = getelementptr inbounds i8, i8* %262, i64 18
  store i8 0, i8* %263, align 2
  %264 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 39
  %265 = bitcast %"class.std::__1::basic_string"* %264 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %266 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %265, i64 0, i32 1, i32 0
  store i8 18, i8* %266, align 1
  %267 = bitcast %"class.std::__1::basic_string"* %264 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %267, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.39, i64 0, i64 0), i64 18, i1 false) #15
  %268 = getelementptr inbounds i8, i8* %267, i64 18
  store i8 0, i8* %268, align 2
  %269 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 40
  %270 = bitcast %"class.std::__1::basic_string"* %269 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %271 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %270, i64 0, i32 1, i32 0
  store i8 19, i8* %271, align 1
  %272 = bitcast %"class.std::__1::basic_string"* %269 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %272, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.40, i64 0, i64 0), i64 19, i1 false) #15
  %273 = getelementptr inbounds i8, i8* %272, i64 19
  store i8 0, i8* %273, align 1
  %274 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 41
  %275 = bitcast %"class.std::__1::basic_string"* %274 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %276 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %275, i64 0, i32 1, i32 0
  store i8 17, i8* %276, align 1
  %277 = bitcast %"class.std::__1::basic_string"* %274 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %277, i8* align 1 getelementptr inbounds ([18 x i8], [18 x i8]* @.str.41, i64 0, i64 0), i64 17, i1 false) #15
  %278 = getelementptr inbounds i8, i8* %277, i64 17
  store i8 0, i8* %278, align 1
  %279 = tail call i8* @_Znwm(i64 48) #14
  %280 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 42, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %279, i8** %280, align 8
  %281 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 42, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %282 = bitcast i64* %281 to <2 x i64>*
  store <2 x i64> <i64 35, i64 -9223372036854775760>, <2 x i64>* %282, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %279, i8* align 1 getelementptr inbounds ([36 x i8], [36 x i8]* @.str.42, i64 0, i64 0), i64 35, i1 false) #15
  %283 = getelementptr inbounds i8, i8* %279, i64 35
  store i8 0, i8* %283, align 1
  %284 = tail call i8* @_Znwm(i64 32) #14
  %285 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 43, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %284, i8** %285, align 8
  %286 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 43, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %287 = bitcast i64* %286 to <2 x i64>*
  store <2 x i64> <i64 31, i64 -9223372036854775776>, <2 x i64>* %287, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %284, i8* align 1 getelementptr inbounds ([32 x i8], [32 x i8]* @.str.43, i64 0, i64 0), i64 31, i1 false) #15
  %288 = getelementptr inbounds i8, i8* %284, i64 31
  store i8 0, i8* %288, align 1
  %289 = tail call i8* @_Znwm(i64 32) #14
  %290 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 44, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %289, i8** %290, align 8
  %291 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 44, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %292 = bitcast i64* %291 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %292, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %289, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44, i64 0, i64 0), i64 28, i1 false) #15
  %293 = getelementptr inbounds i8, i8* %289, i64 28
  store i8 0, i8* %293, align 1
  %294 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 45
  %295 = bitcast %"class.std::__1::basic_string"* %294 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %296 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %295, i64 0, i32 1, i32 0
  store i8 20, i8* %296, align 1
  %297 = bitcast %"class.std::__1::basic_string"* %294 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %297, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.45, i64 0, i64 0), i64 20, i1 false) #15
  %298 = getelementptr inbounds i8, i8* %297, i64 20
  store i8 0, i8* %298, align 4
  %299 = getelementptr inbounds [46 x %"class.std::__1::basic_string"], [46 x %"class.std::__1::basic_string"]* %2, i64 0, i64 46
  %300 = getelementptr inbounds %"class.std::__1::unordered_set.1021", %"class.std::__1::unordered_set.1021"* %3, i64 0, i32 0
  br label %301

301:                                              ; preds = %301, %66
  %302 = phi %"class.std::__1::basic_string"* [ %68, %66 ], [ %304, %301 ]
  %303 = call { %"struct.std::__1::__hash_node_base.1026"*, i8 } @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1022"* %300, %"class.std::__1::basic_string"* dereferenceable(24) %302, %"class.std::__1::basic_string"* dereferenceable(24) %302) #15
  %304 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %302, i64 1
  %305 = icmp eq %"class.std::__1::basic_string"* %304, %299
  br i1 %305, label %306, label %301

306:                                              ; preds = %301, %316
  %307 = phi %"class.std::__1::basic_string"* [ %308, %316 ], [ %299, %301 ]
  %308 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %307, i64 -1
  %309 = bitcast %"class.std::__1::basic_string"* %308 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %310 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %309, i64 0, i32 1, i32 0
  %311 = load i8, i8* %310, align 1
  %312 = icmp slt i8 %311, 0
  br i1 %312, label %313, label %316

313:                                              ; preds = %306
  %314 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %308, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %315 = load i8*, i8** %314, align 8
  call void @_ZdlPv(i8* %315) #14
  br label %316

316:                                              ; preds = %306, %313
  %317 = icmp eq %"class.std::__1::basic_string"* %308, %68
  br i1 %317, label %318, label %306

318:                                              ; preds = %316
  call void @llvm.lifetime.end.p0i8(i64 1104, i8* nonnull %67) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt17AggressiveDCEPassD2Ev(%"class.spvtools::opt::AggressiveDCEPass"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt17AggressiveDCEPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.1026"* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %1, %18
  %7 = phi %"struct.std::__1::__hash_node_base.1026"* [ %9, %18 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026", %"struct.std::__1::__hash_node_base.1026"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026", %"struct.std::__1::__hash_node_base.1026"* %7, i64 2
  %11 = bitcast %"struct.std::__1::__hash_node_base.1026"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %6
  %16 = bitcast %"struct.std::__1::__hash_node_base.1026"* %10 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #14
  br label %18

18:                                               ; preds = %15, %6
  %19 = bitcast %"struct.std::__1::__hash_node_base.1026"* %7 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  %20 = icmp eq %"struct.std::__1::__hash_node_base.1026"* %9, null
  br i1 %20, label %21, label %6

21:                                               ; preds = %18, %1
  %22 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.1026"**, %"struct.std::__1::__hash_node_base.1026"*** %22, align 8
  store %"struct.std::__1::__hash_node_base.1026"** null, %"struct.std::__1::__hash_node_base.1026"*** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base.1026"** %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %"struct.std::__1::__hash_node_base.1026"** %23 to i8*
  tail call void @_ZdlPv(i8* %26) #14
  br label %27

27:                                               ; preds = %21, %25
  %28 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 12, i32 0, i32 0
  %29 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %28, align 8
  %30 = icmp eq %"class.spvtools::opt::Instruction"** %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = ptrtoint %"class.spvtools::opt::Instruction"** %29 to i64
  %33 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 12, i32 0, i32 1
  %34 = bitcast %"class.spvtools::opt::Instruction"*** %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = bitcast %"class.spvtools::opt::Instruction"** %29 to i8*
  tail call void @_ZdlPv(i8* %35) #14
  br label %36

36:                                               ; preds = %27, %31
  %37 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.915"* %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %36, %40
  %41 = phi %"struct.std::__1::__hash_node_base.915"* [ %43, %40 ], [ %38, %36 ]
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %41, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %42, align 8
  %44 = bitcast %"struct.std::__1::__hash_node_base.915"* %41 to i8*
  tail call void @_ZdlPv(i8* %44) #14
  %45 = icmp eq %"struct.std::__1::__hash_node_base.915"* %43, null
  br i1 %45, label %46, label %40

46:                                               ; preds = %40, %36
  %47 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %47, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base.915"** %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = bitcast %"struct.std::__1::__hash_node_base.915"** %48 to i8*
  tail call void @_ZdlPv(i8* %51) #14
  br label %52

52:                                               ; preds = %46, %50
  %53 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %54 = load i64*, i64** %53, align 8
  %55 = icmp eq i64* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = ptrtoint i64* %54 to i64
  %58 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %59 = bitcast i64** %58 to i64*
  store i64 %57, i64* %59, align 8
  %60 = bitcast i64* %54 to i8*
  tail call void @_ZdlPv(i8* %60) #14
  br label %61

61:                                               ; preds = %52, %56
  %62 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 9, i32 0, i32 0
  %63 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %62, align 8
  %64 = icmp eq %"class.spvtools::opt::Instruction"** %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %61
  %66 = ptrtoint %"class.spvtools::opt::Instruction"** %63 to i64
  %67 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 9, i32 0, i32 1
  %68 = bitcast %"class.spvtools::opt::Instruction"*** %67 to i64*
  store i64 %66, i64* %68, align 8
  %69 = bitcast %"class.spvtools::opt::Instruction"** %63 to i8*
  tail call void @_ZdlPv(i8* %69) #14
  br label %70

70:                                               ; preds = %61, %65
  %71 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.998"* %72, null
  br i1 %73, label %80, label %74

74:                                               ; preds = %70, %74
  %75 = phi %"struct.std::__1::__hash_node_base.998"* [ %77, %74 ], [ %72, %70 ]
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998", %"struct.std::__1::__hash_node_base.998"* %75, i64 0, i32 0
  %77 = load %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %76, align 8
  %78 = bitcast %"struct.std::__1::__hash_node_base.998"* %75 to i8*
  tail call void @_ZdlPv(i8* %78) #14
  %79 = icmp eq %"struct.std::__1::__hash_node_base.998"* %77, null
  br i1 %79, label %80, label %74

80:                                               ; preds = %74, %70
  %81 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load %"struct.std::__1::__hash_node_base.998"**, %"struct.std::__1::__hash_node_base.998"*** %81, align 8
  store %"struct.std::__1::__hash_node_base.998"** null, %"struct.std::__1::__hash_node_base.998"*** %81, align 8
  %83 = icmp eq %"struct.std::__1::__hash_node_base.998"** %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %80
  %85 = bitcast %"struct.std::__1::__hash_node_base.998"** %82 to i8*
  tail call void @_ZdlPv(i8* %85) #14
  br label %86

86:                                               ; preds = %80, %84
  %87 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %88 = load %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %87, align 8
  %89 = icmp eq %"struct.std::__1::__hash_node_base.974"* %88, null
  br i1 %89, label %96, label %90

90:                                               ; preds = %86, %90
  %91 = phi %"struct.std::__1::__hash_node_base.974"* [ %93, %90 ], [ %88, %86 ]
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974", %"struct.std::__1::__hash_node_base.974"* %91, i64 0, i32 0
  %93 = load %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %92, align 8
  %94 = bitcast %"struct.std::__1::__hash_node_base.974"* %91 to i8*
  tail call void @_ZdlPv(i8* %94) #14
  %95 = icmp eq %"struct.std::__1::__hash_node_base.974"* %93, null
  br i1 %95, label %96, label %90

96:                                               ; preds = %90, %86
  %97 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load %"struct.std::__1::__hash_node_base.974"**, %"struct.std::__1::__hash_node_base.974"*** %97, align 8
  store %"struct.std::__1::__hash_node_base.974"** null, %"struct.std::__1::__hash_node_base.974"*** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.974"** %98, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %96
  %101 = bitcast %"struct.std::__1::__hash_node_base.974"** %98 to i8*
  tail call void @_ZdlPv(i8* %101) #14
  br label %102

102:                                              ; preds = %96, %100
  %103 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %103, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base.946"* %104, null
  br i1 %105, label %112, label %106

106:                                              ; preds = %102, %106
  %107 = phi %"struct.std::__1::__hash_node_base.946"* [ %109, %106 ], [ %104, %102 ]
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946", %"struct.std::__1::__hash_node_base.946"* %107, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %108, align 8
  %110 = bitcast %"struct.std::__1::__hash_node_base.946"* %107 to i8*
  tail call void @_ZdlPv(i8* %110) #14
  %111 = icmp eq %"struct.std::__1::__hash_node_base.946"* %109, null
  br i1 %111, label %112, label %106

112:                                              ; preds = %106, %102
  %113 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load %"struct.std::__1::__hash_node_base.946"**, %"struct.std::__1::__hash_node_base.946"*** %113, align 8
  store %"struct.std::__1::__hash_node_base.946"** null, %"struct.std::__1::__hash_node_base.946"*** %113, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base.946"** %114, null
  br i1 %115, label %118, label %116

116:                                              ; preds = %112
  %117 = bitcast %"struct.std::__1::__hash_node_base.946"** %114 to i8*
  tail call void @_ZdlPv(i8* %117) #14
  br label %118

118:                                              ; preds = %112, %116
  %119 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %120 = load %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %119, align 8
  %121 = icmp eq %"struct.std::__1::__hash_node_base.946"* %120, null
  br i1 %121, label %128, label %122

122:                                              ; preds = %118, %122
  %123 = phi %"struct.std::__1::__hash_node_base.946"* [ %125, %122 ], [ %120, %118 ]
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946", %"struct.std::__1::__hash_node_base.946"* %123, i64 0, i32 0
  %125 = load %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %124, align 8
  %126 = bitcast %"struct.std::__1::__hash_node_base.946"* %123 to i8*
  tail call void @_ZdlPv(i8* %126) #14
  %127 = icmp eq %"struct.std::__1::__hash_node_base.946"* %125, null
  br i1 %127, label %128, label %122

128:                                              ; preds = %122, %118
  %129 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load %"struct.std::__1::__hash_node_base.946"**, %"struct.std::__1::__hash_node_base.946"*** %129, align 8
  store %"struct.std::__1::__hash_node_base.946"** null, %"struct.std::__1::__hash_node_base.946"*** %129, align 8
  %131 = icmp eq %"struct.std::__1::__hash_node_base.946"** %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %128
  %133 = bitcast %"struct.std::__1::__hash_node_base.946"** %130 to i8*
  tail call void @_ZdlPv(i8* %133) #14
  br label %134

134:                                              ; preds = %128, %132
  %135 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZNSt3__112__deque_baseIPN8spvtools3opt11InstructionENS_9allocatorIS4_EEED2Ev(%"class.std::__1::__deque_base"* %135) #15
  %136 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %0, i64 0, i32 0
  tail call void @_ZN8spvtools3opt7MemPassD2Ev(%"class.spvtools::opt::MemPass"* %136) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt17AggressiveDCEPassD0Ev(%"class.spvtools::opt::AggressiveDCEPass"*) unnamed_addr #4 comdat align 2 {
  tail call void @_ZN8spvtools3opt17AggressiveDCEPassD2Ev(%"class.spvtools::opt::AggressiveDCEPass"* %0) #15
  %2 = bitcast %"class.spvtools::opt::AggressiveDCEPass"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK8spvtools3opt17AggressiveDCEPass4nameEv(%"class.spvtools::opt::AggressiveDCEPass"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.47, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt17AggressiveDCEPass20GetPreservedAnalysesEv(%"class.spvtools::opt::AggressiveDCEPass"*) unnamed_addr #0 comdat align 2 {
  ret i32 49155
}

declare void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.96"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.96"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.96"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.96"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #14
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.96"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #14
  %23 = icmp eq %"struct.std::__1::__hash_node_base.96"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.96"** null, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.96"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.96"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #14
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node"* %34) #15
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #14
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #14
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #14
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #15
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #15
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  ret void

11:                                               ; preds = %2
  ret void
}

declare zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::tuple", align 8
  %3 = alloca %"class.std::__1::tuple.1147", align 1
  %4 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %5 = alloca %"class.std::__1::function.1218", align 8
  %6 = alloca %"class.std::__1::function.1047", align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %60, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.178"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %10, %14
  %15 = phi %"struct.std::__1::__hash_node_base.178"* [ %17, %14 ], [ %12, %10 ]
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %15, i64 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %16, align 8
  %18 = bitcast %"struct.std::__1::__hash_node_base.178"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #14
  %19 = icmp eq %"struct.std::__1::__hash_node_base.178"* %17, null
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %10
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = add i64 %22, -1
  %27 = and i64 %22, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %22, %27
  br label %43

31:                                               ; preds = %43, %24
  %32 = phi i64 [ 0, %24 ], [ %57, %43 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !37

42:                                               ; preds = %31, %34, %20
  store i64 0, i64* %7, align 8
  br label %60

43:                                               ; preds = %43, %29
  %44 = phi i64 [ 0, %29 ], [ %57, %43 ]
  %45 = phi i64 [ %30, %29 ], [ %58, %43 ]
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %44
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %44, 1
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %44, 2
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = or i64 %44, 3
  %55 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %55, i64 %54
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %56, align 8
  %57 = add nuw i64 %44, 4
  %58 = add i64 %45, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %31, label %43

60:                                               ; preds = %1, %42
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %61, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 0
  %64 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %63, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 1
  %66 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %65, align 8
  %67 = icmp eq %"class.std::__1::unique_ptr.28"* %64, %66
  br i1 %67, label %88, label %68

68:                                               ; preds = %60
  %69 = bitcast %"class.std::__1::function.1047"* %6 to i8*
  %70 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %6, i64 0, i32 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %6, i64 0, i32 0, i32 2
  %72 = bitcast %"class.std::__1::function.1047"* %6 to %"class.spvtools::opt::IRContext"**
  %73 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %6, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast [8 x i8]* %73 to %"class.spvtools::opt::BasicBlock"**
  %75 = bitcast %"class.std::__1::function.1218"* %5 to i8*
  %76 = ptrtoint %"class.std::__1::function.1047"* %6 to i64
  %77 = getelementptr inbounds %"class.std::__1::function.1218", %"class.std::__1::function.1218"* %5, i64 0, i32 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.std::__1::function.1218", %"class.std::__1::function.1218"* %5, i64 0, i32 0, i32 2
  %79 = bitcast %"class.std::__1::function.1218"* %5 to i64*
  %80 = getelementptr inbounds %"class.std::__1::function.1218", %"class.std::__1::function.1218"* %5, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::function.1218", %"class.std::__1::function.1218"* %5, i64 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %6, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.spvtools::opt::Instruction"** %4 to i8*
  %84 = bitcast %"class.std::__1::tuple"* %2 to i8*
  %85 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::tuple.1147", %"class.std::__1::tuple.1147"* %3, i64 0, i32 0
  %87 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0
  br label %92

88:                                               ; preds = %101, %60
  %89 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %90 = load i32, i32* %89, align 8
  %91 = or i32 %90, 2
  store i32 %91, i32* %89, align 8
  ret void

92:                                               ; preds = %68, %101
  %93 = phi %"class.std::__1::unique_ptr.28"* [ %64, %68 ], [ %102, %101 ]
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %94, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 0
  %97 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %96, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 1
  %99 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %98, align 8
  %100 = icmp eq %"class.std::__1::unique_ptr.40"* %97, %99
  br i1 %100, label %101, label %104

101:                                              ; preds = %151, %92
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 1
  %103 = icmp eq %"class.std::__1::unique_ptr.28"* %102, %66
  br i1 %103, label %88, label %92

104:                                              ; preds = %92, %151
  %105 = phi %"class.std::__1::unique_ptr.40"* [ %152, %151 ], [ %97, %92 ]
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %106, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #15
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %70, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %71, align 8
  store %"class.spvtools::opt::IRContext"* %0, %"class.spvtools::opt::IRContext"** %72, align 8
  store %"class.spvtools::opt::BasicBlock"* %107, %"class.spvtools::opt::BasicBlock"** %74, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #15
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %78, align 8
  store i64 %76, i64* %79, align 8
  %108 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %108, align 8
  %110 = icmp eq %"class.spvtools::opt::Instruction"* %109, null
  br i1 %110, label %117, label %111

111:                                              ; preds = %104
  %112 = ptrtoint %"class.spvtools::opt::BasicBlock"* %107 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83)
  store %"class.spvtools::opt::Instruction"* %109, %"class.spvtools::opt::Instruction"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #15
  store %"class.spvtools::opt::Instruction"** %4, %"class.spvtools::opt::Instruction"*** %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %86) #15
  %113 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %87, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %4, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.1147"* nonnull dereferenceable(1) %3) #15
  %114 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %113, 0
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %114, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %86) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #15
  %116 = bitcast %"struct.std::__1::__hash_node_base.178"* %115 to i64*
  store i64 %112, i64* %116, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83)
  br label %117

117:                                              ; preds = %111, %104
  %118 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %119 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %118, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %119, i64 0, i32 0, i32 3
  %121 = load i8, i8* %120, align 8, !range !2
  %122 = icmp ne i8 %121, 0
  %123 = icmp eq %"class.spvtools::opt::Instruction"* %119, null
  %124 = or i1 %123, %122
  br i1 %124, label %137, label %125

125:                                              ; preds = %117, %128
  %126 = phi %"class.spvtools::opt::Instruction"* [ %134, %128 ], [ %119, %117 ]
  %127 = icmp eq %"class.spvtools::opt::Instruction"* %126, null
  br i1 %127, label %137, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %126, i64 0, i32 0, i32 1
  %130 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %129, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %130, i64 0, i32 0, i32 3
  %132 = load i8, i8* %131, align 8, !range !2
  %133 = icmp eq i8 %132, 0
  %134 = select i1 %133, %"class.spvtools::opt::Instruction"* %130, %"class.spvtools::opt::Instruction"* null
  %135 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  %136 = call zeroext i1 %135(%"union.std::__1::__function::__policy_storage"* nonnull %80, %"class.spvtools::opt::Instruction"* nonnull %126) #15
  br i1 %136, label %125, label %137

137:                                              ; preds = %128, %125, %117
  %138 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %78, align 8
  %139 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %138, i64 0, i32 1
  %140 = load void (i8*)*, void (i8*)** %139, align 8
  %141 = icmp eq void (i8*)* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %137
  %143 = load i8*, i8** %81, align 8
  call void %140(i8* %143) #15
  br label %144

144:                                              ; preds = %137, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #15
  %145 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %71, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %145, i64 0, i32 1
  %147 = load void (i8*)*, void (i8*)** %146, align 8
  %148 = icmp eq void (i8*)* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %144
  %150 = load i8*, i8** %82, align 8
  call void %147(i8* %150) #15
  br label %151

151:                                              ; preds = %144, %149
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #15
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 1
  %153 = icmp eq %"class.std::__1::unique_ptr.40"* %152, %99
  br i1 %153, label %101, label %104
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1147", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %7 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  %8 = bitcast %"class.spvtools::opt::Instruction"** %5 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::IRContext"**
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %12 = bitcast [8 x i8]* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 9, i32 0
  %15 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #15
  %16 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::tuple.1147", %"class.std::__1::tuple.1147"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #15
  %18 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %14, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1147"* nonnull dereferenceable(1) %4) #15
  %19 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %18, 0
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %19, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #15
  %21 = bitcast %"struct.std::__1::__hash_node_base.178"* %20 to i64*
  store i64 %13, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1147"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::Instruction"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #15, !range !11
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.178"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.178"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.178"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.178"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.178"* %65 to %"class.spvtools::opt::Instruction"**
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #14, !noalias !38
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !38
  %75 = load i64, i64* %74, align 8, !noalias !38
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !38
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %78, align 8, !noalias !38
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !38
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"**
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %81, align 8, !noalias !38
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #15, !range !11
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #15
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #15, !range !11
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.178"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.178"* %124, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.178"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.178"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #15, !range !11
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.178"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.178"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } undef, %"struct.std::__1::__hash_node_base.178"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.178"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !11
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #15
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !11
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #15
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #15, !range !11
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #15
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #4 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #16
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.174"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.178"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.178"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !41

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.178"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.178"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #15, !range !11
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.178"* %36, %"struct.std::__1::__hash_node_base.178"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.178"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.178"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.178"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.178"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.178"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.178"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.178"* %82, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.178"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.178"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.178"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.178"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.178"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.178"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.178"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.178"* %80, %"struct.std::__1::__hash_node_base.178"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.178"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.178"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.178"** null, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.178"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.178"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #14
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseIPN8spvtools3opt11InstructionENS_9allocatorIS4_EEED2Ev(%"class.std::__1::__deque_base"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 9
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %3, i64 %6
  %8 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %8, align 8
  %10 = icmp eq %"class.spvtools::opt::Instruction"*** %9, %3
  %11 = ptrtoint %"class.spvtools::opt::Instruction"*** %9 to i64
  %12 = ptrtoint %"class.spvtools::opt::Instruction"*** %3 to i64
  br i1 %10, label %13, label %15

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  br label %28

15:                                               ; preds = %1
  %16 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %7, align 8
  %17 = and i64 %5, 511
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, i64 %17
  %19 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %5
  %22 = lshr i64 %21, 9
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %3, i64 %22
  %24 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %23, align 8
  %25 = and i64 %21, 511
  %26 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %24, i64 %25
  %27 = icmp eq %"class.spvtools::opt::Instruction"** %26, %18
  br i1 %27, label %28, label %34

28:                                               ; preds = %47, %15, %13
  %29 = phi i64* [ %14, %13 ], [ %19, %15 ], [ %19, %47 ]
  store i64 0, i64* %29, align 8
  %30 = bitcast %"class.spvtools::opt::Instruction"**** %8 to i64*
  %31 = sub i64 %11, %12
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, 2
  br i1 %33, label %52, label %65

34:                                               ; preds = %15, %47
  %35 = phi %"class.spvtools::opt::Instruction"** [ %50, %47 ], [ %18, %15 ]
  %36 = phi %"class.spvtools::opt::Instruction"*** [ %49, %47 ], [ %7, %15 ]
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %35, i64 1
  %38 = ptrtoint %"class.spvtools::opt::Instruction"** %37 to i64
  %39 = bitcast %"class.spvtools::opt::Instruction"*** %36 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = icmp eq i64 %41, 4096
  br i1 %42, label %43, label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %36, i64 1
  %45 = bitcast %"class.spvtools::opt::Instruction"*** %44 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %43, %34
  %48 = phi i64 [ %46, %43 ], [ %38, %34 ]
  %49 = phi %"class.spvtools::opt::Instruction"*** [ %44, %43 ], [ %36, %34 ]
  %50 = inttoptr i64 %48 to %"class.spvtools::opt::Instruction"**
  %51 = icmp eq %"class.spvtools::opt::Instruction"** %26, %50
  br i1 %51, label %28, label %34

52:                                               ; preds = %28, %52
  %53 = phi %"class.spvtools::opt::Instruction"*** [ %57, %52 ], [ %3, %28 ]
  %54 = bitcast %"class.spvtools::opt::Instruction"*** %53 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #14
  %56 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %2, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %56, i64 1
  store %"class.spvtools::opt::Instruction"*** %57, %"class.spvtools::opt::Instruction"**** %2, align 8
  %58 = load i64, i64* %30, align 8
  %59 = ptrtoint %"class.spvtools::opt::Instruction"*** %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = icmp ugt i64 %61, 2
  br i1 %62, label %52, label %63

63:                                               ; preds = %52
  %64 = inttoptr i64 %58 to %"class.spvtools::opt::Instruction"***
  br label %65

65:                                               ; preds = %63, %28
  %66 = phi %"class.spvtools::opt::Instruction"*** [ %9, %28 ], [ %64, %63 ]
  %67 = phi %"class.spvtools::opt::Instruction"*** [ %3, %28 ], [ %57, %63 ]
  %68 = phi i64 [ %32, %28 ], [ %61, %63 ]
  switch i64 %68, label %72 [
    i64 1, label %70
    i64 2, label %69
  ]

69:                                               ; preds = %65
  br label %70

70:                                               ; preds = %65, %69
  %71 = phi i64 [ 512, %69 ], [ 256, %65 ]
  store i64 %71, i64* %4, align 8
  br label %72

72:                                               ; preds = %70, %65
  %73 = icmp eq %"class.spvtools::opt::Instruction"*** %67, %66
  br i1 %73, label %83, label %74

74:                                               ; preds = %72, %74
  %75 = phi %"class.spvtools::opt::Instruction"*** [ %78, %74 ], [ %67, %72 ]
  %76 = bitcast %"class.spvtools::opt::Instruction"*** %75 to i8**
  %77 = load i8*, i8** %76, align 8
  tail call void @_ZdlPv(i8* %77) #14
  %78 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %75, i64 1
  %79 = icmp eq %"class.spvtools::opt::Instruction"*** %78, %66
  br i1 %79, label %80, label %74

80:                                               ; preds = %74
  %81 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %2, align 8
  %82 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %8, align 8
  br label %83

83:                                               ; preds = %80, %72
  %84 = phi %"class.spvtools::opt::Instruction"*** [ %82, %80 ], [ %66, %72 ]
  %85 = phi %"class.spvtools::opt::Instruction"*** [ %81, %80 ], [ %66, %72 ]
  %86 = icmp eq %"class.spvtools::opt::Instruction"*** %84, %85
  br i1 %86, label %95, label %87

87:                                               ; preds = %83
  %88 = ptrtoint %"class.spvtools::opt::Instruction"*** %85 to i64
  %89 = getelementptr %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %84, i64 -1
  %90 = ptrtoint %"class.spvtools::opt::Instruction"*** %89 to i64
  %91 = sub i64 %90, %88
  %92 = lshr i64 %91, 3
  %93 = xor i64 %92, -1
  %94 = getelementptr %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %84, i64 %93
  store %"class.spvtools::opt::Instruction"*** %94, %"class.spvtools::opt::Instruction"**** %8, align 8
  br label %95

95:                                               ; preds = %87, %83
  %96 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 0
  %97 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %96, align 8
  %98 = icmp eq %"class.spvtools::opt::Instruction"*** %97, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %95
  %100 = bitcast %"class.spvtools::opt::Instruction"*** %97 to i8*
  tail call void @_ZdlPv(i8* %100) #14
  br label %101

101:                                              ; preds = %95, %99
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  br i1 %5, label %22, label %7

7:                                                ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %8, align 8
  store %"class.std::__1::vector.3"* %4, %"class.std::__1::vector.3"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.3"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  br label %20

20:                                               ; preds = %15, %11
  %21 = bitcast %"class.std::__1::vector.3"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #14
  br label %77

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %23, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.3"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i32* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #14
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.std::__1::vector.3"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #14
  br label %37

37:                                               ; preds = %22, %35
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %42, %49
  %46 = phi i64 [ 0, %42 ], [ %55, %49 ]
  %47 = load i64, i64* %38, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i32*, i32** %43, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %46
  store i32 %52, i32* %54, align 4
  %55 = add nuw i64 %46, 1
  %56 = load i64, i64* %39, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %45, label %58

58:                                               ; preds = %45, %49, %37
  %59 = phi i64 [ 0, %37 ], [ %55, %49 ], [ %46, %45 ]
  %60 = load i64, i64* %38, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %59, %62 ], [ %72, %65 ]
  %67 = load i32*, i32** %63, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %66
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %68, align 4
  %72 = add nuw i64 %66, 1
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58
  %76 = phi i64 [ %60, %58 ], [ %73, %65 ]
  store i64 %76, i64* %39, align 8
  br label %77

77:                                               ; preds = %20, %7, %75
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  store i64 0, i64* %78, align 8
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #14
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #14
  ret void
}

declare void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIPN8spvtools3opt11InstructionENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.spvtools::opt::Instruction"**, align 8
  %3 = alloca %"class.spvtools::opt::Instruction"**, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.1157", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 511
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -512
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %10, align 8
  %12 = bitcast %"class.spvtools::opt::Instruction"*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %11, i64 1
  store %"class.spvtools::opt::Instruction"*** %14, %"class.spvtools::opt::Instruction"**** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %17, align 8
  %19 = icmp eq %"class.spvtools::opt::Instruction"*** %16, %18
  %20 = ptrtoint %"class.spvtools::opt::Instruction"*** %18 to i64
  %21 = bitcast %"class.spvtools::opt::Instruction"*** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %23, align 8
  %25 = icmp ugt %"class.spvtools::opt::Instruction"*** %14, %24
  %26 = ptrtoint %"class.spvtools::opt::Instruction"*** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"class.spvtools::opt::Instruction"*** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %14, i64 %32
  %34 = ptrtoint %"class.spvtools::opt::Instruction"*** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"class.spvtools::opt::Instruction"*** %33 to i8*
  %40 = bitcast %"class.spvtools::opt::Instruction"*** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #15
  %41 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"class.spvtools::opt::Instruction"*** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %33, i64 %36
  store %"class.spvtools::opt::Instruction"*** %44, %"class.spvtools::opt::Instruction"**** %15, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %43, i64 %32
  store %"class.spvtools::opt::Instruction"*** %45, %"class.spvtools::opt::Instruction"**** %10, align 8
  %46 = bitcast %"class.spvtools::opt::Instruction"*** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"class.spvtools::opt::Instruction"**** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #16
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #14
  %60 = bitcast i8* %59 to %"class.spvtools::opt::Instruction"***
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %60, i64 %57
  %63 = ptrtoint %"class.spvtools::opt::Instruction"*** %62 to i64
  %64 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %60, i64 %53
  %65 = ptrtoint %"class.spvtools::opt::Instruction"*** %64 to i64
  %66 = ptrtoint %"class.spvtools::opt::Instruction"*** %14 to i64
  %67 = ptrtoint %"class.spvtools::opt::Instruction"*** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"class.spvtools::opt::Instruction"*** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"class.spvtools::opt::Instruction"*** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"class.spvtools::opt::Instruction"*** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %79, i64 1
  %87 = ptrtoint %"class.spvtools::opt::Instruction"*** %86 to i64
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !42

91:                                               ; preds = %78
  %92 = ptrtoint %"class.spvtools::opt::Instruction"*** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"class.spvtools::opt::Instruction"*** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"class.spvtools::opt::Instruction"*** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"class.spvtools::opt::Instruction"*** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"class.spvtools::opt::Instruction"*** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"class.spvtools::opt::Instruction"*** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %99, i64 1
  %106 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %101, i64 1
  %107 = bitcast %"class.spvtools::opt::Instruction"*** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.spvtools::opt::Instruction"*** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %99, i64 2
  %111 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %101, i64 2
  %112 = bitcast %"class.spvtools::opt::Instruction"*** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.spvtools::opt::Instruction"*** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %99, i64 3
  %116 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %101, i64 3
  %117 = bitcast %"class.spvtools::opt::Instruction"*** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.spvtools::opt::Instruction"*** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %99, i64 4
  %121 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %101, i64 4
  %122 = bitcast %"class.spvtools::opt::Instruction"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.spvtools::opt::Instruction"*** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %99, i64 5
  %126 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %101, i64 5
  %127 = bitcast %"class.spvtools::opt::Instruction"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.spvtools::opt::Instruction"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %99, i64 6
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %101, i64 6
  %132 = bitcast %"class.spvtools::opt::Instruction"*** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.spvtools::opt::Instruction"*** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %99, i64 7
  %136 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %101, i64 7
  %137 = bitcast %"class.spvtools::opt::Instruction"*** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.spvtools::opt::Instruction"*** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %99, i64 8
  %141 = ptrtoint %"class.spvtools::opt::Instruction"*** %140 to i64
  %142 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %101, i64 8
  %143 = icmp eq %"class.spvtools::opt::Instruction"*** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"class.spvtools::opt::Instruction"*** %70 to i64
  %146 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"class.spvtools::opt::Instruction"*** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"class.spvtools::opt::Instruction"**** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"class.spvtools::opt::Instruction"**** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"class.spvtools::opt::Instruction"*** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"class.spvtools::opt::Instruction"*** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #14
  %156 = bitcast %"class.spvtools::opt::Instruction"**** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %15, align 8
  %161 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %160, i64 1
  store %"class.spvtools::opt::Instruction"*** %161, %"class.spvtools::opt::Instruction"**** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"class.spvtools::opt::Instruction"**** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"class.spvtools::opt::Instruction"**** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"class.spvtools::opt::Instruction"**** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"class.spvtools::opt::Instruction"***
  %181 = inttoptr i64 %169 to %"class.spvtools::opt::Instruction"***
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"class.spvtools::opt::Instruction"*** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #15
  %186 = tail call i8* @_Znwm(i64 4096) #14
  %187 = bitcast %"class.spvtools::opt::Instruction"*** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPPN8spvtools3opt11InstructionENS_9allocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer"* %163, %"class.spvtools::opt::Instruction"*** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #15
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"class.spvtools::opt::Instruction"*** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #15
  %190 = tail call i8* @_Znwm(i64 4096) #14
  %191 = bitcast %"class.spvtools::opt::Instruction"*** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPPN8spvtools3opt11InstructionENS_9allocatorIS5_EEE10push_frontEOS5_(%"struct.std::__1::__split_buffer"* %163, %"class.spvtools::opt::Instruction"*** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #15
  %192 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %167, align 8
  %193 = bitcast %"class.spvtools::opt::Instruction"*** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %192, i64 1
  store %"class.spvtools::opt::Instruction"*** %195, %"class.spvtools::opt::Instruction"**** %167, align 8
  %196 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %164, align 8
  %197 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %172, align 8
  %198 = icmp eq %"class.spvtools::opt::Instruction"*** %196, %197
  %199 = ptrtoint %"class.spvtools::opt::Instruction"*** %197 to i64
  %200 = bitcast %"class.spvtools::opt::Instruction"*** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %202, align 8
  %204 = icmp ugt %"class.spvtools::opt::Instruction"*** %195, %203
  %205 = ptrtoint %"class.spvtools::opt::Instruction"*** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"class.spvtools::opt::Instruction"*** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %195, i64 %211
  %213 = ptrtoint %"class.spvtools::opt::Instruction"*** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"class.spvtools::opt::Instruction"*** %212 to i8*
  %219 = bitcast %"class.spvtools::opt::Instruction"*** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #15
  %220 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"class.spvtools::opt::Instruction"*** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %212, i64 %215
  store %"class.spvtools::opt::Instruction"*** %223, %"class.spvtools::opt::Instruction"**** %164, align 8
  %224 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %222, i64 %211
  store %"class.spvtools::opt::Instruction"*** %224, %"class.spvtools::opt::Instruction"**** %167, align 8
  %225 = bitcast %"class.spvtools::opt::Instruction"*** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #16
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #14
  %237 = bitcast i8* %236 to %"class.spvtools::opt::Instruction"***
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %237, i64 %234
  %240 = ptrtoint %"class.spvtools::opt::Instruction"*** %239 to i64
  %241 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %237, i64 %230
  %242 = ptrtoint %"class.spvtools::opt::Instruction"*** %241 to i64
  %243 = ptrtoint %"class.spvtools::opt::Instruction"*** %195 to i64
  %244 = ptrtoint %"class.spvtools::opt::Instruction"*** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"class.spvtools::opt::Instruction"*** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"class.spvtools::opt::Instruction"*** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"class.spvtools::opt::Instruction"*** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %256, i64 1
  %264 = ptrtoint %"class.spvtools::opt::Instruction"*** %263 to i64
  %265 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !43

268:                                              ; preds = %255
  %269 = ptrtoint %"class.spvtools::opt::Instruction"*** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"class.spvtools::opt::Instruction"*** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"class.spvtools::opt::Instruction"*** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"class.spvtools::opt::Instruction"*** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"class.spvtools::opt::Instruction"*** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"class.spvtools::opt::Instruction"*** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %276, i64 1
  %283 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %278, i64 1
  %284 = bitcast %"class.spvtools::opt::Instruction"*** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"class.spvtools::opt::Instruction"*** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %276, i64 2
  %288 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %278, i64 2
  %289 = bitcast %"class.spvtools::opt::Instruction"*** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"class.spvtools::opt::Instruction"*** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %276, i64 3
  %293 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %278, i64 3
  %294 = bitcast %"class.spvtools::opt::Instruction"*** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"class.spvtools::opt::Instruction"*** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %276, i64 4
  %298 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %278, i64 4
  %299 = bitcast %"class.spvtools::opt::Instruction"*** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"class.spvtools::opt::Instruction"*** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %276, i64 5
  %303 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %278, i64 5
  %304 = bitcast %"class.spvtools::opt::Instruction"*** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"class.spvtools::opt::Instruction"*** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %276, i64 6
  %308 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %278, i64 6
  %309 = bitcast %"class.spvtools::opt::Instruction"*** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"class.spvtools::opt::Instruction"*** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %276, i64 7
  %313 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %278, i64 7
  %314 = bitcast %"class.spvtools::opt::Instruction"*** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"class.spvtools::opt::Instruction"*** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %276, i64 8
  %318 = ptrtoint %"class.spvtools::opt::Instruction"*** %317 to i64
  %319 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %278, i64 8
  %320 = icmp eq %"class.spvtools::opt::Instruction"*** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"class.spvtools::opt::Instruction"*** %247 to i64
  %323 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"class.spvtools::opt::Instruction"*** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"class.spvtools::opt::Instruction"*** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"class.spvtools::opt::Instruction"*** %325 to i8*
  call void @_ZdlPv(i8* %330) #14
  %331 = bitcast %"class.spvtools::opt::Instruction"**** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %164, align 8
  %336 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %335, i64 1
  store %"class.spvtools::opt::Instruction"*** %336, %"class.spvtools::opt::Instruction"**** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.1157"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #15
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.1157", %"struct.std::__1::__split_buffer.1157"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.1157", %"struct.std::__1::__split_buffer.1157"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.1157", %"struct.std::__1::__split_buffer.1157"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.1157", %"struct.std::__1::__split_buffer.1157"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.1157"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"class.spvtools::opt::Instruction"*** null, %"class.spvtools::opt::Instruction"**** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.935"** %342 to %"class.std::__1::__compressed_pair.932"**
  store %"class.std::__1::__compressed_pair.932"* %346, %"class.std::__1::__compressed_pair.932"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #16
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #14
  %354 = bitcast i8* %353 to %"class.spvtools::opt::Instruction"***
  %355 = bitcast %"struct.std::__1::__split_buffer.1157"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %354, i64 %171
  store %"class.spvtools::opt::Instruction"*** %356, %"class.spvtools::opt::Instruction"**** %340, align 8
  store %"class.spvtools::opt::Instruction"*** %356, %"class.spvtools::opt::Instruction"**** %339, align 8
  %357 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %354, i64 %345
  store %"class.spvtools::opt::Instruction"*** %357, %"class.spvtools::opt::Instruction"**** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #14
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"class.spvtools::opt::Instruction"*** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"class.spvtools::opt::Instruction"*** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"class.spvtools::opt::Instruction"*** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %356, i64 %370
  store %"class.spvtools::opt::Instruction"*** %371, %"class.spvtools::opt::Instruction"**** %340, align 8
  store %"class.spvtools::opt::Instruction"*** %371, %"class.spvtools::opt::Instruction"**** %339, align 8
  %372 = ptrtoint %"class.spvtools::opt::Instruction"*** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #16
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.1157"* %4 to i64*
  %382 = bitcast %"class.spvtools::opt::Instruction"**** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #14
  %386 = bitcast i8* %385 to %"class.spvtools::opt::Instruction"***
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %386, i64 %383
  %389 = ptrtoint %"class.spvtools::opt::Instruction"*** %388 to i64
  %390 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %386, i64 %377
  %391 = ptrtoint %"class.spvtools::opt::Instruction"*** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"class.spvtools::opt::Instruction"**** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"class.spvtools::opt::Instruction"**** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #14
  %394 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %164, align 8
  %395 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %167, align 8
  %396 = ptrtoint %"class.spvtools::opt::Instruction"*** %395 to i64
  %397 = ptrtoint %"class.spvtools::opt::Instruction"*** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"class.spvtools::opt::Instruction"*** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"class.spvtools::opt::Instruction"*** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"class.spvtools::opt::Instruction"*** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"class.spvtools::opt::Instruction"*** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %406, i64 1
  store %"class.spvtools::opt::Instruction"*** %408, %"class.spvtools::opt::Instruction"**** %340, align 8
  %409 = icmp eq %"class.spvtools::opt::Instruction"*** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"class.spvtools::opt::Instruction"*** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.1157"* %4 to i64*
  %413 = bitcast %"class.spvtools::opt::Instruction"**** %339 to i64*
  %414 = bitcast %"class.spvtools::opt::Instruction"**** %340 to i64*
  %415 = bitcast %"class.spvtools::opt::Instruction"**** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"class.spvtools::opt::Instruction"*** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.1157"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"class.spvtools::opt::Instruction"**** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"class.spvtools::opt::Instruction"**** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"class.spvtools::opt::Instruction"**** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"class.spvtools::opt::Instruction"***
  %441 = inttoptr i64 %434 to %"class.spvtools::opt::Instruction"***
  %442 = icmp eq %"class.spvtools::opt::Instruction"*** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %441, i64 -1
  %445 = ptrtoint %"class.spvtools::opt::Instruction"*** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %441, i64 %448
  store %"class.spvtools::opt::Instruction"*** %449, %"class.spvtools::opt::Instruction"**** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #14
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #15
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"class.spvtools::opt::Instruction"*** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPPN8spvtools3opt11InstructionERNS_9allocatorIS5_EEE10push_frontERKS5_(%"struct.std::__1::__split_buffer.1157"* nonnull %4, %"class.spvtools::opt::Instruction"*** dereferenceable(8) %457)
  %458 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %167, align 8
  %459 = icmp eq %"class.spvtools::opt::Instruction"*** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN8spvtools3opt11InstructionENS_9allocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer"*, %"class.spvtools::opt::Instruction"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %5, align 8
  %7 = icmp eq %"class.spvtools::opt::Instruction"*** %4, %6
  %8 = ptrtoint %"class.spvtools::opt::Instruction"*** %6 to i64
  %9 = bitcast %"class.spvtools::opt::Instruction"*** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %13, align 8
  %15 = icmp ugt %"class.spvtools::opt::Instruction"*** %12, %14
  %16 = ptrtoint %"class.spvtools::opt::Instruction"*** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.spvtools::opt::Instruction"*** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %12, i64 %22
  %24 = ptrtoint %"class.spvtools::opt::Instruction"*** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.spvtools::opt::Instruction"*** %23 to i8*
  %30 = bitcast %"class.spvtools::opt::Instruction"*** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #15
  %31 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.spvtools::opt::Instruction"*** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %23, i64 %26
  store %"class.spvtools::opt::Instruction"*** %34, %"class.spvtools::opt::Instruction"**** %3, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %33, i64 %22
  store %"class.spvtools::opt::Instruction"*** %35, %"class.spvtools::opt::Instruction"**** %11, align 8
  %36 = bitcast %"class.spvtools::opt::Instruction"*** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.spvtools::opt::Instruction"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #16
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #14
  %50 = bitcast i8* %49 to %"class.spvtools::opt::Instruction"***
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %50, i64 %47
  %53 = ptrtoint %"class.spvtools::opt::Instruction"*** %52 to i64
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %50, i64 %43
  %55 = ptrtoint %"class.spvtools::opt::Instruction"*** %54 to i64
  %56 = ptrtoint %"class.spvtools::opt::Instruction"*** %12 to i64
  %57 = ptrtoint %"class.spvtools::opt::Instruction"*** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.spvtools::opt::Instruction"*** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.spvtools::opt::Instruction"*** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.spvtools::opt::Instruction"*** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %69, i64 1
  %77 = ptrtoint %"class.spvtools::opt::Instruction"*** %76 to i64
  %78 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !44

81:                                               ; preds = %68
  %82 = ptrtoint %"class.spvtools::opt::Instruction"*** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.spvtools::opt::Instruction"*** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.spvtools::opt::Instruction"*** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.spvtools::opt::Instruction"*** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.spvtools::opt::Instruction"*** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.spvtools::opt::Instruction"*** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %89, i64 1
  %96 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %91, i64 1
  %97 = bitcast %"class.spvtools::opt::Instruction"*** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.spvtools::opt::Instruction"*** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %89, i64 2
  %101 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %91, i64 2
  %102 = bitcast %"class.spvtools::opt::Instruction"*** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.spvtools::opt::Instruction"*** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %89, i64 3
  %106 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %91, i64 3
  %107 = bitcast %"class.spvtools::opt::Instruction"*** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.spvtools::opt::Instruction"*** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %89, i64 4
  %111 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %91, i64 4
  %112 = bitcast %"class.spvtools::opt::Instruction"*** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.spvtools::opt::Instruction"*** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %89, i64 5
  %116 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %91, i64 5
  %117 = bitcast %"class.spvtools::opt::Instruction"*** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.spvtools::opt::Instruction"*** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %89, i64 6
  %121 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %91, i64 6
  %122 = bitcast %"class.spvtools::opt::Instruction"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.spvtools::opt::Instruction"*** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %89, i64 7
  %126 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %91, i64 7
  %127 = bitcast %"class.spvtools::opt::Instruction"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.spvtools::opt::Instruction"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %89, i64 8
  %131 = ptrtoint %"class.spvtools::opt::Instruction"*** %130 to i64
  %132 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %91, i64 8
  %133 = icmp eq %"class.spvtools::opt::Instruction"*** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.spvtools::opt::Instruction"*** %60 to i64
  %136 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.spvtools::opt::Instruction"*** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.spvtools::opt::Instruction"**** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.spvtools::opt::Instruction"**** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.spvtools::opt::Instruction"*** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.spvtools::opt::Instruction"*** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #14
  %146 = bitcast %"class.spvtools::opt::Instruction"**** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.spvtools::opt::Instruction"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %3, align 8
  %153 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %152, i64 1
  store %"class.spvtools::opt::Instruction"*** %153, %"class.spvtools::opt::Instruction"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN8spvtools3opt11InstructionENS_9allocatorIS5_EEE10push_frontEOS5_(%"struct.std::__1::__split_buffer"*, %"class.spvtools::opt::Instruction"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %5, align 8
  %7 = icmp eq %"class.spvtools::opt::Instruction"*** %4, %6
  %8 = ptrtoint %"class.spvtools::opt::Instruction"*** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %12, align 8
  %14 = icmp ult %"class.spvtools::opt::Instruction"*** %11, %13
  %15 = bitcast %"class.spvtools::opt::Instruction"**** %12 to i64*
  %16 = ptrtoint %"class.spvtools::opt::Instruction"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.spvtools::opt::Instruction"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %11, i64 %22
  %24 = ptrtoint %"class.spvtools::opt::Instruction"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %23, i64 %29
  %31 = bitcast %"class.spvtools::opt::Instruction"*** %30 to i8*
  %32 = bitcast %"class.spvtools::opt::Instruction"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #15
  %33 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.spvtools::opt::Instruction"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.spvtools::opt::Instruction"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.spvtools::opt::Instruction"*** %36, %"class.spvtools::opt::Instruction"**** %3, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %35, i64 %22
  store %"class.spvtools::opt::Instruction"*** %37, %"class.spvtools::opt::Instruction"**** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #16
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #14
  %51 = bitcast i8* %50 to %"class.spvtools::opt::Instruction"***
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %51, i64 %48
  %54 = ptrtoint %"class.spvtools::opt::Instruction"*** %53 to i64
  %55 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %51, i64 %43
  %56 = ptrtoint %"class.spvtools::opt::Instruction"*** %55 to i64
  %57 = ptrtoint %"class.spvtools::opt::Instruction"*** %4 to i64
  %58 = ptrtoint %"class.spvtools::opt::Instruction"*** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.spvtools::opt::Instruction"*** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.spvtools::opt::Instruction"*** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.spvtools::opt::Instruction"*** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %70, i64 1
  %78 = ptrtoint %"class.spvtools::opt::Instruction"*** %77 to i64
  %79 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !45

82:                                               ; preds = %69
  %83 = ptrtoint %"class.spvtools::opt::Instruction"*** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.spvtools::opt::Instruction"*** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.spvtools::opt::Instruction"*** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.spvtools::opt::Instruction"*** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.spvtools::opt::Instruction"*** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.spvtools::opt::Instruction"*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 1
  %97 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 1
  %98 = bitcast %"class.spvtools::opt::Instruction"*** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.spvtools::opt::Instruction"*** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 2
  %102 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 2
  %103 = bitcast %"class.spvtools::opt::Instruction"*** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.spvtools::opt::Instruction"*** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 3
  %107 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 3
  %108 = bitcast %"class.spvtools::opt::Instruction"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.spvtools::opt::Instruction"*** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 4
  %112 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 4
  %113 = bitcast %"class.spvtools::opt::Instruction"*** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.spvtools::opt::Instruction"*** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 5
  %117 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 5
  %118 = bitcast %"class.spvtools::opt::Instruction"*** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.spvtools::opt::Instruction"*** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 6
  %122 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 6
  %123 = bitcast %"class.spvtools::opt::Instruction"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.spvtools::opt::Instruction"*** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 7
  %127 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 7
  %128 = bitcast %"class.spvtools::opt::Instruction"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.spvtools::opt::Instruction"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 8
  %132 = ptrtoint %"class.spvtools::opt::Instruction"*** %131 to i64
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 8
  %134 = icmp eq %"class.spvtools::opt::Instruction"*** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.spvtools::opt::Instruction"*** %61 to i64
  %137 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.spvtools::opt::Instruction"*** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.spvtools::opt::Instruction"**** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.spvtools::opt::Instruction"**** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.spvtools::opt::Instruction"*** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.spvtools::opt::Instruction"*** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #14
  %146 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.spvtools::opt::Instruction"*** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %148, i64 -1
  %150 = bitcast %"class.spvtools::opt::Instruction"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.spvtools::opt::Instruction"*** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %3, align 8
  %154 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %153, i64 -1
  store %"class.spvtools::opt::Instruction"*** %154, %"class.spvtools::opt::Instruction"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN8spvtools3opt11InstructionERNS_9allocatorIS5_EEE10push_frontERKS5_(%"struct.std::__1::__split_buffer.1157"*, %"class.spvtools::opt::Instruction"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1157", %"struct.std::__1::__split_buffer.1157"* %0, i64 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1157", %"struct.std::__1::__split_buffer.1157"* %0, i64 0, i32 0
  %6 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %5, align 8
  %7 = icmp eq %"class.spvtools::opt::Instruction"*** %4, %6
  %8 = ptrtoint %"class.spvtools::opt::Instruction"*** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1157", %"struct.std::__1::__split_buffer.1157"* %0, i64 0, i32 2
  %11 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1157", %"struct.std::__1::__split_buffer.1157"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %12, align 8
  %14 = icmp ult %"class.spvtools::opt::Instruction"*** %11, %13
  %15 = bitcast %"class.spvtools::opt::Instruction"**** %12 to i64*
  %16 = ptrtoint %"class.spvtools::opt::Instruction"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.spvtools::opt::Instruction"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %11, i64 %22
  %24 = ptrtoint %"class.spvtools::opt::Instruction"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %23, i64 %29
  %31 = bitcast %"class.spvtools::opt::Instruction"*** %30 to i8*
  %32 = bitcast %"class.spvtools::opt::Instruction"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #15
  %33 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.spvtools::opt::Instruction"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.spvtools::opt::Instruction"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.spvtools::opt::Instruction"*** %36, %"class.spvtools::opt::Instruction"**** %3, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %35, i64 %22
  store %"class.spvtools::opt::Instruction"*** %37, %"class.spvtools::opt::Instruction"**** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1157"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #16
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #14
  %51 = bitcast i8* %50 to %"class.spvtools::opt::Instruction"***
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %51, i64 %48
  %54 = ptrtoint %"class.spvtools::opt::Instruction"*** %53 to i64
  %55 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %51, i64 %43
  %56 = ptrtoint %"class.spvtools::opt::Instruction"*** %55 to i64
  %57 = ptrtoint %"class.spvtools::opt::Instruction"*** %4 to i64
  %58 = ptrtoint %"class.spvtools::opt::Instruction"*** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.spvtools::opt::Instruction"*** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.spvtools::opt::Instruction"*** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.spvtools::opt::Instruction"*** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %70, i64 1
  %78 = ptrtoint %"class.spvtools::opt::Instruction"*** %77 to i64
  %79 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !46

82:                                               ; preds = %69
  %83 = ptrtoint %"class.spvtools::opt::Instruction"*** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.spvtools::opt::Instruction"*** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.spvtools::opt::Instruction"*** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.spvtools::opt::Instruction"*** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.spvtools::opt::Instruction"*** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.spvtools::opt::Instruction"*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 1
  %97 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 1
  %98 = bitcast %"class.spvtools::opt::Instruction"*** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.spvtools::opt::Instruction"*** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 2
  %102 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 2
  %103 = bitcast %"class.spvtools::opt::Instruction"*** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.spvtools::opt::Instruction"*** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 3
  %107 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 3
  %108 = bitcast %"class.spvtools::opt::Instruction"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.spvtools::opt::Instruction"*** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 4
  %112 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 4
  %113 = bitcast %"class.spvtools::opt::Instruction"*** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.spvtools::opt::Instruction"*** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 5
  %117 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 5
  %118 = bitcast %"class.spvtools::opt::Instruction"*** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.spvtools::opt::Instruction"*** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 6
  %122 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 6
  %123 = bitcast %"class.spvtools::opt::Instruction"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.spvtools::opt::Instruction"*** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 7
  %127 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 7
  %128 = bitcast %"class.spvtools::opt::Instruction"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.spvtools::opt::Instruction"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 8
  %132 = ptrtoint %"class.spvtools::opt::Instruction"*** %131 to i64
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 8
  %134 = icmp eq %"class.spvtools::opt::Instruction"*** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.spvtools::opt::Instruction"*** %61 to i64
  %137 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.spvtools::opt::Instruction"*** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.spvtools::opt::Instruction"**** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.spvtools::opt::Instruction"**** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.spvtools::opt::Instruction"*** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.spvtools::opt::Instruction"*** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #14
  %146 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.spvtools::opt::Instruction"*** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %148, i64 -1
  %150 = bitcast %"class.spvtools::opt::Instruction"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.spvtools::opt::Instruction"*** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %3, align 8
  %154 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %153, i64 -1
  store %"class.spvtools::opt::Instruction"*** %154, %"class.spvtools::opt::Instruction"**** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::Module"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.333"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.333"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.333"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #14
  %10 = icmp eq %"struct.std::__1::__hash_node_base.333"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.333"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.333"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.309"* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %17, %34
  %22 = phi %"struct.std::__1::__hash_node_base.309"* [ %24, %34 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 3
  %26 = bitcast %"struct.std::__1::__hash_node_base.309"* %25 to i32**
  %27 = load i32*, i32** %26, align 8
  %28 = icmp eq i32* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %21
  %30 = ptrtoint i32* %27 to i64
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 4
  %32 = bitcast %"struct.std::__1::__hash_node_base.309"* %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = bitcast i32* %27 to i8*
  tail call void @_ZdlPv(i8* %33) #14
  br label %34

34:                                               ; preds = %29, %21
  %35 = bitcast %"struct.std::__1::__hash_node_base.309"* %22 to i8*
  tail call void @_ZdlPv(i8* %35) #14
  %36 = icmp eq %"struct.std::__1::__hash_node_base.309"* %24, null
  br i1 %36, label %37, label %21

37:                                               ; preds = %34, %17
  %38 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %38, align 8
  store %"struct.std::__1::__hash_node_base.309"** null, %"struct.std::__1::__hash_node_base.309"*** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.309"** %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = bitcast %"struct.std::__1::__hash_node_base.309"** %39 to i8*
  tail call void @_ZdlPv(i8* %42) #14
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1, i32 0, i32 1
  %46 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 0, i32 3
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp ne i8 %48, 0
  %50 = icmp eq %"class.spvtools::opt::Instruction"* %46, null
  %51 = or i1 %50, %49
  br i1 %51, label %79, label %52

52:                                               ; preds = %43, %52
  %53 = phi %"class.spvtools::opt::Instruction"* [ %73, %52 ], [ %46, %43 ]
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 2
  %55 = bitcast %"class.spvtools::opt::Instruction"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 1
  %58 = bitcast %"class.spvtools::opt::Instruction"** %57 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %59 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %59, i64 0, i32 2
  %61 = bitcast %"class.spvtools::opt::Instruction"** %60 to i64*
  store i64 %56, i64* %61, align 8
  %62 = bitcast %"class.spvtools::opt::Instruction"** %57 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.spvtools::opt::Instruction"** %54 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %65 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %64, align 8
  %66 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %65, i64 0, i32 1
  %67 = bitcast %"class.spvtools::opt::Instruction"** %66 to i64*
  store i64 %63, i64* %67, align 8
  %68 = bitcast %"class.spvtools::opt::Instruction"** %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #15
  %69 = bitcast %"class.spvtools::opt::Instruction"* %53 to void (%"class.spvtools::opt::Instruction"*)***
  %70 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %70, i64 1
  %72 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %71, align 8
  tail call void %72(%"class.spvtools::opt::Instruction"* nonnull %53) #15
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 0, i32 3
  %75 = load i8, i8* %74, align 8, !range !2
  %76 = icmp ne i8 %75, 0
  %77 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  %78 = or i1 %77, %76
  br i1 %78, label %79, label %52

79:                                               ; preds = %52, %43
  %80 = phi %"class.spvtools::opt::Instruction"* [ %46, %43 ], [ %73, %52 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %80, i64 0, i32 0, i32 3
  %82 = load i8, i8* %81, align 8, !range !2
  %83 = icmp ne i8 %82, 0
  %84 = icmp eq %"class.spvtools::opt::Instruction"* %80, null
  %85 = or i1 %84, %83
  br i1 %85, label %109, label %86

86:                                               ; preds = %79, %86
  %87 = phi %"class.spvtools::opt::Instruction"* [ %103, %86 ], [ %80, %79 ]
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 2
  %89 = bitcast %"class.spvtools::opt::Instruction"** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 1
  %92 = bitcast %"class.spvtools::opt::Instruction"** %91 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %93 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %92, align 8
  %94 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %93, i64 0, i32 2
  %95 = bitcast %"class.spvtools::opt::Instruction"** %94 to i64*
  store i64 %90, i64* %95, align 8
  %96 = bitcast %"class.spvtools::opt::Instruction"** %91 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.spvtools::opt::Instruction"** %88 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %99 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %98, align 8
  %100 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %99, i64 0, i32 1
  %101 = bitcast %"class.spvtools::opt::Instruction"** %100 to i64*
  store i64 %97, i64* %101, align 8
  %102 = bitcast %"class.spvtools::opt::Instruction"** %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false) #15
  %103 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %104 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 0, i32 3
  %105 = load i8, i8* %104, align 8, !range !2
  %106 = icmp ne i8 %105, 0
  %107 = icmp eq %"class.spvtools::opt::Instruction"* %103, null
  %108 = or i1 %107, %106
  br i1 %108, label %109, label %86

109:                                              ; preds = %86, %79
  %110 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %110) #15
  %111 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %111, align 8
  %113 = icmp eq %"class.spvtools::opt::Instruction"* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %109
  %115 = bitcast %"class.spvtools::opt::Instruction"* %112 to void (%"class.spvtools::opt::Instruction"*)***
  %116 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %116, i64 1
  %118 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %117, align 8
  tail call void %118(%"class.spvtools::opt::Instruction"* nonnull %112) #15
  br label %119

119:                                              ; preds = %109, %114
  %120 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1, i32 0, i32 1
  %122 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %123 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %122, i64 0, i32 0, i32 3
  %124 = load i8, i8* %123, align 8, !range !2
  %125 = icmp ne i8 %124, 0
  %126 = icmp eq %"class.spvtools::opt::Instruction"* %122, null
  %127 = or i1 %126, %125
  br i1 %127, label %155, label %128

128:                                              ; preds = %119, %128
  %129 = phi %"class.spvtools::opt::Instruction"* [ %149, %128 ], [ %122, %119 ]
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 2
  %131 = bitcast %"class.spvtools::opt::Instruction"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 1
  %134 = bitcast %"class.spvtools::opt::Instruction"** %133 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %135 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %134, align 8
  %136 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %135, i64 0, i32 2
  %137 = bitcast %"class.spvtools::opt::Instruction"** %136 to i64*
  store i64 %132, i64* %137, align 8
  %138 = bitcast %"class.spvtools::opt::Instruction"** %133 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.spvtools::opt::Instruction"** %130 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %141 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %140, align 8
  %142 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %141, i64 0, i32 1
  %143 = bitcast %"class.spvtools::opt::Instruction"** %142 to i64*
  store i64 %139, i64* %143, align 8
  %144 = bitcast %"class.spvtools::opt::Instruction"** %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 16, i1 false) #15
  %145 = bitcast %"class.spvtools::opt::Instruction"* %129 to void (%"class.spvtools::opt::Instruction"*)***
  %146 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %146, i64 1
  %148 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %147, align 8
  tail call void %148(%"class.spvtools::opt::Instruction"* nonnull %129) #15
  %149 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %150 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %149, i64 0, i32 0, i32 3
  %151 = load i8, i8* %150, align 8, !range !2
  %152 = icmp ne i8 %151, 0
  %153 = icmp eq %"class.spvtools::opt::Instruction"* %149, null
  %154 = or i1 %153, %152
  br i1 %154, label %155, label %128

155:                                              ; preds = %128, %119
  %156 = phi %"class.spvtools::opt::Instruction"* [ %122, %119 ], [ %149, %128 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %157 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %156, i64 0, i32 0, i32 3
  %158 = load i8, i8* %157, align 8, !range !2
  %159 = icmp ne i8 %158, 0
  %160 = icmp eq %"class.spvtools::opt::Instruction"* %156, null
  %161 = or i1 %160, %159
  br i1 %161, label %185, label %162

162:                                              ; preds = %155, %162
  %163 = phi %"class.spvtools::opt::Instruction"* [ %179, %162 ], [ %156, %155 ]
  %164 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 2
  %165 = bitcast %"class.spvtools::opt::Instruction"** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 1
  %168 = bitcast %"class.spvtools::opt::Instruction"** %167 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %169 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %168, align 8
  %170 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %169, i64 0, i32 2
  %171 = bitcast %"class.spvtools::opt::Instruction"** %170 to i64*
  store i64 %166, i64* %171, align 8
  %172 = bitcast %"class.spvtools::opt::Instruction"** %167 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.spvtools::opt::Instruction"** %164 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %175 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %174, align 8
  %176 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %175, i64 0, i32 1
  %177 = bitcast %"class.spvtools::opt::Instruction"** %176 to i64*
  store i64 %173, i64* %177, align 8
  %178 = bitcast %"class.spvtools::opt::Instruction"** %167 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 16, i1 false) #15
  %179 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %180 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %179, i64 0, i32 0, i32 3
  %181 = load i8, i8* %180, align 8, !range !2
  %182 = icmp ne i8 %181, 0
  %183 = icmp eq %"class.spvtools::opt::Instruction"* %179, null
  %184 = or i1 %183, %182
  br i1 %184, label %185, label %162

185:                                              ; preds = %162, %155
  %186 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %186) #15
  %187 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %188 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %187, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %187, align 8
  %189 = icmp eq %"class.spvtools::opt::Instruction"* %188, null
  br i1 %189, label %195, label %190

190:                                              ; preds = %185
  %191 = bitcast %"class.spvtools::opt::Instruction"* %188 to void (%"class.spvtools::opt::Instruction"*)***
  %192 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %192, i64 1
  %194 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %193, align 8
  tail call void %194(%"class.spvtools::opt::Instruction"* nonnull %188) #15
  br label %195

195:                                              ; preds = %185, %190
  %196 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %197 = load %"struct.std::__1::__hash_node_base.281"*, %"struct.std::__1::__hash_node_base.281"** %196, align 8
  %198 = icmp eq %"struct.std::__1::__hash_node_base.281"* %197, null
  br i1 %198, label %215, label %199

199:                                              ; preds = %195, %212
  %200 = phi %"struct.std::__1::__hash_node_base.281"* [ %202, %212 ], [ %197, %195 ]
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 0, i32 0
  %202 = load %"struct.std::__1::__hash_node_base.281"*, %"struct.std::__1::__hash_node_base.281"** %201, align 8
  %203 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 3
  %204 = bitcast %"struct.std::__1::__hash_node_base.281"* %203 to %"class.spvtools::opt::BasicBlock"***
  %205 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %204, align 8
  %206 = icmp eq %"class.spvtools::opt::BasicBlock"** %205, null
  br i1 %206, label %212, label %207

207:                                              ; preds = %199
  %208 = ptrtoint %"class.spvtools::opt::BasicBlock"** %205 to i64
  %209 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 4
  %210 = bitcast %"struct.std::__1::__hash_node_base.281"* %209 to i64*
  store i64 %208, i64* %210, align 8
  %211 = bitcast %"class.spvtools::opt::BasicBlock"** %205 to i8*
  tail call void @_ZdlPv(i8* %211) #14
  br label %212

212:                                              ; preds = %207, %199
  %213 = bitcast %"struct.std::__1::__hash_node_base.281"* %200 to i8*
  tail call void @_ZdlPv(i8* %213) #14
  %214 = icmp eq %"struct.std::__1::__hash_node_base.281"* %202, null
  br i1 %214, label %215, label %199

215:                                              ; preds = %212, %195
  %216 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load %"struct.std::__1::__hash_node_base.281"**, %"struct.std::__1::__hash_node_base.281"*** %216, align 8
  store %"struct.std::__1::__hash_node_base.281"** null, %"struct.std::__1::__hash_node_base.281"*** %216, align 8
  %218 = icmp eq %"struct.std::__1::__hash_node_base.281"** %217, null
  br i1 %218, label %221, label %219

219:                                              ; preds = %215
  %220 = bitcast %"struct.std::__1::__hash_node_base.281"** %217 to i8*
  tail call void @_ZdlPv(i8* %220) #14
  br label %221

221:                                              ; preds = %215, %219
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD2Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #15
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #15
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #15
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD0Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #15
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #15
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #15
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #15
  %69 = bitcast %"class.spvtools::opt::InstructionList"* %0 to i8*
  tail call void @_ZdlPv(i8* %69) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %6 = icmp eq %"class.spvtools::opt::Instruction"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.spvtools::opt::Instruction"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.spvtools::opt::Instruction"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 -1
  %15 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %16 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %15, align 8
  %17 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %16, align 8
  tail call void %17(%"class.spvtools::opt::Instruction"* %14) #15
  %18 = icmp eq %"class.spvtools::opt::Instruction"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector.14"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"class.spvtools::opt::Instruction"* %5, %"class.spvtools::opt::Instruction"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #14
  br label %24

24:                                               ; preds = %1, %22
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %27 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %28 = icmp eq %"struct.spvtools::opt::Operand"* %27, null
  br i1 %28, label %59, label %29

29:                                               ; preds = %24
  %30 = bitcast %"struct.spvtools::opt::Operand"* %27 to i8*
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %32 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %33 = icmp eq %"struct.spvtools::opt::Operand"* %32, %27
  br i1 %33, label %57, label %34

34:                                               ; preds = %29, %52
  %35 = phi %"struct.spvtools::opt::Operand"* [ %36, %52 ], [ %32, %29 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %38, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %38, align 8
  %40 = icmp eq %"class.std::__1::vector.3"* %39, null
  br i1 %40, label %52, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = ptrtoint i32* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast i32* %43 to i8*
  tail call void @_ZdlPv(i8* %49) #14
  br label %50

50:                                               ; preds = %45, %41
  %51 = bitcast %"class.std::__1::vector.3"* %39 to i8*
  tail call void @_ZdlPv(i8* %51) #14
  br label %52

52:                                               ; preds = %50, %34
  %53 = icmp eq %"struct.spvtools::opt::Operand"* %36, %27
  br i1 %53, label %54, label %34

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector"* %25 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %29
  %58 = phi i8* [ %56, %54 ], [ %30, %29 ]
  store %"struct.spvtools::opt::Operand"* %27, %"struct.spvtools::opt::Operand"** %31, align 8
  tail call void @_ZdlPv(i8* %58) #14
  br label %59

59:                                               ; preds = %24, %57
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #15
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #15
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #15
  %35 = bitcast %"class.spvtools::utils::IntrusiveList"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD0Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %0) #15
  %2 = bitcast %"class.spvtools::opt::Instruction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.spvtools::utils::IntrusiveNodeBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

declare zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_(%"union.std::__1::__function::__policy_storage"*, i32*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1092"**
  %4 = load %"class.std::__1::function.1092"*, %"class.std::__1::function.1092"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1092", %"class.std::__1::function.1092"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, i32*)*, void (%"union.std::__1::__function::__policy_storage"*, i32*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1092", %"class.std::__1::function.1092"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, i32* %1) #15
  ret i1 true
}

declare zeroext i1 @_Z25spvOpcodeIsAtomicWithLoad6SpvOp_(i32) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis16DebugInfoManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::IRContext"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev(%"class.spvtools::opt::analysis::DebugInfoManager"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.601"* %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %1, %26
  %6 = phi %"struct.std::__1::__hash_node_base.601"* [ %8, %26 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %6, i64 5
  %10 = bitcast %"struct.std::__1::__hash_node_base.601"* %9 to %"struct.std::__1::__hash_node_base.1197"**
  %11 = load %"struct.std::__1::__hash_node_base.1197"*, %"struct.std::__1::__hash_node_base.1197"** %10, align 8
  %12 = icmp eq %"struct.std::__1::__hash_node_base.1197"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %5, %13
  %14 = phi %"struct.std::__1::__hash_node_base.1197"* [ %16, %13 ], [ %11, %5 ]
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1197", %"struct.std::__1::__hash_node_base.1197"* %14, i64 0, i32 0
  %16 = load %"struct.std::__1::__hash_node_base.1197"*, %"struct.std::__1::__hash_node_base.1197"** %15, align 8
  %17 = bitcast %"struct.std::__1::__hash_node_base.1197"* %14 to i8*
  tail call void @_ZdlPv(i8* %17) #14
  %18 = icmp eq %"struct.std::__1::__hash_node_base.1197"* %16, null
  br i1 %18, label %19, label %13

19:                                               ; preds = %13, %5
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %6, i64 3
  %21 = bitcast %"struct.std::__1::__hash_node_base.601"* %20 to %"struct.std::__1::__hash_node_base.1197"***
  %22 = load %"struct.std::__1::__hash_node_base.1197"**, %"struct.std::__1::__hash_node_base.1197"*** %21, align 8
  store %"struct.std::__1::__hash_node_base.1197"** null, %"struct.std::__1::__hash_node_base.1197"*** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base.1197"** %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = bitcast %"struct.std::__1::__hash_node_base.1197"** %22 to i8*
  tail call void @_ZdlPv(i8* %25) #14
  br label %26

26:                                               ; preds = %24, %19
  %27 = bitcast %"struct.std::__1::__hash_node_base.601"* %6 to i8*
  tail call void @_ZdlPv(i8* %27) #14
  %28 = icmp eq %"struct.std::__1::__hash_node_base.601"* %8, null
  br i1 %28, label %29, label %5

29:                                               ; preds = %26, %1
  %30 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.601"**, %"struct.std::__1::__hash_node_base.601"*** %30, align 8
  store %"struct.std::__1::__hash_node_base.601"** null, %"struct.std::__1::__hash_node_base.601"*** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.601"** %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast %"struct.std::__1::__hash_node_base.601"** %31 to i8*
  tail call void @_ZdlPv(i8* %34) #14
  br label %35

35:                                               ; preds = %29, %33
  %36 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.601"* %37, null
  br i1 %38, label %63, label %39

39:                                               ; preds = %35, %60
  %40 = phi %"struct.std::__1::__hash_node_base.601"* [ %42, %60 ], [ %37, %35 ]
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %40, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %40, i64 5
  %44 = bitcast %"struct.std::__1::__hash_node_base.601"* %43 to %"struct.std::__1::__hash_node_base.1197"**
  %45 = load %"struct.std::__1::__hash_node_base.1197"*, %"struct.std::__1::__hash_node_base.1197"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.1197"* %45, null
  br i1 %46, label %53, label %47

47:                                               ; preds = %39, %47
  %48 = phi %"struct.std::__1::__hash_node_base.1197"* [ %50, %47 ], [ %45, %39 ]
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1197", %"struct.std::__1::__hash_node_base.1197"* %48, i64 0, i32 0
  %50 = load %"struct.std::__1::__hash_node_base.1197"*, %"struct.std::__1::__hash_node_base.1197"** %49, align 8
  %51 = bitcast %"struct.std::__1::__hash_node_base.1197"* %48 to i8*
  tail call void @_ZdlPv(i8* %51) #14
  %52 = icmp eq %"struct.std::__1::__hash_node_base.1197"* %50, null
  br i1 %52, label %53, label %47

53:                                               ; preds = %47, %39
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %40, i64 3
  %55 = bitcast %"struct.std::__1::__hash_node_base.601"* %54 to %"struct.std::__1::__hash_node_base.1197"***
  %56 = load %"struct.std::__1::__hash_node_base.1197"**, %"struct.std::__1::__hash_node_base.1197"*** %55, align 8
  store %"struct.std::__1::__hash_node_base.1197"** null, %"struct.std::__1::__hash_node_base.1197"*** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.1197"** %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %53
  %59 = bitcast %"struct.std::__1::__hash_node_base.1197"** %56 to i8*
  tail call void @_ZdlPv(i8* %59) #14
  br label %60

60:                                               ; preds = %58, %53
  %61 = bitcast %"struct.std::__1::__hash_node_base.601"* %40 to i8*
  tail call void @_ZdlPv(i8* %61) #14
  %62 = icmp eq %"struct.std::__1::__hash_node_base.601"* %42, null
  br i1 %62, label %63, label %39

63:                                               ; preds = %60, %35
  %64 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.601"**, %"struct.std::__1::__hash_node_base.601"*** %64, align 8
  store %"struct.std::__1::__hash_node_base.601"** null, %"struct.std::__1::__hash_node_base.601"*** %64, align 8
  %66 = icmp eq %"struct.std::__1::__hash_node_base.601"** %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %63
  %68 = bitcast %"struct.std::__1::__hash_node_base.601"** %65 to i8*
  tail call void @_ZdlPv(i8* %68) #14
  br label %69

69:                                               ; preds = %63, %67
  %70 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %71 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base.601"* %71, null
  br i1 %72, label %97, label %73

73:                                               ; preds = %69, %94
  %74 = phi %"struct.std::__1::__hash_node_base.601"* [ %76, %94 ], [ %71, %69 ]
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %74, i64 0, i32 0
  %76 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %74, i64 5
  %78 = bitcast %"struct.std::__1::__hash_node_base.601"* %77 to %"struct.std::__1::__hash_node_base.1197"**
  %79 = load %"struct.std::__1::__hash_node_base.1197"*, %"struct.std::__1::__hash_node_base.1197"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base.1197"* %79, null
  br i1 %80, label %87, label %81

81:                                               ; preds = %73, %81
  %82 = phi %"struct.std::__1::__hash_node_base.1197"* [ %84, %81 ], [ %79, %73 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1197", %"struct.std::__1::__hash_node_base.1197"* %82, i64 0, i32 0
  %84 = load %"struct.std::__1::__hash_node_base.1197"*, %"struct.std::__1::__hash_node_base.1197"** %83, align 8
  %85 = bitcast %"struct.std::__1::__hash_node_base.1197"* %82 to i8*
  tail call void @_ZdlPv(i8* %85) #14
  %86 = icmp eq %"struct.std::__1::__hash_node_base.1197"* %84, null
  br i1 %86, label %87, label %81

87:                                               ; preds = %81, %73
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %74, i64 3
  %89 = bitcast %"struct.std::__1::__hash_node_base.601"* %88 to %"struct.std::__1::__hash_node_base.1197"***
  %90 = load %"struct.std::__1::__hash_node_base.1197"**, %"struct.std::__1::__hash_node_base.1197"*** %89, align 8
  store %"struct.std::__1::__hash_node_base.1197"** null, %"struct.std::__1::__hash_node_base.1197"*** %89, align 8
  %91 = icmp eq %"struct.std::__1::__hash_node_base.1197"** %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %87
  %93 = bitcast %"struct.std::__1::__hash_node_base.1197"** %90 to i8*
  tail call void @_ZdlPv(i8* %93) #14
  br label %94

94:                                               ; preds = %92, %87
  %95 = bitcast %"struct.std::__1::__hash_node_base.601"* %74 to i8*
  tail call void @_ZdlPv(i8* %95) #14
  %96 = icmp eq %"struct.std::__1::__hash_node_base.601"* %76, null
  br i1 %96, label %97, label %73

97:                                               ; preds = %94, %69
  %98 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.601"**, %"struct.std::__1::__hash_node_base.601"*** %98, align 8
  store %"struct.std::__1::__hash_node_base.601"** null, %"struct.std::__1::__hash_node_base.601"*** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.601"** %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = bitcast %"struct.std::__1::__hash_node_base.601"** %99 to i8*
  tail call void @_ZdlPv(i8* %102) #14
  br label %103

103:                                              ; preds = %97, %101
  %104 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base"* %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %103, %107
  %108 = phi %"struct.std::__1::__hash_node_base"* [ %110, %107 ], [ %105, %103 ]
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %108, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %108 to i8*
  tail call void @_ZdlPv(i8* %111) #14
  %112 = icmp eq %"struct.std::__1::__hash_node_base"* %110, null
  br i1 %112, label %113, label %107

113:                                              ; preds = %107, %103
  %114 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %114, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"** %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  %118 = bitcast %"struct.std::__1::__hash_node_base"** %115 to i8*
  tail call void @_ZdlPv(i8* %118) #14
  br label %119

119:                                              ; preds = %113, %117
  %120 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %121 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base"* %121, null
  br i1 %122, label %129, label %123

123:                                              ; preds = %119, %123
  %124 = phi %"struct.std::__1::__hash_node_base"* [ %126, %123 ], [ %121, %119 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %124, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = bitcast %"struct.std::__1::__hash_node_base"* %124 to i8*
  tail call void @_ZdlPv(i8* %127) #14
  %128 = icmp eq %"struct.std::__1::__hash_node_base"* %126, null
  br i1 %128, label %129, label %123

129:                                              ; preds = %123, %119
  %130 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %130, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %130, align 8
  %132 = icmp eq %"struct.std::__1::__hash_node_base"** %131, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %129
  %134 = bitcast %"struct.std::__1::__hash_node_base"** %131 to i8*
  tail call void @_ZdlPv(i8* %134) #14
  br label %135

135:                                              ; preds = %129, %133
  ret void
}

declare void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"*, %"class.spvtools::opt::analysis::DecorationManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.130"*, %"struct.std::__1::__hash_node_base.130"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.130"* %6, null
  br i1 %7, label %44, label %8

8:                                                ; preds = %4, %41
  %9 = phi %"struct.std::__1::__hash_node_base.130"* [ %11, %41 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.130"*, %"struct.std::__1::__hash_node_base.130"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 9
  %13 = bitcast %"struct.std::__1::__hash_node_base.130"* %12 to %"class.spvtools::opt::Instruction"***
  %14 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %13, align 8
  %15 = icmp eq %"class.spvtools::opt::Instruction"** %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint %"class.spvtools::opt::Instruction"** %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 10
  %19 = bitcast %"struct.std::__1::__hash_node_base.130"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %14 to i8*
  tail call void @_ZdlPv(i8* %20) #14
  br label %21

21:                                               ; preds = %16, %8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 6
  %23 = bitcast %"struct.std::__1::__hash_node_base.130"* %22 to %"class.spvtools::opt::Instruction"***
  %24 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %23, align 8
  %25 = icmp eq %"class.spvtools::opt::Instruction"** %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %21
  %27 = ptrtoint %"class.spvtools::opt::Instruction"** %24 to i64
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 7
  %29 = bitcast %"struct.std::__1::__hash_node_base.130"* %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"class.spvtools::opt::Instruction"** %24 to i8*
  tail call void @_ZdlPv(i8* %30) #14
  br label %31

31:                                               ; preds = %26, %21
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 3
  %33 = bitcast %"struct.std::__1::__hash_node_base.130"* %32 to %"class.spvtools::opt::Instruction"***
  %34 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %33, align 8
  %35 = icmp eq %"class.spvtools::opt::Instruction"** %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %31
  %37 = ptrtoint %"class.spvtools::opt::Instruction"** %34 to i64
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 4
  %39 = bitcast %"struct.std::__1::__hash_node_base.130"* %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"class.spvtools::opt::Instruction"** %34 to i8*
  tail call void @_ZdlPv(i8* %40) #14
  br label %41

41:                                               ; preds = %36, %31
  %42 = bitcast %"struct.std::__1::__hash_node_base.130"* %9 to i8*
  tail call void @_ZdlPv(i8* %42) #14
  %43 = icmp eq %"struct.std::__1::__hash_node_base.130"* %11, null
  br i1 %43, label %44, label %8

44:                                               ; preds = %41, %4
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.130"**, %"struct.std::__1::__hash_node_base.130"*** %45, align 8
  store %"struct.std::__1::__hash_node_base.130"** null, %"struct.std::__1::__hash_node_base.130"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.130"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base.130"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #14
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DecorationManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #14
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1047"**
  %4 = load %"class.std::__1::function.1047"*, %"class.std::__1::function.1047"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #15
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorImNS_9allocatorImEEE8__appendEmRKm(%"class.std::__1::vector.900"*, i64, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast i64* %2 to i8*
  %5 = bitcast i64* %2 to i8*
  %6 = getelementptr inbounds %"class.std::__1::vector.900", %"class.std::__1::vector.900"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast i64** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.900", %"class.std::__1::vector.900"* %0, i64 0, i32 0, i32 1
  %10 = bitcast i64** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %8, %11
  %13 = ashr exact i64 %12, 3
  %14 = icmp ult i64 %13, %1
  br i1 %14, label %130, label %15

15:                                               ; preds = %3
  %16 = inttoptr i64 %11 to i64*
  %17 = inttoptr i64 %11 to i8*
  %18 = getelementptr inbounds i64, i64* %16, i64 %1
  %19 = icmp eq i64 %1, 0
  br i1 %19, label %128, label %20

20:                                               ; preds = %15
  %21 = shl nsw i64 %1, 3
  %22 = add i64 %21, -8
  %23 = lshr exact i64 %22, 3
  %24 = add nuw nsw i64 %23, 1
  %25 = icmp ult i64 %24, 4
  br i1 %25, label %26, label %47

26:                                               ; preds = %105, %47, %20
  %27 = phi i64* [ %16, %47 ], [ %16, %20 ], [ %59, %105 ]
  %28 = ptrtoint i64* %27 to i64
  %29 = add i64 %1, -1
  %30 = getelementptr i64, i64* %16, i64 %29
  %31 = ptrtoint i64* %30 to i64
  %32 = sub i64 %31, %28
  %33 = lshr i64 %32, 3
  %34 = add nuw nsw i64 %33, 1
  %35 = and i64 %34, 7
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %26, %37
  %38 = phi i64* [ %41, %37 ], [ %27, %26 ]
  %39 = phi i64 [ %42, %37 ], [ %35, %26 ]
  %40 = load i64, i64* %2, align 8
  store i64 %40, i64* %38, align 8
  %41 = getelementptr inbounds i64, i64* %38, i64 1
  %42 = add i64 %39, -1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %37, !llvm.loop !47

44:                                               ; preds = %37, %26
  %45 = phi i64* [ %27, %26 ], [ %41, %37 ]
  %46 = icmp ult i64 %32, 56
  br i1 %46, label %107, label %109

47:                                               ; preds = %20
  %48 = shl nsw i64 %1, 3
  %49 = add i64 %48, -8
  %50 = lshr exact i64 %49, 3
  %51 = add nuw nsw i64 %50, 1
  %52 = getelementptr i64, i64* %16, i64 %51
  %53 = getelementptr i8, i8* %5, i64 1
  %54 = icmp ugt i8* %53, %17
  %55 = icmp ugt i64* %52, %2
  %56 = and i1 %54, %55
  br i1 %56, label %26, label %57

57:                                               ; preds = %47
  %58 = and i64 %24, 4611686018427387900
  %59 = getelementptr i64, i64* %16, i64 %58
  %60 = add nsw i64 %58, -4
  %61 = lshr exact i64 %60, 2
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 1
  %64 = icmp eq i64 %60, 0
  br i1 %64, label %92, label %65

65:                                               ; preds = %57
  %66 = sub nuw nsw i64 %62, %63
  %67 = load i64, i64* %2, align 8, !alias.scope !48
  %68 = insertelement <2 x i64> undef, i64 %67, i32 0
  %69 = shufflevector <2 x i64> %68, <2 x i64> undef, <2 x i32> zeroinitializer
  %70 = insertelement <2 x i64> undef, i64 %67, i32 0
  %71 = shufflevector <2 x i64> %70, <2 x i64> undef, <2 x i32> zeroinitializer
  %72 = load i64, i64* %2, align 8, !alias.scope !48
  %73 = insertelement <2 x i64> undef, i64 %72, i32 0
  %74 = shufflevector <2 x i64> %73, <2 x i64> undef, <2 x i32> zeroinitializer
  %75 = insertelement <2 x i64> undef, i64 %72, i32 0
  %76 = shufflevector <2 x i64> %75, <2 x i64> undef, <2 x i32> zeroinitializer
  br label %77

77:                                               ; preds = %77, %65
  %78 = phi i64 [ 0, %65 ], [ %89, %77 ]
  %79 = phi i64 [ %66, %65 ], [ %90, %77 ]
  %80 = getelementptr i64, i64* %16, i64 %78
  %81 = bitcast i64* %80 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %81, align 8, !alias.scope !51, !noalias !48
  %82 = getelementptr i64, i64* %80, i64 2
  %83 = bitcast i64* %82 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %83, align 8, !alias.scope !51, !noalias !48
  %84 = or i64 %78, 4
  %85 = getelementptr i64, i64* %16, i64 %84
  %86 = bitcast i64* %85 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %86, align 8, !alias.scope !51, !noalias !48
  %87 = getelementptr i64, i64* %85, i64 2
  %88 = bitcast i64* %87 to <2 x i64>*
  store <2 x i64> %76, <2 x i64>* %88, align 8, !alias.scope !51, !noalias !48
  %89 = add i64 %78, 8
  %90 = add i64 %79, -2
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %77, !llvm.loop !53

92:                                               ; preds = %77, %57
  %93 = phi i64 [ 0, %57 ], [ %89, %77 ]
  %94 = icmp eq i64 %63, 0
  br i1 %94, label %105, label %95

95:                                               ; preds = %92
  %96 = getelementptr i64, i64* %16, i64 %93
  %97 = load i64, i64* %2, align 8, !alias.scope !48
  %98 = insertelement <2 x i64> undef, i64 %97, i32 0
  %99 = shufflevector <2 x i64> %98, <2 x i64> undef, <2 x i32> zeroinitializer
  %100 = insertelement <2 x i64> undef, i64 %97, i32 0
  %101 = shufflevector <2 x i64> %100, <2 x i64> undef, <2 x i32> zeroinitializer
  %102 = bitcast i64* %96 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %102, align 8, !alias.scope !51, !noalias !48
  %103 = getelementptr i64, i64* %96, i64 2
  %104 = bitcast i64* %103 to <2 x i64>*
  store <2 x i64> %101, <2 x i64>* %104, align 8, !alias.scope !51, !noalias !48
  br label %105

105:                                              ; preds = %92, %95
  %106 = icmp eq i64 %24, %58
  br i1 %106, label %107, label %26

107:                                              ; preds = %44, %109, %105
  %108 = ptrtoint i64* %18 to i64
  br label %128

109:                                              ; preds = %44, %109
  %110 = phi i64* [ %126, %109 ], [ %45, %44 ]
  %111 = load i64, i64* %2, align 8
  store i64 %111, i64* %110, align 8
  %112 = getelementptr inbounds i64, i64* %110, i64 1
  %113 = load i64, i64* %2, align 8
  store i64 %113, i64* %112, align 8
  %114 = getelementptr inbounds i64, i64* %110, i64 2
  %115 = load i64, i64* %2, align 8
  store i64 %115, i64* %114, align 8
  %116 = getelementptr inbounds i64, i64* %110, i64 3
  %117 = load i64, i64* %2, align 8
  store i64 %117, i64* %116, align 8
  %118 = getelementptr inbounds i64, i64* %110, i64 4
  %119 = load i64, i64* %2, align 8
  store i64 %119, i64* %118, align 8
  %120 = getelementptr inbounds i64, i64* %110, i64 5
  %121 = load i64, i64* %2, align 8
  store i64 %121, i64* %120, align 8
  %122 = getelementptr inbounds i64, i64* %110, i64 6
  %123 = load i64, i64* %2, align 8
  store i64 %123, i64* %122, align 8
  %124 = getelementptr inbounds i64, i64* %110, i64 7
  %125 = load i64, i64* %2, align 8
  store i64 %125, i64* %124, align 8
  %126 = getelementptr inbounds i64, i64* %110, i64 8
  %127 = icmp eq i64* %126, %18
  br i1 %127, label %107, label %109, !llvm.loop !55

128:                                              ; preds = %15, %107
  %129 = phi i64 [ %108, %107 ], [ %11, %15 ]
  store i64 %129, i64* %10, align 8
  br label %292

130:                                              ; preds = %3
  %131 = bitcast %"class.std::__1::vector.900"* %0 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = sub i64 %11, %132
  %134 = ashr exact i64 %133, 3
  %135 = add i64 %134, %1
  %136 = icmp ugt i64 %135, 2305843009213693951
  br i1 %136, label %137, label %139

137:                                              ; preds = %130
  %138 = bitcast %"class.std::__1::vector.900"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %138) #16
  unreachable

139:                                              ; preds = %130
  %140 = sub i64 %8, %132
  %141 = ashr exact i64 %140, 3
  %142 = icmp ult i64 %141, 1152921504606846975
  br i1 %142, label %143, label %151

143:                                              ; preds = %139
  %144 = ashr exact i64 %140, 2
  %145 = icmp ult i64 %144, %135
  %146 = select i1 %145, i64 %135, i64 %144
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %156, label %148

148:                                              ; preds = %143
  %149 = icmp ugt i64 %146, 2305843009213693951
  br i1 %149, label %150, label %151

150:                                              ; preds = %148
  tail call void @abort() #16
  unreachable

151:                                              ; preds = %139, %148
  %152 = phi i64 [ %146, %148 ], [ 2305843009213693951, %139 ]
  %153 = shl i64 %152, 3
  %154 = tail call i8* @_Znwm(i64 %153) #14
  %155 = bitcast i8* %154 to i64*
  br label %156

156:                                              ; preds = %143, %151
  %157 = phi i64 [ %152, %151 ], [ 0, %143 ]
  %158 = phi i64* [ %155, %151 ], [ null, %143 ]
  %159 = getelementptr inbounds i64, i64* %158, i64 %134
  %160 = getelementptr inbounds i64, i64* %158, i64 %157
  %161 = getelementptr inbounds i64, i64* %159, i64 %1
  %162 = shl nsw i64 %1, 3
  %163 = add i64 %162, -8
  %164 = lshr exact i64 %163, 3
  %165 = add nuw nsw i64 %164, 1
  %166 = icmp ult i64 %165, 4
  br i1 %166, label %229, label %167

167:                                              ; preds = %156
  %168 = bitcast i64* %159 to i8*
  %169 = shl nsw i64 %1, 3
  %170 = add i64 %169, -8
  %171 = lshr exact i64 %170, 3
  %172 = add nsw i64 %134, %171
  %173 = add nsw i64 %172, 1
  %174 = getelementptr i64, i64* %158, i64 %173
  %175 = getelementptr i8, i8* %4, i64 1
  %176 = icmp ugt i8* %175, %168
  %177 = icmp ugt i64* %174, %2
  %178 = and i1 %176, %177
  br i1 %178, label %229, label %179

179:                                              ; preds = %167
  %180 = and i64 %165, 4611686018427387900
  %181 = getelementptr i64, i64* %159, i64 %180
  %182 = add nsw i64 %180, -4
  %183 = lshr exact i64 %182, 2
  %184 = add nuw nsw i64 %183, 1
  %185 = and i64 %184, 1
  %186 = icmp eq i64 %182, 0
  br i1 %186, label %214, label %187

187:                                              ; preds = %179
  %188 = sub nuw nsw i64 %184, %185
  %189 = load i64, i64* %2, align 8, !alias.scope !56
  %190 = insertelement <2 x i64> undef, i64 %189, i32 0
  %191 = shufflevector <2 x i64> %190, <2 x i64> undef, <2 x i32> zeroinitializer
  %192 = insertelement <2 x i64> undef, i64 %189, i32 0
  %193 = shufflevector <2 x i64> %192, <2 x i64> undef, <2 x i32> zeroinitializer
  %194 = load i64, i64* %2, align 8, !alias.scope !56
  %195 = insertelement <2 x i64> undef, i64 %194, i32 0
  %196 = shufflevector <2 x i64> %195, <2 x i64> undef, <2 x i32> zeroinitializer
  %197 = insertelement <2 x i64> undef, i64 %194, i32 0
  %198 = shufflevector <2 x i64> %197, <2 x i64> undef, <2 x i32> zeroinitializer
  br label %199

199:                                              ; preds = %199, %187
  %200 = phi i64 [ 0, %187 ], [ %211, %199 ]
  %201 = phi i64 [ %188, %187 ], [ %212, %199 ]
  %202 = getelementptr i64, i64* %159, i64 %200
  %203 = bitcast i64* %202 to <2 x i64>*
  store <2 x i64> %191, <2 x i64>* %203, align 8, !alias.scope !59, !noalias !56
  %204 = getelementptr i64, i64* %202, i64 2
  %205 = bitcast i64* %204 to <2 x i64>*
  store <2 x i64> %193, <2 x i64>* %205, align 8, !alias.scope !59, !noalias !56
  %206 = or i64 %200, 4
  %207 = getelementptr i64, i64* %159, i64 %206
  %208 = bitcast i64* %207 to <2 x i64>*
  store <2 x i64> %196, <2 x i64>* %208, align 8, !alias.scope !59, !noalias !56
  %209 = getelementptr i64, i64* %207, i64 2
  %210 = bitcast i64* %209 to <2 x i64>*
  store <2 x i64> %198, <2 x i64>* %210, align 8, !alias.scope !59, !noalias !56
  %211 = add i64 %200, 8
  %212 = add i64 %201, -2
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %199, !llvm.loop !61

214:                                              ; preds = %199, %179
  %215 = phi i64 [ 0, %179 ], [ %211, %199 ]
  %216 = icmp eq i64 %185, 0
  br i1 %216, label %227, label %217

217:                                              ; preds = %214
  %218 = getelementptr i64, i64* %159, i64 %215
  %219 = load i64, i64* %2, align 8, !alias.scope !56
  %220 = insertelement <2 x i64> undef, i64 %219, i32 0
  %221 = shufflevector <2 x i64> %220, <2 x i64> undef, <2 x i32> zeroinitializer
  %222 = insertelement <2 x i64> undef, i64 %219, i32 0
  %223 = shufflevector <2 x i64> %222, <2 x i64> undef, <2 x i32> zeroinitializer
  %224 = bitcast i64* %218 to <2 x i64>*
  store <2 x i64> %221, <2 x i64>* %224, align 8, !alias.scope !59, !noalias !56
  %225 = getelementptr i64, i64* %218, i64 2
  %226 = bitcast i64* %225 to <2 x i64>*
  store <2 x i64> %223, <2 x i64>* %226, align 8, !alias.scope !59, !noalias !56
  br label %227

227:                                              ; preds = %214, %217
  %228 = icmp eq i64 %165, %180
  br i1 %228, label %270, label %229

229:                                              ; preds = %227, %167, %156
  %230 = phi i64* [ %159, %167 ], [ %159, %156 ], [ %181, %227 ]
  %231 = ptrtoint i64* %230 to i64
  %232 = add i64 %134, %1
  %233 = add i64 %232, -1
  %234 = getelementptr i64, i64* %158, i64 %233
  %235 = ptrtoint i64* %234 to i64
  %236 = sub i64 %235, %231
  %237 = lshr i64 %236, 3
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 7
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %248, label %241

241:                                              ; preds = %229, %241
  %242 = phi i64* [ %245, %241 ], [ %230, %229 ]
  %243 = phi i64 [ %246, %241 ], [ %239, %229 ]
  %244 = load i64, i64* %2, align 8
  store i64 %244, i64* %242, align 8
  %245 = getelementptr inbounds i64, i64* %242, i64 1
  %246 = add i64 %243, -1
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %248, label %241, !llvm.loop !62

248:                                              ; preds = %241, %229
  %249 = phi i64* [ %230, %229 ], [ %245, %241 ]
  %250 = icmp ult i64 %236, 56
  br i1 %250, label %270, label %251

251:                                              ; preds = %248, %251
  %252 = phi i64* [ %268, %251 ], [ %249, %248 ]
  %253 = load i64, i64* %2, align 8
  store i64 %253, i64* %252, align 8
  %254 = getelementptr inbounds i64, i64* %252, i64 1
  %255 = load i64, i64* %2, align 8
  store i64 %255, i64* %254, align 8
  %256 = getelementptr inbounds i64, i64* %252, i64 2
  %257 = load i64, i64* %2, align 8
  store i64 %257, i64* %256, align 8
  %258 = getelementptr inbounds i64, i64* %252, i64 3
  %259 = load i64, i64* %2, align 8
  store i64 %259, i64* %258, align 8
  %260 = getelementptr inbounds i64, i64* %252, i64 4
  %261 = load i64, i64* %2, align 8
  store i64 %261, i64* %260, align 8
  %262 = getelementptr inbounds i64, i64* %252, i64 5
  %263 = load i64, i64* %2, align 8
  store i64 %263, i64* %262, align 8
  %264 = getelementptr inbounds i64, i64* %252, i64 6
  %265 = load i64, i64* %2, align 8
  store i64 %265, i64* %264, align 8
  %266 = getelementptr inbounds i64, i64* %252, i64 7
  %267 = load i64, i64* %2, align 8
  store i64 %267, i64* %266, align 8
  %268 = getelementptr inbounds i64, i64* %252, i64 8
  %269 = icmp eq i64* %161, %268
  br i1 %269, label %270, label %251, !llvm.loop !63

270:                                              ; preds = %248, %251, %227
  %271 = ptrtoint i64* %160 to i64
  %272 = ptrtoint i64* %161 to i64
  %273 = getelementptr inbounds %"class.std::__1::vector.900", %"class.std::__1::vector.900"* %0, i64 0, i32 0, i32 0
  %274 = load i64*, i64** %273, align 8
  %275 = load i64, i64* %10, align 8
  %276 = ptrtoint i64* %274 to i64
  %277 = sub i64 %275, %276
  %278 = ashr exact i64 %277, 3
  %279 = sub nsw i64 0, %278
  %280 = getelementptr inbounds i64, i64* %159, i64 %279
  %281 = ptrtoint i64* %280 to i64
  %282 = icmp sgt i64 %277, 0
  br i1 %282, label %283, label %287

283:                                              ; preds = %270
  %284 = bitcast i64* %280 to i8*
  %285 = bitcast i64* %274 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %284, i8* align 8 %285, i64 %277, i1 false) #15
  %286 = load i64*, i64** %273, align 8
  br label %287

287:                                              ; preds = %270, %283
  %288 = phi i64* [ %274, %270 ], [ %286, %283 ]
  store i64 %281, i64* %131, align 8
  store i64 %272, i64* %10, align 8
  store i64 %271, i64* %7, align 8
  %289 = icmp eq i64* %288, null
  br i1 %289, label %292, label %290

290:                                              ; preds = %287
  %291 = bitcast i64* %288 to i8*
  tail call void @_ZdlPv(i8* %291) #14
  br label %292

292:                                              ; preds = %290, %287, %128
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.spvtools::opt::Operand"* @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.spvtools::opt::Operand"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint %"struct.spvtools::opt::Operand"* %2 to i64
  %8 = ptrtoint %"struct.spvtools::opt::Operand"* %3 to i64
  %9 = sub i64 %8, %7
  %10 = sdiv exact i64 %9, 48
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %250

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"struct.spvtools::opt::Operand"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %17 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %16, align 8
  %18 = ptrtoint %"struct.spvtools::opt::Operand"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = sdiv exact i64 %19, 48
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"struct.spvtools::opt::Operand"** %16 to i64*
  br i1 %21, label %116, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = sdiv exact i64 %24, 48
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %56

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %2, i64 %25
  %29 = icmp eq %"struct.spvtools::opt::Operand"* %28, %3
  br i1 %29, label %51, label %30

30:                                               ; preds = %27, %30
  %31 = phi %"struct.spvtools::opt::Operand"* [ %47, %30 ], [ %17, %27 ]
  %32 = phi %"struct.spvtools::opt::Operand"* [ %46, %30 ], [ %28, %27 ]
  %33 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 0, i32 0
  %35 = load i32, i32* %34, align 8
  store i32 %35, i32* %33, align 8
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 0, i32 1
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %36, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1, i32 1
  store i64 0, i64* %39, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1, i32 2
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1, i32 3, i64 0
  %42 = bitcast i32** %40 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %41, %"struct.std::__1::aligned_storage<4, 4>::type"** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1, i32 4
  %44 = bitcast %"class.std::__1::unique_ptr.0"* %43 to i64*
  store i64 0, i64* %44, align 8
  %45 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %36, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %37) #15
  %46 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 1
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 1
  %48 = icmp eq %"struct.spvtools::opt::Operand"* %46, %3
  br i1 %48, label %49, label %30

49:                                               ; preds = %30
  %50 = ptrtoint %"struct.spvtools::opt::Operand"* %47 to i64
  br label %51

51:                                               ; preds = %49, %27
  %52 = phi i64 [ %18, %27 ], [ %50, %49 ]
  store i64 %52, i64* %22, align 8
  %53 = icmp sgt i64 %24, 0
  br i1 %53, label %54, label %250

54:                                               ; preds = %51
  %55 = inttoptr i64 %52 to %"struct.spvtools::opt::Operand"*
  br label %56

56:                                               ; preds = %54, %23
  %57 = phi i64 [ %52, %54 ], [ %18, %23 ]
  %58 = phi %"struct.spvtools::opt::Operand"* [ %55, %54 ], [ %17, %23 ]
  %59 = phi %"struct.spvtools::opt::Operand"* [ %28, %54 ], [ %3, %23 ]
  %60 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 %10
  %61 = ptrtoint %"struct.spvtools::opt::Operand"* %60 to i64
  %62 = sub i64 %57, %61
  %63 = sdiv exact i64 %62, 48
  %64 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 %63
  %65 = icmp ult %"struct.spvtools::opt::Operand"* %64, %17
  br i1 %65, label %83, label %68

66:                                               ; preds = %83
  %67 = ptrtoint %"struct.spvtools::opt::Operand"* %100 to i64
  br label %68

68:                                               ; preds = %66, %56
  %69 = phi i64 [ %67, %66 ], [ %57, %56 ]
  store i64 %69, i64* %22, align 8
  %70 = icmp eq i64 %62, 0
  br i1 %70, label %102, label %71

71:                                               ; preds = %68, %71
  %72 = phi %"struct.spvtools::opt::Operand"* [ %75, %71 ], [ %58, %68 ]
  %73 = phi %"struct.spvtools::opt::Operand"* [ %74, %71 ], [ %64, %68 ]
  %74 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %73, i64 -1
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %72, i64 -1
  %76 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %74, i64 0, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %75, i64 0, i32 0
  store i32 %77, i32* %78, align 8
  %79 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %72, i64 -1, i32 1
  %80 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %73, i64 -1, i32 1
  %81 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %79, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %80) #15
  %82 = icmp eq %"struct.spvtools::opt::Operand"* %74, %1
  br i1 %82, label %102, label %71

83:                                               ; preds = %56, %83
  %84 = phi %"struct.spvtools::opt::Operand"* [ %100, %83 ], [ %58, %56 ]
  %85 = phi %"struct.spvtools::opt::Operand"* [ %99, %83 ], [ %64, %56 ]
  %86 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 0
  %87 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %85, i64 0, i32 0
  %88 = load i32, i32* %87, align 8
  store i32 %88, i32* %86, align 8
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %85, i64 0, i32 1
  %91 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %89, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %91, align 8
  %92 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1, i32 1
  store i64 0, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1, i32 2
  %94 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1, i32 3, i64 0
  %95 = bitcast i32** %93 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %94, %"struct.std::__1::aligned_storage<4, 4>::type"** %95, align 8
  %96 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1, i32 4
  %97 = bitcast %"class.std::__1::unique_ptr.0"* %96 to i64*
  store i64 0, i64* %97, align 8
  %98 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %89, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %90) #15
  %99 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %85, i64 1
  %100 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 1
  %101 = icmp ult %"struct.spvtools::opt::Operand"* %99, %17
  br i1 %101, label %83, label %66

102:                                              ; preds = %71, %68
  %103 = icmp eq %"struct.spvtools::opt::Operand"* %59, %2
  br i1 %103, label %250, label %104

104:                                              ; preds = %102, %104
  %105 = phi %"struct.spvtools::opt::Operand"* [ %114, %104 ], [ %1, %102 ]
  %106 = phi %"struct.spvtools::opt::Operand"* [ %113, %104 ], [ %2, %102 ]
  %107 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %106, i64 0, i32 0
  %108 = load i32, i32* %107, align 8
  %109 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 0, i32 0
  store i32 %108, i32* %109, align 8
  %110 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 0, i32 1
  %111 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %106, i64 0, i32 1
  %112 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %110, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %111) #15
  %113 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %106, i64 1
  %114 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 1
  %115 = icmp eq %"struct.spvtools::opt::Operand"* %113, %59
  br i1 %115, label %250, label %104

116:                                              ; preds = %12
  %117 = bitcast %"class.std::__1::vector"* %0 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = sub i64 %18, %118
  %120 = sdiv exact i64 %119, 48
  %121 = add nsw i64 %120, %10
  %122 = icmp ugt i64 %121, 384307168202282325
  br i1 %122, label %123, label %125

123:                                              ; preds = %116
  %124 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %124) #16
  unreachable

125:                                              ; preds = %116
  %126 = sub i64 %15, %118
  %127 = sdiv exact i64 %126, 48
  %128 = icmp ult i64 %127, 192153584101141162
  br i1 %128, label %132, label %129

129:                                              ; preds = %125
  %130 = sub i64 %5, %118
  %131 = sdiv exact i64 %130, 48
  br label %139

132:                                              ; preds = %125
  %133 = shl nsw i64 %127, 1
  %134 = icmp ult i64 %133, %121
  %135 = select i1 %134, i64 %121, i64 %133
  %136 = sub i64 %5, %118
  %137 = sdiv exact i64 %136, 48
  %138 = icmp eq i64 %135, 0
  br i1 %138, label %145, label %139

139:                                              ; preds = %132, %129
  %140 = phi i64 [ %131, %129 ], [ %137, %132 ]
  %141 = phi i64 [ 384307168202282325, %129 ], [ %135, %132 ]
  %142 = mul i64 %141, 48
  %143 = tail call i8* @_Znwm(i64 %142) #14
  %144 = bitcast i8* %143 to %"struct.spvtools::opt::Operand"*
  br label %145

145:                                              ; preds = %139, %132
  %146 = phi i64 [ %140, %139 ], [ %137, %132 ]
  %147 = phi i64 [ %141, %139 ], [ 0, %132 ]
  %148 = phi %"struct.spvtools::opt::Operand"* [ %144, %139 ], [ null, %132 ]
  %149 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %148, i64 %146
  %150 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %148, i64 %147
  %151 = ptrtoint %"struct.spvtools::opt::Operand"* %150 to i64
  %152 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 %10
  br label %153

153:                                              ; preds = %145, %153
  %154 = phi %"struct.spvtools::opt::Operand"* [ %169, %153 ], [ %149, %145 ]
  %155 = phi %"struct.spvtools::opt::Operand"* [ %170, %153 ], [ %2, %145 ]
  %156 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 0
  %157 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %155, i64 0, i32 0
  %158 = load i32, i32* %157, align 8
  store i32 %158, i32* %156, align 8
  %159 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1
  %160 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %155, i64 0, i32 1
  %161 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %159, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %161, align 8
  %162 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1, i32 1
  store i64 0, i64* %162, align 8
  %163 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1, i32 2
  %164 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1, i32 3, i64 0
  %165 = bitcast i32** %163 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %164, %"struct.std::__1::aligned_storage<4, 4>::type"** %165, align 8
  %166 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1, i32 4
  %167 = bitcast %"class.std::__1::unique_ptr.0"* %166 to i64*
  store i64 0, i64* %167, align 8
  %168 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %159, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %160) #15
  %169 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 1
  %170 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %155, i64 1
  %171 = icmp eq %"struct.spvtools::opt::Operand"* %152, %169
  br i1 %171, label %172, label %153

172:                                              ; preds = %153
  %173 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %6, align 8
  %174 = icmp eq %"struct.spvtools::opt::Operand"* %173, %1
  br i1 %174, label %194, label %175

175:                                              ; preds = %172, %175
  %176 = phi %"struct.spvtools::opt::Operand"* [ %192, %175 ], [ %149, %172 ]
  %177 = phi %"struct.spvtools::opt::Operand"* [ %178, %175 ], [ %1, %172 ]
  %178 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %177, i64 -1
  %179 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 0
  %180 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %178, i64 0, i32 0
  %181 = load i32, i32* %180, align 8
  store i32 %181, i32* %179, align 8
  %182 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1
  %183 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %177, i64 -1, i32 1
  %184 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %182, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %184, align 8
  %185 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1, i32 1
  store i64 0, i64* %185, align 8
  %186 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1, i32 2
  %187 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1, i32 3, i64 0
  %188 = bitcast i32** %186 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %187, %"struct.std::__1::aligned_storage<4, 4>::type"** %188, align 8
  %189 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1, i32 4
  %190 = bitcast %"class.std::__1::unique_ptr.0"* %189 to i64*
  store i64 0, i64* %190, align 8
  %191 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %182, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %183) #15
  %192 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1
  %193 = icmp eq %"struct.spvtools::opt::Operand"* %178, %173
  br i1 %193, label %194, label %175

194:                                              ; preds = %175, %172
  %195 = phi %"struct.spvtools::opt::Operand"* [ %149, %172 ], [ %192, %175 ]
  %196 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %16, align 8
  %197 = icmp eq %"struct.spvtools::opt::Operand"* %196, %1
  br i1 %197, label %219, label %198

198:                                              ; preds = %194, %198
  %199 = phi %"struct.spvtools::opt::Operand"* [ %215, %198 ], [ %152, %194 ]
  %200 = phi %"struct.spvtools::opt::Operand"* [ %214, %198 ], [ %1, %194 ]
  %201 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 0
  %202 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %200, i64 0, i32 0
  %203 = load i32, i32* %202, align 8
  store i32 %203, i32* %201, align 8
  %204 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1
  %205 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %200, i64 0, i32 1
  %206 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %204, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %206, align 8
  %207 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1, i32 1
  store i64 0, i64* %207, align 8
  %208 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1, i32 2
  %209 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1, i32 3, i64 0
  %210 = bitcast i32** %208 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %209, %"struct.std::__1::aligned_storage<4, 4>::type"** %210, align 8
  %211 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1, i32 4
  %212 = bitcast %"class.std::__1::unique_ptr.0"* %211 to i64*
  store i64 0, i64* %212, align 8
  %213 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %204, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %205) #15
  %214 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %200, i64 1
  %215 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 1
  %216 = icmp eq %"struct.spvtools::opt::Operand"* %214, %196
  br i1 %216, label %217, label %198

217:                                              ; preds = %198
  %218 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %16, align 8
  br label %219

219:                                              ; preds = %194, %217
  %220 = phi %"struct.spvtools::opt::Operand"* [ %218, %217 ], [ %1, %194 ]
  %221 = phi %"struct.spvtools::opt::Operand"* [ %215, %217 ], [ %152, %194 ]
  %222 = ptrtoint %"struct.spvtools::opt::Operand"* %195 to i64
  %223 = ptrtoint %"struct.spvtools::opt::Operand"* %221 to i64
  %224 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %6, align 8
  store i64 %222, i64* %117, align 8
  store i64 %223, i64* %22, align 8
  store i64 %151, i64* %14, align 8
  %225 = icmp eq %"struct.spvtools::opt::Operand"* %220, %224
  br i1 %225, label %246, label %226

226:                                              ; preds = %219, %244
  %227 = phi %"struct.spvtools::opt::Operand"* [ %228, %244 ], [ %220, %219 ]
  %228 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %227, i64 -1
  %229 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %227, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %229, align 8
  %230 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %227, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %231 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %230, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %230, align 8
  %232 = icmp eq %"class.std::__1::vector.3"* %231, null
  br i1 %232, label %244, label %233

233:                                              ; preds = %226
  %234 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %231, i64 0, i32 0, i32 0
  %235 = load i32*, i32** %234, align 8
  %236 = icmp eq i32* %235, null
  br i1 %236, label %242, label %237

237:                                              ; preds = %233
  %238 = ptrtoint i32* %235 to i64
  %239 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %231, i64 0, i32 0, i32 1
  %240 = bitcast i32** %239 to i64*
  store i64 %238, i64* %240, align 8
  %241 = bitcast i32* %235 to i8*
  tail call void @_ZdlPv(i8* %241) #14
  br label %242

242:                                              ; preds = %237, %233
  %243 = bitcast %"class.std::__1::vector.3"* %231 to i8*
  tail call void @_ZdlPv(i8* %243) #14
  br label %244

244:                                              ; preds = %242, %226
  %245 = icmp eq %"struct.spvtools::opt::Operand"* %228, %224
  br i1 %245, label %246, label %226

246:                                              ; preds = %244, %219
  %247 = icmp eq %"struct.spvtools::opt::Operand"* %224, null
  br i1 %247, label %250, label %248

248:                                              ; preds = %246
  %249 = bitcast %"struct.spvtools::opt::Operand"* %224 to i8*
  tail call void @_ZdlPv(i8* %249) #14
  br label %250

250:                                              ; preds = %104, %248, %246, %51, %102, %4
  %251 = phi %"struct.spvtools::opt::Operand"* [ %1, %4 ], [ %1, %102 ], [ %1, %51 ], [ %149, %246 ], [ %149, %248 ], [ %1, %104 ]
  ret %"struct.spvtools::opt::Operand"* %251
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %7, align 8
  br i1 %5, label %54, label %9

9:                                                ; preds = %2
  %10 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %9
  %12 = icmp eq %"class.std::__1::vector.3"* %8, %4
  br i1 %12, label %107, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %17 = load i32*, i32** %16, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"* nonnull %8, i32* %15, i32* %17) #15
  br label %107

18:                                               ; preds = %9
  %19 = tail call i8* @_Znwm(i64 24) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #15
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.3"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %51, label %28

28:                                               ; preds = %18
  %29 = icmp ugt i64 %26, 4611686018427387903
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast i8* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %31) #16
  unreachable

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 %25) #14
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds i8, i8* %19, i64 8
  %36 = bitcast i8* %35 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast i8* %19 to i8**
  store i8* %33, i8** %37, align 8
  %38 = getelementptr inbounds i32, i32* %34, i64 %26
  %39 = getelementptr inbounds i8, i8* %19, i64 16
  %40 = bitcast i8* %39 to i32**
  store i32* %38, i32** %40, align 8
  %41 = bitcast i8* %35 to i64*
  %42 = ptrtoint i8* %33 to i64
  %43 = icmp sgt i64 %25, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %32
  %45 = lshr exact i64 %25, 2
  %46 = inttoptr i64 %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %46, i64 %25, i1 false) #15
  %47 = getelementptr inbounds i32, i32* %34, i64 %45
  %48 = ptrtoint i32* %47 to i64
  br label %49

49:                                               ; preds = %44, %32
  %50 = phi i64 [ %48, %44 ], [ %42, %32 ]
  store i64 %50, i64* %41, align 8
  br label %51

51:                                               ; preds = %18, %49
  %52 = ptrtoint i8* %19 to i64
  %53 = bitcast %"class.std::__1::unique_ptr.0"* %6 to i64*
  store i64 %52, i64* %53, align 8
  br label %107

54:                                               ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %7, align 8
  %55 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %55, label %67, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint i32* %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 1
  %63 = bitcast i32** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast i32* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #14
  br label %65

65:                                               ; preds = %60, %56
  %66 = bitcast %"class.std::__1::vector.3"* %8 to i8*
  tail call void @_ZdlPv(i8* %66) #14
  br label %67

67:                                               ; preds = %54, %65
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %88, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %74 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %75

75:                                               ; preds = %72, %79
  %76 = phi i64 [ 0, %72 ], [ %85, %79 ]
  %77 = load i64, i64* %68, align 8
  %78 = icmp ult i64 %76, %77
  br i1 %78, label %79, label %88

79:                                               ; preds = %75
  %80 = load i32*, i32** %73, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 %76
  %82 = load i32, i32* %81, align 4
  %83 = load i32*, i32** %74, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %76
  store i32 %82, i32* %84, align 4
  %85 = add nuw i64 %76, 1
  %86 = load i64, i64* %69, align 8
  %87 = icmp ult i64 %85, %86
  br i1 %87, label %75, label %88

88:                                               ; preds = %75, %79, %67
  %89 = phi i64 [ 0, %67 ], [ %85, %79 ], [ %76, %75 ]
  %90 = load i64, i64* %68, align 8
  %91 = icmp ult i64 %89, %90
  br i1 %91, label %92, label %105

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %94 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %95

95:                                               ; preds = %92, %95
  %96 = phi i64 [ %89, %92 ], [ %102, %95 ]
  %97 = load i32*, i32** %93, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 %96
  %99 = load i32*, i32** %94, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 %96
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %98, align 4
  %102 = add nuw i64 %96, 1
  %103 = load i64, i64* %68, align 8
  %104 = icmp ult i64 %102, %103
  br i1 %104, label %95, label %105

105:                                              ; preds = %95, %88
  %106 = phi i64 [ %90, %88 ], [ %103, %95 ]
  store i64 %106, i64* %69, align 8
  br label %107

107:                                              ; preds = %13, %11, %51, %105
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.3"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #15
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #15
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #14
  %55 = bitcast %"class.std::__1::vector.3"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #15
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #16
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #16
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #14
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.3"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #15
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

declare void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt7MemPassD2Ev(%"class.spvtools::opt::MemPass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt7MemPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.254"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.254"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.254"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  %11 = icmp eq %"struct.std::__1::__hash_node_base.254"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.254"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.254"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #14
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %19, align 8
  %21 = icmp eq %"struct.std::__1::__hash_node_base.915"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %18, %22
  %23 = phi %"struct.std::__1::__hash_node_base.915"* [ %25, %22 ], [ %20, %18 ]
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %23, i64 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %24, align 8
  %26 = bitcast %"struct.std::__1::__hash_node_base.915"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #14
  %27 = icmp eq %"struct.std::__1::__hash_node_base.915"* %25, null
  br i1 %27, label %28, label %22

28:                                               ; preds = %22, %18
  %29 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %29, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.915"** %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = bitcast %"struct.std::__1::__hash_node_base.915"** %30 to i8*
  tail call void @_ZdlPv(i8* %33) #14
  br label %34

34:                                               ; preds = %28, %32
  %35 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.915"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %34, %38
  %39 = phi %"struct.std::__1::__hash_node_base.915"* [ %41, %38 ], [ %36, %34 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base.915"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #14
  %43 = icmp eq %"struct.std::__1::__hash_node_base.915"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %34
  %45 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %45, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.915"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base.915"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #14
  br label %50

50:                                               ; preds = %44, %48
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %51 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %52 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %51, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %52, i64 0, i32 1
  %54 = load void (i8*)*, void (i8*)** %53, align 8
  %55 = icmp eq void (i8*)* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  tail call void %54(i8* %58) #15
  br label %59

59:                                               ; preds = %50, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt7MemPassD0Ev(%"class.spvtools::opt::MemPass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #15
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD0Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #15, !range !11
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.915"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.915"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.915"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.915"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.915"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #14, !noalias !64
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !64
  store i32 %58, i32* %57, align 4, !noalias !64
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !64
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.915"**
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %61, align 8, !noalias !64
  %62 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #15, !range !11
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #15
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #15, !range !11
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.915"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base.915"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base.915"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base.915"* %104, %"struct.std::__1::__hash_node_base.915"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.915"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.915"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #15, !range !11
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base.915"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base.915"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.915"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.915"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base.915"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } undef, %"struct.std::__1::__hash_node_base.915"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base.915"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.911"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !11
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #15
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !11
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #15
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #15, !range !11
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #15
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.911"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #16
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.911"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.915"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.915"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.917", %"class.std::__1::__bucket_list_deallocator.917"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !67

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.915"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.915"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #15, !range !11
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.915"* %36, %"struct.std::__1::__hash_node_base.915"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.915"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.915"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.915"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.915"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.915"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.915"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.915"* %82, %"struct.std::__1::__hash_node_base.915"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.915"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.915"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.915"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.915"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.915"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.915"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.915"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.915"* %80, %"struct.std::__1::__hash_node_base.915"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.915"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.915"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.915"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.915"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #14
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.917", %"class.std::__1::__bucket_list_deallocator.917"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_17AggressiveDCEPass9AddStoresEPNS3_8FunctionEjE3$_0S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1268"**
  %4 = load %"class.std::__1::__function::__default_alloc_func.1268"*, %"class.std::__1::__function::__default_alloc_func.1268"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1268", %"class.std::__1::__function::__default_alloc_func.1268"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.spvtools::opt::AggressiveDCEPass"*, %"class.spvtools::opt::AggressiveDCEPass"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %6, i64 0, i32 0, i32 0, i32 2
  %8 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %7, align 8
  %9 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %8, %"class.spvtools::opt::Instruction"* %1) #15
  %10 = icmp eq %"class.spvtools::opt::BasicBlock"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %9, i64 0, i32 0
  %13 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1268", %"class.std::__1::__function::__default_alloc_func.1268"* %4, i64 0, i32 0, i32 2
  %15 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %14, align 8
  %16 = icmp eq %"class.spvtools::opt::Function"* %13, %15
  br i1 %16, label %17, label %50

17:                                               ; preds = %11, %2
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  switch i32 %19, label %49 [
    i32 65, label %20
    i32 66, label %20
    i32 83, label %20
    i32 61, label %50
    i32 63, label %33
    i32 64, label %33
  ]

20:                                               ; preds = %17, %17, %17
  %21 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1268", %"class.std::__1::__function::__default_alloc_func.1268"* %4, i64 0, i32 0, i32 2
  %22 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %21, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %24 = load i8, i8* %23, align 1, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %28 = load i8, i8* %27, align 4, !range !2
  %29 = zext i8 %28 to i32
  %30 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %29) #15
  br label %31

31:                                               ; preds = %26, %20
  %32 = phi i32 [ %30, %26 ], [ 0, %20 ]
  tail call void @_ZN8spvtools3opt17AggressiveDCEPass9AddStoresEPNS0_8FunctionEj(%"class.spvtools::opt::AggressiveDCEPass"* %6, %"class.spvtools::opt::Function"* %22, i32 %32) #15
  br label %50

33:                                               ; preds = %17, %17
  %34 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %35 = load i8, i8* %34, align 4, !range !2
  %36 = icmp eq i8 %35, 0
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %38 = load i8, i8* %37, align 1, !range !2
  %39 = icmp eq i8 %38, 0
  %40 = select i1 %39, i32 1, i32 2
  %41 = xor i1 %39, true
  %42 = zext i1 %41 to i32
  %43 = select i1 %36, i32 %42, i32 %40
  %44 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %43) #15
  %45 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1268", %"class.std::__1::__function::__default_alloc_func.1268"* %4, i64 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %44, %46
  br i1 %47, label %48, label %50

48:                                               ; preds = %33
  tail call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %6, %"class.spvtools::opt::Instruction"* %1) #15
  br label %50

49:                                               ; preds = %17
  tail call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %6, %"class.spvtools::opt::Instruction"* %1) #15
  br label %50

50:                                               ; preds = %11, %17, %31, %33, %48, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass9AddStoresEPNS5_8FunctionEjE3$_0FvPNS5_11InstructionEEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #14, !noalias !68
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #15
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass9AddStoresEPNS5_8FunctionEjE3$_0FvPNS5_11InstructionEEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.1026"* @_ZNKSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table.1022"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #15
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #15
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.1022", %"class.std::__1::__hash_table.1022"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %111, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #15, !range !11
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table.1022", %"class.std::__1::__hash_table.1022"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.1026"**, %"struct.std::__1::__hash_node_base.1026"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.1026"* %36, null
  br i1 %37, label %111, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026", %"struct.std::__1::__hash_node_base.1026"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.1026"* %40, null
  br i1 %41, label %111, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  %44 = load i8, i8* %5, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i64, i64* %10, align 8
  %47 = zext i8 %44 to i64
  %48 = select i1 %45, i64 %46, i64 %47
  %49 = load i8*, i8** %8, align 8
  %50 = select i1 %45, i8* %49, i8* %12
  %51 = icmp eq i64 %48, 0
  br label %52

52:                                               ; preds = %42, %107
  %53 = phi %"struct.std::__1::__hash_node_base.1026"* [ %40, %42 ], [ %109, %107 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026", %"struct.std::__1::__hash_node_base.1026"* %53, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base.1026"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %17, %56
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  br i1 %23, label %61, label %59

59:                                               ; preds = %58
  %60 = and i64 %56, %43
  br label %65

61:                                               ; preds = %58
  %62 = icmp ult i64 %56, %19
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %56, %19
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %56, %61 ]
  %67 = icmp eq i64 %66, %32
  br i1 %67, label %107, label %111

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026", %"struct.std::__1::__hash_node_base.1026"* %53, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.1026"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026", %"struct.std::__1::__hash_node_base.1026"* %53, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base.1026"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %72 to i64
  %78 = select i1 %73, i64 %76, i64 %77
  %79 = icmp eq i64 %78, %48
  br i1 %79, label %80, label %107

80:                                               ; preds = %68
  %81 = bitcast %"struct.std::__1::__hash_node_base.1026"* %69 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"struct.std::__1::__hash_node_base.1026"* %69 to i8*
  %84 = select i1 %73, i8* %82, i8* %83
  br i1 %73, label %91, label %85

85:                                               ; preds = %80
  br i1 %51, label %111, label %86

86:                                               ; preds = %85
  %87 = ptrtoint i8* %82 to i64
  %88 = trunc i64 %87 to i8
  %89 = load i8, i8* %50, align 1
  %90 = icmp eq i8 %89, %88
  br i1 %90, label %92, label %107

91:                                               ; preds = %80
  br i1 %51, label %111, label %104

92:                                               ; preds = %86, %99
  %93 = phi i64 [ %96, %99 ], [ %77, %86 ]
  %94 = phi i8* [ %97, %99 ], [ %83, %86 ]
  %95 = phi i8* [ %100, %99 ], [ %50, %86 ]
  %96 = add i64 %93, -1
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %92, label %107

104:                                              ; preds = %91
  %105 = call i32 @bcmp(i8* %84, i8* %50, i64 %48) #15
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %99, %86, %68, %65, %104
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026", %"struct.std::__1::__hash_node_base.1026"* %53, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.1026"* %109, null
  br i1 %110, label %111, label %52

111:                                              ; preds = %104, %107, %65, %91, %85, %92, %38, %2, %31
  %112 = phi %"struct.std::__1::__hash_node_base.1026"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %53, %92 ], [ %53, %104 ], [ null, %107 ], [ null, %65 ], [ %53, %91 ], [ %53, %85 ]
  ret %"struct.std::__1::__hash_node_base.1026"* %112
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_17AggressiveDCEPass12IsTargetDeadES5_E3$_1S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #11 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, -2
  %6 = icmp eq i32 %5, 74
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  store i8 0, i8* %9, align 1
  br label %10

10:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.974"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.970"*, %"class.spvtools::opt::BasicBlock"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1275"* dereferenceable(8), %"class.std::__1::tuple.1147"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::BasicBlock"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.970", %"class.std::__1::__hash_table.970"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::BasicBlock"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #15, !range !11
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.970", %"class.std::__1::__hash_table.970"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.974"**, %"struct.std::__1::__hash_node_base.974"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.974"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.974"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974", %"struct.std::__1::__hash_node_base.974"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.974"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974", %"struct.std::__1::__hash_node_base.974"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.974"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974", %"struct.std::__1::__hash_node_base.974"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.974"* %65 to %"class.spvtools::opt::BasicBlock"**
  %67 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::BasicBlock"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #14, !noalias !73
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.1275"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !73
  %75 = load i64, i64* %74, align 8, !noalias !73
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !73
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to i32*
  store i32 0, i32* %78, align 8, !noalias !73
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !73
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.974"**
  store %"struct.std::__1::__hash_node_base.974"* null, %"struct.std::__1::__hash_node_base.974"** %81, align 8, !noalias !73
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.970", %"class.std::__1::__hash_table.970"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.970", %"class.std::__1::__hash_table.970"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #15, !range !11
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #15
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.970"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #15, !range !11
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.970", %"class.std::__1::__hash_table.970"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.974"**, %"struct.std::__1::__hash_node_base.974"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.974"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.970", %"class.std::__1::__hash_table.970"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.974"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.974"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.974"* %124, %"struct.std::__1::__hash_node_base.974"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.974"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974", %"struct.std::__1::__hash_node_base.974"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.974"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #15, !range !11
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.974"**, %"struct.std::__1::__hash_node_base.974"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.974"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.974"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.974"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.974"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.974"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.974"*, i8 } undef, %"struct.std::__1::__hash_node_base.974"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.974"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.974"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.970"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !11
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #15
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.970", %"class.std::__1::__hash_table.970"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.970"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !11
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.970", %"class.std::__1::__hash_table.970"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.970", %"class.std::__1::__hash_table.970"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #15
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #15, !range !11
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #15
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.970"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.970"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.970", %"class.std::__1::__hash_table.970"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #16
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.970", %"class.std::__1::__hash_table.970"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.974"**, %"struct.std::__1::__hash_node_base.974"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.970"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.974"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.974"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.976", %"class.std::__1::__bucket_list_deallocator.976"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.974"**, %"struct.std::__1::__hash_node_base.974"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.974"* null, %"struct.std::__1::__hash_node_base.974"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !76

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.970", %"class.std::__1::__hash_table.970"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974", %"struct.std::__1::__hash_node_base.974"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.974"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.974"**, %"struct.std::__1::__hash_node_base.974"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.974"* null, %"struct.std::__1::__hash_node_base.974"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.974"**, %"struct.std::__1::__hash_node_base.974"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.974"* null, %"struct.std::__1::__hash_node_base.974"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.974"**, %"struct.std::__1::__hash_node_base.974"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.974"* null, %"struct.std::__1::__hash_node_base.974"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.974"**, %"struct.std::__1::__hash_node_base.974"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.974"* null, %"struct.std::__1::__hash_node_base.974"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974", %"struct.std::__1::__hash_node_base.974"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.974"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #15, !range !11
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.974"**, %"struct.std::__1::__hash_node_base.974"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.974"* %36, %"struct.std::__1::__hash_node_base.974"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974", %"struct.std::__1::__hash_node_base.974"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.974"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.974"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.974"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974", %"struct.std::__1::__hash_node_base.974"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.974"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.974"**, %"struct.std::__1::__hash_node_base.974"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.974"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974", %"struct.std::__1::__hash_node_base.974"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.974"* %101 to %"class.spvtools::opt::BasicBlock"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.974"* %82, %"struct.std::__1::__hash_node_base.974"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.974"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974", %"struct.std::__1::__hash_node_base.974"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.974"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974", %"struct.std::__1::__hash_node_base.974"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.974"* %110 to %"class.spvtools::opt::BasicBlock"**
  %112 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %102, align 8
  %113 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::BasicBlock"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.974"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.974"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.974"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.974"**, %"struct.std::__1::__hash_node_base.974"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.974"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.974"**, %"struct.std::__1::__hash_node_base.974"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974", %"struct.std::__1::__hash_node_base.974"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.974"* %80, %"struct.std::__1::__hash_node_base.974"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.974"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974", %"struct.std::__1::__hash_node_base.974"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.974"*, %"struct.std::__1::__hash_node_base.974"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.974"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.970", %"class.std::__1::__hash_table.970"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.974"**, %"struct.std::__1::__hash_node_base.974"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.974"** null, %"struct.std::__1::__hash_node_base.974"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.974"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.974"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #14
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.976", %"class.std::__1::__bucket_list_deallocator.976"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.998"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.994"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1147"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.994", %"class.std::__1::__hash_table.994"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::Instruction"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #15, !range !11
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.994", %"class.std::__1::__hash_table.994"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.998"**, %"struct.std::__1::__hash_node_base.998"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.998"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.998"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998", %"struct.std::__1::__hash_node_base.998"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.998"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998", %"struct.std::__1::__hash_node_base.998"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.998"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998", %"struct.std::__1::__hash_node_base.998"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.998"* %65 to %"class.spvtools::opt::Instruction"**
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #14, !noalias !77
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !77
  %75 = load i64, i64* %74, align 8, !noalias !77
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !77
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::Instruction"**
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %78, align 8, !noalias !77
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !77
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.998"**
  store %"struct.std::__1::__hash_node_base.998"* null, %"struct.std::__1::__hash_node_base.998"** %81, align 8, !noalias !77
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.994", %"class.std::__1::__hash_table.994"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.994", %"class.std::__1::__hash_table.994"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #15, !range !11
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #15
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.994"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #15, !range !11
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.994", %"class.std::__1::__hash_table.994"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.998"**, %"struct.std::__1::__hash_node_base.998"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.998"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.994", %"class.std::__1::__hash_table.994"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.998"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.998"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.998"* %124, %"struct.std::__1::__hash_node_base.998"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.998"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998", %"struct.std::__1::__hash_node_base.998"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.998"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #15, !range !11
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.998"**, %"struct.std::__1::__hash_node_base.998"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.998"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.998"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.998"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.998"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.998"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.998"*, i8 } undef, %"struct.std::__1::__hash_node_base.998"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.998"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.998"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.994"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !11
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #15
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.994", %"class.std::__1::__hash_table.994"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.994"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !11
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.994", %"class.std::__1::__hash_table.994"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.994", %"class.std::__1::__hash_table.994"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #15
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #15, !range !11
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #15
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.994"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.994"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.994", %"class.std::__1::__hash_table.994"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #16
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.994", %"class.std::__1::__hash_table.994"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.998"**, %"struct.std::__1::__hash_node_base.998"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.994"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.998"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.998"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1000", %"class.std::__1::__bucket_list_deallocator.1000"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.998"**, %"struct.std::__1::__hash_node_base.998"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.998"* null, %"struct.std::__1::__hash_node_base.998"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !80

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.994", %"class.std::__1::__hash_table.994"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998", %"struct.std::__1::__hash_node_base.998"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.998"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.998"**, %"struct.std::__1::__hash_node_base.998"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.998"* null, %"struct.std::__1::__hash_node_base.998"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.998"**, %"struct.std::__1::__hash_node_base.998"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.998"* null, %"struct.std::__1::__hash_node_base.998"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.998"**, %"struct.std::__1::__hash_node_base.998"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.998"* null, %"struct.std::__1::__hash_node_base.998"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.998"**, %"struct.std::__1::__hash_node_base.998"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.998"* null, %"struct.std::__1::__hash_node_base.998"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998", %"struct.std::__1::__hash_node_base.998"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.998"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #15, !range !11
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.998"**, %"struct.std::__1::__hash_node_base.998"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.998"* %36, %"struct.std::__1::__hash_node_base.998"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998", %"struct.std::__1::__hash_node_base.998"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.998"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.998"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.998"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998", %"struct.std::__1::__hash_node_base.998"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.998"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.998"**, %"struct.std::__1::__hash_node_base.998"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.998"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998", %"struct.std::__1::__hash_node_base.998"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.998"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.998"* %82, %"struct.std::__1::__hash_node_base.998"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.998"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998", %"struct.std::__1::__hash_node_base.998"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.998"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998", %"struct.std::__1::__hash_node_base.998"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.998"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.998"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.998"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.998"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.998"**, %"struct.std::__1::__hash_node_base.998"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.998"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.998"**, %"struct.std::__1::__hash_node_base.998"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998", %"struct.std::__1::__hash_node_base.998"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.998"* %80, %"struct.std::__1::__hash_node_base.998"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.998"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998", %"struct.std::__1::__hash_node_base.998"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.998"*, %"struct.std::__1::__hash_node_base.998"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.998"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.994", %"class.std::__1::__hash_table.994"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.998"**, %"struct.std::__1::__hash_node_base.998"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.998"** null, %"struct.std::__1::__hash_node_base.998"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.998"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.998"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #14
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1000", %"class.std::__1::__bucket_list_deallocator.1000"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.946"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.942"*, %"class.spvtools::opt::BasicBlock"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1275"* dereferenceable(8), %"class.std::__1::tuple.1147"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::BasicBlock"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.942", %"class.std::__1::__hash_table.942"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::BasicBlock"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #15, !range !11
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.942", %"class.std::__1::__hash_table.942"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.946"**, %"struct.std::__1::__hash_node_base.946"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.946"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.946"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946", %"struct.std::__1::__hash_node_base.946"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.946"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946", %"struct.std::__1::__hash_node_base.946"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.946"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946", %"struct.std::__1::__hash_node_base.946"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.946"* %65 to %"class.spvtools::opt::BasicBlock"**
  %67 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::BasicBlock"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #14, !noalias !81
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.1275"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !81
  %75 = load i64, i64* %74, align 8, !noalias !81
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !81
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::Instruction"**
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %78, align 8, !noalias !81
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !81
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.946"**
  store %"struct.std::__1::__hash_node_base.946"* null, %"struct.std::__1::__hash_node_base.946"** %81, align 8, !noalias !81
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.942", %"class.std::__1::__hash_table.942"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.942", %"class.std::__1::__hash_table.942"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #15, !range !11
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #15
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.942"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #15, !range !11
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.942", %"class.std::__1::__hash_table.942"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.946"**, %"struct.std::__1::__hash_node_base.946"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.946"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.942", %"class.std::__1::__hash_table.942"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.946"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.946"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.946"* %124, %"struct.std::__1::__hash_node_base.946"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.946"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946", %"struct.std::__1::__hash_node_base.946"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.946"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #15, !range !11
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.946"**, %"struct.std::__1::__hash_node_base.946"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.946"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.946"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.946"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.946"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.946"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.946"*, i8 } undef, %"struct.std::__1::__hash_node_base.946"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.946"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.946"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.942"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !11
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #15
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.942", %"class.std::__1::__hash_table.942"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.942"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !11
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.942", %"class.std::__1::__hash_table.942"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.942", %"class.std::__1::__hash_table.942"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #15
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #15, !range !11
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #15
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.942"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.942"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.942", %"class.std::__1::__hash_table.942"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #16
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.942", %"class.std::__1::__hash_table.942"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.946"**, %"struct.std::__1::__hash_node_base.946"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.942"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.946"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.946"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.948", %"class.std::__1::__bucket_list_deallocator.948"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.946"**, %"struct.std::__1::__hash_node_base.946"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.946"* null, %"struct.std::__1::__hash_node_base.946"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !84

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.942", %"class.std::__1::__hash_table.942"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946", %"struct.std::__1::__hash_node_base.946"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.946"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.946"**, %"struct.std::__1::__hash_node_base.946"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.946"* null, %"struct.std::__1::__hash_node_base.946"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.946"**, %"struct.std::__1::__hash_node_base.946"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.946"* null, %"struct.std::__1::__hash_node_base.946"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.946"**, %"struct.std::__1::__hash_node_base.946"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.946"* null, %"struct.std::__1::__hash_node_base.946"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.946"**, %"struct.std::__1::__hash_node_base.946"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.946"* null, %"struct.std::__1::__hash_node_base.946"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946", %"struct.std::__1::__hash_node_base.946"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.946"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #15, !range !11
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.946"**, %"struct.std::__1::__hash_node_base.946"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.946"* %36, %"struct.std::__1::__hash_node_base.946"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946", %"struct.std::__1::__hash_node_base.946"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.946"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.946"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.946"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946", %"struct.std::__1::__hash_node_base.946"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.946"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.946"**, %"struct.std::__1::__hash_node_base.946"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.946"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946", %"struct.std::__1::__hash_node_base.946"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.946"* %101 to %"class.spvtools::opt::BasicBlock"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.946"* %82, %"struct.std::__1::__hash_node_base.946"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.946"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946", %"struct.std::__1::__hash_node_base.946"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.946"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946", %"struct.std::__1::__hash_node_base.946"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.946"* %110 to %"class.spvtools::opt::BasicBlock"**
  %112 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %102, align 8
  %113 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::BasicBlock"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.946"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.946"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.946"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.946"**, %"struct.std::__1::__hash_node_base.946"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.946"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.946"**, %"struct.std::__1::__hash_node_base.946"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946", %"struct.std::__1::__hash_node_base.946"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.946"* %80, %"struct.std::__1::__hash_node_base.946"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.946"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946", %"struct.std::__1::__hash_node_base.946"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.946"*, %"struct.std::__1::__hash_node_base.946"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.946"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.942", %"class.std::__1::__hash_table.942"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.946"**, %"struct.std::__1::__hash_node_base.946"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.946"** null, %"struct.std::__1::__hash_node_base.946"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.946"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.946"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #14
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.948", %"class.std::__1::__bucket_list_deallocator.948"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_17AggressiveDCEPass31AddBreaksAndContinuesToWorklistES5_E3$_2S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1147", align 1
  %5 = alloca %"class.std::__1::tuple.1275", align 8
  %6 = alloca %"class.std::__1::tuple.1147", align 1
  %7 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %8 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %9 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1304"*
  %10 = bitcast %"class.spvtools::opt::Instruction"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #15
  store %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::Instruction"** %7, align 8
  %11 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %12 = bitcast [8 x i8]* %11 to %"class.spvtools::opt::AggressiveDCEPass"**
  %13 = load %"class.spvtools::opt::AggressiveDCEPass"*, %"class.spvtools::opt::AggressiveDCEPass"** %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = tail call zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32 %15) #15
  br i1 %16, label %17, label %51

17:                                               ; preds = %2
  %18 = bitcast %"class.spvtools::opt::BasicBlock"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #15
  %19 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %13, i64 0, i32 0, i32 0, i32 2
  %20 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %19, align 8
  %21 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %20, %"class.spvtools::opt::Instruction"* %1) #15
  store %"class.spvtools::opt::BasicBlock"* %21, %"class.spvtools::opt::BasicBlock"** %8, align 8
  %22 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %13, i64 0, i32 7, i32 0
  %23 = bitcast %"class.std::__1::tuple.1275"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #15
  %24 = getelementptr inbounds %"class.std::__1::tuple.1275", %"class.std::__1::tuple.1275"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"** %8, %"class.spvtools::opt::BasicBlock"*** %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::tuple.1147", %"class.std::__1::tuple.1147"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %25) #15
  %26 = call { %"struct.std::__1::__hash_node_base.974"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.970"* %22, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1275"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.1147"* nonnull dereferenceable(1) %6) #15
  %27 = extractvalue { %"struct.std::__1::__hash_node_base.974"*, i8 } %26, 0
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.974", %"struct.std::__1::__hash_node_base.974"* %27, i64 3
  %29 = bitcast %"struct.std::__1::__hash_node_base.974"* %28 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %25) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #15
  %30 = load i32, i32* %29, align 4
  %31 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = icmp ult i32 %32, %30
  br i1 %33, label %34, label %50

34:                                               ; preds = %17
  %35 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1304", %"class.std::__1::__function::__default_alloc_func.1304"* %9, i64 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp ult i32 %30, %36
  br i1 %37, label %38, label %50

38:                                               ; preds = %34
  call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %13, %"class.spvtools::opt::Instruction"* %1) #15
  %39 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %13, i64 0, i32 8, i32 0
  %40 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #15
  %41 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %7, %"class.spvtools::opt::Instruction"*** %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::tuple.1147", %"class.std::__1::tuple.1147"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %42) #15
  %43 = call { %"struct.std::__1::__hash_node_base.998"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.994"* %39, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1147"* nonnull dereferenceable(1) %4) #15
  %44 = extractvalue { %"struct.std::__1::__hash_node_base.998"*, i8 } %43, 0
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998", %"struct.std::__1::__hash_node_base.998"* %44, i64 3
  %46 = bitcast %"struct.std::__1::__hash_node_base.998"* %45 to %"class.spvtools::opt::Instruction"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %42) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #15
  %47 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %46, align 8
  %48 = icmp eq %"class.spvtools::opt::Instruction"* %47, null
  br i1 %48, label %50, label %49

49:                                               ; preds = %38
  call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %13, %"class.spvtools::opt::Instruction"* nonnull %47) #15
  br label %50

50:                                               ; preds = %49, %38, %34, %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #15
  br label %51

51:                                               ; preds = %2, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_17AggressiveDCEPass31AddBreaksAndContinuesToWorklistES5_E3$_3S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.1275", align 8
  %4 = alloca %"class.std::__1::tuple.1147", align 1
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple.1147", align 1
  %7 = alloca %"class.std::__1::tuple", align 8
  %8 = alloca %"class.std::__1::tuple.1147", align 1
  %9 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %10 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %11 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %12 = bitcast %"class.spvtools::opt::Instruction"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #15
  store %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::Instruction"** %9, align 8
  %13 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %14 = bitcast [8 x i8]* %13 to %"class.spvtools::opt::AggressiveDCEPass"**
  %15 = load %"class.spvtools::opt::AggressiveDCEPass"*, %"class.spvtools::opt::AggressiveDCEPass"** %14, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = or i32 %17, 1
  %19 = icmp eq i32 %18, 251
  br i1 %19, label %20, label %52

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %15, i64 0, i32 8, i32 0
  %22 = bitcast %"class.std::__1::tuple"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #15
  %23 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %9, %"class.spvtools::opt::Instruction"*** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::tuple.1147", %"class.std::__1::tuple.1147"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %24) #15
  %25 = call { %"struct.std::__1::__hash_node_base.998"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.994"* %21, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.1147"* nonnull dereferenceable(1) %8) #15
  %26 = extractvalue { %"struct.std::__1::__hash_node_base.998"*, i8 } %25, 0
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998", %"struct.std::__1::__hash_node_base.998"* %26, i64 3
  %28 = bitcast %"struct.std::__1::__hash_node_base.998"* %27 to %"class.spvtools::opt::Instruction"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %24) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #15
  %29 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %28, align 8
  %30 = icmp eq %"class.spvtools::opt::Instruction"* %29, null
  br i1 %30, label %101, label %31

31:                                               ; preds = %20
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %29, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 247
  br i1 %34, label %35, label %101

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %29, i64 0, i32 3
  %37 = load i8, i8* %36, align 4, !range !2
  %38 = icmp eq i8 %37, 0
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %29, i64 0, i32 4
  %40 = load i8, i8* %39, align 1, !range !2
  %41 = icmp eq i8 %40, 0
  %42 = select i1 %41, i32 1, i32 2
  %43 = xor i1 %41, true
  %44 = zext i1 %43 to i32
  %45 = select i1 %38, i32 %44, i32 %42
  %46 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %29, i32 %45) #15
  %47 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i32**
  %48 = load i32*, i32** %47, align 8
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %46, %49
  br i1 %50, label %103, label %51

51:                                               ; preds = %35
  call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %15, %"class.spvtools::opt::Instruction"* nonnull %29) #15
  br label %101

52:                                               ; preds = %2
  %53 = icmp eq i32 %17, 249
  br i1 %53, label %54, label %103

54:                                               ; preds = %52
  %55 = bitcast %"class.spvtools::opt::BasicBlock"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #15
  %56 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %15, i64 0, i32 0, i32 0, i32 2
  %57 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %56, align 8
  %58 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %57, %"class.spvtools::opt::Instruction"* %1) #15
  store %"class.spvtools::opt::BasicBlock"* %58, %"class.spvtools::opt::BasicBlock"** %10, align 8
  %59 = bitcast %"class.spvtools::opt::Instruction"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #15
  %60 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %15, i64 0, i32 5, i32 0
  %61 = bitcast %"class.std::__1::tuple.1275"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #15
  %62 = getelementptr inbounds %"class.std::__1::tuple.1275", %"class.std::__1::tuple.1275"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"** %10, %"class.spvtools::opt::BasicBlock"*** %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::tuple.1147", %"class.std::__1::tuple.1147"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %63) #15
  %64 = call { %"struct.std::__1::__hash_node_base.946"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.942"* %60, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1275"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1147"* nonnull dereferenceable(1) %4) #15
  %65 = extractvalue { %"struct.std::__1::__hash_node_base.946"*, i8 } %64, 0
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.946", %"struct.std::__1::__hash_node_base.946"* %65, i64 3
  %67 = bitcast %"struct.std::__1::__hash_node_base.946"* %66 to %"class.spvtools::opt::Instruction"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %63) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #15
  %68 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, align 8
  store %"class.spvtools::opt::Instruction"* %68, %"class.spvtools::opt::Instruction"** %11, align 8
  %69 = icmp eq %"class.spvtools::opt::Instruction"* %68, null
  br i1 %69, label %99, label %70

70:                                               ; preds = %54
  %71 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %15, i64 0, i32 8, i32 0
  %72 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #15
  %73 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %11, %"class.spvtools::opt::Instruction"*** %73, align 8
  %74 = getelementptr inbounds %"class.std::__1::tuple.1147", %"class.std::__1::tuple.1147"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %74) #15
  %75 = call { %"struct.std::__1::__hash_node_base.998"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.994"* %71, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.1147"* nonnull dereferenceable(1) %6) #15
  %76 = extractvalue { %"struct.std::__1::__hash_node_base.998"*, i8 } %75, 0
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.998", %"struct.std::__1::__hash_node_base.998"* %76, i64 3
  %78 = bitcast %"struct.std::__1::__hash_node_base.998"* %77 to %"class.spvtools::opt::Instruction"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %74) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #15
  %79 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %78, align 8
  %80 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %79, i64 0, i32 2
  %81 = load i32, i32* %80, align 8
  %82 = icmp eq i32 %81, 246
  br i1 %82, label %99, label %83

83:                                               ; preds = %70
  %84 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %79, i64 0, i32 3
  %85 = load i8, i8* %84, align 4, !range !2
  %86 = icmp eq i8 %85, 0
  %87 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %79, i64 0, i32 4
  %88 = load i8, i8* %87, align 1, !range !2
  %89 = icmp eq i8 %88, 0
  %90 = select i1 %89, i32 1, i32 2
  %91 = xor i1 %89, true
  %92 = zext i1 %91 to i32
  %93 = select i1 %86, i32 %92, i32 %90
  %94 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %79, i32 %93) #15
  %95 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i32**
  %96 = load i32*, i32** %95, align 8
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, %94
  br i1 %98, label %99, label %100

99:                                               ; preds = %83, %70, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #15
  br label %103

100:                                              ; preds = %83
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #15
  br label %101

101:                                              ; preds = %100, %51, %31, %20
  %102 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %15, %"class.spvtools::opt::Instruction"* %102) #15
  br label %103

103:                                              ; preds = %35, %52, %99, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_17AggressiveDCEPass13AggressiveDCEEPNS3_8FunctionEE3$_4S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::AggressiveDCEPass"**
  %4 = load %"class.spvtools::opt::AggressiveDCEPass"*, %"class.spvtools::opt::AggressiveDCEPass"** %3, align 8
  tail call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %4, %"class.spvtools::opt::Instruction"* %1) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIbNS_9allocatorIbEEE19__add_back_capacityEv(%"class.std::__1::deque.1069"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.1310", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque.1069", %"class.std::__1::deque.1069"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 4095
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -4096
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque.1069", %"class.std::__1::deque.1069"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i8**, i8*** %10, align 8
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8*, i8** %11, i64 1
  store i8** %14, i8*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque.1069", %"class.std::__1::deque.1069"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load i8**, i8*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque.1069", %"class.std::__1::deque.1069"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load i8**, i8*** %17, align 8
  %19 = icmp eq i8** %16, %18
  %20 = ptrtoint i8** %18 to i64
  %21 = bitcast i8** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque.1069", %"class.std::__1::deque.1069"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i8**, i8*** %23, align 8
  %25 = icmp ugt i8** %14, %24
  %26 = ptrtoint i8** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint i8** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds i8*, i8** %14, i64 %32
  %34 = ptrtoint i8** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast i8** %33 to i8*
  %40 = bitcast i8** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #15
  %41 = load i8**, i8*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi i8** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds i8*, i8** %33, i64 %36
  store i8** %44, i8*** %15, align 8
  %45 = getelementptr inbounds i8*, i8** %43, i64 %32
  store i8** %45, i8*** %10, align 8
  %46 = bitcast i8** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast i8*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque.1069"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #16
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #14
  %60 = bitcast i8* %59 to i8**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds i8*, i8** %60, i64 %57
  %63 = ptrtoint i8** %62 to i64
  %64 = getelementptr inbounds i8*, i8** %60, i64 %53
  %65 = ptrtoint i8** %64 to i64
  %66 = ptrtoint i8** %14 to i64
  %67 = ptrtoint i8** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds i8*, i8** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi i8** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi i8** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast i8** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds i8*, i8** %79, i64 1
  %87 = ptrtoint i8** %86 to i64
  %88 = getelementptr inbounds i8*, i8** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !85

91:                                               ; preds = %78
  %92 = ptrtoint i8** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi i8** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi i8** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi i8** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi i8** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast i8** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds i8*, i8** %99, i64 1
  %106 = getelementptr inbounds i8*, i8** %101, i64 1
  %107 = bitcast i8** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i8** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds i8*, i8** %99, i64 2
  %111 = getelementptr inbounds i8*, i8** %101, i64 2
  %112 = bitcast i8** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i8** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds i8*, i8** %99, i64 3
  %116 = getelementptr inbounds i8*, i8** %101, i64 3
  %117 = bitcast i8** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i8** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds i8*, i8** %99, i64 4
  %121 = getelementptr inbounds i8*, i8** %101, i64 4
  %122 = bitcast i8** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast i8** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds i8*, i8** %99, i64 5
  %126 = getelementptr inbounds i8*, i8** %101, i64 5
  %127 = bitcast i8** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i8** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds i8*, i8** %99, i64 6
  %131 = getelementptr inbounds i8*, i8** %101, i64 6
  %132 = bitcast i8** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast i8** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds i8*, i8** %99, i64 7
  %136 = getelementptr inbounds i8*, i8** %101, i64 7
  %137 = bitcast i8** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i8** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds i8*, i8** %99, i64 8
  %141 = ptrtoint i8** %140 to i64
  %142 = getelementptr inbounds i8*, i8** %101, i64 8
  %143 = icmp eq i8** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint i8** %70 to i64
  %146 = load i8**, i8*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi i8** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast i8*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast i8*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq i8** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast i8** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #14
  %156 = bitcast i8*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load i8**, i8*** %15, align 8
  %161 = getelementptr inbounds i8*, i8** %160, i64 1
  store i8** %161, i8*** %15, align 8
  br label %458

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque.1069", %"class.std::__1::deque.1069"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque.1069", %"class.std::__1::deque.1069"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast i8*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque.1069", %"class.std::__1::deque.1069"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast i8*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque.1069", %"class.std::__1::deque.1069"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast i8*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque.1069"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to i8**
  %181 = inttoptr i64 %169 to i8**
  br i1 %179, label %182, label %335

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %187, label %184

184:                                              ; preds = %182
  %185 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #15
  %186 = tail call i8* @_Znwm(i64 4096) #14
  store i8* %186, i8** %2, align 8
  call void @_ZNSt3__114__split_bufferIPbNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer.1071"* %163, i8** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #15
  br label %458

187:                                              ; preds = %182
  %188 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %188) #15
  %189 = tail call i8* @_Znwm(i64 4096) #14
  store i8* %189, i8** %3, align 8
  call void @_ZNSt3__114__split_bufferIPbNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer.1071"* %163, i8** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %188) #15
  %190 = load i8**, i8*** %167, align 8
  %191 = bitcast i8** %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = getelementptr inbounds i8*, i8** %190, i64 1
  store i8** %193, i8*** %167, align 8
  %194 = load i8**, i8*** %164, align 8
  %195 = load i8**, i8*** %172, align 8
  %196 = icmp eq i8** %194, %195
  %197 = ptrtoint i8** %195 to i64
  %198 = bitcast i8** %194 to i64*
  br i1 %196, label %199, label %331

199:                                              ; preds = %187
  %200 = getelementptr inbounds %"class.std::__1::deque.1069", %"class.std::__1::deque.1069"* %0, i64 0, i32 0, i32 0, i32 0
  %201 = load i8**, i8*** %200, align 8
  %202 = icmp ugt i8** %193, %201
  %203 = ptrtoint i8** %201 to i64
  br i1 %202, label %204, label %224

204:                                              ; preds = %199
  %205 = ptrtoint i8** %193 to i64
  %206 = sub i64 %205, %203
  %207 = ashr exact i64 %206, 3
  %208 = add nsw i64 %207, 1
  %209 = sdiv i64 %208, -2
  %210 = getelementptr inbounds i8*, i8** %193, i64 %209
  %211 = ptrtoint i8** %194 to i64
  %212 = sub i64 %211, %205
  %213 = ashr exact i64 %212, 3
  %214 = icmp eq i64 %212, 0
  br i1 %214, label %219, label %215

215:                                              ; preds = %204
  %216 = bitcast i8** %210 to i8*
  %217 = bitcast i8** %193 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %216, i8* align 8 %217, i64 %212, i1 false) #15
  %218 = load i8**, i8*** %167, align 8
  br label %219

219:                                              ; preds = %215, %204
  %220 = phi i8** [ %193, %204 ], [ %218, %215 ]
  %221 = getelementptr inbounds i8*, i8** %210, i64 %213
  store i8** %221, i8*** %164, align 8
  %222 = getelementptr inbounds i8*, i8** %220, i64 %209
  store i8** %222, i8*** %167, align 8
  %223 = bitcast i8** %221 to i64*
  br label %331

224:                                              ; preds = %199
  %225 = sub i64 %197, %203
  %226 = ashr exact i64 %225, 2
  %227 = icmp eq i64 %225, 0
  %228 = select i1 %227, i64 1, i64 %226
  %229 = icmp ugt i64 %228, 2305843009213693951
  br i1 %229, label %230, label %231

230:                                              ; preds = %224
  call void @abort() #16
  unreachable

231:                                              ; preds = %224
  %232 = lshr i64 %228, 2
  %233 = shl i64 %228, 3
  %234 = call i8* @_Znwm(i64 %233) #14
  %235 = bitcast i8* %234 to i8**
  %236 = ptrtoint i8* %234 to i64
  %237 = getelementptr inbounds i8*, i8** %235, i64 %232
  %238 = ptrtoint i8** %237 to i64
  %239 = getelementptr inbounds i8*, i8** %235, i64 %228
  %240 = ptrtoint i8** %239 to i64
  %241 = ptrtoint i8** %193 to i64
  %242 = ptrtoint i8** %194 to i64
  %243 = sub i64 %242, %241
  %244 = ashr exact i64 %243, 3
  %245 = getelementptr inbounds i8*, i8** %237, i64 %244
  %246 = icmp eq i64 %243, 0
  br i1 %246, label %322, label %247

247:                                              ; preds = %231
  %248 = add i64 %243, -8
  %249 = lshr i64 %248, 3
  %250 = add nuw nsw i64 %249, 1
  %251 = and i64 %250, 7
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %268, label %253

253:                                              ; preds = %247, %253
  %254 = phi i8** [ %261, %253 ], [ %237, %247 ]
  %255 = phi i64 [ %262, %253 ], [ %238, %247 ]
  %256 = phi i8** [ %263, %253 ], [ %193, %247 ]
  %257 = phi i64 [ %264, %253 ], [ %251, %247 ]
  %258 = bitcast i8** %256 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = inttoptr i64 %255 to i64*
  store i64 %259, i64* %260, align 8
  %261 = getelementptr inbounds i8*, i8** %254, i64 1
  %262 = ptrtoint i8** %261 to i64
  %263 = getelementptr inbounds i8*, i8** %256, i64 1
  %264 = add i64 %257, -1
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %266, label %253, !llvm.loop !86

266:                                              ; preds = %253
  %267 = ptrtoint i8** %261 to i64
  br label %268

268:                                              ; preds = %247, %266
  %269 = phi i8** [ %237, %247 ], [ %261, %266 ]
  %270 = phi i64 [ %238, %247 ], [ %267, %266 ]
  %271 = phi i8** [ %193, %247 ], [ %263, %266 ]
  %272 = icmp ult i64 %248, 56
  br i1 %272, label %319, label %273

273:                                              ; preds = %268, %273
  %274 = phi i8** [ %315, %273 ], [ %269, %268 ]
  %275 = phi i64 [ %316, %273 ], [ %270, %268 ]
  %276 = phi i8** [ %317, %273 ], [ %271, %268 ]
  %277 = bitcast i8** %276 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = inttoptr i64 %275 to i64*
  store i64 %278, i64* %279, align 8
  %280 = getelementptr inbounds i8*, i8** %274, i64 1
  %281 = getelementptr inbounds i8*, i8** %276, i64 1
  %282 = bitcast i8** %281 to i64*
  %283 = load i64, i64* %282, align 8
  %284 = bitcast i8** %280 to i64*
  store i64 %283, i64* %284, align 8
  %285 = getelementptr inbounds i8*, i8** %274, i64 2
  %286 = getelementptr inbounds i8*, i8** %276, i64 2
  %287 = bitcast i8** %286 to i64*
  %288 = load i64, i64* %287, align 8
  %289 = bitcast i8** %285 to i64*
  store i64 %288, i64* %289, align 8
  %290 = getelementptr inbounds i8*, i8** %274, i64 3
  %291 = getelementptr inbounds i8*, i8** %276, i64 3
  %292 = bitcast i8** %291 to i64*
  %293 = load i64, i64* %292, align 8
  %294 = bitcast i8** %290 to i64*
  store i64 %293, i64* %294, align 8
  %295 = getelementptr inbounds i8*, i8** %274, i64 4
  %296 = getelementptr inbounds i8*, i8** %276, i64 4
  %297 = bitcast i8** %296 to i64*
  %298 = load i64, i64* %297, align 8
  %299 = bitcast i8** %295 to i64*
  store i64 %298, i64* %299, align 8
  %300 = getelementptr inbounds i8*, i8** %274, i64 5
  %301 = getelementptr inbounds i8*, i8** %276, i64 5
  %302 = bitcast i8** %301 to i64*
  %303 = load i64, i64* %302, align 8
  %304 = bitcast i8** %300 to i64*
  store i64 %303, i64* %304, align 8
  %305 = getelementptr inbounds i8*, i8** %274, i64 6
  %306 = getelementptr inbounds i8*, i8** %276, i64 6
  %307 = bitcast i8** %306 to i64*
  %308 = load i64, i64* %307, align 8
  %309 = bitcast i8** %305 to i64*
  store i64 %308, i64* %309, align 8
  %310 = getelementptr inbounds i8*, i8** %274, i64 7
  %311 = getelementptr inbounds i8*, i8** %276, i64 7
  %312 = bitcast i8** %311 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = bitcast i8** %310 to i64*
  store i64 %313, i64* %314, align 8
  %315 = getelementptr inbounds i8*, i8** %274, i64 8
  %316 = ptrtoint i8** %315 to i64
  %317 = getelementptr inbounds i8*, i8** %276, i64 8
  %318 = icmp eq i8** %245, %315
  br i1 %318, label %319, label %273

319:                                              ; preds = %273, %268
  %320 = ptrtoint i8** %245 to i64
  %321 = load i8**, i8*** %200, align 8
  br label %322

322:                                              ; preds = %319, %231
  %323 = phi i8** [ %321, %319 ], [ %201, %231 ]
  %324 = phi i64 [ %320, %319 ], [ %238, %231 ]
  store i64 %236, i64* %175, align 8
  store i64 %238, i64* %168, align 8
  store i64 %324, i64* %165, align 8
  store i64 %240, i64* %173, align 8
  %325 = icmp eq i8** %323, null
  %326 = inttoptr i64 %324 to i64*
  br i1 %325, label %331, label %327

327:                                              ; preds = %322
  %328 = bitcast i8** %323 to i8*
  call void @_ZdlPv(i8* %328) #14
  %329 = bitcast i8*** %164 to i64**
  %330 = load i64*, i64** %329, align 8
  br label %331

331:                                              ; preds = %187, %219, %322, %327
  %332 = phi i64* [ %330, %327 ], [ %326, %322 ], [ %223, %219 ], [ %198, %187 ]
  store i64 %192, i64* %332, align 8
  %333 = load i8**, i8*** %164, align 8
  %334 = getelementptr inbounds i8*, i8** %333, i64 1
  store i8** %334, i8*** %164, align 8
  br label %458

335:                                              ; preds = %162
  %336 = bitcast %"struct.std::__1::__split_buffer.1310"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %336) #15
  %337 = getelementptr inbounds %"struct.std::__1::__split_buffer.1310", %"struct.std::__1::__split_buffer.1310"* %4, i64 0, i32 1
  %338 = getelementptr inbounds %"struct.std::__1::__split_buffer.1310", %"struct.std::__1::__split_buffer.1310"* %4, i64 0, i32 2
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.1310", %"struct.std::__1::__split_buffer.1310"* %4, i64 0, i32 3, i32 0, i32 0
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.1310", %"struct.std::__1::__split_buffer.1310"* %4, i64 0, i32 3, i32 1, i32 0
  %341 = ashr exact i64 %177, 2
  %342 = icmp eq i64 %177, 0
  %343 = select i1 %342, i64 1, i64 %341
  %344 = getelementptr inbounds %"class.std::__1::deque.1069", %"class.std::__1::deque.1069"* %0, i64 0, i32 0, i32 0, i32 3
  %345 = bitcast %"struct.std::__1::__split_buffer.1310"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %345, i8 -86, i64 24, i1 false)
  store i8** null, i8*** %339, align 8
  %346 = bitcast %"class.std::__1::allocator.1075"** %340 to %"class.std::__1::__compressed_pair.1072"**
  store %"class.std::__1::__compressed_pair.1072"* %344, %"class.std::__1::__compressed_pair.1072"** %346, align 8
  %347 = icmp ugt i64 %343, 2305843009213693951
  br i1 %347, label %348, label %349

348:                                              ; preds = %335
  tail call void @abort() #16
  unreachable

349:                                              ; preds = %335
  %350 = shl i64 %343, 3
  %351 = tail call i8* @_Znwm(i64 %350) #14
  %352 = bitcast i8* %351 to i8**
  %353 = bitcast %"struct.std::__1::__split_buffer.1310"* %4 to i8**
  store i8* %351, i8** %353, align 8
  %354 = getelementptr inbounds i8*, i8** %352, i64 %171
  store i8** %354, i8*** %338, align 8
  store i8** %354, i8*** %337, align 8
  %355 = getelementptr inbounds i8*, i8** %352, i64 %343
  store i8** %355, i8*** %339, align 8
  %356 = tail call i8* @_Znwm(i64 4096) #14
  %357 = ptrtoint i8* %356 to i64
  %358 = icmp eq i64 %171, %343
  %359 = ptrtoint i8** %355 to i64
  %360 = ptrtoint i8* %351 to i64
  %361 = ptrtoint i8** %354 to i64
  br i1 %358, label %362, label %396

362:                                              ; preds = %349
  %363 = icmp ugt i8** %354, %352
  br i1 %363, label %364, label %371

364:                                              ; preds = %362
  %365 = sub i64 %361, %360
  %366 = ashr exact i64 %365, 3
  %367 = add nsw i64 %366, 1
  %368 = sdiv i64 %367, -2
  %369 = getelementptr inbounds i8*, i8** %354, i64 %368
  store i8** %369, i8*** %338, align 8
  store i8** %369, i8*** %337, align 8
  %370 = ptrtoint i8** %369 to i64
  br label %396

371:                                              ; preds = %362
  %372 = sub i64 %359, %360
  %373 = ashr exact i64 %372, 2
  %374 = icmp eq i64 %372, 0
  %375 = select i1 %374, i64 1, i64 %373
  %376 = icmp ugt i64 %375, 2305843009213693951
  br i1 %376, label %377, label %378

377:                                              ; preds = %371
  tail call void @abort() #16
  unreachable

378:                                              ; preds = %371
  %379 = bitcast %"struct.std::__1::__split_buffer.1310"* %4 to i64*
  %380 = bitcast i8*** %339 to i64*
  %381 = lshr i64 %375, 2
  %382 = shl i64 %375, 3
  %383 = tail call i8* @_Znwm(i64 %382) #14
  %384 = bitcast i8* %383 to i8**
  %385 = ptrtoint i8* %383 to i64
  %386 = getelementptr inbounds i8*, i8** %384, i64 %381
  %387 = ptrtoint i8** %386 to i64
  %388 = getelementptr inbounds i8*, i8** %384, i64 %375
  %389 = ptrtoint i8** %388 to i64
  store i64 %385, i64* %379, align 8
  %390 = bitcast i8*** %337 to i64*
  store i64 %387, i64* %390, align 8
  %391 = bitcast i8*** %338 to i64*
  store i64 %387, i64* %391, align 8
  store i64 %389, i64* %380, align 8
  tail call void @_ZdlPv(i8* nonnull %351) #14
  %392 = load i8**, i8*** %164, align 8
  %393 = load i8**, i8*** %167, align 8
  %394 = ptrtoint i8** %393 to i64
  %395 = ptrtoint i8** %392 to i64
  br label %396

396:                                              ; preds = %349, %364, %378
  %397 = phi i64 [ %389, %378 ], [ %359, %364 ], [ %359, %349 ]
  %398 = phi i64 [ %395, %378 ], [ %166, %364 ], [ %166, %349 ]
  %399 = phi i64 [ %387, %378 ], [ %370, %364 ], [ %361, %349 ]
  %400 = phi i64 [ %394, %378 ], [ %169, %364 ], [ %169, %349 ]
  %401 = phi i64 [ %385, %378 ], [ %360, %364 ], [ %360, %349 ]
  %402 = phi i8** [ %393, %378 ], [ %181, %364 ], [ %181, %349 ]
  %403 = phi i8** [ %392, %378 ], [ %180, %364 ], [ %180, %349 ]
  %404 = phi i8** [ %386, %378 ], [ %369, %364 ], [ %354, %349 ]
  %405 = bitcast i8** %404 to i64*
  store i64 %357, i64* %405, align 8
  %406 = getelementptr inbounds i8*, i8** %404, i64 1
  store i8** %406, i8*** %338, align 8
  %407 = icmp eq i8** %403, %402
  br i1 %407, label %408, label %453

408:                                              ; preds = %396
  %409 = ptrtoint i8** %406 to i64
  %410 = bitcast %"struct.std::__1::__split_buffer.1310"* %4 to i64*
  %411 = bitcast i8*** %337 to i64*
  %412 = bitcast i8*** %338 to i64*
  %413 = bitcast i8*** %339 to i64*
  br label %425

414:                                              ; preds = %453
  %415 = ptrtoint i8** %456 to i64
  %416 = bitcast %"struct.std::__1::__split_buffer.1310"* %4 to i64*
  %417 = load i64, i64* %416, align 8
  %418 = bitcast i8*** %337 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = load i64, i64* %165, align 8
  %421 = bitcast i8*** %338 to i64*
  %422 = load i64, i64* %421, align 8
  %423 = bitcast i8*** %339 to i64*
  %424 = load i64, i64* %423, align 8
  br label %425

425:                                              ; preds = %408, %414
  %426 = phi i64* [ %413, %408 ], [ %423, %414 ]
  %427 = phi i64* [ %412, %408 ], [ %421, %414 ]
  %428 = phi i64* [ %411, %408 ], [ %418, %414 ]
  %429 = phi i64* [ %410, %408 ], [ %416, %414 ]
  %430 = phi i64 [ %397, %408 ], [ %424, %414 ]
  %431 = phi i64 [ %409, %408 ], [ %422, %414 ]
  %432 = phi i64 [ %398, %408 ], [ %420, %414 ]
  %433 = phi i64 [ %399, %408 ], [ %419, %414 ]
  %434 = phi i64 [ %400, %408 ], [ %415, %414 ]
  %435 = phi i64 [ %401, %408 ], [ %417, %414 ]
  %436 = load i64, i64* %175, align 8
  store i64 %435, i64* %175, align 8
  store i64 %436, i64* %429, align 8
  store i64 %433, i64* %168, align 8
  store i64 %434, i64* %428, align 8
  store i64 %431, i64* %165, align 8
  store i64 %432, i64* %427, align 8
  %437 = load i64, i64* %173, align 8
  store i64 %430, i64* %173, align 8
  store i64 %437, i64* %426, align 8
  %438 = inttoptr i64 %434 to i8**
  %439 = inttoptr i64 %432 to i8**
  %440 = icmp eq i8** %439, %438
  br i1 %440, label %448, label %441

441:                                              ; preds = %425
  %442 = getelementptr i8*, i8** %439, i64 -1
  %443 = ptrtoint i8** %442 to i64
  %444 = sub i64 %443, %434
  %445 = lshr i64 %444, 3
  %446 = xor i64 %445, -1
  %447 = getelementptr i8*, i8** %439, i64 %446
  store i8** %447, i8*** %338, align 8
  br label %448

448:                                              ; preds = %441, %425
  %449 = icmp eq i64 %436, 0
  br i1 %449, label %452, label %450

450:                                              ; preds = %448
  %451 = inttoptr i64 %436 to i8*
  call void @_ZdlPv(i8* %451) #14
  br label %452

452:                                              ; preds = %448, %450
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %336) #15
  br label %458

453:                                              ; preds = %396, %453
  %454 = phi i8** [ %455, %453 ], [ %403, %396 ]
  %455 = getelementptr inbounds i8*, i8** %454, i64 -1
  call void @_ZNSt3__114__split_bufferIPbRNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.1310"* nonnull %4, i8** dereferenceable(8) %455)
  %456 = load i8**, i8*** %167, align 8
  %457 = icmp eq i8** %455, %456
  br i1 %457, label %414, label %453

458:                                              ; preds = %452, %331, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPbNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer.1071"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1071", %"struct.std::__1::__split_buffer.1071"* %0, i64 0, i32 2
  %4 = load i8**, i8*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1071", %"struct.std::__1::__split_buffer.1071"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i8**, i8*** %5, align 8
  %7 = icmp eq i8** %4, %6
  %8 = ptrtoint i8** %6 to i64
  %9 = bitcast i8** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.1071", %"struct.std::__1::__split_buffer.1071"* %0, i64 0, i32 1
  %12 = load i8**, i8*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.1071", %"struct.std::__1::__split_buffer.1071"* %0, i64 0, i32 0
  %14 = load i8**, i8*** %13, align 8
  %15 = icmp ugt i8** %12, %14
  %16 = ptrtoint i8** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint i8** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i8*, i8** %12, i64 %22
  %24 = ptrtoint i8** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast i8** %23 to i8*
  %30 = bitcast i8** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #15
  %31 = load i8**, i8*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi i8** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds i8*, i8** %23, i64 %26
  store i8** %34, i8*** %3, align 8
  %35 = getelementptr inbounds i8*, i8** %33, i64 %22
  store i8** %35, i8*** %11, align 8
  %36 = bitcast i8** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast i8*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.1071"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #16
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #14
  %50 = bitcast i8* %49 to i8**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds i8*, i8** %50, i64 %47
  %53 = ptrtoint i8** %52 to i64
  %54 = getelementptr inbounds i8*, i8** %50, i64 %43
  %55 = ptrtoint i8** %54 to i64
  %56 = ptrtoint i8** %12 to i64
  %57 = ptrtoint i8** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds i8*, i8** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi i8** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi i8** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast i8** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds i8*, i8** %69, i64 1
  %77 = ptrtoint i8** %76 to i64
  %78 = getelementptr inbounds i8*, i8** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !87

81:                                               ; preds = %68
  %82 = ptrtoint i8** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi i8** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi i8** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi i8** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi i8** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast i8** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds i8*, i8** %89, i64 1
  %96 = getelementptr inbounds i8*, i8** %91, i64 1
  %97 = bitcast i8** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast i8** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds i8*, i8** %89, i64 2
  %101 = getelementptr inbounds i8*, i8** %91, i64 2
  %102 = bitcast i8** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast i8** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds i8*, i8** %89, i64 3
  %106 = getelementptr inbounds i8*, i8** %91, i64 3
  %107 = bitcast i8** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i8** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds i8*, i8** %89, i64 4
  %111 = getelementptr inbounds i8*, i8** %91, i64 4
  %112 = bitcast i8** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i8** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds i8*, i8** %89, i64 5
  %116 = getelementptr inbounds i8*, i8** %91, i64 5
  %117 = bitcast i8** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i8** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds i8*, i8** %89, i64 6
  %121 = getelementptr inbounds i8*, i8** %91, i64 6
  %122 = bitcast i8** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast i8** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds i8*, i8** %89, i64 7
  %126 = getelementptr inbounds i8*, i8** %91, i64 7
  %127 = bitcast i8** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i8** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds i8*, i8** %89, i64 8
  %131 = ptrtoint i8** %130 to i64
  %132 = getelementptr inbounds i8*, i8** %91, i64 8
  %133 = icmp eq i8** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint i8** %60 to i64
  %136 = load i8**, i8*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi i8** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast i8*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast i8*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq i8** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast i8** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #14
  %146 = bitcast i8*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast i8** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load i8**, i8*** %3, align 8
  %153 = getelementptr inbounds i8*, i8** %152, i64 1
  store i8** %153, i8*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPbNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer.1071"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1071", %"struct.std::__1::__split_buffer.1071"* %0, i64 0, i32 1
  %4 = load i8**, i8*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1071", %"struct.std::__1::__split_buffer.1071"* %0, i64 0, i32 0
  %6 = load i8**, i8*** %5, align 8
  %7 = icmp eq i8** %4, %6
  %8 = ptrtoint i8** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1071", %"struct.std::__1::__split_buffer.1071"* %0, i64 0, i32 2
  %11 = load i8**, i8*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1071", %"struct.std::__1::__split_buffer.1071"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i8**, i8*** %12, align 8
  %14 = icmp ult i8** %11, %13
  %15 = bitcast i8*** %12 to i64*
  %16 = ptrtoint i8** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i8** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i8*, i8** %11, i64 %22
  %24 = ptrtoint i8** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i8*, i8** %23, i64 %29
  %31 = bitcast i8** %30 to i8*
  %32 = bitcast i8** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #15
  %33 = load i8**, i8*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i8** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i8** [ %30, %27 ], [ %23, %17 ]
  store i8** %36, i8*** %3, align 8
  %37 = getelementptr inbounds i8*, i8** %35, i64 %22
  store i8** %37, i8*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1071"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #16
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #14
  %51 = bitcast i8* %50 to i8**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i8*, i8** %51, i64 %48
  %54 = ptrtoint i8** %53 to i64
  %55 = getelementptr inbounds i8*, i8** %51, i64 %43
  %56 = ptrtoint i8** %55 to i64
  %57 = ptrtoint i8** %4 to i64
  %58 = ptrtoint i8** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i8*, i8** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i8** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i8** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i8** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i8*, i8** %70, i64 1
  %78 = ptrtoint i8** %77 to i64
  %79 = getelementptr inbounds i8*, i8** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !88

82:                                               ; preds = %69
  %83 = ptrtoint i8** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i8** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i8** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i8** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i8** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i8** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i8*, i8** %90, i64 1
  %97 = getelementptr inbounds i8*, i8** %92, i64 1
  %98 = bitcast i8** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i8** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i8*, i8** %90, i64 2
  %102 = getelementptr inbounds i8*, i8** %92, i64 2
  %103 = bitcast i8** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i8** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i8*, i8** %90, i64 3
  %107 = getelementptr inbounds i8*, i8** %92, i64 3
  %108 = bitcast i8** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i8** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i8*, i8** %90, i64 4
  %112 = getelementptr inbounds i8*, i8** %92, i64 4
  %113 = bitcast i8** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i8** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i8*, i8** %90, i64 5
  %117 = getelementptr inbounds i8*, i8** %92, i64 5
  %118 = bitcast i8** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i8** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i8*, i8** %90, i64 6
  %122 = getelementptr inbounds i8*, i8** %92, i64 6
  %123 = bitcast i8** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i8** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i8*, i8** %90, i64 7
  %127 = getelementptr inbounds i8*, i8** %92, i64 7
  %128 = bitcast i8** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i8** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i8*, i8** %90, i64 8
  %132 = ptrtoint i8** %131 to i64
  %133 = getelementptr inbounds i8*, i8** %92, i64 8
  %134 = icmp eq i8** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i8** %61 to i64
  %137 = load i8**, i8*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i8** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i8*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i8*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i8** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i8** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #14
  %146 = load i8**, i8*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i8** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i8*, i8** %148, i64 -1
  %150 = bitcast i8** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i8**, i8*** %3, align 8
  %154 = getelementptr inbounds i8*, i8** %153, i64 -1
  store i8** %154, i8*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPbRNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.1310"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1310", %"struct.std::__1::__split_buffer.1310"* %0, i64 0, i32 1
  %4 = load i8**, i8*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1310", %"struct.std::__1::__split_buffer.1310"* %0, i64 0, i32 0
  %6 = load i8**, i8*** %5, align 8
  %7 = icmp eq i8** %4, %6
  %8 = ptrtoint i8** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1310", %"struct.std::__1::__split_buffer.1310"* %0, i64 0, i32 2
  %11 = load i8**, i8*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1310", %"struct.std::__1::__split_buffer.1310"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i8**, i8*** %12, align 8
  %14 = icmp ult i8** %11, %13
  %15 = bitcast i8*** %12 to i64*
  %16 = ptrtoint i8** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i8** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i8*, i8** %11, i64 %22
  %24 = ptrtoint i8** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i8*, i8** %23, i64 %29
  %31 = bitcast i8** %30 to i8*
  %32 = bitcast i8** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #15
  %33 = load i8**, i8*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i8** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i8** [ %30, %27 ], [ %23, %17 ]
  store i8** %36, i8*** %3, align 8
  %37 = getelementptr inbounds i8*, i8** %35, i64 %22
  store i8** %37, i8*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1310"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #16
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #14
  %51 = bitcast i8* %50 to i8**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i8*, i8** %51, i64 %48
  %54 = ptrtoint i8** %53 to i64
  %55 = getelementptr inbounds i8*, i8** %51, i64 %43
  %56 = ptrtoint i8** %55 to i64
  %57 = ptrtoint i8** %4 to i64
  %58 = ptrtoint i8** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i8*, i8** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i8** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i8** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i8** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i8*, i8** %70, i64 1
  %78 = ptrtoint i8** %77 to i64
  %79 = getelementptr inbounds i8*, i8** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !89

82:                                               ; preds = %69
  %83 = ptrtoint i8** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i8** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i8** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i8** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i8** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i8** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i8*, i8** %90, i64 1
  %97 = getelementptr inbounds i8*, i8** %92, i64 1
  %98 = bitcast i8** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i8** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i8*, i8** %90, i64 2
  %102 = getelementptr inbounds i8*, i8** %92, i64 2
  %103 = bitcast i8** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i8** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i8*, i8** %90, i64 3
  %107 = getelementptr inbounds i8*, i8** %92, i64 3
  %108 = bitcast i8** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i8** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i8*, i8** %90, i64 4
  %112 = getelementptr inbounds i8*, i8** %92, i64 4
  %113 = bitcast i8** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i8** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i8*, i8** %90, i64 5
  %117 = getelementptr inbounds i8*, i8** %92, i64 5
  %118 = bitcast i8** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i8** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i8*, i8** %90, i64 6
  %122 = getelementptr inbounds i8*, i8** %92, i64 6
  %123 = bitcast i8** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i8** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i8*, i8** %90, i64 7
  %127 = getelementptr inbounds i8*, i8** %92, i64 7
  %128 = bitcast i8** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i8** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i8*, i8** %90, i64 8
  %132 = ptrtoint i8** %131 to i64
  %133 = getelementptr inbounds i8*, i8** %92, i64 8
  %134 = icmp eq i8** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i8** %61 to i64
  %137 = load i8**, i8*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i8** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i8*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i8*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i8** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i8** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #14
  %146 = load i8**, i8*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i8** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i8*, i8** %148, i64 -1
  %150 = bitcast i8** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i8**, i8*** %3, align 8
  %154 = getelementptr inbounds i8*, i8** %153, i64 -1
  store i8** %154, i8*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv(%"class.std::__1::deque.1082"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.1319", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque.1082", %"class.std::__1::deque.1082"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 1023
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -1024
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque.1082", %"class.std::__1::deque.1082"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32**, i32*** %10, align 8
  %12 = bitcast i32** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i32*, i32** %11, i64 1
  store i32** %14, i32*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque.1082", %"class.std::__1::deque.1082"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load i32**, i32*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque.1082", %"class.std::__1::deque.1082"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load i32**, i32*** %17, align 8
  %19 = icmp eq i32** %16, %18
  %20 = ptrtoint i32** %18 to i64
  %21 = bitcast i32** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque.1082", %"class.std::__1::deque.1082"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32**, i32*** %23, align 8
  %25 = icmp ugt i32** %14, %24
  %26 = ptrtoint i32** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint i32** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds i32*, i32** %14, i64 %32
  %34 = ptrtoint i32** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast i32** %33 to i8*
  %40 = bitcast i32** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #15
  %41 = load i32**, i32*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi i32** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds i32*, i32** %33, i64 %36
  store i32** %44, i32*** %15, align 8
  %45 = getelementptr inbounds i32*, i32** %43, i64 %32
  store i32** %45, i32*** %10, align 8
  %46 = bitcast i32** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast i32*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque.1082"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #16
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #14
  %60 = bitcast i8* %59 to i32**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds i32*, i32** %60, i64 %57
  %63 = ptrtoint i32** %62 to i64
  %64 = getelementptr inbounds i32*, i32** %60, i64 %53
  %65 = ptrtoint i32** %64 to i64
  %66 = ptrtoint i32** %14 to i64
  %67 = ptrtoint i32** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds i32*, i32** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi i32** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi i32** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast i32** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds i32*, i32** %79, i64 1
  %87 = ptrtoint i32** %86 to i64
  %88 = getelementptr inbounds i32*, i32** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !90

91:                                               ; preds = %78
  %92 = ptrtoint i32** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi i32** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi i32** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi i32** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi i32** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast i32** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds i32*, i32** %99, i64 1
  %106 = getelementptr inbounds i32*, i32** %101, i64 1
  %107 = bitcast i32** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i32** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds i32*, i32** %99, i64 2
  %111 = getelementptr inbounds i32*, i32** %101, i64 2
  %112 = bitcast i32** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i32** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds i32*, i32** %99, i64 3
  %116 = getelementptr inbounds i32*, i32** %101, i64 3
  %117 = bitcast i32** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i32** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds i32*, i32** %99, i64 4
  %121 = getelementptr inbounds i32*, i32** %101, i64 4
  %122 = bitcast i32** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast i32** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds i32*, i32** %99, i64 5
  %126 = getelementptr inbounds i32*, i32** %101, i64 5
  %127 = bitcast i32** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i32** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds i32*, i32** %99, i64 6
  %131 = getelementptr inbounds i32*, i32** %101, i64 6
  %132 = bitcast i32** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast i32** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds i32*, i32** %99, i64 7
  %136 = getelementptr inbounds i32*, i32** %101, i64 7
  %137 = bitcast i32** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i32** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds i32*, i32** %99, i64 8
  %141 = ptrtoint i32** %140 to i64
  %142 = getelementptr inbounds i32*, i32** %101, i64 8
  %143 = icmp eq i32** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint i32** %70 to i64
  %146 = load i32**, i32*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi i32** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast i32*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast i32*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq i32** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast i32** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #14
  %156 = bitcast i32*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load i32**, i32*** %15, align 8
  %161 = getelementptr inbounds i32*, i32** %160, i64 1
  store i32** %161, i32*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque.1082", %"class.std::__1::deque.1082"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque.1082", %"class.std::__1::deque.1082"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast i32*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque.1082", %"class.std::__1::deque.1082"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast i32*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque.1082", %"class.std::__1::deque.1082"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast i32*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque.1082"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to i32**
  %181 = inttoptr i64 %169 to i32**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast i32** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #15
  %186 = tail call i8* @_Znwm(i64 4096) #14
  %187 = bitcast i32** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer.1084"* %163, i32** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #15
  br label %460

188:                                              ; preds = %182
  %189 = bitcast i32** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #15
  %190 = tail call i8* @_Znwm(i64 4096) #14
  %191 = bitcast i32** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer.1084"* %163, i32** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #15
  %192 = load i32**, i32*** %167, align 8
  %193 = bitcast i32** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds i32*, i32** %192, i64 1
  store i32** %195, i32*** %167, align 8
  %196 = load i32**, i32*** %164, align 8
  %197 = load i32**, i32*** %172, align 8
  %198 = icmp eq i32** %196, %197
  %199 = ptrtoint i32** %197 to i64
  %200 = bitcast i32** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque.1082", %"class.std::__1::deque.1082"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load i32**, i32*** %202, align 8
  %204 = icmp ugt i32** %195, %203
  %205 = ptrtoint i32** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint i32** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds i32*, i32** %195, i64 %211
  %213 = ptrtoint i32** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast i32** %212 to i8*
  %219 = bitcast i32** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #15
  %220 = load i32**, i32*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi i32** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds i32*, i32** %212, i64 %215
  store i32** %223, i32*** %164, align 8
  %224 = getelementptr inbounds i32*, i32** %222, i64 %211
  store i32** %224, i32*** %167, align 8
  %225 = bitcast i32** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #16
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #14
  %237 = bitcast i8* %236 to i32**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds i32*, i32** %237, i64 %234
  %240 = ptrtoint i32** %239 to i64
  %241 = getelementptr inbounds i32*, i32** %237, i64 %230
  %242 = ptrtoint i32** %241 to i64
  %243 = ptrtoint i32** %195 to i64
  %244 = ptrtoint i32** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds i32*, i32** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi i32** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi i32** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast i32** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds i32*, i32** %256, i64 1
  %264 = ptrtoint i32** %263 to i64
  %265 = getelementptr inbounds i32*, i32** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !91

268:                                              ; preds = %255
  %269 = ptrtoint i32** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi i32** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi i32** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi i32** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi i32** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast i32** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds i32*, i32** %276, i64 1
  %283 = getelementptr inbounds i32*, i32** %278, i64 1
  %284 = bitcast i32** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast i32** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds i32*, i32** %276, i64 2
  %288 = getelementptr inbounds i32*, i32** %278, i64 2
  %289 = bitcast i32** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast i32** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds i32*, i32** %276, i64 3
  %293 = getelementptr inbounds i32*, i32** %278, i64 3
  %294 = bitcast i32** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast i32** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds i32*, i32** %276, i64 4
  %298 = getelementptr inbounds i32*, i32** %278, i64 4
  %299 = bitcast i32** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast i32** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds i32*, i32** %276, i64 5
  %303 = getelementptr inbounds i32*, i32** %278, i64 5
  %304 = bitcast i32** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast i32** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds i32*, i32** %276, i64 6
  %308 = getelementptr inbounds i32*, i32** %278, i64 6
  %309 = bitcast i32** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast i32** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds i32*, i32** %276, i64 7
  %313 = getelementptr inbounds i32*, i32** %278, i64 7
  %314 = bitcast i32** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast i32** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds i32*, i32** %276, i64 8
  %318 = ptrtoint i32** %317 to i64
  %319 = getelementptr inbounds i32*, i32** %278, i64 8
  %320 = icmp eq i32** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint i32** %247 to i64
  %323 = load i32**, i32*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi i32** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq i32** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast i32** %325 to i8*
  call void @_ZdlPv(i8* %330) #14
  %331 = bitcast i32*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load i32**, i32*** %164, align 8
  %336 = getelementptr inbounds i32*, i32** %335, i64 1
  store i32** %336, i32*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.1319"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #15
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.1319", %"struct.std::__1::__split_buffer.1319"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.1319", %"struct.std::__1::__split_buffer.1319"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.1319", %"struct.std::__1::__split_buffer.1319"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.1319", %"struct.std::__1::__split_buffer.1319"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque.1082", %"class.std::__1::deque.1082"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.1319"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store i32** null, i32*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.1088"** %342 to %"class.std::__1::__compressed_pair.1085"**
  store %"class.std::__1::__compressed_pair.1085"* %346, %"class.std::__1::__compressed_pair.1085"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #16
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #14
  %354 = bitcast i8* %353 to i32**
  %355 = bitcast %"struct.std::__1::__split_buffer.1319"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds i32*, i32** %354, i64 %171
  store i32** %356, i32*** %340, align 8
  store i32** %356, i32*** %339, align 8
  %357 = getelementptr inbounds i32*, i32** %354, i64 %345
  store i32** %357, i32*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #14
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint i32** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint i32** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt i32** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds i32*, i32** %356, i64 %370
  store i32** %371, i32*** %340, align 8
  store i32** %371, i32*** %339, align 8
  %372 = ptrtoint i32** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #16
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.1319"* %4 to i64*
  %382 = bitcast i32*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #14
  %386 = bitcast i8* %385 to i32**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds i32*, i32** %386, i64 %383
  %389 = ptrtoint i32** %388 to i64
  %390 = getelementptr inbounds i32*, i32** %386, i64 %377
  %391 = ptrtoint i32** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast i32*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast i32*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #14
  %394 = load i32**, i32*** %164, align 8
  %395 = load i32**, i32*** %167, align 8
  %396 = ptrtoint i32** %395 to i64
  %397 = ptrtoint i32** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi i32** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi i32** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi i32** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast i32** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds i32*, i32** %406, i64 1
  store i32** %408, i32*** %340, align 8
  %409 = icmp eq i32** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint i32** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.1319"* %4 to i64*
  %413 = bitcast i32*** %339 to i64*
  %414 = bitcast i32*** %340 to i64*
  %415 = bitcast i32*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint i32** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.1319"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast i32*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast i32*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast i32*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to i32**
  %441 = inttoptr i64 %434 to i32**
  %442 = icmp eq i32** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr i32*, i32** %441, i64 -1
  %445 = ptrtoint i32** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr i32*, i32** %441, i64 %448
  store i32** %449, i32*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #14
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #15
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi i32** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds i32*, i32** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.1319"* nonnull %4, i32** dereferenceable(8) %457)
  %458 = load i32**, i32*** %167, align 8
  %459 = icmp eq i32** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer.1084"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1084", %"struct.std::__1::__split_buffer.1084"* %0, i64 0, i32 2
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1084", %"struct.std::__1::__split_buffer.1084"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  %9 = bitcast i32** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.1084", %"struct.std::__1::__split_buffer.1084"* %0, i64 0, i32 1
  %12 = load i32**, i32*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.1084", %"struct.std::__1::__split_buffer.1084"* %0, i64 0, i32 0
  %14 = load i32**, i32*** %13, align 8
  %15 = icmp ugt i32** %12, %14
  %16 = ptrtoint i32** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint i32** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i32*, i32** %12, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast i32** %23 to i8*
  %30 = bitcast i32** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #15
  %31 = load i32**, i32*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi i32** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds i32*, i32** %23, i64 %26
  store i32** %34, i32*** %3, align 8
  %35 = getelementptr inbounds i32*, i32** %33, i64 %22
  store i32** %35, i32*** %11, align 8
  %36 = bitcast i32** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast i32*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.1084"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #16
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #14
  %50 = bitcast i8* %49 to i32**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds i32*, i32** %50, i64 %47
  %53 = ptrtoint i32** %52 to i64
  %54 = getelementptr inbounds i32*, i32** %50, i64 %43
  %55 = ptrtoint i32** %54 to i64
  %56 = ptrtoint i32** %12 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds i32*, i32** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi i32** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi i32** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast i32** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds i32*, i32** %69, i64 1
  %77 = ptrtoint i32** %76 to i64
  %78 = getelementptr inbounds i32*, i32** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !92

81:                                               ; preds = %68
  %82 = ptrtoint i32** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi i32** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi i32** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi i32** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi i32** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast i32** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds i32*, i32** %89, i64 1
  %96 = getelementptr inbounds i32*, i32** %91, i64 1
  %97 = bitcast i32** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast i32** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds i32*, i32** %89, i64 2
  %101 = getelementptr inbounds i32*, i32** %91, i64 2
  %102 = bitcast i32** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast i32** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds i32*, i32** %89, i64 3
  %106 = getelementptr inbounds i32*, i32** %91, i64 3
  %107 = bitcast i32** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i32** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds i32*, i32** %89, i64 4
  %111 = getelementptr inbounds i32*, i32** %91, i64 4
  %112 = bitcast i32** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i32** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds i32*, i32** %89, i64 5
  %116 = getelementptr inbounds i32*, i32** %91, i64 5
  %117 = bitcast i32** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i32** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds i32*, i32** %89, i64 6
  %121 = getelementptr inbounds i32*, i32** %91, i64 6
  %122 = bitcast i32** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast i32** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds i32*, i32** %89, i64 7
  %126 = getelementptr inbounds i32*, i32** %91, i64 7
  %127 = bitcast i32** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i32** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds i32*, i32** %89, i64 8
  %131 = ptrtoint i32** %130 to i64
  %132 = getelementptr inbounds i32*, i32** %91, i64 8
  %133 = icmp eq i32** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint i32** %60 to i64
  %136 = load i32**, i32*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi i32** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast i32*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq i32** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast i32** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #14
  %146 = bitcast i32*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load i32**, i32*** %3, align 8
  %153 = getelementptr inbounds i32*, i32** %152, i64 1
  store i32** %153, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer.1084"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1084", %"struct.std::__1::__split_buffer.1084"* %0, i64 0, i32 1
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1084", %"struct.std::__1::__split_buffer.1084"* %0, i64 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1084", %"struct.std::__1::__split_buffer.1084"* %0, i64 0, i32 2
  %11 = load i32**, i32*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1084", %"struct.std::__1::__split_buffer.1084"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp ult i32** %11, %13
  %15 = bitcast i32*** %12 to i64*
  %16 = ptrtoint i32** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i32** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i32*, i32** %11, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i32*, i32** %23, i64 %29
  %31 = bitcast i32** %30 to i8*
  %32 = bitcast i32** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #15
  %33 = load i32**, i32*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i32** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i32** [ %30, %27 ], [ %23, %17 ]
  store i32** %36, i32*** %3, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %22
  store i32** %37, i32*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1084"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #16
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #14
  %51 = bitcast i8* %50 to i32**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i32*, i32** %51, i64 %48
  %54 = ptrtoint i32** %53 to i64
  %55 = getelementptr inbounds i32*, i32** %51, i64 %43
  %56 = ptrtoint i32** %55 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = ptrtoint i32** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i32*, i32** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i32** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i32** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i32** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i32*, i32** %70, i64 1
  %78 = ptrtoint i32** %77 to i64
  %79 = getelementptr inbounds i32*, i32** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !93

82:                                               ; preds = %69
  %83 = ptrtoint i32** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i32** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i32** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i32** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i32** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i32** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i32*, i32** %90, i64 1
  %97 = getelementptr inbounds i32*, i32** %92, i64 1
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i32** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i32*, i32** %90, i64 2
  %102 = getelementptr inbounds i32*, i32** %92, i64 2
  %103 = bitcast i32** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i32** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i32*, i32** %90, i64 3
  %107 = getelementptr inbounds i32*, i32** %92, i64 3
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i32** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i32*, i32** %90, i64 4
  %112 = getelementptr inbounds i32*, i32** %92, i64 4
  %113 = bitcast i32** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i32** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i32*, i32** %90, i64 5
  %117 = getelementptr inbounds i32*, i32** %92, i64 5
  %118 = bitcast i32** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i32** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i32*, i32** %90, i64 6
  %122 = getelementptr inbounds i32*, i32** %92, i64 6
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i32** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i32*, i32** %90, i64 7
  %127 = getelementptr inbounds i32*, i32** %92, i64 7
  %128 = bitcast i32** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i32** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i32*, i32** %90, i64 8
  %132 = ptrtoint i32** %131 to i64
  %133 = getelementptr inbounds i32*, i32** %92, i64 8
  %134 = icmp eq i32** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i32** %61 to i64
  %137 = load i32**, i32*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i32** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i32*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i32** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i32** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #14
  %146 = load i32**, i32*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i32** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i32*, i32** %148, i64 -1
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i32** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i32**, i32*** %3, align 8
  %154 = getelementptr inbounds i32*, i32** %153, i64 -1
  store i32** %154, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.1319"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1319", %"struct.std::__1::__split_buffer.1319"* %0, i64 0, i32 1
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1319", %"struct.std::__1::__split_buffer.1319"* %0, i64 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1319", %"struct.std::__1::__split_buffer.1319"* %0, i64 0, i32 2
  %11 = load i32**, i32*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1319", %"struct.std::__1::__split_buffer.1319"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp ult i32** %11, %13
  %15 = bitcast i32*** %12 to i64*
  %16 = ptrtoint i32** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i32** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i32*, i32** %11, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i32*, i32** %23, i64 %29
  %31 = bitcast i32** %30 to i8*
  %32 = bitcast i32** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #15
  %33 = load i32**, i32*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i32** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i32** [ %30, %27 ], [ %23, %17 ]
  store i32** %36, i32*** %3, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %22
  store i32** %37, i32*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1319"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #16
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #14
  %51 = bitcast i8* %50 to i32**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i32*, i32** %51, i64 %48
  %54 = ptrtoint i32** %53 to i64
  %55 = getelementptr inbounds i32*, i32** %51, i64 %43
  %56 = ptrtoint i32** %55 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = ptrtoint i32** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i32*, i32** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i32** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i32** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i32** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i32*, i32** %70, i64 1
  %78 = ptrtoint i32** %77 to i64
  %79 = getelementptr inbounds i32*, i32** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !94

82:                                               ; preds = %69
  %83 = ptrtoint i32** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i32** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i32** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i32** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i32** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i32** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i32*, i32** %90, i64 1
  %97 = getelementptr inbounds i32*, i32** %92, i64 1
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i32** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i32*, i32** %90, i64 2
  %102 = getelementptr inbounds i32*, i32** %92, i64 2
  %103 = bitcast i32** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i32** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i32*, i32** %90, i64 3
  %107 = getelementptr inbounds i32*, i32** %92, i64 3
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i32** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i32*, i32** %90, i64 4
  %112 = getelementptr inbounds i32*, i32** %92, i64 4
  %113 = bitcast i32** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i32** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i32*, i32** %90, i64 5
  %117 = getelementptr inbounds i32*, i32** %92, i64 5
  %118 = bitcast i32** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i32** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i32*, i32** %90, i64 6
  %122 = getelementptr inbounds i32*, i32** %92, i64 6
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i32** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i32*, i32** %90, i64 7
  %127 = getelementptr inbounds i32*, i32** %92, i64 7
  %128 = bitcast i32** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i32** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i32*, i32** %90, i64 8
  %132 = ptrtoint i32** %131 to i64
  %133 = getelementptr inbounds i32*, i32** %92, i64 8
  %134 = icmp eq i32** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i32** %61 to i64
  %137 = load i32**, i32*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i32** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i32*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i32** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i32** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #14
  %146 = load i32**, i32*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i32** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i32*, i32** %148, i64 -1
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i32** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i32**, i32*** %3, align 8
  %154 = getelementptr inbounds i32*, i32** %153, i64 -1
  store i32** %154, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass13AggressiveDCEEPNS8_8FunctionEE3$_5S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %4 = bitcast [8 x i8]* %3 to %"class.spvtools::opt::AggressiveDCEPass"**
  %5 = load %"class.spvtools::opt::AggressiveDCEPass"*, %"class.spvtools::opt::AggressiveDCEPass"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %5, i64 0, i32 0, i32 0, i32 2
  %7 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 11
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %36

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %13, align 8
  %15 = tail call i8* @_Znwm(i64 104) #14
  %16 = bitcast i8* %15 to %"class.spvtools::opt::analysis::DefUseManager"*
  %17 = getelementptr inbounds i8, i8* %15, i64 32
  %18 = bitcast i8* %17 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %15, i64 48
  %20 = getelementptr inbounds i8, i8* %15, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #15
  %21 = bitcast i8* %20 to i8**
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds i8, i8* %15, i64 64
  %23 = getelementptr inbounds i8, i8* %15, i64 96
  %24 = bitcast i8* %23 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %24, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %16, %"class.spvtools::opt::Module"* %14) #15
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 6
  %26 = ptrtoint i8* %15 to i64
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %25, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %27, align 8
  %29 = bitcast %"class.std::__1::unique_ptr.62"* %25 to i64*
  store i64 %26, i64* %29, align 8
  %30 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %28, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %12
  %32 = bitcast %"class.std::__1::unique_ptr.62"* %25 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %32, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %28) #15
  br label %33

33:                                               ; preds = %31, %12
  %34 = load i32, i32* %8, align 8
  %35 = or i32 %34, 1
  store i32 %35, i32* %8, align 8
  br label %36

36:                                               ; preds = %33, %2
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 6, i32 0, i32 0, i32 0
  %38 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %37, align 8
  %39 = load i32, i32* %1, align 4
  %40 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %38, i32 %39) #15
  %41 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %40, i64 0, i32 2
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 248
  br i1 %43, label %44, label %51

44:                                               ; preds = %36
  %45 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::Instruction"***
  %46 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %45, align 8
  %47 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %46, align 8
  %48 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %47, i64 0, i32 2
  %49 = load i32, i32* %48, align 8
  %50 = tail call zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32 %49) #15
  br i1 %50, label %52, label %51

51:                                               ; preds = %44, %36
  tail call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %5, %"class.spvtools::opt::Instruction"* %40) #15
  br label %52

52:                                               ; preds = %44, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass13AggressiveDCEEPNS8_8FunctionEE3$_6S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::AggressiveDCEPass"**
  %5 = load %"class.spvtools::opt::AggressiveDCEPass"*, %"class.spvtools::opt::AggressiveDCEPass"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %5, i64 0, i32 0
  %7 = load i32, i32* %1, align 4
  %8 = tail call zeroext i1 @_ZN8spvtools3opt7MemPass5IsPtrEj(%"class.spvtools::opt::MemPass"* %6, i32 %7) #15
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #15
  store i32 -1431655766, i32* %3, align 4
  %11 = load i32, i32* %1, align 4
  %12 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt7MemPass6GetPtrEjPj(%"class.spvtools::opt::MemPass"* %6, i32 %11, i32* nonnull %3) #15
  %13 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %14 = bitcast [8 x i8]* %13 to %"class.spvtools::opt::Function"**
  %15 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %14, align 8
  %16 = load i32, i32* %3, align 4
  call void @_ZN8spvtools3opt17AggressiveDCEPass11ProcessLoadEPNS0_8FunctionEj(%"class.spvtools::opt::AggressiveDCEPass"* %5, %"class.spvtools::opt::Function"* %15, i32 %16) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #15
  br label %17

17:                                               ; preds = %2, %9
  ret void
}

declare zeroext i1 @_ZN8spvtools3opt7MemPass5IsPtrEj(%"class.spvtools::opt::MemPass"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_17AggressiveDCEPass13AggressiveDCEEPNS3_8FunctionEE3$_7S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1334"**
  %4 = load %"class.std::__1::__function::__default_alloc_func.1334"*, %"class.std::__1::__function::__default_alloc_func.1334"** %3, align 8
  %5 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1334", %"class.std::__1::__function::__default_alloc_func.1334"* %4, i64 0, i32 0, i32 0
  %7 = load %"class.spvtools::opt::AggressiveDCEPass"*, %"class.spvtools::opt::AggressiveDCEPass"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %7, i64 0, i32 10
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 5
  %10 = load i32, i32* %9, align 8
  %11 = lshr i32 %10, 6
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %7, i64 0, i32 10, i32 0, i32 0, i32 1
  %14 = bitcast i64** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.spvtools::utils::BitVector"* %8 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = ashr exact i64 %18, 3
  %20 = icmp ugt i64 %19, %12
  br i1 %20, label %21, label %30

21:                                               ; preds = %2
  %22 = inttoptr i64 %17 to i64*
  %23 = and i32 %10, 63
  %24 = getelementptr inbounds i64, i64* %22, i64 %12
  %25 = load i64, i64* %24, align 8
  %26 = zext i32 %23 to i64
  %27 = shl i64 1, %26
  %28 = and i64 %25, %27
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %136

30:                                               ; preds = %21, %2
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = tail call zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32 %32) #15
  br i1 %33, label %37, label %34

34:                                               ; preds = %30
  %35 = load i32, i32* %31, align 8
  %36 = icmp eq i32 %35, 255
  br i1 %36, label %37, label %47

37:                                               ; preds = %34, %30
  %38 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %7, i64 0, i32 0, i32 0, i32 2
  %39 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %38, align 8
  %40 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %39, %"class.spvtools::opt::Instruction"* %1) #15
  %41 = icmp eq %"class.spvtools::opt::BasicBlock"* %40, null
  br i1 %41, label %136, label %42

42:                                               ; preds = %37
  %43 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"* nonnull %40) #15
  %44 = icmp eq %"class.spvtools::opt::Instruction"* %43, null
  br i1 %44, label %136, label %45

45:                                               ; preds = %42
  %46 = load i32, i32* %31, align 8
  br label %47

47:                                               ; preds = %45, %34
  %48 = phi i32 [ %46, %45 ], [ %35, %34 ]
  switch i32 %48, label %63 [
    i32 248, label %136
    i32 247, label %49
    i32 246, label %49
  ]

49:                                               ; preds = %47, %47
  %50 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %51 = load i8, i8* %50, align 4, !range !2
  %52 = icmp eq i8 %51, 0
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %54 = load i8, i8* %53, align 1, !range !2
  %55 = icmp eq i8 %54, 0
  %56 = select i1 %55, i32 1, i32 2
  %57 = xor i1 %55, true
  %58 = zext i1 %57 to i32
  %59 = select i1 %52, i32 %58, i32 %56
  %60 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %59) #15
  %61 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1334", %"class.std::__1::__function::__default_alloc_func.1334"* %4, i64 0, i32 0, i32 2
  %62 = load i32*, i32** %61, align 8
  store i32 %60, i32* %62, align 4
  br label %63

63:                                               ; preds = %49, %47
  %64 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %7, i64 0, i32 12
  %65 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %7, i64 0, i32 12, i32 0, i32 1
  %66 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %65, align 8
  %67 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %7, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %68 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %67, align 8
  %69 = icmp eq %"class.spvtools::opt::Instruction"** %66, %68
  %70 = ptrtoint %"class.spvtools::opt::Instruction"** %68 to i64
  br i1 %69, label %76, label %71

71:                                               ; preds = %63
  %72 = bitcast %"class.spvtools::opt::Instruction"** %66 to i64*
  store i64 %5, i64* %72, align 8
  %73 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, i64 1
  %74 = ptrtoint %"class.spvtools::opt::Instruction"** %73 to i64
  %75 = bitcast %"class.spvtools::opt::Instruction"*** %65 to i64*
  store i64 %74, i64* %75, align 8
  br label %133

76:                                               ; preds = %63
  %77 = ptrtoint %"class.spvtools::opt::Instruction"** %66 to i64
  %78 = bitcast %"class.spvtools::opt::Instruction"*** %65 to i64*
  %79 = bitcast %"class.std::__1::vector.1017"* %64 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = sub i64 %77, %80
  %82 = ashr exact i64 %81, 3
  %83 = add nsw i64 %82, 1
  %84 = icmp ugt i64 %83, 2305843009213693951
  br i1 %84, label %85, label %87

85:                                               ; preds = %76
  %86 = bitcast %"class.std::__1::vector.1017"* %64 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %86) #16
  unreachable

87:                                               ; preds = %76
  %88 = bitcast %"class.spvtools::opt::Instruction"*** %67 to i64*
  %89 = sub i64 %70, %80
  %90 = ashr exact i64 %89, 3
  %91 = icmp ult i64 %90, 1152921504606846975
  br i1 %91, label %92, label %100

92:                                               ; preds = %87
  %93 = ashr exact i64 %89, 2
  %94 = icmp ult i64 %93, %83
  %95 = select i1 %94, i64 %83, i64 %93
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %105, label %97

97:                                               ; preds = %92
  %98 = icmp ugt i64 %95, 2305843009213693951
  br i1 %98, label %99, label %100

99:                                               ; preds = %97
  tail call void @abort() #16
  unreachable

100:                                              ; preds = %97, %87
  %101 = phi i64 [ %95, %97 ], [ 2305843009213693951, %87 ]
  %102 = shl i64 %101, 3
  %103 = tail call i8* @_Znwm(i64 %102) #14
  %104 = bitcast i8* %103 to %"class.spvtools::opt::Instruction"**
  br label %105

105:                                              ; preds = %100, %92
  %106 = phi i64 [ %101, %100 ], [ 0, %92 ]
  %107 = phi %"class.spvtools::opt::Instruction"** [ %104, %100 ], [ null, %92 ]
  %108 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %107, i64 %82
  %109 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %107, i64 %106
  %110 = ptrtoint %"class.spvtools::opt::Instruction"** %109 to i64
  %111 = bitcast %"class.spvtools::opt::Instruction"** %108 to i64*
  store i64 %5, i64* %111, align 8
  %112 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %108, i64 1
  %113 = ptrtoint %"class.spvtools::opt::Instruction"** %112 to i64
  %114 = getelementptr inbounds %"class.std::__1::vector.1017", %"class.std::__1::vector.1017"* %64, i64 0, i32 0, i32 0
  %115 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %114, align 8
  %116 = load i64, i64* %78, align 8
  %117 = ptrtoint %"class.spvtools::opt::Instruction"** %115 to i64
  %118 = sub i64 %116, %117
  %119 = ashr exact i64 %118, 3
  %120 = sub nsw i64 0, %119
  %121 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %108, i64 %120
  %122 = ptrtoint %"class.spvtools::opt::Instruction"** %121 to i64
  %123 = icmp sgt i64 %118, 0
  br i1 %123, label %124, label %128

124:                                              ; preds = %105
  %125 = bitcast %"class.spvtools::opt::Instruction"** %121 to i8*
  %126 = bitcast %"class.spvtools::opt::Instruction"** %115 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 %118, i1 false) #15
  %127 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %114, align 8
  br label %128

128:                                              ; preds = %124, %105
  %129 = phi %"class.spvtools::opt::Instruction"** [ %115, %105 ], [ %127, %124 ]
  store i64 %122, i64* %79, align 8
  store i64 %113, i64* %78, align 8
  store i64 %110, i64* %88, align 8
  %130 = icmp eq %"class.spvtools::opt::Instruction"** %129, null
  br i1 %130, label %133, label %131

131:                                              ; preds = %128
  %132 = bitcast %"class.spvtools::opt::Instruction"** %129 to i8*
  tail call void @_ZdlPv(i8* %132) #14
  br label %133

133:                                              ; preds = %131, %128, %71
  %134 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1334", %"class.std::__1::__function::__default_alloc_func.1334"* %4, i64 0, i32 0, i32 1
  %135 = load i8*, i8** %134, align 8
  store i8 1, i8* %135, align 1
  br label %136

136:                                              ; preds = %21, %37, %42, %47, %133
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass13AggressiveDCEEPNS5_8FunctionEE3$_7FvPNS5_11InstructionEEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #14, !noalias !95
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #15
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass13AggressiveDCEEPNS5_8FunctionEE3$_7FvPNS5_11InstructionEEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass37InitializeModuleScopeLiveInstructionsEvE3$_8S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::AggressiveDCEPass"**
  %4 = load %"class.spvtools::opt::AggressiveDCEPass"*, %"class.spvtools::opt::AggressiveDCEPass"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::AggressiveDCEPass", %"class.spvtools::opt::AggressiveDCEPass"* %4, i64 0, i32 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 11
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %35

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %12, align 8
  %14 = tail call i8* @_Znwm(i64 104) #14
  %15 = bitcast i8* %14 to %"class.spvtools::opt::analysis::DefUseManager"*
  %16 = getelementptr inbounds i8, i8* %14, i64 32
  %17 = bitcast i8* %16 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = getelementptr inbounds i8, i8* %14, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #15
  %20 = bitcast i8* %19 to i8**
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds i8, i8* %14, i64 64
  %22 = getelementptr inbounds i8, i8* %14, i64 96
  %23 = bitcast i8* %22 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %23, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %15, %"class.spvtools::opt::Module"* %13) #15
  %24 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 6
  %25 = ptrtoint i8* %14 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %24, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %26, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.62"* %24 to i64*
  store i64 %25, i64* %28, align 8
  %29 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %27, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %11
  %31 = bitcast %"class.std::__1::unique_ptr.62"* %24 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %31, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %27) #15
  br label %32

32:                                               ; preds = %30, %11
  %33 = load i32, i32* %7, align 8
  %34 = or i32 %33, 1
  store i32 %34, i32* %7, align 8
  br label %35

35:                                               ; preds = %32, %2
  %36 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 6, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %36, align 8
  %38 = load i32, i32* %1, align 4
  %39 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %37, i32 %38) #15
  %40 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %39, i64 0, i32 2
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 59
  br i1 %42, label %44, label %43

43:                                               ; preds = %35
  tail call void @_ZN8spvtools3opt17AggressiveDCEPass13AddToWorklistEPNS0_11InstructionE(%"class.spvtools::opt::AggressiveDCEPass"* %4, %"class.spvtools::opt::Instruction"* %39) #15
  br label %44

44:                                               ; preds = %35, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt8FunctionEEE11__call_implINS0_20__default_alloc_funcIZNS3_17AggressiveDCEPass11ProcessImplEvE3$_9S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Function"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::AggressiveDCEPass"**
  %4 = load %"class.spvtools::opt::AggressiveDCEPass"*, %"class.spvtools::opt::AggressiveDCEPass"** %3, align 8
  %5 = tail call zeroext i1 @_ZN8spvtools3opt17AggressiveDCEPass13AggressiveDCEEPNS0_8FunctionE(%"class.spvtools::opt::AggressiveDCEPass"* %4, %"class.spvtools::opt::Function"* %1) #15
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt8FunctionEEE11__call_implINS0_20__default_alloc_funcIZNS3_17AggressiveDCEPass11ProcessImplEvE4$_10S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Function"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::MemPass"**
  %4 = load %"class.spvtools::opt::MemPass"*, %"class.spvtools::opt::MemPass"** %3, align 8
  %5 = tail call zeroext i1 @_ZN8spvtools3opt7MemPass10CFGCleanupEPNS0_8FunctionE(%"class.spvtools::opt::MemPass"* %4, %"class.spvtools::opt::Function"* %1) #15
  ret i1 %5
}

declare zeroext i1 @_ZN8spvtools3opt7MemPass10CFGCleanupEPNS0_8FunctionE(%"class.spvtools::opt::MemPass"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt8FunctionEEE11__call_implINS0_20__default_alloc_funcIZNS3_17AggressiveDCEPass22EliminateDeadFunctionsEvE4$_11S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Function"*) #0 align 2 {
  %3 = alloca %"class.spvtools::opt::Function"*, align 8
  %4 = ptrtoint %"class.spvtools::opt::Function"* %1 to i64
  %5 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::unordered_set.1110"**
  %6 = load %"class.std::__1::unordered_set.1110"*, %"class.std::__1::unordered_set.1110"** %5, align 8
  %7 = bitcast %"class.spvtools::opt::Function"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  %8 = bitcast %"class.spvtools::opt::Function"** %3 to i64*
  store i64 %4, i64* %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::unordered_set.1110", %"class.std::__1::unordered_set.1110"* %6, i64 0, i32 0
  %10 = call { %"struct.std::__1::__hash_node_base.1115"*, i8 } @_ZNSt3__112__hash_tableIPKN8spvtools3opt8FunctionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS5_JS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1111"* %9, %"class.spvtools::opt::Function"** nonnull dereferenceable(8) %3, %"class.spvtools::opt::Function"** nonnull dereferenceable(8) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1115"*, i8 } @_ZNSt3__112__hash_tableIPKN8spvtools3opt8FunctionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS5_JS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1111"*, %"class.spvtools::opt::Function"** dereferenceable(8), %"class.spvtools::opt::Function"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %1, align 8
  %5 = ptrtoint %"class.spvtools::opt::Function"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.1111", %"class.std::__1::__hash_table.1111"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #15, !range !11
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.1111", %"class.std::__1::__hash_table.1111"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.1115"**, %"struct.std::__1::__hash_node_base.1115"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115"*, %"struct.std::__1::__hash_node_base.1115"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.1115"*, %"struct.std::__1::__hash_node_base.1115"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.1115"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.1115"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115", %"struct.std::__1::__hash_node_base.1115"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.1115"*, %"struct.std::__1::__hash_node_base.1115"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.1115"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115", %"struct.std::__1::__hash_node_base.1115"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.1115"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115", %"struct.std::__1::__hash_node_base.1115"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.1115"* %62 to %"class.spvtools::opt::Function"**
  %64 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %63, align 8
  %65 = icmp eq %"class.spvtools::opt::Function"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #14, !noalias !100
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.spvtools::opt::Function"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !100
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !100
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !100
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.1115"**
  store %"struct.std::__1::__hash_node_base.1115"* null, %"struct.std::__1::__hash_node_base.1115"** %75, align 8, !noalias !100
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.1111", %"class.std::__1::__hash_table.1111"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.1111", %"class.std::__1::__hash_table.1111"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #15, !range !11
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #15
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPKN8spvtools3opt8FunctionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.1111"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #15, !range !11
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table.1111", %"class.std::__1::__hash_table.1111"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.1115"**, %"struct.std::__1::__hash_node_base.1115"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115"*, %"struct.std::__1::__hash_node_base.1115"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base.1115"*, %"struct.std::__1::__hash_node_base.1115"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.1115"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.1111", %"class.std::__1::__hash_table.1111"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base.1115"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.1115"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base.1115"* %118, %"struct.std::__1::__hash_node_base.1115"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base.1115"*, %"struct.std::__1::__hash_node_base.1115"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.1115"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115", %"struct.std::__1::__hash_node_base.1115"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.1115"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #15, !range !11
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base.1115"**, %"struct.std::__1::__hash_node_base.1115"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115"*, %"struct.std::__1::__hash_node_base.1115"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base.1115"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base.1115"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.1115"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.1115"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base.1115"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.1115"*, i8 } undef, %"struct.std::__1::__hash_node_base.1115"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base.1115"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base.1115"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN8spvtools3opt8FunctionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.1111"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !11
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #15
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1111", %"class.std::__1::__hash_table.1111"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPKN8spvtools3opt8FunctionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.1111"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !11
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1111", %"class.std::__1::__hash_table.1111"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1111", %"class.std::__1::__hash_table.1111"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #15
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #15, !range !11
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #15
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPKN8spvtools3opt8FunctionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.1111"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN8spvtools3opt8FunctionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.1111"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1111", %"class.std::__1::__hash_table.1111"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #16
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1111", %"class.std::__1::__hash_table.1111"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1115"**, %"struct.std::__1::__hash_node_base.1115"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1111"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1115"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1115"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1117", %"class.std::__1::__bucket_list_deallocator.1117"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1115"**, %"struct.std::__1::__hash_node_base.1115"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115"*, %"struct.std::__1::__hash_node_base.1115"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1115"* null, %"struct.std::__1::__hash_node_base.1115"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !103

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1111", %"class.std::__1::__hash_table.1111"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115", %"struct.std::__1::__hash_node_base.1115"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1115"*, %"struct.std::__1::__hash_node_base.1115"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1115"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1115"**, %"struct.std::__1::__hash_node_base.1115"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115"*, %"struct.std::__1::__hash_node_base.1115"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1115"* null, %"struct.std::__1::__hash_node_base.1115"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1115"**, %"struct.std::__1::__hash_node_base.1115"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115"*, %"struct.std::__1::__hash_node_base.1115"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1115"* null, %"struct.std::__1::__hash_node_base.1115"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1115"**, %"struct.std::__1::__hash_node_base.1115"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115"*, %"struct.std::__1::__hash_node_base.1115"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1115"* null, %"struct.std::__1::__hash_node_base.1115"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1115"**, %"struct.std::__1::__hash_node_base.1115"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115"*, %"struct.std::__1::__hash_node_base.1115"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1115"* null, %"struct.std::__1::__hash_node_base.1115"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115", %"struct.std::__1::__hash_node_base.1115"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1115"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #15, !range !11
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1115"**, %"struct.std::__1::__hash_node_base.1115"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115"*, %"struct.std::__1::__hash_node_base.1115"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1115"* %36, %"struct.std::__1::__hash_node_base.1115"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115", %"struct.std::__1::__hash_node_base.1115"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1115"*, %"struct.std::__1::__hash_node_base.1115"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1115"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.1115"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1115"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115", %"struct.std::__1::__hash_node_base.1115"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1115"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.1115"**, %"struct.std::__1::__hash_node_base.1115"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115"*, %"struct.std::__1::__hash_node_base.1115"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.1115"*, %"struct.std::__1::__hash_node_base.1115"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.1115"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115", %"struct.std::__1::__hash_node_base.1115"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.1115"* %101 to %"class.spvtools::opt::Function"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.1115"* %82, %"struct.std::__1::__hash_node_base.1115"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.1115"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115", %"struct.std::__1::__hash_node_base.1115"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.1115"*, %"struct.std::__1::__hash_node_base.1115"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1115"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115", %"struct.std::__1::__hash_node_base.1115"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.1115"* %110 to %"class.spvtools::opt::Function"**
  %112 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %102, align 8
  %113 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Function"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.1115"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.1115"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.1115"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.1115"**, %"struct.std::__1::__hash_node_base.1115"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115"*, %"struct.std::__1::__hash_node_base.1115"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.1115"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.1115"**, %"struct.std::__1::__hash_node_base.1115"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115"*, %"struct.std::__1::__hash_node_base.1115"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.1115"*, %"struct.std::__1::__hash_node_base.1115"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115", %"struct.std::__1::__hash_node_base.1115"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1115"* %80, %"struct.std::__1::__hash_node_base.1115"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.1115"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1115", %"struct.std::__1::__hash_node_base.1115"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.1115"*, %"struct.std::__1::__hash_node_base.1115"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.1115"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.1111", %"class.std::__1::__hash_table.1111"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.1115"**, %"struct.std::__1::__hash_node_base.1115"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.1115"** null, %"struct.std::__1::__hash_node_base.1115"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.1115"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.1115"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #14
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1117", %"class.std::__1::__bucket_list_deallocator.1117"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16__sortIRN8spvtools3opt12_GLOBAL__N_114DecorationLessEPPNS2_11InstructionEEEvT0_S9_T_(%"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"**) unnamed_addr #0 {
  br label %3

3:                                                ; preds = %287, %2
  %4 = phi %"class.spvtools::opt::Instruction"** [ %1, %2 ], [ %267, %287 ]
  %5 = phi %"class.spvtools::opt::Instruction"** [ %0, %2 ], [ %16, %287 ]
  %6 = ptrtoint %"class.spvtools::opt::Instruction"** %4 to i64
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, i64 -1
  %8 = bitcast %"class.spvtools::opt::Instruction"** %7 to i64*
  %9 = bitcast %"class.spvtools::opt::Instruction"** %7 to i64*
  %10 = bitcast %"class.spvtools::opt::Instruction"** %7 to i64*
  %11 = bitcast %"class.spvtools::opt::Instruction"** %7 to i64*
  %12 = ptrtoint %"class.spvtools::opt::Instruction"** %4 to i64
  br label %13

13:                                               ; preds = %296, %3
  %14 = phi %"class.spvtools::opt::Instruction"** [ %5, %3 ], [ %297, %296 ]
  br label %15

15:                                               ; preds = %216, %13
  %16 = phi %"class.spvtools::opt::Instruction"** [ %14, %13 ], [ %205, %216 ]
  %17 = ptrtoint %"class.spvtools::opt::Instruction"** %16 to i64
  %18 = sub i64 %6, %17
  %19 = ashr exact i64 %18, 3
  switch i64 %19, label %74 [
    i64 0, label %300
    i64 1, label %300
    i64 2, label %20
    i64 3, label %30
    i64 4, label %63
    i64 5, label %68
  ]

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, i64 -1
  %22 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %21, align 8
  %23 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, align 8
  %24 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %22, %"class.spvtools::opt::Instruction"* %23)
  br i1 %24, label %25, label %300

25:                                               ; preds = %20
  %26 = ptrtoint %"class.spvtools::opt::Instruction"* %22 to i64
  %27 = ptrtoint %"class.spvtools::opt::Instruction"* %23 to i64
  %28 = bitcast %"class.spvtools::opt::Instruction"** %16 to i64*
  %29 = bitcast %"class.spvtools::opt::Instruction"** %21 to i64*
  store i64 %26, i64* %28, align 8
  store i64 %27, i64* %29, align 8
  br label %300

30:                                               ; preds = %15
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, i64 1
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, i64 -1
  %33 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %31, align 8
  %34 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, align 8
  %35 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %33, %"class.spvtools::opt::Instruction"* %34) #15
  %36 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %32, align 8
  %37 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %36, %"class.spvtools::opt::Instruction"* %33) #15
  %38 = ptrtoint %"class.spvtools::opt::Instruction"* %33 to i64
  %39 = ptrtoint %"class.spvtools::opt::Instruction"* %36 to i64
  %40 = ptrtoint %"class.spvtools::opt::Instruction"* %34 to i64
  br i1 %35, label %52, label %41

41:                                               ; preds = %30
  br i1 %37, label %42, label %300

42:                                               ; preds = %41
  %43 = bitcast %"class.spvtools::opt::Instruction"** %31 to i64*
  %44 = bitcast %"class.spvtools::opt::Instruction"** %32 to i64*
  store i64 %39, i64* %43, align 8
  store i64 %38, i64* %44, align 8
  %45 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %31, align 8
  %46 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, align 8
  %47 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %45, %"class.spvtools::opt::Instruction"* %46) #15
  br i1 %47, label %48, label %300

48:                                               ; preds = %42
  %49 = ptrtoint %"class.spvtools::opt::Instruction"* %45 to i64
  %50 = ptrtoint %"class.spvtools::opt::Instruction"* %46 to i64
  %51 = bitcast %"class.spvtools::opt::Instruction"** %16 to i64*
  store i64 %49, i64* %51, align 8
  store i64 %50, i64* %43, align 8
  br label %300

52:                                               ; preds = %30
  %53 = bitcast %"class.spvtools::opt::Instruction"** %16 to i64*
  br i1 %37, label %54, label %56

54:                                               ; preds = %52
  %55 = bitcast %"class.spvtools::opt::Instruction"** %32 to i64*
  store i64 %39, i64* %53, align 8
  store i64 %40, i64* %55, align 8
  br label %300

56:                                               ; preds = %52
  %57 = bitcast %"class.spvtools::opt::Instruction"** %31 to i64*
  store i64 %38, i64* %53, align 8
  store i64 %40, i64* %57, align 8
  %58 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %32, align 8
  %59 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %58, %"class.spvtools::opt::Instruction"* %34) #15
  br i1 %59, label %60, label %300

60:                                               ; preds = %56
  %61 = ptrtoint %"class.spvtools::opt::Instruction"* %58 to i64
  %62 = bitcast %"class.spvtools::opt::Instruction"** %32 to i64*
  store i64 %61, i64* %57, align 8
  store i64 %40, i64* %62, align 8
  br label %300

63:                                               ; preds = %15
  %64 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, i64 1
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, i64 2
  %66 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, i64 -1
  %67 = tail call fastcc i32 @_ZNSt3__17__sort4IRN8spvtools3opt12_GLOBAL__N_114DecorationLessEPPNS2_11InstructionEEEjT0_S9_S9_S9_T_(%"class.spvtools::opt::Instruction"** %16, %"class.spvtools::opt::Instruction"** %64, %"class.spvtools::opt::Instruction"** %65, %"class.spvtools::opt::Instruction"** %66)
  br label %300

68:                                               ; preds = %15
  %69 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, i64 1
  %70 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, i64 2
  %71 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, i64 3
  %72 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, i64 -1
  %73 = tail call fastcc i32 @_ZNSt3__17__sort5IRN8spvtools3opt12_GLOBAL__N_114DecorationLessEPPNS2_11InstructionEEEjT0_S9_S9_S9_S9_T_(%"class.spvtools::opt::Instruction"** %16, %"class.spvtools::opt::Instruction"** %69, %"class.spvtools::opt::Instruction"** %70, %"class.spvtools::opt::Instruction"** %71, %"class.spvtools::opt::Instruction"** %72)
  br label %300

74:                                               ; preds = %15
  %75 = icmp slt i64 %18, 248
  br i1 %75, label %76, label %133

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, i64 2
  %78 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, i64 1
  %79 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %78, align 8
  %80 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, align 8
  %81 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %79, %"class.spvtools::opt::Instruction"* %80) #15
  %82 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %77, align 8
  %83 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %82, %"class.spvtools::opt::Instruction"* %79) #15
  %84 = ptrtoint %"class.spvtools::opt::Instruction"* %79 to i64
  %85 = ptrtoint %"class.spvtools::opt::Instruction"* %82 to i64
  %86 = ptrtoint %"class.spvtools::opt::Instruction"* %80 to i64
  br i1 %81, label %94, label %87

87:                                               ; preds = %76
  br i1 %83, label %88, label %103

88:                                               ; preds = %87
  %89 = bitcast %"class.spvtools::opt::Instruction"** %78 to i64*
  %90 = bitcast %"class.spvtools::opt::Instruction"** %77 to i64*
  store i64 %85, i64* %89, align 8
  store i64 %84, i64* %90, align 8
  %91 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %82, %"class.spvtools::opt::Instruction"* %80) #15
  br i1 %91, label %92, label %103

92:                                               ; preds = %88
  %93 = bitcast %"class.spvtools::opt::Instruction"** %16 to i64*
  store i64 %85, i64* %93, align 8
  store i64 %86, i64* %89, align 8
  br label %103

94:                                               ; preds = %76
  %95 = bitcast %"class.spvtools::opt::Instruction"** %16 to i64*
  br i1 %83, label %96, label %98

96:                                               ; preds = %94
  %97 = bitcast %"class.spvtools::opt::Instruction"** %77 to i64*
  store i64 %85, i64* %95, align 8
  store i64 %86, i64* %97, align 8
  br label %103

98:                                               ; preds = %94
  %99 = bitcast %"class.spvtools::opt::Instruction"** %78 to i64*
  store i64 %84, i64* %95, align 8
  store i64 %86, i64* %99, align 8
  %100 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %82, %"class.spvtools::opt::Instruction"* %80) #15
  br i1 %100, label %101, label %103

101:                                              ; preds = %98
  %102 = bitcast %"class.spvtools::opt::Instruction"** %77 to i64*
  store i64 %85, i64* %99, align 8
  store i64 %86, i64* %102, align 8
  br label %103

103:                                              ; preds = %101, %98, %96, %92, %88, %87
  %104 = phi %"class.spvtools::opt::Instruction"* [ %82, %87 ], [ %79, %88 ], [ %79, %92 ], [ %80, %96 ], [ %82, %98 ], [ %80, %101 ]
  %105 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, i64 3
  %106 = icmp eq %"class.spvtools::opt::Instruction"** %105, %4
  br i1 %106, label %300, label %107

107:                                              ; preds = %103, %131
  %108 = phi %"class.spvtools::opt::Instruction"* [ %132, %131 ], [ %104, %103 ]
  %109 = phi %"class.spvtools::opt::Instruction"** [ %129, %131 ], [ %105, %103 ]
  %110 = phi %"class.spvtools::opt::Instruction"** [ %109, %131 ], [ %77, %103 ]
  %111 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %109, align 8
  %112 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %111, %"class.spvtools::opt::Instruction"* %108) #15
  %113 = ptrtoint %"class.spvtools::opt::Instruction"* %111 to i64
  br i1 %112, label %114, label %128

114:                                              ; preds = %107, %121
  %115 = phi %"class.spvtools::opt::Instruction"** [ %116, %121 ], [ %109, %107 ]
  %116 = phi %"class.spvtools::opt::Instruction"** [ %122, %121 ], [ %110, %107 ]
  %117 = bitcast %"class.spvtools::opt::Instruction"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.spvtools::opt::Instruction"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = icmp eq %"class.spvtools::opt::Instruction"** %116, %16
  br i1 %120, label %125, label %121

121:                                              ; preds = %114
  %122 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %116, i64 -1
  %123 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %122, align 8
  %124 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %111, %"class.spvtools::opt::Instruction"* %123) #15
  br i1 %124, label %114, label %125

125:                                              ; preds = %114, %121
  %126 = phi %"class.spvtools::opt::Instruction"** [ %116, %121 ], [ %16, %114 ]
  %127 = bitcast %"class.spvtools::opt::Instruction"** %126 to i64*
  store i64 %113, i64* %127, align 8
  br label %128

128:                                              ; preds = %125, %107
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %109, i64 1
  %130 = icmp eq %"class.spvtools::opt::Instruction"** %129, %4
  br i1 %130, label %300, label %131

131:                                              ; preds = %128
  %132 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %109, align 8
  br label %107

133:                                              ; preds = %74
  %134 = icmp sgt i64 %18, 7992
  %135 = sdiv i64 %19, 2
  %136 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, i64 %135
  br i1 %134, label %137, label %142

137:                                              ; preds = %133
  %138 = sdiv i64 %19, 4
  %139 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, i64 %138
  %140 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %136, i64 %138
  %141 = tail call fastcc i32 @_ZNSt3__17__sort5IRN8spvtools3opt12_GLOBAL__N_114DecorationLessEPPNS2_11InstructionEEEjT0_S9_S9_S9_S9_T_(%"class.spvtools::opt::Instruction"** %16, %"class.spvtools::opt::Instruction"** %139, %"class.spvtools::opt::Instruction"** %136, %"class.spvtools::opt::Instruction"** %140, %"class.spvtools::opt::Instruction"** %7)
  br label %170

142:                                              ; preds = %133
  %143 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %136, align 8
  %144 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, align 8
  %145 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %143, %"class.spvtools::opt::Instruction"* %144) #15
  %146 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %7, align 8
  %147 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %146, %"class.spvtools::opt::Instruction"* %143) #15
  %148 = ptrtoint %"class.spvtools::opt::Instruction"* %143 to i64
  %149 = ptrtoint %"class.spvtools::opt::Instruction"* %146 to i64
  %150 = ptrtoint %"class.spvtools::opt::Instruction"* %144 to i64
  br i1 %145, label %161, label %151

151:                                              ; preds = %142
  br i1 %147, label %152, label %170

152:                                              ; preds = %151
  %153 = bitcast %"class.spvtools::opt::Instruction"** %136 to i64*
  store i64 %149, i64* %153, align 8
  store i64 %148, i64* %8, align 8
  %154 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %136, align 8
  %155 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, align 8
  %156 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %154, %"class.spvtools::opt::Instruction"* %155) #15
  br i1 %156, label %157, label %170

157:                                              ; preds = %152
  %158 = ptrtoint %"class.spvtools::opt::Instruction"* %154 to i64
  %159 = ptrtoint %"class.spvtools::opt::Instruction"* %155 to i64
  %160 = bitcast %"class.spvtools::opt::Instruction"** %16 to i64*
  store i64 %158, i64* %160, align 8
  store i64 %159, i64* %153, align 8
  br label %170

161:                                              ; preds = %142
  %162 = bitcast %"class.spvtools::opt::Instruction"** %16 to i64*
  br i1 %147, label %163, label %164

163:                                              ; preds = %161
  store i64 %149, i64* %162, align 8
  store i64 %150, i64* %10, align 8
  br label %170

164:                                              ; preds = %161
  %165 = bitcast %"class.spvtools::opt::Instruction"** %136 to i64*
  store i64 %148, i64* %162, align 8
  store i64 %150, i64* %165, align 8
  %166 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %7, align 8
  %167 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %166, %"class.spvtools::opt::Instruction"* %144) #15
  br i1 %167, label %168, label %170

168:                                              ; preds = %164
  %169 = ptrtoint %"class.spvtools::opt::Instruction"* %166 to i64
  store i64 %169, i64* %165, align 8
  store i64 %150, i64* %9, align 8
  br label %170

170:                                              ; preds = %168, %164, %163, %157, %152, %151, %137
  %171 = phi i32 [ %141, %137 ], [ 1, %163 ], [ 0, %151 ], [ 2, %157 ], [ 1, %152 ], [ 2, %168 ], [ 1, %164 ]
  %172 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, align 8
  %173 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %136, align 8
  %174 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %172, %"class.spvtools::opt::Instruction"* %173)
  br i1 %174, label %231, label %175

175:                                              ; preds = %170, %222
  %176 = phi %"class.spvtools::opt::Instruction"** [ %177, %222 ], [ %7, %170 ]
  %177 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %176, i64 -1
  %178 = icmp eq %"class.spvtools::opt::Instruction"** %16, %177
  br i1 %178, label %179, label %222

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, i64 1
  %181 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %7, align 8
  %182 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %172, %"class.spvtools::opt::Instruction"* %181)
  %183 = ptrtoint %"class.spvtools::opt::Instruction"* %181 to i64
  br i1 %182, label %197, label %184

184:                                              ; preds = %179
  %185 = icmp eq %"class.spvtools::opt::Instruction"** %180, %7
  br i1 %185, label %300, label %186

186:                                              ; preds = %184, %194
  %187 = phi %"class.spvtools::opt::Instruction"** [ %195, %194 ], [ %180, %184 ]
  %188 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %187, align 8
  %189 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %172, %"class.spvtools::opt::Instruction"* %188)
  br i1 %189, label %190, label %194

190:                                              ; preds = %186
  %191 = ptrtoint %"class.spvtools::opt::Instruction"* %188 to i64
  %192 = bitcast %"class.spvtools::opt::Instruction"** %187 to i64*
  store i64 %183, i64* %192, align 8
  store i64 %191, i64* %11, align 8
  %193 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %187, i64 1
  br label %197

194:                                              ; preds = %186
  %195 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %187, i64 1
  %196 = icmp eq %"class.spvtools::opt::Instruction"** %195, %7
  br i1 %196, label %300, label %186

197:                                              ; preds = %190, %179
  %198 = phi %"class.spvtools::opt::Instruction"** [ %180, %179 ], [ %193, %190 ]
  %199 = icmp eq %"class.spvtools::opt::Instruction"** %198, %7
  br i1 %199, label %300, label %200

200:                                              ; preds = %197, %218
  %201 = phi %"class.spvtools::opt::Instruction"** [ %208, %218 ], [ %198, %197 ]
  %202 = phi %"class.spvtools::opt::Instruction"** [ %213, %218 ], [ %7, %197 ]
  %203 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, align 8
  br label %204

204:                                              ; preds = %204, %200
  %205 = phi %"class.spvtools::opt::Instruction"** [ %201, %200 ], [ %208, %204 ]
  %206 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %205, align 8
  %207 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %203, %"class.spvtools::opt::Instruction"* %206)
  %208 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %205, i64 1
  br i1 %207, label %209, label %204

209:                                              ; preds = %204
  %210 = ptrtoint %"class.spvtools::opt::Instruction"* %206 to i64
  br label %211

211:                                              ; preds = %209, %211
  %212 = phi %"class.spvtools::opt::Instruction"** [ %213, %211 ], [ %202, %209 ]
  %213 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %212, i64 -1
  %214 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %213, align 8
  %215 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %203, %"class.spvtools::opt::Instruction"* %214)
  br i1 %215, label %211, label %216

216:                                              ; preds = %211
  %217 = icmp ult %"class.spvtools::opt::Instruction"** %205, %213
  br i1 %217, label %218, label %15

218:                                              ; preds = %216
  %219 = ptrtoint %"class.spvtools::opt::Instruction"* %214 to i64
  %220 = bitcast %"class.spvtools::opt::Instruction"** %205 to i64*
  %221 = bitcast %"class.spvtools::opt::Instruction"** %213 to i64*
  store i64 %219, i64* %220, align 8
  store i64 %210, i64* %221, align 8
  br label %200

222:                                              ; preds = %175
  %223 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %177, align 8
  %224 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %223, %"class.spvtools::opt::Instruction"* %173)
  br i1 %224, label %225, label %175

225:                                              ; preds = %222
  %226 = ptrtoint %"class.spvtools::opt::Instruction"* %172 to i64
  %227 = ptrtoint %"class.spvtools::opt::Instruction"* %223 to i64
  %228 = bitcast %"class.spvtools::opt::Instruction"** %16 to i64*
  %229 = bitcast %"class.spvtools::opt::Instruction"** %177 to i64*
  store i64 %227, i64* %228, align 8
  store i64 %226, i64* %229, align 8
  %230 = add i32 %171, 1
  br label %231

231:                                              ; preds = %170, %225
  %232 = phi i32 [ %230, %225 ], [ %171, %170 ]
  %233 = phi %"class.spvtools::opt::Instruction"** [ %177, %225 ], [ %7, %170 ]
  %234 = ptrtoint %"class.spvtools::opt::Instruction"** %16 to i64
  %235 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, i64 1
  %236 = icmp ult %"class.spvtools::opt::Instruction"** %235, %233
  br i1 %236, label %237, label %264

237:                                              ; preds = %231, %257
  %238 = phi %"class.spvtools::opt::Instruction"** [ %263, %257 ], [ %136, %231 ]
  %239 = phi i32 [ %261, %257 ], [ %232, %231 ]
  %240 = phi %"class.spvtools::opt::Instruction"** [ %247, %257 ], [ %235, %231 ]
  %241 = phi %"class.spvtools::opt::Instruction"** [ %252, %257 ], [ %233, %231 ]
  %242 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %238, align 8
  br label %243

243:                                              ; preds = %243, %237
  %244 = phi %"class.spvtools::opt::Instruction"** [ %240, %237 ], [ %247, %243 ]
  %245 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %244, align 8
  %246 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %245, %"class.spvtools::opt::Instruction"* %242)
  %247 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %244, i64 1
  br i1 %246, label %243, label %248

248:                                              ; preds = %243
  %249 = ptrtoint %"class.spvtools::opt::Instruction"* %245 to i64
  br label %250

250:                                              ; preds = %248, %250
  %251 = phi %"class.spvtools::opt::Instruction"** [ %252, %250 ], [ %241, %248 ]
  %252 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %251, i64 -1
  %253 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %252, align 8
  %254 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %253, %"class.spvtools::opt::Instruction"* %242)
  br i1 %254, label %255, label %250

255:                                              ; preds = %250
  %256 = icmp ugt %"class.spvtools::opt::Instruction"** %244, %252
  br i1 %256, label %264, label %257

257:                                              ; preds = %255
  %258 = ptrtoint %"class.spvtools::opt::Instruction"* %253 to i64
  %259 = bitcast %"class.spvtools::opt::Instruction"** %244 to i64*
  %260 = bitcast %"class.spvtools::opt::Instruction"** %252 to i64*
  store i64 %258, i64* %259, align 8
  store i64 %249, i64* %260, align 8
  %261 = add i32 %239, 1
  %262 = icmp eq %"class.spvtools::opt::Instruction"** %238, %244
  %263 = select i1 %262, %"class.spvtools::opt::Instruction"** %252, %"class.spvtools::opt::Instruction"** %238
  br label %237

264:                                              ; preds = %255, %231
  %265 = phi %"class.spvtools::opt::Instruction"** [ %136, %231 ], [ %238, %255 ]
  %266 = phi i32 [ %232, %231 ], [ %239, %255 ]
  %267 = phi %"class.spvtools::opt::Instruction"** [ %235, %231 ], [ %244, %255 ]
  %268 = icmp eq %"class.spvtools::opt::Instruction"** %267, %265
  br i1 %268, label %279, label %269

269:                                              ; preds = %264
  %270 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %265, align 8
  %271 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %267, align 8
  %272 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %270, %"class.spvtools::opt::Instruction"* %271)
  br i1 %272, label %273, label %279

273:                                              ; preds = %269
  %274 = ptrtoint %"class.spvtools::opt::Instruction"* %270 to i64
  %275 = ptrtoint %"class.spvtools::opt::Instruction"* %271 to i64
  %276 = bitcast %"class.spvtools::opt::Instruction"** %267 to i64*
  %277 = bitcast %"class.spvtools::opt::Instruction"** %265 to i64*
  store i64 %274, i64* %276, align 8
  store i64 %275, i64* %277, align 8
  %278 = add i32 %266, 1
  br label %279

279:                                              ; preds = %264, %273, %269
  %280 = phi i32 [ %278, %273 ], [ %266, %269 ], [ %266, %264 ]
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %289

282:                                              ; preds = %279
  %283 = tail call fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN8spvtools3opt12_GLOBAL__N_114DecorationLessEPPNS2_11InstructionEEEbT0_S9_T_(%"class.spvtools::opt::Instruction"** %16, %"class.spvtools::opt::Instruction"** %267)
  %284 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %267, i64 1
  %285 = tail call fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN8spvtools3opt12_GLOBAL__N_114DecorationLessEPPNS2_11InstructionEEEbT0_S9_T_(%"class.spvtools::opt::Instruction"** %284, %"class.spvtools::opt::Instruction"** %4)
  br i1 %285, label %286, label %288

286:                                              ; preds = %282
  br i1 %283, label %300, label %287

287:                                              ; preds = %286, %298
  br label %3

288:                                              ; preds = %282
  br i1 %283, label %296, label %289

289:                                              ; preds = %288, %279
  %290 = ptrtoint %"class.spvtools::opt::Instruction"** %267 to i64
  %291 = sub i64 %290, %234
  %292 = sub i64 %12, %290
  %293 = icmp slt i64 %291, %292
  br i1 %293, label %294, label %298

294:                                              ; preds = %289
  tail call fastcc void @_ZNSt3__16__sortIRN8spvtools3opt12_GLOBAL__N_114DecorationLessEPPNS2_11InstructionEEEvT0_S9_T_(%"class.spvtools::opt::Instruction"** %16, %"class.spvtools::opt::Instruction"** %267)
  %295 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %267, i64 1
  br label %296

296:                                              ; preds = %294, %288
  %297 = phi %"class.spvtools::opt::Instruction"** [ %284, %288 ], [ %295, %294 ]
  br label %13

298:                                              ; preds = %289
  %299 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %267, i64 1
  tail call fastcc void @_ZNSt3__16__sortIRN8spvtools3opt12_GLOBAL__N_114DecorationLessEPPNS2_11InstructionEEEvT0_S9_T_(%"class.spvtools::opt::Instruction"** %299, %"class.spvtools::opt::Instruction"** %4)
  br label %287

300:                                              ; preds = %286, %197, %15, %15, %184, %194, %128, %103, %60, %56, %54, %48, %42, %41, %20, %25, %63, %68
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* nocapture readonly, %"class.spvtools::opt::Instruction"* nocapture readonly) unnamed_addr #12 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %64, label %8

8:                                                ; preds = %2
  %9 = icmp eq i32 %4, 74
  %10 = icmp ne i32 %6, 74
  %11 = and i1 %9, %10
  br i1 %11, label %70, label %12

12:                                               ; preds = %8
  %13 = icmp eq i32 %6, 74
  %14 = icmp ne i32 %4, 74
  %15 = and i1 %14, %13
  br i1 %15, label %70, label %16

16:                                               ; preds = %12
  %17 = icmp eq i32 %4, 75
  %18 = icmp ne i32 %6, 75
  %19 = and i1 %17, %18
  br i1 %19, label %70, label %20

20:                                               ; preds = %16
  %21 = icmp eq i32 %6, 75
  %22 = icmp ne i32 %4, 75
  %23 = and i1 %22, %21
  br i1 %23, label %70, label %24

24:                                               ; preds = %20
  %25 = icmp eq i32 %4, 71
  %26 = icmp ne i32 %6, 71
  %27 = and i1 %25, %26
  br i1 %27, label %70, label %28

28:                                               ; preds = %24
  %29 = icmp eq i32 %6, 71
  %30 = icmp ne i32 %4, 71
  %31 = and i1 %30, %29
  br i1 %31, label %70, label %32

32:                                               ; preds = %28
  %33 = icmp eq i32 %4, 72
  %34 = icmp ne i32 %6, 72
  %35 = and i1 %33, %34
  br i1 %35, label %70, label %36

36:                                               ; preds = %32
  %37 = icmp eq i32 %6, 72
  %38 = icmp ne i32 %4, 72
  %39 = and i1 %38, %37
  br i1 %39, label %70, label %40

40:                                               ; preds = %36
  %41 = icmp eq i32 %4, 332
  %42 = icmp ne i32 %6, 332
  %43 = and i1 %41, %42
  br i1 %43, label %70, label %44

44:                                               ; preds = %40
  %45 = icmp eq i32 %6, 332
  %46 = icmp ne i32 %4, 332
  %47 = and i1 %46, %45
  br i1 %47, label %70, label %48

48:                                               ; preds = %44
  %49 = icmp eq i32 %4, 5632
  %50 = icmp ne i32 %6, 5632
  %51 = and i1 %49, %50
  br i1 %51, label %70, label %52

52:                                               ; preds = %48
  %53 = icmp eq i32 %6, 5632
  %54 = icmp ne i32 %4, 5632
  %55 = and i1 %54, %53
  br i1 %55, label %70, label %56

56:                                               ; preds = %52
  %57 = icmp eq i32 %4, 73
  %58 = icmp ne i32 %6, 73
  %59 = and i1 %57, %58
  br i1 %59, label %70, label %60

60:                                               ; preds = %56
  %61 = icmp eq i32 %6, 73
  %62 = icmp ne i32 %4, 73
  %63 = and i1 %62, %61
  br i1 %63, label %70, label %64

64:                                               ; preds = %2, %60
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 5
  %66 = load i32, i32* %65, align 8
  %67 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 5
  %68 = load i32, i32* %67, align 8
  %69 = icmp ult i32 %66, %68
  br label %70

70:                                               ; preds = %60, %56, %52, %48, %44, %40, %36, %32, %28, %24, %20, %16, %12, %8, %64
  %71 = phi i1 [ %69, %64 ], [ true, %8 ], [ false, %12 ], [ true, %16 ], [ false, %20 ], [ true, %24 ], [ false, %28 ], [ true, %32 ], [ false, %36 ], [ true, %40 ], [ false, %44 ], [ true, %48 ], [ false, %52 ], [ true, %56 ], [ false, %60 ]
  ret i1 %71
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @_ZNSt3__17__sort4IRN8spvtools3opt12_GLOBAL__N_114DecorationLessEPPNS2_11InstructionEEEjT0_S9_S9_S9_T_(%"class.spvtools::opt::Instruction"** nocapture, %"class.spvtools::opt::Instruction"** nocapture, %"class.spvtools::opt::Instruction"** nocapture, %"class.spvtools::opt::Instruction"** nocapture) unnamed_addr #11 {
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, align 8
  %6 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, align 8
  %7 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %5, %"class.spvtools::opt::Instruction"* %6) #15
  %8 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2, align 8
  %9 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %8, %"class.spvtools::opt::Instruction"* %5) #15
  %10 = ptrtoint %"class.spvtools::opt::Instruction"* %5 to i64
  %11 = ptrtoint %"class.spvtools::opt::Instruction"* %8 to i64
  %12 = ptrtoint %"class.spvtools::opt::Instruction"* %6 to i64
  br i1 %7, label %26, label %13

13:                                               ; preds = %4
  br i1 %9, label %14, label %37

14:                                               ; preds = %13
  %15 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %16 = bitcast %"class.spvtools::opt::Instruction"** %2 to i64*
  store i64 %11, i64* %15, align 8
  store i64 %10, i64* %16, align 8
  %17 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, align 8
  %18 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, align 8
  %19 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %17, %"class.spvtools::opt::Instruction"* %18) #15
  br i1 %19, label %20, label %37

20:                                               ; preds = %14
  %21 = ptrtoint %"class.spvtools::opt::Instruction"* %17 to i64
  %22 = ptrtoint %"class.spvtools::opt::Instruction"* %18 to i64
  %23 = bitcast %"class.spvtools::opt::Instruction"** %0 to i64*
  store i64 %21, i64* %23, align 8
  store i64 %22, i64* %15, align 8
  %24 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2, align 8
  %25 = ptrtoint %"class.spvtools::opt::Instruction"* %24 to i64
  br label %37

26:                                               ; preds = %4
  %27 = bitcast %"class.spvtools::opt::Instruction"** %0 to i64*
  br i1 %9, label %28, label %30

28:                                               ; preds = %26
  %29 = bitcast %"class.spvtools::opt::Instruction"** %2 to i64*
  store i64 %11, i64* %27, align 8
  store i64 %12, i64* %29, align 8
  br label %37

30:                                               ; preds = %26
  %31 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  store i64 %10, i64* %27, align 8
  store i64 %12, i64* %31, align 8
  %32 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2, align 8
  %33 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %32, %"class.spvtools::opt::Instruction"* %6) #15
  %34 = ptrtoint %"class.spvtools::opt::Instruction"* %32 to i64
  br i1 %33, label %35, label %37

35:                                               ; preds = %30
  %36 = bitcast %"class.spvtools::opt::Instruction"** %2 to i64*
  store i64 %34, i64* %31, align 8
  store i64 %12, i64* %36, align 8
  br label %37

37:                                               ; preds = %13, %14, %20, %28, %30, %35
  %38 = phi i64 [ %12, %28 ], [ %11, %13 ], [ %25, %20 ], [ %10, %14 ], [ %12, %35 ], [ %34, %30 ]
  %39 = phi %"class.spvtools::opt::Instruction"* [ %6, %28 ], [ %8, %13 ], [ %24, %20 ], [ %5, %14 ], [ %6, %35 ], [ %32, %30 ]
  %40 = phi i32 [ 1, %28 ], [ 0, %13 ], [ 2, %20 ], [ 1, %14 ], [ 2, %35 ], [ 1, %30 ]
  %41 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %42 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %41, %"class.spvtools::opt::Instruction"* %39)
  br i1 %42, label %43, label %64

43:                                               ; preds = %37
  %44 = ptrtoint %"class.spvtools::opt::Instruction"* %41 to i64
  %45 = bitcast %"class.spvtools::opt::Instruction"** %2 to i64*
  %46 = bitcast %"class.spvtools::opt::Instruction"** %3 to i64*
  store i64 %44, i64* %45, align 8
  store i64 %38, i64* %46, align 8
  %47 = add nuw nsw i32 %40, 1
  %48 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2, align 8
  %49 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, align 8
  %50 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %48, %"class.spvtools::opt::Instruction"* %49)
  br i1 %50, label %51, label %64

51:                                               ; preds = %43
  %52 = ptrtoint %"class.spvtools::opt::Instruction"* %48 to i64
  %53 = ptrtoint %"class.spvtools::opt::Instruction"* %49 to i64
  %54 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  store i64 %52, i64* %54, align 8
  store i64 %53, i64* %45, align 8
  %55 = add nuw nsw i32 %40, 2
  %56 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, align 8
  %57 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, align 8
  %58 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %56, %"class.spvtools::opt::Instruction"* %57)
  br i1 %58, label %59, label %64

59:                                               ; preds = %51
  %60 = ptrtoint %"class.spvtools::opt::Instruction"* %56 to i64
  %61 = ptrtoint %"class.spvtools::opt::Instruction"* %57 to i64
  %62 = bitcast %"class.spvtools::opt::Instruction"** %0 to i64*
  store i64 %60, i64* %62, align 8
  store i64 %61, i64* %54, align 8
  %63 = add nuw nsw i32 %40, 3
  br label %64

64:                                               ; preds = %43, %59, %51, %37
  %65 = phi i32 [ %63, %59 ], [ %55, %51 ], [ %47, %43 ], [ %40, %37 ]
  ret i32 %65
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @_ZNSt3__17__sort5IRN8spvtools3opt12_GLOBAL__N_114DecorationLessEPPNS2_11InstructionEEEjT0_S9_S9_S9_S9_T_(%"class.spvtools::opt::Instruction"** nocapture, %"class.spvtools::opt::Instruction"** nocapture, %"class.spvtools::opt::Instruction"** nocapture, %"class.spvtools::opt::Instruction"** nocapture, %"class.spvtools::opt::Instruction"** nocapture) unnamed_addr #11 {
  %6 = tail call fastcc i32 @_ZNSt3__17__sort4IRN8spvtools3opt12_GLOBAL__N_114DecorationLessEPPNS2_11InstructionEEEjT0_S9_S9_S9_T_(%"class.spvtools::opt::Instruction"** %0, %"class.spvtools::opt::Instruction"** %1, %"class.spvtools::opt::Instruction"** %2, %"class.spvtools::opt::Instruction"** %3)
  %7 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %8 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %9 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %7, %"class.spvtools::opt::Instruction"* %8)
  br i1 %9, label %10, label %40

10:                                               ; preds = %5
  %11 = ptrtoint %"class.spvtools::opt::Instruction"* %7 to i64
  %12 = ptrtoint %"class.spvtools::opt::Instruction"* %8 to i64
  %13 = bitcast %"class.spvtools::opt::Instruction"** %3 to i64*
  %14 = bitcast %"class.spvtools::opt::Instruction"** %4 to i64*
  store i64 %11, i64* %13, align 8
  store i64 %12, i64* %14, align 8
  %15 = add i32 %6, 1
  %16 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %17 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2, align 8
  %18 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %16, %"class.spvtools::opt::Instruction"* %17)
  br i1 %18, label %19, label %40

19:                                               ; preds = %10
  %20 = ptrtoint %"class.spvtools::opt::Instruction"* %16 to i64
  %21 = ptrtoint %"class.spvtools::opt::Instruction"* %17 to i64
  %22 = bitcast %"class.spvtools::opt::Instruction"** %2 to i64*
  store i64 %20, i64* %22, align 8
  store i64 %21, i64* %13, align 8
  %23 = add i32 %6, 2
  %24 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2, align 8
  %25 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, align 8
  %26 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %24, %"class.spvtools::opt::Instruction"* %25)
  br i1 %26, label %27, label %40

27:                                               ; preds = %19
  %28 = ptrtoint %"class.spvtools::opt::Instruction"* %24 to i64
  %29 = ptrtoint %"class.spvtools::opt::Instruction"* %25 to i64
  %30 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  store i64 %28, i64* %30, align 8
  store i64 %29, i64* %22, align 8
  %31 = add i32 %6, 3
  %32 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, align 8
  %33 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, align 8
  %34 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %32, %"class.spvtools::opt::Instruction"* %33)
  br i1 %34, label %35, label %40

35:                                               ; preds = %27
  %36 = ptrtoint %"class.spvtools::opt::Instruction"* %32 to i64
  %37 = ptrtoint %"class.spvtools::opt::Instruction"* %33 to i64
  %38 = bitcast %"class.spvtools::opt::Instruction"** %0 to i64*
  store i64 %36, i64* %38, align 8
  store i64 %37, i64* %30, align 8
  %39 = add i32 %6, 4
  br label %40

40:                                               ; preds = %10, %27, %35, %19, %5
  %41 = phi i32 [ %39, %35 ], [ %31, %27 ], [ %23, %19 ], [ %15, %10 ], [ %6, %5 ]
  ret i32 %41
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN8spvtools3opt12_GLOBAL__N_114DecorationLessEPPNS2_11InstructionEEEbT0_S9_T_(%"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"**) unnamed_addr #0 {
  %3 = ptrtoint %"class.spvtools::opt::Instruction"** %1 to i64
  %4 = ptrtoint %"class.spvtools::opt::Instruction"** %0 to i64
  %5 = sub i64 %3, %4
  %6 = ashr exact i64 %5, 3
  switch i64 %6, label %61 [
    i64 0, label %125
    i64 1, label %125
    i64 2, label %7
    i64 3, label %17
    i64 4, label %50
    i64 5, label %55
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, i64 -1
  %9 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, align 8
  %11 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %9, %"class.spvtools::opt::Instruction"* %10)
  br i1 %11, label %12, label %125

12:                                               ; preds = %7
  %13 = ptrtoint %"class.spvtools::opt::Instruction"* %9 to i64
  %14 = ptrtoint %"class.spvtools::opt::Instruction"* %10 to i64
  %15 = bitcast %"class.spvtools::opt::Instruction"** %0 to i64*
  %16 = bitcast %"class.spvtools::opt::Instruction"** %8 to i64*
  store i64 %13, i64* %15, align 8
  store i64 %14, i64* %16, align 8
  br label %125

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, i64 1
  %19 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, i64 -1
  %20 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %18, align 8
  %21 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, align 8
  %22 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %20, %"class.spvtools::opt::Instruction"* %21) #15
  %23 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %19, align 8
  %24 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %23, %"class.spvtools::opt::Instruction"* %20) #15
  %25 = ptrtoint %"class.spvtools::opt::Instruction"* %20 to i64
  %26 = ptrtoint %"class.spvtools::opt::Instruction"* %23 to i64
  %27 = ptrtoint %"class.spvtools::opt::Instruction"* %21 to i64
  br i1 %22, label %39, label %28

28:                                               ; preds = %17
  br i1 %24, label %29, label %125

29:                                               ; preds = %28
  %30 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  %31 = bitcast %"class.spvtools::opt::Instruction"** %19 to i64*
  store i64 %26, i64* %30, align 8
  store i64 %25, i64* %31, align 8
  %32 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %18, align 8
  %33 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, align 8
  %34 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %32, %"class.spvtools::opt::Instruction"* %33) #15
  br i1 %34, label %35, label %125

35:                                               ; preds = %29
  %36 = ptrtoint %"class.spvtools::opt::Instruction"* %32 to i64
  %37 = ptrtoint %"class.spvtools::opt::Instruction"* %33 to i64
  %38 = bitcast %"class.spvtools::opt::Instruction"** %0 to i64*
  store i64 %36, i64* %38, align 8
  store i64 %37, i64* %30, align 8
  br label %125

39:                                               ; preds = %17
  %40 = bitcast %"class.spvtools::opt::Instruction"** %0 to i64*
  br i1 %24, label %41, label %43

41:                                               ; preds = %39
  %42 = bitcast %"class.spvtools::opt::Instruction"** %19 to i64*
  store i64 %26, i64* %40, align 8
  store i64 %27, i64* %42, align 8
  br label %125

43:                                               ; preds = %39
  %44 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %25, i64* %40, align 8
  store i64 %27, i64* %44, align 8
  %45 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %19, align 8
  %46 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %45, %"class.spvtools::opt::Instruction"* %21) #15
  br i1 %46, label %47, label %125

47:                                               ; preds = %43
  %48 = ptrtoint %"class.spvtools::opt::Instruction"* %45 to i64
  %49 = bitcast %"class.spvtools::opt::Instruction"** %19 to i64*
  store i64 %48, i64* %44, align 8
  store i64 %27, i64* %49, align 8
  br label %125

50:                                               ; preds = %2
  %51 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, i64 1
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, i64 2
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, i64 -1
  %54 = tail call fastcc i32 @_ZNSt3__17__sort4IRN8spvtools3opt12_GLOBAL__N_114DecorationLessEPPNS2_11InstructionEEEjT0_S9_S9_S9_T_(%"class.spvtools::opt::Instruction"** %0, %"class.spvtools::opt::Instruction"** %51, %"class.spvtools::opt::Instruction"** %52, %"class.spvtools::opt::Instruction"** %53)
  br label %125

55:                                               ; preds = %2
  %56 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, i64 1
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, i64 2
  %58 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, i64 3
  %59 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, i64 -1
  %60 = tail call fastcc i32 @_ZNSt3__17__sort5IRN8spvtools3opt12_GLOBAL__N_114DecorationLessEPPNS2_11InstructionEEEjT0_S9_S9_S9_S9_T_(%"class.spvtools::opt::Instruction"** %0, %"class.spvtools::opt::Instruction"** %56, %"class.spvtools::opt::Instruction"** %57, %"class.spvtools::opt::Instruction"** %58, %"class.spvtools::opt::Instruction"** %59)
  br label %125

61:                                               ; preds = %2
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, i64 2
  %63 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, i64 1
  %64 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %63, align 8
  %65 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, align 8
  %66 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %64, %"class.spvtools::opt::Instruction"* %65) #15
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %62, align 8
  %68 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %67, %"class.spvtools::opt::Instruction"* %64) #15
  %69 = ptrtoint %"class.spvtools::opt::Instruction"* %64 to i64
  %70 = ptrtoint %"class.spvtools::opt::Instruction"* %67 to i64
  %71 = ptrtoint %"class.spvtools::opt::Instruction"* %65 to i64
  br i1 %66, label %79, label %72

72:                                               ; preds = %61
  br i1 %68, label %73, label %88

73:                                               ; preds = %72
  %74 = bitcast %"class.spvtools::opt::Instruction"** %63 to i64*
  %75 = bitcast %"class.spvtools::opt::Instruction"** %62 to i64*
  store i64 %70, i64* %74, align 8
  store i64 %69, i64* %75, align 8
  %76 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %67, %"class.spvtools::opt::Instruction"* %65) #15
  br i1 %76, label %77, label %88

77:                                               ; preds = %73
  %78 = bitcast %"class.spvtools::opt::Instruction"** %0 to i64*
  store i64 %70, i64* %78, align 8
  store i64 %71, i64* %74, align 8
  br label %88

79:                                               ; preds = %61
  %80 = bitcast %"class.spvtools::opt::Instruction"** %0 to i64*
  br i1 %68, label %81, label %83

81:                                               ; preds = %79
  %82 = bitcast %"class.spvtools::opt::Instruction"** %62 to i64*
  store i64 %70, i64* %80, align 8
  store i64 %71, i64* %82, align 8
  br label %88

83:                                               ; preds = %79
  %84 = bitcast %"class.spvtools::opt::Instruction"** %63 to i64*
  store i64 %69, i64* %80, align 8
  store i64 %71, i64* %84, align 8
  %85 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %67, %"class.spvtools::opt::Instruction"* %65) #15
  br i1 %85, label %86, label %88

86:                                               ; preds = %83
  %87 = bitcast %"class.spvtools::opt::Instruction"** %62 to i64*
  store i64 %70, i64* %84, align 8
  store i64 %71, i64* %87, align 8
  br label %88

88:                                               ; preds = %72, %73, %77, %81, %83, %86
  %89 = phi %"class.spvtools::opt::Instruction"* [ %67, %72 ], [ %64, %73 ], [ %64, %77 ], [ %65, %81 ], [ %67, %83 ], [ %65, %86 ]
  %90 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, i64 3
  %91 = icmp eq %"class.spvtools::opt::Instruction"** %90, %1
  br i1 %91, label %125, label %92

92:                                               ; preds = %88, %120
  %93 = phi %"class.spvtools::opt::Instruction"* [ %121, %120 ], [ %89, %88 ]
  %94 = phi %"class.spvtools::opt::Instruction"** [ %118, %120 ], [ %90, %88 ]
  %95 = phi i32 [ %117, %120 ], [ 0, %88 ]
  %96 = phi %"class.spvtools::opt::Instruction"** [ %94, %120 ], [ %62, %88 ]
  %97 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %94, align 8
  %98 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %97, %"class.spvtools::opt::Instruction"* %93)
  %99 = ptrtoint %"class.spvtools::opt::Instruction"* %97 to i64
  br i1 %98, label %100, label %116

100:                                              ; preds = %92, %107
  %101 = phi %"class.spvtools::opt::Instruction"** [ %102, %107 ], [ %94, %92 ]
  %102 = phi %"class.spvtools::opt::Instruction"** [ %108, %107 ], [ %96, %92 ]
  %103 = bitcast %"class.spvtools::opt::Instruction"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.spvtools::opt::Instruction"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = icmp eq %"class.spvtools::opt::Instruction"** %102, %0
  br i1 %106, label %111, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, i64 -1
  %109 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %108, align 8
  %110 = tail call fastcc zeroext i1 @_ZNK8spvtools3opt12_GLOBAL__N_114DecorationLessclEPKNS0_11InstructionES5_(%"class.spvtools::opt::Instruction"* %97, %"class.spvtools::opt::Instruction"* %109)
  br i1 %110, label %100, label %111

111:                                              ; preds = %100, %107
  %112 = phi %"class.spvtools::opt::Instruction"** [ %102, %107 ], [ %0, %100 ]
  %113 = bitcast %"class.spvtools::opt::Instruction"** %112 to i64*
  store i64 %99, i64* %113, align 8
  %114 = add i32 %95, 1
  %115 = icmp eq i32 %114, 8
  br i1 %115, label %122, label %116

116:                                              ; preds = %111, %92
  %117 = phi i32 [ %114, %111 ], [ %95, %92 ]
  %118 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %94, i64 1
  %119 = icmp eq %"class.spvtools::opt::Instruction"** %118, %1
  br i1 %119, label %125, label %120

120:                                              ; preds = %116
  %121 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %94, align 8
  br label %92

122:                                              ; preds = %111
  %123 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %94, i64 1
  %124 = icmp eq %"class.spvtools::opt::Instruction"** %123, %1
  br label %125

125:                                              ; preds = %116, %122, %88, %47, %43, %41, %35, %29, %28, %7, %12, %2, %2, %55, %50
  %126 = phi i1 [ true, %55 ], [ true, %50 ], [ true, %2 ], [ true, %2 ], [ true, %12 ], [ true, %7 ], [ true, %28 ], [ true, %29 ], [ true, %35 ], [ true, %41 ], [ true, %43 ], [ true, %47 ], [ true, %88 ], [ %124, %122 ], [ true, %116 ]
  ret i1 %126
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"* dereferenceable(48)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spvtools::opt::Operand"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spvtools::opt::Operand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #14
  %30 = bitcast i8* %29 to %"struct.spvtools::opt::Operand"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.spvtools::opt::Operand"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %32
  %36 = ptrtoint %"struct.spvtools::opt::Operand"* %35 to i64
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %40, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 2
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.0"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %41) #15
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %52, align 8
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %55 = icmp eq %"struct.spvtools::opt::Operand"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %31
  %57 = ptrtoint %"struct.spvtools::opt::Operand"* %53 to i64
  br label %80

58:                                               ; preds = %31, %58
  %59 = phi %"struct.spvtools::opt::Operand"* [ %75, %58 ], [ %34, %31 ]
  %60 = phi %"struct.spvtools::opt::Operand"* [ %61, %58 ], [ %54, %31 ]
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 1
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.0"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %66) #15
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1
  %76 = icmp eq %"struct.spvtools::opt::Operand"* %61, %53
  br i1 %76, label %77, label %58

77:                                               ; preds = %58
  %78 = load i64, i64* %6, align 8
  %79 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  br label %80

80:                                               ; preds = %56, %77
  %81 = phi %"struct.spvtools::opt::Operand"* [ %53, %56 ], [ %79, %77 ]
  %82 = phi %"struct.spvtools::opt::Operand"* [ %34, %56 ], [ %75, %77 ]
  %83 = phi i64 [ %57, %56 ], [ %78, %77 ]
  %84 = ptrtoint %"struct.spvtools::opt::Operand"* %82 to i64
  store i64 %84, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %85 = inttoptr i64 %83 to %"struct.spvtools::opt::Operand"*
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %81, %85
  br i1 %86, label %107, label %87

87:                                               ; preds = %80, %105
  %88 = phi %"struct.spvtools::opt::Operand"* [ %89, %105 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %91, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %102) #14
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  tail call void @_ZdlPv(i8* %104) #14
  br label %105

105:                                              ; preds = %103, %87
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %106, label %107, label %87

107:                                              ; preds = %105, %80
  %108 = icmp eq i64 %83, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %110) #14
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1026"*, i8 } @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1022"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i8* %10, i8* %13
  %16 = select i1 %8, i64 %12, i64 %14
  %17 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #15
  %18 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %4, i8* %15, i64 %16) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #15
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.1022", %"class.std::__1::__hash_table.1022"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %112, label %22

22:                                               ; preds = %3
  %23 = call i64 @llvm.ctpop.i64(i64 %20) #15, !range !11
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %26, %18
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.1022", %"class.std::__1::__hash_table.1022"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.1026"**, %"struct.std::__1::__hash_node_base.1026"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.1026"* %37, null
  br i1 %38, label %112, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026", %"struct.std::__1::__hash_node_base.1026"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.1026"* %41, null
  br i1 %42, label %112, label %43

43:                                               ; preds = %39
  %44 = add i64 %20, -1
  %45 = load i8, i8* %6, align 1
  %46 = icmp slt i8 %45, 0
  %47 = load i64, i64* %11, align 8
  %48 = zext i8 %45 to i64
  %49 = select i1 %46, i64 %47, i64 %48
  %50 = load i8*, i8** %9, align 8
  %51 = select i1 %46, i8* %50, i8* %13
  %52 = icmp eq i64 %49, 0
  br label %53

53:                                               ; preds = %43, %96
  %54 = phi %"struct.std::__1::__hash_node_base.1026"* [ %41, %43 ], [ %98, %96 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026", %"struct.std::__1::__hash_node_base.1026"* %54, i64 1
  %56 = bitcast %"struct.std::__1::__hash_node_base.1026"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, %18
  br i1 %58, label %69, label %59

59:                                               ; preds = %53
  br i1 %24, label %62, label %60

60:                                               ; preds = %59
  %61 = and i64 %57, %44
  br label %66

62:                                               ; preds = %59
  %63 = icmp ult i64 %57, %20
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = urem i64 %57, %20
  br label %66

66:                                               ; preds = %60, %62, %64
  %67 = phi i64 [ %61, %60 ], [ %65, %64 ], [ %57, %62 ]
  %68 = icmp eq i64 %67, %33
  br i1 %68, label %69, label %112

69:                                               ; preds = %53, %66
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026", %"struct.std::__1::__hash_node_base.1026"* %54, i64 2
  %71 = bitcast %"struct.std::__1::__hash_node_base.1026"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026", %"struct.std::__1::__hash_node_base.1026"* %54, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base.1026"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = zext i8 %73 to i64
  %79 = select i1 %74, i64 %77, i64 %78
  %80 = icmp eq i64 %79, %49
  br i1 %80, label %81, label %96

81:                                               ; preds = %69
  %82 = bitcast %"struct.std::__1::__hash_node_base.1026"* %70 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = bitcast %"struct.std::__1::__hash_node_base.1026"* %70 to i8*
  %85 = select i1 %74, i8* %83, i8* %84
  br i1 %74, label %92, label %86

86:                                               ; preds = %81
  br i1 %52, label %210, label %87

87:                                               ; preds = %86
  %88 = ptrtoint i8* %83 to i64
  %89 = trunc i64 %88 to i8
  %90 = load i8, i8* %51, align 1
  %91 = icmp eq i8 %90, %89
  br i1 %91, label %100, label %96

92:                                               ; preds = %81
  br i1 %52, label %210, label %93

93:                                               ; preds = %92
  %94 = call i32 @bcmp(i8* %85, i8* %51, i64 %49) #15
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %210, label %96

96:                                               ; preds = %107, %69, %87, %93
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026", %"struct.std::__1::__hash_node_base.1026"* %54, i64 0, i32 0
  %98 = load %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.1026"* %98, null
  br i1 %99, label %112, label %53

100:                                              ; preds = %87, %107
  %101 = phi i64 [ %104, %107 ], [ %78, %87 ]
  %102 = phi i8* [ %105, %107 ], [ %84, %87 ]
  %103 = phi i8* [ %108, %107 ], [ %51, %87 ]
  %104 = add i64 %101, -1
  %105 = getelementptr inbounds i8, i8* %102, i64 1
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %210, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds i8, i8* %103, i64 1
  %109 = load i8, i8* %105, align 1
  %110 = load i8, i8* %108, align 1
  %111 = icmp eq i8 %109, %110
  br i1 %111, label %100, label %96

112:                                              ; preds = %66, %96, %39, %32, %3
  %113 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %39 ], [ %33, %96 ], [ %33, %66 ]
  %114 = call i8* @_Znwm(i64 40) #14, !noalias !104
  %115 = getelementptr inbounds i8, i8* %114, i64 16
  %116 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = load i8, i8* %117, align 1, !noalias !104
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %112
  %121 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %121, i64 24, i1 false) #15, !noalias !104
  br label %128

122:                                              ; preds = %112
  %123 = bitcast i8* %115 to %"class.std::__1::basic_string"*
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8, !noalias !104
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8, !noalias !104
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %123, i8* %125, i64 %127) #15, !noalias !104
  br label %128

128:                                              ; preds = %120, %122
  %129 = getelementptr inbounds i8, i8* %114, i64 8
  %130 = bitcast i8* %129 to i64*
  store i64 %18, i64* %130, align 8, !noalias !104
  %131 = bitcast i8* %114 to %"struct.std::__1::__hash_node_base.1026"**
  store %"struct.std::__1::__hash_node_base.1026"* null, %"struct.std::__1::__hash_node_base.1026"** %131, align 8, !noalias !104
  %132 = getelementptr inbounds %"class.std::__1::__hash_table.1022", %"class.std::__1::__hash_table.1022"* %0, i64 0, i32 2, i32 0, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %133, 1
  %135 = uitofp i64 %134 to float
  %136 = uitofp i64 %20 to float
  %137 = getelementptr inbounds %"class.std::__1::__hash_table.1022", %"class.std::__1::__hash_table.1022"* %0, i64 0, i32 3, i32 0, i32 0
  %138 = load float, float* %137, align 4
  %139 = fmul float %138, %136
  %140 = fcmp olt float %139, %135
  %141 = or i1 %21, %140
  br i1 %141, label %142, label %165

142:                                              ; preds = %128
  %143 = shl i64 %20, 1
  %144 = icmp ult i64 %20, 3
  %145 = call i64 @llvm.ctpop.i64(i64 %20) #15, !range !11
  %146 = icmp ugt i64 %145, 1
  %147 = or i1 %144, %146
  %148 = zext i1 %147 to i64
  %149 = or i64 %143, %148
  %150 = fdiv float %135, %138
  %151 = call float @llvm.ceil.f32(float %150) #15
  %152 = fptoui float %151 to i64
  %153 = icmp ult i64 %149, %152
  %154 = select i1 %153, i64 %152, i64 %149
  call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm(%"class.std::__1::__hash_table.1022"* %0, i64 %154)
  %155 = load i64, i64* %19, align 8
  %156 = call i64 @llvm.ctpop.i64(i64 %155) #15, !range !11
  %157 = icmp ugt i64 %156, 1
  br i1 %157, label %161, label %158

158:                                              ; preds = %142
  %159 = add i64 %155, -1
  %160 = and i64 %159, %18
  br label %165

161:                                              ; preds = %142
  %162 = icmp ult i64 %18, %155
  br i1 %162, label %165, label %163

163:                                              ; preds = %161
  %164 = urem i64 %18, %155
  br label %165

165:                                              ; preds = %163, %161, %158, %128
  %166 = phi i64 [ %20, %128 ], [ %155, %158 ], [ %155, %161 ], [ %155, %163 ]
  %167 = phi i64 [ %113, %128 ], [ %160, %158 ], [ %18, %161 ], [ %164, %163 ]
  %168 = getelementptr inbounds %"class.std::__1::__hash_table.1022", %"class.std::__1::__hash_table.1022"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %169 = load %"struct.std::__1::__hash_node_base.1026"**, %"struct.std::__1::__hash_node_base.1026"*** %168, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %169, i64 %167
  %171 = load %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %170, align 8
  %172 = icmp eq %"struct.std::__1::__hash_node_base.1026"* %171, null
  br i1 %172, label %173, label %199

173:                                              ; preds = %165
  %174 = getelementptr inbounds %"class.std::__1::__hash_table.1022", %"class.std::__1::__hash_table.1022"* %0, i64 0, i32 1, i32 0, i32 0
  %175 = bitcast %"struct.std::__1::__hash_node_base.1026"* %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast i8* %114 to i64*
  store i64 %176, i64* %177, align 8
  %178 = bitcast %"struct.std::__1::__hash_node_base.1026"* %174 to i8**
  store i8* %114, i8** %178, align 8
  store %"struct.std::__1::__hash_node_base.1026"* %174, %"struct.std::__1::__hash_node_base.1026"** %170, align 8
  %179 = load %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %131, align 8
  %180 = icmp eq %"struct.std::__1::__hash_node_base.1026"* %179, null
  br i1 %180, label %206, label %181

181:                                              ; preds = %173
  %182 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026", %"struct.std::__1::__hash_node_base.1026"* %179, i64 1
  %183 = bitcast %"struct.std::__1::__hash_node_base.1026"* %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = call i64 @llvm.ctpop.i64(i64 %166) #15, !range !11
  %186 = icmp ugt i64 %185, 1
  br i1 %186, label %190, label %187

187:                                              ; preds = %181
  %188 = add i64 %166, -1
  %189 = and i64 %184, %188
  br label %194

190:                                              ; preds = %181
  %191 = icmp ult i64 %184, %166
  br i1 %191, label %194, label %192

192:                                              ; preds = %190
  %193 = urem i64 %184, %166
  br label %194

194:                                              ; preds = %187, %190, %192
  %195 = phi i64 [ %189, %187 ], [ %193, %192 ], [ %184, %190 ]
  %196 = load %"struct.std::__1::__hash_node_base.1026"**, %"struct.std::__1::__hash_node_base.1026"*** %168, align 8
  %197 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %196, i64 %195
  %198 = bitcast %"struct.std::__1::__hash_node_base.1026"** %197 to i8**
  br label %204

199:                                              ; preds = %165
  %200 = bitcast %"struct.std::__1::__hash_node_base.1026"* %171 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = bitcast i8* %114 to i64*
  store i64 %201, i64* %202, align 8
  %203 = bitcast %"struct.std::__1::__hash_node_base.1026"* %171 to i8**
  br label %204

204:                                              ; preds = %194, %199
  %205 = phi i8** [ %203, %199 ], [ %198, %194 ]
  store i8* %114, i8** %205, align 8
  br label %206

206:                                              ; preds = %204, %173
  %207 = bitcast i8* %114 to %"struct.std::__1::__hash_node_base.1026"*
  %208 = load i64, i64* %132, align 8
  %209 = add i64 %208, 1
  store i64 %209, i64* %132, align 8
  br label %210

210:                                              ; preds = %86, %92, %93, %100, %206
  %211 = phi i8 [ 1, %206 ], [ 0, %100 ], [ 0, %93 ], [ 0, %92 ], [ 0, %86 ]
  %212 = phi %"struct.std::__1::__hash_node_base.1026"* [ %207, %206 ], [ %54, %100 ], [ %54, %93 ], [ %54, %92 ], [ %54, %86 ]
  %213 = insertvalue { %"struct.std::__1::__hash_node_base.1026"*, i8 } undef, %"struct.std::__1::__hash_node_base.1026"* %212, 0
  %214 = insertvalue { %"struct.std::__1::__hash_node_base.1026"*, i8 } %213, i8 %211, 1
  ret { %"struct.std::__1::__hash_node_base.1026"*, i8 } %214
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm(%"class.std::__1::__hash_table.1022"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !11
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #15
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1022", %"class.std::__1::__hash_table.1022"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1022"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !11
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1022", %"class.std::__1::__hash_table.1022"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1022", %"class.std::__1::__hash_table.1022"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #15
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #15, !range !11
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #15
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1022"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1022"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1022", %"class.std::__1::__hash_table.1022"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %186, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #16
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1022", %"class.std::__1::__hash_table.1022"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1026"**, %"struct.std::__1::__hash_node_base.1026"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1022"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1026"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1026"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1028", %"class.std::__1::__bucket_list_deallocator.1028"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1026"**, %"struct.std::__1::__hash_node_base.1026"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1026"* null, %"struct.std::__1::__hash_node_base.1026"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !107

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1022", %"class.std::__1::__hash_table.1022"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026", %"struct.std::__1::__hash_node_base.1026"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1026"* %38, null
  br i1 %39, label %194, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1026"**, %"struct.std::__1::__hash_node_base.1026"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1026"* null, %"struct.std::__1::__hash_node_base.1026"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1026"**, %"struct.std::__1::__hash_node_base.1026"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1026"* null, %"struct.std::__1::__hash_node_base.1026"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1026"**, %"struct.std::__1::__hash_node_base.1026"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1026"* null, %"struct.std::__1::__hash_node_base.1026"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1026"**, %"struct.std::__1::__hash_node_base.1026"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1026"* null, %"struct.std::__1::__hash_node_base.1026"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026", %"struct.std::__1::__hash_node_base.1026"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1026"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #15, !range !11
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1026"**, %"struct.std::__1::__hash_node_base.1026"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1026"* %36, %"struct.std::__1::__hash_node_base.1026"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026", %"struct.std::__1::__hash_node_base.1026"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1026"* %75, null
  br i1 %76, label %194, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %180
  %80 = phi %"struct.std::__1::__hash_node_base.1026"* [ %75, %77 ], [ %184, %180 ]
  %81 = phi i64 [ %71, %77 ], [ %182, %180 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1026"* [ %38, %77 ], [ %181, %180 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026", %"struct.std::__1::__hash_node_base.1026"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1026"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %180, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.1026"**, %"struct.std::__1::__hash_node_base.1026"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.1026"* %98, null
  br i1 %99, label %118, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026", %"struct.std::__1::__hash_node_base.1026"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.1026"* %102, null
  br i1 %103, label %166, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026", %"struct.std::__1::__hash_node_base.1026"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base.1026"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026", %"struct.std::__1::__hash_node_base.1026"* %80, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base.1026"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = bitcast %"struct.std::__1::__hash_node_base.1026"* %105 to i8**
  %116 = bitcast %"struct.std::__1::__hash_node_base.1026"* %105 to i8*
  %117 = icmp eq i64 %114, 0
  br label %119

118:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.1026"* %82, %"struct.std::__1::__hash_node_base.1026"** %97, align 8
  br label %180

119:                                              ; preds = %104, %162
  %120 = phi %"struct.std::__1::__hash_node_base.1026"* [ %102, %104 ], [ %164, %162 ]
  %121 = phi %"struct.std::__1::__hash_node_base.1026"* [ %80, %104 ], [ %120, %162 ]
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026", %"struct.std::__1::__hash_node_base.1026"* %120, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base.1026"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026", %"struct.std::__1::__hash_node_base.1026"* %120, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base.1026"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %114, %131
  br i1 %132, label %133, label %166

133:                                              ; preds = %119
  %134 = load i8*, i8** %115, align 8
  %135 = select i1 %109, i8* %134, i8* %116
  %136 = bitcast %"struct.std::__1::__hash_node_base.1026"* %122 to i8**
  %137 = load i8*, i8** %136, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base.1026"* %122 to i8*
  %139 = select i1 %126, i8* %137, i8* %138
  br i1 %109, label %146, label %140

140:                                              ; preds = %133
  br i1 %117, label %162, label %141

141:                                              ; preds = %140
  %142 = ptrtoint i8* %134 to i64
  %143 = trunc i64 %142 to i8
  %144 = load i8, i8* %139, align 1
  %145 = icmp eq i8 %144, %143
  br i1 %145, label %147, label %166

146:                                              ; preds = %133
  br i1 %117, label %162, label %159

147:                                              ; preds = %141, %154
  %148 = phi i64 [ %151, %154 ], [ %113, %141 ]
  %149 = phi i8* [ %152, %154 ], [ %116, %141 ]
  %150 = phi i8* [ %155, %154 ], [ %139, %141 ]
  %151 = add i64 %148, -1
  %152 = getelementptr inbounds i8, i8* %149, i64 1
  %153 = icmp eq i64 %151, 0
  br i1 %153, label %162, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds i8, i8* %150, i64 1
  %156 = load i8, i8* %152, align 1
  %157 = load i8, i8* %155, align 1
  %158 = icmp eq i8 %156, %157
  br i1 %158, label %147, label %166

159:                                              ; preds = %146
  %160 = tail call i32 @bcmp(i8* %135, i8* %139, i64 %114) #15
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %166

162:                                              ; preds = %147, %140, %146, %159
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026", %"struct.std::__1::__hash_node_base.1026"* %120, i64 0, i32 0
  %164 = load %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base.1026"* %164, null
  br i1 %165, label %166, label %119

166:                                              ; preds = %159, %162, %119, %141, %154, %100
  %167 = phi %"struct.std::__1::__hash_node_base.1026"* [ %80, %100 ], [ %121, %154 ], [ %121, %141 ], [ %121, %159 ], [ %120, %162 ], [ %121, %119 ]
  %168 = bitcast %"struct.std::__1::__hash_node_base.1026"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"struct.std::__1::__hash_node_base.1026"* %82 to i64*
  store i64 %169, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base.1026"**, %"struct.std::__1::__hash_node_base.1026"*** %11, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %171, i64 %93
  %173 = bitcast %"struct.std::__1::__hash_node_base.1026"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %168, align 8
  %176 = load %"struct.std::__1::__hash_node_base.1026"**, %"struct.std::__1::__hash_node_base.1026"*** %11, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %176, i64 %93
  %178 = load %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026", %"struct.std::__1::__hash_node_base.1026"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1026"* %80, %"struct.std::__1::__hash_node_base.1026"** %179, align 8
  br label %180

180:                                              ; preds = %92, %166, %118
  %181 = phi %"struct.std::__1::__hash_node_base.1026"* [ %80, %118 ], [ %82, %166 ], [ %80, %92 ]
  %182 = phi i64 [ %93, %118 ], [ %81, %166 ], [ %81, %92 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1026", %"struct.std::__1::__hash_node_base.1026"* %181, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base.1026"*, %"struct.std::__1::__hash_node_base.1026"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base.1026"* %184, null
  br i1 %185, label %194, label %79

186:                                              ; preds = %2
  %187 = getelementptr inbounds %"class.std::__1::__hash_table.1022", %"class.std::__1::__hash_table.1022"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %"struct.std::__1::__hash_node_base.1026"**, %"struct.std::__1::__hash_node_base.1026"*** %187, align 8
  store %"struct.std::__1::__hash_node_base.1026"** null, %"struct.std::__1::__hash_node_base.1026"*** %187, align 8
  %189 = icmp eq %"struct.std::__1::__hash_node_base.1026"** %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %186
  %191 = bitcast %"struct.std::__1::__hash_node_base.1026"** %188 to i8*
  tail call void @_ZdlPv(i8* %191) #14
  br label %192

192:                                              ; preds = %186, %190
  %193 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1028", %"class.std::__1::__bucket_list_deallocator.1028"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %193, align 8
  br label %194

194:                                              ; preds = %180, %70, %35, %192
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #7

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind readonly }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!6 = distinct !{!6, !7, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass9AddStoresEPNS5_8FunctionEjE3$_0FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass9AddStoresEPNS5_8FunctionEjE3$_0FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!10 = distinct !{!10, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!11 = !{i64 0, i64 65}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = distinct !{!14, !13}
!15 = distinct !{!15, !13}
!16 = distinct !{!16, !13}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!19 = distinct !{!19, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!20 = distinct !{!20, !13}
!21 = !{!22, !24}
!22 = distinct !{!22, !23, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!24 = distinct !{!24, !25, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass13AggressiveDCEEPNS5_8FunctionEE3$_7FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!25 = distinct !{!25, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass13AggressiveDCEEPNS5_8FunctionEE3$_7FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!28 = distinct !{!28, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!29 = !{!30, !32, !34}
!30 = distinct !{!30, !31, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv: argument 0"}
!31 = distinct !{!31, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv"}
!32 = distinct !{!32, !33, !"_ZN8spvtools3opt15InstructionList5beginEv: argument 0"}
!33 = distinct !{!33, !"_ZN8spvtools3opt15InstructionList5beginEv"}
!34 = distinct !{!34, !35, !"_ZN8spvtools3opt6Module12debug2_beginEv: argument 0"}
!35 = distinct !{!35, !"_ZN8spvtools3opt6Module12debug2_beginEv"}
!36 = distinct !{!36, !13}
!37 = distinct !{!37, !13}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!40 = distinct !{!40, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!41 = distinct !{!41, !13}
!42 = distinct !{!42, !13}
!43 = distinct !{!43, !13}
!44 = distinct !{!44, !13}
!45 = distinct !{!45, !13}
!46 = distinct !{!46, !13}
!47 = distinct !{!47, !13}
!48 = !{!49}
!49 = distinct !{!49, !50}
!50 = distinct !{!50, !"LVerDomain"}
!51 = !{!52}
!52 = distinct !{!52, !50}
!53 = distinct !{!53, !54}
!54 = !{!"llvm.loop.isvectorized", i32 1}
!55 = distinct !{!55, !54}
!56 = !{!57}
!57 = distinct !{!57, !58}
!58 = distinct !{!58, !"LVerDomain"}
!59 = !{!60}
!60 = distinct !{!60, !58}
!61 = distinct !{!61, !54}
!62 = distinct !{!62, !13}
!63 = distinct !{!63, !54}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_: argument 0"}
!66 = distinct !{!66, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_"}
!67 = distinct !{!67, !13}
!68 = !{!69, !71}
!69 = distinct !{!69, !70, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!70 = distinct !{!70, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!71 = distinct !{!71, !72, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass9AddStoresEPNS5_8FunctionEjE3$_0FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!72 = distinct !{!72, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass9AddStoresEPNS5_8FunctionEjE3$_0FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!73 = !{!74}
!74 = distinct !{!74, !75, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!75 = distinct !{!75, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
!76 = distinct !{!76, !13}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!79 = distinct !{!79, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
!80 = distinct !{!80, !13}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!83 = distinct !{!83, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!84 = distinct !{!84, !13}
!85 = distinct !{!85, !13}
!86 = distinct !{!86, !13}
!87 = distinct !{!87, !13}
!88 = distinct !{!88, !13}
!89 = distinct !{!89, !13}
!90 = distinct !{!90, !13}
!91 = distinct !{!91, !13}
!92 = distinct !{!92, !13}
!93 = distinct !{!93, !13}
!94 = distinct !{!94, !13}
!95 = !{!96, !98}
!96 = distinct !{!96, !97, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!97 = distinct !{!97, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!98 = distinct !{!98, !99, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass13AggressiveDCEEPNS5_8FunctionEE3$_7FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!99 = distinct !{!99, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt17AggressiveDCEPass13AggressiveDCEEPNS5_8FunctionEE3$_7FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!100 = !{!101}
!101 = distinct !{!101, !102, !"_ZNSt3__112__hash_tableIPKN8spvtools3opt8FunctionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE21__construct_node_hashIS5_JEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSA_ISH_EEEEEEmOT_DpOT0_: argument 0"}
!102 = distinct !{!102, !"_ZNSt3__112__hash_tableIPKN8spvtools3opt8FunctionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE21__construct_node_hashIS5_JEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSA_ISH_EEEEEEmOT_DpOT0_"}
!103 = distinct !{!103, !13}
!104 = !{!105}
!105 = distinct !{!105, !106, !"_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE21__construct_node_hashIRKS6_JEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS4_ISJ_EEEEEEmOT_DpOT0_: argument 0"}
!106 = distinct !{!106, !"_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE21__construct_node_hashIRKS6_JEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS4_ISJ_EEEEEEmOT_DpOT0_"}
!107 = distinct !{!107, !13}
