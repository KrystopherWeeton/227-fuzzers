; ModuleID = '../../courgette/streams.cc'
source_filename = "../../courgette/streams.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.courgette::SourceStreamSet" = type { i64, [10 x %"class.courgette::SourceStream"] }
%"class.courgette::SourceStream" = type { i8*, i8*, i8* }
%"class.courgette::SinkStreamSet" = type { i64, [10 x %"class.courgette::SinkStream"] }
%"class.courgette::SinkStream" = type { %"class.courgette::NoThrowBuffer" }
%"class.courgette::NoThrowBuffer" = type <{ i8*, i64, i64, %"class.courgette::MemoryAllocator", [7 x i8] }>
%"class.courgette::MemoryAllocator" = type { i8 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN9courgette13NoThrowBufferIcNS_15MemoryAllocatorIcEEE6appendEPKcm = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [27 x i8] c"../../courgette/streams.cc\00", align 1
@.str.1 = private unnamed_addr constant [41 x i8] c"Assert failed: value == narrowed_value. \00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN9courgette15SourceStreamSetC1Ev = hidden unnamed_addr alias void (%"class.courgette::SourceStreamSet"*), void (%"class.courgette::SourceStreamSet"*)* @_ZN9courgette15SourceStreamSetC2Ev
@_ZN9courgette15SourceStreamSetD1Ev = hidden unnamed_addr alias void (%"class.courgette::SourceStreamSet"*), void (%"class.courgette::SourceStreamSet"*)* @_ZN9courgette15SourceStreamSetD2Ev
@_ZN9courgette13SinkStreamSetC1Ev = hidden unnamed_addr alias void (%"class.courgette::SinkStreamSet"*), void (%"class.courgette::SinkStreamSet"*)* @_ZN9courgette13SinkStreamSetC2Ev
@_ZN9courgette13SinkStreamSetD1Ev = hidden unnamed_addr alias void (%"class.courgette::SinkStreamSet"*), void (%"class.courgette::SinkStreamSet"*)* @_ZN9courgette13SinkStreamSetD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_ZN9courgette6Varint16Parse32WithLimitEPKhS2_Pj(i8* readonly, i8* readnone, i32* nocapture) local_unnamed_addr #0 align 2 {
  %4 = icmp ult i8* %0, %1
  br i1 %4, label %5, label %55

5:                                                ; preds = %3
  %6 = getelementptr inbounds i8, i8* %0, i64 1
  %7 = load i8, i8* %0, align 1
  %8 = and i8 %7, 127
  %9 = zext i8 %8 to i32
  %10 = icmp sgt i8 %7, -1
  br i1 %10, label %11, label %12

11:                                               ; preds = %5
  store i32 %9, i32* %2, align 4
  br label %55

12:                                               ; preds = %5
  %13 = icmp ult i8* %6, %1
  br i1 %13, label %14, label %55

14:                                               ; preds = %12
  %15 = getelementptr inbounds i8, i8* %0, i64 2
  %16 = load i8, i8* %6, align 1
  %17 = zext i8 %16 to i32
  %18 = shl nuw nsw i32 %17, 7
  %19 = and i32 %18, 16256
  %20 = or i32 %19, %9
  %21 = icmp sgt i8 %16, -1
  br i1 %21, label %22, label %23

22:                                               ; preds = %14
  store i32 %20, i32* %2, align 4
  br label %55

23:                                               ; preds = %14
  %24 = icmp ult i8* %15, %1
  br i1 %24, label %25, label %55

25:                                               ; preds = %23
  %26 = getelementptr inbounds i8, i8* %0, i64 3
  %27 = load i8, i8* %15, align 1
  %28 = zext i8 %27 to i32
  %29 = shl nuw nsw i32 %28, 14
  %30 = and i32 %29, 2080768
  %31 = or i32 %30, %20
  %32 = icmp sgt i8 %27, -1
  br i1 %32, label %33, label %34

33:                                               ; preds = %25
  store i32 %31, i32* %2, align 4
  br label %55

34:                                               ; preds = %25
  %35 = icmp ult i8* %26, %1
  br i1 %35, label %36, label %55

36:                                               ; preds = %34
  %37 = getelementptr inbounds i8, i8* %0, i64 4
  %38 = load i8, i8* %26, align 1
  %39 = zext i8 %38 to i32
  %40 = shl nuw nsw i32 %39, 21
  %41 = and i32 %40, 266338304
  %42 = or i32 %41, %31
  %43 = icmp sgt i8 %38, -1
  br i1 %43, label %44, label %45

44:                                               ; preds = %36
  store i32 %42, i32* %2, align 4
  br label %55

45:                                               ; preds = %36
  %46 = icmp ult i8* %37, %1
  br i1 %46, label %47, label %55

47:                                               ; preds = %45
  %48 = load i8, i8* %37, align 1
  %49 = icmp sgt i8 %48, -1
  br i1 %49, label %50, label %55

50:                                               ; preds = %47
  %51 = zext i8 %48 to i32
  %52 = shl i32 %51, 28
  %53 = or i32 %52, %42
  %54 = getelementptr inbounds i8, i8* %0, i64 5
  store i32 %53, i32* %2, align 4
  br label %55

55:                                               ; preds = %47, %45, %34, %23, %12, %3, %50, %44, %33, %22, %11
  %56 = phi i8* [ %6, %11 ], [ %15, %22 ], [ %26, %33 ], [ %37, %44 ], [ %54, %50 ], [ null, %3 ], [ null, %12 ], [ null, %23 ], [ null, %34 ], [ null, %45 ], [ null, %47 ]
  ret i8* %56
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN9courgette12SourceStream4InitERKNS_10SinkStreamE(%"class.courgette::SourceStream"* nocapture, %"class.courgette::SinkStream"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %1, i64 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %1, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %0, i64 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 %6
  %9 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %0, i64 0, i32 1
  store i8* %8, i8** %9, align 8
  %10 = ptrtoint i8* %4 to i64
  %11 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %0, i64 0, i32 2
  %12 = bitcast i8** %11 to i64*
  store i64 %10, i64* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette12SourceStream4ReadEPvm(%"class.courgette::SourceStream"* nocapture, i8* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %0, i64 0, i32 2
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 %2
  %7 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %0, i64 0, i32 1
  %8 = load i8*, i8** %7, align 8
  %9 = icmp ugt i8* %6, %8
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %5, i64 %2, i1 false)
  %11 = load i8*, i8** %4, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %2
  store i8* %12, i8** %4, align 8
  br label %13

13:                                               ; preds = %3, %10
  %14 = phi i1 [ true, %10 ], [ false, %3 ]
  ret i1 %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette12SourceStream12ReadVarint32EPj(%"class.courgette::SourceStream"* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %0, i64 0, i32 2
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %0, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %8, label %59

8:                                                ; preds = %2
  %9 = getelementptr inbounds i8, i8* %4, i64 1
  %10 = load i8, i8* %4, align 1
  %11 = and i8 %10, 127
  %12 = zext i8 %11 to i32
  %13 = icmp sgt i8 %10, -1
  br i1 %13, label %54, label %14

14:                                               ; preds = %8
  %15 = icmp ult i8* %9, %6
  br i1 %15, label %16, label %59

16:                                               ; preds = %14
  %17 = getelementptr inbounds i8, i8* %4, i64 2
  %18 = load i8, i8* %9, align 1
  %19 = zext i8 %18 to i32
  %20 = shl nuw nsw i32 %19, 7
  %21 = and i32 %20, 16256
  %22 = or i32 %21, %12
  %23 = icmp sgt i8 %18, -1
  br i1 %23, label %54, label %24

24:                                               ; preds = %16
  %25 = icmp ult i8* %17, %6
  br i1 %25, label %26, label %59

26:                                               ; preds = %24
  %27 = getelementptr inbounds i8, i8* %4, i64 3
  %28 = load i8, i8* %17, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 14
  %31 = and i32 %30, 2080768
  %32 = or i32 %31, %22
  %33 = icmp sgt i8 %28, -1
  br i1 %33, label %54, label %34

34:                                               ; preds = %26
  %35 = icmp ult i8* %27, %6
  br i1 %35, label %36, label %59

36:                                               ; preds = %34
  %37 = getelementptr inbounds i8, i8* %4, i64 4
  %38 = load i8, i8* %27, align 1
  %39 = zext i8 %38 to i32
  %40 = shl nuw nsw i32 %39, 21
  %41 = and i32 %40, 266338304
  %42 = or i32 %41, %32
  %43 = icmp sgt i8 %38, -1
  br i1 %43, label %54, label %44

44:                                               ; preds = %36
  %45 = icmp ult i8* %37, %6
  br i1 %45, label %46, label %59

46:                                               ; preds = %44
  %47 = load i8, i8* %37, align 1
  %48 = icmp sgt i8 %47, -1
  br i1 %48, label %49, label %59

49:                                               ; preds = %46
  %50 = zext i8 %47 to i32
  %51 = shl i32 %50, 28
  %52 = or i32 %51, %42
  %53 = getelementptr inbounds i8, i8* %4, i64 5
  br label %54

54:                                               ; preds = %36, %26, %16, %8, %49
  %55 = phi i32 [ %52, %49 ], [ %12, %8 ], [ %22, %16 ], [ %32, %26 ], [ %42, %36 ]
  %56 = phi i8* [ %53, %49 ], [ %9, %8 ], [ %17, %16 ], [ %27, %26 ], [ %37, %36 ]
  store i32 %55, i32* %1, align 4
  %57 = icmp eq i8* %56, null
  br i1 %57, label %59, label %58

58:                                               ; preds = %54
  store i8* %56, i8** %3, align 8
  br label %59

59:                                               ; preds = %46, %44, %34, %24, %14, %2, %54, %58
  %60 = phi i1 [ true, %58 ], [ false, %54 ], [ false, %2 ], [ false, %14 ], [ false, %24 ], [ false, %34 ], [ false, %44 ], [ false, %46 ]
  ret i1 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette12SourceStream18ReadVarint32SignedEPi(%"class.courgette::SourceStream"* nocapture, i32* nocapture) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %0, i64 0, i32 2
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %0, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %8, label %63

8:                                                ; preds = %2
  %9 = getelementptr inbounds i8, i8* %4, i64 1
  %10 = load i8, i8* %4, align 1
  %11 = and i8 %10, 127
  %12 = zext i8 %11 to i32
  %13 = icmp sgt i8 %10, -1
  br i1 %13, label %54, label %14

14:                                               ; preds = %8
  %15 = icmp ult i8* %9, %6
  br i1 %15, label %16, label %63

16:                                               ; preds = %14
  %17 = getelementptr inbounds i8, i8* %4, i64 2
  %18 = load i8, i8* %9, align 1
  %19 = zext i8 %18 to i32
  %20 = shl nuw nsw i32 %19, 7
  %21 = and i32 %20, 16256
  %22 = or i32 %21, %12
  %23 = icmp sgt i8 %18, -1
  br i1 %23, label %54, label %24

24:                                               ; preds = %16
  %25 = icmp ult i8* %17, %6
  br i1 %25, label %26, label %63

26:                                               ; preds = %24
  %27 = getelementptr inbounds i8, i8* %4, i64 3
  %28 = load i8, i8* %17, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 14
  %31 = and i32 %30, 2080768
  %32 = or i32 %31, %22
  %33 = icmp sgt i8 %28, -1
  br i1 %33, label %54, label %34

34:                                               ; preds = %26
  %35 = icmp ult i8* %27, %6
  br i1 %35, label %36, label %63

36:                                               ; preds = %34
  %37 = getelementptr inbounds i8, i8* %4, i64 4
  %38 = load i8, i8* %27, align 1
  %39 = zext i8 %38 to i32
  %40 = shl nuw nsw i32 %39, 21
  %41 = and i32 %40, 266338304
  %42 = or i32 %41, %32
  %43 = icmp sgt i8 %38, -1
  br i1 %43, label %54, label %44

44:                                               ; preds = %36
  %45 = icmp ult i8* %37, %6
  br i1 %45, label %46, label %63

46:                                               ; preds = %44
  %47 = load i8, i8* %37, align 1
  %48 = icmp sgt i8 %47, -1
  br i1 %48, label %49, label %63

49:                                               ; preds = %46
  %50 = zext i8 %47 to i32
  %51 = shl i32 %50, 28
  %52 = or i32 %51, %42
  %53 = getelementptr inbounds i8, i8* %4, i64 5
  br label %54

54:                                               ; preds = %36, %26, %16, %8, %49
  %55 = phi i32 [ %52, %49 ], [ %12, %8 ], [ %22, %16 ], [ %32, %26 ], [ %42, %36 ]
  %56 = phi i8* [ %53, %49 ], [ %9, %8 ], [ %17, %16 ], [ %27, %26 ], [ %37, %36 ]
  %57 = icmp eq i8* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %54
  store i8* %56, i8** %3, align 8
  %59 = lshr i32 %55, 1
  %60 = shl i32 %55, 31
  %61 = ashr exact i32 %60, 31
  %62 = xor i32 %61, %59
  store i32 %62, i32* %1, align 4
  br label %63

63:                                               ; preds = %46, %44, %34, %24, %14, %2, %54, %58
  %64 = phi i1 [ true, %58 ], [ false, %54 ], [ false, %2 ], [ false, %14 ], [ false, %24 ], [ false, %34 ], [ false, %44 ], [ false, %46 ]
  ret i1 %64
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette12SourceStream14ShareSubstreamEmmPS0_(%"class.courgette::SourceStream"* nocapture readonly, i64, i64, %"class.courgette::SourceStream"* nocapture) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %0, i64 0, i32 1
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %0, i64 0, i32 2
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %7, %10
  %12 = icmp ult i64 %11, %1
  %13 = sub i64 %11, %1
  %14 = icmp ult i64 %13, %2
  %15 = or i1 %12, %14
  br i1 %15, label %25, label %16

16:                                               ; preds = %4
  %17 = inttoptr i64 %10 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 %1
  %19 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %3, i64 0, i32 0
  store i8* %18, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %18, i64 %2
  %21 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %3, i64 0, i32 1
  store i8* %20, i8** %21, align 8
  %22 = ptrtoint i8* %18 to i64
  %23 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %3, i64 0, i32 2
  %24 = bitcast i8** %23 to i64*
  store i64 %22, i64* %24, align 8
  br label %25

25:                                               ; preds = %4, %16
  %26 = phi i1 [ true, %16 ], [ false, %4 ]
  ret i1 %26
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette12SourceStream13ReadSubstreamEmPS0_(%"class.courgette::SourceStream"* nocapture, i64, %"class.courgette::SourceStream"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %0, i64 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %0, i64 0, i32 2
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %21, label %12

12:                                               ; preds = %3
  %13 = inttoptr i64 %9 to i8*
  %14 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %2, i64 0, i32 0
  store i8* %13, i8** %14, align 8
  %15 = getelementptr inbounds i8, i8* %13, i64 %1
  %16 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %2, i64 0, i32 1
  store i8* %15, i8** %16, align 8
  %17 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %2, i64 0, i32 2
  %18 = bitcast i8** %17 to i64*
  store i64 %9, i64* %18, align 8
  %19 = load i8*, i8** %7, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %1
  store i8* %20, i8** %7, align 8
  br label %21

21:                                               ; preds = %3, %12
  %22 = phi i1 [ true, %12 ], [ false, %3 ]
  ret i1 %22
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette12SourceStream4SkipEm(%"class.courgette::SourceStream"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %0, i64 0, i32 2
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  %6 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %0, i64 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %5, %7
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  store i8* %5, i8** %3, align 8
  br label %10

10:                                               ; preds = %2, %9
  %11 = phi i1 [ true, %9 ], [ false, %2 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette10SinkStream5WriteEPKvm(%"class.courgette::SinkStream"*, i8*, i64) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %0, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZN9courgette13NoThrowBufferIcNS_15MemoryAllocatorIcEEE6appendEPKcm(%"class.courgette::NoThrowBuffer"* %4, i8* %1, i64 %2)
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN9courgette13NoThrowBufferIcNS_15MemoryAllocatorIcEEE6appendEPKcm(%"class.courgette::NoThrowBuffer"*, i8*, i64) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca i8*, align 8
  %5 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 4294967295
  br i1 %7, label %64, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = xor i64 %10, -1
  %12 = icmp ult i64 %11, %2
  br i1 %12, label %64, label %13

13:                                               ; preds = %8
  %14 = icmp eq i64 %2, 0
  br i1 %14, label %64, label %15

15:                                               ; preds = %13
  %16 = sub i64 %6, %10
  %17 = icmp ult i64 %16, %2
  br i1 %17, label %18, label %57

18:                                               ; preds = %15
  %19 = icmp eq i64 %6, 0
  %20 = select i1 %19, i64 256, i64 %6
  %21 = add i64 %10, %2
  %22 = icmp ult i64 %20, %21
  br i1 %22, label %23, label %30

23:                                               ; preds = %18, %23
  %24 = phi i64 [ %27, %23 ], [ %20, %18 ]
  %25 = xor i64 %24, -1
  %26 = icmp ult i64 %24, %25
  %27 = shl i64 %24, 1
  %28 = select i1 %26, i64 %27, i64 -1
  %29 = icmp ult i64 %28, %21
  br i1 %29, label %23, label %30

30:                                               ; preds = %23, %18
  %31 = phi i64 [ %20, %18 ], [ %28, %23 ]
  %32 = icmp ult i64 %6, %31
  br i1 %32, label %33, label %57

33:                                               ; preds = %30
  %34 = icmp ugt i64 %31, 256
  %35 = select i1 %34, i64 %31, i64 256
  %36 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  store i8* null, i8** %4, align 8
  %37 = call zeroext i1 @_ZN4base15UncheckedMallocEmPPv(i64 %35, i8** nonnull %4) #10
  %38 = load i8*, i8** %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  %39 = icmp eq i8* %38, null
  %40 = xor i1 %37, true
  %41 = or i1 %39, %40
  %42 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %0, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = icmp eq i8* %43, null
  br i1 %41, label %45, label %48

45:                                               ; preds = %33
  br i1 %44, label %52, label %46

46:                                               ; preds = %45
  call void @free(i8* nonnull %43) #10
  %47 = bitcast %"class.courgette::NoThrowBuffer"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #10
  br label %52

48:                                               ; preds = %33
  br i1 %44, label %53, label %49

49:                                               ; preds = %48
  %50 = load i64, i64* %9, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %38, i8* nonnull align 1 %43, i64 %50, i1 false) #10
  %51 = load i8*, i8** %42, align 8
  call void @free(i8* %51) #10
  br label %53

52:                                               ; preds = %45, %46
  store i64 4294967295, i64* %5, align 8
  br label %64

53:                                               ; preds = %48, %49
  store i8* %38, i8** %42, align 8
  store i64 %35, i64* %5, align 8
  %54 = icmp eq i64 %35, 4294967295
  br i1 %54, label %64, label %55

55:                                               ; preds = %53
  %56 = load i64, i64* %9, align 8
  br label %57

57:                                               ; preds = %55, %30, %15
  %58 = phi i64 [ %56, %55 ], [ %10, %30 ], [ %10, %15 ]
  %59 = getelementptr inbounds %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer"* %0, i64 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds i8, i8* %60, i64 %58
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %61, i8* align 1 %1, i64 %2, i1 false)
  %62 = load i64, i64* %9, align 8
  %63 = add i64 %62, %2
  store i64 %63, i64* %9, align 8
  br label %64

64:                                               ; preds = %53, %52, %13, %8, %3, %57
  %65 = phi i1 [ true, %57 ], [ false, %3 ], [ false, %8 ], [ true, %13 ], [ false, %53 ], [ false, %52 ]
  ret i1 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette10SinkStream13WriteVarint32Ej(%"class.courgette::SinkStream"*, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca [5 x i8], align 1
  %4 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %4) #10
  %5 = icmp ugt i32 %1, 127
  %6 = trunc i32 %1 to i8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %4, i8 -86, i64 5, i1 false)
  br i1 %5, label %7, label %18

7:                                                ; preds = %2, %7
  %8 = phi i8 [ %15, %7 ], [ %6, %2 ]
  %9 = phi i32 [ %13, %7 ], [ %1, %2 ]
  %10 = phi i8* [ %12, %7 ], [ %4, %2 ]
  %11 = or i8 %8, -128
  %12 = getelementptr inbounds i8, i8* %10, i64 1
  store i8 %11, i8* %10, align 1
  %13 = lshr i32 %9, 7
  %14 = icmp ugt i32 %9, 16383
  %15 = trunc i32 %13 to i8
  br i1 %14, label %7, label %16

16:                                               ; preds = %7
  %17 = trunc i32 %13 to i8
  br label %18

18:                                               ; preds = %16, %2
  %19 = phi i8* [ %4, %2 ], [ %12, %16 ]
  %20 = phi i8 [ %6, %2 ], [ %17, %16 ]
  %21 = getelementptr inbounds i8, i8* %19, i64 1
  store i8 %20, i8* %19, align 1
  %22 = ptrtoint i8* %21 to i64
  %23 = ptrtoint [5 x i8]* %3 to i64
  %24 = sub i64 %22, %23
  %25 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %0, i64 0, i32 0
  %26 = call zeroext i1 @_ZN9courgette13NoThrowBufferIcNS_15MemoryAllocatorIcEEE6appendEPKcm(%"class.courgette::NoThrowBuffer"* %25, i8* nonnull %4, i64 %24) #10
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %4) #10
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette10SinkStream19WriteVarint32SignedEi(%"class.courgette::SinkStream"*, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca [5 x i8], align 1
  %4 = icmp slt i32 %1, 0
  %5 = shl i32 %1, 1
  br i1 %4, label %6, label %25

6:                                                ; preds = %2
  %7 = xor i32 %5, -1
  %8 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %8) #10
  %9 = icmp ult i32 %5, -128
  %10 = trunc i32 %7 to i8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %8, i8 -86, i64 5, i1 false) #10
  br i1 %9, label %11, label %22

11:                                               ; preds = %6, %11
  %12 = phi i8 [ %19, %11 ], [ %10, %6 ]
  %13 = phi i32 [ %17, %11 ], [ %7, %6 ]
  %14 = phi i8* [ %16, %11 ], [ %8, %6 ]
  %15 = or i8 %12, -128
  %16 = getelementptr inbounds i8, i8* %14, i64 1
  store i8 %15, i8* %14, align 1
  %17 = lshr i32 %13, 7
  %18 = icmp ugt i32 %13, 16383
  %19 = trunc i32 %17 to i8
  br i1 %18, label %11, label %20

20:                                               ; preds = %11
  %21 = trunc i32 %17 to i8
  br label %22

22:                                               ; preds = %20, %6
  %23 = phi i8* [ %8, %6 ], [ %16, %20 ]
  %24 = phi i8 [ %10, %6 ], [ %21, %20 ]
  store i8 %24, i8* %23, align 1
  br label %43

25:                                               ; preds = %2
  %26 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %26) #10
  %27 = icmp ugt i32 %5, 127
  %28 = trunc i32 %5 to i8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %26, i8 -86, i64 5, i1 false) #10
  br i1 %27, label %29, label %40

29:                                               ; preds = %25, %29
  %30 = phi i8 [ %37, %29 ], [ %28, %25 ]
  %31 = phi i32 [ %35, %29 ], [ %5, %25 ]
  %32 = phi i8* [ %34, %29 ], [ %26, %25 ]
  %33 = or i8 %30, -128
  %34 = getelementptr inbounds i8, i8* %32, i64 1
  store i8 %33, i8* %32, align 1
  %35 = lshr i32 %31, 7
  %36 = icmp ugt i32 %31, 16383
  %37 = trunc i32 %35 to i8
  br i1 %36, label %29, label %38

38:                                               ; preds = %29
  %39 = trunc i32 %35 to i8
  br label %40

40:                                               ; preds = %38, %25
  %41 = phi i8* [ %26, %25 ], [ %34, %38 ]
  %42 = phi i8 [ %28, %25 ], [ %39, %38 ]
  store i8 %42, i8* %41, align 1
  br label %43

43:                                               ; preds = %40, %22
  %44 = phi i8* [ %41, %40 ], [ %23, %22 ]
  %45 = phi i8* [ %26, %40 ], [ %8, %22 ]
  %46 = getelementptr inbounds i8, i8* %44, i64 1
  %47 = ptrtoint i8* %46 to i64
  %48 = ptrtoint [5 x i8]* %3 to i64
  %49 = sub i64 %47, %48
  %50 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %0, i64 0, i32 0
  %51 = call zeroext i1 @_ZN9courgette13NoThrowBufferIcNS_15MemoryAllocatorIcEEE6appendEPKcm(%"class.courgette::NoThrowBuffer"* %50, i8* nonnull %45, i64 %49) #10
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %45) #10
  ret i1 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette10SinkStream17WriteSizeVarint32Em(%"class.courgette::SinkStream"*, i64) local_unnamed_addr #2 align 2 {
  %3 = alloca [5 x i8], align 1
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = trunc i64 %1 to i32
  %6 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 3) #10
  %7 = xor i1 %6, true
  %8 = icmp ult i64 %1, 4294967296
  %9 = or i1 %8, %7
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %11) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i32 212, i32 3) #10
  %12 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %13 = bitcast %"class.std::__1::basic_ostringstream"* %12 to %"class.std::__1::basic_ostream"*
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %13, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0), i64 40) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %11) #10
  br label %15

15:                                               ; preds = %2, %10
  %16 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %16) #10
  %17 = icmp ugt i32 %5, 127
  %18 = trunc i64 %1 to i8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %16, i8 -86, i64 5, i1 false) #10
  br i1 %17, label %19, label %30

19:                                               ; preds = %15, %19
  %20 = phi i8 [ %27, %19 ], [ %18, %15 ]
  %21 = phi i32 [ %25, %19 ], [ %5, %15 ]
  %22 = phi i8* [ %24, %19 ], [ %16, %15 ]
  %23 = or i8 %20, -128
  %24 = getelementptr inbounds i8, i8* %22, i64 1
  store i8 %23, i8* %22, align 1
  %25 = lshr i32 %21, 7
  %26 = icmp ugt i32 %21, 16383
  %27 = trunc i32 %25 to i8
  br i1 %26, label %19, label %28

28:                                               ; preds = %19
  %29 = trunc i32 %25 to i8
  br label %30

30:                                               ; preds = %28, %15
  %31 = phi i8* [ %16, %15 ], [ %24, %28 ]
  %32 = phi i8 [ %18, %15 ], [ %29, %28 ]
  %33 = getelementptr inbounds i8, i8* %31, i64 1
  store i8 %32, i8* %31, align 1
  %34 = ptrtoint i8* %33 to i64
  %35 = ptrtoint [5 x i8]* %3 to i64
  %36 = sub i64 %34, %35
  %37 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %0, i64 0, i32 0
  %38 = call zeroext i1 @_ZN9courgette13NoThrowBufferIcNS_15MemoryAllocatorIcEEE6appendEPKcm(%"class.courgette::NoThrowBuffer"* %37, i8* nonnull %16, i64 %36) #10
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %16) #10
  ret i1 %38
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #3

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette10SinkStream6AppendEPS0_(%"class.courgette::SinkStream"*, %"class.courgette::SinkStream"* nocapture) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %1, i64 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %1, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %0, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZN9courgette13NoThrowBufferIcNS_15MemoryAllocatorIcEEE6appendEPKcm(%"class.courgette::NoThrowBuffer"* %7, i8* %4, i64 %6) #10
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = load i8*, i8** %3, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %9
  tail call void @free(i8* nonnull %10) #10
  %13 = bitcast %"class.courgette::SinkStream"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #10
  br label %14

14:                                               ; preds = %12, %9, %2
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette10SinkStream6RetireEv(%"class.courgette::SinkStream"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %0, i64 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @free(i8* nonnull %3) #10
  %6 = bitcast %"class.courgette::SinkStream"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #10
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette15SourceStreamSetC2Ev(%"class.courgette::SourceStreamSet"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %0, i64 0, i32 0
  store i64 10, i64* %2, align 8
  %3 = getelementptr %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %0, i64 0, i32 1, i64 0
  %4 = bitcast %"class.courgette::SourceStream"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 240, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN9courgette15SourceStreamSetD2Ev(%"class.courgette::SourceStreamSet"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette15SourceStreamSet4InitEPKvm(%"class.courgette::SourceStreamSet"* nocapture, i8*, i64) local_unnamed_addr #2 align 2 {
  %4 = alloca [10 x i32], align 16
  %5 = getelementptr inbounds i8, i8* %1, i64 %2
  %6 = icmp sgt i64 %2, 0
  br i1 %6, label %7, label %210

7:                                                ; preds = %3
  %8 = load i8, i8* %1, align 1
  %9 = icmp slt i8 %8, 0
  %10 = icmp ne i64 %2, 1
  %11 = and i1 %10, %9
  br i1 %11, label %12, label %210

12:                                               ; preds = %7
  %13 = getelementptr inbounds i8, i8* %1, i64 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = icmp sgt i64 %2, 2
  %17 = and i1 %16, %15
  br i1 %17, label %18, label %210

18:                                               ; preds = %12
  %19 = getelementptr inbounds i8, i8* %1, i64 2
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = icmp sgt i64 %2, 3
  %23 = and i1 %22, %21
  br i1 %23, label %24, label %210

24:                                               ; preds = %18
  %25 = getelementptr inbounds i8, i8* %1, i64 3
  %26 = zext i8 %20 to i32
  %27 = shl nuw nsw i32 %26, 14
  %28 = and i32 %27, 2080768
  %29 = zext i8 %14 to i32
  %30 = shl nuw nsw i32 %29, 7
  %31 = and i32 %30, 16256
  %32 = and i8 %8, 127
  %33 = zext i8 %32 to i32
  %34 = or i32 %31, %33
  %35 = or i32 %34, %28
  %36 = getelementptr inbounds i8, i8* %1, i64 4
  %37 = load i8, i8* %25, align 1
  %38 = zext i8 %37 to i32
  %39 = shl nuw nsw i32 %38, 21
  %40 = and i32 %39, 266338304
  %41 = or i32 %35, %40
  %42 = icmp sgt i8 %37, -1
  br i1 %42, label %53, label %43

43:                                               ; preds = %24
  %44 = icmp sgt i64 %2, 4
  br i1 %44, label %45, label %210

45:                                               ; preds = %43
  %46 = load i8, i8* %36, align 1
  %47 = icmp sgt i8 %46, -1
  br i1 %47, label %48, label %210

48:                                               ; preds = %45
  %49 = zext i8 %46 to i32
  %50 = shl i32 %49, 28
  %51 = or i32 %50, %41
  %52 = getelementptr inbounds i8, i8* %1, i64 5
  br label %53

53:                                               ; preds = %24, %48
  %54 = phi i32 [ %51, %48 ], [ %41, %24 ]
  %55 = phi i8* [ %52, %48 ], [ %36, %24 ]
  %56 = icmp ne i8* %55, null
  %57 = icmp eq i32 %54, 20090218
  %58 = and i1 %57, %56
  %59 = icmp ult i8* %55, %5
  %60 = and i1 %59, %58
  br i1 %60, label %61, label %210

61:                                               ; preds = %53
  %62 = getelementptr inbounds i8, i8* %55, i64 1
  %63 = load i8, i8* %55, align 1
  %64 = and i8 %63, 127
  %65 = zext i8 %64 to i32
  %66 = icmp sgt i8 %63, -1
  br i1 %66, label %107, label %67

67:                                               ; preds = %61
  %68 = icmp ult i8* %62, %5
  br i1 %68, label %69, label %210

69:                                               ; preds = %67
  %70 = getelementptr inbounds i8, i8* %55, i64 2
  %71 = load i8, i8* %62, align 1
  %72 = zext i8 %71 to i32
  %73 = shl nuw nsw i32 %72, 7
  %74 = and i32 %73, 16256
  %75 = or i32 %74, %65
  %76 = icmp sgt i8 %71, -1
  br i1 %76, label %107, label %77

77:                                               ; preds = %69
  %78 = icmp ult i8* %70, %5
  br i1 %78, label %79, label %210

79:                                               ; preds = %77
  %80 = getelementptr inbounds i8, i8* %55, i64 3
  %81 = load i8, i8* %70, align 1
  %82 = zext i8 %81 to i32
  %83 = shl nuw nsw i32 %82, 14
  %84 = and i32 %83, 2080768
  %85 = or i32 %84, %75
  %86 = icmp sgt i8 %81, -1
  br i1 %86, label %107, label %87

87:                                               ; preds = %79
  %88 = icmp ult i8* %80, %5
  br i1 %88, label %89, label %210

89:                                               ; preds = %87
  %90 = getelementptr inbounds i8, i8* %55, i64 4
  %91 = load i8, i8* %80, align 1
  %92 = zext i8 %91 to i32
  %93 = shl nuw nsw i32 %92, 21
  %94 = and i32 %93, 266338304
  %95 = or i32 %94, %85
  %96 = icmp sgt i8 %91, -1
  br i1 %96, label %107, label %97

97:                                               ; preds = %89
  %98 = icmp ult i8* %90, %5
  br i1 %98, label %99, label %210

99:                                               ; preds = %97
  %100 = load i8, i8* %90, align 1
  %101 = icmp sgt i8 %100, -1
  br i1 %101, label %102, label %210

102:                                              ; preds = %99
  %103 = zext i8 %100 to i32
  %104 = shl i32 %103, 28
  %105 = or i32 %104, %95
  %106 = getelementptr inbounds i8, i8* %55, i64 5
  br label %107

107:                                              ; preds = %89, %79, %69, %61, %102
  %108 = phi i32 [ %105, %102 ], [ %65, %61 ], [ %75, %69 ], [ %85, %79 ], [ %95, %89 ]
  %109 = phi i8* [ %106, %102 ], [ %62, %61 ], [ %70, %69 ], [ %80, %79 ], [ %90, %89 ]
  %110 = icmp eq i8* %109, null
  %111 = icmp ugt i32 %108, 10
  %112 = or i1 %111, %110
  br i1 %112, label %210, label %113

113:                                              ; preds = %107
  %114 = zext i32 %108 to i64
  %115 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %0, i64 0, i32 0
  store i64 %114, i64* %115, align 8
  %116 = bitcast [10 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %116) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %116, i8 -86, i64 40, i1 false)
  %117 = icmp eq i32 %108, 0
  br i1 %117, label %179, label %118

118:                                              ; preds = %113, %174
  %119 = phi i64 [ %177, %174 ], [ 0, %113 ]
  %120 = phi i64 [ %176, %174 ], [ 0, %113 ]
  %121 = phi i8* [ %172, %174 ], [ %109, %113 ]
  %122 = getelementptr inbounds [10 x i32], [10 x i32]* %4, i64 0, i64 %119
  %123 = icmp ult i8* %121, %5
  br i1 %123, label %124, label %208

124:                                              ; preds = %118
  %125 = getelementptr inbounds i8, i8* %121, i64 1
  %126 = load i8, i8* %121, align 1
  %127 = and i8 %126, 127
  %128 = zext i8 %127 to i32
  %129 = icmp sgt i8 %126, -1
  br i1 %129, label %170, label %130

130:                                              ; preds = %124
  %131 = icmp ult i8* %125, %5
  br i1 %131, label %132, label %208

132:                                              ; preds = %130
  %133 = getelementptr inbounds i8, i8* %121, i64 2
  %134 = load i8, i8* %125, align 1
  %135 = zext i8 %134 to i32
  %136 = shl nuw nsw i32 %135, 7
  %137 = and i32 %136, 16256
  %138 = or i32 %137, %128
  %139 = icmp sgt i8 %134, -1
  br i1 %139, label %170, label %140

140:                                              ; preds = %132
  %141 = icmp ult i8* %133, %5
  br i1 %141, label %142, label %208

142:                                              ; preds = %140
  %143 = getelementptr inbounds i8, i8* %121, i64 3
  %144 = load i8, i8* %133, align 1
  %145 = zext i8 %144 to i32
  %146 = shl nuw nsw i32 %145, 14
  %147 = and i32 %146, 2080768
  %148 = or i32 %147, %138
  %149 = icmp sgt i8 %144, -1
  br i1 %149, label %170, label %150

150:                                              ; preds = %142
  %151 = icmp ult i8* %143, %5
  br i1 %151, label %152, label %208

152:                                              ; preds = %150
  %153 = getelementptr inbounds i8, i8* %121, i64 4
  %154 = load i8, i8* %143, align 1
  %155 = zext i8 %154 to i32
  %156 = shl nuw nsw i32 %155, 21
  %157 = and i32 %156, 266338304
  %158 = or i32 %157, %148
  %159 = icmp sgt i8 %154, -1
  br i1 %159, label %170, label %160

160:                                              ; preds = %152
  %161 = icmp ult i8* %153, %5
  br i1 %161, label %162, label %208

162:                                              ; preds = %160
  %163 = load i8, i8* %153, align 1
  %164 = icmp sgt i8 %163, -1
  br i1 %164, label %165, label %208

165:                                              ; preds = %162
  %166 = zext i8 %163 to i32
  %167 = shl i32 %166, 28
  %168 = or i32 %167, %158
  %169 = getelementptr inbounds i8, i8* %121, i64 5
  br label %170

170:                                              ; preds = %152, %142, %132, %124, %165
  %171 = phi i32 [ %168, %165 ], [ %128, %124 ], [ %138, %132 ], [ %148, %142 ], [ %158, %152 ]
  %172 = phi i8* [ %169, %165 ], [ %125, %124 ], [ %133, %132 ], [ %143, %142 ], [ %153, %152 ]
  store i32 %171, i32* %122, align 4
  %173 = icmp eq i8* %172, null
  br i1 %173, label %208, label %174

174:                                              ; preds = %170
  %175 = zext i32 %171 to i64
  %176 = add i64 %120, %175
  %177 = add nuw nsw i64 %119, 1
  %178 = icmp eq i64 %177, %114
  br i1 %178, label %179, label %118

179:                                              ; preds = %174, %113
  %180 = phi i8* [ %109, %113 ], [ %172, %174 ]
  %181 = phi i64 [ 0, %113 ], [ %176, %174 ]
  %182 = ptrtoint i8* %5 to i64
  %183 = ptrtoint i8* %180 to i64
  %184 = sub i64 %182, %183
  %185 = icmp eq i64 %184, %181
  br i1 %185, label %186, label %208

186:                                              ; preds = %179
  %187 = icmp eq i32 %108, 0
  br i1 %187, label %208, label %188

188:                                              ; preds = %186
  %189 = ptrtoint i8* %1 to i64
  %190 = sub i64 %183, %189
  br label %191

191:                                              ; preds = %188, %191
  %192 = phi i64 [ %205, %191 ], [ 0, %188 ]
  %193 = phi i64 [ %204, %191 ], [ %190, %188 ]
  %194 = getelementptr inbounds i8, i8* %1, i64 %193
  %195 = getelementptr inbounds [10 x i32], [10 x i32]* %4, i64 0, i64 %192
  %196 = load i32, i32* %195, align 4
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %0, i64 0, i32 1, i64 %192, i32 0
  store i8* %194, i8** %198, align 8
  %199 = getelementptr inbounds i8, i8* %194, i64 %197
  %200 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %0, i64 0, i32 1, i64 %192, i32 1
  store i8* %199, i8** %200, align 8
  %201 = ptrtoint i8* %194 to i64
  %202 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %0, i64 0, i32 1, i64 %192, i32 2
  %203 = bitcast i8** %202 to i64*
  store i64 %201, i64* %203, align 8
  %204 = add i64 %193, %197
  %205 = add nuw i64 %192, 1
  %206 = load i64, i64* %115, align 8
  %207 = icmp ult i64 %205, %206
  br i1 %207, label %191, label %208

208:                                              ; preds = %162, %160, %150, %140, %130, %118, %170, %191, %186, %179
  %209 = phi i1 [ false, %179 ], [ true, %186 ], [ true, %191 ], [ false, %170 ], [ false, %118 ], [ false, %130 ], [ false, %140 ], [ false, %150 ], [ false, %160 ], [ false, %162 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %116) #10
  br label %210

210:                                              ; preds = %18, %12, %7, %99, %97, %87, %77, %67, %45, %43, %3, %208, %107, %53
  %211 = phi i1 [ false, %53 ], [ %209, %208 ], [ false, %107 ], [ false, %3 ], [ false, %43 ], [ false, %45 ], [ false, %7 ], [ false, %12 ], [ false, %18 ], [ false, %67 ], [ false, %77 ], [ false, %87 ], [ false, %97 ], [ false, %99 ]
  ret i1 %211
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette15SourceStreamSet4InitEPNS_12SourceStreamE(%"class.courgette::SourceStreamSet"* nocapture, %"class.courgette::SourceStream"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %1, i64 0, i32 2
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %1, i64 0, i32 1
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint i8* %4 to i64
  %9 = sub i64 %7, %8
  %10 = tail call zeroext i1 @_ZN9courgette15SourceStreamSet4InitEPKvm(%"class.courgette::SourceStreamSet"* %0, i8* %4, i64 %9)
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette15SourceStreamSet7ReadSetEPS0_(%"class.courgette::SourceStreamSet"* nocapture, %"class.courgette::SourceStreamSet"* nocapture) local_unnamed_addr #2 align 2 {
  %3 = alloca [10 x i32], align 16
  %4 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %0, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %0, i64 0, i32 1, i64 0
  %8 = select i1 %6, %"class.courgette::SourceStream"* null, %"class.courgette::SourceStream"* %7
  %9 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %8, i64 0, i32 2
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %8, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp ult i8* %10, %12
  br i1 %13, label %14, label %163

14:                                               ; preds = %2
  %15 = getelementptr inbounds i8, i8* %10, i64 1
  %16 = load i8, i8* %10, align 1
  %17 = and i8 %16, 127
  %18 = zext i8 %17 to i32
  %19 = icmp sgt i8 %16, -1
  br i1 %19, label %60, label %20

20:                                               ; preds = %14
  %21 = icmp ult i8* %15, %12
  br i1 %21, label %22, label %163

22:                                               ; preds = %20
  %23 = getelementptr inbounds i8, i8* %10, i64 2
  %24 = load i8, i8* %15, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw nsw i32 %25, 7
  %27 = and i32 %26, 16256
  %28 = or i32 %27, %18
  %29 = icmp sgt i8 %24, -1
  br i1 %29, label %60, label %30

30:                                               ; preds = %22
  %31 = icmp ult i8* %23, %12
  br i1 %31, label %32, label %163

32:                                               ; preds = %30
  %33 = getelementptr inbounds i8, i8* %10, i64 3
  %34 = load i8, i8* %23, align 1
  %35 = zext i8 %34 to i32
  %36 = shl nuw nsw i32 %35, 14
  %37 = and i32 %36, 2080768
  %38 = or i32 %37, %28
  %39 = icmp sgt i8 %34, -1
  br i1 %39, label %60, label %40

40:                                               ; preds = %32
  %41 = icmp ult i8* %33, %12
  br i1 %41, label %42, label %163

42:                                               ; preds = %40
  %43 = getelementptr inbounds i8, i8* %10, i64 4
  %44 = load i8, i8* %33, align 1
  %45 = zext i8 %44 to i32
  %46 = shl nuw nsw i32 %45, 21
  %47 = and i32 %46, 266338304
  %48 = or i32 %47, %38
  %49 = icmp sgt i8 %44, -1
  br i1 %49, label %60, label %50

50:                                               ; preds = %42
  %51 = icmp ult i8* %43, %12
  br i1 %51, label %52, label %163

52:                                               ; preds = %50
  %53 = load i8, i8* %43, align 1
  %54 = icmp sgt i8 %53, -1
  br i1 %54, label %55, label %163

55:                                               ; preds = %52
  %56 = zext i8 %53 to i32
  %57 = shl i32 %56, 28
  %58 = or i32 %57, %48
  %59 = getelementptr inbounds i8, i8* %10, i64 5
  br label %60

60:                                               ; preds = %42, %32, %22, %14, %55
  %61 = phi i32 [ %58, %55 ], [ %18, %14 ], [ %28, %22 ], [ %38, %32 ], [ %48, %42 ]
  %62 = phi i8* [ %59, %55 ], [ %15, %14 ], [ %23, %22 ], [ %33, %32 ], [ %43, %42 ]
  %63 = icmp eq i8* %62, null
  br i1 %63, label %163, label %64

64:                                               ; preds = %60
  store i8* %62, i8** %9, align 8
  %65 = bitcast [10 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %65) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %65, i8 0, i64 40, i1 false)
  %66 = zext i32 %61 to i64
  %67 = icmp eq i32 %61, 0
  br i1 %67, label %161, label %71

68:                                               ; preds = %126
  br i1 %67, label %161, label %69

69:                                               ; preds = %68
  %70 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %1, i64 0, i32 0
  br label %129

71:                                               ; preds = %64, %126
  %72 = phi i8* [ %124, %126 ], [ %62, %64 ]
  %73 = phi i64 [ %127, %126 ], [ 0, %64 ]
  %74 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i64 0, i64 %73
  %75 = icmp ult i8* %72, %12
  br i1 %75, label %76, label %161

76:                                               ; preds = %71
  %77 = getelementptr inbounds i8, i8* %72, i64 1
  %78 = load i8, i8* %72, align 1
  %79 = and i8 %78, 127
  %80 = zext i8 %79 to i32
  %81 = icmp sgt i8 %78, -1
  br i1 %81, label %122, label %82

82:                                               ; preds = %76
  %83 = icmp ult i8* %77, %12
  br i1 %83, label %84, label %161

84:                                               ; preds = %82
  %85 = getelementptr inbounds i8, i8* %72, i64 2
  %86 = load i8, i8* %77, align 1
  %87 = zext i8 %86 to i32
  %88 = shl nuw nsw i32 %87, 7
  %89 = and i32 %88, 16256
  %90 = or i32 %89, %80
  %91 = icmp sgt i8 %86, -1
  br i1 %91, label %122, label %92

92:                                               ; preds = %84
  %93 = icmp ult i8* %85, %12
  br i1 %93, label %94, label %161

94:                                               ; preds = %92
  %95 = getelementptr inbounds i8, i8* %72, i64 3
  %96 = load i8, i8* %85, align 1
  %97 = zext i8 %96 to i32
  %98 = shl nuw nsw i32 %97, 14
  %99 = and i32 %98, 2080768
  %100 = or i32 %99, %90
  %101 = icmp sgt i8 %96, -1
  br i1 %101, label %122, label %102

102:                                              ; preds = %94
  %103 = icmp ult i8* %95, %12
  br i1 %103, label %104, label %161

104:                                              ; preds = %102
  %105 = getelementptr inbounds i8, i8* %72, i64 4
  %106 = load i8, i8* %95, align 1
  %107 = zext i8 %106 to i32
  %108 = shl nuw nsw i32 %107, 21
  %109 = and i32 %108, 266338304
  %110 = or i32 %109, %100
  %111 = icmp sgt i8 %106, -1
  br i1 %111, label %122, label %112

112:                                              ; preds = %104
  %113 = icmp ult i8* %105, %12
  br i1 %113, label %114, label %161

114:                                              ; preds = %112
  %115 = load i8, i8* %105, align 1
  %116 = icmp sgt i8 %115, -1
  br i1 %116, label %117, label %161

117:                                              ; preds = %114
  %118 = zext i8 %115 to i32
  %119 = shl i32 %118, 28
  %120 = or i32 %119, %110
  %121 = getelementptr inbounds i8, i8* %72, i64 5
  br label %122

122:                                              ; preds = %104, %94, %84, %76, %117
  %123 = phi i32 [ %120, %117 ], [ %80, %76 ], [ %90, %84 ], [ %100, %94 ], [ %110, %104 ]
  %124 = phi i8* [ %121, %117 ], [ %77, %76 ], [ %85, %84 ], [ %95, %94 ], [ %105, %104 ]
  store i32 %123, i32* %74, align 4
  %125 = icmp eq i8* %124, null
  br i1 %125, label %161, label %126

126:                                              ; preds = %122
  store i8* %124, i8** %9, align 8
  %127 = add nuw nsw i64 %73, 1
  %128 = icmp eq i64 %127, %66
  br i1 %128, label %68, label %71

129:                                              ; preds = %150, %69
  %130 = phi i64 [ 0, %69 ], [ %159, %150 ]
  %131 = load i64, i64* %4, align 8
  %132 = icmp ugt i64 %131, %130
  %133 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %0, i64 0, i32 1, i64 %130
  %134 = select i1 %132, %"class.courgette::SourceStream"* %133, %"class.courgette::SourceStream"* null
  %135 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i64 0, i64 %130
  %136 = load i32, i32* %135, align 4
  %137 = zext i32 %136 to i64
  %138 = load i64, i64* %70, align 8
  %139 = icmp ugt i64 %138, %130
  %140 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %1, i64 0, i32 1, i64 %130
  %141 = select i1 %139, %"class.courgette::SourceStream"* %140, %"class.courgette::SourceStream"* null
  %142 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %134, i64 0, i32 1
  %143 = bitcast i8** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %134, i64 0, i32 2
  %146 = bitcast i8** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = sub i64 %144, %147
  %149 = icmp ult i64 %148, %137
  br i1 %149, label %161, label %150

150:                                              ; preds = %129
  %151 = inttoptr i64 %147 to i8*
  %152 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %141, i64 0, i32 0
  store i8* %151, i8** %152, align 8
  %153 = getelementptr inbounds i8, i8* %151, i64 %137
  %154 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %141, i64 0, i32 1
  store i8* %153, i8** %154, align 8
  %155 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %141, i64 0, i32 2
  %156 = bitcast i8** %155 to i64*
  store i64 %147, i64* %156, align 8
  %157 = load i8*, i8** %145, align 8
  %158 = getelementptr inbounds i8, i8* %157, i64 %137
  store i8* %158, i8** %145, align 8
  %159 = add nuw nsw i64 %130, 1
  %160 = icmp eq i64 %159, %66
  br i1 %160, label %161, label %129

161:                                              ; preds = %114, %112, %102, %92, %82, %71, %122, %129, %150, %64, %68
  %162 = phi i1 [ true, %68 ], [ true, %64 ], [ true, %150 ], [ false, %129 ], [ false, %122 ], [ false, %71 ], [ false, %82 ], [ false, %92 ], [ false, %102 ], [ false, %112 ], [ false, %114 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %65) #10
  br label %163

163:                                              ; preds = %52, %50, %40, %30, %20, %2, %60, %161
  %164 = phi i1 [ %162, %161 ], [ false, %60 ], [ false, %2 ], [ false, %20 ], [ false, %30 ], [ false, %40 ], [ false, %50 ], [ false, %52 ]
  ret i1 %164
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK9courgette15SourceStreamSet5EmptyEv(%"class.courgette::SourceStreamSet"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %0, i64 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %17, label %7

5:                                                ; preds = %7
  %6 = icmp ult i64 %16, %3
  br i1 %6, label %7, label %17

7:                                                ; preds = %1, %5
  %8 = phi i64 [ %16, %5 ], [ 0, %1 ]
  %9 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %0, i64 0, i32 1, i64 %8, i32 1
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %0, i64 0, i32 1, i64 %8, i32 2
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %11, %14
  %16 = add nuw i64 %8, 1
  br i1 %15, label %5, label %17

17:                                               ; preds = %7, %5, %1
  %18 = phi i1 [ true, %1 ], [ true, %5 ], [ false, %7 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette13SinkStreamSetC2Ev(%"class.courgette::SinkStreamSet"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 0
  store i64 10, i64* %2, align 8
  %3 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 0
  %4 = bitcast %"class.courgette::SinkStream"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #10
  %5 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 1
  %6 = bitcast %"class.courgette::SinkStream"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #10
  %7 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 2
  %8 = bitcast %"class.courgette::SinkStream"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #10
  %9 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 3
  %10 = bitcast %"class.courgette::SinkStream"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #10
  %11 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 4
  %12 = bitcast %"class.courgette::SinkStream"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #10
  %13 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 5
  %14 = bitcast %"class.courgette::SinkStream"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #10
  %15 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 6
  %16 = bitcast %"class.courgette::SinkStream"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #10
  %17 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 7
  %18 = bitcast %"class.courgette::SinkStream"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #10
  %19 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 8
  %20 = bitcast %"class.courgette::SinkStream"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #10
  %21 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 9
  %22 = bitcast %"class.courgette::SinkStream"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette13SinkStreamSetD2Ev(%"class.courgette::SinkStreamSet"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 9
  %3 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %2, i64 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @free(i8* nonnull %4) #10
  %7 = bitcast %"class.courgette::SinkStream"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 8
  %10 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %9, i64 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %8
  tail call void @free(i8* nonnull %11) #10
  %14 = bitcast %"class.courgette::SinkStream"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #10
  br label %15

15:                                               ; preds = %13, %8
  %16 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 7
  %17 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %16, i64 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %15
  tail call void @free(i8* nonnull %18) #10
  %21 = bitcast %"class.courgette::SinkStream"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #10
  br label %22

22:                                               ; preds = %20, %15
  %23 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 6
  %24 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %23, i64 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %22
  tail call void @free(i8* nonnull %25) #10
  %28 = bitcast %"class.courgette::SinkStream"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #10
  br label %29

29:                                               ; preds = %27, %22
  %30 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 5
  %31 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %30, i64 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  tail call void @free(i8* nonnull %32) #10
  %35 = bitcast %"class.courgette::SinkStream"* %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #10
  br label %36

36:                                               ; preds = %34, %29
  %37 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 4
  %38 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %37, i64 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %36
  tail call void @free(i8* nonnull %39) #10
  %42 = bitcast %"class.courgette::SinkStream"* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #10
  br label %43

43:                                               ; preds = %41, %36
  %44 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 3
  %45 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %44, i64 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %43
  tail call void @free(i8* nonnull %46) #10
  %49 = bitcast %"class.courgette::SinkStream"* %44 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #10
  br label %50

50:                                               ; preds = %48, %43
  %51 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 2
  %52 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %51, i64 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %50
  tail call void @free(i8* nonnull %53) #10
  %56 = bitcast %"class.courgette::SinkStream"* %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #10
  br label %57

57:                                               ; preds = %55, %50
  %58 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 1
  %59 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %58, i64 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = icmp eq i8* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  tail call void @free(i8* nonnull %60) #10
  %63 = bitcast %"class.courgette::SinkStream"* %58 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #10
  br label %64

64:                                               ; preds = %62, %57
  %65 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 0
  %66 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %65, i64 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = icmp eq i8* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %64
  tail call void @free(i8* nonnull %67) #10
  %70 = bitcast %"class.courgette::SinkStream"* %65 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 24, i1 false) #10
  br label %71

71:                                               ; preds = %69, %64
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN9courgette13SinkStreamSet4InitEm(%"class.courgette::SinkStreamSet"* nocapture, i64) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette13SinkStreamSet12CopyHeaderToEPNS_10SinkStreamE(%"class.courgette::SinkStreamSet"* nocapture readonly, %"class.courgette::SinkStream"*) local_unnamed_addr #2 align 2 {
  %3 = alloca [5 x i8], align 1
  %4 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %4) #10
  %5 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 4
  store i8 -86, i8* %5, align 1
  %6 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 1
  store i8 -22, i8* %4, align 1
  %7 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 2
  store i8 -102, i8* %6, align 1
  %8 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 3
  store i8 -54, i8* %7, align 1
  store i8 9, i8* %8, align 1
  %9 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %1, i64 0, i32 0
  %10 = call zeroext i1 @_ZN9courgette13NoThrowBufferIcNS_15MemoryAllocatorIcEEE6appendEPKcm(%"class.courgette::NoThrowBuffer"* %9, i8* nonnull %4, i64 4) #10
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %4) #10
  br i1 %10, label %11, label %24

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = call zeroext i1 @_ZN9courgette10SinkStream17WriteSizeVarint32Em(%"class.courgette::SinkStream"* %1, i64 %13)
  br i1 %14, label %15, label %24

15:                                               ; preds = %11, %19
  %16 = phi i64 [ %23, %19 ], [ 0, %11 ]
  %17 = load i64, i64* %12, align 8
  %18 = icmp ult i64 %16, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 %16, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = call zeroext i1 @_ZN9courgette10SinkStream17WriteSizeVarint32Em(%"class.courgette::SinkStream"* %1, i64 %21)
  %23 = add nuw i64 %16, 1
  br i1 %22, label %15, label %24

24:                                               ; preds = %19, %15, %11, %2
  %25 = phi i1 [ false, %2 ], [ false, %11 ], [ false, %19 ], [ true, %15 ]
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette13SinkStreamSet6CopyToEPNS_10SinkStreamE(%"class.courgette::SinkStreamSet"* nocapture, %"class.courgette::SinkStream"*) local_unnamed_addr #2 align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca [5 x i8], align 1
  %5 = alloca %"class.courgette::SinkStream", align 8
  %6 = bitcast %"class.courgette::SinkStream"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %5, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %5, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %5, i64 0, i32 0, i32 3, i32 0
  %10 = bitcast i8* %9 to i64*
  store i64 -6148914691236517206, i64* %10, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #10
  %11 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %11) #10
  %12 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i64 0, i64 4
  store i8 -86, i8* %12, align 1
  %13 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i64 0, i64 1
  store i8 -22, i8* %11, align 1
  %14 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i64 0, i64 2
  store i8 -102, i8* %13, align 1
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i64 0, i64 3
  store i8 -54, i8* %14, align 1
  store i8 9, i8* %15, align 1
  %16 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %5, i64 0, i32 0
  %17 = call zeroext i1 @_ZN9courgette13NoThrowBufferIcNS_15MemoryAllocatorIcEEE6appendEPKcm(%"class.courgette::NoThrowBuffer"* nonnull %16, i8* nonnull %11, i64 4) #10
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %11) #10
  br i1 %17, label %18, label %140

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = call zeroext i1 @_ZN9courgette10SinkStream17WriteSizeVarint32Em(%"class.courgette::SinkStream"* nonnull %5, i64 %20) #10
  br i1 %21, label %22, label %140

22:                                               ; preds = %18, %26
  %23 = phi i64 [ %30, %26 ], [ 0, %18 ]
  %24 = load i64, i64* %19, align 8
  %25 = icmp ult i64 %23, %24
  br i1 %25, label %26, label %31

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 %23, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = call zeroext i1 @_ZN9courgette10SinkStream17WriteSizeVarint32Em(%"class.courgette::SinkStream"* nonnull %5, i64 %28) #10
  %30 = add nuw i64 %23, 1
  br i1 %29, label %22, label %140

31:                                               ; preds = %22
  %32 = load i64, i64* %8, align 8
  %33 = icmp eq i64 %24, 0
  br i1 %33, label %55, label %34

34:                                               ; preds = %31
  %35 = add i64 %24, -1
  %36 = and i64 %24, 3
  %37 = icmp ult i64 %35, 3
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = sub i64 %24, %36
  br label %89

40:                                               ; preds = %89, %34
  %41 = phi i64 [ undef, %34 ], [ %107, %89 ]
  %42 = phi i64 [ 0, %34 ], [ %108, %89 ]
  %43 = phi i64 [ %32, %34 ], [ %107, %89 ]
  %44 = icmp eq i64 %36, 0
  br i1 %44, label %55, label %45

45:                                               ; preds = %40, %45
  %46 = phi i64 [ %52, %45 ], [ %42, %40 ]
  %47 = phi i64 [ %51, %45 ], [ %43, %40 ]
  %48 = phi i64 [ %53, %45 ], [ %36, %40 ]
  %49 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 %46, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, %47
  %52 = add nuw i64 %46, 1
  %53 = add i64 %48, -1
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %45, !llvm.loop !2

55:                                               ; preds = %40, %45, %31
  %56 = phi i64 [ %32, %31 ], [ %41, %40 ], [ %51, %45 ]
  %57 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %1, i64 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, %56
  %60 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %1, i64 0, i32 0, i32 2
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %61, 4294967295
  br i1 %62, label %140, label %63

63:                                               ; preds = %55
  %64 = icmp ult i64 %61, %59
  br i1 %64, label %65, label %111

65:                                               ; preds = %63
  %66 = icmp ugt i64 %59, 256
  %67 = select i1 %66, i64 %59, i64 256
  %68 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #10
  store i8* null, i8** %3, align 8
  %69 = call zeroext i1 @_ZN4base15UncheckedMallocEmPPv(i64 %67, i8** nonnull %3) #10
  %70 = load i8*, i8** %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #10
  %71 = icmp eq i8* %70, null
  %72 = xor i1 %69, true
  %73 = or i1 %71, %72
  %74 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %1, i64 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = icmp eq i8* %75, null
  br i1 %73, label %77, label %80

77:                                               ; preds = %65
  br i1 %76, label %84, label %78

78:                                               ; preds = %77
  call void @free(i8* nonnull %75) #10
  %79 = bitcast %"class.courgette::SinkStream"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 24, i1 false) #10
  br label %84

80:                                               ; preds = %65
  br i1 %76, label %85, label %81

81:                                               ; preds = %80
  %82 = load i64, i64* %57, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %70, i8* nonnull align 1 %75, i64 %82, i1 false) #10
  %83 = load i8*, i8** %74, align 8
  call void @free(i8* %83) #10
  br label %85

84:                                               ; preds = %77, %78
  store i64 4294967295, i64* %60, align 8
  br label %140

85:                                               ; preds = %80, %81
  store i8* %70, i8** %74, align 8
  store i64 %67, i64* %60, align 8
  %86 = icmp eq i64 %67, 4294967295
  br i1 %86, label %140, label %87

87:                                               ; preds = %85
  %88 = load i64, i64* %8, align 8
  br label %111

89:                                               ; preds = %89, %38
  %90 = phi i64 [ 0, %38 ], [ %108, %89 ]
  %91 = phi i64 [ %32, %38 ], [ %107, %89 ]
  %92 = phi i64 [ %39, %38 ], [ %109, %89 ]
  %93 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 %90, i32 0, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, %91
  %96 = or i64 %90, 1
  %97 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 %96, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, %95
  %100 = or i64 %90, 2
  %101 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 %100, i32 0, i32 1
  %102 = load i64, i64* %101, align 8
  %103 = add i64 %102, %99
  %104 = or i64 %90, 3
  %105 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 %104, i32 0, i32 1
  %106 = load i64, i64* %105, align 8
  %107 = add i64 %106, %103
  %108 = add nuw i64 %90, 4
  %109 = add i64 %92, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %40, label %89

111:                                              ; preds = %87, %63
  %112 = phi i64 [ %88, %87 ], [ %32, %63 ]
  %113 = load i8*, i8** %7, align 8
  %114 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %1, i64 0, i32 0
  %115 = call zeroext i1 @_ZN9courgette13NoThrowBufferIcNS_15MemoryAllocatorIcEEE6appendEPKcm(%"class.courgette::NoThrowBuffer"* %114, i8* %113, i64 %112) #10
  br i1 %115, label %116, label %140

116:                                              ; preds = %111
  %117 = load i8*, i8** %7, align 8
  %118 = icmp eq i8* %117, null
  br i1 %118, label %120, label %119

119:                                              ; preds = %116
  call void @free(i8* nonnull %117) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #10
  br label %120

120:                                              ; preds = %119, %116
  %121 = load i64, i64* %19, align 8
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %140, label %123

123:                                              ; preds = %120, %136
  %124 = phi i64 [ %137, %136 ], [ 0, %120 ]
  %125 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 %124
  %126 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %125, i64 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  %128 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 %124, i32 0, i32 1
  %129 = load i64, i64* %128, align 8
  %130 = call zeroext i1 @_ZN9courgette13NoThrowBufferIcNS_15MemoryAllocatorIcEEE6appendEPKcm(%"class.courgette::NoThrowBuffer"* %114, i8* %127, i64 %129) #10
  br i1 %130, label %131, label %140

131:                                              ; preds = %123
  %132 = load i8*, i8** %126, align 8
  %133 = icmp eq i8* %132, null
  br i1 %133, label %136, label %134

134:                                              ; preds = %131
  call void @free(i8* nonnull %132) #10
  %135 = bitcast %"class.courgette::SinkStream"* %125 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %135, i8 0, i64 24, i1 false) #10
  br label %136

136:                                              ; preds = %131, %134
  %137 = add nuw i64 %124, 1
  %138 = load i64, i64* %19, align 8
  %139 = icmp ult i64 %137, %138
  br i1 %139, label %123, label %140

140:                                              ; preds = %26, %136, %123, %120, %111, %85, %55, %18, %2, %84
  %141 = phi i1 [ false, %85 ], [ false, %84 ], [ false, %2 ], [ false, %18 ], [ false, %55 ], [ false, %111 ], [ true, %120 ], [ false, %123 ], [ true, %136 ], [ false, %26 ]
  %142 = load i8*, i8** %7, align 8
  %143 = icmp eq i8* %142, null
  br i1 %143, label %145, label %144

144:                                              ; preds = %140
  call void @free(i8* nonnull %142) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #10
  br label %145

145:                                              ; preds = %140, %144
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  ret i1 %141
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette13SinkStreamSet8WriteSetEPS0_(%"class.courgette::SinkStreamSet"*, %"class.courgette::SinkStreamSet"* nocapture) local_unnamed_addr #2 align 2 {
  %3 = alloca [10 x i32], align 16
  %4 = bitcast [10 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 40, i1 false)
  %5 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  %8 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 1, i64 0
  %9 = select i1 %7, %"class.courgette::SinkStream"* null, %"class.courgette::SinkStream"* %8
  %10 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %9, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i64 0, i64 0
  store i32 %12, i32* %13, align 16
  %14 = icmp ne i32 %12, 0
  %15 = zext i1 %14 to i64
  %16 = icmp ugt i64 %6, 1
  %17 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 1, i64 1
  %18 = select i1 %16, %"class.courgette::SinkStream"* %17, %"class.courgette::SinkStream"* null
  %19 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %18, i64 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = trunc i64 %20 to i32
  %22 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i64 0, i64 1
  store i32 %21, i32* %22, align 4
  %23 = icmp eq i32 %21, 0
  %24 = select i1 %23, i64 %15, i64 2
  %25 = icmp ugt i64 %6, 2
  %26 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 1, i64 2
  %27 = select i1 %25, %"class.courgette::SinkStream"* %26, %"class.courgette::SinkStream"* null
  %28 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %27, i64 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = trunc i64 %29 to i32
  %31 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i64 0, i64 2
  store i32 %30, i32* %31, align 8
  %32 = icmp eq i32 %30, 0
  %33 = select i1 %32, i64 %24, i64 3
  %34 = icmp ugt i64 %6, 3
  %35 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 1, i64 3
  %36 = select i1 %34, %"class.courgette::SinkStream"* %35, %"class.courgette::SinkStream"* null
  %37 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %36, i64 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = trunc i64 %38 to i32
  %40 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i64 0, i64 3
  store i32 %39, i32* %40, align 4
  %41 = icmp eq i32 %39, 0
  %42 = select i1 %41, i64 %33, i64 4
  %43 = icmp ugt i64 %6, 4
  %44 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 1, i64 4
  %45 = select i1 %43, %"class.courgette::SinkStream"* %44, %"class.courgette::SinkStream"* null
  %46 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %45, i64 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = trunc i64 %47 to i32
  %49 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i64 0, i64 4
  store i32 %48, i32* %49, align 16
  %50 = icmp eq i32 %48, 0
  %51 = select i1 %50, i64 %42, i64 5
  %52 = icmp ugt i64 %6, 5
  %53 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 1, i64 5
  %54 = select i1 %52, %"class.courgette::SinkStream"* %53, %"class.courgette::SinkStream"* null
  %55 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %54, i64 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = trunc i64 %56 to i32
  %58 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i64 0, i64 5
  store i32 %57, i32* %58, align 4
  %59 = icmp eq i32 %57, 0
  %60 = select i1 %59, i64 %51, i64 6
  %61 = icmp ugt i64 %6, 6
  %62 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 1, i64 6
  %63 = select i1 %61, %"class.courgette::SinkStream"* %62, %"class.courgette::SinkStream"* null
  %64 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %63, i64 0, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = trunc i64 %65 to i32
  %67 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i64 0, i64 6
  store i32 %66, i32* %67, align 8
  %68 = icmp eq i32 %66, 0
  %69 = select i1 %68, i64 %60, i64 7
  %70 = icmp ugt i64 %6, 7
  %71 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 1, i64 7
  %72 = select i1 %70, %"class.courgette::SinkStream"* %71, %"class.courgette::SinkStream"* null
  %73 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %72, i64 0, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = trunc i64 %74 to i32
  %76 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i64 0, i64 7
  store i32 %75, i32* %76, align 4
  %77 = icmp eq i32 %75, 0
  %78 = select i1 %77, i64 %69, i64 8
  %79 = icmp ugt i64 %6, 8
  %80 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 1, i64 8
  %81 = select i1 %79, %"class.courgette::SinkStream"* %80, %"class.courgette::SinkStream"* null
  %82 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %81, i64 0, i32 0, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = trunc i64 %83 to i32
  %85 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i64 0, i64 8
  store i32 %84, i32* %85, align 16
  %86 = icmp eq i32 %84, 0
  %87 = select i1 %86, i64 %78, i64 9
  %88 = icmp ugt i64 %6, 9
  %89 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 1, i64 9
  %90 = select i1 %88, %"class.courgette::SinkStream"* %89, %"class.courgette::SinkStream"* null
  %91 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %90, i64 0, i32 0, i32 1
  %92 = load i64, i64* %91, align 8
  %93 = trunc i64 %92 to i32
  %94 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i64 0, i64 9
  store i32 %93, i32* %94, align 4
  %95 = icmp eq i32 %93, 0
  %96 = select i1 %95, i64 %87, i64 10
  %97 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 0
  %98 = load i64, i64* %97, align 8
  %99 = icmp eq i64 %98, 0
  %100 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 0
  %101 = select i1 %99, %"class.courgette::SinkStream"* null, %"class.courgette::SinkStream"* %100
  %102 = tail call zeroext i1 @_ZN9courgette10SinkStream17WriteSizeVarint32Em(%"class.courgette::SinkStream"* %101, i64 %96)
  %103 = icmp ne i64 %96, 0
  %104 = and i1 %102, %103
  br i1 %104, label %108, label %105

105:                                              ; preds = %108, %2
  %106 = phi i1 [ %102, %2 ], [ %113, %108 ]
  %107 = and i1 %106, %103
  br i1 %107, label %119, label %117

108:                                              ; preds = %2, %108
  %109 = phi i64 [ %114, %108 ], [ 0, %2 ]
  %110 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i64 0, i64 %109
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i64
  %113 = tail call zeroext i1 @_ZN9courgette10SinkStream17WriteSizeVarint32Em(%"class.courgette::SinkStream"* %101, i64 %112)
  %114 = add nuw i64 %109, 1
  %115 = icmp ult i64 %114, %96
  %116 = and i1 %113, %115
  br i1 %116, label %108, label %105

117:                                              ; preds = %119, %140, %105
  %118 = phi i1 [ %106, %105 ], [ false, %119 ], [ true, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #10
  ret i1 %118

119:                                              ; preds = %105, %140
  %120 = phi i64 [ %141, %140 ], [ 0, %105 ]
  %121 = load i64, i64* %97, align 8
  %122 = icmp ugt i64 %121, %120
  %123 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %0, i64 0, i32 1, i64 %120
  %124 = select i1 %122, %"class.courgette::SinkStream"* %123, %"class.courgette::SinkStream"* null
  %125 = load i64, i64* %5, align 8
  %126 = icmp ugt i64 %125, %120
  %127 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %1, i64 0, i32 1, i64 %120
  %128 = select i1 %126, %"class.courgette::SinkStream"* %127, %"class.courgette::SinkStream"* null
  %129 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %128, i64 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  %131 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %128, i64 0, i32 0, i32 1
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %124, i64 0, i32 0
  %134 = tail call zeroext i1 @_ZN9courgette13NoThrowBufferIcNS_15MemoryAllocatorIcEEE6appendEPKcm(%"class.courgette::NoThrowBuffer"* %133, i8* %130, i64 %132) #10
  br i1 %134, label %135, label %117

135:                                              ; preds = %119
  %136 = load i8*, i8** %129, align 8
  %137 = icmp eq i8* %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %135
  tail call void @free(i8* nonnull %136) #10
  %139 = bitcast %"class.courgette::SinkStream"* %128 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %139, i8 0, i64 24, i1 false) #10
  br label %140

140:                                              ; preds = %135, %138
  %141 = add nuw i64 %120, 1
  %142 = icmp ult i64 %141, %96
  %143 = and i1 %134, %142
  br i1 %143, label %119, label %117
}

declare zeroext i1 @_ZN4base15UncheckedMallocEmPPv(i64, i8**) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #2 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #2 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{i8 0, i8 2}
