; ModuleID = '../../third_party/icu/source/common/ucptrie.cpp'
source_filename = "../../third_party/icu/source/common/ucptrie.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UCPTrie = type { i16*, %union.UCPTrieData, i32, i32, i32, i16, i8, i8, i32, i16, i16, i32, i32 }
%union.UCPTrieData = type { i8* }
%struct.UCPMap = type opaque

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UCPTrie* @ucptrie_openFromBinary_69(i32, i32, i8*, i32, i32*, i32* nocapture) local_unnamed_addr #0 {
  %7 = alloca { i16*, %union.UCPTrieData }, align 8
  %8 = alloca [6 x i8], align 8
  %9 = load i32, i32* %5, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %161

11:                                               ; preds = %6
  %12 = icmp slt i32 %3, 1
  br i1 %12, label %23, label %13

13:                                               ; preds = %11
  %14 = ptrtoint i8* %2 to i64
  %15 = and i64 %14, 3
  %16 = icmp ne i64 %15, 0
  %17 = add i32 %0, 1
  %18 = icmp ugt i32 %17, 2
  %19 = or i1 %18, %16
  %20 = add i32 %1, 1
  %21 = icmp ugt i32 %20, 3
  %22 = or i1 %21, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %13, %11
  store i32 1, i32* %5, align 4
  br label %161

24:                                               ; preds = %13
  %25 = icmp slt i32 %3, 16
  br i1 %25, label %26, label %27

26:                                               ; preds = %24
  store i32 3, i32* %5, align 4
  br label %161

27:                                               ; preds = %24
  %28 = bitcast i8* %2 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 1416784179
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  store i32 3, i32* %5, align 4
  br label %161

32:                                               ; preds = %27
  %33 = getelementptr inbounds i8, i8* %2, i64 4
  %34 = bitcast i8* %33 to i16*
  %35 = load i16, i16* %34, align 4
  %36 = zext i16 %35 to i32
  %37 = lshr i32 %36, 6
  %38 = and i32 %37, 3
  %39 = and i32 %36, 7
  %40 = icmp ult i32 %38, 2
  %41 = icmp ult i32 %39, 3
  %42 = and i1 %41, %40
  %43 = and i32 %36, 56
  %44 = icmp eq i32 %43, 0
  %45 = and i1 %44, %42
  br i1 %45, label %47, label %46

46:                                               ; preds = %32
  store i32 3, i32* %5, align 4
  br label %161

47:                                               ; preds = %32
  %48 = icmp slt i32 %0, 0
  %49 = select i1 %48, i32 %38, i32 %0
  %50 = icmp slt i32 %1, 0
  %51 = select i1 %50, i32 %39, i32 %1
  %52 = icmp eq i32 %49, %38
  %53 = icmp eq i32 %51, %39
  %54 = and i1 %53, %52
  br i1 %54, label %56, label %55

55:                                               ; preds = %47
  store i32 3, i32* %5, align 4
  br label %161

56:                                               ; preds = %47
  %57 = bitcast { i16*, %union.UCPTrieData }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57)
  %58 = getelementptr inbounds [6 x i8], [6 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %58)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 6, i1 false)
  %59 = getelementptr inbounds i8, i8* %2, i64 6
  %60 = bitcast i8* %59 to i16*
  %61 = load i16, i16* %60, align 2
  %62 = zext i16 %61 to i32
  %63 = shl nuw nsw i32 %36, 4
  %64 = and i32 %63, 983040
  %65 = getelementptr inbounds i8, i8* %2, i64 8
  %66 = bitcast i8* %65 to i16*
  %67 = load i16, i16* %66, align 4
  %68 = zext i16 %67 to i32
  %69 = or i32 %64, %68
  %70 = getelementptr inbounds i8, i8* %2, i64 10
  %71 = bitcast i8* %70 to i16*
  %72 = load i16, i16* %71, align 2
  %73 = shl nuw nsw i32 %36, 8
  %74 = and i32 %73, 983040
  %75 = getelementptr inbounds i8, i8* %2, i64 12
  %76 = bitcast i8* %75 to i16*
  %77 = load i16, i16* %76, align 4
  %78 = zext i16 %77 to i32
  %79 = or i32 %74, %78
  %80 = getelementptr inbounds i8, i8* %2, i64 14
  %81 = bitcast i8* %80 to i16*
  %82 = load i16, i16* %81, align 2
  %83 = zext i16 %82 to i32
  %84 = shl nuw nsw i32 %83, 9
  %85 = add nuw nsw i32 %84, 4095
  %86 = lshr i32 %85, 12
  %87 = trunc i32 %86 to i16
  %88 = trunc i32 %38 to i8
  %89 = trunc i32 %39 to i8
  %90 = shl nuw nsw i32 %62, 1
  %91 = add nuw nsw i32 %90, 16
  switch i32 %39, label %96 [
    i32 0, label %92
    i32 1, label %94
  ]

92:                                               ; preds = %56
  %93 = shl nuw nsw i32 %69, 1
  br label %96

94:                                               ; preds = %56
  %95 = shl nuw nsw i32 %69, 2
  br label %96

96:                                               ; preds = %56, %94, %92
  %97 = phi i32 [ %93, %92 ], [ %95, %94 ], [ %69, %56 ]
  %98 = add nsw i32 %91, %97
  %99 = icmp sgt i32 %98, %3
  br i1 %99, label %100, label %101

100:                                              ; preds = %96
  store i32 3, i32* %5, align 4
  br label %159

101:                                              ; preds = %96
  %102 = tail call noalias i8* @uprv_malloc_69(i64 48) #5
  %103 = bitcast i8* %102 to %struct.UCPTrie*
  %104 = icmp eq i8* %102, null
  br i1 %104, label %105, label %106

105:                                              ; preds = %101
  store i32 7, i32* %5, align 4
  br label %159

106:                                              ; preds = %101
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %102, i8* nonnull align 8 %57, i64 16, i1 false)
  %107 = getelementptr inbounds i8, i8* %102, i64 16
  %108 = bitcast i8* %107 to i32*
  store i32 %62, i32* %108, align 8
  %109 = getelementptr inbounds i8, i8* %102, i64 20
  %110 = bitcast i8* %109 to i32*
  store i32 %69, i32* %110, align 4
  %111 = getelementptr inbounds i8, i8* %102, i64 24
  %112 = bitcast i8* %111 to i32*
  store i32 %84, i32* %112, align 8
  %113 = getelementptr inbounds i8, i8* %102, i64 28
  %114 = bitcast i8* %113 to i16*
  store i16 %87, i16* %114, align 4
  %115 = getelementptr inbounds i8, i8* %102, i64 30
  store i8 %88, i8* %115, align 2
  %116 = getelementptr inbounds i8, i8* %102, i64 31
  store i8 %89, i8* %116, align 1
  %117 = getelementptr inbounds i8, i8* %102, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* nonnull align 8 %58, i64 6, i1 false)
  %118 = getelementptr inbounds i8, i8* %102, i64 38
  %119 = bitcast i8* %118 to i16*
  store i16 %72, i16* %119, align 2
  %120 = getelementptr inbounds i8, i8* %102, i64 40
  %121 = bitcast i8* %120 to i32*
  store i32 %79, i32* %121, align 8
  %122 = getelementptr inbounds i8, i8* %102, i64 44
  %123 = bitcast i8* %122 to i32*
  store i32 0, i32* %123, align 4
  %124 = getelementptr inbounds i8, i8* %2, i64 16
  %125 = bitcast i8* %124 to i16*
  %126 = bitcast i8* %102 to i8**
  store i8* %124, i8** %126, align 8
  %127 = zext i16 %61 to i64
  %128 = getelementptr inbounds i16, i16* %125, i64 %127
  %129 = icmp ult i32 %79, %69
  %130 = add nsw i32 %69, -2
  %131 = select i1 %129, i32 %79, i32 %130
  switch i32 %39, label %154 [
    i32 0, label %132
    i32 1, label %139
    i32 2, label %146
  ]

132:                                              ; preds = %106
  %133 = getelementptr inbounds i8, i8* %102, i64 8
  %134 = bitcast i8* %133 to i16**
  store i16* %128, i16** %134, align 8
  %135 = sext i32 %131 to i64
  %136 = getelementptr inbounds i16, i16* %128, i64 %135
  %137 = load i16, i16* %136, align 2
  %138 = zext i16 %137 to i32
  br label %155

139:                                              ; preds = %106
  %140 = bitcast i16* %128 to i32*
  %141 = getelementptr inbounds i8, i8* %102, i64 8
  %142 = bitcast i8* %141 to i16**
  store i16* %128, i16** %142, align 8
  %143 = sext i32 %131 to i64
  %144 = getelementptr inbounds i32, i32* %140, i64 %143
  %145 = load i32, i32* %144, align 4
  br label %155

146:                                              ; preds = %106
  %147 = bitcast i16* %128 to i8*
  %148 = getelementptr inbounds i8, i8* %102, i64 8
  %149 = bitcast i8* %148 to i16**
  store i16* %128, i16** %149, align 8
  %150 = sext i32 %131 to i64
  %151 = getelementptr inbounds i8, i8* %147, i64 %150
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i32
  br label %155

154:                                              ; preds = %106
  store i32 3, i32* %5, align 4
  br label %159

155:                                              ; preds = %146, %139, %132
  %156 = phi i32 [ %153, %146 ], [ %145, %139 ], [ %138, %132 ]
  store i32 %156, i32* %123, align 4
  %157 = icmp eq i32* %4, null
  br i1 %157, label %159, label %158

158:                                              ; preds = %155
  store i32 %98, i32* %4, align 4
  br label %159

159:                                              ; preds = %105, %158, %155, %154, %100
  %160 = phi %struct.UCPTrie* [ null, %100 ], [ null, %105 ], [ null, %154 ], [ %103, %155 ], [ %103, %158 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57)
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %58)
  br label %161

161:                                              ; preds = %31, %55, %159, %46, %6, %26, %23
  %162 = phi %struct.UCPTrie* [ null, %23 ], [ null, %26 ], [ null, %6 ], [ null, %31 ], [ null, %46 ], [ null, %55 ], [ %160, %159 ]
  ret %struct.UCPTrie* %162
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @ucptrie_close_69(%struct.UCPTrie*) local_unnamed_addr #0 {
  %2 = bitcast %struct.UCPTrie* %0 to i8*
  tail call void @uprv_free_69(i8* %2) #6
  ret void
}

declare void @uprv_free_69(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @ucptrie_getType_69(%struct.UCPTrie* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 6
  %3 = load i8, i8* %2, align 2
  %4 = sext i8 %3 to i32
  ret i32 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @ucptrie_getValueWidth_69(%struct.UCPTrie* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 1
  %4 = sext i8 %3 to i32
  ret i32 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* nocapture readonly, i32) local_unnamed_addr #4 {
  %3 = ashr i32 %1, 14
  %4 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 6
  %5 = load i8, i8* %4, align 2
  %6 = icmp eq i8 %5, 0
  %7 = select i1 %6, i32 1020, i32 64
  %8 = add nsw i32 %7, %3
  %9 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 0
  %10 = load i16*, i16** %9, align 8
  %11 = sext i32 %8 to i64
  %12 = getelementptr inbounds i16, i16* %10, i64 %11
  %13 = load i16, i16* %12, align 2
  %14 = zext i16 %13 to i32
  %15 = lshr i32 %1, 9
  %16 = and i32 %15, 31
  %17 = add nuw nsw i32 %16, %14
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i16, i16* %10, i64 %18
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i32
  %22 = lshr i32 %1, 4
  %23 = and i32 %22, 31
  %24 = icmp sgt i16 %20, -1
  br i1 %24, label %25, label %31

25:                                               ; preds = %2
  %26 = add nuw nsw i32 %23, %21
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds i16, i16* %10, i64 %27
  %29 = load i16, i16* %28, align 2
  %30 = zext i16 %29 to i32
  br label %53

31:                                               ; preds = %2
  %32 = and i32 %21, 32767
  %33 = and i32 %22, 24
  %34 = lshr i32 %23, 3
  %35 = or i32 %34, %33
  %36 = add nuw nsw i32 %35, %32
  %37 = and i32 %22, 7
  %38 = zext i32 %36 to i64
  %39 = getelementptr inbounds i16, i16* %10, i64 %38
  %40 = load i16, i16* %39, align 2
  %41 = zext i16 %40 to i32
  %42 = shl nuw nsw i32 %37, 1
  %43 = add nuw nsw i32 %42, 2
  %44 = shl i32 %41, %43
  %45 = and i32 %44, 196608
  %46 = add nuw nsw i32 %37, 1
  %47 = add nuw nsw i32 %46, %36
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i16, i16* %10, i64 %48
  %50 = load i16, i16* %49, align 2
  %51 = zext i16 %50 to i32
  %52 = or i32 %45, %51
  br label %53

53:                                               ; preds = %31, %25
  %54 = phi i32 [ %30, %25 ], [ %52, %31 ]
  %55 = and i32 %1, 15
  %56 = add nsw i32 %54, %55
  ret i32 %56
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @ucptrie_internalSmallU8Index_69(%struct.UCPTrie* nocapture readonly, i32, i8 zeroext, i8 zeroext) local_unnamed_addr #4 {
  %5 = shl i32 %1, 12
  %6 = zext i8 %2 to i32
  %7 = shl nuw nsw i32 %6, 6
  %8 = or i32 %7, %5
  %9 = zext i8 %3 to i32
  %10 = or i32 %8, %9
  %11 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = icmp slt i32 %10, %12
  br i1 %13, label %18, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %16, -2
  br label %73

18:                                               ; preds = %4
  %19 = ashr i32 %5, 14
  %20 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 6
  %21 = load i8, i8* %20, align 2
  %22 = icmp eq i8 %21, 0
  %23 = select i1 %22, i32 1020, i32 64
  %24 = add nsw i32 %23, %19
  %25 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 0
  %26 = load i16*, i16** %25, align 8
  %27 = sext i32 %24 to i64
  %28 = getelementptr inbounds i16, i16* %26, i64 %27
  %29 = load i16, i16* %28, align 2
  %30 = zext i16 %29 to i32
  %31 = lshr i32 %8, 9
  %32 = and i32 %31, 31
  %33 = add nuw nsw i32 %32, %30
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds i16, i16* %26, i64 %34
  %36 = load i16, i16* %35, align 2
  %37 = zext i16 %36 to i32
  %38 = lshr i32 %10, 4
  %39 = and i32 %38, 31
  %40 = icmp sgt i16 %36, -1
  br i1 %40, label %41, label %47

41:                                               ; preds = %18
  %42 = add nuw nsw i32 %39, %37
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds i16, i16* %26, i64 %43
  %45 = load i16, i16* %44, align 2
  %46 = zext i16 %45 to i32
  br label %69

47:                                               ; preds = %18
  %48 = and i32 %37, 32767
  %49 = and i32 %38, 24
  %50 = lshr i32 %39, 3
  %51 = or i32 %50, %49
  %52 = add nuw nsw i32 %48, %51
  %53 = and i32 %38, 7
  %54 = zext i32 %52 to i64
  %55 = getelementptr inbounds i16, i16* %26, i64 %54
  %56 = load i16, i16* %55, align 2
  %57 = zext i16 %56 to i32
  %58 = shl nuw nsw i32 %53, 1
  %59 = add nuw nsw i32 %58, 2
  %60 = shl i32 %57, %59
  %61 = and i32 %60, 196608
  %62 = add nuw nsw i32 %53, 1
  %63 = add nuw nsw i32 %62, %52
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds i16, i16* %26, i64 %64
  %66 = load i16, i16* %65, align 2
  %67 = zext i16 %66 to i32
  %68 = or i32 %61, %67
  br label %69

69:                                               ; preds = %41, %47
  %70 = phi i32 [ %46, %41 ], [ %68, %47 ]
  %71 = and i32 %9, 15
  %72 = add nsw i32 %70, %71
  br label %73

73:                                               ; preds = %69, %14
  %74 = phi i32 [ %17, %14 ], [ %72, %69 ]
  ret i32 %74
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ucptrie_internalU8PrevIndex_69(%struct.UCPTrie* nocapture readonly, i32, i8*, i8*) local_unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #6
  store i32 -1431655766, i32* %5, align 4
  %7 = ptrtoint i8* %3 to i64
  %8 = ptrtoint i8* %2 to i64
  %9 = sub i64 %7, %8
  %10 = icmp slt i64 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  %12 = trunc i64 %9 to i32
  store i32 %12, i32* %5, align 4
  br label %15

13:                                               ; preds = %4
  store i32 7, i32* %5, align 4
  %14 = getelementptr inbounds i8, i8* %3, i64 -7
  br label %15

15:                                               ; preds = %13, %11
  %16 = phi i8* [ %2, %11 ], [ %14, %13 ]
  %17 = phi i32 [ %12, %11 ], [ 7, %13 ]
  %18 = call i32 @utf8_prevCharSafeBody_69(i8* %16, i32 0, i32* nonnull %5, i32 %1, i8 signext -1) #6
  %19 = load i32, i32* %5, align 4
  %20 = sub nsw i32 %17, %19
  store i32 %20, i32* %5, align 4
  %21 = icmp ult i32 %18, 65536
  br i1 %21, label %22, label %32

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 0
  %24 = load i16*, i16** %23, align 8
  %25 = lshr i32 %18, 6
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %24, i64 %26
  %28 = load i16, i16* %27, align 2
  %29 = zext i16 %28 to i32
  %30 = and i32 %18, 63
  %31 = add nuw nsw i32 %30, %29
  br label %101

32:                                               ; preds = %15
  %33 = icmp ult i32 %18, 1114112
  br i1 %33, label %34, label %97

34:                                               ; preds = %32
  %35 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 4
  %36 = load i32, i32* %35, align 8
  %37 = icmp slt i32 %18, %36
  br i1 %37, label %42, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 4
  %41 = add nsw i32 %40, -2
  br label %101

42:                                               ; preds = %34
  %43 = lshr i32 %18, 14
  %44 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 6
  %45 = load i8, i8* %44, align 2
  %46 = icmp eq i8 %45, 0
  %47 = select i1 %46, i32 1020, i32 64
  %48 = add nuw nsw i32 %47, %43
  %49 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 0
  %50 = load i16*, i16** %49, align 8
  %51 = zext i32 %48 to i64
  %52 = getelementptr inbounds i16, i16* %50, i64 %51
  %53 = load i16, i16* %52, align 2
  %54 = zext i16 %53 to i32
  %55 = lshr i32 %18, 9
  %56 = and i32 %55, 31
  %57 = add nuw nsw i32 %56, %54
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i16, i16* %50, i64 %58
  %60 = load i16, i16* %59, align 2
  %61 = zext i16 %60 to i32
  %62 = lshr i32 %18, 4
  %63 = and i32 %62, 31
  %64 = icmp sgt i16 %60, -1
  br i1 %64, label %65, label %71

65:                                               ; preds = %42
  %66 = add nuw nsw i32 %63, %61
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds i16, i16* %50, i64 %67
  %69 = load i16, i16* %68, align 2
  %70 = zext i16 %69 to i32
  br label %93

71:                                               ; preds = %42
  %72 = and i32 %61, 32767
  %73 = and i32 %62, 24
  %74 = lshr i32 %63, 3
  %75 = or i32 %74, %73
  %76 = add nuw nsw i32 %72, %75
  %77 = and i32 %62, 7
  %78 = zext i32 %76 to i64
  %79 = getelementptr inbounds i16, i16* %50, i64 %78
  %80 = load i16, i16* %79, align 2
  %81 = zext i16 %80 to i32
  %82 = shl nuw nsw i32 %77, 1
  %83 = add nuw nsw i32 %82, 2
  %84 = shl i32 %81, %83
  %85 = and i32 %84, 196608
  %86 = add nuw nsw i32 %77, 1
  %87 = add nuw nsw i32 %86, %76
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds i16, i16* %50, i64 %88
  %90 = load i16, i16* %89, align 2
  %91 = zext i16 %90 to i32
  %92 = or i32 %85, %91
  br label %93

93:                                               ; preds = %65, %71
  %94 = phi i32 [ %70, %65 ], [ %92, %71 ]
  %95 = and i32 %18, 15
  %96 = add nsw i32 %94, %95
  br label %101

97:                                               ; preds = %32
  %98 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 3
  %99 = load i32, i32* %98, align 4
  %100 = add nsw i32 %99, -1
  br label %101

101:                                              ; preds = %97, %93, %38, %22
  %102 = phi i32 [ %31, %22 ], [ %100, %97 ], [ %41, %38 ], [ %96, %93 ]
  %103 = shl i32 %102, 3
  %104 = or i32 %103, %20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #6
  ret i32 %104
}

declare i32 @utf8_prevCharSafeBody_69(i8*, i32, i32*, i32, i8 signext) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @ucptrie_get_69(%struct.UCPTrie* nocapture readonly, i32) local_unnamed_addr #4 {
  %3 = icmp ult i32 %1, 128
  br i1 %3, label %86, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 6
  %6 = load i8, i8* %5, align 2
  %7 = icmp eq i8 %6, 0
  %8 = select i1 %7, i32 65535, i32 4095
  %9 = icmp ult i32 %8, %1
  br i1 %9, label %20, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = ashr i32 %1, 6
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i16, i16* %12, i64 %14
  %16 = load i16, i16* %15, align 2
  %17 = zext i16 %16 to i32
  %18 = and i32 %1, 63
  %19 = add nuw nsw i32 %18, %17
  br label %86

20:                                               ; preds = %4
  %21 = icmp ult i32 %1, 1114112
  br i1 %21, label %22, label %82

22:                                               ; preds = %20
  %23 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 4
  %24 = load i32, i32* %23, align 8
  %25 = icmp sgt i32 %24, %1
  br i1 %25, label %30, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 3
  %28 = load i32, i32* %27, align 4
  %29 = add nsw i32 %28, -2
  br label %86

30:                                               ; preds = %22
  %31 = lshr i32 %1, 14
  %32 = select i1 %7, i32 1020, i32 64
  %33 = add nuw nsw i32 %32, %31
  %34 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 0
  %35 = load i16*, i16** %34, align 8
  %36 = zext i32 %33 to i64
  %37 = getelementptr inbounds i16, i16* %35, i64 %36
  %38 = load i16, i16* %37, align 2
  %39 = zext i16 %38 to i32
  %40 = lshr i32 %1, 9
  %41 = and i32 %40, 31
  %42 = add nuw nsw i32 %41, %39
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds i16, i16* %35, i64 %43
  %45 = load i16, i16* %44, align 2
  %46 = zext i16 %45 to i32
  %47 = lshr i32 %1, 4
  %48 = and i32 %47, 31
  %49 = icmp sgt i16 %45, -1
  br i1 %49, label %50, label %56

50:                                               ; preds = %30
  %51 = add nuw nsw i32 %48, %46
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i16, i16* %35, i64 %52
  %54 = load i16, i16* %53, align 2
  %55 = zext i16 %54 to i32
  br label %78

56:                                               ; preds = %30
  %57 = and i32 %46, 32767
  %58 = and i32 %47, 24
  %59 = lshr i32 %48, 3
  %60 = or i32 %59, %58
  %61 = add nuw nsw i32 %57, %60
  %62 = and i32 %47, 7
  %63 = zext i32 %61 to i64
  %64 = getelementptr inbounds i16, i16* %35, i64 %63
  %65 = load i16, i16* %64, align 2
  %66 = zext i16 %65 to i32
  %67 = shl nuw nsw i32 %62, 1
  %68 = add nuw nsw i32 %67, 2
  %69 = shl i32 %66, %68
  %70 = and i32 %69, 196608
  %71 = add nuw nsw i32 %62, 1
  %72 = add nuw nsw i32 %71, %61
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds i16, i16* %35, i64 %73
  %75 = load i16, i16* %74, align 2
  %76 = zext i16 %75 to i32
  %77 = or i32 %70, %76
  br label %78

78:                                               ; preds = %50, %56
  %79 = phi i32 [ %55, %50 ], [ %77, %56 ]
  %80 = and i32 %1, 15
  %81 = add nsw i32 %79, %80
  br label %86

82:                                               ; preds = %20
  %83 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 3
  %84 = load i32, i32* %83, align 4
  %85 = add nsw i32 %84, -1
  br label %86

86:                                               ; preds = %10, %26, %78, %82, %2
  %87 = phi i32 [ %1, %2 ], [ %19, %10 ], [ %85, %82 ], [ %29, %26 ], [ %81, %78 ]
  %88 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 1, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 7
  %91 = load i8, i8* %90, align 1
  %92 = sext i8 %91 to i32
  switch i32 %92, label %109 [
    i32 0, label %93
    i32 1, label %99
    i32 2, label %104
  ]

93:                                               ; preds = %86
  %94 = bitcast i8* %89 to i16*
  %95 = sext i32 %87 to i64
  %96 = getelementptr inbounds i16, i16* %94, i64 %95
  %97 = load i16, i16* %96, align 2
  %98 = zext i16 %97 to i32
  br label %109

99:                                               ; preds = %86
  %100 = bitcast i8* %89 to i32*
  %101 = sext i32 %87 to i64
  %102 = getelementptr inbounds i32, i32* %100, i64 %101
  %103 = load i32, i32* %102, align 4
  br label %109

104:                                              ; preds = %86
  %105 = sext i32 %87 to i64
  %106 = getelementptr inbounds i8, i8* %89, i64 %105
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  br label %109

109:                                              ; preds = %86, %93, %99, %104
  %110 = phi i32 [ %108, %104 ], [ %103, %99 ], [ %98, %93 ], [ -1, %86 ]
  ret i32 %110
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ucptrie_internalGetRange_69(i32 (i8*, i32, i32 (i8*, i32)*, i8*, i32*)* nocapture, i8*, i32, i32, i32, i32 (i8*, i32)*, i8*, i32*) local_unnamed_addr #0 {
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = icmp eq i32 %3, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  %13 = tail call i32 %0(i8* %1, i32 %2, i32 (i8*, i32)* %5, i8* %6, i32* %7) #6
  br label %42

14:                                               ; preds = %8
  %15 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #6
  store i32 -1431655766, i32* %9, align 4
  %16 = icmp eq i32* %7, null
  %17 = select i1 %16, i32* %9, i32* %7
  %18 = icmp eq i32 %3, 2
  %19 = select i1 %18, i32 57343, i32 56319
  %20 = call i32 %0(i8* %1, i32 %2, i32 (i8*, i32)* %5, i8* %6, i32* %17) #6
  %21 = icmp slt i32 %20, 55295
  %22 = icmp slt i32 %19, %2
  %23 = or i1 %22, %21
  br i1 %23, label %40, label %24

24:                                               ; preds = %14
  %25 = load i32, i32* %17, align 4
  %26 = icmp eq i32 %25, %4
  br i1 %26, label %27, label %29

27:                                               ; preds = %24
  %28 = icmp slt i32 %20, %19
  br i1 %28, label %33, label %40

29:                                               ; preds = %24
  %30 = icmp slt i32 %2, 55296
  br i1 %30, label %40, label %31

31:                                               ; preds = %29
  store i32 %4, i32* %17, align 4
  %32 = icmp sgt i32 %20, %19
  br i1 %32, label %40, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #6
  store i32 -1431655766, i32* %10, align 4
  %35 = add nuw nsw i32 %19, 1
  %36 = call i32 %0(i8* %1, i32 %35, i32 (i8*, i32)* %5, i8* %6, i32* nonnull %10) #6
  %37 = load i32, i32* %10, align 4
  %38 = icmp eq i32 %37, %4
  %39 = select i1 %38, i32 %36, i32 %19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #6
  br label %40

40:                                               ; preds = %31, %29, %27, %14, %33
  %41 = phi i32 [ %39, %33 ], [ %20, %14 ], [ %20, %27 ], [ 55295, %29 ], [ %19, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #6
  br label %42

42:                                               ; preds = %40, %12
  %43 = phi i32 [ %13, %12 ], [ %41, %40 ]
  ret i32 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ucptrie_getRange_69(%struct.UCPTrie*, i32, i32, i32, i32 (i8*, i32)*, i8*, i32*) local_unnamed_addr #0 {
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = bitcast %struct.UCPTrie* %0 to i8*
  %11 = icmp eq i32 %2, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  %13 = tail call fastcc i32 @_ZN12_GLOBAL__N_18getRangeEPKviPFjS1_jES1_Pj(i8* %10, i32 %1, i32 (i8*, i32)* %4, i8* %5, i32* %6) #6
  br label %42

14:                                               ; preds = %7
  %15 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #6
  store i32 -1431655766, i32* %8, align 4
  %16 = icmp eq i32* %6, null
  %17 = select i1 %16, i32* %8, i32* %6
  %18 = icmp eq i32 %2, 2
  %19 = select i1 %18, i32 57343, i32 56319
  %20 = call fastcc i32 @_ZN12_GLOBAL__N_18getRangeEPKviPFjS1_jES1_Pj(i8* %10, i32 %1, i32 (i8*, i32)* %4, i8* %5, i32* %17) #6
  %21 = icmp slt i32 %20, 55295
  %22 = icmp slt i32 %19, %1
  %23 = or i1 %22, %21
  br i1 %23, label %40, label %24

24:                                               ; preds = %14
  %25 = load i32, i32* %17, align 4
  %26 = icmp eq i32 %25, %3
  br i1 %26, label %27, label %29

27:                                               ; preds = %24
  %28 = icmp slt i32 %20, %19
  br i1 %28, label %33, label %40

29:                                               ; preds = %24
  %30 = icmp slt i32 %1, 55296
  br i1 %30, label %40, label %31

31:                                               ; preds = %29
  store i32 %3, i32* %17, align 4
  %32 = icmp sgt i32 %20, %19
  br i1 %32, label %40, label %33

33:                                               ; preds = %31, %27
  %34 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #6
  store i32 -1431655766, i32* %9, align 4
  %35 = add nuw nsw i32 %19, 1
  %36 = call fastcc i32 @_ZN12_GLOBAL__N_18getRangeEPKviPFjS1_jES1_Pj(i8* %10, i32 %35, i32 (i8*, i32)* %4, i8* %5, i32* nonnull %9) #6
  %37 = load i32, i32* %9, align 4
  %38 = icmp eq i32 %37, %3
  %39 = select i1 %38, i32 %36, i32 %19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #6
  br label %40

40:                                               ; preds = %33, %31, %29, %27, %14
  %41 = phi i32 [ %39, %33 ], [ %20, %14 ], [ %20, %27 ], [ 55295, %29 ], [ %19, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #6
  br label %42

42:                                               ; preds = %12, %40
  %43 = phi i32 [ %13, %12 ], [ %41, %40 ]
  ret i32 %43
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN12_GLOBAL__N_18getRangeEPKviPFjS1_jES1_Pj(i8* nocapture readonly, i32, i32 (i8*, i32)*, i8*, i32*) unnamed_addr #0 {
  %6 = icmp ugt i32 %1, 1114111
  br i1 %6, label %346, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds i8, i8* %0, i64 31
  %9 = load i8, i8* %8, align 1
  %10 = sext i8 %9 to i32
  %11 = getelementptr inbounds i8, i8* %0, i64 24
  %12 = bitcast i8* %11 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = icmp sgt i32 %13, %1
  br i1 %14, label %48, label %15

15:                                               ; preds = %7
  %16 = icmp eq i32* %4, null
  br i1 %16, label %346, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds i8, i8* %0, i64 20
  %19 = bitcast i8* %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = add nsw i32 %20, -2
  %22 = getelementptr inbounds i8, i8* %0, i64 8
  %23 = bitcast i8* %22 to i8**
  %24 = load i8*, i8** %23, align 8
  switch i32 %10, label %41 [
    i32 0, label %25
    i32 1, label %31
    i32 2, label %36
  ]

25:                                               ; preds = %17
  %26 = bitcast i8* %24 to i16*
  %27 = sext i32 %21 to i64
  %28 = getelementptr inbounds i16, i16* %26, i64 %27
  %29 = load i16, i16* %28, align 2
  %30 = zext i16 %29 to i32
  br label %41

31:                                               ; preds = %17
  %32 = bitcast i8* %24 to i32*
  %33 = sext i32 %21 to i64
  %34 = getelementptr inbounds i32, i32* %32, i64 %33
  %35 = load i32, i32* %34, align 4
  br label %41

36:                                               ; preds = %17
  %37 = sext i32 %21 to i64
  %38 = getelementptr inbounds i8, i8* %24, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  br label %41

41:                                               ; preds = %17, %25, %31, %36
  %42 = phi i32 [ %40, %36 ], [ %35, %31 ], [ %30, %25 ], [ -1, %17 ]
  %43 = icmp eq i32 (i8*, i32)* %2, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %41
  %45 = tail call i32 %2(i8* %3, i32 %42) #6
  br label %46

46:                                               ; preds = %41, %44
  %47 = phi i32 [ %45, %44 ], [ %42, %41 ]
  store i32 %47, i32* %4, align 4
  br label %346

48:                                               ; preds = %7
  %49 = getelementptr inbounds i8, i8* %0, i64 44
  %50 = bitcast i8* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 (i8*, i32)* %2, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %48
  %54 = tail call i32 %2(i8* %3, i32 %51) #6
  br label %55

55:                                               ; preds = %48, %53
  %56 = phi i32 [ %54, %53 ], [ %51, %48 ]
  %57 = bitcast i8* %0 to i16**
  %58 = load i16*, i16** %57, align 8
  %59 = getelementptr inbounds i8, i8* %0, i64 30
  %60 = getelementptr inbounds i8, i8* %0, i64 38
  %61 = bitcast i8* %60 to i16*
  %62 = icmp eq i32* %4, null
  %63 = getelementptr inbounds i8, i8* %0, i64 40
  %64 = bitcast i8* %63 to i32*
  %65 = getelementptr inbounds i8, i8* %0, i64 8
  %66 = bitcast i8* %65 to i8**
  br label %67

67:                                               ; preds = %302, %55
  %68 = phi i32 [ -1, %55 ], [ %308, %302 ]
  %69 = phi i32 [ -1, %55 ], [ %307, %302 ]
  %70 = phi i32 [ %1, %55 ], [ %306, %302 ]
  %71 = phi i32 [ -1431655766, %55 ], [ %305, %302 ]
  %72 = phi i32 [ %56, %55 ], [ %304, %302 ]
  %73 = phi i8 [ 0, %55 ], [ %303, %302 ]
  %74 = icmp slt i32 %70, 65536
  %75 = load i8, i8* %59, align 2
  br i1 %74, label %76, label %83

76:                                               ; preds = %67
  %77 = icmp eq i8 %75, 0
  %78 = icmp slt i32 %70, 4096
  %79 = or i1 %78, %77
  br i1 %79, label %80, label %83

80:                                               ; preds = %76
  %81 = ashr i32 %70, 6
  %82 = select i1 %77, i64 1024, i64 64
  br label %126

83:                                               ; preds = %67, %76
  %84 = lshr i32 %70, 14
  %85 = icmp eq i8 %75, 0
  %86 = select i1 %85, i32 1020, i32 64
  %87 = add nuw nsw i32 %86, %84
  %88 = load i16*, i16** %57, align 8
  %89 = zext i32 %87 to i64
  %90 = getelementptr inbounds i16, i16* %88, i64 %89
  %91 = load i16, i16* %90, align 2
  %92 = zext i16 %91 to i32
  %93 = lshr i32 %70, 9
  %94 = and i32 %93, 31
  %95 = add nuw nsw i32 %94, %92
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds i16, i16* %88, i64 %96
  %98 = load i16, i16* %97, align 2
  %99 = zext i16 %98 to i32
  %100 = icmp eq i32 %68, %99
  %101 = sub nsw i32 %70, %1
  %102 = icmp sgt i32 %101, 511
  %103 = and i1 %102, %100
  br i1 %103, label %104, label %106

104:                                              ; preds = %83
  %105 = add nuw nsw i32 %70, 512
  br label %302

106:                                              ; preds = %83
  %107 = load i16, i16* %61, align 2
  %108 = icmp eq i16 %98, %107
  br i1 %108, label %109, label %123

109:                                              ; preds = %106
  %110 = and i8 %73, 1
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %114, label %112

112:                                              ; preds = %109
  %113 = icmp eq i32 %56, %72
  br i1 %113, label %117, label %300

114:                                              ; preds = %109
  %115 = load i32, i32* %50, align 4
  br i1 %62, label %117, label %116

116:                                              ; preds = %114
  store i32 %56, i32* %4, align 4
  br label %117

117:                                              ; preds = %116, %114, %112
  %118 = phi i32 [ %71, %112 ], [ %115, %114 ], [ %115, %116 ]
  %119 = phi i8 [ %73, %112 ], [ 1, %114 ], [ 1, %116 ]
  %120 = load i32, i32* %64, align 8
  %121 = add nuw nsw i32 %70, 512
  %122 = and i32 %121, -512
  br label %302

123:                                              ; preds = %106
  %124 = lshr i32 %70, 4
  %125 = and i32 %124, 31
  br label %126

126:                                              ; preds = %123, %80
  %127 = phi i32 [ %68, %80 ], [ %99, %123 ]
  %128 = phi i32 [ 0, %80 ], [ %99, %123 ]
  %129 = phi i32 [ %81, %80 ], [ %125, %123 ]
  %130 = phi i64 [ %82, %80 ], [ 32, %123 ]
  %131 = phi i32 [ 64, %80 ], [ 16, %123 ]
  %132 = trunc i32 %128 to i16
  %133 = icmp sgt i16 %132, -1
  %134 = and i32 %128, 32767
  %135 = add nsw i32 %131, -1
  %136 = sub nsw i32 0, %131
  %137 = sext i32 %129 to i64
  %138 = zext i32 %128 to i64
  br label %139

139:                                              ; preds = %292, %126
  %140 = phi i64 [ %298, %292 ], [ %137, %126 ]
  %141 = phi i32 [ %293, %292 ], [ %69, %126 ]
  %142 = phi i32 [ %294, %292 ], [ %70, %126 ]
  %143 = phi i32 [ %295, %292 ], [ %71, %126 ]
  %144 = phi i32 [ %296, %292 ], [ %72, %126 ]
  %145 = phi i8 [ %297, %292 ], [ %73, %126 ]
  br i1 %133, label %146, label %151

146:                                              ; preds = %139
  %147 = add nsw i64 %140, %138
  %148 = getelementptr inbounds i16, i16* %58, i64 %147
  %149 = load i16, i16* %148, align 2
  %150 = zext i16 %149 to i32
  br label %173

151:                                              ; preds = %139
  %152 = trunc i64 %140 to i32
  %153 = and i32 %152, -8
  %154 = add nsw i32 %153, %134
  %155 = ashr i32 %152, 3
  %156 = add nsw i32 %154, %155
  %157 = and i32 %152, 7
  %158 = sext i32 %156 to i64
  %159 = getelementptr inbounds i16, i16* %58, i64 %158
  %160 = load i16, i16* %159, align 2
  %161 = zext i16 %160 to i32
  %162 = shl nuw nsw i32 %157, 1
  %163 = add nuw nsw i32 %162, 2
  %164 = shl i32 %161, %163
  %165 = and i32 %164, 196608
  %166 = add nuw nsw i32 %157, 1
  %167 = add i32 %166, %156
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds i16, i16* %58, i64 %168
  %170 = load i16, i16* %169, align 2
  %171 = zext i16 %170 to i32
  %172 = or i32 %165, %171
  br label %173

173:                                              ; preds = %151, %146
  %174 = phi i32 [ %150, %146 ], [ %172, %151 ]
  %175 = icmp ne i32 %174, %141
  %176 = sub nsw i32 %142, %1
  %177 = icmp slt i32 %176, %131
  %178 = or i1 %177, %175
  br i1 %178, label %181, label %179

179:                                              ; preds = %173
  %180 = add nsw i32 %142, %131
  br label %292

181:                                              ; preds = %173
  %182 = load i32, i32* %64, align 8
  %183 = icmp eq i32 %174, %182
  br i1 %183, label %184, label %199

184:                                              ; preds = %181
  %185 = and i8 %145, 1
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %191, label %187

187:                                              ; preds = %184
  %188 = icmp eq i32 %56, %144
  br i1 %188, label %194, label %189

189:                                              ; preds = %187
  %190 = add nsw i32 %142, -1
  br label %346

191:                                              ; preds = %184
  %192 = load i32, i32* %50, align 4
  br i1 %62, label %194, label %193

193:                                              ; preds = %191
  store i32 %56, i32* %4, align 4
  br label %194

194:                                              ; preds = %193, %191, %187
  %195 = phi i32 [ %143, %187 ], [ %192, %191 ], [ %192, %193 ]
  %196 = phi i8 [ %145, %187 ], [ 1, %191 ], [ 1, %193 ]
  %197 = add nsw i32 %142, %131
  %198 = and i32 %197, %136
  br label %292

199:                                              ; preds = %181
  %200 = and i32 %142, %135
  %201 = add i32 %174, %200
  %202 = load i8*, i8** %66, align 8
  switch i32 %10, label %219 [
    i32 0, label %203
    i32 1, label %209
    i32 2, label %214
  ]

203:                                              ; preds = %199
  %204 = bitcast i8* %202 to i16*
  %205 = sext i32 %201 to i64
  %206 = getelementptr inbounds i16, i16* %204, i64 %205
  %207 = load i16, i16* %206, align 2
  %208 = zext i16 %207 to i32
  br label %219

209:                                              ; preds = %199
  %210 = bitcast i8* %202 to i32*
  %211 = sext i32 %201 to i64
  %212 = getelementptr inbounds i32, i32* %210, i64 %211
  %213 = load i32, i32* %212, align 4
  br label %219

214:                                              ; preds = %199
  %215 = sext i32 %201 to i64
  %216 = getelementptr inbounds i8, i8* %202, i64 %215
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i32
  br label %219

219:                                              ; preds = %199, %203, %209, %214
  %220 = phi i32 [ %218, %214 ], [ %213, %209 ], [ %208, %203 ], [ -1, %199 ]
  %221 = and i8 %145, 1
  %222 = icmp eq i8 %221, 0
  br i1 %222, label %236, label %223

223:                                              ; preds = %219
  %224 = icmp eq i32 %220, %143
  br i1 %224, label %246, label %225

225:                                              ; preds = %223
  br i1 %52, label %234, label %226

226:                                              ; preds = %225
  %227 = load i32, i32* %50, align 4
  %228 = icmp eq i32 %220, %227
  br i1 %228, label %231, label %229

229:                                              ; preds = %226
  %230 = tail call i32 %2(i8* %3, i32 %220) #6
  br label %231

231:                                              ; preds = %226, %229
  %232 = phi i32 [ %230, %229 ], [ %56, %226 ]
  %233 = icmp eq i32 %232, %144
  br i1 %233, label %246, label %234

234:                                              ; preds = %231, %225
  %235 = add nsw i32 %142, -1
  br label %346

236:                                              ; preds = %219
  %237 = load i32, i32* %50, align 4
  %238 = icmp eq i32 %220, %237
  %239 = or i1 %52, %238
  %240 = select i1 %238, i32 %56, i32 %220
  br i1 %239, label %243, label %241

241:                                              ; preds = %236
  %242 = tail call i32 %2(i8* %3, i32 %220) #6
  br label %243

243:                                              ; preds = %236, %241
  %244 = phi i32 [ %242, %241 ], [ %240, %236 ]
  br i1 %62, label %246, label %245

245:                                              ; preds = %243
  store i32 %244, i32* %4, align 4
  br label %246

246:                                              ; preds = %245, %243, %231, %223
  %247 = phi i32 [ %143, %223 ], [ %220, %231 ], [ %220, %243 ], [ %220, %245 ]
  %248 = phi i32 [ %144, %223 ], [ %144, %231 ], [ %244, %243 ], [ %244, %245 ]
  %249 = phi i8 [ %145, %223 ], [ %145, %231 ], [ 1, %243 ], [ 1, %245 ]
  %250 = add nsw i32 %142, 1
  %251 = and i32 %250, %135
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %292, label %253

253:                                              ; preds = %246
  %254 = sext i32 %201 to i64
  br label %255

255:                                              ; preds = %253, %287
  %256 = phi i64 [ %254, %253 ], [ %261, %287 ]
  %257 = phi i32 [ %250, %253 ], [ %289, %287 ]
  %258 = phi i32 [ %247, %253 ], [ %288, %287 ]
  %259 = phi i32 [ %142, %253 ], [ %257, %287 ]
  %260 = load i8*, i8** %66, align 8
  %261 = add i64 %256, 1
  switch i32 %10, label %275 [
    i32 0, label %262
    i32 1, label %267
    i32 2, label %271
  ]

262:                                              ; preds = %255
  %263 = bitcast i8* %260 to i16*
  %264 = getelementptr inbounds i16, i16* %263, i64 %261
  %265 = load i16, i16* %264, align 2
  %266 = zext i16 %265 to i32
  br label %275

267:                                              ; preds = %255
  %268 = bitcast i8* %260 to i32*
  %269 = getelementptr inbounds i32, i32* %268, i64 %261
  %270 = load i32, i32* %269, align 4
  br label %275

271:                                              ; preds = %255
  %272 = getelementptr inbounds i8, i8* %260, i64 %261
  %273 = load i8, i8* %272, align 1
  %274 = zext i8 %273 to i32
  br label %275

275:                                              ; preds = %255, %262, %267, %271
  %276 = phi i32 [ %274, %271 ], [ %270, %267 ], [ %266, %262 ], [ -1, %255 ]
  %277 = icmp eq i32 %276, %258
  br i1 %277, label %287, label %278

278:                                              ; preds = %275
  br i1 %52, label %346, label %279

279:                                              ; preds = %278
  %280 = load i32, i32* %50, align 4
  %281 = icmp eq i32 %276, %280
  br i1 %281, label %284, label %282

282:                                              ; preds = %279
  %283 = tail call i32 %2(i8* %3, i32 %276) #6
  br label %284

284:                                              ; preds = %279, %282
  %285 = phi i32 [ %283, %282 ], [ %56, %279 ]
  %286 = icmp eq i32 %285, %248
  br i1 %286, label %287, label %346

287:                                              ; preds = %284, %275
  %288 = phi i32 [ %258, %275 ], [ %276, %284 ]
  %289 = add nsw i32 %257, 1
  %290 = and i32 %289, %135
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %255

292:                                              ; preds = %287, %246, %194, %179
  %293 = phi i32 [ %141, %179 ], [ %174, %194 ], [ %174, %246 ], [ %174, %287 ]
  %294 = phi i32 [ %180, %179 ], [ %198, %194 ], [ %250, %246 ], [ %289, %287 ]
  %295 = phi i32 [ %143, %179 ], [ %195, %194 ], [ %247, %246 ], [ %288, %287 ]
  %296 = phi i32 [ %144, %179 ], [ %56, %194 ], [ %248, %246 ], [ %248, %287 ]
  %297 = phi i8 [ %145, %179 ], [ %196, %194 ], [ %249, %246 ], [ %249, %287 ]
  %298 = add nsw i64 %140, 1
  %299 = icmp slt i64 %298, %130
  br i1 %299, label %139, label %302

300:                                              ; preds = %112
  %301 = add nsw i32 %70, -1
  br label %346

302:                                              ; preds = %292, %104, %117
  %303 = phi i8 [ %73, %104 ], [ %119, %117 ], [ %297, %292 ]
  %304 = phi i32 [ %72, %104 ], [ %56, %117 ], [ %296, %292 ]
  %305 = phi i32 [ %71, %104 ], [ %118, %117 ], [ %295, %292 ]
  %306 = phi i32 [ %105, %104 ], [ %122, %117 ], [ %294, %292 ]
  %307 = phi i32 [ %69, %104 ], [ %120, %117 ], [ %293, %292 ]
  %308 = phi i32 [ %68, %104 ], [ %99, %117 ], [ %127, %292 ]
  %309 = load i32, i32* %12, align 8
  %310 = icmp slt i32 %306, %309
  br i1 %310, label %67, label %311

311:                                              ; preds = %302
  %312 = getelementptr inbounds i8, i8* %0, i64 20
  %313 = bitcast i8* %312 to i32*
  %314 = load i32, i32* %313, align 4
  %315 = add nsw i32 %314, -2
  %316 = load i8*, i8** %66, align 8
  switch i32 %10, label %333 [
    i32 0, label %317
    i32 1, label %323
    i32 2, label %328
  ]

317:                                              ; preds = %311
  %318 = bitcast i8* %316 to i16*
  %319 = sext i32 %315 to i64
  %320 = getelementptr inbounds i16, i16* %318, i64 %319
  %321 = load i16, i16* %320, align 2
  %322 = zext i16 %321 to i32
  br label %333

323:                                              ; preds = %311
  %324 = bitcast i8* %316 to i32*
  %325 = sext i32 %315 to i64
  %326 = getelementptr inbounds i32, i32* %324, i64 %325
  %327 = load i32, i32* %326, align 4
  br label %333

328:                                              ; preds = %311
  %329 = sext i32 %315 to i64
  %330 = getelementptr inbounds i8, i8* %316, i64 %329
  %331 = load i8, i8* %330, align 1
  %332 = zext i8 %331 to i32
  br label %333

333:                                              ; preds = %311, %317, %323, %328
  %334 = phi i32 [ %332, %328 ], [ %327, %323 ], [ %322, %317 ], [ -1, %311 ]
  %335 = load i32, i32* %50, align 4
  %336 = icmp eq i32 %334, %335
  %337 = or i1 %52, %336
  %338 = select i1 %336, i32 %56, i32 %334
  br i1 %337, label %341, label %339

339:                                              ; preds = %333
  %340 = tail call i32 %2(i8* %3, i32 %334) #6
  br label %341

341:                                              ; preds = %333, %339
  %342 = phi i32 [ %340, %339 ], [ %338, %333 ]
  %343 = icmp eq i32 %342, %304
  %344 = add nsw i32 %306, -1
  %345 = select i1 %343, i32 1114111, i32 %344
  br label %346

346:                                              ; preds = %278, %284, %234, %189, %300, %15, %46, %341, %5
  %347 = phi i32 [ -1, %5 ], [ 1114111, %15 ], [ 1114111, %46 ], [ %301, %300 ], [ %345, %341 ], [ %190, %189 ], [ %235, %234 ], [ %259, %284 ], [ %259, %278 ]
  ret i32 %347
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ucptrie_toBinary_69(%struct.UCPTrie* nocapture readonly, i8*, i32, i32* nocapture) local_unnamed_addr #0 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %118

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 6
  %9 = load i8, i8* %8, align 2
  %10 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 7
  %11 = load i8, i8* %10, align 1
  %12 = sext i8 %11 to i32
  %13 = icmp ugt i8 %9, 1
  %14 = icmp ugt i8 %11, 2
  %15 = or i1 %13, %14
  %16 = icmp slt i32 %2, 0
  %17 = or i1 %16, %15
  br i1 %17, label %26, label %18

18:                                               ; preds = %7
  %19 = icmp sgt i32 %2, 0
  br i1 %19, label %20, label %27

20:                                               ; preds = %18
  %21 = icmp eq i8* %1, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %20
  %23 = ptrtoint i8* %1 to i64
  %24 = and i64 %23, 3
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %22, %20, %7
  store i32 1, i32* %3, align 4
  br label %118

27:                                               ; preds = %22, %18
  %28 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = shl nsw i32 %29, 1
  %31 = add nsw i32 %30, 16
  switch i32 %12, label %46 [
    i32 0, label %32
    i32 1, label %37
    i32 2, label %42
  ]

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 3
  %34 = load i32, i32* %33, align 4
  %35 = shl i32 %34, 1
  %36 = add nsw i32 %35, %31
  br label %46

37:                                               ; preds = %27
  %38 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 3
  %39 = load i32, i32* %38, align 4
  %40 = shl i32 %39, 2
  %41 = add nsw i32 %40, %31
  br label %46

42:                                               ; preds = %27
  %43 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 3
  %44 = load i32, i32* %43, align 4
  %45 = add nsw i32 %44, %31
  br label %46

46:                                               ; preds = %27, %42, %37, %32
  %47 = phi i32 [ %31, %27 ], [ %45, %42 ], [ %41, %37 ], [ %36, %32 ]
  %48 = icmp sgt i32 %47, %2
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  store i32 15, i32* %3, align 4
  br label %118

50:                                               ; preds = %46
  %51 = bitcast i8* %1 to i32*
  store i32 1416784179, i32* %51, align 4
  %52 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 3
  %53 = load i32, i32* %52, align 4
  %54 = lshr i32 %53, 4
  %55 = and i32 %54, 61440
  %56 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 11
  %57 = load i32, i32* %56, align 8
  %58 = lshr i32 %57, 8
  %59 = and i32 %58, 3840
  %60 = load i8, i8* %8, align 2
  %61 = sext i8 %60 to i32
  %62 = shl nsw i32 %61, 6
  %63 = or i32 %55, %12
  %64 = or i32 %63, %59
  %65 = or i32 %64, %62
  %66 = trunc i32 %65 to i16
  %67 = getelementptr inbounds i8, i8* %1, i64 4
  %68 = bitcast i8* %67 to i16*
  store i16 %66, i16* %68, align 4
  %69 = load i32, i32* %28, align 8
  %70 = trunc i32 %69 to i16
  %71 = getelementptr inbounds i8, i8* %1, i64 6
  %72 = bitcast i8* %71 to i16*
  store i16 %70, i16* %72, align 2
  %73 = load i32, i32* %52, align 4
  %74 = trunc i32 %73 to i16
  %75 = getelementptr inbounds i8, i8* %1, i64 8
  %76 = bitcast i8* %75 to i16*
  store i16 %74, i16* %76, align 4
  %77 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 10
  %78 = load i16, i16* %77, align 2
  %79 = getelementptr inbounds i8, i8* %1, i64 10
  %80 = bitcast i8* %79 to i16*
  store i16 %78, i16* %80, align 2
  %81 = load i32, i32* %56, align 8
  %82 = trunc i32 %81 to i16
  %83 = getelementptr inbounds i8, i8* %1, i64 12
  %84 = bitcast i8* %83 to i16*
  store i16 %82, i16* %84, align 4
  %85 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 4
  %86 = load i32, i32* %85, align 8
  %87 = lshr i32 %86, 9
  %88 = trunc i32 %87 to i16
  %89 = getelementptr inbounds i8, i8* %1, i64 14
  %90 = bitcast i8* %89 to i16*
  store i16 %88, i16* %90, align 2
  %91 = getelementptr inbounds i8, i8* %1, i64 16
  %92 = bitcast %struct.UCPTrie* %0 to i8**
  %93 = load i8*, i8** %92, align 8
  %94 = load i32, i32* %28, align 8
  %95 = shl nsw i32 %94, 1
  %96 = sext i32 %95 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %91, i8* align 2 %93, i64 %96, i1 false)
  %97 = load i32, i32* %28, align 8
  %98 = shl nsw i32 %97, 1
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i8, i8* %91, i64 %99
  switch i32 %12, label %118 [
    i32 0, label %101
    i32 1, label %107
    i32 2, label %113
  ]

101:                                              ; preds = %50
  %102 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 1, i32 0
  %103 = load i8*, i8** %102, align 8
  %104 = load i32, i32* %52, align 4
  %105 = shl nsw i32 %104, 1
  %106 = sext i32 %105 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %100, i8* align 2 %103, i64 %106, i1 false)
  br label %118

107:                                              ; preds = %50
  %108 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 1, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = load i32, i32* %52, align 4
  %111 = shl nsw i32 %110, 2
  %112 = sext i32 %111 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %100, i8* align 4 %109, i64 %112, i1 false)
  br label %118

113:                                              ; preds = %50
  %114 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %0, i64 0, i32 1, i32 0
  %115 = load i8*, i8** %114, align 8
  %116 = load i32, i32* %52, align 4
  %117 = sext i32 %116 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %100, i8* align 1 %115, i64 %117, i1 false)
  br label %118

118:                                              ; preds = %26, %101, %107, %113, %50, %49, %4
  %119 = phi i32 [ 0, %4 ], [ 0, %26 ], [ %47, %101 ], [ %47, %107 ], [ %47, %113 ], [ %47, %50 ], [ %47, %49 ]
  ret i32 %119
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @ucpmap_get_69(%struct.UCPMap* nocapture readonly, i32) local_unnamed_addr #4 {
  %3 = bitcast %struct.UCPMap* %0 to %struct.UCPTrie*
  %4 = tail call i32 @ucptrie_get_69(%struct.UCPTrie* %3, i32 %1)
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ucpmap_getRange_69(%struct.UCPMap*, i32, i32, i32, i32 (i8*, i32)*, i8*, i32*) local_unnamed_addr #0 {
  %8 = bitcast %struct.UCPMap* %0 to %struct.UCPTrie*
  %9 = tail call i32 @ucptrie_getRange_69(%struct.UCPTrie* %8, i32 %1, i32 %2, i32 %3, i32 (i8*, i32)* %4, i8* %5, i32* %6)
  ret i32 %9
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind allocsize(0) }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
