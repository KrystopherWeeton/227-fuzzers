; ModuleID = '../../third_party/fontconfig/src/src/fcname.c'
source_filename = "../../third_party/fontconfig/src/src/fcname.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._FcObjectType = type { i8*, i32 }
%struct._FcConstant = type { i8*, i8*, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct._FcPattern = type { i32, i32, i64, %struct._FcRef }
%struct._FcRef = type { i32 }
%struct._FcObjectSet = type { i32, i32, i8** }
%struct._FcValue = type { i32, %union.anon }
%union.anon = type { i8* }
%struct._FcMatrix = type { double, double, double, double }
%struct._FcRange = type { double, double }
%struct._FcLangSet = type opaque
%struct._FcCharSet = type { %struct._FcRef, i32, i64, i64 }
%struct._FcStrBuf = type { i8*, i32, i32, i32, i32, [128 x i8] }
%struct._FcValueList = type { %struct._FcValueList*, %struct._FcValue, i32 }
%struct._FcPatternElt = type { i32, %struct._FcValueList* }

@FcObjects = internal constant [51 x %struct._FcObjectType] [%struct._FcObjectType { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), i32 3 }, %struct._FcObjectType { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i32 0, i32 0), i32 3 }, %struct._FcObjectType { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 0), i32 3 }, %struct._FcObjectType { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i32 0, i32 0), i32 3 }, %struct._FcObjectType { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i32 0, i32 0), i32 3 }, %struct._FcObjectType { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i32 0, i32 0), i32 3 }, %struct._FcObjectType { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i32 0, i32 0), i32 1 }, %struct._FcObjectType { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0), i32 9 }, %struct._FcObjectType { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), i32 9 }, %struct._FcObjectType { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i32 0, i32 0), i32 9 }, %struct._FcObjectType { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i32 0, i32 0), i32 2 }, %struct._FcObjectType { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i32 0, i32 0), i32 2 }, %struct._FcObjectType { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i32 0, i32 0), i32 1 }, %struct._FcObjectType { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i32 0, i32 0), i32 3 }, %struct._FcObjectType { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i32 0, i32 0), i32 4 }, %struct._FcObjectType { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i32 1 }, %struct._FcObjectType { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i32 0, i32 0), i32 4 }, %struct._FcObjectType { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.34, i32 0, i32 0), i32 4 }, %struct._FcObjectType { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i32 0, i32 0), i32 4 }, %struct._FcObjectType { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i32 0, i32 0), i32 4 }, %struct._FcObjectType { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i32 0, i32 0), i32 3 }, %struct._FcObjectType { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38, i32 0, i32 0), i32 1 }, %struct._FcObjectType { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i32 0, i32 0), i32 3 }, %struct._FcObjectType { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40, i32 0, i32 0), i32 4 }, %struct._FcObjectType { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i32 0, i32 0), i32 4 }, %struct._FcObjectType { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i32 0, i32 0), i32 2 }, %struct._FcObjectType { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i32 0, i32 0), i32 1 }, %struct._FcObjectType { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i32 0, i32 0), i32 2 }, %struct._FcObjectType { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i32 0, i32 0), i32 4 }, %struct._FcObjectType { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i32 0, i32 0), i32 1 }, %struct._FcObjectType { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.47, i32 0, i32 0), i32 1 }, %struct._FcObjectType { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i32 0, i32 0), i32 5 }, %struct._FcObjectType { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i32 0, i32 0), i32 6 }, %struct._FcObjectType { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i32 0, i32 0), i32 8 }, %struct._FcObjectType { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.51, i32 0, i32 0), i32 1 }, %struct._FcObjectType { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.52, i32 0, i32 0), i32 3 }, %struct._FcObjectType { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.53, i32 0, i32 0), i32 3 }, %struct._FcObjectType { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.54, i32 0, i32 0), i32 4 }, %struct._FcObjectType { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55, i32 0, i32 0), i32 4 }, %struct._FcObjectType { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.56, i32 0, i32 0), i32 4 }, %struct._FcObjectType { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.57, i32 0, i32 0), i32 1 }, %struct._FcObjectType { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i32 0, i32 0), i32 3 }, %struct._FcObjectType { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.59, i32 0, i32 0), i32 3 }, %struct._FcObjectType { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.60, i32 0, i32 0), i32 3 }, %struct._FcObjectType { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i32 0, i32 0), i32 3 }, %struct._FcObjectType { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.62, i32 0, i32 0), i32 3 }, %struct._FcObjectType { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), i32 4 }, %struct._FcObjectType { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.64, i32 0, i32 0), i32 4 }, %struct._FcObjectType { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.65, i32 0, i32 0), i32 3 }, %struct._FcObjectType { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.66, i32 0, i32 0), i32 4 }, %struct._FcObjectType { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.67, i32 0, i32 0), i32 4 }], align 16
@_FcBaseConstants = internal constant [57 x %struct._FcConstant] [%struct._FcConstant { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0), i32 0 }, %struct._FcConstant { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0), i32 40 }, %struct._FcConstant { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0), i32 40 }, %struct._FcConstant { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0), i32 55 }, %struct._FcConstant { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0), i32 55 }, %struct._FcConstant { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0), i32 50 }, %struct._FcConstant { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0), i32 75 }, %struct._FcConstant { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0), i32 80 }, %struct._FcConstant { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0), i32 100 }, %struct._FcConstant { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0), i32 180 }, %struct._FcConstant { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0), i32 180 }, %struct._FcConstant { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0), i32 200 }, %struct._FcConstant { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0), i32 205 }, %struct._FcConstant { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0), i32 205 }, %struct._FcConstant { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0), i32 210 }, %struct._FcConstant { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0), i32 210 }, %struct._FcConstant { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i32 0, i32 0), i32 0 }, %struct._FcConstant { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i32 0, i32 0), i32 100 }, %struct._FcConstant { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i32 0, i32 0), i32 110 }, %struct._FcConstant { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), i32 50 }, %struct._FcConstant { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.88, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), i32 63 }, %struct._FcConstant { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), i32 75 }, %struct._FcConstant { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.90, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), i32 87 }, %struct._FcConstant { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.91, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), i32 100 }, %struct._FcConstant { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.92, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), i32 113 }, %struct._FcConstant { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), i32 125 }, %struct._FcConstant { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), i32 150 }, %struct._FcConstant { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), i32 200 }, %struct._FcConstant { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i32 0, i32 0), i32 0 }, %struct._FcConstant { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i32 0, i32 0), i32 90 }, %struct._FcConstant { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i32 0, i32 0), i32 100 }, %struct._FcConstant { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i32 0, i32 0), i32 110 }, %struct._FcConstant { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i32 0, i32 0), i32 0 }, %struct._FcConstant { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i32 0, i32 0), i32 1 }, %struct._FcConstant { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.102, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i32 0, i32 0), i32 2 }, %struct._FcConstant { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i32 0, i32 0), i32 3 }, %struct._FcConstant { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i32 0, i32 0), i32 4 }, %struct._FcConstant { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.105, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i32 0, i32 0), i32 5 }, %struct._FcConstant { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i32 0 }, %struct._FcConstant { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.107, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i32 1 }, %struct._FcConstant { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i32 2 }, %struct._FcConstant { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i32 3 }, %struct._FcConstant { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i32 0, i32 0), i32 1 }, %struct._FcConstant { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i32 0, i32 0), i32 1 }, %struct._FcConstant { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.34, i32 0, i32 0), i32 1 }, %struct._FcConstant { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i32 0, i32 0), i32 1 }, %struct._FcConstant { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i32 0, i32 0), i32 1 }, %struct._FcConstant { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40, i32 0, i32 0), i32 1 }, %struct._FcConstant { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i32 0, i32 0), i32 1 }, %struct._FcConstant { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i32 0, i32 0), i32 1 }, %struct._FcConstant { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.54, i32 0, i32 0), i32 1 }, %struct._FcConstant { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55, i32 0, i32 0), i32 1 }, %struct._FcConstant { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.56, i32 0, i32 0), i32 1 }, %struct._FcConstant { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.57, i32 0, i32 0), i32 0 }, %struct._FcConstant { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.57, i32 0, i32 0), i32 1 }, %struct._FcConstant { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.57, i32 0, i32 0), i32 2 }, %struct._FcConstant { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.57, i32 0, i32 0), i32 3 }], align 16
@stderr = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [86 x i8] c"Fontconfig error: Unexpected constant name `%s' used for object `%s': should be `%s'\0A\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"=_:\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"%g\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"True\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"False\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"DontCare\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"%g %g %g %g\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"[%g %g]\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"\5C-:,\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"family\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"\5C=_:,\00", align 1
@.str.18 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"familylang\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"style\00", align 1
@.str.21 = private unnamed_addr constant [10 x i8] c"stylelang\00", align 1
@.str.22 = private unnamed_addr constant [9 x i8] c"fullname\00", align 1
@.str.23 = private unnamed_addr constant [13 x i8] c"fullnamelang\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"slant\00", align 1
@.str.25 = private unnamed_addr constant [7 x i8] c"weight\00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c"width\00", align 1
@.str.27 = private unnamed_addr constant [7 x i8] c"aspect\00", align 1
@.str.28 = private unnamed_addr constant [10 x i8] c"pixelsize\00", align 1
@.str.29 = private unnamed_addr constant [8 x i8] c"spacing\00", align 1
@.str.30 = private unnamed_addr constant [8 x i8] c"foundry\00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c"antialias\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"hintstyle\00", align 1
@.str.33 = private unnamed_addr constant [8 x i8] c"hinting\00", align 1
@.str.34 = private unnamed_addr constant [15 x i8] c"verticallayout\00", align 1
@.str.35 = private unnamed_addr constant [9 x i8] c"autohint\00", align 1
@.str.36 = private unnamed_addr constant [14 x i8] c"globaladvance\00", align 1
@.str.37 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str.38 = private unnamed_addr constant [6 x i8] c"index\00", align 1
@.str.39 = private unnamed_addr constant [11 x i8] c"rasterizer\00", align 1
@.str.40 = private unnamed_addr constant [8 x i8] c"outline\00", align 1
@.str.41 = private unnamed_addr constant [9 x i8] c"scalable\00", align 1
@.str.42 = private unnamed_addr constant [4 x i8] c"dpi\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"rgba\00", align 1
@.str.44 = private unnamed_addr constant [6 x i8] c"scale\00", align 1
@.str.45 = private unnamed_addr constant [9 x i8] c"minspace\00", align 1
@.str.46 = private unnamed_addr constant [10 x i8] c"charwidth\00", align 1
@.str.47 = private unnamed_addr constant [11 x i8] c"charheight\00", align 1
@.str.48 = private unnamed_addr constant [7 x i8] c"matrix\00", align 1
@.str.49 = private unnamed_addr constant [8 x i8] c"charset\00", align 1
@.str.50 = private unnamed_addr constant [5 x i8] c"lang\00", align 1
@.str.51 = private unnamed_addr constant [12 x i8] c"fontversion\00", align 1
@.str.52 = private unnamed_addr constant [11 x i8] c"capability\00", align 1
@.str.53 = private unnamed_addr constant [11 x i8] c"fontformat\00", align 1
@.str.54 = private unnamed_addr constant [9 x i8] c"embolden\00", align 1
@.str.55 = private unnamed_addr constant [15 x i8] c"embeddedbitmap\00", align 1
@.str.56 = private unnamed_addr constant [11 x i8] c"decorative\00", align 1
@.str.57 = private unnamed_addr constant [10 x i8] c"lcdfilter\00", align 1
@.str.58 = private unnamed_addr constant [9 x i8] c"namelang\00", align 1
@.str.59 = private unnamed_addr constant [13 x i8] c"fontfeatures\00", align 1
@.str.60 = private unnamed_addr constant [8 x i8] c"prgname\00", align 1
@.str.61 = private unnamed_addr constant [5 x i8] c"hash\00", align 1
@.str.62 = private unnamed_addr constant [15 x i8] c"postscriptname\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"color\00", align 1
@.str.64 = private unnamed_addr constant [7 x i8] c"symbol\00", align 1
@.str.65 = private unnamed_addr constant [15 x i8] c"fontvariations\00", align 1
@.str.66 = private unnamed_addr constant [9 x i8] c"variable\00", align 1
@.str.67 = private unnamed_addr constant [12 x i8] c"fonthashint\00", align 1
@.str.68 = private unnamed_addr constant [5 x i8] c"thin\00", align 1
@.str.69 = private unnamed_addr constant [11 x i8] c"extralight\00", align 1
@.str.70 = private unnamed_addr constant [11 x i8] c"ultralight\00", align 1
@.str.71 = private unnamed_addr constant [10 x i8] c"demilight\00", align 1
@.str.72 = private unnamed_addr constant [10 x i8] c"semilight\00", align 1
@.str.73 = private unnamed_addr constant [6 x i8] c"light\00", align 1
@.str.74 = private unnamed_addr constant [5 x i8] c"book\00", align 1
@.str.75 = private unnamed_addr constant [8 x i8] c"regular\00", align 1
@.str.76 = private unnamed_addr constant [7 x i8] c"medium\00", align 1
@.str.77 = private unnamed_addr constant [9 x i8] c"demibold\00", align 1
@.str.78 = private unnamed_addr constant [9 x i8] c"semibold\00", align 1
@.str.79 = private unnamed_addr constant [5 x i8] c"bold\00", align 1
@.str.80 = private unnamed_addr constant [10 x i8] c"extrabold\00", align 1
@.str.81 = private unnamed_addr constant [10 x i8] c"ultrabold\00", align 1
@.str.82 = private unnamed_addr constant [6 x i8] c"black\00", align 1
@.str.83 = private unnamed_addr constant [6 x i8] c"heavy\00", align 1
@.str.84 = private unnamed_addr constant [6 x i8] c"roman\00", align 1
@.str.85 = private unnamed_addr constant [7 x i8] c"italic\00", align 1
@.str.86 = private unnamed_addr constant [8 x i8] c"oblique\00", align 1
@.str.87 = private unnamed_addr constant [15 x i8] c"ultracondensed\00", align 1
@.str.88 = private unnamed_addr constant [15 x i8] c"extracondensed\00", align 1
@.str.89 = private unnamed_addr constant [10 x i8] c"condensed\00", align 1
@.str.90 = private unnamed_addr constant [14 x i8] c"semicondensed\00", align 1
@.str.91 = private unnamed_addr constant [7 x i8] c"normal\00", align 1
@.str.92 = private unnamed_addr constant [13 x i8] c"semiexpanded\00", align 1
@.str.93 = private unnamed_addr constant [9 x i8] c"expanded\00", align 1
@.str.94 = private unnamed_addr constant [14 x i8] c"extraexpanded\00", align 1
@.str.95 = private unnamed_addr constant [14 x i8] c"ultraexpanded\00", align 1
@.str.96 = private unnamed_addr constant [13 x i8] c"proportional\00", align 1
@.str.97 = private unnamed_addr constant [5 x i8] c"dual\00", align 1
@.str.98 = private unnamed_addr constant [5 x i8] c"mono\00", align 1
@.str.99 = private unnamed_addr constant [9 x i8] c"charcell\00", align 1
@.str.100 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.101 = private unnamed_addr constant [4 x i8] c"rgb\00", align 1
@.str.102 = private unnamed_addr constant [4 x i8] c"bgr\00", align 1
@.str.103 = private unnamed_addr constant [5 x i8] c"vrgb\00", align 1
@.str.104 = private unnamed_addr constant [5 x i8] c"vbgr\00", align 1
@.str.105 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.106 = private unnamed_addr constant [9 x i8] c"hintnone\00", align 1
@.str.107 = private unnamed_addr constant [11 x i8] c"hintslight\00", align 1
@.str.108 = private unnamed_addr constant [11 x i8] c"hintmedium\00", align 1
@.str.109 = private unnamed_addr constant [9 x i8] c"hintfull\00", align 1
@.str.110 = private unnamed_addr constant [8 x i8] c"lcdnone\00", align 1
@.str.111 = private unnamed_addr constant [11 x i8] c"lcddefault\00", align 1
@.str.112 = private unnamed_addr constant [9 x i8] c"lcdlight\00", align 1
@.str.113 = private unnamed_addr constant [10 x i8] c"lcdlegacy\00", align 1
@.str.114 = private unnamed_addr constant [16 x i8] c"%lg %lg %lg %lg\00", align 1
@.str.115 = private unnamed_addr constant [10 x i8] c"[%lg %lg]\00", align 1
@.str.116 = private unnamed_addr constant [11 x i8] c"[%s %[^]]]\00", align 1

@FcNameRegisterObjectTypes = hidden alias i32 (%struct._FcObjectType*, i32), i32 (%struct._FcObjectType*, i32)* @IA__FcNameRegisterObjectTypes
@FcNameUnregisterObjectTypes = hidden alias i32 (%struct._FcObjectType*, i32), i32 (%struct._FcObjectType*, i32)* @IA__FcNameUnregisterObjectTypes
@FcNameGetObjectType = hidden alias %struct._FcObjectType* (i8*), %struct._FcObjectType* (i8*)* @IA__FcNameGetObjectType
@FcNameRegisterConstants = hidden alias i32 (%struct._FcConstant*, i32), i32 (%struct._FcConstant*, i32)* @IA__FcNameRegisterConstants
@FcNameUnregisterConstants = hidden alias i32 (%struct._FcConstant*, i32), i32 (%struct._FcConstant*, i32)* @IA__FcNameUnregisterConstants
@FcNameGetConstant = hidden alias %struct._FcConstant* (i8*), %struct._FcConstant* (i8*)* @IA__FcNameGetConstant
@FcNameConstant = hidden alias i32 (i8*, i32*), i32 (i8*, i32*)* @IA__FcNameConstant
@FcNameParse = hidden alias %struct._FcPattern* (i8*), %struct._FcPattern* (i8*)* @IA__FcNameParse
@FcNameUnparse = hidden alias i8* (%struct._FcPattern*), i8* (%struct._FcPattern*)* @IA__FcNameUnparse

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @IA__FcNameRegisterObjectTypes(%struct._FcObjectType* nocapture readnone, i32) #0 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @IA__FcNameUnregisterObjectTypes(%struct._FcObjectType* nocapture readnone, i32) #0 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcObjectType* @IA__FcNameGetObjectType(i8*) #1 {
  %2 = tail call i32 @FcObjectLookupBuiltinIdByName(i8* %0) #11
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %6

4:                                                ; preds = %1
  %5 = tail call %struct._FcObjectType* @FcObjectLookupOtherTypeByName(i8* %0) #11
  br label %10

6:                                                ; preds = %1
  %7 = add nsw i32 %2, -1
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds [51 x %struct._FcObjectType], [51 x %struct._FcObjectType]* @FcObjects, i64 0, i64 %8
  br label %10

10:                                               ; preds = %6, %4
  %11 = phi %struct._FcObjectType* [ %9, %6 ], [ %5, %4 ]
  ret %struct._FcObjectType* %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare hidden i32 @FcObjectLookupBuiltinIdByName(i8*) local_unnamed_addr #3

declare hidden %struct._FcObjectType* @FcObjectLookupOtherTypeByName(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcObjectValidType(i32, i32) local_unnamed_addr #1 {
  %3 = add i32 %0, -1
  %4 = icmp ult i32 %3, 51
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = sext i32 %3 to i64
  %7 = getelementptr inbounds [51 x %struct._FcObjectType], [51 x %struct._FcObjectType]* @FcObjects, i64 0, i64 %6
  br label %10

8:                                                ; preds = %2
  %9 = tail call %struct._FcObjectType* @FcObjectLookupOtherTypeById(i32 %0) #11
  br label %10

10:                                               ; preds = %5, %8
  %11 = phi %struct._FcObjectType* [ %7, %5 ], [ %9, %8 ]
  %12 = icmp eq %struct._FcObjectType* %11, null
  br i1 %12, label %24, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct._FcObjectType, %struct._FcObjectType* %11, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  switch i32 %15, label %21 [
    i32 -1, label %24
    i32 2, label %16
    i32 1, label %16
    i32 8, label %19
    i32 9, label %20
  ]

16:                                               ; preds = %13, %13
  %17 = add i32 %1, -1
  %18 = icmp ult i32 %17, 2
  br i1 %18, label %24, label %23

19:                                               ; preds = %13
  switch i32 %1, label %23 [
    i32 8, label %24
    i32 3, label %24
  ]

20:                                               ; preds = %13
  switch i32 %1, label %23 [
    i32 9, label %24
    i32 2, label %24
    i32 1, label %24
  ]

21:                                               ; preds = %13
  %22 = icmp eq i32 %15, %1
  br i1 %22, label %24, label %23

23:                                               ; preds = %20, %19, %21, %16
  br label %24

24:                                               ; preds = %10, %21, %20, %20, %20, %19, %19, %16, %13, %23
  %25 = phi i32 [ 0, %23 ], [ 1, %13 ], [ 1, %16 ], [ 1, %19 ], [ 1, %19 ], [ 1, %20 ], [ 1, %20 ], [ 1, %20 ], [ 1, %21 ], [ 1, %10 ]
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcObjectFromName(i8*) local_unnamed_addr #1 {
  %2 = tail call i32 @FcObjectLookupIdByName(i8* %0) #11
  ret i32 %2
}

declare hidden i32 @FcObjectLookupIdByName(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcObjectSet* @FcObjectGetSet() local_unnamed_addr #1 {
  %1 = tail call %struct._FcObjectSet* @IA__FcObjectSetCreate() #11
  br label %2

2:                                                ; preds = %2, %0
  %3 = phi i64 [ 0, %0 ], [ %7, %2 ]
  %4 = getelementptr inbounds [51 x %struct._FcObjectType], [51 x %struct._FcObjectType]* @FcObjects, i64 0, i64 %3, i32 0
  %5 = load i8*, i8** %4, align 16
  %6 = tail call i32 @IA__FcObjectSetAdd(%struct._FcObjectSet* %1, i8* %5) #11
  %7 = add nuw nsw i64 %3, 1
  %8 = icmp eq i64 %7, 51
  br i1 %8, label %9, label %2

9:                                                ; preds = %2
  ret %struct._FcObjectSet* %1
}

declare hidden %struct._FcObjectSet* @IA__FcObjectSetCreate() local_unnamed_addr #3

declare hidden i32 @IA__FcObjectSetAdd(%struct._FcObjectSet*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i8* @FcObjectName(i32) local_unnamed_addr #1 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 51
  br i1 %3, label %4, label %7

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [51 x %struct._FcObjectType], [51 x %struct._FcObjectType]* @FcObjects, i64 0, i64 %5
  br label %9

7:                                                ; preds = %1
  %8 = tail call %struct._FcObjectType* @FcObjectLookupOtherTypeById(i32 %0) #11
  br label %9

9:                                                ; preds = %4, %7
  %10 = phi %struct._FcObjectType* [ %6, %4 ], [ %8, %7 ]
  %11 = icmp eq %struct._FcObjectType* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct._FcObjectType, %struct._FcObjectType* %10, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  br label %17

15:                                               ; preds = %9
  %16 = tail call i8* @FcObjectLookupOtherNameById(i32 %0) #11
  br label %17

17:                                               ; preds = %15, %12
  %18 = phi i8* [ %14, %12 ], [ %16, %15 ]
  ret i8* %18
}

declare hidden i8* @FcObjectLookupOtherNameById(i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @IA__FcNameRegisterConstants(%struct._FcConstant* nocapture readnone, i32) #0 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @IA__FcNameUnregisterConstants(%struct._FcConstant* nocapture readnone, i32) #0 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcConstant* @IA__FcNameGetConstant(i8*) #1 {
  br label %4

2:                                                ; preds = %4
  %3 = icmp eq i64 %11, 57
  br i1 %3, label %12, label %4

4:                                                ; preds = %2, %1
  %5 = phi i64 [ 0, %1 ], [ %11, %2 ]
  %6 = getelementptr inbounds [57 x %struct._FcConstant], [57 x %struct._FcConstant]* @_FcBaseConstants, i64 0, i64 %5
  %7 = getelementptr inbounds %struct._FcConstant, %struct._FcConstant* %6, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = tail call i32 @IA__FcStrCmpIgnoreCase(i8* %0, i8* %8) #11
  %10 = icmp eq i32 %9, 0
  %11 = add nuw nsw i64 %5, 1
  br i1 %10, label %12, label %2

12:                                               ; preds = %2, %4
  %13 = phi %struct._FcConstant* [ %6, %4 ], [ null, %2 ]
  ret %struct._FcConstant* %13
}

declare hidden i32 @IA__FcStrCmpIgnoreCase(i8*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @IA__FcNameConstant(i8*, i32* nocapture) #1 {
  br label %5

3:                                                ; preds = %5
  %4 = icmp eq i64 %12, 57
  br i1 %4, label %18, label %5

5:                                                ; preds = %3, %2
  %6 = phi i64 [ 0, %2 ], [ %12, %3 ]
  %7 = getelementptr inbounds [57 x %struct._FcConstant], [57 x %struct._FcConstant]* @_FcBaseConstants, i64 0, i64 %6
  %8 = getelementptr inbounds %struct._FcConstant, %struct._FcConstant* %7, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 @IA__FcStrCmpIgnoreCase(i8* %0, i8* %9) #11
  %11 = icmp eq i32 %10, 0
  %12 = add nuw nsw i64 %6, 1
  br i1 %11, label %13, label %3

13:                                               ; preds = %5
  %14 = icmp eq %struct._FcConstant* %7, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds [57 x %struct._FcConstant], [57 x %struct._FcConstant]* @_FcBaseConstants, i64 0, i64 %6, i32 2
  %17 = load i32, i32* %16, align 8
  store i32 %17, i32* %1, align 4
  br label %18

18:                                               ; preds = %3, %13, %15
  %19 = phi i32 [ 1, %15 ], [ 0, %13 ], [ 0, %3 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcNameConstantWithObjectCheck(i8*, i8*, i32* nocapture) local_unnamed_addr #1 {
  br label %6

4:                                                ; preds = %6
  %5 = icmp eq i64 %13, 57
  br i1 %5, label %27, label %6

6:                                                ; preds = %4, %3
  %7 = phi i64 [ 0, %3 ], [ %13, %4 ]
  %8 = getelementptr inbounds [57 x %struct._FcConstant], [57 x %struct._FcConstant]* @_FcBaseConstants, i64 0, i64 %7
  %9 = getelementptr inbounds %struct._FcConstant, %struct._FcConstant* %8, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = tail call i32 @IA__FcStrCmpIgnoreCase(i8* %0, i8* %10) #11
  %12 = icmp eq i32 %11, 0
  %13 = add nuw nsw i64 %7, 1
  br i1 %12, label %14, label %4

14:                                               ; preds = %6
  %15 = icmp eq %struct._FcConstant* %8, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds [57 x %struct._FcConstant], [57 x %struct._FcConstant]* @_FcBaseConstants, i64 0, i64 %7, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = tail call i32 @strcmp(i8* %18, i8* %1) #12
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %23 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str, i64 0, i64 0), i8* %0, i8* %1, i8* %18) #13
  br label %27

24:                                               ; preds = %16
  %25 = getelementptr inbounds [57 x %struct._FcConstant], [57 x %struct._FcConstant]* @_FcBaseConstants, i64 0, i64 %7, i32 2
  %26 = load i32, i32* %25, align 8
  store i32 %26, i32* %2, align 4
  br label %27

27:                                               ; preds = %4, %14, %24, %21
  %28 = phi i32 [ 0, %21 ], [ 1, %24 ], [ 0, %14 ], [ 0, %4 ]
  ret i32 %28
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @FcNameBool(i8* nocapture readonly, i32* nocapture) local_unnamed_addr #6 {
  %3 = load i8, i8* %0, align 1
  %4 = add i8 %3, -65
  %5 = icmp ult i8 %4, 26
  %6 = add i8 %3, 32
  %7 = select i1 %5, i8 %6, i8 %3
  switch i8 %7, label %21 [
    i8 116, label %8
    i8 121, label %8
    i8 49, label %8
    i8 102, label %9
    i8 110, label %9
    i8 48, label %9
    i8 100, label %10
    i8 120, label %10
    i8 50, label %10
    i8 111, label %11
  ]

8:                                                ; preds = %2, %2, %2
  store i32 1, i32* %1, align 4
  br label %21

9:                                                ; preds = %2, %2, %2
  store i32 0, i32* %1, align 4
  br label %21

10:                                               ; preds = %2, %2, %2
  store i32 2, i32* %1, align 4
  br label %21

11:                                               ; preds = %2
  %12 = getelementptr inbounds i8, i8* %0, i64 1
  %13 = load i8, i8* %12, align 1
  %14 = add i8 %13, -65
  %15 = icmp ult i8 %14, 26
  %16 = add i8 %13, 32
  %17 = select i1 %15, i8 %16, i8 %13
  switch i8 %17, label %21 [
    i8 110, label %18
    i8 102, label %19
    i8 114, label %20
  ]

18:                                               ; preds = %11
  store i32 1, i32* %1, align 4
  br label %21

19:                                               ; preds = %11
  store i32 0, i32* %1, align 4
  br label %21

20:                                               ; preds = %11
  store i32 2, i32* %1, align 4
  br label %21

21:                                               ; preds = %2, %11, %20, %19, %18, %10, %9, %8
  %22 = phi i32 [ 1, %8 ], [ 1, %9 ], [ 1, %10 ], [ 1, %18 ], [ 1, %19 ], [ 1, %20 ], [ 0, %11 ], [ 0, %2 ]
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcPattern* @IA__FcNameParse(i8* nocapture readonly) #1 {
  %2 = alloca %struct._FcValue, align 8
  %3 = alloca %struct._FcMatrix, align 8
  %4 = alloca double, align 8
  %5 = alloca double, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %9 = tail call i64 @strlen(i8* %0) #12
  %10 = add i64 %9, 1
  %11 = tail call noalias i8* @malloc(i64 %10) #11
  %12 = icmp eq i8* %11, null
  br i1 %12, label %465, label %13

13:                                               ; preds = %1
  %14 = tail call %struct._FcPattern* @IA__FcPatternCreate() #11
  %15 = icmp eq %struct._FcPattern* %14, null
  br i1 %15, label %463, label %16

16:                                               ; preds = %13, %70
  %17 = phi i8* [ %64, %70 ], [ %0, %13 ]
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %35, label %20

20:                                               ; preds = %16
  %21 = tail call i16** @__ctype_b_loc() #14
  %22 = load i16*, i16** %21, align 8
  br label %23

23:                                               ; preds = %31, %20
  %24 = phi i8 [ %18, %20 ], [ %33, %31 ]
  %25 = phi i8* [ %17, %20 ], [ %32, %31 ]
  %26 = zext i8 %24 to i64
  %27 = getelementptr inbounds i16, i16* %22, i64 %26
  %28 = load i16, i16* %27, align 2
  %29 = and i16 %28, 8192
  %30 = icmp eq i16 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %23
  %32 = getelementptr inbounds i8, i8* %25, i64 1
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %23

35:                                               ; preds = %31, %23, %16
  %36 = phi i8 [ 0, %16 ], [ %24, %23 ], [ 0, %31 ]
  %37 = phi i8* [ %17, %16 ], [ %25, %23 ], [ %32, %31 ]
  br label %38

38:                                               ; preds = %35, %53
  %39 = phi i8 [ %58, %53 ], [ %36, %35 ]
  %40 = phi i8* [ %57, %53 ], [ %11, %35 ]
  %41 = phi i8* [ %56, %53 ], [ %37, %35 ]
  switch i8 %39, label %46 [
    i8 0, label %59
    i8 92, label %42
  ]

42:                                               ; preds = %38
  %43 = getelementptr inbounds i8, i8* %41, i64 1
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %59, label %53

46:                                               ; preds = %38
  %47 = zext i8 %39 to i64
  %48 = icmp ugt i8 %39, 63
  %49 = shl i64 1, %47
  %50 = and i64 %49, 288283152709844993
  %51 = icmp eq i64 %50, 0
  %52 = or i1 %48, %51
  br i1 %52, label %53, label %59

53:                                               ; preds = %46, %42
  %54 = phi i8* [ %43, %42 ], [ %41, %46 ]
  %55 = phi i8 [ %44, %42 ], [ %39, %46 ]
  %56 = getelementptr inbounds i8, i8* %54, i64 1
  %57 = getelementptr inbounds i8, i8* %40, i64 1
  store i8 %55, i8* %40, align 1
  %58 = load i8, i8* %56, align 1
  br label %38

59:                                               ; preds = %38, %42, %46
  %60 = phi i8* [ %43, %42 ], [ %41, %46 ], [ %41, %38 ]
  store i8 0, i8* %40, align 1
  %61 = load i8, i8* %60, align 1
  %62 = icmp eq i8 %61, 0
  %63 = getelementptr inbounds i8, i8* %60, i64 1
  %64 = select i1 %62, i8* %60, i8* %63
  %65 = load i8, i8* %11, align 1
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %59
  %68 = tail call i32 @FcPatternObjectAddString(%struct._FcPattern* nonnull %14, i32 1, i8* nonnull %11) #11
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %462, label %70

70:                                               ; preds = %67, %59
  switch i8 %61, label %128 [
    i8 44, label %16
    i8 45, label %71
  ]

71:                                               ; preds = %70, %126
  %72 = phi i8* [ %119, %126 ], [ %64, %70 ]
  %73 = load i8, i8* %72, align 1
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %90, label %75

75:                                               ; preds = %71
  %76 = tail call i16** @__ctype_b_loc() #14
  %77 = load i16*, i16** %76, align 8
  br label %78

78:                                               ; preds = %86, %75
  %79 = phi i8 [ %73, %75 ], [ %88, %86 ]
  %80 = phi i8* [ %72, %75 ], [ %87, %86 ]
  %81 = zext i8 %79 to i64
  %82 = getelementptr inbounds i16, i16* %77, i64 %81
  %83 = load i16, i16* %82, align 2
  %84 = and i16 %83, 8192
  %85 = icmp eq i16 %84, 0
  br i1 %85, label %90, label %86

86:                                               ; preds = %78
  %87 = getelementptr inbounds i8, i8* %80, i64 1
  %88 = load i8, i8* %87, align 1
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %78

90:                                               ; preds = %86, %78, %71
  %91 = phi i8 [ 0, %71 ], [ %79, %78 ], [ 0, %86 ]
  %92 = phi i8* [ %72, %71 ], [ %80, %78 ], [ %87, %86 ]
  br label %93

93:                                               ; preds = %90, %108
  %94 = phi i8 [ %113, %108 ], [ %91, %90 ]
  %95 = phi i8* [ %112, %108 ], [ %11, %90 ]
  %96 = phi i8* [ %111, %108 ], [ %92, %90 ]
  switch i8 %94, label %101 [
    i8 0, label %114
    i8 92, label %97
  ]

97:                                               ; preds = %93
  %98 = getelementptr inbounds i8, i8* %96, i64 1
  %99 = load i8, i8* %98, align 1
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %114, label %108

101:                                              ; preds = %93
  %102 = zext i8 %94 to i64
  %103 = icmp ugt i8 %94, 63
  %104 = shl i64 1, %102
  %105 = and i64 %104, 288283152709844993
  %106 = icmp eq i64 %105, 0
  %107 = or i1 %103, %106
  br i1 %107, label %108, label %114

108:                                              ; preds = %101, %97
  %109 = phi i8* [ %98, %97 ], [ %96, %101 ]
  %110 = phi i8 [ %99, %97 ], [ %94, %101 ]
  %111 = getelementptr inbounds i8, i8* %109, i64 1
  %112 = getelementptr inbounds i8, i8* %95, i64 1
  store i8 %110, i8* %95, align 1
  %113 = load i8, i8* %111, align 1
  br label %93

114:                                              ; preds = %93, %97, %101
  %115 = phi i8* [ %98, %97 ], [ %96, %101 ], [ %96, %93 ]
  store i8 0, i8* %95, align 1
  %116 = load i8, i8* %115, align 1
  %117 = icmp eq i8 %116, 0
  %118 = getelementptr inbounds i8, i8* %115, i64 1
  %119 = select i1 %117, i8* %115, i8* %118
  %120 = call double @strtod(i8* nonnull %11, i8** nonnull %7) #11
  %121 = load i8*, i8** %7, align 8
  %122 = icmp eq i8* %121, %11
  br i1 %122, label %126, label %123

123:                                              ; preds = %114
  %124 = tail call i32 @FcPatternObjectAddDouble(%struct._FcPattern* nonnull %14, i32 10, double %120) #11
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %462, label %126

126:                                              ; preds = %123, %114
  %127 = icmp eq i8 %116, 44
  br i1 %127, label %71, label %128

128:                                              ; preds = %70, %126
  %129 = phi i8 [ %116, %126 ], [ %61, %70 ]
  %130 = phi i8* [ %119, %126 ], [ %64, %70 ]
  %131 = icmp eq i8 %129, 58
  br i1 %131, label %132, label %463

132:                                              ; preds = %128
  %133 = bitcast %struct._FcValue* %2 to i8*
  %134 = bitcast %struct._FcMatrix* %3 to i8*
  %135 = getelementptr inbounds %struct._FcMatrix, %struct._FcMatrix* %3, i64 0, i32 0
  %136 = getelementptr inbounds %struct._FcMatrix, %struct._FcMatrix* %3, i64 0, i32 1
  %137 = getelementptr inbounds %struct._FcMatrix, %struct._FcMatrix* %3, i64 0, i32 3
  %138 = bitcast double* %4 to i8*
  %139 = bitcast double* %5 to i8*
  %140 = bitcast i8** %6 to i8*
  %141 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %2, i64 0, i32 0
  %142 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %2, i64 0, i32 1
  %143 = bitcast %union.anon* %142 to double*
  %144 = bitcast %union.anon* %142 to %struct._FcRange**
  %145 = bitcast %union.anon* %142 to %struct._FcLangSet**
  %146 = bitcast %union.anon* %142 to %struct._FcCharSet**
  %147 = getelementptr inbounds %struct._FcMatrix, %struct._FcMatrix* %3, i64 0, i32 2
  %148 = bitcast double* %136 to i8*
  %149 = bitcast %union.anon* %142 to %struct._FcMatrix**
  %150 = bitcast %union.anon* %142 to i32*
  %151 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %2, i64 0, i32 1, i32 0
  br label %152

152:                                              ; preds = %132, %458
  %153 = phi i8* [ %130, %132 ], [ %460, %458 ]
  %154 = load i8, i8* %153, align 1
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %171, label %156

156:                                              ; preds = %152
  %157 = tail call i16** @__ctype_b_loc() #14
  %158 = load i16*, i16** %157, align 8
  br label %159

159:                                              ; preds = %167, %156
  %160 = phi i8 [ %154, %156 ], [ %169, %167 ]
  %161 = phi i8* [ %153, %156 ], [ %168, %167 ]
  %162 = zext i8 %160 to i64
  %163 = getelementptr inbounds i16, i16* %158, i64 %162
  %164 = load i16, i16* %163, align 2
  %165 = and i16 %164, 8192
  %166 = icmp eq i16 %165, 0
  br i1 %166, label %171, label %167

167:                                              ; preds = %159
  %168 = getelementptr inbounds i8, i8* %161, i64 1
  %169 = load i8, i8* %168, align 1
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %171, label %159

171:                                              ; preds = %167, %159, %152
  %172 = phi i8 [ 0, %152 ], [ %160, %159 ], [ 0, %167 ]
  %173 = phi i8* [ %153, %152 ], [ %161, %159 ], [ %168, %167 ]
  br label %174

174:                                              ; preds = %171, %186
  %175 = phi i8 [ %191, %186 ], [ %172, %171 ]
  %176 = phi i8* [ %190, %186 ], [ %11, %171 ]
  %177 = phi i8* [ %189, %186 ], [ %173, %171 ]
  switch i8 %175, label %182 [
    i8 0, label %192
    i8 92, label %178
  ]

178:                                              ; preds = %174
  %179 = getelementptr inbounds i8, i8* %177, i64 1
  %180 = load i8, i8* %179, align 1
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %192, label %186

182:                                              ; preds = %174
  %183 = zext i8 %175 to i32
  %184 = call i8* @memchr(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %183, i64 4)
  %185 = icmp eq i8* %184, null
  br i1 %185, label %186, label %192

186:                                              ; preds = %182, %178
  %187 = phi i8* [ %179, %178 ], [ %177, %182 ]
  %188 = phi i8 [ %180, %178 ], [ %175, %182 ]
  %189 = getelementptr inbounds i8, i8* %187, i64 1
  %190 = getelementptr inbounds i8, i8* %176, i64 1
  store i8 %188, i8* %176, align 1
  %191 = load i8, i8* %189, align 1
  br label %174

192:                                              ; preds = %174, %178, %182
  %193 = phi i8* [ %179, %178 ], [ %177, %182 ], [ %177, %174 ]
  store i8 0, i8* %176, align 1
  %194 = load i8, i8* %193, align 1
  %195 = icmp eq i8 %194, 0
  %196 = getelementptr inbounds i8, i8* %193, i64 1
  %197 = select i1 %195, i8* %193, i8* %196
  %198 = load i8, i8* %11, align 1
  %199 = icmp eq i8 %198, 0
  br i1 %199, label %458, label %200

200:                                              ; preds = %192
  switch i8 %194, label %416 [
    i8 61, label %201
    i8 95, label %201
  ]

201:                                              ; preds = %200, %200
  %202 = call i32 @FcObjectLookupBuiltinIdByName(i8* %11) #11
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %206

204:                                              ; preds = %201
  %205 = call %struct._FcObjectType* @FcObjectLookupOtherTypeByName(i8* %11) #11
  br label %210

206:                                              ; preds = %201
  %207 = add nsw i32 %202, -1
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds [51 x %struct._FcObjectType], [51 x %struct._FcObjectType]* @FcObjects, i64 0, i64 %208
  br label %210

210:                                              ; preds = %204, %206
  %211 = phi %struct._FcObjectType* [ %209, %206 ], [ %205, %204 ]
  %212 = icmp eq %struct._FcObjectType* %211, null
  %213 = getelementptr inbounds %struct._FcObjectType, %struct._FcObjectType* %211, i64 0, i32 1
  %214 = getelementptr inbounds %struct._FcObjectType, %struct._FcObjectType* %211, i64 0, i32 0
  br label %215

215:                                              ; preds = %412, %210
  %216 = phi i8* [ %197, %210 ], [ %263, %412 ]
  %217 = load i8, i8* %216, align 1
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %234, label %219

219:                                              ; preds = %215
  %220 = tail call i16** @__ctype_b_loc() #14
  %221 = load i16*, i16** %220, align 8
  br label %222

222:                                              ; preds = %230, %219
  %223 = phi i8 [ %217, %219 ], [ %232, %230 ]
  %224 = phi i8* [ %216, %219 ], [ %231, %230 ]
  %225 = zext i8 %223 to i64
  %226 = getelementptr inbounds i16, i16* %221, i64 %225
  %227 = load i16, i16* %226, align 2
  %228 = and i16 %227, 8192
  %229 = icmp eq i16 %228, 0
  br i1 %229, label %234, label %230

230:                                              ; preds = %222
  %231 = getelementptr inbounds i8, i8* %224, i64 1
  %232 = load i8, i8* %231, align 1
  %233 = icmp eq i8 %232, 0
  br i1 %233, label %234, label %222

234:                                              ; preds = %230, %222, %215
  %235 = phi i8 [ 0, %215 ], [ %223, %222 ], [ 0, %230 ]
  %236 = phi i8* [ %216, %215 ], [ %224, %222 ], [ %231, %230 ]
  br label %237

237:                                              ; preds = %234, %252
  %238 = phi i8 [ %257, %252 ], [ %235, %234 ]
  %239 = phi i8* [ %256, %252 ], [ %11, %234 ]
  %240 = phi i8* [ %255, %252 ], [ %236, %234 ]
  switch i8 %238, label %245 [
    i8 0, label %258
    i8 92, label %241
  ]

241:                                              ; preds = %237
  %242 = getelementptr inbounds i8, i8* %240, i64 1
  %243 = load i8, i8* %242, align 1
  %244 = icmp eq i8 %243, 0
  br i1 %244, label %258, label %252

245:                                              ; preds = %237
  %246 = zext i8 %238 to i64
  %247 = icmp ugt i8 %238, 63
  %248 = shl i64 1, %246
  %249 = and i64 %248, 288247968337756161
  %250 = icmp eq i64 %249, 0
  %251 = or i1 %247, %250
  br i1 %251, label %252, label %258

252:                                              ; preds = %245, %241
  %253 = phi i8* [ %242, %241 ], [ %240, %245 ]
  %254 = phi i8 [ %243, %241 ], [ %238, %245 ]
  %255 = getelementptr inbounds i8, i8* %253, i64 1
  %256 = getelementptr inbounds i8, i8* %239, i64 1
  store i8 %254, i8* %239, align 1
  %257 = load i8, i8* %255, align 1
  br label %237

258:                                              ; preds = %237, %241, %245
  %259 = phi i8* [ %242, %241 ], [ %240, %245 ], [ %240, %237 ]
  store i8 0, i8* %239, align 1
  %260 = load i8, i8* %259, align 1
  %261 = icmp eq i8 %260, 0
  %262 = getelementptr inbounds i8, i8* %259, i64 1
  %263 = select i1 %261, i8* %259, i8* %262
  br i1 %212, label %412, label %264

264:                                              ; preds = %258
  %265 = load i32, i32* %213, align 8
  %266 = load i8*, i8** %214, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %133)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 -86, i64 16, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %134) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %134, i8 -1, i64 32, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #11
  store double 0xFFFFFFFFFFFFFFFF, double* %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %139) #11
  store double 0xFFFFFFFFFFFFFFFF, double* %5, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  store i32 %265, i32* %141, align 8
  switch i32 %265, label %406 [
    i32 1, label %269
    i32 3, label %290
    i32 4, label %294
    i32 2, label %298
    i32 5, label %300
    i32 6, label %303
    i32 8, label %307
    i32 9, label %311
  ]

267:                                              ; preds = %269
  %268 = icmp eq i64 %275, 57
  br i1 %268, label %287, label %269

269:                                              ; preds = %264, %267
  %270 = phi i64 [ %275, %267 ], [ 0, %264 ]
  %271 = getelementptr inbounds [57 x %struct._FcConstant], [57 x %struct._FcConstant]* @_FcBaseConstants, i64 0, i64 %270, i32 0
  %272 = load i8*, i8** %271, align 8
  %273 = call i32 @IA__FcStrCmpIgnoreCase(i8* %11, i8* %272) #11
  %274 = icmp eq i32 %273, 0
  %275 = add nuw nsw i64 %270, 1
  br i1 %274, label %276, label %267

276:                                              ; preds = %269
  %277 = getelementptr inbounds [57 x %struct._FcConstant], [57 x %struct._FcConstant]* @_FcBaseConstants, i64 0, i64 %270, i32 1
  %278 = load i8*, i8** %277, align 8
  %279 = call i32 @strcmp(i8* %278, i8* %266) #12
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %284, label %281

281:                                              ; preds = %276
  %282 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %283 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %282, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %266, i8* %278) #15
  br label %287

284:                                              ; preds = %276
  %285 = getelementptr inbounds [57 x %struct._FcConstant], [57 x %struct._FcConstant]* @_FcBaseConstants, i64 0, i64 %270, i32 2
  %286 = load i32, i32* %285, align 8
  store i32 %286, i32* %150, align 8
  br label %406

287:                                              ; preds = %267, %281
  %288 = call i64 @strtol(i8* nocapture %11, i8** null, i32 10) #11
  %289 = trunc i64 %288 to i32
  store i32 %289, i32* %150, align 8
  br label %406

290:                                              ; preds = %264
  %291 = call noalias i8* @strdup(i8* %11) #11
  store i8* %291, i8** %151, align 8
  %292 = icmp eq i8* %291, null
  br i1 %292, label %293, label %406

293:                                              ; preds = %290
  store i32 0, i32* %141, align 8
  br label %406

294:                                              ; preds = %264
  %295 = call i32 @FcNameBool(i8* %11, i32* %150) #11
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %406

297:                                              ; preds = %294
  store i32 0, i32* %150, align 8
  br label %406

298:                                              ; preds = %264
  %299 = call double @strtod(i8* nocapture %11, i8** null) #11
  store double %299, double* %143, align 8
  br label %406

300:                                              ; preds = %264
  store double 1.000000e+00, double* %137, align 8
  store double 1.000000e+00, double* %135, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %148, i8 0, i64 16, i1 false) #11
  %301 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.114, i64 0, i64 0), double* nonnull %135, double* %136, double* %147, double* %137) #11
  %302 = call %struct._FcMatrix* @IA__FcMatrixCopy(%struct._FcMatrix* nonnull %3) #11
  store %struct._FcMatrix* %302, %struct._FcMatrix** %149, align 8
  br label %406

303:                                              ; preds = %264
  %304 = call %struct._FcCharSet* @FcNameParseCharSet(i8* %11) #11
  store %struct._FcCharSet* %304, %struct._FcCharSet** %146, align 8
  %305 = icmp eq %struct._FcCharSet* %304, null
  br i1 %305, label %306, label %406

306:                                              ; preds = %303
  store i32 0, i32* %141, align 8
  br label %406

307:                                              ; preds = %264
  %308 = call %struct._FcLangSet* @FcNameParseLangSet(i8* %11) #11
  store %struct._FcLangSet* %308, %struct._FcLangSet** %145, align 8
  %309 = icmp eq %struct._FcLangSet* %308, null
  br i1 %309, label %310, label %406

310:                                              ; preds = %307
  store i32 0, i32* %141, align 8
  br label %406

311:                                              ; preds = %264
  %312 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.115, i64 0, i64 0), double* nonnull %4, double* nonnull %5) #11
  %313 = icmp eq i32 %312, 2
  br i1 %313, label %402, label %314

314:                                              ; preds = %311
  %315 = call i64 @strlen(i8* %11) #12
  %316 = add i64 %315, 1
  %317 = call noalias i8* @malloc(i64 %316) #11
  %318 = call noalias i8* @malloc(i64 %316) #11
  %319 = icmp ne i8* %317, null
  %320 = icmp ne i8* %318, null
  %321 = and i1 %319, %320
  br i1 %321, label %322, label %368

322:                                              ; preds = %314
  %323 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %11, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.116, i64 0, i64 0), i8* nonnull %317, i8* nonnull %318) #11
  %324 = icmp eq i32 %323, 2
  br i1 %324, label %327, label %368

325:                                              ; preds = %327
  %326 = icmp eq i64 %333, 57
  br i1 %326, label %368, label %327

327:                                              ; preds = %322, %325
  %328 = phi i64 [ %333, %325 ], [ 0, %322 ]
  %329 = getelementptr inbounds [57 x %struct._FcConstant], [57 x %struct._FcConstant]* @_FcBaseConstants, i64 0, i64 %328, i32 0
  %330 = load i8*, i8** %329, align 8
  %331 = call i32 @IA__FcStrCmpIgnoreCase(i8* nonnull %317, i8* %330) #11
  %332 = icmp eq i32 %331, 0
  %333 = add nuw nsw i64 %328, 1
  br i1 %332, label %334, label %325

334:                                              ; preds = %327
  %335 = getelementptr inbounds [57 x %struct._FcConstant], [57 x %struct._FcConstant]* @_FcBaseConstants, i64 0, i64 %328, i32 1
  %336 = load i8*, i8** %335, align 8
  %337 = call i32 @strcmp(i8* %336, i8* %266) #12
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %342, label %339

339:                                              ; preds = %334
  %340 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %341 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %340, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str, i64 0, i64 0), i8* nonnull %317, i8* %266, i8* %336) #15
  br label %368

342:                                              ; preds = %334
  %343 = getelementptr inbounds [57 x %struct._FcConstant], [57 x %struct._FcConstant]* @_FcBaseConstants, i64 0, i64 %328, i32 2
  %344 = load i32, i32* %343, align 8
  br label %347

345:                                              ; preds = %347
  %346 = icmp eq i64 %353, 57
  br i1 %346, label %368, label %347

347:                                              ; preds = %345, %342
  %348 = phi i64 [ 0, %342 ], [ %353, %345 ]
  %349 = getelementptr inbounds [57 x %struct._FcConstant], [57 x %struct._FcConstant]* @_FcBaseConstants, i64 0, i64 %348, i32 0
  %350 = load i8*, i8** %349, align 8
  %351 = call i32 @IA__FcStrCmpIgnoreCase(i8* nonnull %318, i8* %350) #11
  %352 = icmp eq i32 %351, 0
  %353 = add nuw nsw i64 %348, 1
  br i1 %352, label %354, label %345

354:                                              ; preds = %347
  %355 = getelementptr inbounds [57 x %struct._FcConstant], [57 x %struct._FcConstant]* @_FcBaseConstants, i64 0, i64 %348, i32 1
  %356 = load i8*, i8** %355, align 8
  %357 = call i32 @strcmp(i8* %356, i8* %266) #12
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %362, label %359

359:                                              ; preds = %354
  %360 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %361 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %360, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str, i64 0, i64 0), i8* nonnull %318, i8* %266, i8* %356) #15
  br label %368

362:                                              ; preds = %354
  %363 = getelementptr inbounds [57 x %struct._FcConstant], [57 x %struct._FcConstant]* @_FcBaseConstants, i64 0, i64 %348, i32 2
  %364 = load i32, i32* %363, align 8
  %365 = sitofp i32 %344 to double
  %366 = sitofp i32 %364 to double
  %367 = call %struct._FcRange* @IA__FcRangeCreateDouble(double %365, double %366) #11
  store %struct._FcRange* %367, %struct._FcRange** %144, align 8
  br label %398

368:                                              ; preds = %325, %345, %359, %339, %322, %314
  store i32 2, i32* %141, align 8
  br label %371

369:                                              ; preds = %371
  %370 = icmp eq i64 %377, 57
  br i1 %370, label %390, label %371

371:                                              ; preds = %369, %368
  %372 = phi i64 [ 0, %368 ], [ %377, %369 ]
  %373 = getelementptr inbounds [57 x %struct._FcConstant], [57 x %struct._FcConstant]* @_FcBaseConstants, i64 0, i64 %372, i32 0
  %374 = load i8*, i8** %373, align 8
  %375 = call i32 @IA__FcStrCmpIgnoreCase(i8* %11, i8* %374) #11
  %376 = icmp eq i32 %375, 0
  %377 = add nuw nsw i64 %372, 1
  br i1 %376, label %378, label %369

378:                                              ; preds = %371
  %379 = getelementptr inbounds [57 x %struct._FcConstant], [57 x %struct._FcConstant]* @_FcBaseConstants, i64 0, i64 %372, i32 1
  %380 = load i8*, i8** %379, align 8
  %381 = call i32 @strcmp(i8* %380, i8* %266) #12
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %386, label %383

383:                                              ; preds = %378
  %384 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %385 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %384, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %266, i8* %380) #15
  br label %390

386:                                              ; preds = %378
  %387 = getelementptr inbounds [57 x %struct._FcConstant], [57 x %struct._FcConstant]* @_FcBaseConstants, i64 0, i64 %372, i32 2
  %388 = load i32, i32* %387, align 8
  %389 = sitofp i32 %388 to double
  store double %389, double* %143, align 8
  br label %398

390:                                              ; preds = %369, %383
  %391 = call double @strtod(i8* %11, i8** nonnull %6) #11
  store double %391, double* %143, align 8
  %392 = load i8*, i8** %6, align 8
  %393 = icmp eq i8* %392, null
  br i1 %393, label %398, label %394

394:                                              ; preds = %390
  %395 = load i8, i8* %392, align 1
  %396 = icmp eq i8 %395, 0
  br i1 %396, label %398, label %397

397:                                              ; preds = %394
  store i32 0, i32* %141, align 8
  br label %398

398:                                              ; preds = %397, %394, %390, %386, %362
  br i1 %319, label %399, label %400

399:                                              ; preds = %398
  call void @free(i8* nonnull %317) #11
  br label %400

400:                                              ; preds = %399, %398
  br i1 %320, label %401, label %406

401:                                              ; preds = %400
  call void @free(i8* nonnull %318) #11
  br label %406

402:                                              ; preds = %311
  %403 = load double, double* %4, align 8
  %404 = load double, double* %5, align 8
  %405 = call %struct._FcRange* @IA__FcRangeCreateDouble(double %403, double %404) #11
  store %struct._FcRange* %405, %struct._FcRange** %144, align 8
  br label %406

406:                                              ; preds = %264, %284, %287, %290, %293, %294, %297, %298, %300, %303, %306, %307, %310, %400, %401, %402
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %139) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %134) #11
  %407 = load i32, i32* %141, align 8
  %408 = load i8*, i8** %151, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %133)
  %409 = load i8*, i8** %214, align 8
  %410 = call i32 @IA__FcPatternAdd(%struct._FcPattern* nonnull %14, i8* %409, i32 %407, i8* %408, i32 1) #11
  %411 = icmp eq i32 %410, 0
  call void @IA__FcValueDestroy(i32 %407, i8* %408) #11
  br i1 %411, label %462, label %412

412:                                              ; preds = %406, %258
  %413 = icmp eq i8 %260, 44
  br i1 %413, label %215, label %458

414:                                              ; preds = %416
  %415 = icmp eq i64 %423, 57
  br i1 %415, label %458, label %416

416:                                              ; preds = %200, %414
  %417 = phi i64 [ %423, %414 ], [ 0, %200 ]
  %418 = getelementptr inbounds [57 x %struct._FcConstant], [57 x %struct._FcConstant]* @_FcBaseConstants, i64 0, i64 %417
  %419 = getelementptr inbounds %struct._FcConstant, %struct._FcConstant* %418, i64 0, i32 0
  %420 = load i8*, i8** %419, align 8
  %421 = call i32 @IA__FcStrCmpIgnoreCase(i8* %11, i8* %420) #11
  %422 = icmp eq i32 %421, 0
  %423 = add nuw nsw i64 %417, 1
  br i1 %422, label %424, label %414

424:                                              ; preds = %416
  %425 = icmp eq %struct._FcConstant* %418, null
  br i1 %425, label %458, label %426

426:                                              ; preds = %424
  %427 = getelementptr inbounds [57 x %struct._FcConstant], [57 x %struct._FcConstant]* @_FcBaseConstants, i64 0, i64 %417, i32 1
  %428 = load i8*, i8** %427, align 8
  %429 = call i32 @FcObjectLookupBuiltinIdByName(i8* %428) #11
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %431, label %433

431:                                              ; preds = %426
  %432 = call %struct._FcObjectType* @FcObjectLookupOtherTypeByName(i8* %428) #11
  br label %437

433:                                              ; preds = %426
  %434 = add nsw i32 %429, -1
  %435 = sext i32 %434 to i64
  %436 = getelementptr inbounds [51 x %struct._FcObjectType], [51 x %struct._FcObjectType]* @FcObjects, i64 0, i64 %435
  br label %437

437:                                              ; preds = %431, %433
  %438 = phi %struct._FcObjectType* [ %436, %433 ], [ %432, %431 ]
  %439 = icmp eq %struct._FcObjectType* %438, null
  br i1 %439, label %462, label %440

440:                                              ; preds = %437
  %441 = getelementptr inbounds %struct._FcObjectType, %struct._FcObjectType* %438, i64 0, i32 1
  %442 = load i32, i32* %441, align 8
  switch i32 %442, label %458 [
    i32 1, label %443
    i32 2, label %443
    i32 4, label %448
    i32 9, label %453
  ]

443:                                              ; preds = %440, %440
  %444 = getelementptr inbounds [57 x %struct._FcConstant], [57 x %struct._FcConstant]* @_FcBaseConstants, i64 0, i64 %417, i32 2
  %445 = load i32, i32* %444, align 8
  %446 = call i32 @IA__FcPatternAddInteger(%struct._FcPattern* nonnull %14, i8* %428, i32 %445) #11
  %447 = icmp eq i32 %446, 0
  br i1 %447, label %462, label %458

448:                                              ; preds = %440
  %449 = getelementptr inbounds [57 x %struct._FcConstant], [57 x %struct._FcConstant]* @_FcBaseConstants, i64 0, i64 %417, i32 2
  %450 = load i32, i32* %449, align 8
  %451 = call i32 @IA__FcPatternAddBool(%struct._FcPattern* nonnull %14, i8* %428, i32 %450) #11
  %452 = icmp eq i32 %451, 0
  br i1 %452, label %462, label %458

453:                                              ; preds = %440
  %454 = getelementptr inbounds [57 x %struct._FcConstant], [57 x %struct._FcConstant]* @_FcBaseConstants, i64 0, i64 %417, i32 2
  %455 = load i32, i32* %454, align 8
  %456 = call i32 @IA__FcPatternAddInteger(%struct._FcPattern* nonnull %14, i8* %428, i32 %455) #11
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %462, label %458

458:                                              ; preds = %412, %414, %443, %448, %453, %424, %192, %440
  %459 = phi i8 [ %194, %192 ], [ %194, %424 ], [ %194, %440 ], [ %194, %453 ], [ %194, %448 ], [ %194, %443 ], [ %194, %414 ], [ %260, %412 ]
  %460 = phi i8* [ %197, %192 ], [ %197, %424 ], [ %197, %440 ], [ %197, %453 ], [ %197, %448 ], [ %197, %443 ], [ %197, %414 ], [ %263, %412 ]
  %461 = icmp eq i8 %459, 58
  br i1 %461, label %152, label %463

462:                                              ; preds = %67, %123, %443, %448, %453, %437, %406
  call void @IA__FcPatternDestroy(%struct._FcPattern* nonnull %14) #11
  br label %463

463:                                              ; preds = %458, %462, %13, %128
  %464 = phi %struct._FcPattern* [ %14, %128 ], [ null, %13 ], [ null, %462 ], [ %14, %458 ]
  call void @free(i8* %11) #11
  br label %465

465:                                              ; preds = %463, %1
  %466 = phi %struct._FcPattern* [ null, %1 ], [ %464, %463 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  ret %struct._FcPattern* %466
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare hidden %struct._FcPattern* @IA__FcPatternCreate() local_unnamed_addr #3

declare hidden i32 @FcPatternObjectAddString(%struct._FcPattern*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare double @strtod(i8* readonly, i8** nocapture) local_unnamed_addr #5

declare hidden i32 @FcPatternObjectAddDouble(%struct._FcPattern*, i32, double) local_unnamed_addr #3

declare hidden i32 @IA__FcPatternAdd(%struct._FcPattern*, i8*, i32, i8*, i32) local_unnamed_addr #3

declare hidden void @IA__FcValueDestroy(i32, i8*) local_unnamed_addr #3

declare hidden i32 @IA__FcPatternAddInteger(%struct._FcPattern*, i8*, i32) local_unnamed_addr #3

declare hidden i32 @IA__FcPatternAddBool(%struct._FcPattern*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #8

declare hidden void @IA__FcPatternDestroy(%struct._FcPattern*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcNameUnparseValue(%struct._FcStrBuf*, %struct._FcValue*, i8* readonly) local_unnamed_addr #1 {
  %4 = alloca [1024 x i8], align 16
  %5 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %5) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 1024, i1 false)
  %6 = tail call { i32, i8* } @FcValueCanonicalize(%struct._FcValue* %1) #11
  %7 = extractvalue { i32, i8* } %6, 0
  %8 = extractvalue { i32, i8* } %6, 1
  %9 = ptrtoint i8* %8 to i64
  %10 = trunc i64 %9 to i32
  switch i32 %7, label %106 [
    i32 -1, label %107
    i32 0, label %107
    i32 1, label %11
    i32 2, label %21
    i32 3, label %32
    i32 4, label %51
    i32 5, label %64
    i32 6, label %85
    i32 8, label %88
    i32 7, label %107
    i32 9, label %91
  ]

11:                                               ; preds = %3
  %12 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i32 %10) #11
  br label %13

13:                                               ; preds = %17, %11
  %14 = phi i8* [ %5, %11 ], [ %18, %17 ]
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %107, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds i8, i8* %14, i64 1
  %19 = tail call i32 @FcStrBufChar(%struct._FcStrBuf* %0, i8 zeroext %15) #11
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %107, label %13

21:                                               ; preds = %3
  %22 = bitcast i64 %9 to double
  %23 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), double %22) #11
  br label %24

24:                                               ; preds = %28, %21
  %25 = phi i8* [ %5, %21 ], [ %29, %28 ]
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %107, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds i8, i8* %25, i64 1
  %30 = tail call i32 @FcStrBufChar(%struct._FcStrBuf* %0, i8 zeroext %26) #11
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %107, label %24

32:                                               ; preds = %3
  %33 = icmp eq i8* %2, null
  br label %34

34:                                               ; preds = %48, %32
  %35 = phi i8* [ %8, %32 ], [ %36, %48 ]
  %36 = getelementptr inbounds i8, i8* %35, i64 1
  %37 = load i8, i8* %35, align 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %107, label %39

39:                                               ; preds = %34
  br i1 %33, label %48, label %40

40:                                               ; preds = %39
  %41 = sext i8 %37 to i32
  %42 = tail call i8* @strchr(i8* nonnull %2, i32 %41) #12
  %43 = icmp eq i8* %42, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %40
  %45 = load i8, i8* %2, align 1
  %46 = tail call i32 @FcStrBufChar(%struct._FcStrBuf* %0, i8 zeroext %45) #11
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %107, label %48

48:                                               ; preds = %44, %40, %39
  %49 = tail call i32 @FcStrBufChar(%struct._FcStrBuf* %0, i8 zeroext %37) #11
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %107, label %34

51:                                               ; preds = %3
  %52 = icmp eq i32 %10, 1
  %53 = icmp eq i32 %10, 0
  %54 = select i1 %53, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0)
  %55 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i8* %54
  br label %56

56:                                               ; preds = %60, %51
  %57 = phi i8* [ %55, %51 ], [ %61, %60 ]
  %58 = load i8, i8* %57, align 1
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %107, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds i8, i8* %57, i64 1
  %62 = tail call i32 @FcStrBufChar(%struct._FcStrBuf* %0, i8 zeroext %58) #11
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %107, label %56

64:                                               ; preds = %3
  %65 = bitcast i8* %8 to double*
  %66 = load double, double* %65, align 8
  %67 = getelementptr inbounds i8, i8* %8, i64 8
  %68 = bitcast i8* %67 to double*
  %69 = load double, double* %68, align 8
  %70 = getelementptr inbounds i8, i8* %8, i64 16
  %71 = bitcast i8* %70 to double*
  %72 = load double, double* %71, align 8
  %73 = getelementptr inbounds i8, i8* %8, i64 24
  %74 = bitcast i8* %73 to double*
  %75 = load double, double* %74, align 8
  %76 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0), double %66, double %69, double %72, double %75) #11
  br label %77

77:                                               ; preds = %81, %64
  %78 = phi i8* [ %5, %64 ], [ %82, %81 ]
  %79 = load i8, i8* %78, align 1
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %107, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds i8, i8* %78, i64 1
  %83 = tail call i32 @FcStrBufChar(%struct._FcStrBuf* %0, i8 zeroext %79) #11
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %107, label %77

85:                                               ; preds = %3
  %86 = bitcast i8* %8 to %struct._FcCharSet*
  %87 = tail call i32 @FcNameUnparseCharSet(%struct._FcStrBuf* %0, %struct._FcCharSet* %86) #11
  br label %107

88:                                               ; preds = %3
  %89 = bitcast i8* %8 to %struct._FcLangSet*
  %90 = tail call i32 @FcNameUnparseLangSet(%struct._FcStrBuf* %0, %struct._FcLangSet* %89) #11
  br label %107

91:                                               ; preds = %3
  %92 = bitcast i8* %8 to double*
  %93 = load double, double* %92, align 8
  %94 = getelementptr inbounds i8, i8* %8, i64 8
  %95 = bitcast i8* %94 to double*
  %96 = load double, double* %95, align 8
  %97 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), double %93, double %96) #11
  br label %98

98:                                               ; preds = %102, %91
  %99 = phi i8* [ %5, %91 ], [ %103, %102 ]
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %107, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds i8, i8* %99, i64 1
  %104 = tail call i32 @FcStrBufChar(%struct._FcStrBuf* %0, i8 zeroext %100) #11
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %107, label %98

106:                                              ; preds = %3
  br label %107

107:                                              ; preds = %102, %98, %81, %77, %60, %56, %48, %44, %34, %28, %24, %17, %13, %3, %3, %3, %106, %88, %85
  %108 = phi i32 [ 0, %106 ], [ %90, %88 ], [ %87, %85 ], [ 1, %3 ], [ 1, %3 ], [ 1, %3 ], [ 1, %13 ], [ 0, %17 ], [ 1, %24 ], [ 0, %28 ], [ 1, %34 ], [ 0, %48 ], [ 0, %44 ], [ 1, %56 ], [ 0, %60 ], [ 1, %77 ], [ 0, %81 ], [ 1, %98 ], [ 0, %102 ]
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %5) #11
  ret i32 %108
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare hidden { i32, i8* } @FcValueCanonicalize(%struct._FcValue*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @sprintf(i8* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #5

declare hidden i32 @FcNameUnparseCharSet(%struct._FcStrBuf*, %struct._FcCharSet*) local_unnamed_addr #3

declare hidden i32 @FcNameUnparseLangSet(%struct._FcStrBuf*, %struct._FcLangSet*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcNameUnparseValueList(%struct._FcStrBuf*, %struct._FcValueList*, i8* readonly) local_unnamed_addr #1 {
  %4 = icmp eq %struct._FcValueList* %1, null
  br i1 %4, label %34, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %1, i64 0, i32 1
  %7 = tail call i32 @FcNameUnparseValue(%struct._FcStrBuf* %0, %struct._FcValue* %6, i8* %2)
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %34, label %13

9:                                                ; preds = %26
  %10 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %24, i64 0, i32 1
  %11 = tail call i32 @FcNameUnparseValue(%struct._FcStrBuf* %0, %struct._FcValue* %10, i8* %2)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %34, label %13

13:                                               ; preds = %5, %9
  %14 = phi %struct._FcValueList* [ %24, %9 ], [ %1, %5 ]
  %15 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %14, i64 0, i32 0
  %16 = load %struct._FcValueList*, %struct._FcValueList** %15, align 8
  %17 = ptrtoint %struct._FcValueList* %16 to i64
  %18 = and i64 %17, 1
  %19 = icmp eq i64 %18, 0
  %20 = ptrtoint %struct._FcValueList* %14 to i64
  %21 = and i64 %17, -2
  %22 = add nsw i64 %21, %20
  %23 = inttoptr i64 %22 to %struct._FcValueList*
  %24 = select i1 %19, %struct._FcValueList* %16, %struct._FcValueList* %23
  %25 = icmp eq %struct._FcValueList* %24, null
  br i1 %25, label %34, label %26

26:                                               ; preds = %13, %29
  %27 = phi i8* [ %31, %29 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), %13 ]
  %28 = icmp eq i8* %27, getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 1)
  br i1 %28, label %9, label %29

29:                                               ; preds = %26
  %30 = load i8, i8* %27, align 1
  %31 = getelementptr inbounds i8, i8* %27, i64 1
  %32 = tail call i32 @FcStrBufChar(%struct._FcStrBuf* %0, i8 zeroext %30) #11
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %26

34:                                               ; preds = %9, %13, %29, %5, %3
  %35 = phi i32 [ 1, %3 ], [ 0, %5 ], [ 0, %29 ], [ 1, %13 ], [ 0, %9 ]
  ret i32 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @IA__FcNameUnparse(%struct._FcPattern*) #1 {
  %2 = tail call i8* @FcNameUnparseEscaped(%struct._FcPattern* %0, i32 1)
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @FcNameUnparseEscaped(%struct._FcPattern*, i32) local_unnamed_addr #1 {
  %3 = alloca %struct._FcStrBuf, align 8
  %4 = alloca %struct._FcStrBuf, align 8
  %5 = alloca [8192 x i8], align 16
  %6 = alloca [256 x i8], align 16
  %7 = bitcast %struct._FcStrBuf* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 152, i1 false)
  %8 = bitcast %struct._FcStrBuf* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 152, i1 false)
  %9 = getelementptr inbounds [8192 x i8], [8192 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 8192, i1 false)
  %10 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 256, i1 false)
  call void @FcStrBufInit(%struct._FcStrBuf* nonnull %3, i8* nonnull %9, i32 8192) #11
  call void @FcStrBufInit(%struct._FcStrBuf* nonnull %4, i8* nonnull %10, i32 256) #11
  %11 = call %struct._FcPatternElt* @FcPatternObjectFindElt(%struct._FcPattern* %0, i32 1) #11
  %12 = icmp eq %struct._FcPatternElt* %11, null
  br i1 %12, label %56, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %11, i64 0, i32 1
  %15 = load %struct._FcValueList*, %struct._FcValueList** %14, align 8
  %16 = ptrtoint %struct._FcValueList* %15 to i64
  %17 = and i64 %16, 1
  %18 = icmp eq i64 %17, 0
  %19 = ptrtoint %struct._FcPatternElt* %11 to i64
  %20 = and i64 %16, -2
  %21 = add nsw i64 %20, %19
  %22 = inttoptr i64 %21 to %struct._FcValueList*
  %23 = select i1 %18, %struct._FcValueList* %15, %struct._FcValueList* %22
  %24 = icmp eq i32 %1, 0
  %25 = select i1 %24, i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0)
  %26 = icmp eq %struct._FcValueList* %23, null
  br i1 %26, label %56, label %27

27:                                               ; preds = %13
  %28 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %23, i64 0, i32 1
  %29 = call i32 @FcNameUnparseValue(%struct._FcStrBuf* nonnull %3, %struct._FcValue* %28, i8* %25) #11
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %212, label %35

31:                                               ; preds = %48
  %32 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %46, i64 0, i32 1
  %33 = call i32 @FcNameUnparseValue(%struct._FcStrBuf* nonnull %3, %struct._FcValue* %32, i8* %25) #11
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %212, label %35

35:                                               ; preds = %27, %31
  %36 = phi %struct._FcValueList* [ %46, %31 ], [ %23, %27 ]
  %37 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %36, i64 0, i32 0
  %38 = load %struct._FcValueList*, %struct._FcValueList** %37, align 8
  %39 = ptrtoint %struct._FcValueList* %38 to i64
  %40 = and i64 %39, 1
  %41 = icmp eq i64 %40, 0
  %42 = ptrtoint %struct._FcValueList* %36 to i64
  %43 = and i64 %39, -2
  %44 = add nsw i64 %43, %42
  %45 = inttoptr i64 %44 to %struct._FcValueList*
  %46 = select i1 %41, %struct._FcValueList* %38, %struct._FcValueList* %45
  %47 = icmp eq %struct._FcValueList* %46, null
  br i1 %47, label %56, label %48

48:                                               ; preds = %35, %51
  %49 = phi i8* [ %53, %51 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), %35 ]
  %50 = icmp eq i8* %49, getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 1)
  br i1 %50, label %31, label %51

51:                                               ; preds = %48
  %52 = load i8, i8* %49, align 1
  %53 = getelementptr inbounds i8, i8* %49, i64 1
  %54 = call i32 @FcStrBufChar(%struct._FcStrBuf* nonnull %3, i8 zeroext %52) #11
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %212, label %48

56:                                               ; preds = %35, %13, %2
  %57 = call %struct._FcPatternElt* @FcPatternObjectFindElt(%struct._FcPattern* %0, i32 10) #11
  %58 = icmp eq %struct._FcPatternElt* %57, null
  br i1 %58, label %117, label %59

59:                                               ; preds = %56, %62
  %60 = phi i8* [ %64, %62 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0), %56 ]
  %61 = icmp eq i8* %60, getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 1)
  br i1 %61, label %67, label %62

62:                                               ; preds = %59
  %63 = load i8, i8* %60, align 1
  %64 = getelementptr inbounds i8, i8* %60, i64 1
  %65 = call i32 @FcStrBufChar(%struct._FcStrBuf* nonnull %4, i8 zeroext %63) #11
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %212, label %59

67:                                               ; preds = %59
  %68 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %57, i64 0, i32 1
  %69 = load %struct._FcValueList*, %struct._FcValueList** %68, align 8
  %70 = ptrtoint %struct._FcValueList* %69 to i64
  %71 = and i64 %70, 1
  %72 = icmp eq i64 %71, 0
  %73 = ptrtoint %struct._FcPatternElt* %57 to i64
  %74 = and i64 %70, -2
  %75 = add nsw i64 %74, %73
  %76 = inttoptr i64 %75 to %struct._FcValueList*
  %77 = select i1 %72, %struct._FcValueList* %69, %struct._FcValueList* %76
  %78 = icmp eq i32 %1, 0
  %79 = select i1 %78, i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0)
  %80 = icmp eq %struct._FcValueList* %77, null
  br i1 %80, label %110, label %81

81:                                               ; preds = %67
  %82 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %77, i64 0, i32 1
  %83 = call i32 @FcNameUnparseValue(%struct._FcStrBuf* nonnull %4, %struct._FcValue* %82, i8* %79) #11
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %212, label %89

85:                                               ; preds = %102
  %86 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %100, i64 0, i32 1
  %87 = call i32 @FcNameUnparseValue(%struct._FcStrBuf* nonnull %4, %struct._FcValue* %86, i8* %79) #11
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %212, label %89

89:                                               ; preds = %81, %85
  %90 = phi %struct._FcValueList* [ %100, %85 ], [ %77, %81 ]
  %91 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %90, i64 0, i32 0
  %92 = load %struct._FcValueList*, %struct._FcValueList** %91, align 8
  %93 = ptrtoint %struct._FcValueList* %92 to i64
  %94 = and i64 %93, 1
  %95 = icmp eq i64 %94, 0
  %96 = ptrtoint %struct._FcValueList* %90 to i64
  %97 = and i64 %93, -2
  %98 = add nsw i64 %97, %96
  %99 = inttoptr i64 %98 to %struct._FcValueList*
  %100 = select i1 %95, %struct._FcValueList* %92, %struct._FcValueList* %99
  %101 = icmp eq %struct._FcValueList* %100, null
  br i1 %101, label %110, label %102

102:                                              ; preds = %89, %105
  %103 = phi i8* [ %107, %105 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), %89 ]
  %104 = icmp eq i8* %103, getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 1)
  br i1 %104, label %85, label %105

105:                                              ; preds = %102
  %106 = load i8, i8* %103, align 1
  %107 = getelementptr inbounds i8, i8* %103, i64 1
  %108 = call i32 @FcStrBufChar(%struct._FcStrBuf* nonnull %4, i8 zeroext %106) #11
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %212, label %102

110:                                              ; preds = %89, %67
  %111 = call i8* @FcStrBufDoneStatic(%struct._FcStrBuf* nonnull %4) #11
  call void @FcStrBufDestroy(%struct._FcStrBuf* nonnull %4) #11
  %112 = call i64 @strlen(i8* %111) #12
  %113 = icmp ugt i64 %112, 1
  br i1 %113, label %114, label %117

114:                                              ; preds = %110
  %115 = call i32 @FcStrBufString(%struct._FcStrBuf* nonnull %3, i8* %111) #11
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %212, label %117

117:                                              ; preds = %114, %110, %56
  %118 = icmp eq i32 %1, 0
  %119 = select i1 %118, i8* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0)
  br label %120

120:                                              ; preds = %208, %117
  %121 = phi i64 [ 0, %117 ], [ %122, %208 ]
  %122 = add nuw nsw i64 %121, 1
  %123 = getelementptr inbounds [51 x %struct._FcObjectType], [51 x %struct._FcObjectType]* @FcObjects, i64 0, i64 %121, i32 0
  %124 = load i8*, i8** %123, align 16
  %125 = call i32 @strcmp(i8* %124, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0)) #12
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %208, label %127

127:                                              ; preds = %120
  %128 = call i32 @strcmp(i8* %124, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0)) #12
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %208, label %130

130:                                              ; preds = %127
  %131 = trunc i64 %122 to i32
  %132 = call %struct._FcPatternElt* @FcPatternObjectFindElt(%struct._FcPattern* %0, i32 %131) #11
  %133 = icmp eq %struct._FcPatternElt* %132, null
  br i1 %133, label %208, label %134

134:                                              ; preds = %130, %137
  %135 = phi i8* [ %139, %137 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), %130 ]
  %136 = icmp eq i8* %135, getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 1)
  br i1 %136, label %142, label %137

137:                                              ; preds = %134
  %138 = load i8, i8* %135, align 1
  %139 = getelementptr inbounds i8, i8* %135, i64 1
  %140 = call i32 @FcStrBufChar(%struct._FcStrBuf* nonnull %3, i8 zeroext %138) #11
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %212, label %134

142:                                              ; preds = %134, %156
  %143 = phi i8* [ %144, %156 ], [ %124, %134 ]
  %144 = getelementptr inbounds i8, i8* %143, i64 1
  %145 = load i8, i8* %143, align 1
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %159, label %147

147:                                              ; preds = %142
  br i1 %118, label %156, label %148

148:                                              ; preds = %147
  %149 = sext i8 %145 to i32
  %150 = call i8* @strchr(i8* nonnull %119, i32 %149) #12
  %151 = icmp eq i8* %150, null
  br i1 %151, label %156, label %152

152:                                              ; preds = %148
  %153 = load i8, i8* %119, align 1
  %154 = call i32 @FcStrBufChar(%struct._FcStrBuf* nonnull %3, i8 zeroext %153) #11
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %212, label %156

156:                                              ; preds = %152, %148, %147
  %157 = call i32 @FcStrBufChar(%struct._FcStrBuf* nonnull %3, i8 zeroext %145) #11
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %212, label %142

159:                                              ; preds = %142, %162
  %160 = phi i8* [ %164, %162 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0), %142 ]
  %161 = icmp eq i8* %160, getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 1)
  br i1 %161, label %167, label %162

162:                                              ; preds = %159
  %163 = load i8, i8* %160, align 1
  %164 = getelementptr inbounds i8, i8* %160, i64 1
  %165 = call i32 @FcStrBufChar(%struct._FcStrBuf* nonnull %3, i8 zeroext %163) #11
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %212, label %159

167:                                              ; preds = %159
  %168 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %132, i64 0, i32 1
  %169 = load %struct._FcValueList*, %struct._FcValueList** %168, align 8
  %170 = ptrtoint %struct._FcValueList* %169 to i64
  %171 = and i64 %170, 1
  %172 = icmp eq i64 %171, 0
  %173 = ptrtoint %struct._FcPatternElt* %132 to i64
  %174 = and i64 %170, -2
  %175 = add nsw i64 %174, %173
  %176 = inttoptr i64 %175 to %struct._FcValueList*
  %177 = select i1 %172, %struct._FcValueList* %169, %struct._FcValueList* %176
  %178 = icmp eq %struct._FcValueList* %177, null
  br i1 %178, label %208, label %179

179:                                              ; preds = %167
  %180 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %177, i64 0, i32 1
  %181 = call i32 @FcNameUnparseValue(%struct._FcStrBuf* nonnull %3, %struct._FcValue* %180, i8* %119) #11
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %212, label %187

183:                                              ; preds = %200
  %184 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %198, i64 0, i32 1
  %185 = call i32 @FcNameUnparseValue(%struct._FcStrBuf* nonnull %3, %struct._FcValue* %184, i8* %119) #11
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %212, label %187

187:                                              ; preds = %179, %183
  %188 = phi %struct._FcValueList* [ %198, %183 ], [ %177, %179 ]
  %189 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %188, i64 0, i32 0
  %190 = load %struct._FcValueList*, %struct._FcValueList** %189, align 8
  %191 = ptrtoint %struct._FcValueList* %190 to i64
  %192 = and i64 %191, 1
  %193 = icmp eq i64 %192, 0
  %194 = ptrtoint %struct._FcValueList* %188 to i64
  %195 = and i64 %191, -2
  %196 = add nsw i64 %195, %194
  %197 = inttoptr i64 %196 to %struct._FcValueList*
  %198 = select i1 %193, %struct._FcValueList* %190, %struct._FcValueList* %197
  %199 = icmp eq %struct._FcValueList* %198, null
  br i1 %199, label %208, label %200

200:                                              ; preds = %187, %203
  %201 = phi i8* [ %205, %203 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), %187 ]
  %202 = icmp eq i8* %201, getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 1)
  br i1 %202, label %183, label %203

203:                                              ; preds = %200
  %204 = load i8, i8* %201, align 1
  %205 = getelementptr inbounds i8, i8* %201, i64 1
  %206 = call i32 @FcStrBufChar(%struct._FcStrBuf* nonnull %3, i8 zeroext %204) #11
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %212, label %200

208:                                              ; preds = %187, %127, %120, %167, %130
  %209 = icmp eq i64 %122, 51
  br i1 %209, label %210, label %120

210:                                              ; preds = %208
  %211 = call i8* @FcStrBufDone(%struct._FcStrBuf* nonnull %3) #11
  br label %213

212:                                              ; preds = %31, %51, %62, %85, %105, %179, %137, %156, %152, %162, %183, %203, %27, %81, %114
  call void @FcStrBufDestroy(%struct._FcStrBuf* nonnull %3) #11
  br label %213

213:                                              ; preds = %212, %210
  %214 = phi i8* [ null, %212 ], [ %211, %210 ]
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %7) #11
  ret i8* %214
}

declare hidden void @FcStrBufInit(%struct._FcStrBuf*, i8*, i32) local_unnamed_addr #3

declare hidden %struct._FcPatternElt* @FcPatternObjectFindElt(%struct._FcPattern*, i32) local_unnamed_addr #3

declare hidden i8* @FcStrBufDoneStatic(%struct._FcStrBuf*) local_unnamed_addr #3

declare hidden void @FcStrBufDestroy(%struct._FcStrBuf*) local_unnamed_addr #3

declare hidden i32 @FcStrBufString(%struct._FcStrBuf*, i8*) local_unnamed_addr #3

declare hidden i8* @FcStrBufDone(%struct._FcStrBuf*) local_unnamed_addr #3

declare hidden %struct._FcObjectType* @FcObjectLookupOtherTypeById(i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() local_unnamed_addr #9

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noalias i8* @strdup(i8* nocapture readonly) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare i32 @__isoc99_sscanf(i8* nocapture readonly, i8* nocapture readonly, ...) local_unnamed_addr #5

declare hidden %struct._FcMatrix* @IA__FcMatrixCopy(%struct._FcMatrix*) local_unnamed_addr #3

declare hidden %struct._FcCharSet* @FcNameParseCharSet(i8*) local_unnamed_addr #3

declare hidden %struct._FcLangSet* @FcNameParseLangSet(i8*) local_unnamed_addr #3

declare hidden %struct._FcRange* @IA__FcRangeCreateDouble(double, double) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #5

declare hidden i32 @FcStrBufChar(%struct._FcStrBuf*, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #10

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }
attributes #13 = { cold }
attributes #14 = { nounwind readnone }
attributes #15 = { cold nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
