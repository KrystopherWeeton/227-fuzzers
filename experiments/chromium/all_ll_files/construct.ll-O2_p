; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/val/construct.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/val/construct.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.spvtools::val::Construct" = type { i32, %"class.std::__1::vector", %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.spvtools::val::Construct"**, %"class.spvtools::val::Construct"**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::val::Construct"** }
%"class.spvtools::val::BasicBlock" = type { i32, %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"*, %"class.std::__1::vector.1", %"class.std::__1::vector.1", %"class.std::__1::bitset", i8, %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"**, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.spvtools::val::BasicBlock"** }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.spvtools::val::Instruction" = type { %"class.std::__1::vector.8", %"class.std::__1::vector.15", %struct.spv_parsed_instruction_t, i64, %"class.spvtools::val::Function"*, %"class.spvtools::val::BasicBlock"*, %"class.std::__1::vector.22" }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { i32*, i32*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i32* }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %struct.spv_parsed_operand_t*, %struct.spv_parsed_operand_t*, %"class.std::__1::__compressed_pair.17" }
%struct.spv_parsed_operand_t = type { i16, i16, i32, i32, i32 }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %struct.spv_parsed_operand_t* }
%struct.spv_parsed_instruction_t = type { i32*, i16, i16, i32, i32, i32, %struct.spv_parsed_operand_t*, i16 }
%"class.spvtools::val::Function" = type { i32, i32, i32, i32, i32, i8, [3 x i8], %"class.std::__1::unordered_map", %"class.std::__1::vector.1", %"class.std::__1::unordered_set", %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock", %"class.std::__1::unordered_map.68", %"class.std::__1::unordered_map.68", %"class.std::__1::unordered_map.68", %"class.std::__1::list", %"class.std::__1::vector.8", %"class.std::__1::vector.8", %"class.std::__1::unordered_map.100", %"class.std::__1::unordered_map.126", %"class.std::__1::unordered_map.154", %"class.std::__1::unordered_map.178", %"class.std::__1::list.202", %"class.std::__1::list.209", %"class.std::__1::set" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.44", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30", %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { i64 }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { float }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.47" }
%"class.std::__1::__hash_table.47" = type <{ %"class.std::__1::unique_ptr.48", %"class.std::__1::__compressed_pair.58", %"class.std::__1::__compressed_pair.63", %"class.std::__1::__compressed_pair.65", [4 x i8] }>
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50", %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.std::__1::__hash_node_base.51"** }
%"struct.std::__1::__hash_node_base.51" = type { %"struct.std::__1::__hash_node_base.51"* }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.std::__1::__bucket_list_deallocator.53" }
%"class.std::__1::__bucket_list_deallocator.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"struct.std::__1::__hash_node_base.51" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::unordered_map.68" = type { %"class.std::__1::__hash_table.69" }
%"class.std::__1::__hash_table.69" = type <{ %"class.std::__1::unique_ptr.70", %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.85", %"class.std::__1::__compressed_pair.90", [4 x i8] }>
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72", %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.std::__1::__hash_node_base.73"** }
%"struct.std::__1::__hash_node_base.73" = type { %"struct.std::__1::__hash_node_base.73"* }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.std::__1::__bucket_list_deallocator.75" }
%"class.std::__1::__bucket_list_deallocator.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"struct.std::__1::__hash_node_base.73" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.96" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::unordered_map.100" = type { %"class.std::__1::__hash_table.101" }
%"class.std::__1::__hash_table.101" = type <{ %"class.std::__1::unique_ptr.102", %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.117", %"class.std::__1::__compressed_pair.120", [4 x i8] }>
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104", %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.105"** }
%"struct.std::__1::__hash_node_base.105" = type { %"struct.std::__1::__hash_node_base.105"* }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.std::__1::__bucket_list_deallocator.107" }
%"class.std::__1::__bucket_list_deallocator.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.std::__1::__hash_node_base.105" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::unordered_map.126" = type { %"class.std::__1::__hash_table.127" }
%"class.std::__1::__hash_table.127" = type <{ %"class.std::__1::unique_ptr.128", %"class.std::__1::__compressed_pair.138", %"class.std::__1::__compressed_pair.143", %"class.std::__1::__compressed_pair.148", [4 x i8] }>
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130", %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"struct.std::__1::__hash_node_base.131"** }
%"struct.std::__1::__hash_node_base.131" = type { %"struct.std::__1::__hash_node_base.131"* }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.std::__1::__bucket_list_deallocator.133" }
%"class.std::__1::__bucket_list_deallocator.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"struct.std::__1::__hash_node_base.131" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::unordered_map.154" = type { %"class.std::__1::__hash_table.155" }
%"class.std::__1::__hash_table.155" = type <{ %"class.std::__1::unique_ptr.156", %"class.std::__1::__compressed_pair.166", %"class.std::__1::__compressed_pair.171", %"class.std::__1::__compressed_pair.174", [4 x i8] }>
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158", %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"struct.std::__1::__hash_node_base.159"** }
%"struct.std::__1::__hash_node_base.159" = type { %"struct.std::__1::__hash_node_base.159"* }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.std::__1::__bucket_list_deallocator.161" }
%"class.std::__1::__bucket_list_deallocator.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"struct.std::__1::__hash_node_base.159" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::unordered_map.178" = type { %"class.std::__1::__hash_table.179" }
%"class.std::__1::__hash_table.179" = type <{ %"class.std::__1::unique_ptr.180", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", %"class.std::__1::__compressed_pair.198", [4 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182", %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.std::__1::__hash_node_base.183"** }
%"struct.std::__1::__hash_node_base.183" = type { %"struct.std::__1::__hash_node_base.183"* }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.std::__1::__bucket_list_deallocator.185" }
%"class.std::__1::__bucket_list_deallocator.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"struct.std::__1::__hash_node_base.183" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::list.202" = type { %"class.std::__1::__list_imp.203" }
%"class.std::__1::__list_imp.203" = type { %"struct.std::__1::__list_node_base.204", %"class.std::__1::__compressed_pair.205" }
%"struct.std::__1::__list_node_base.204" = type { %"struct.std::__1::__list_node_base.204"*, %"struct.std::__1::__list_node_base.204"* }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::list.209" = type { %"class.std::__1::__list_imp.210" }
%"class.std::__1::__list_imp.210" = type { %"struct.std::__1::__list_node_base.211", %"class.std::__1::__compressed_pair.212" }
%"struct.std::__1::__list_node_base.211" = type { %"struct.std::__1::__list_node_base.211"*, %"struct.std::__1::__list_node_base.211"* }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.216", %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.24" }
%"struct.std::__1::pair" = type <{ %"class.spvtools::val::Instruction"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::pair"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::set.223" = type { %"class.std::__1::__tree.224" }
%"class.std::__1::__tree.224" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.225", %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::unordered_set.231" = type { %"class.std::__1::__hash_table.232" }
%"class.std::__1::__hash_table.232" = type <{ %"class.std::__1::unique_ptr.233", %"class.std::__1::__compressed_pair.243", %"class.std::__1::__compressed_pair.248", %"class.std::__1::__compressed_pair.250", [4 x i8] }>
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235", %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"struct.std::__1::__hash_node_base.236"** }
%"struct.std::__1::__hash_node_base.236" = type { %"struct.std::__1::__hash_node_base.236"* }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.std::__1::__bucket_list_deallocator.238" }
%"class.std::__1::__bucket_list_deallocator.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.std::__1::__hash_node_base.236" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.spvtools::val::BasicBlock"* }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.spvtools::val::ValidationState_t" = type { %struct.spv_context_t*, %struct.spv_validator_options_t*, i32*, i64, i32, i32, i64, i64, %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_map.258", %"class.std::__1::unordered_map.282", i32, %"class.std::__1::vector.306", %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.317", %"class.std::__1::vector.318", %"class.std::__1::unordered_map.325", %"class.std::__1::vector.8", %"class.std::__1::unordered_map.349", %"class.std::__1::set", %"class.std::__1::unordered_set", i32, [4 x i8], %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_map.373", %"class.std::__1::unordered_map.397", %"class.std::__1::map", %"class.std::__1::set.428", %"class.spvtools::AssemblyGrammar", i32, i32, i32, i8, %"struct.spvtools::val::ValidationState_t::Feature", [4 x i8], %"class.std::__1::unordered_map.438", %"class.std::__1::unordered_map.462", %"class.std::__1::unordered_map.486", %"class.std::__1::unordered_map.510", %"class.std::__1::vector.8", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unique_ptr.534", %"class.std::__1::function.566", i32, i32 }
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%struct.spv_position_t = type { i64, i64, i64 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%struct.spv_validator_options_t = type { %struct.validator_universal_limits_t, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.validator_universal_limits_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::unordered_map.258" = type { %"class.std::__1::__hash_table.259" }
%"class.std::__1::__hash_table.259" = type <{ %"class.std::__1::unique_ptr.260", %"class.std::__1::__compressed_pair.270", %"class.std::__1::__compressed_pair.275", %"class.std::__1::__compressed_pair.278", [4 x i8] }>
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262", %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.263"** }
%"struct.std::__1::__hash_node_base.263" = type { %"struct.std::__1::__hash_node_base.263"* }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.std::__1::__bucket_list_deallocator.265" }
%"class.std::__1::__bucket_list_deallocator.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.std::__1::__hash_node_base.263" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::unordered_map.282" = type { %"class.std::__1::__hash_table.283" }
%"class.std::__1::__hash_table.283" = type <{ %"class.std::__1::unique_ptr.284", %"class.std::__1::__compressed_pair.294", %"class.std::__1::__compressed_pair.299", %"class.std::__1::__compressed_pair.302", [4 x i8] }>
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286", %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"struct.std::__1::__hash_node_base.287"** }
%"struct.std::__1::__hash_node_base.287" = type { %"struct.std::__1::__hash_node_base.287"* }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.std::__1::__bucket_list_deallocator.289" }
%"class.std::__1::__bucket_list_deallocator.289" = type { %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"struct.std::__1::__hash_node_base.287" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::vector.306" = type { %"class.std::__1::__vector_base.307" }
%"class.std::__1::__vector_base.307" = type { %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"*, %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.spvtools::val::Function"* }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.313" }
%"class.std::__1::unique_ptr.313" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.std::__1::set"* }
%"class.spvtools::EnumSet.317" = type { i64, %"class.std::__1::unique_ptr.313" }
%"class.std::__1::vector.318" = type { %"class.std::__1::__vector_base.319" }
%"class.std::__1::__vector_base.319" = type { %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"*, %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.spvtools::val::Instruction"* }
%"class.std::__1::unordered_map.325" = type { %"class.std::__1::__hash_table.326" }
%"class.std::__1::__hash_table.326" = type <{ %"class.std::__1::unique_ptr.327", %"class.std::__1::__compressed_pair.337", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.345", [4 x i8] }>
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329", %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"struct.std::__1::__hash_node_base.330"** }
%"struct.std::__1::__hash_node_base.330" = type { %"struct.std::__1::__hash_node_base.330"* }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.std::__1::__bucket_list_deallocator.332" }
%"class.std::__1::__bucket_list_deallocator.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"struct.std::__1::__hash_node_base.330" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::unordered_map.349" = type { %"class.std::__1::__hash_table.350" }
%"class.std::__1::__hash_table.350" = type <{ %"class.std::__1::unique_ptr.351", %"class.std::__1::__compressed_pair.361", %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.369", [4 x i8] }>
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353", %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"struct.std::__1::__hash_node_base.354"** }
%"struct.std::__1::__hash_node_base.354" = type { %"struct.std::__1::__hash_node_base.354"* }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"class.std::__1::__bucket_list_deallocator.356" }
%"class.std::__1::__bucket_list_deallocator.356" = type { %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"struct.std::__1::__hash_node_base.354" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.393", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::unordered_map.397" = type { %"class.std::__1::__hash_table.398" }
%"class.std::__1::__hash_table.398" = type <{ %"class.std::__1::unique_ptr.399", %"class.std::__1::__compressed_pair.409", %"class.std::__1::__compressed_pair.414", %"class.std::__1::__compressed_pair.417", [4 x i8] }>
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401", %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"struct.std::__1::__hash_node_base.402"** }
%"struct.std::__1::__hash_node_base.402" = type { %"struct.std::__1::__hash_node_base.402"* }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"class.std::__1::__bucket_list_deallocator.404" }
%"class.std::__1::__bucket_list_deallocator.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"struct.std::__1::__hash_node_base.402" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.421" }
%"class.std::__1::__tree.421" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.422", %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::set.428" = type { %"class.std::__1::__tree.429" }
%"class.std::__1::__tree.429" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.430", %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"struct.spvtools::val::ValidationState_t::Feature" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unordered_map.438" = type { %"class.std::__1::__hash_table.439" }
%"class.std::__1::__hash_table.439" = type <{ %"class.std::__1::unique_ptr.440", %"class.std::__1::__compressed_pair.450", %"class.std::__1::__compressed_pair.455", %"class.std::__1::__compressed_pair.458", [4 x i8] }>
%"class.std::__1::unique_ptr.440" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442", %"struct.std::__1::__compressed_pair_elem.444" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"struct.std::__1::__hash_node_base.443"** }
%"struct.std::__1::__hash_node_base.443" = type { %"struct.std::__1::__hash_node_base.443"* }
%"struct.std::__1::__compressed_pair_elem.444" = type { %"class.std::__1::__bucket_list_deallocator.445" }
%"class.std::__1::__bucket_list_deallocator.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"struct.std::__1::__hash_node_base.443" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::unordered_map.462" = type { %"class.std::__1::__hash_table.463" }
%"class.std::__1::__hash_table.463" = type <{ %"class.std::__1::unique_ptr.464", %"class.std::__1::__compressed_pair.474", %"class.std::__1::__compressed_pair.479", %"class.std::__1::__compressed_pair.482", [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466", %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"struct.std::__1::__hash_node_base.467"** }
%"struct.std::__1::__hash_node_base.467" = type { %"struct.std::__1::__hash_node_base.467"* }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"class.std::__1::__bucket_list_deallocator.469" }
%"class.std::__1::__bucket_list_deallocator.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"struct.std::__1::__hash_node_base.467" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::unordered_map.486" = type { %"class.std::__1::__hash_table.487" }
%"class.std::__1::__hash_table.487" = type <{ %"class.std::__1::unique_ptr.488", %"class.std::__1::__compressed_pair.498", %"class.std::__1::__compressed_pair.503", %"class.std::__1::__compressed_pair.506", [4 x i8] }>
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490", %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"struct.std::__1::__hash_node_base.491"** }
%"struct.std::__1::__hash_node_base.491" = type { %"struct.std::__1::__hash_node_base.491"* }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"class.std::__1::__bucket_list_deallocator.493" }
%"class.std::__1::__bucket_list_deallocator.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"struct.std::__1::__hash_node_base.491" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::unordered_map.510" = type { %"class.std::__1::__hash_table.511" }
%"class.std::__1::__hash_table.511" = type <{ %"class.std::__1::unique_ptr.512", %"class.std::__1::__compressed_pair.522", %"class.std::__1::__compressed_pair.527", %"class.std::__1::__compressed_pair.530", [4 x i8] }>
%"class.std::__1::unique_ptr.512" = type { %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.514", %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.514" = type { %"struct.std::__1::__hash_node_base.515"** }
%"struct.std::__1::__hash_node_base.515" = type { %"struct.std::__1::__hash_node_base.515"* }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"class.std::__1::__bucket_list_deallocator.517" }
%"class.std::__1::__bucket_list_deallocator.517" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"struct.std::__1::__hash_node_base.515" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::unique_ptr.534" = type { %"class.std::__1::__compressed_pair.535" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.536" }
%"struct.std::__1::__compressed_pair_elem.536" = type { %"class.spvtools::FriendlyNameMapper"* }
%"class.spvtools::FriendlyNameMapper" = type { %"class.std::__1::unordered_map.282", %"class.std::__1::unordered_set.537", %"class.spvtools::AssemblyGrammar" }
%"class.std::__1::unordered_set.537" = type { %"class.std::__1::__hash_table.538" }
%"class.std::__1::__hash_table.538" = type <{ %"class.std::__1::unique_ptr.539", %"class.std::__1::__compressed_pair.549", %"class.std::__1::__compressed_pair.554", %"class.std::__1::__compressed_pair.558", [4 x i8] }>
%"class.std::__1::unique_ptr.539" = type { %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.541", %"struct.std::__1::__compressed_pair_elem.543" }
%"struct.std::__1::__compressed_pair_elem.541" = type { %"struct.std::__1::__hash_node_base.542"** }
%"struct.std::__1::__hash_node_base.542" = type { %"struct.std::__1::__hash_node_base.542"* }
%"struct.std::__1::__compressed_pair_elem.543" = type { %"class.std::__1::__bucket_list_deallocator.544" }
%"class.std::__1::__bucket_list_deallocator.544" = type { %"class.std::__1::__compressed_pair.545" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"struct.std::__1::__hash_node_base.542" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::function.566" = type { %"class.std::__1::__function::__policy_func.570" }
%"class.std::__1::__function::__policy_func.570" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.571", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.571" = type { void (%"class.std::__1::basic_string"*, %"union.std::__1::__function::__policy_storage"*, i32)* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.572" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.573" }
%"struct.std::__1::__compressed_pair_elem.573" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }

$_ZNSt3__16vectorIPN8spvtools3val9ConstructENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_ = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3val10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3val10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3val10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZN8spvtools3val9ConstructC1ENS0_13ConstructTypeEPNS0_10BasicBlockES4_NSt3__16vectorIPS1_NS5_9allocatorIS7_EEEE = hidden unnamed_addr alias void (%"class.spvtools::val::Construct"*, i32, %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"*, %"class.std::__1::vector"*), void (%"class.spvtools::val::Construct"*, i32, %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"*, %"class.std::__1::vector"*)* @_ZN8spvtools3val9ConstructC2ENS0_13ConstructTypeEPNS0_10BasicBlockES4_NSt3__16vectorIPS1_NS5_9allocatorIS7_EEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3val9ConstructC2ENS0_13ConstructTypeEPNS0_10BasicBlockES4_NSt3__16vectorIPS1_NS5_9allocatorIS7_EEEE(%"class.spvtools::val::Construct"*, i32, %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"*, %"class.std::__1::vector"* nocapture readonly) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %0, i64 0, i32 0
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #11
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %10 = bitcast %"class.spvtools::val::Construct"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %4 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 3
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %44, label %17

17:                                               ; preds = %5
  %18 = icmp ugt i64 %15, 2305843009213693951
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = bitcast %"class.std::__1::vector"* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %20) #12
  unreachable

21:                                               ; preds = %17
  %22 = tail call i8* @_Znwm(i64 %14) #13
  %23 = bitcast i8* %22 to %"class.spvtools::val::Construct"**
  %24 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %0, i64 0, i32 1, i32 0, i32 1
  %25 = bitcast %"class.spvtools::val::Construct"*** %24 to i8**
  store i8* %22, i8** %25, align 8
  %26 = bitcast %"class.std::__1::vector"* %7 to i8**
  store i8* %22, i8** %26, align 8
  %27 = getelementptr inbounds %"class.spvtools::val::Construct"*, %"class.spvtools::val::Construct"** %23, i64 %15
  %28 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"class.spvtools::val::Construct"** %27, %"class.spvtools::val::Construct"*** %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %30 = load %"class.spvtools::val::Construct"**, %"class.spvtools::val::Construct"*** %29, align 8
  %31 = load i64, i64* %10, align 8
  %32 = bitcast %"class.spvtools::val::Construct"*** %24 to i64*
  %33 = ptrtoint i8* %22 to i64
  %34 = ptrtoint %"class.spvtools::val::Construct"** %30 to i64
  %35 = sub i64 %31, %34
  %36 = icmp sgt i64 %35, 0
  br i1 %36, label %37, label %42

37:                                               ; preds = %21
  %38 = lshr exact i64 %35, 3
  %39 = bitcast %"class.spvtools::val::Construct"** %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 %39, i64 %35, i1 false) #11
  %40 = getelementptr inbounds %"class.spvtools::val::Construct"*, %"class.spvtools::val::Construct"** %23, i64 %38
  %41 = ptrtoint %"class.spvtools::val::Construct"** %40 to i64
  br label %42

42:                                               ; preds = %37, %21
  %43 = phi i64 [ %41, %37 ], [ %33, %21 ]
  store i64 %43, i64* %32, align 8
  br label %44

44:                                               ; preds = %5, %42
  %45 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %0, i64 0, i32 2
  store %"class.spvtools::val::BasicBlock"* %2, %"class.spvtools::val::BasicBlock"** %45, align 8
  %46 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %0, i64 0, i32 3
  store %"class.spvtools::val::BasicBlock"* %3, %"class.spvtools::val::BasicBlock"** %46, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK8spvtools3val9Construct4typeEv(%"class.spvtools::val::Construct"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZNK8spvtools3val9Construct24corresponding_constructsEv(%"class.spvtools::val::Construct"* readnone) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %0, i64 0, i32 1
  ret %"class.std::__1::vector"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZN8spvtools3val9Construct24corresponding_constructsEv(%"class.spvtools::val::Construct"* readnone) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %0, i64 0, i32 1
  ret %"class.std::__1::vector"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3val21ValidateConstructSizeENS0_13ConstructTypeEm(i32, i64) local_unnamed_addr #2 {
  switch i32 %0, label %11 [
    i32 1, label %3
    i32 2, label %5
    i32 3, label %7
    i32 4, label %9
  ]

3:                                                ; preds = %2
  %4 = icmp eq i64 %1, 0
  br label %11

5:                                                ; preds = %2
  %6 = icmp eq i64 %1, 1
  br label %11

7:                                                ; preds = %2
  %8 = icmp eq i64 %1, 1
  br label %11

9:                                                ; preds = %2
  %10 = icmp ne i64 %1, 0
  br label %11

11:                                               ; preds = %2, %9, %7, %5, %3
  %12 = phi i1 [ %10, %9 ], [ %8, %7 ], [ %6, %5 ], [ %4, %3 ], [ false, %2 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3val9Construct28set_corresponding_constructsENSt3__16vectorIPS1_NS2_9allocatorIS4_EEEE(%"class.spvtools::val::Construct"*, %"class.std::__1::vector"* readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %0, i64 0, i32 1
  %4 = icmp eq %"class.std::__1::vector"* %3, %1
  br i1 %4, label %10, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.spvtools::val::Construct"**, %"class.spvtools::val::Construct"*** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %9 = load %"class.spvtools::val::Construct"**, %"class.spvtools::val::Construct"*** %8, align 8
  tail call void @_ZNSt3__16vectorIPN8spvtools3val9ConstructENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector"* %3, %"class.spvtools::val::Construct"** %7, %"class.spvtools::val::Construct"** %9) #11
  br label %10

10:                                               ; preds = %2, %5
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.spvtools::val::BasicBlock"* @_ZNK8spvtools3val9Construct11entry_blockEv(%"class.spvtools::val::Construct"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %0, i64 0, i32 2
  %3 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %2, align 8
  ret %"class.spvtools::val::BasicBlock"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.spvtools::val::BasicBlock"* @_ZN8spvtools3val9Construct11entry_blockEv(%"class.spvtools::val::Construct"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %0, i64 0, i32 2
  %3 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %2, align 8
  ret %"class.spvtools::val::BasicBlock"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.spvtools::val::BasicBlock"* @_ZNK8spvtools3val9Construct10exit_blockEv(%"class.spvtools::val::Construct"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %0, i64 0, i32 3
  %3 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %2, align 8
  ret %"class.spvtools::val::BasicBlock"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.spvtools::val::BasicBlock"* @_ZN8spvtools3val9Construct10exit_blockEv(%"class.spvtools::val::Construct"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %0, i64 0, i32 3
  %3 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %2, align 8
  ret %"class.spvtools::val::BasicBlock"* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8spvtools3val9Construct8set_exitEPNS0_10BasicBlockE(%"class.spvtools::val::Construct"* nocapture, %"class.spvtools::val::BasicBlock"*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %0, i64 0, i32 3
  store %"class.spvtools::val::BasicBlock"* %1, %"class.spvtools::val::BasicBlock"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8spvtools3val9Construct6blocksEPNS0_8FunctionE(%"class.std::__1::set.223"* noalias sret, %"class.spvtools::val::Construct"* nocapture readonly, %"class.spvtools::val::Function"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unordered_set.231", align 8
  %5 = alloca %"class.spvtools::val::BasicBlock"*, align 8
  %6 = alloca %"class.std::__1::vector.1", align 8
  %7 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %1, i64 0, i32 2
  %8 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %1, i64 0, i32 3
  %10 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %9, align 8
  %11 = tail call i32 @_ZN8spvtools3val8Function13GetBlockDepthEPNS0_10BasicBlockE(%"class.spvtools::val::Function"* %2, %"class.spvtools::val::BasicBlock"* %8) #11
  %12 = getelementptr inbounds %"class.std::__1::set.223", %"class.std::__1::set.223"* %0, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::set.223", %"class.std::__1::set.223"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::set.223", %"class.std::__1::set.223"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::set.223", %"class.std::__1::set.223"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node_base"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %15, %"class.std::__1::__tree_end_node"** %12, align 8
  %17 = bitcast %"class.std::__1::unordered_set.231"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.std::__1::unordered_set.231", %"class.std::__1::unordered_set.231"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::unordered_set.231", %"class.std::__1::unordered_set.231"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::unordered_set.231", %"class.std::__1::unordered_set.231"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::unordered_set.231", %"class.std::__1::unordered_set.231"* %4, i64 0, i32 0, i32 4, i64 0
  %22 = getelementptr inbounds %"class.std::__1::unordered_set.231", %"class.std::__1::unordered_set.231"* %4, i64 0, i32 0, i32 3
  %23 = bitcast %"class.std::__1::__compressed_pair.250"* %22 to i32*
  %24 = bitcast i8* %21 to i32*
  store i32 -1431655766, i32* %24, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %23, align 8
  %25 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %1, i64 0, i32 1, i32 0, i32 0
  %26 = load %"class.spvtools::val::Construct"**, %"class.spvtools::val::Construct"*** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %1, i64 0, i32 1, i32 0, i32 1
  %28 = load %"class.spvtools::val::Construct"**, %"class.spvtools::val::Construct"*** %27, align 8
  %29 = icmp eq %"class.spvtools::val::Construct"** %26, %28
  br i1 %29, label %35, label %30

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %1, i64 0, i32 0
  %32 = bitcast %"class.spvtools::val::BasicBlock"** %5 to i8*
  %33 = bitcast %"class.spvtools::val::BasicBlock"** %5 to i64*
  %34 = getelementptr inbounds %"class.std::__1::unordered_set.231", %"class.std::__1::unordered_set.231"* %4, i64 0, i32 0
  br label %57

35:                                               ; preds = %71, %3
  %36 = bitcast %"class.std::__1::vector.1"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #11
  %37 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %6, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %6, i64 0, i32 0, i32 1
  %39 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %40 = ptrtoint %"class.spvtools::val::BasicBlock"* %8 to i64
  %41 = bitcast %"class.spvtools::val::BasicBlock"*** %38 to i64*
  %42 = bitcast %"class.std::__1::vector.1"* %6 to i64*
  %43 = bitcast %"class.spvtools::val::BasicBlock"*** %39 to i64*
  %44 = call i8* @_Znwm(i64 8) #13
  %45 = getelementptr inbounds i8, i8* %44, i64 8
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast i8* %44 to i64*
  store i64 %40, i64* %47, align 8
  %48 = ptrtoint i8* %44 to i64
  store i64 %48, i64* %42, align 8
  store i64 %46, i64* %41, align 8
  store i64 %46, i64* %43, align 8
  %49 = bitcast i8* %45 to %"class.spvtools::val::BasicBlock"**
  %50 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %1, i64 0, i32 0
  %51 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node"**
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 0, i32 0
  %53 = bitcast %"class.std::__1::set.223"* %0 to i64*
  %54 = bitcast %"class.spvtools::val::BasicBlock"*** %38 to i64*
  %55 = bitcast %"class.std::__1::vector.1"* %6 to i64*
  %56 = bitcast %"class.spvtools::val::BasicBlock"*** %39 to i64*
  br label %74

57:                                               ; preds = %30, %71
  %58 = phi %"class.spvtools::val::Construct"** [ %26, %30 ], [ %72, %71 ]
  %59 = load i32, i32* %31, align 8
  %60 = icmp eq i32 %59, 2
  %61 = load %"class.spvtools::val::Construct"*, %"class.spvtools::val::Construct"** %58, align 8
  br i1 %60, label %62, label %66

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %61, i64 0, i32 2
  %64 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %63, align 8
  %65 = icmp eq %"class.spvtools::val::BasicBlock"* %64, %8
  br i1 %65, label %71, label %66

66:                                               ; preds = %57, %62
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  %67 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %61, i64 0, i32 2
  %68 = bitcast %"class.spvtools::val::BasicBlock"** %67 to i64*
  %69 = load i64, i64* %68, align 8
  store i64 %69, i64* %33, align 8
  %70 = call { %"struct.std::__1::__hash_node_base.236"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3val10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.232"* nonnull %34, %"class.spvtools::val::BasicBlock"** nonnull dereferenceable(8) %5, %"class.spvtools::val::BasicBlock"** nonnull dereferenceable(8) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  br label %71

71:                                               ; preds = %62, %66
  %72 = getelementptr inbounds %"class.spvtools::val::Construct"*, %"class.spvtools::val::Construct"** %58, i64 1
  %73 = icmp eq %"class.spvtools::val::Construct"** %72, %28
  br i1 %73, label %35, label %57

74:                                               ; preds = %35, %290
  %75 = phi %"class.spvtools::val::BasicBlock"** [ %49, %35 ], [ %292, %290 ]
  %76 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %75, i64 -1
  %77 = bitcast %"class.spvtools::val::BasicBlock"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  store %"class.spvtools::val::BasicBlock"** %76, %"class.spvtools::val::BasicBlock"*** %38, align 8
  %79 = inttoptr i64 %78 to %"class.spvtools::val::BasicBlock"*
  %80 = icmp eq %"class.spvtools::val::BasicBlock"* %10, %79
  br i1 %80, label %81, label %85

81:                                               ; preds = %74
  %82 = load i32, i32* %50, align 8
  %83 = or i32 %82, 2
  %84 = icmp eq i32 %83, 3
  br i1 %84, label %290, label %85

85:                                               ; preds = %81, %74
  %86 = lshr i64 %78, 32
  %87 = shl i64 %78, 3
  %88 = and i64 %87, 4294967288
  %89 = add nuw nsw i64 %88, 8
  %90 = xor i64 %89, %86
  %91 = mul i64 %90, -7070675565921424023
  %92 = lshr i64 %91, 47
  %93 = xor i64 %91, %86
  %94 = xor i64 %93, %92
  %95 = mul i64 %94, -7070675565921424023
  %96 = lshr i64 %95, 47
  %97 = xor i64 %96, %95
  %98 = mul i64 %97, -7070675565921424023
  %99 = load i64, i64* %19, align 8
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %148, label %101

101:                                              ; preds = %85
  %102 = call i64 @llvm.ctpop.i64(i64 %99) #11, !range !2
  %103 = icmp ugt i64 %102, 1
  br i1 %103, label %107, label %104

104:                                              ; preds = %101
  %105 = add i64 %99, -1
  %106 = and i64 %105, %98
  br label %111

107:                                              ; preds = %101
  %108 = icmp ult i64 %98, %99
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = urem i64 %98, %99
  br label %111

111:                                              ; preds = %109, %107, %104
  %112 = phi i64 [ %106, %104 ], [ %110, %109 ], [ %98, %107 ]
  %113 = load %"struct.std::__1::__hash_node_base.236"**, %"struct.std::__1::__hash_node_base.236"*** %18, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236"*, %"struct.std::__1::__hash_node_base.236"** %113, i64 %112
  %115 = load %"struct.std::__1::__hash_node_base.236"*, %"struct.std::__1::__hash_node_base.236"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.236"* %115, null
  br i1 %116, label %148, label %117

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236", %"struct.std::__1::__hash_node_base.236"* %115, i64 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.236"*, %"struct.std::__1::__hash_node_base.236"** %118, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node_base.236"* %119, null
  br i1 %120, label %148, label %121

121:                                              ; preds = %117
  %122 = add i64 %99, -1
  br label %123

123:                                              ; preds = %144, %121
  %124 = phi %"struct.std::__1::__hash_node_base.236"* [ %119, %121 ], [ %146, %144 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236", %"struct.std::__1::__hash_node_base.236"* %124, i64 1
  %126 = bitcast %"struct.std::__1::__hash_node_base.236"* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = icmp eq i64 %98, %127
  br i1 %128, label %139, label %129

129:                                              ; preds = %123
  br i1 %103, label %132, label %130

130:                                              ; preds = %129
  %131 = and i64 %127, %122
  br label %136

132:                                              ; preds = %129
  %133 = icmp ult i64 %127, %99
  br i1 %133, label %136, label %134

134:                                              ; preds = %132
  %135 = urem i64 %127, %99
  br label %136

136:                                              ; preds = %134, %132, %130
  %137 = phi i64 [ %131, %130 ], [ %135, %134 ], [ %127, %132 ]
  %138 = icmp eq i64 %137, %112
  br i1 %138, label %144, label %148

139:                                              ; preds = %123
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236", %"struct.std::__1::__hash_node_base.236"* %124, i64 2
  %141 = bitcast %"struct.std::__1::__hash_node_base.236"* %140 to %"class.spvtools::val::BasicBlock"**
  %142 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %141, align 8
  %143 = icmp eq %"class.spvtools::val::BasicBlock"* %142, %79
  br i1 %143, label %290, label %144

144:                                              ; preds = %139, %136
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236", %"struct.std::__1::__hash_node_base.236"* %124, i64 0, i32 0
  %146 = load %"struct.std::__1::__hash_node_base.236"*, %"struct.std::__1::__hash_node_base.236"** %145, align 8
  %147 = icmp eq %"struct.std::__1::__hash_node_base.236"* %146, null
  br i1 %147, label %148, label %123

148:                                              ; preds = %144, %136, %111, %85, %117
  %149 = call i32 @_ZN8spvtools3val8Function13GetBlockDepthEPNS0_10BasicBlockE(%"class.spvtools::val::Function"* %2, %"class.spvtools::val::BasicBlock"* %79) #11
  %150 = icmp slt i32 %149, %11
  br i1 %150, label %290, label %151

151:                                              ; preds = %148
  %152 = icmp ne %"class.spvtools::val::BasicBlock"* %8, %79
  %153 = icmp eq i32 %149, %11
  %154 = and i1 %152, %153
  br i1 %154, label %155, label %163

155:                                              ; preds = %151
  %156 = load i32, i32* %50, align 8
  %157 = icmp eq i32 %156, 1
  br i1 %157, label %158, label %163

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %79, i64 0, i32 5, i32 0, i32 0
  %160 = load i64, i64* %159, align 8
  %161 = and i64 %160, 32
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %290

163:                                              ; preds = %158, %151, %155
  %164 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %51, align 8
  %165 = icmp eq %"class.std::__1::__tree_node"* %164, null
  br i1 %165, label %197, label %166

166:                                              ; preds = %163
  %167 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %79, i64 0, i32 0
  %168 = load i32, i32* %167, align 8
  br label %169

169:                                              ; preds = %193, %166
  %170 = phi %"class.std::__1::__tree_node"* [ %196, %193 ], [ %164, %166 ]
  %171 = phi %"class.std::__1::__tree_node_base"** [ %195, %193 ], [ %13, %166 ]
  %172 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %170, i64 0, i32 1
  %173 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %172, align 8
  %174 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %173, i64 0, i32 0
  %175 = load i32, i32* %174, align 8
  %176 = icmp ult i32 %168, %175
  br i1 %176, label %177, label %183

177:                                              ; preds = %169
  %178 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %170, i64 0, i32 0, i32 0, i32 0
  %179 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %178, align 8
  %180 = icmp eq %"class.std::__1::__tree_node_base"* %179, null
  br i1 %180, label %181, label %193

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %170, i64 0, i32 0, i32 0
  br label %197

183:                                              ; preds = %169
  %184 = icmp ult i32 %175, %168
  br i1 %184, label %185, label %191

185:                                              ; preds = %183
  %186 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %170, i64 0, i32 0, i32 1
  %187 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %188 = icmp eq %"class.std::__1::__tree_node_base"* %187, null
  br i1 %188, label %189, label %193

189:                                              ; preds = %185
  %190 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %170, i64 0, i32 0, i32 0
  br label %197

191:                                              ; preds = %183
  %192 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %170, i64 0, i32 0, i32 0
  br label %197

193:                                              ; preds = %185, %177
  %194 = phi %"class.std::__1::__tree_node_base"* [ %179, %177 ], [ %187, %185 ]
  %195 = phi %"class.std::__1::__tree_node_base"** [ %178, %177 ], [ %186, %185 ]
  %196 = bitcast %"class.std::__1::__tree_node_base"* %194 to %"class.std::__1::__tree_node"*
  br label %169

197:                                              ; preds = %163, %191, %189, %181
  %198 = phi %"class.std::__1::__tree_end_node"* [ %182, %181 ], [ %190, %189 ], [ %192, %191 ], [ %15, %163 ]
  %199 = phi %"class.std::__1::__tree_node_base"** [ %178, %181 ], [ %186, %189 ], [ %171, %191 ], [ %52, %163 ]
  %200 = bitcast %"class.std::__1::__tree_node_base"** %199 to %"class.std::__1::__tree_node"**
  %201 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %200, align 8
  %202 = icmp eq %"class.std::__1::__tree_node"* %201, null
  br i1 %202, label %203, label %290

203:                                              ; preds = %197
  %204 = call i8* @_Znwm(i64 40) #13, !noalias !3
  %205 = getelementptr inbounds i8, i8* %204, i64 32
  %206 = bitcast i8* %205 to i64*
  store i64 %78, i64* %206, align 8, !noalias !3
  %207 = bitcast i8* %204 to %"class.std::__1::__tree_node_base"*
  %208 = getelementptr inbounds i8, i8* %204, i64 16
  %209 = bitcast i8* %208 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %204, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %198, %"class.std::__1::__tree_end_node"** %209, align 8
  %210 = bitcast %"class.std::__1::__tree_node_base"** %199 to i8**
  store i8* %204, i8** %210, align 8
  %211 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %12, align 8
  %212 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %211, i64 0, i32 0
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = icmp eq %"class.std::__1::__tree_node_base"* %213, null
  br i1 %214, label %218, label %215

215:                                              ; preds = %203
  %216 = ptrtoint %"class.std::__1::__tree_node_base"* %213 to i64
  store i64 %216, i64* %53, align 8
  %217 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %199, align 8
  br label %218

218:                                              ; preds = %215, %203
  %219 = phi %"class.std::__1::__tree_node_base"* [ %207, %203 ], [ %217, %215 ]
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %13, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"* %219) #11
  %221 = load i64, i64* %14, align 8
  %222 = add i64 %221, 1
  store i64 %222, i64* %14, align 8
  br i1 %80, label %290, label %223

223:                                              ; preds = %218
  %224 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %79, i64 0, i32 4, i32 0, i32 0
  %225 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %224, align 8
  %226 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %79, i64 0, i32 4, i32 0, i32 1
  %227 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %226, align 8
  %228 = icmp eq %"class.spvtools::val::BasicBlock"** %225, %227
  br i1 %228, label %290, label %229

229:                                              ; preds = %223, %287
  %230 = phi %"class.spvtools::val::BasicBlock"** [ %288, %287 ], [ %225, %223 ]
  %231 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %230, align 8
  %232 = ptrtoint %"class.spvtools::val::BasicBlock"* %231 to i64
  %233 = call zeroext i1 @_ZNK8spvtools3val10BasicBlock9dominatesERKS1_(%"class.spvtools::val::BasicBlock"* %8, %"class.spvtools::val::BasicBlock"* dereferenceable(104) %231) #11
  br i1 %233, label %234, label %287

234:                                              ; preds = %229
  %235 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %38, align 8
  %236 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %39, align 8
  %237 = icmp eq %"class.spvtools::val::BasicBlock"** %235, %236
  %238 = ptrtoint %"class.spvtools::val::BasicBlock"** %236 to i64
  br i1 %237, label %243, label %239

239:                                              ; preds = %234
  %240 = bitcast %"class.spvtools::val::BasicBlock"** %235 to i64*
  store i64 %232, i64* %240, align 8
  %241 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %235, i64 1
  %242 = ptrtoint %"class.spvtools::val::BasicBlock"** %241 to i64
  store i64 %242, i64* %54, align 8
  br label %287

243:                                              ; preds = %234
  %244 = ptrtoint %"class.spvtools::val::BasicBlock"** %235 to i64
  %245 = load i64, i64* %55, align 8
  %246 = sub i64 %244, %245
  %247 = ashr exact i64 %246, 3
  %248 = add nsw i64 %247, 1
  %249 = icmp ugt i64 %248, 2305843009213693951
  br i1 %249, label %250, label %252

250:                                              ; preds = %243
  %251 = bitcast %"class.std::__1::vector.1"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %251) #12
  unreachable

252:                                              ; preds = %243
  %253 = sub i64 %238, %245
  %254 = ashr exact i64 %253, 3
  %255 = icmp ult i64 %254, 1152921504606846975
  br i1 %255, label %256, label %264

256:                                              ; preds = %252
  %257 = ashr exact i64 %253, 2
  %258 = icmp ult i64 %257, %248
  %259 = select i1 %258, i64 %248, i64 %257
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %269, label %261

261:                                              ; preds = %256
  %262 = icmp ugt i64 %259, 2305843009213693951
  br i1 %262, label %263, label %264

263:                                              ; preds = %261
  call void @abort() #12
  unreachable

264:                                              ; preds = %261, %252
  %265 = phi i64 [ %259, %261 ], [ 2305843009213693951, %252 ]
  %266 = shl i64 %265, 3
  %267 = call i8* @_Znwm(i64 %266) #13
  %268 = bitcast i8* %267 to %"class.spvtools::val::BasicBlock"**
  br label %269

269:                                              ; preds = %264, %256
  %270 = phi i64 [ %265, %264 ], [ 0, %256 ]
  %271 = phi i8* [ %267, %264 ], [ null, %256 ]
  %272 = phi %"class.spvtools::val::BasicBlock"** [ %268, %264 ], [ null, %256 ]
  %273 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %272, i64 %247
  %274 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %272, i64 %270
  %275 = ptrtoint %"class.spvtools::val::BasicBlock"** %274 to i64
  %276 = bitcast %"class.spvtools::val::BasicBlock"** %273 to i64*
  store i64 %232, i64* %276, align 8
  %277 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %273, i64 1
  %278 = ptrtoint %"class.spvtools::val::BasicBlock"** %277 to i64
  %279 = ptrtoint %"class.spvtools::val::BasicBlock"** %272 to i64
  %280 = icmp sgt i64 %246, 0
  br i1 %280, label %281, label %283

281:                                              ; preds = %269
  %282 = inttoptr i64 %245 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %271, i8* align 8 %282, i64 %246, i1 false) #11
  br label %283

283:                                              ; preds = %281, %269
  store i64 %279, i64* %55, align 8
  store i64 %278, i64* %54, align 8
  store i64 %275, i64* %56, align 8
  %284 = icmp eq i64 %245, 0
  br i1 %284, label %287, label %285

285:                                              ; preds = %283
  %286 = inttoptr i64 %245 to i8*
  call void @_ZdlPv(i8* %286) #13
  br label %287

287:                                              ; preds = %285, %283, %239, %229
  %288 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %230, i64 1
  %289 = icmp eq %"class.spvtools::val::BasicBlock"** %288, %227
  br i1 %289, label %290, label %229

290:                                              ; preds = %139, %287, %223, %158, %197, %148, %218, %81
  %291 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %37, align 8
  %292 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %38, align 8
  %293 = icmp eq %"class.spvtools::val::BasicBlock"** %291, %292
  br i1 %293, label %294, label %74

294:                                              ; preds = %290
  %295 = icmp eq %"class.spvtools::val::BasicBlock"** %291, null
  br i1 %295, label %300, label %296

296:                                              ; preds = %294
  %297 = ptrtoint %"class.spvtools::val::BasicBlock"** %291 to i64
  %298 = bitcast %"class.spvtools::val::BasicBlock"*** %38 to i64*
  store i64 %297, i64* %298, align 8
  %299 = bitcast %"class.spvtools::val::BasicBlock"** %291 to i8*
  call void @_ZdlPv(i8* %299) #13
  br label %300

300:                                              ; preds = %294, %296
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #11
  %301 = load %"struct.std::__1::__hash_node_base.236"*, %"struct.std::__1::__hash_node_base.236"** %20, align 8
  %302 = icmp eq %"struct.std::__1::__hash_node_base.236"* %301, null
  br i1 %302, label %309, label %303

303:                                              ; preds = %300, %303
  %304 = phi %"struct.std::__1::__hash_node_base.236"* [ %306, %303 ], [ %301, %300 ]
  %305 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236", %"struct.std::__1::__hash_node_base.236"* %304, i64 0, i32 0
  %306 = load %"struct.std::__1::__hash_node_base.236"*, %"struct.std::__1::__hash_node_base.236"** %305, align 8
  %307 = bitcast %"struct.std::__1::__hash_node_base.236"* %304 to i8*
  call void @_ZdlPv(i8* %307) #13
  %308 = icmp eq %"struct.std::__1::__hash_node_base.236"* %306, null
  br i1 %308, label %309, label %303

309:                                              ; preds = %303, %300
  %310 = load %"struct.std::__1::__hash_node_base.236"**, %"struct.std::__1::__hash_node_base.236"*** %18, align 8
  store %"struct.std::__1::__hash_node_base.236"** null, %"struct.std::__1::__hash_node_base.236"*** %18, align 8
  %311 = icmp eq %"struct.std::__1::__hash_node_base.236"** %310, null
  br i1 %311, label %314, label %312

312:                                              ; preds = %309
  %313 = bitcast %"struct.std::__1::__hash_node_base.236"** %310 to i8*
  call void @_ZdlPv(i8* %313) #13
  br label %314

314:                                              ; preds = %309, %312
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare i32 @_ZN8spvtools3val8Function13GetBlockDepthEPNS0_10BasicBlockE(%"class.spvtools::val::Function"*, %"class.spvtools::val::BasicBlock"*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare zeroext i1 @_ZNK8spvtools3val10BasicBlock9dominatesERKS1_(%"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"* dereferenceable(104)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3val9Construct16IsStructuredExitERNS0_17ValidationState_tEPNS0_10BasicBlockE(%"class.spvtools::val::Construct"* nocapture readonly, %"class.spvtools::val::ValidationState_t"* nocapture readonly dereferenceable(1224), %"class.spvtools::val::BasicBlock"* readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %90 [
    i32 3, label %6
    i32 2, label %52
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %0, i64 0, i32 2
  %8 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %8, i64 0, i32 8
  %10 = bitcast %"class.spvtools::val::Instruction"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::val::ValidationState_t", %"class.spvtools::val::ValidationState_t"* %1, i64 0, i32 16, i32 0, i32 0
  %13 = load %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"** %12, align 8
  %14 = ptrtoint %"class.spvtools::val::Instruction"* %13 to i64
  %15 = sub i64 %11, %14
  %16 = sdiv exact i64 %15, 136
  %17 = add nsw i64 %16, -1
  %18 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %13, i64 %17, i32 1
  %19 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %13, i64 %17, i32 1, i32 0, i32 1
  %20 = bitcast %struct.spv_parsed_operand_t** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.15"* %18 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %6
  %27 = bitcast %"class.std::__1::vector.15"* %18 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %27) #12
  unreachable

28:                                               ; preds = %6
  %29 = ashr exact i64 %24, 4
  %30 = inttoptr i64 %23 to %struct.spv_parsed_operand_t*
  %31 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %13, i64 %17, i32 0, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = icmp ugt i64 %29, 1
  br i1 %33, label %36, label %34

34:                                               ; preds = %28
  %35 = bitcast %"class.std::__1::vector.15"* %18 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %35) #12
  unreachable

36:                                               ; preds = %28
  %37 = getelementptr inbounds %struct.spv_parsed_operand_t, %struct.spv_parsed_operand_t* %30, i64 0, i32 0
  %38 = load i16, i16* %37, align 4
  %39 = zext i16 %38 to i64
  %40 = getelementptr inbounds i32, i32* %32, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %struct.spv_parsed_operand_t, %struct.spv_parsed_operand_t* %30, i64 1, i32 0
  %43 = load i16, i16* %42, align 4
  %44 = zext i16 %43 to i64
  %45 = getelementptr inbounds i32, i32* %32, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %2, i64 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, %41
  %50 = icmp eq i32 %48, %46
  %51 = or i1 %49, %50
  br i1 %51, label %279, label %278

52:                                               ; preds = %3
  %53 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %0, i64 0, i32 1, i32 0, i32 0
  %54 = load %"class.spvtools::val::Construct"**, %"class.spvtools::val::Construct"*** %53, align 8
  %55 = load %"class.spvtools::val::Construct"*, %"class.spvtools::val::Construct"** %54, align 8
  %56 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %55, i64 0, i32 2
  %57 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %57, i64 0, i32 8
  %59 = bitcast %"class.spvtools::val::Instruction"** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::val::ValidationState_t", %"class.spvtools::val::ValidationState_t"* %1, i64 0, i32 16, i32 0, i32 0
  %62 = load %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"** %61, align 8
  %63 = ptrtoint %"class.spvtools::val::Instruction"* %62 to i64
  %64 = sub i64 %60, %63
  %65 = sdiv exact i64 %64, 136
  %66 = add nsw i64 %65, -1
  %67 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %62, i64 %66, i32 1
  %68 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %62, i64 %66, i32 1, i32 0, i32 1
  %69 = bitcast %struct.spv_parsed_operand_t** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.std::__1::vector.15"* %67 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %70, %72
  br i1 %73, label %74, label %76

74:                                               ; preds = %52
  %75 = bitcast %"class.std::__1::vector.15"* %67 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %75) #12
  unreachable

76:                                               ; preds = %52
  %77 = icmp eq %"class.spvtools::val::BasicBlock"* %57, %2
  br i1 %77, label %279, label %78

78:                                               ; preds = %76
  %79 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %62, i64 %66, i32 0, i32 0, i32 0
  %80 = load i32*, i32** %79, align 8
  %81 = inttoptr i64 %72 to %struct.spv_parsed_operand_t*
  %82 = getelementptr inbounds %struct.spv_parsed_operand_t, %struct.spv_parsed_operand_t* %81, i64 0, i32 0
  %83 = load i16, i16* %82, align 4
  %84 = zext i16 %83 to i64
  %85 = getelementptr inbounds i32, i32* %80, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %2, i64 0, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %88, %86
  br i1 %89, label %279, label %278

90:                                               ; preds = %3
  %91 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %0, i64 0, i32 3
  %92 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %91, align 8
  %93 = icmp eq %"class.spvtools::val::BasicBlock"* %92, %2
  br i1 %93, label %279, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %0, i64 0, i32 2
  %96 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %95, align 8
  %97 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %96, i64 0, i32 7
  %98 = load %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"** %97, align 8
  %99 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %98, i64 0, i32 6, i32 0, i32 0
  %100 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %99, align 8
  %101 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %98, i64 0, i32 6, i32 0, i32 1
  %102 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %101, align 8
  %103 = icmp eq %"struct.std::__1::pair"* %100, %102
  br i1 %103, label %122, label %104

104:                                              ; preds = %94, %116
  %105 = phi %"struct.std::__1::pair"* [ %117, %116 ], [ %100, %94 ]
  %106 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %105, i64 0, i32 0
  %107 = load %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"** %106, align 8
  %108 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %107, i64 0, i32 2, i32 2
  %109 = load i16, i16* %108, align 2
  %110 = and i16 %109, -2
  %111 = icmp eq i16 %110, 246
  br i1 %111, label %112, label %116

112:                                              ; preds = %104
  %113 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %105, i64 0, i32 1
  %114 = load i32, i32* %113, align 8
  %115 = icmp eq i32 %114, 1
  br i1 %115, label %119, label %116

116:                                              ; preds = %112, %104
  %117 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %105, i64 1
  %118 = icmp eq %"struct.std::__1::pair"* %117, %102
  br i1 %118, label %122, label %104

119:                                              ; preds = %112
  %120 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %107, i64 0, i32 5
  %121 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %120, align 8
  br label %124

122:                                              ; preds = %116, %94
  %123 = tail call %"class.spvtools::val::BasicBlock"* @_ZNK8spvtools3val10BasicBlock19immediate_dominatorEv(%"class.spvtools::val::BasicBlock"* %96) #11
  br label %124

124:                                              ; preds = %119, %122
  %125 = phi %"class.spvtools::val::BasicBlock"* [ %123, %122 ], [ %121, %119 ]
  %126 = icmp eq %"class.spvtools::val::BasicBlock"* %125, null
  br i1 %126, label %278, label %127

127:                                              ; preds = %124
  %128 = getelementptr inbounds %"class.spvtools::val::ValidationState_t", %"class.spvtools::val::ValidationState_t"* %1, i64 0, i32 16, i32 0, i32 0
  %129 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %96, i64 0, i32 8
  %130 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %2, i64 0, i32 0
  br label %131

131:                                              ; preds = %127, %274
  %132 = phi i8 [ 0, %127 ], [ %276, %274 ]
  %133 = phi %"class.spvtools::val::BasicBlock"* [ %125, %127 ], [ %275, %274 ]
  %134 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %133, i64 0, i32 8
  %135 = load %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"** %134, align 8
  %136 = load %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"** %128, align 8
  %137 = ptrtoint %"class.spvtools::val::Instruction"* %135 to i64
  %138 = ptrtoint %"class.spvtools::val::Instruction"* %136 to i64
  %139 = sub i64 %137, %138
  %140 = sdiv exact i64 %139, 136
  %141 = add nsw i64 %140, -1
  %142 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %136, i64 %141, i32 2, i32 2
  %143 = load i16, i16* %142, align 2
  %144 = icmp eq i16 %143, 246
  br i1 %144, label %156, label %145

145:                                              ; preds = %131
  %146 = load %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"** %129, align 8
  %147 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %146, i64 0, i32 2, i32 2
  %148 = load i16, i16* %147, align 2
  %149 = icmp ne i16 %148, 251
  %150 = icmp eq i16 %143, 247
  %151 = and i1 %150, %149
  br i1 %151, label %152, label %245

152:                                              ; preds = %145
  %153 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %135, i64 0, i32 2, i32 2
  %154 = load i16, i16* %153, align 2
  %155 = icmp eq i16 %154, 251
  br i1 %155, label %156, label %245

156:                                              ; preds = %152, %131
  %157 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %136, i64 %141, i32 1
  %158 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %136, i64 %141, i32 1, i32 0, i32 1
  %159 = bitcast %struct.spv_parsed_operand_t** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.std::__1::vector.15"* %157 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = icmp eq i64 %160, %162
  br i1 %163, label %164, label %166

164:                                              ; preds = %156
  %165 = bitcast %"class.std::__1::vector.15"* %157 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %165) #12
  unreachable

166:                                              ; preds = %156
  %167 = inttoptr i64 %162 to %struct.spv_parsed_operand_t*
  %168 = getelementptr inbounds %struct.spv_parsed_operand_t, %struct.spv_parsed_operand_t* %167, i64 0, i32 0
  %169 = load i16, i16* %168, align 4
  %170 = zext i16 %169 to i64
  %171 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %136, i64 %141, i32 0, i32 0, i32 0
  %172 = load i32*, i32** %171, align 8
  %173 = getelementptr inbounds i32, i32* %172, i64 %170
  %174 = load i32, i32* %173, align 4
  %175 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %136, i64 %141, i32 4
  %176 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %175, align 8
  %177 = tail call { %"class.spvtools::val::BasicBlock"*, i8 } @_ZNK8spvtools3val8Function8GetBlockEj(%"class.spvtools::val::Function"* %176, i32 %174) #11
  %178 = extractvalue { %"class.spvtools::val::BasicBlock"*, i8 } %177, 0
  %179 = tail call zeroext i1 @_ZNK8spvtools3val10BasicBlock9dominatesERKS1_(%"class.spvtools::val::BasicBlock"* %178, %"class.spvtools::val::BasicBlock"* dereferenceable(104) %96) #11
  br i1 %179, label %180, label %208

180:                                              ; preds = %166
  %181 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %133, i64 0, i32 7
  %182 = load %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"** %181, align 8
  %183 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %182, i64 0, i32 6, i32 0, i32 0
  %184 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %183, align 8
  %185 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %182, i64 0, i32 6, i32 0, i32 1
  %186 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %185, align 8
  %187 = icmp eq %"struct.std::__1::pair"* %184, %186
  br i1 %187, label %206, label %188

188:                                              ; preds = %180, %200
  %189 = phi %"struct.std::__1::pair"* [ %201, %200 ], [ %184, %180 ]
  %190 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %189, i64 0, i32 0
  %191 = load %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"** %190, align 8
  %192 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %191, i64 0, i32 2, i32 2
  %193 = load i16, i16* %192, align 2
  %194 = and i16 %193, -2
  %195 = icmp eq i16 %194, 246
  br i1 %195, label %196, label %200

196:                                              ; preds = %188
  %197 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %189, i64 0, i32 1
  %198 = load i32, i32* %197, align 8
  %199 = icmp eq i32 %198, 1
  br i1 %199, label %203, label %200

200:                                              ; preds = %196, %188
  %201 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %189, i64 1
  %202 = icmp eq %"struct.std::__1::pair"* %201, %186
  br i1 %202, label %206, label %188

203:                                              ; preds = %196
  %204 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %191, i64 0, i32 5
  %205 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %204, align 8
  br label %274

206:                                              ; preds = %200, %180
  %207 = tail call %"class.spvtools::val::BasicBlock"* @_ZNK8spvtools3val10BasicBlock19immediate_dominatorEv(%"class.spvtools::val::BasicBlock"* nonnull %133) #11
  br label %274

208:                                              ; preds = %166
  %209 = and i8 %132, 1
  %210 = icmp eq i8 %209, 0
  br i1 %210, label %214, label %211

211:                                              ; preds = %208
  %212 = load i16, i16* %142, align 2
  %213 = icmp eq i16 %212, 246
  br i1 %213, label %214, label %240

214:                                              ; preds = %208, %211
  %215 = load i32, i32* %130, align 8
  %216 = icmp eq i32 %215, %174
  br i1 %216, label %279, label %217

217:                                              ; preds = %214
  %218 = load i16, i16* %142, align 2
  %219 = icmp eq i16 %218, 246
  br i1 %219, label %220, label %240

220:                                              ; preds = %217
  %221 = bitcast %struct.spv_parsed_operand_t** %158 to i64*
  %222 = bitcast %"class.std::__1::vector.15"* %157 to i64*
  %223 = load i64, i64* %221, align 8
  %224 = load i64, i64* %222, align 8
  %225 = sub i64 %223, %224
  %226 = ashr exact i64 %225, 4
  %227 = icmp ugt i64 %226, 1
  br i1 %227, label %230, label %228

228:                                              ; preds = %220
  %229 = bitcast %"class.std::__1::vector.15"* %157 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %229) #12
  unreachable

230:                                              ; preds = %220
  %231 = inttoptr i64 %224 to %struct.spv_parsed_operand_t*
  %232 = getelementptr inbounds %struct.spv_parsed_operand_t, %struct.spv_parsed_operand_t* %231, i64 1, i32 0
  %233 = load i16, i16* %232, align 4
  %234 = zext i16 %233 to i64
  %235 = load i32*, i32** %171, align 8
  %236 = getelementptr inbounds i32, i32* %235, i64 %234
  %237 = load i32, i32* %236, align 4
  %238 = load i32, i32* %130, align 8
  %239 = icmp eq i32 %238, %237
  ret i1 %239

240:                                              ; preds = %211, %217
  %241 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %135, i64 0, i32 2, i32 2
  %242 = load i16, i16* %241, align 2
  %243 = icmp eq i16 %242, 251
  %244 = select i1 %243, i8 1, i8 %132
  br label %245

245:                                              ; preds = %145, %240, %152
  %246 = phi i8 [ %132, %152 ], [ %132, %145 ], [ %244, %240 ]
  %247 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %133, i64 0, i32 7
  %248 = load %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"** %247, align 8
  %249 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %248, i64 0, i32 6, i32 0, i32 0
  %250 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %249, align 8
  %251 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %248, i64 0, i32 6, i32 0, i32 1
  %252 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %251, align 8
  %253 = icmp eq %"struct.std::__1::pair"* %250, %252
  br i1 %253, label %272, label %254

254:                                              ; preds = %245, %266
  %255 = phi %"struct.std::__1::pair"* [ %267, %266 ], [ %250, %245 ]
  %256 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %255, i64 0, i32 0
  %257 = load %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"** %256, align 8
  %258 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %257, i64 0, i32 2, i32 2
  %259 = load i16, i16* %258, align 2
  %260 = and i16 %259, -2
  %261 = icmp eq i16 %260, 246
  br i1 %261, label %262, label %266

262:                                              ; preds = %254
  %263 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %255, i64 0, i32 1
  %264 = load i32, i32* %263, align 8
  %265 = icmp eq i32 %264, 1
  br i1 %265, label %269, label %266

266:                                              ; preds = %262, %254
  %267 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %255, i64 1
  %268 = icmp eq %"struct.std::__1::pair"* %267, %252
  br i1 %268, label %272, label %254

269:                                              ; preds = %262
  %270 = getelementptr inbounds %"class.spvtools::val::Instruction", %"class.spvtools::val::Instruction"* %257, i64 0, i32 5
  %271 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %270, align 8
  br label %274

272:                                              ; preds = %266, %245
  %273 = tail call %"class.spvtools::val::BasicBlock"* @_ZNK8spvtools3val10BasicBlock19immediate_dominatorEv(%"class.spvtools::val::BasicBlock"* nonnull %133) #11
  br label %274

274:                                              ; preds = %206, %203, %272, %269
  %275 = phi %"class.spvtools::val::BasicBlock"* [ %273, %272 ], [ %271, %269 ], [ %205, %203 ], [ %207, %206 ]
  %276 = phi i8 [ %246, %272 ], [ %246, %269 ], [ %132, %203 ], [ %132, %206 ]
  %277 = icmp eq %"class.spvtools::val::BasicBlock"* %275, null
  br i1 %277, label %278, label %131

278:                                              ; preds = %274, %124, %36, %78
  br label %279

279:                                              ; preds = %214, %90, %78, %76, %36, %278
  %280 = phi i1 [ false, %278 ], [ true, %36 ], [ true, %76 ], [ true, %78 ], [ true, %90 ], [ true, %214 ]
  ret i1 %280
}

declare { %"class.spvtools::val::BasicBlock"*, i8 } @_ZNK8spvtools3val8Function8GetBlockEj(%"class.spvtools::val::Function"*, i32) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

declare %"class.spvtools::val::BasicBlock"* @_ZNK8spvtools3val10BasicBlock19immediate_dominatorEv(%"class.spvtools::val::BasicBlock"*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN8spvtools3val9ConstructENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector"*, %"class.spvtools::val::Construct"**, %"class.spvtools::val::Construct"**) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.spvtools::val::Construct"** %2 to i64
  %5 = ptrtoint %"class.spvtools::val::Construct"** %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.spvtools::val::Construct"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.spvtools::val::Construct"**
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.spvtools::val::Construct"*** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.spvtools::val::Construct"*, %"class.spvtools::val::Construct"** %1, i64 %22
  %25 = select i1 %23, %"class.spvtools::val::Construct"** %24, %"class.spvtools::val::Construct"** %2
  %26 = ptrtoint %"class.spvtools::val::Construct"** %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"class.spvtools::val::Construct"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #11
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"class.spvtools::val::Construct"** %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #11
  %42 = inttoptr i64 %35 to %"class.spvtools::val::Construct"**
  %43 = getelementptr inbounds %"class.spvtools::val::Construct"*, %"class.spvtools::val::Construct"** %42, i64 %39
  %44 = ptrtoint %"class.spvtools::val::Construct"** %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.spvtools::val::Construct"*, %"class.spvtools::val::Construct"** %16, i64 %28
  store %"class.spvtools::val::Construct"** %48, %"class.spvtools::val::Construct"*** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"class.spvtools::val::Construct"*** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #13
  %55 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #11
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #12
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #12
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #13
  %75 = bitcast i8* %74 to %"class.spvtools::val::Construct"**
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %"class.spvtools::val::Construct"*** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %"class.spvtools::val::Construct"*, %"class.spvtools::val::Construct"** %75, i64 %72
  store %"class.spvtools::val::Construct"** %79, %"class.spvtools::val::Construct"*** %8, align 8
  %80 = bitcast %"class.spvtools::val::Construct"*** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast %"class.spvtools::val::Construct"** %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %85, i64 %6, i1 false) #11
  %86 = getelementptr inbounds %"class.spvtools::val::Construct"*, %"class.spvtools::val::Construct"** %75, i64 %84
  %87 = ptrtoint %"class.spvtools::val::Construct"** %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.236"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3val10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.232"*, %"class.spvtools::val::BasicBlock"** dereferenceable(8), %"class.spvtools::val::BasicBlock"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %1, align 8
  %5 = ptrtoint %"class.spvtools::val::BasicBlock"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.232", %"class.std::__1::__hash_table.232"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !2
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.232", %"class.std::__1::__hash_table.232"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.236"**, %"struct.std::__1::__hash_node_base.236"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236"*, %"struct.std::__1::__hash_node_base.236"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.236"*, %"struct.std::__1::__hash_node_base.236"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.236"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.236"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236", %"struct.std::__1::__hash_node_base.236"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.236"*, %"struct.std::__1::__hash_node_base.236"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.236"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236", %"struct.std::__1::__hash_node_base.236"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.236"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236", %"struct.std::__1::__hash_node_base.236"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.236"* %62 to %"class.spvtools::val::BasicBlock"**
  %64 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %63, align 8
  %65 = icmp eq %"class.spvtools::val::BasicBlock"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #13, !noalias !6
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.spvtools::val::BasicBlock"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !6
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !6
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !6
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.236"**
  store %"struct.std::__1::__hash_node_base.236"* null, %"struct.std::__1::__hash_node_base.236"** %75, align 8, !noalias !6
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.232", %"class.std::__1::__hash_table.232"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.232", %"class.std::__1::__hash_table.232"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !2
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #11
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3val10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.232"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #11, !range !2
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table.232", %"class.std::__1::__hash_table.232"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.236"**, %"struct.std::__1::__hash_node_base.236"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236"*, %"struct.std::__1::__hash_node_base.236"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base.236"*, %"struct.std::__1::__hash_node_base.236"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.236"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.232", %"class.std::__1::__hash_table.232"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base.236"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.236"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base.236"* %118, %"struct.std::__1::__hash_node_base.236"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base.236"*, %"struct.std::__1::__hash_node_base.236"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.236"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236", %"struct.std::__1::__hash_node_base.236"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.236"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #11, !range !2
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base.236"**, %"struct.std::__1::__hash_node_base.236"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236"*, %"struct.std::__1::__hash_node_base.236"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base.236"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base.236"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.236"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.236"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base.236"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.236"*, i8 } undef, %"struct.std::__1::__hash_node_base.236"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base.236"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base.236"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN8spvtools3val10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.232"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.232", %"class.std::__1::__hash_table.232"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3val10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.232"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.232", %"class.std::__1::__hash_table.232"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.232", %"class.std::__1::__hash_table.232"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3val10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.232"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN8spvtools3val10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.232"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.232", %"class.std::__1::__hash_table.232"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.232", %"class.std::__1::__hash_table.232"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.236"**, %"struct.std::__1::__hash_node_base.236"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.232"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.236"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.236"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.238", %"class.std::__1::__bucket_list_deallocator.238"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.236"**, %"struct.std::__1::__hash_node_base.236"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236"*, %"struct.std::__1::__hash_node_base.236"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.236"* null, %"struct.std::__1::__hash_node_base.236"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !9

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.232", %"class.std::__1::__hash_table.232"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236", %"struct.std::__1::__hash_node_base.236"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.236"*, %"struct.std::__1::__hash_node_base.236"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.236"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.236"**, %"struct.std::__1::__hash_node_base.236"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236"*, %"struct.std::__1::__hash_node_base.236"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.236"* null, %"struct.std::__1::__hash_node_base.236"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.236"**, %"struct.std::__1::__hash_node_base.236"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236"*, %"struct.std::__1::__hash_node_base.236"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.236"* null, %"struct.std::__1::__hash_node_base.236"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.236"**, %"struct.std::__1::__hash_node_base.236"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236"*, %"struct.std::__1::__hash_node_base.236"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.236"* null, %"struct.std::__1::__hash_node_base.236"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.236"**, %"struct.std::__1::__hash_node_base.236"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236"*, %"struct.std::__1::__hash_node_base.236"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.236"* null, %"struct.std::__1::__hash_node_base.236"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236", %"struct.std::__1::__hash_node_base.236"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.236"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.236"**, %"struct.std::__1::__hash_node_base.236"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236"*, %"struct.std::__1::__hash_node_base.236"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.236"* %36, %"struct.std::__1::__hash_node_base.236"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236", %"struct.std::__1::__hash_node_base.236"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.236"*, %"struct.std::__1::__hash_node_base.236"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.236"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.236"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.236"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236", %"struct.std::__1::__hash_node_base.236"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.236"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.236"**, %"struct.std::__1::__hash_node_base.236"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236"*, %"struct.std::__1::__hash_node_base.236"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.236"*, %"struct.std::__1::__hash_node_base.236"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.236"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236", %"struct.std::__1::__hash_node_base.236"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.236"* %101 to %"class.spvtools::val::BasicBlock"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.236"* %82, %"struct.std::__1::__hash_node_base.236"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.236"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236", %"struct.std::__1::__hash_node_base.236"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.236"*, %"struct.std::__1::__hash_node_base.236"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.236"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236", %"struct.std::__1::__hash_node_base.236"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.236"* %110 to %"class.spvtools::val::BasicBlock"**
  %112 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %102, align 8
  %113 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %111, align 8
  %114 = icmp eq %"class.spvtools::val::BasicBlock"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.236"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.236"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.236"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.236"**, %"struct.std::__1::__hash_node_base.236"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236"*, %"struct.std::__1::__hash_node_base.236"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.236"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.236"**, %"struct.std::__1::__hash_node_base.236"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236"*, %"struct.std::__1::__hash_node_base.236"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.236"*, %"struct.std::__1::__hash_node_base.236"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236", %"struct.std::__1::__hash_node_base.236"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.236"* %80, %"struct.std::__1::__hash_node_base.236"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.236"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.236", %"struct.std::__1::__hash_node_base.236"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.236"*, %"struct.std::__1::__hash_node_base.236"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.236"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.232", %"class.std::__1::__hash_table.232"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.236"**, %"struct.std::__1::__hash_node_base.236"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.236"** null, %"struct.std::__1::__hash_node_base.236"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.236"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.236"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.238", %"class.std::__1::__bucket_list_deallocator.238"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !11
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !11
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !11
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i64 0, i64 65}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__16__treeIPN8spvtools3val10BasicBlockENS2_12less_than_idENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16__treeIPN8spvtools3val10BasicBlockENS2_12less_than_idENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__112__hash_tableIPN8spvtools3val10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISG_EEEEEEmOT_DpOT0_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__112__hash_tableIPN8spvtools3val10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISG_EEEEEEmOT_DpOT0_"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = !{i8 0, i8 2}
