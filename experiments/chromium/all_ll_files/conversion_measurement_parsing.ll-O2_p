; ModuleID = '../../third_party/blink/renderer/core/html/conversion_measurement_parsing.cc'
source_filename = "../../third_party/blink/renderer/core/html/conversion_measurement_parsing.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%union.anon.577 = type { i64 }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%union.anon.1563 = type { i64 }
%union.anon.268 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.686", i32, [4 x i8], %"class.std::__1::unique_ptr.824", %"class.std::__1::unique_ptr.824", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.830", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.836", %"class.std::__1::unique_ptr.842", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.854", %"class.std::__1::unique_ptr.860", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.178", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.689", %"class.std::__1::unique_ptr.695", %"class.std::__1::unique_ptr.701", %"class.std::__1::unique_ptr.707", %"class.std::__1::unique_ptr.713", %"class.std::__1::unique_ptr.719", %"class.std::__1::unique_ptr.730", %"class.std::__1::unique_ptr.737", %"class.std::__1::unique_ptr.737", %"class.std::__1::unique_ptr.744", %"class.std::__1::unique_ptr.751", %"class.std::__1::unique_ptr.758", %"class.std::__1::unique_ptr.758", %"class.std::__1::unique_ptr.765", %"class.std::__1::unique_ptr.772", %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.804", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.695" = type { %"class.std::__1::__compressed_pair.696" }
%"class.std::__1::__compressed_pair.696" = type { %"struct.std::__1::__compressed_pair_elem.697" }
%"struct.std::__1::__compressed_pair_elem.697" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.701" = type { %"class.std::__1::__compressed_pair.702" }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.707" = type { %"class.std::__1::__compressed_pair.708" }
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.709" }
%"struct.std::__1::__compressed_pair_elem.709" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.713" = type { %"class.std::__1::__compressed_pair.714" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.715" }
%"struct.std::__1::__compressed_pair_elem.715" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.719" = type { %"class.std::__1::__compressed_pair.720" }
%"class.std::__1::__compressed_pair.720" = type { %"struct.std::__1::__compressed_pair_elem.721" }
%"struct.std::__1::__compressed_pair_elem.721" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.722" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.722" = type { %"struct.std::__1::__atomic_base.723" }
%"struct.std::__1::__atomic_base.723" = type { %"struct.std::__1::__atomic_base.724" }
%"struct.std::__1::__atomic_base.724" = type { %"struct.std::__1::__cxx_atomic_impl.725" }
%"struct.std::__1::__cxx_atomic_impl.725" = type { %"struct.std::__1::__cxx_atomic_base_impl.726" }
%"struct.std::__1::__cxx_atomic_base_impl.726" = type { i64 }
%"class.std::__1::unique_ptr.730" = type { %"class.std::__1::__compressed_pair.731" }
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.732" }
%"struct.std::__1::__compressed_pair_elem.732" = type { %"class.blink::Worklist.733"* }
%"class.blink::Worklist.733" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.722" }
%"class.std::__1::unique_ptr.737" = type { %"class.std::__1::__compressed_pair.738" }
%"class.std::__1::__compressed_pair.738" = type { %"struct.std::__1::__compressed_pair_elem.739" }
%"struct.std::__1::__compressed_pair_elem.739" = type { %"class.blink::Worklist.740"* }
%"class.blink::Worklist.740" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.722" }
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.blink::Worklist.747"* }
%"class.blink::Worklist.747" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.722" }
%"class.std::__1::unique_ptr.751" = type { %"class.std::__1::__compressed_pair.752" }
%"class.std::__1::__compressed_pair.752" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"struct.std::__1::__compressed_pair_elem.753" = type { %"class.blink::Worklist.754"* }
%"class.blink::Worklist.754" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.722" }
%"class.std::__1::unique_ptr.758" = type { %"class.std::__1::__compressed_pair.759" }
%"class.std::__1::__compressed_pair.759" = type { %"struct.std::__1::__compressed_pair_elem.760" }
%"struct.std::__1::__compressed_pair_elem.760" = type { %"class.blink::Worklist.761"* }
%"class.blink::Worklist.761" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.722" }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.blink::Worklist.768"* }
%"class.blink::Worklist.768" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.722" }
%"class.std::__1::unique_ptr.772" = type { %"class.std::__1::__compressed_pair.773" }
%"class.std::__1::__compressed_pair.773" = type { %"struct.std::__1::__compressed_pair_elem.774" }
%"struct.std::__1::__compressed_pair_elem.774" = type { %"class.blink::Worklist.775"* }
%"class.blink::Worklist.775" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.722" }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.782", %"class.std::__1::__compressed_pair.790", %"class.std::__1::__compressed_pair.795", %"class.std::__1::__compressed_pair.797", [4 x i8] }>
%"class.std::__1::unique_ptr.782" = type { %"class.std::__1::__compressed_pair.783" }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.784", %"struct.std::__1::__compressed_pair_elem.785" }
%"struct.std::__1::__compressed_pair_elem.784" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.785" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { i64 }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.791" }
%"struct.std::__1::__compressed_pair_elem.791" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.798" }
%"struct.std::__1::__compressed_pair_elem.798" = type { float }
%"class.std::__1::unique_ptr.804" = type { %"class.std::__1::__compressed_pair.805" }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.807", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.807" = type { %"class.std::__1::__compressed_pair.808" }
%"class.std::__1::__compressed_pair.808" = type { %"struct.std::__1::__compressed_pair_elem.809" }
%"struct.std::__1::__compressed_pair_elem.809" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.816" }
%"class.WTF::Vector.816" = type { %"class.WTF::VectorBuffer.817" }
%"class.WTF::VectorBuffer.817" = type { %"class.WTF::VectorBufferBase.818" }
%"class.WTF::VectorBufferBase.818" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.824" = type { %"class.std::__1::__compressed_pair.825" }
%"class.std::__1::__compressed_pair.825" = type { %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.830" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.833" }
%"class.WTF::VectorBuffer.833" = type { %"class.WTF::VectorBufferBase.834" }
%"class.WTF::VectorBufferBase.834" = type { %"struct.std::__1::pair.835"*, i32, i32 }
%"struct.std::__1::pair.835" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.842" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.848" }
%"class.std::__1::unique_ptr.848" = type { %"class.std::__1::__compressed_pair.849" }
%"class.std::__1::__compressed_pair.849" = type { %"struct.std::__1::__compressed_pair_elem.850" }
%"struct.std::__1::__compressed_pair_elem.850" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.733"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.740"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.747"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.754"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.761"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1083" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1083" = type { %"struct.std::__1::__compressed_pair_elem.1084" }
%"struct.std::__1::__compressed_pair_elem.1084" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.854" = type { %"class.std::__1::__compressed_pair.855" }
%"class.std::__1::__compressed_pair.855" = type { %"struct.std::__1::__compressed_pair_elem.856" }
%"struct.std::__1::__compressed_pair_elem.856" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.860" = type { %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.866 }
%class.scoped_refptr.866 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.178" = type { %"struct.std::__1::__atomic_base.179" }
%"struct.std::__1::__atomic_base.179" = type { %"struct.std::__1::__cxx_atomic_impl.180" }
%"struct.std::__1::__cxx_atomic_impl.180" = type { %"struct.std::__1::__cxx_atomic_base_impl.181" }
%"struct.std::__1::__cxx_atomic_base_impl.181" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.absl::optional.1549" = type { %"class.absl::optional_internal::optional_data.1550" }
%"class.absl::optional_internal::optional_data.1550" = type { %"class.absl::optional_internal::optional_data_base.1551" }
%"class.absl::optional_internal::optional_data_base.1551" = type { %"class.absl::optional_internal::optional_data_dtor_base.1552" }
%"class.absl::optional_internal::optional_data_dtor_base.1552" = type { i8, %union.anon.1553 }
%union.anon.1553 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.1554", i64, %"class.absl::optional.264", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.1554" = type { %"class.absl::optional_internal::optional_data.1555" }
%"class.absl::optional_internal::optional_data.1555" = type { %"class.absl::optional_internal::optional_data_base.1556" }
%"class.absl::optional_internal::optional_data_base.1556" = type { %"class.absl::optional_internal::optional_data_dtor_base.1557" }
%"class.absl::optional_internal::optional_data_dtor_base.1557" = type { i8, %union.anon.1558 }
%union.anon.1558 = type { %"class.blink::WebSecurityOrigin" }
%"class.absl::optional.264" = type { %"class.absl::optional_internal::optional_data.265" }
%"class.absl::optional_internal::optional_data.265" = type { %"class.absl::optional_internal::optional_data_base.266" }
%"class.absl::optional_internal::optional_data_base.266" = type { %"class.absl::optional_internal::optional_data_dtor_base.267" }
%"class.absl::optional_internal::optional_data_dtor_base.267" = type { i8, %union.anon.268 }
%"class.blink::HTMLAnchorElement" = type { %"class.blink::HTMLElement", %"class.blink::DOMURLUtils.base", i32, i64, %"class.blink::Member.19" }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.8" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.23", %"class.blink::Member.25", %"class.blink::Member.0", %"class.blink::Member.27", %"class.blink::Member.27", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::Member.48", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.53", %"class.blink::HeapVector.55" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.102", %"class.WTF::Vector.102", i8, i32, %"class.blink::Member.113", %"class.blink::Member.382", %"class.blink::Member.644", %"class.blink::Member.646", %"class.blink::Member.648", %"class.blink::Member.650", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.658", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.664", %"class.blink::Member.666", %"class.blink::Member.61", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.669", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.21", %"class.blink::Member.620", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::UserActionElementSet", %"class.blink::Member.879", double, double, i64, i64, %"class.blink::HeapHashSet.881", %"class.blink::HeapHashSet.888", i16, i8, %"class.blink::Member.895", %"class.blink::Member.897", %"class.blink::Member.899", %"class.blink::Member.901", %"class.blink::TextLinkColors", %"class.blink::Member.903", i8, [7 x i8], %"class.blink::HeapHashMap.905", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.21", %"class.WTF::Vector.912", %"class.blink::Member.917", %"class.blink::Member.919", i8, %"class.blink::Member.21", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.921", %"class.blink::HeapVector.923", %"class.std::__1::unique_ptr.931", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.937", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.950", %"class.WTF::Vector.952", i8, i8, %"class.std::__1::unique_ptr.957", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.963", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.971", i8, i32, %"class.blink::Member.973", %"class.blink::Member.975", %"class.blink::Member.977", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.979", %"class.WTF::HashMap.981", %"class.blink::Member.986", %"class.blink::Member.988", %"class.blink::Member.990", %"class.blink::Member.992", %"class.blink::Member.25", %"class.blink::Member.25", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.994", i8, i32, %"class.blink::Member.1001", %"class.blink::Member.1003", i32, %"class.blink::Member.1005", %"class.blink::Member.1007", %"class.blink::Member.1009", %"class.std::__1::unique_ptr.1011", i64, %"class.std::__1::unique_ptr.1017", i32, i32, %"class.blink::Member.1023", %"class.blink::Member.1025", %"class.blink::Member.1027", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1029", %"class.WTF::Vector.631", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1031", %"class.blink::Member.1038", %"class.std::__1::unique_ptr.1040", %"class.blink::Member.1046", i8, i8, %"class.WTF::String", %"class.blink::Member.1048", i8, [7 x i8], %"class.blink::HeapHashMap.1050", %"class.blink::HeapObserverSet.1057", %"class.blink::Member.1065", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1067", i32, i8, i8, %"class.blink::WeakMember.1069", %"class.blink::Member.1070" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.95" }
%"class.blink::HeapHashMap.95" = type { %"class.WTF::HashMap.98" }
%"class.WTF::HashMap.98" = type { %"class.WTF::HashTable.99" }
%"class.WTF::HashTable.99" = type <{ %"struct.WTF::KeyValuePair.101"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.101" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.102" = type { %"class.WTF::VectorBuffer.103" }
%"class.WTF::VectorBuffer.103" = type { %"class.WTF::VectorBufferBase.104" }
%"class.WTF::VectorBufferBase.104" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.105 }
%class.scoped_refptr.105 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.106" }
%"struct.std::__1::atomic.106" = type { %"struct.std::__1::__atomic_base.107" }
%"struct.std::__1::__atomic_base.107" = type { %"struct.std::__1::__atomic_base.108" }
%"struct.std::__1::__atomic_base.108" = type { %"struct.std::__1::__cxx_atomic_impl.109" }
%"struct.std::__1::__cxx_atomic_impl.109" = type { %"struct.std::__1::__cxx_atomic_base_impl.110" }
%"struct.std::__1::__cxx_atomic_base_impl.110" = type { i32 }
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.472", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.480", %"class.blink::Member.25", %"class.blink::Member.482", i8, %"class.blink::Member.484", %"class.blink::Member.486", %"class.blink::Member.488", %"class.blink::Member.488", %"class.blink::Member.488", %"class.blink::Member.488", %"class.blink::Member.488", %"class.blink::Member.488", %"class.blink::Member.490", %"class.blink::Member.492", %"class.blink::Member.494", %"class.blink::Member.496", %"class.blink::Member.498", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.439", %"class.blink::Member.500", %class.scoped_refptr.502, %"class.blink::HeapHashSet.564", %"class.blink::Member.571", %"class.blink::HeapHashMap.584", %"class.std::__1::unique_ptr.591", %"class.blink::Member.603", %"class.blink::Member.624", %"class.blink::Member.626", %"class.blink::Member.628", %"class.WTF::Vector.631", %"class.util::TokenType", %"class.WTF::HashSet.636", %"class.WTF::Deque" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.130", %"class.blink::Member.132", %"class.blink::Member.134", %"class.blink::Member.136", i8, %"class.WTF::Vector.138" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.117" }
%"class.blink::HeapVector.117" = type { %"class.WTF::Vector.120" }
%"class.WTF::Vector.120" = type { %"class.WTF::VectorBuffer.121" }
%"class.WTF::VectorBuffer.121" = type { %"class.WTF::VectorBufferBase.122", [32 x i8] }
%"class.WTF::VectorBufferBase.122" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.123" }
%"class.blink::Member.123" = type { %"class.blink::MemberBase.124" }
%"class.blink::MemberBase.124" = type { %"class.blink::HeapVector.125"* }
%"class.blink::HeapVector.125" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.128"* }
%"class.WTF::Vector.128" = type opaque
%"class.blink::Member.130" = type { %"class.blink::MemberBase.131" }
%"class.blink::MemberBase.131" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1100", %"class.blink::Member.1102", %"class.blink::Member.1104", i8, i32, i8, i32, %"class.blink::Member.1106", %"class.blink::Member.132", %"class.blink::FrameLifecycle", %"class.blink::Member.130", %"class.blink::Member.130", %"class.blink::Member.130", %"class.blink::Member.130", %"class.blink::Member.130", %"class.blink::Member.130", %"class.blink::Member.609", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1116", i8, %"class.base::UnguessableToken", %"class.absl::optional.1118", %"class.absl::optional.1123", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.130", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1100" = type { %"class.blink::MemberBase.1101" }
%"class.blink::MemberBase.1101" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1102" = type { %"class.blink::MemberBase.1103" }
%"class.blink::MemberBase.1103" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1104" = type { %"class.blink::MemberBase.1105" }
%"class.blink::MemberBase.1105" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.1106" = type { %"class.blink::MemberBase.1107" }
%"class.blink::MemberBase.1107" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.609" = type { %"class.blink::MemberBase.610" }
%"class.blink::MemberBase.610" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1135", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1143", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1151", %"class.blink::FrameLoader", %"class.blink::Member.1172", %"class.blink::Member.21", %"class.blink::Member.1174", %"class.blink::Member.1176", %"class.blink::Member.1178", %"class.blink::Member.1180", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1182", %class.scoped_refptr.1184, %"class.blink::Member.1185", %"class.blink::Member.1187", %"class.blink::Member.1189", %"class.blink::Member.1191", %"class.blink::Member.1193", %"class.blink::Member.1195", %"class.blink::Member.1197", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.1199", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1202", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1208", %"class.std::__1::unique_ptr.1209", %"class.absl::optional.1123", i32, [4 x i8], %"class.std::__1::unique_ptr.1215", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1223", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1228", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1233", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1236", %"class.blink::Member.1238", %"class.blink::Member.1240", %"class.blink::Member.1242", %"class.mojo::StructPtr.1245", %"class.blink::Member.1254", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1256", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1135" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1136" }
%"class.blink::HeapHashMap.1136" = type { %"class.WTF::HashMap.1139" }
%"class.WTF::HashMap.1139" = type { %"class.WTF::HashTable.1140" }
%"class.WTF::HashTable.1140" = type <{ %"struct.WTF::KeyValuePair.1142"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1142" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1143" = type { %"class.std::__1::__compressed_pair.1144" }
%"class.std::__1::__compressed_pair.1144" = type { %"struct.std::__1::__compressed_pair_elem.1145" }
%"struct.std::__1::__compressed_pair_elem.1145" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.594", %"class.base::WeakPtrFactory.599" }
%"class.WTF::HashMap.594" = type { %"class.WTF::HashTable.595" }
%"class.WTF::HashTable.595" = type <{ %"struct.WTF::KeyValuePair.598"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.598" = type opaque
%"class.base::WeakPtrFactory.599" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.160 }
%class.scoped_refptr.160 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.161", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.161" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.162" }
%"struct.std::__1::atomic.162" = type { %"struct.std::__1::__atomic_base.163" }
%"struct.std::__1::__atomic_base.163" = type { %"struct.std::__1::__atomic_base.164" }
%"struct.std::__1::__atomic_base.164" = type { %"struct.std::__1::__cxx_atomic_impl.165" }
%"struct.std::__1::__cxx_atomic_impl.165" = type { %"struct.std::__1::__cxx_atomic_base_impl.166" }
%"struct.std::__1::__cxx_atomic_base_impl.166" = type { i8 }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1149" }
%"class.blink::Member.1149" = type { %"class.blink::MemberBase.1150" }
%"class.blink::MemberBase.1150" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.607" }
%"class.blink::WeakMember.607" = type { %"class.blink::MemberBase.608" }
%"class.blink::MemberBase.608" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.325" }
%"class.blink::HeapHashSet.325" = type { %"class.WTF::HashSet.328" }
%"class.WTF::HashSet.328" = type { %"class.WTF::HashTable.329" }
%"class.WTF::HashTable.329" = type <{ %"class.blink::WeakMember.331"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.331" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.262", %"class.base::RepeatingCallback.1583", i64, %"class.std::__1::map.1584", i8*, i64, %"class.base::WeakPtrFactory.1593" }
%"class.base::RepeatingCallback.262" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.1583" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1584" = type { %"class.std::__1::__tree.1585" }
%"class.std::__1::__tree.1585" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1586", %"class.std::__1::__compressed_pair.1590" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1586" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1590" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.base::WeakPtrFactory.1593" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1151" = type { %"class.WTF::HashSet.1154" }
%"class.WTF::HashSet.1154" = type { %"class.WTF::HashTable.1155" }
%"class.WTF::HashTable.1155" = type <{ %"class.blink::WeakMember.1157"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1157" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.609", %"class.blink::Member.1158", %"class.blink::Member.1160", %"class.std::__1::unique_ptr.1162", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1168" }
%"class.blink::Member.1158" = type { %"class.blink::MemberBase.1159" }
%"class.blink::MemberBase.1159" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1160" = type { %"class.blink::MemberBase.1161" }
%"class.blink::MemberBase.1161" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1162" = type { %"class.std::__1::__compressed_pair.1163" }
%"class.std::__1::__compressed_pair.1163" = type { %"struct.std::__1::__compressed_pair_elem.1164" }
%"struct.std::__1::__compressed_pair_elem.1164" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.6 }
%"class.WTF::HashSet.1168" = type { %"class.WTF::HashTable.1169" }
%"class.WTF::HashTable.1169" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1173" }
%"class.blink::MemberBase.1173" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1263", %"class.blink::Member.609", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1268", i8, i32, %"class.blink::Color", %"class.absl::optional.1270", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1275", %"class.blink::Member.1277", %"class.blink::Member.1277", %"class.std::__1::unique_ptr.1280", i32, [4 x i8], %"class.WTF::HashSet.1283", %"class.blink::Member.1290", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1292", %"class.blink::HeapHashSet.1299", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1307", i8, %"class.blink::Member.1313", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1325", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1339", i8, %"class.std::__1::unique_ptr.1345", %"class.std::__1::unique_ptr.1462", %"class.WTF::Vector.1468", i32, %class.scoped_refptr.1473, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1474", %"class.blink::Member.1476", %"class.blink::Member.1478", %"class.blink::HeapHashSet.1480", %"class.blink::HeapHashSet.1487", %"class.std::__1::unique_ptr.1494", %"class.std::__1::unique_ptr.1501", %"class.WTF::Vector.102" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1263" = type { %"class.WTF::HashTable.1264" }
%"class.WTF::HashTable.1264" = type <{ %class.scoped_refptr.1267*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1267 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1268" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1269", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.869, %"class.base::WeakPtrFactory.870" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.869 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.144" }>
%"class.base::RefCountedThreadSafe.144" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.870" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1269" = type { %"class.blink::MemberBase.1173" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1270" = type { %"class.absl::optional_internal::optional_data.1271" }
%"class.absl::optional_internal::optional_data.1271" = type { %"class.absl::optional_internal::optional_data_base.1272" }
%"class.absl::optional_internal::optional_data_base.1272" = type { %"class.absl::optional_internal::optional_data_dtor_base.1273" }
%"class.absl::optional_internal::optional_data_dtor_base.1273" = type { i8, %union.anon.1274 }
%union.anon.1274 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1275" = type { %"class.blink::MemberBase.1276" }
%"class.blink::MemberBase.1276" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1277" = type { %"class.blink::MemberBase.1278" }
%"class.blink::MemberBase.1278" = type { %"class.blink::HeapHashSet.1279"* }
%"class.blink::HeapHashSet.1279" = type opaque
%"class.std::__1::unique_ptr.1280" = type { %"class.std::__1::__compressed_pair.1281" }
%"class.std::__1::__compressed_pair.1281" = type { %"struct.std::__1::__compressed_pair_elem.1282" }
%"struct.std::__1::__compressed_pair_elem.1282" = type { %"class.WTF::HashSet.1283"* }
%"class.WTF::HashSet.1283" = type { %"class.WTF::HashTable.1284" }
%"class.WTF::HashTable.1284" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1290" = type { %"class.blink::MemberBase.1291" }
%"class.blink::MemberBase.1291" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1292" = type { %"class.WTF::HashSet.1295" }
%"class.WTF::HashSet.1295" = type { %"class.WTF::HashTable.1296" }
%"class.WTF::HashTable.1296" = type <{ %"class.blink::Member.1298"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1298" = type opaque
%"class.blink::HeapHashSet.1299" = type { %"class.WTF::HashSet.1302" }
%"class.WTF::HashSet.1302" = type { %"class.WTF::HashTable.1303" }
%"class.WTF::HashTable.1303" = type <{ %"class.blink::Member.1305"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1305" = type { %"class.blink::MemberBase.1306" }
%"class.blink::MemberBase.1306" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1535", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1546", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.21" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1535" = type { %"class.blink::MemberBase.1536" }
%"class.blink::MemberBase.1536" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1537", %"class.blink::Member.1538", %"class.blink::Member.1540", %"class.blink::Member.1542", %"class.blink::Member.1544", %"class.WTF::Vector.102", i16, %class.scoped_refptr.869 }
%"class.blink::ThreadState::PrefinalizerRegistration.1537" = type { i8 }
%"class.blink::Member.1538" = type { %"class.blink::MemberBase.1539" }
%"class.blink::MemberBase.1539" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1540" = type { %"class.blink::MemberBase.1541" }
%"class.blink::MemberBase.1541" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1542" = type { %"class.blink::MemberBase.1543" }
%"class.blink::MemberBase.1543" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1544" = type { %"class.blink::MemberBase.1545" }
%"class.blink::MemberBase.1545" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1546" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1547", { i64, i64 } }
%"class.blink::WeakMember.1547" = type { %"class.blink::MemberBase.1306" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1307" = type { %"class.std::__1::__compressed_pair.1308" }
%"class.std::__1::__compressed_pair.1308" = type { %"struct.std::__1::__compressed_pair_elem.1309" }
%"struct.std::__1::__compressed_pair_elem.1309" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1313" = type { %"class.blink::MemberBase.1314" }
%"class.blink::MemberBase.1314" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1317", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1317" = type { %"class.WTF::HashTable.1318" }
%"class.WTF::HashTable.1318" = type <{ %"struct.WTF::KeyValuePair.1320"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1320" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1321", i32, i32 }
%"class.WTF::Vector.1321" = type { %"class.WTF::VectorBuffer.1322" }
%"class.WTF::VectorBuffer.1322" = type { %"class.WTF::VectorBufferBase.1323" }
%"class.WTF::VectorBufferBase.1323" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1325" = type { %"class.WTF::LinkedHashSet.1328" }
%"class.WTF::LinkedHashSet.1328" = type { %"class.WTF::HashMap.1329", %"class.WTF::VectorBackedLinkedList.1333" }
%"class.WTF::HashMap.1329" = type { %"class.WTF::HashTable.1330" }
%"class.WTF::HashTable.1330" = type <{ %"struct.WTF::KeyValuePair.1332"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1332" = type opaque
%"class.WTF::VectorBackedLinkedList.1333" = type { %"class.WTF::Vector.1334", i32, i32 }
%"class.WTF::Vector.1334" = type { %"class.WTF::VectorBuffer.1335" }
%"class.WTF::VectorBuffer.1335" = type { %"class.WTF::VectorBufferBase.1336" }
%"class.WTF::VectorBufferBase.1336" = type { %"class.WTF::VectorBackedLinkedListNode.1337"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1337" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1339" = type { %"class.std::__1::__compressed_pair.1340" }
%"class.std::__1::__compressed_pair.1340" = type { %"struct.std::__1::__compressed_pair_elem.1341" }
%"struct.std::__1::__compressed_pair_elem.1341" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1345" = type { %"class.std::__1::__compressed_pair.1346" }
%"class.std::__1::__compressed_pair.1346" = type { %"struct.std::__1::__compressed_pair_elem.1347" }
%"struct.std::__1::__compressed_pair_elem.1347" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1348, %class.scoped_refptr.1348, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1439", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1444", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1348 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1349", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1356" }
%"class.WTF::RefCounted.1349" = type { %"class.base::RefCounted.1350" }
%"class.base::RefCounted.1350" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1351", i32, [4 x i8] }>
%"class.WTF::Vector.1351" = type { %"class.WTF::VectorBuffer.1352" }
%"class.WTF::VectorBuffer.1352" = type { %"class.WTF::VectorBufferBase.1353" }
%"class.WTF::VectorBufferBase.1353" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1356" = type { %"class.WTF::VectorBuffer.1357" }
%"class.WTF::VectorBuffer.1357" = type { %"class.WTF::VectorBufferBase.1358" }
%"class.WTF::VectorBufferBase.1358" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1362", %"class.std::__1::unique_ptr.1411", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1359, %class.scoped_refptr.1360, %class.scoped_refptr.1361 }
%class.scoped_refptr.1359 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1375", i8, i8, %class.scoped_refptr.1359, i32, i32 }
%"class.WTF::RefCounted.1375" = type { %"class.base::RefCounted.1376" }
%"class.base::RefCounted.1376" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1360 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1530" }
%"class.blink::PaintPropertyNode.1530" = type { %"class.WTF::RefCounted.1531", i8, i8, %class.scoped_refptr.1360, i32, i32 }
%"class.WTF::RefCounted.1531" = type { %"class.base::RefCounted.1532" }
%"class.base::RefCounted.1532" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1361 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1527" }
%"class.blink::PaintPropertyNode.1527" = type { %"class.WTF::RefCounted.1528", i8, i8, %class.scoped_refptr.1361, i32, i32 }
%"class.WTF::RefCounted.1528" = type { %"class.base::RefCounted.1529" }
%"class.base::RefCounted.1529" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1362" = type { %"class.std::__1::__compressed_pair.1363" }
%"class.std::__1::__compressed_pair.1363" = type { %"struct.std::__1::__compressed_pair_elem.1364" }
%"struct.std::__1::__compressed_pair_elem.1364" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1365", %"class.WTF::Vector.1370", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1365" = type { %"class.WTF::VectorBuffer.1366" }
%"class.WTF::VectorBuffer.1366" = type { %"class.WTF::VectorBufferBase.1367" }
%"class.WTF::VectorBufferBase.1367" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1370" = type { %"class.WTF::VectorBuffer.1371" }
%"class.WTF::VectorBuffer.1371" = type { %"class.WTF::VectorBufferBase.1372" }
%"class.WTF::VectorBufferBase.1372" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1390" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1383, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1384", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1377" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1377" = type { %"class.std::__1::__compressed_pair.1378" }
%"class.std::__1::__compressed_pair.1378" = type { %"struct.std::__1::__compressed_pair_elem.1379" }
%"struct.std::__1::__compressed_pair_elem.1379" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1383 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1512", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1512" = type { %"class.WTF::RefCounted.1513", i8, i8, %class.scoped_refptr.1383, i32, i32 }
%"class.WTF::RefCounted.1513" = type { %"class.base::RefCounted.1514" }
%"class.base::RefCounted.1514" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1515" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1515" = type { %"class.absl::optional_internal::optional_data.1516" }
%"class.absl::optional_internal::optional_data.1516" = type { %"class.absl::optional_internal::optional_data_base.1517" }
%"class.absl::optional_internal::optional_data_base.1517" = type { %"class.absl::optional_internal::optional_data_dtor_base.1518" }
%"class.absl::optional_internal::optional_data_dtor_base.1518" = type { i8, %union.anon.1519 }
%union.anon.1519 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1520", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1520" = type { %"class.std::__1::__vector_base.1521" }
%"class.std::__1::__vector_base.1521" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1522" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1522" = type { %"struct.std::__1::__compressed_pair_elem.1523" }
%"struct.std::__1::__compressed_pair_elem.1523" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1384" = type { %"class.std::__1::__compressed_pair.1385" }
%"class.std::__1::__compressed_pair.1385" = type { %"struct.std::__1::__compressed_pair_elem.1386" }
%"struct.std::__1::__compressed_pair_elem.1386" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1390" = type { %"class.std::__1::__compressed_pair.1391" }
%"class.std::__1::__compressed_pair.1391" = type { %"struct.std::__1::__compressed_pair_elem.1392" }
%"struct.std::__1::__compressed_pair_elem.1392" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1393", %"class.std::__1::unique_ptr.1399", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1393" = type { %"class.std::__1::__compressed_pair.1394" }
%"class.std::__1::__compressed_pair.1394" = type { %"struct.std::__1::__compressed_pair_elem.1395" }
%"struct.std::__1::__compressed_pair_elem.1395" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1399" = type { %"class.std::__1::__compressed_pair.1400" }
%"class.std::__1::__compressed_pair.1400" = type { %"struct.std::__1::__compressed_pair_elem.1401" }
%"struct.std::__1::__compressed_pair_elem.1401" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1411" = type { %"class.std::__1::__compressed_pair.1412" }
%"class.std::__1::__compressed_pair.1412" = type { %"struct.std::__1::__compressed_pair_elem.1413" }
%"struct.std::__1::__compressed_pair_elem.1413" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1414", %"class.absl::optional.1414" }
%"class.absl::optional.1414" = type { %"class.absl::optional_internal::optional_data.1415" }
%"class.absl::optional_internal::optional_data.1415" = type { %"class.absl::optional_internal::optional_data_base.1416" }
%"class.absl::optional_internal::optional_data_base.1416" = type { %"class.absl::optional_internal::optional_data_dtor_base.1417" }
%"class.absl::optional_internal::optional_data_dtor_base.1417" = type { i8, [3 x i8], %union.anon.1418 }
%union.anon.1418 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1356"*, %"class.absl::optional.1424", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1424" = type { %"class.absl::optional_internal::optional_data.1425" }
%"class.absl::optional_internal::optional_data.1425" = type { %"class.absl::optional_internal::optional_data_base.1426" }
%"class.absl::optional_internal::optional_data_base.1426" = type { %"class.absl::optional_internal::optional_data_dtor_base.1427" }
%"class.absl::optional_internal::optional_data_dtor_base.1427" = type { i8, %union.anon.1428 }
%union.anon.1428 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1429", %"class.WTF::Vector.1434" }
%"class.WTF::Vector.1429" = type { %"class.WTF::VectorBuffer.1430" }
%"class.WTF::VectorBuffer.1430" = type { %"class.WTF::VectorBufferBase.1431", [128 x i8] }
%"class.WTF::VectorBufferBase.1431" = type { i32*, i32, i32 }
%"class.WTF::Vector.1434" = type { %"class.WTF::VectorBuffer.1435" }
%"class.WTF::VectorBuffer.1435" = type { %"class.WTF::VectorBufferBase.1436", [128 x i8] }
%"class.WTF::VectorBufferBase.1436" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1439" = type { %"class.WTF::VectorBuffer.1440" }
%"class.WTF::VectorBuffer.1440" = type { %"class.WTF::VectorBufferBase.1441" }
%"class.WTF::VectorBufferBase.1441" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1444" = type { %"class.WTF::HashTable.1445" }
%"class.WTF::HashTable.1445" = type <{ %"struct.WTF::KeyValuePair.1448"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1448" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1449", %"class.WTF::Vector.1454" }
%"class.WTF::HashMap.1449" = type { %"class.WTF::HashTable.1450" }
%"class.WTF::HashTable.1450" = type <{ %"struct.WTF::KeyValuePair.1453"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1453" = type opaque
%"class.WTF::Vector.1454" = type { %"class.WTF::VectorBuffer.1455" }
%"class.WTF::VectorBuffer.1455" = type { %"class.WTF::VectorBufferBase.1456" }
%"class.WTF::VectorBufferBase.1456" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1462" = type { %"class.std::__1::__compressed_pair.1463" }
%"class.std::__1::__compressed_pair.1463" = type { %"struct.std::__1::__compressed_pair_elem.1464" }
%"struct.std::__1::__compressed_pair_elem.1464" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1468" = type { %"class.WTF::VectorBuffer.1469" }
%"class.WTF::VectorBuffer.1469" = type { %"class.WTF::VectorBufferBase.1470" }
%"class.WTF::VectorBufferBase.1470" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1473 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1474" = type { %"class.blink::MemberBase.1475" }
%"class.blink::MemberBase.1475" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1476" = type { %"class.blink::MemberBase.1477" }
%"class.blink::MemberBase.1477" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1478" = type { %"class.blink::MemberBase.1479" }
%"class.blink::MemberBase.1479" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1480" = type { %"class.WTF::HashSet.1483" }
%"class.WTF::HashSet.1483" = type { %"class.WTF::HashTable.1484" }
%"class.WTF::HashTable.1484" = type <{ %"class.blink::WeakMember.1486"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1486" = type opaque
%"class.blink::HeapHashSet.1487" = type { %"class.WTF::HashSet.1490" }
%"class.WTF::HashSet.1490" = type { %"class.WTF::HashTable.1491" }
%"class.WTF::HashTable.1491" = type <{ %"class.blink::WeakMember.1493"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1493" = type opaque
%"class.std::__1::unique_ptr.1494" = type { %"class.std::__1::__compressed_pair.1495" }
%"class.std::__1::__compressed_pair.1495" = type { %"struct.std::__1::__compressed_pair_elem.1496" }
%"struct.std::__1::__compressed_pair_elem.1496" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1497" }
%"class.base::time_internal::TimeBase.1497" = type { i64 }
%"class.std::__1::unique_ptr.1501" = type { %"class.std::__1::__compressed_pair.1502" }
%"class.std::__1::__compressed_pair.1502" = type { %"struct.std::__1::__compressed_pair_elem.1503" }
%"struct.std::__1::__compressed_pair_elem.1503" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1504", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1504" = type { %"class.absl::optional_internal::optional_data.1505" }
%"class.absl::optional_internal::optional_data.1505" = type { %"class.absl::optional_internal::optional_data_base.1506" }
%"class.absl::optional_internal::optional_data_base.1506" = type { %"class.absl::optional_internal::optional_data_dtor_base.1507" }
%"class.absl::optional_internal::optional_data_dtor_base.1507" = type { i8, %union.anon.1508 }
%union.anon.1508 = type { %"class.base::Time" }
%"class.blink::Member.1174" = type { %"class.blink::MemberBase.1175" }
%"class.blink::MemberBase.1175" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1176" = type { %"class.blink::MemberBase.1177" }
%"class.blink::MemberBase.1177" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1178" = type { %"class.blink::MemberBase.1179" }
%"class.blink::MemberBase.1179" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1182" = type { %"class.blink::MemberBase.1183" }
%"class.blink::MemberBase.1183" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.1184 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1185" = type { %"class.blink::MemberBase.1186" }
%"class.blink::MemberBase.1186" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1187" = type { %"class.blink::MemberBase.1188" }
%"class.blink::MemberBase.1188" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1189" = type { %"class.blink::MemberBase.1190" }
%"class.blink::MemberBase.1190" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1191" = type { %"class.blink::MemberBase.1192" }
%"class.blink::MemberBase.1192" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1193" = type { %"class.blink::MemberBase.1194" }
%"class.blink::MemberBase.1194" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1195" = type { %"class.blink::MemberBase.1196" }
%"class.blink::MemberBase.1196" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1198" }
%"class.blink::MemberBase.1198" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.1199" = type { %"class.blink::Member.1200" }
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.1596" }
%"class.mojo::Remote.1596" = type { %"class.mojo::internal::InterfacePtrState.1597" }
%"class.mojo::internal::InterfacePtrState.1597" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1598" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.141, %"class.std::__1::unique_ptr.259", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.143, i32 }>
%class.scoped_refptr.141 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.143, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.221", %"class.absl::optional.226", %"class.absl::optional.182", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.250", i8, [7 x i8], %class.scoped_refptr.143, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.142" }>
%"class.base::RefCountedThreadSafe.142" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.154", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.143, %"class.std::__1::unique_ptr.167", %"class.absl::optional", %"struct.std::__1::atomic.178", i8, i8, i8, i8, i32, i32, %"class.absl::optional.182", %"class.std::__1::unique_ptr.187", i8, i64, %class.scoped_refptr.217, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.220" }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.143, i8, %"class.mojo::ScopedHandleBase.170", %class.scoped_refptr.171, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.172" }
%"class.mojo::ScopedHandleBase.170" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.171 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.172" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.176 }
%union.anon.176 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.177", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.177" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.190", i8, i64, %class.scoped_refptr.191, %class.scoped_refptr.213 }
%"class.base::RepeatingCallback.190" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.191 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.192", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.202", i8, [7 x i8] }>
%"class.base::RefCounted.192" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.193 }
%class.scoped_refptr.193 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.194", %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.std::__1::map.202" = type { %"class.std::__1::__tree.203" }
%"class.std::__1::__tree.203" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.204", %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%class.scoped_refptr.213 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.217 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.218 }
%class.scoped_refptr.218 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1548", [4 x i8], %"class.base::RepeatingCallback.262", %class.scoped_refptr.143, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1548" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.219 }
%class.scoped_refptr.219 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.220" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.221" = type { %"class.absl::optional_internal::optional_data.222" }
%"class.absl::optional_internal::optional_data.222" = type { %"class.absl::optional_internal::optional_data_base.223" }
%"class.absl::optional_internal::optional_data_base.223" = type { %"class.absl::optional_internal::optional_data_dtor_base.224" }
%"class.absl::optional_internal::optional_data_dtor_base.224" = type { i8, %union.anon.225 }
%union.anon.225 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.226" = type { %"class.absl::optional_internal::optional_data.227" }
%"class.absl::optional_internal::optional_data.227" = type { %"class.absl::optional_internal::optional_data_base.228" }
%"class.absl::optional_internal::optional_data_base.228" = type { %"class.absl::optional_internal::optional_data_dtor_base.229" }
%"class.absl::optional_internal::optional_data_dtor_base.229" = type { i8, [7 x i8], %union.anon.230 }
%union.anon.230 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.182" = type { %"class.absl::optional_internal::optional_data.183" }
%"class.absl::optional_internal::optional_data.183" = type { %"class.absl::optional_internal::optional_data_base.184" }
%"class.absl::optional_internal::optional_data_base.184" = type { %"class.absl::optional_internal::optional_data_dtor_base.185" }
%"class.absl::optional_internal::optional_data_dtor_base.185" = type { i8, %union.anon.186 }
%union.anon.186 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.235 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.235 = type { %"class.std::__1::map.238" }
%"class.std::__1::map.238" = type { %"class.std::__1::__tree.239" }
%"class.std::__1::__tree.239" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.240", %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.249"*, i64 }
%"class.std::__1::unique_ptr.249" = type opaque
%"class.std::__1::map.250" = type { %"class.std::__1::__tree.251" }
%"class.std::__1::__tree.251" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.252", %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.262", %"class.base::OnceCallback.263", %"class.absl::optional.264", %"class.absl::optional.269", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.276", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.284", %"class.std::__1::map.295", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.304", i8, %class.scoped_refptr.143, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.305" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.263" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.269" = type { %"class.absl::optional_internal::optional_data.270" }
%"class.absl::optional_internal::optional_data.270" = type { %"class.absl::optional_internal::optional_data_base.271" }
%"class.absl::optional_internal::optional_data_base.271" = type { %"class.absl::optional_internal::optional_data_dtor_base.272" }
%"class.absl::optional_internal::optional_data_dtor_base.272" = type { i8, %union.anon.273 }
%union.anon.273 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.143, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.274" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.274" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.275 }
%class.scoped_refptr.275 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.279", %class.scoped_refptr.280 }
%"class.base::RepeatingCallback.279" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.280 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.142", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.284" = type { %"class.std::__1::__tree.285" }
%"class.std::__1::__tree.285" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.286", %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.std::__1::map.295" = type { %"class.std::__1::__tree.296" }
%"class.std::__1::__tree.296" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.297", %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.base::OnceCallback.304" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.305" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.143 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.1598" = type { %"class.std::__1::__compressed_pair.1599" }
%"class.std::__1::__compressed_pair.1599" = type { %"struct.std::__1::__compressed_pair_elem.1600" }
%"struct.std::__1::__compressed_pair_elem.1600" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1202" = type { %"class.std::__1::__compressed_pair.1203" }
%"class.std::__1::__compressed_pair.1203" = type { %"struct.std::__1::__compressed_pair_elem.1204" }
%"struct.std::__1::__compressed_pair_elem.1204" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1208" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1209" = type { %"class.std::__1::__compressed_pair.1210" }
%"class.std::__1::__compressed_pair.1210" = type { %"struct.std::__1::__compressed_pair_elem.1211" }
%"struct.std::__1::__compressed_pair_elem.1211" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.1215" = type { %"class.std::__1::__compressed_pair.1216" }
%"class.std::__1::__compressed_pair.1216" = type { %"struct.std::__1::__compressed_pair_elem.1217" }
%"struct.std::__1::__compressed_pair_elem.1217" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1221" }
%"class.blink::Member.1221" = type { %"class.blink::MemberBase.1222" }
%"class.blink::MemberBase.1222" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1606" }
%"class.mojo::AssociatedRemote.1606" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1607" }
%"class.mojo::internal::AssociatedInterfacePtrState.1607" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1608" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.259", i32 }>
%"class.std::__1::unique_ptr.1608" = type { %"class.std::__1::__compressed_pair.1609" }
%"class.std::__1::__compressed_pair.1609" = type { %"struct.std::__1::__compressed_pair_elem.1610" }
%"struct.std::__1::__compressed_pair_elem.1610" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1223" = type { %"class.blink::Member.1224" }
%"class.blink::Member.1224" = type { %"class.blink::MemberBase.1225" }
%"class.blink::MemberBase.1225" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1616" }
%"class.mojo::AssociatedRemote.1616" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1617" }
%"class.mojo::internal::AssociatedInterfacePtrState.1617" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1618" }
%"class.std::__1::unique_ptr.1618" = type { %"class.std::__1::__compressed_pair.1619" }
%"class.std::__1::__compressed_pair.1619" = type { %"struct.std::__1::__compressed_pair_elem.1620" }
%"struct.std::__1::__compressed_pair_elem.1620" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1226" }
%"class.blink::Member.1226" = type { %"class.blink::MemberBase.1227" }
%"class.blink::MemberBase.1227" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1626", %"class.blink::Member.609", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1626" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1627" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.259" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1627" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1228" = type { %"class.blink::Member.1229" }
%"class.blink::Member.1229" = type { %"class.blink::MemberBase.1230" }
%"class.blink::MemberBase.1230" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1630", %"class.blink::Member.609", %"class.mojo::AssociatedReceiver.1631" }
%"class.blink::ThreadState::PrefinalizerRegistration.1630" = type { i8 }
%"class.mojo::AssociatedReceiver.1631" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1632" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1632" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1231" }
%"class.blink::Member.1231" = type { %"class.blink::MemberBase.1232" }
%"class.blink::MemberBase.1232" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1635", %"class.blink::Member.609", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1635" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.141, %"class.std::__1::unique_ptr.259", %"class.base::WeakPtrFactory.1636" }
%"class.base::WeakPtrFactory.1636" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1233" = type { %"class.blink::Member.1234" }
%"class.blink::Member.1234" = type { %"class.blink::MemberBase.1235" }
%"class.blink::MemberBase.1235" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1639", %"class.blink::Member.609", %"class.mojo::AssociatedReceiver.1640" }
%"class.blink::ThreadState::PrefinalizerRegistration.1639" = type { i8 }
%"class.mojo::AssociatedReceiver.1640" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1641" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1641" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1236" = type { %"class.blink::MemberBase.1237" }
%"class.blink::MemberBase.1237" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1238" = type { %"class.blink::MemberBase.1239" }
%"class.blink::MemberBase.1239" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1240" = type { %"class.blink::MemberBase.1241" }
%"class.blink::MemberBase.1241" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1242" = type { %"class.blink::MemberBase.1243" }
%"class.blink::MemberBase.1243" = type { %"class.blink::HeapHashMap.1244"* }
%"class.blink::HeapHashMap.1244" = type opaque
%"class.mojo::StructPtr.1245" = type { %"class.std::__1::unique_ptr.1246" }
%"class.std::__1::unique_ptr.1246" = type { %"class.std::__1::__compressed_pair.1247" }
%"class.std::__1::__compressed_pair.1247" = type { %"struct.std::__1::__compressed_pair_elem.1248" }
%"struct.std::__1::__compressed_pair_elem.1248" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1249", %"class.mojo::InlinedStructPtr.1250" }
%"class.mojo::InlinedStructPtr.1249" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1250" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1254" = type { %"class.blink::MemberBase.1255" }
%"class.blink::MemberBase.1255" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1256" = type { %"class.absl::optional_internal::optional_data.1257" }
%"class.absl::optional_internal::optional_data.1257" = type { %"class.absl::optional_internal::optional_data_base.1258" }
%"class.absl::optional_internal::optional_data_base.1258" = type { %"class.absl::optional_internal::optional_data_dtor_base.1259" }
%"class.absl::optional_internal::optional_data_dtor_base.1259" = type { i8, %union.anon.1260 }
%union.anon.1260 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.130", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1108" }
%"class.std::__1::vector.1108" = type { %"class.std::__1::__vector_base.1109" }
%"class.std::__1::__vector_base.1109" = type { %"struct.std::__1::pair.1110"*, %"struct.std::__1::pair.1110"*, %"class.std::__1::__compressed_pair.1111" }
%"struct.std::__1::pair.1110" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.1112" }
%"struct.std::__1::__compressed_pair_elem.1112" = type { %"struct.std::__1::pair.1110"* }
%"class.blink::Member.1116" = type { %"class.blink::MemberBase.1117" }
%"class.blink::MemberBase.1117" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.1118" = type { %"class.absl::optional_internal::optional_data.1119" }
%"class.absl::optional_internal::optional_data.1119" = type { %"class.absl::optional_internal::optional_data_base.1120" }
%"class.absl::optional_internal::optional_data_base.1120" = type { %"class.absl::optional_internal::optional_data_dtor_base.1121" }
%"class.absl::optional_internal::optional_data_dtor_base.1121" = type { i8, %union.anon.1122 }
%union.anon.1122 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.1123" = type { %"class.absl::optional_internal::optional_data.1124" }
%"class.absl::optional_internal::optional_data.1124" = type { %"class.absl::optional_internal::optional_data_base.1125" }
%"class.absl::optional_internal::optional_data_base.1125" = type { %"class.absl::optional_internal::optional_data_dtor_base.1126" }
%"class.absl::optional_internal::optional_data_dtor_base.1126" = type { i8, %union.anon.1127 }
%union.anon.1127 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1128" }
%"class.blink::HeapHashSet.1128" = type { %"class.WTF::HashSet.1131" }
%"class.WTF::HashSet.1131" = type { %"class.WTF::HashTable.1132" }
%"class.WTF::HashTable.1132" = type <{ %"class.blink::WeakMember.1134"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1134" = type opaque
%"class.blink::Member.132" = type { %"class.blink::MemberBase.133" }
%"class.blink::MemberBase.133" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.134" = type { %"class.blink::MemberBase.135" }
%"class.blink::MemberBase.135" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.136" = type { %"class.blink::MemberBase.137" }
%"class.blink::MemberBase.137" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.138" = type { %"class.WTF::VectorBuffer.139" }
%"class.WTF::VectorBuffer.139" = type { %"class.WTF::VectorBufferBase.140" }
%"class.WTF::VectorBufferBase.140" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.309" }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.317", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.388", i32, i8, [3 x i8], %"class.blink::HeapVector.390", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.398", %"class.blink::Member.400", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.409", %"class.blink::Member.468", %"class.blink::Member.470", i8 }>
%"class.blink::Supplementable.317" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.318" }
%"class.blink::HeapHashMap.318" = type { %"class.WTF::HashMap.321" }
%"class.WTF::HashMap.321" = type { %"class.WTF::HashTable.322" }
%"class.WTF::HashTable.322" = type <{ %"struct.WTF::KeyValuePair.324"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.324" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.332" }
%"class.blink::Supplementable.332" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.333" }
%"class.blink::HeapHashMap.333" = type { %"class.WTF::HashMap.336" }
%"class.WTF::HashMap.336" = type { %"class.WTF::HashTable.337" }
%"class.WTF::HashTable.337" = type <{ %"struct.WTF::KeyValuePair.339"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.339" = type { i8*, %"class.blink::Member.1571" }
%"class.blink::Member.1571" = type { %"class.blink::MemberBase.1572" }
%"class.blink::MemberBase.1572" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1573" }
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.340, %"class.std::__1::unique_ptr.349", %"class.std::__1::unique_ptr.349", %"class.std::__1::unique_ptr.376", %"class.std::__1::unique_ptr.376", %"class.blink::Member.382", i32, [4 x i8], %"class.WTF::HashSet.384", i32, i32 }
%class.scoped_refptr.340 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.341", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.343", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.348 }
%"class.WTF::RefCounted.341" = type { %"class.base::RefCounted.342" }
%"class.base::RefCounted.342" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.343" = type { %"class.absl::optional_internal::optional_data.344" }
%"class.absl::optional_internal::optional_data.344" = type { %"class.absl::optional_internal::optional_data_base.345" }
%"class.absl::optional_internal::optional_data_base.345" = type { %"class.absl::optional_internal::optional_data_dtor_base.346" }
%"class.absl::optional_internal::optional_data_dtor_base.346" = type { i8, %union.anon.347 }
%union.anon.347 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.348 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.352", %"class.std::__1::map.363", %"class.std::__1::map.372"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.343" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map.352" = type { %"class.std::__1::__tree.353" }
%"class.std::__1::__tree.353" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.354", %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.std::__1::map.363" = type { %"class.std::__1::__tree.364" }
%"class.std::__1::__tree.364" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.365", %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"class.std::__1::map.372" = type opaque
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.384" = type { %"class.WTF::HashTable.385" }
%"class.WTF::HashTable.385" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.388" = type { %"class.blink::MemberBase.389" }
%"class.blink::MemberBase.389" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.390" = type { %"class.WTF::Vector.393" }
%"class.WTF::Vector.393" = type { %"class.WTF::VectorBuffer.394" }
%"class.WTF::VectorBuffer.394" = type { %"class.WTF::VectorBufferBase.395" }
%"class.WTF::VectorBufferBase.395" = type { %"class.blink::Member.396"*, i32, i32 }
%"class.blink::Member.396" = type opaque
%"class.blink::Member.398" = type { %"class.blink::MemberBase.399" }
%"class.blink::MemberBase.399" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.400" = type { %"class.blink::MemberBase.401" }
%"class.blink::MemberBase.401" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.402", i32, i32 }
%"class.blink::HeapHashMap.402" = type { %"class.WTF::HashMap.405" }
%"class.WTF::HashMap.405" = type { %"class.WTF::HashTable.406" }
%"class.WTF::HashTable.406" = type <{ %"struct.WTF::KeyValuePair.408"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.408" = type opaque
%"class.std::__1::unique_ptr.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.412" }
%"class.std::__1::unique_ptr.412" = type { %"class.std::__1::__compressed_pair.413" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.415" }
%"class.WTF::Vector.415" = type { %"class.WTF::VectorBuffer.416" }
%"class.WTF::VectorBuffer.416" = type { %"class.WTF::VectorBufferBase.417" }
%"class.WTF::VectorBufferBase.417" = type { %"class.mojo::StructPtr.418"*, i32, i32 }
%"class.mojo::StructPtr.418" = type { %"class.std::__1::unique_ptr.419" }
%"class.std::__1::unique_ptr.419" = type { %"class.std::__1::__compressed_pair.420" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.422", %"class.WTF::HashMap.429", %"class.WTF::HashMap.434", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.439", i32, %"class.mojo::StructPtr.444", %"class.WTF::Vector.439" }
%"class.mojo::StructPtr.422" = type { %"class.std::__1::unique_ptr.423" }
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.429" = type { %"class.WTF::HashTable.430" }
%"class.WTF::HashTable.430" = type <{ %"struct.WTF::KeyValuePair.433"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.433" = type opaque
%"class.WTF::HashMap.434" = type { %"class.WTF::HashTable.435" }
%"class.WTF::HashTable.435" = type <{ %"struct.WTF::KeyValuePair.438"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.438" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.444" = type { %"class.std::__1::unique_ptr.445" }
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.439", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.459" }
%"class.std::__1::unique_ptr.459" = type { %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Supplementable.472" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.473" }
%"class.blink::HeapHashMap.473" = type { %"class.WTF::HashMap.476" }
%"class.WTF::HashMap.476" = type { %"class.WTF::HashTable.477" }
%"class.WTF::HashTable.477" = type <{ %"struct.WTF::KeyValuePair.479"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.479" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.488" = type { %"class.blink::MemberBase.489" }
%"class.blink::MemberBase.489" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.496" = type { %"class.blink::MemberBase.497" }
%"class.blink::MemberBase.497" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.498" = type { %"class.blink::MemberBase.499" }
%"class.blink::MemberBase.499" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.WTF::Vector.439" = type { %"class.WTF::VectorBuffer.440" }
%"class.WTF::VectorBuffer.440" = type { %"class.WTF::VectorBufferBase.441" }
%"class.WTF::VectorBufferBase.441" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.500" = type { %"class.blink::MemberBase.501" }
%"class.blink::MemberBase.501" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.502 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.504", i64, %"class.WTF::Vector.508", %"class.WTF::Vector.513", %"class.WTF::Vector.519", %"class.WTF::Vector.537", %class.scoped_refptr.340, %"class.WTF::HashMap.543", %"class.WTF::Vector.548", %"class.WTF::Vector.508", %"class.WTF::Vector.554", %"class.WTF::HashMap.559", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.503" }
%"class.base::RefCountedThreadSafe.503" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.504" = type { %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { i8* }
%"class.WTF::Vector.513" = type { %"class.WTF::VectorBuffer.514" }
%"class.WTF::VectorBuffer.514" = type { %"class.WTF::VectorBufferBase.515", [8 x i8] }
%"class.WTF::VectorBufferBase.515" = type { %class.scoped_refptr.516*, i32, i32 }
%class.scoped_refptr.516 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.519" = type { %"class.WTF::VectorBuffer.520" }
%"class.WTF::VectorBuffer.520" = type { %"class.WTF::VectorBufferBase.521" }
%"class.WTF::VectorBufferBase.521" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.523", %"class.std::__1::unique_ptr.529" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.523" = type { %"class.std::__1::__compressed_pair.524" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.525" }
%"struct.std::__1::__compressed_pair_elem.525" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.537" = type { %"class.WTF::VectorBuffer.538" }
%"class.WTF::VectorBuffer.538" = type { %"class.WTF::VectorBufferBase.539" }
%"class.WTF::VectorBufferBase.539" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.540", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.540" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type opaque
%"class.WTF::Vector.548" = type { %"class.WTF::VectorBuffer.549" }
%"class.WTF::VectorBuffer.549" = type { %"class.WTF::VectorBufferBase.550" }
%"class.WTF::VectorBufferBase.550" = type { %"class.mojo::ScopedHandleBase.551"*, i32, i32 }
%"class.mojo::ScopedHandleBase.551" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.508" = type { %"class.WTF::VectorBuffer.509" }
%"class.WTF::VectorBuffer.509" = type { %"class.WTF::VectorBufferBase.510", [16 x i8] }
%"class.WTF::VectorBufferBase.510" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.554" = type { %"class.WTF::VectorBuffer.555" }
%"class.WTF::VectorBuffer.555" = type { %"class.WTF::VectorBufferBase.556" }
%"class.WTF::VectorBufferBase.556" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.559" = type { %"class.WTF::HashTable.560" }
%"class.WTF::HashTable.560" = type <{ %"struct.WTF::KeyValuePair.563"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.563" = type { i8**, %"class.std::__1::unique_ptr.1575" }
%"class.std::__1::unique_ptr.1575" = type { %"class.std::__1::__compressed_pair.1576" }
%"class.std::__1::__compressed_pair.1576" = type { %"struct.std::__1::__compressed_pair_elem.1577" }
%"struct.std::__1::__compressed_pair_elem.1577" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.564" = type { %"class.WTF::HashSet.567" }
%"class.WTF::HashSet.567" = type { %"class.WTF::HashTable.568" }
%"class.WTF::HashTable.568" = type <{ %"class.blink::WeakMember.570"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.570" = type opaque
%"class.blink::Member.571" = type { %"class.blink::MemberBase.572" }
%"class.blink::MemberBase.572" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.578", %"class.blink::Member.578", %"class.blink::Member.580", %"class.blink::Member.582", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.573" }
%"class.absl::optional.573" = type { %"class.absl::optional_internal::optional_data.574" }
%"class.absl::optional_internal::optional_data.574" = type { %"class.absl::optional_internal::optional_data_base.575" }
%"class.absl::optional_internal::optional_data_base.575" = type { %"class.absl::optional_internal::optional_data_dtor_base.576" }
%"class.absl::optional_internal::optional_data_dtor_base.576" = type { i8, %union.anon.577 }
%"class.blink::Member.578" = type { %"class.blink::MemberBase.579" }
%"class.blink::MemberBase.579" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.580" = type { %"class.blink::MemberBase.581" }
%"class.blink::MemberBase.581" = type { %"class.blink::Event"* }
%"class.blink::Member.582" = type { %"class.blink::MemberBase.583" }
%"class.blink::MemberBase.583" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.584" = type { %"class.WTF::HashMap.587" }
%"class.WTF::HashMap.587" = type { %"class.WTF::HashTable.588" }
%"class.WTF::HashTable.588" = type <{ %"struct.WTF::KeyValuePair.590"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.590" = type opaque
%"class.std::__1::unique_ptr.591" = type { %"class.std::__1::__compressed_pair.592" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.603" = type { %"class.blink::MemberBase.604" }
%"class.blink::MemberBase.604" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.609", %"class.blink::CachedTextInputInfo", %"class.blink::Member.620", %"class.blink::Member.622", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.611", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.613", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.611" = type { %"class.blink::MemberBase.612" }
%"class.blink::MemberBase.612" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.613" = type { %"class.WTF::HashMap.616" }
%"class.WTF::HashMap.616" = type { %"class.WTF::HashTable.617" }
%"class.WTF::HashTable.617" = type <{ %"struct.WTF::KeyValuePair.619"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.619" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member", i32, i32 }
%"class.blink::Member.622" = type { %"class.blink::MemberBase.623" }
%"class.blink::MemberBase.623" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.624" = type { %"class.blink::MemberBase.625" }
%"class.blink::MemberBase.625" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.113", %"class.blink::Member.1094", %"class.blink::Member.1096" }
%"class.blink::Member.1094" = type { %"class.blink::MemberBase.1095" }
%"class.blink::MemberBase.1095" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1096" = type { %"class.blink::MemberBase.1097" }
%"class.blink::MemberBase.1097" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.626" = type { %"class.blink::MemberBase.627" }
%"class.blink::MemberBase.627" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.113", %"class.blink::HeapMojoRemote" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1090" }
%"class.blink::Member.1090" = type { %"class.blink::MemberBase.1091" }
%"class.blink::MemberBase.1091" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.628" = type { %"class.blink::MemberBase.629" }
%"class.blink::MemberBase.629" = type { %"class.blink::HeapHashMap.630"* }
%"class.blink::HeapHashMap.630" = type opaque
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.636" = type { %"class.WTF::HashTable.637" }
%"class.WTF::HashTable.637" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.642" }
%"class.WTF::VectorBuffer.642" = type { %"class.WTF::VectorBufferBase.643" }
%"class.WTF::VectorBufferBase.643" = type { i64*, i32, i32 }
%"class.blink::Member.382" = type { %"class.blink::MemberBase.383" }
%"class.blink::MemberBase.383" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.317", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.388", i32, i8, [3 x i8], %"class.blink::HeapVector.390", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.398", %"class.blink::Member.400", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.409", %"class.blink::Member.468", %"class.blink::Member.470", i8, [7 x i8] }>
%"class.blink::Member.644" = type { %"class.blink::MemberBase.645" }
%"class.blink::MemberBase.645" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.646" = type { %"class.blink::MemberBase.647" }
%"class.blink::MemberBase.647" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.648" = type { %"class.blink::MemberBase.649" }
%"class.blink::MemberBase.649" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.650" = type { %"class.blink::MemberBase.651" }
%"class.blink::MemberBase.651" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.658" = type { %"class.std::__1::__compressed_pair.659" }
%"class.std::__1::__compressed_pair.659" = type { %"struct.std::__1::__compressed_pair_elem.660" }
%"struct.std::__1::__compressed_pair_elem.660" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.652" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.blink::KURL"* }
%"class.blink::Member.664" = type { %"class.blink::MemberBase.665" }
%"class.blink::MemberBase.665" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.666" = type { %"class.blink::MemberBase.667" }
%"class.blink::MemberBase.667" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.63", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.65, %"class.WTF::Vector.66", %"class.WTF::Vector.66", %"class.blink::Member", %"class.blink::Member.71", %"class.blink::HeapHashSet", %"class.blink::Member.25", %"class.WTF::HashSet.79", %"class.WTF::TextPosition", %"class.blink::Member.83", %"class.blink::HeapVector.85", %"class.blink::Member.92" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.65 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.66" = type { %"class.WTF::VectorBuffer.67" }
%"class.WTF::VectorBuffer.67" = type { %"class.WTF::VectorBufferBase.68" }
%"class.WTF::VectorBufferBase.68" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.73" }
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.77" }
%"class.WTF::HashTable.77" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.1" }
%"class.WTF::HashSet.79" = type { %"class.WTF::HashTable.80" }
%"class.WTF::HashTable.80" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.83" = type { %"class.blink::MemberBase.84" }
%"class.blink::MemberBase.84" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.85" = type { %"class.WTF::Vector.88" }
%"class.WTF::Vector.88" = type { %"class.WTF::VectorBuffer.89" }
%"class.WTF::VectorBuffer.89" = type { %"class.WTF::VectorBufferBase.90" }
%"class.WTF::VectorBufferBase.90" = type { %"class.blink::Member.71"*, i32, i32 }
%"class.blink::Member.92" = type { %"class.blink::MemberBase.93" }
%"class.blink::MemberBase.93" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.668 }
%class.scoped_refptr.668 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.669" = type { %"class.WTF::VectorBuffer.670" }
%"class.WTF::VectorBuffer.670" = type { %"class.WTF::VectorBufferBase.671" }
%"class.WTF::VectorBufferBase.671" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.672 }
%class.scoped_refptr.672 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.673", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.673" = type { %"class.base::RefCounted.674" }
%"class.base::RefCounted.674" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.677" }
%"class.blink::HeapHashMap.677" = type { %"class.WTF::HashMap.680" }
%"class.WTF::HashMap.680" = type { %"class.WTF::HashTable.681" }
%"class.WTF::HashTable.681" = type <{ %"struct.WTF::KeyValuePair.683"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.683" = type { %"class.blink::WeakMember.684", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.684" = type { %"class.blink::MemberBase.685" }
%"class.blink::MemberBase.685" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.620" = type { %"class.blink::MemberBase.621" }
%"class.blink::MemberBase.621" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.25", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member", %"class.blink::Member", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.872" }
%"class.blink::HeapHashMap.872" = type { %"class.WTF::HashMap.875" }
%"class.WTF::HashMap.875" = type { %"class.WTF::HashTable.876" }
%"class.WTF::HashTable.876" = type <{ %"struct.WTF::KeyValuePair.878"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.878" = type opaque
%"class.blink::Member.879" = type { %"class.blink::MemberBase.880" }
%"class.blink::MemberBase.880" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.881" = type { %"class.WTF::HashSet.884" }
%"class.WTF::HashSet.884" = type { %"class.WTF::HashTable.885" }
%"class.WTF::HashTable.885" = type <{ %"class.blink::WeakMember.887"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.887" = type opaque
%"class.blink::HeapHashSet.888" = type { %"class.WTF::HashSet.891" }
%"class.WTF::HashSet.891" = type { %"class.WTF::HashTable.892" }
%"class.WTF::HashTable.892" = type <{ %"class.blink::WeakMember.894"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.894" = type opaque
%"class.blink::Member.895" = type { %"class.blink::MemberBase.896" }
%"class.blink::MemberBase.896" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.897" = type { %"class.blink::MemberBase.898" }
%"class.blink::MemberBase.898" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.899" = type { %"class.blink::MemberBase.900" }
%"class.blink::MemberBase.900" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.0", %"class.blink::HeapVector.55" }
%"class.blink::Member.901" = type { %"class.blink::MemberBase.902" }
%"class.blink::MemberBase.902" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.903" = type { %"class.blink::MemberBase.904" }
%"class.blink::MemberBase.904" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.905" = type { %"class.WTF::HashMap.908" }
%"class.WTF::HashMap.908" = type { %"class.WTF::HashTable.909" }
%"class.WTF::HashTable.909" = type <{ %"struct.WTF::KeyValuePair.911"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.911" = type opaque
%"class.WTF::Vector.912" = type { %"class.WTF::VectorBuffer.913" }
%"class.WTF::VectorBuffer.913" = type { %"class.WTF::VectorBufferBase.914" }
%"class.WTF::VectorBufferBase.914" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.923" = type { %"class.WTF::Vector.926" }
%"class.WTF::Vector.926" = type { %"class.WTF::VectorBuffer.927" }
%"class.WTF::VectorBuffer.927" = type { %"class.WTF::VectorBufferBase.928" }
%"class.WTF::VectorBufferBase.928" = type { %"class.blink::Member.929"*, i32, i32 }
%"class.blink::Member.929" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.937" = type { %"class.WTF::HashSet.940" }
%"class.WTF::HashSet.940" = type { %"class.WTF::HashTable.941" }
%"class.WTF::HashTable.941" = type <{ %"class.blink::WeakMember.943"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.943" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.944", i32, [4 x i8] }>
%"class.WTF::Vector.944" = type { %"class.WTF::VectorBuffer.945" }
%"class.WTF::VectorBuffer.945" = type { %"class.WTF::VectorBufferBase.946" }
%"class.WTF::VectorBufferBase.946" = type { %"struct.std::__1::pair.947"*, i32, i32 }
%"struct.std::__1::pair.947" = type opaque
%"class.blink::Member.950" = type { %"class.blink::MemberBase.951" }
%"class.blink::MemberBase.951" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.952" = type { %"class.WTF::VectorBuffer.953" }
%"class.WTF::VectorBuffer.953" = type { %"class.WTF::VectorBufferBase.954" }
%"class.WTF::VectorBufferBase.954" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.957" = type { %"class.std::__1::__compressed_pair.958" }
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.959" }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.40" }
%"class.WTF::Vector.40" = type { %"class.WTF::VectorBuffer.41" }
%"class.WTF::VectorBuffer.41" = type { %"class.WTF::VectorBufferBase.42" }
%"class.WTF::VectorBufferBase.42" = type { %"class.blink::Member.21"*, i32, i32 }
%"class.blink::HeapVector.963" = type { %"class.WTF::Vector.966" }
%"class.WTF::Vector.966" = type { %"class.WTF::VectorBuffer.967" }
%"class.WTF::VectorBuffer.967" = type { %"class.WTF::VectorBufferBase.968" }
%"class.WTF::VectorBufferBase.968" = type { %"class.blink::Member.969"*, i32, i32 }
%"class.blink::Member.969" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.25" }
%"class.blink::Member.971" = type { %"class.blink::MemberBase.972" }
%"class.blink::MemberBase.972" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.973" = type { %"class.blink::MemberBase.974" }
%"class.blink::MemberBase.974" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.975" = type { %"class.blink::MemberBase.976" }
%"class.blink::MemberBase.976" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.977" = type { %"class.blink::MemberBase.978" }
%"class.blink::MemberBase.978" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.979" = type { %"class.blink::MemberBase.980" }
%"class.blink::MemberBase.980" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"struct.WTF::KeyValuePair.985"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.985" = type opaque
%"class.blink::Member.986" = type { %"class.blink::MemberBase.987" }
%"class.blink::MemberBase.987" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.988" = type { %"class.blink::MemberBase.989" }
%"class.blink::MemberBase.989" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.990" = type { %"class.blink::MemberBase.991" }
%"class.blink::MemberBase.991" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.871", { i64, i64 } }
%"class.blink::WeakMember.871" = type { %"class.blink::MemberBase.26" }
%"class.blink::HeapHashSet.994" = type { %"class.WTF::HashSet.997" }
%"class.WTF::HashSet.997" = type { %"class.WTF::HashTable.998" }
%"class.WTF::HashTable.998" = type <{ %"class.blink::Member.1000"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1000" = type opaque
%"class.blink::Member.1001" = type { %"class.blink::MemberBase.1002" }
%"class.blink::MemberBase.1002" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1003" = type { %"class.blink::MemberBase.1004" }
%"class.blink::MemberBase.1004" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1005" = type { %"class.blink::MemberBase.1006" }
%"class.blink::MemberBase.1006" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1007" = type { %"class.blink::MemberBase.1008" }
%"class.blink::MemberBase.1008" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1009" = type { %"class.blink::MemberBase.1010" }
%"class.blink::MemberBase.1010" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1011" = type { %"class.std::__1::__compressed_pair.1012" }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.1013" }
%"struct.std::__1::__compressed_pair_elem.1013" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1017" = type { %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1027" = type { %"class.blink::MemberBase.1028" }
%"class.blink::MemberBase.1028" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1029" = type { %"class.blink::MemberBase.1030" }
%"class.blink::MemberBase.1030" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.631" = type { %"class.WTF::VectorBuffer.632" }
%"class.WTF::VectorBuffer.632" = type { %"class.WTF::VectorBufferBase.633" }
%"class.WTF::VectorBufferBase.633" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1031" = type { %"class.WTF::HashMap.1034" }
%"class.WTF::HashMap.1034" = type { %"class.WTF::HashTable.1035" }
%"class.WTF::HashTable.1035" = type <{ %"struct.WTF::KeyValuePair.1037"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1037" = type opaque
%"class.blink::Member.1038" = type { %"class.blink::MemberBase.1039" }
%"class.blink::MemberBase.1039" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1040" = type { %"class.std::__1::__compressed_pair.1041" }
%"class.std::__1::__compressed_pair.1041" = type { %"struct.std::__1::__compressed_pair_elem.1042" }
%"struct.std::__1::__compressed_pair_elem.1042" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1046" = type { %"class.blink::MemberBase.1047" }
%"class.blink::MemberBase.1047" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1050" = type { %"class.WTF::HashMap.1053" }
%"class.WTF::HashMap.1053" = type { %"class.WTF::HashTable.1054" }
%"class.WTF::HashTable.1054" = type <{ %"struct.WTF::KeyValuePair.1056"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1056" = type opaque
%"class.blink::HeapObserverSet.1057" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1058" }
%"class.blink::HeapHashSet.1058" = type { %"class.WTF::HashSet.1061" }
%"class.WTF::HashSet.1061" = type { %"class.WTF::HashTable.1062" }
%"class.WTF::HashTable.1062" = type <{ %"class.blink::WeakMember.1064"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1064" = type opaque
%"class.blink::Member.1065" = type { %"class.blink::MemberBase.1066" }
%"class.blink::MemberBase.1066" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1067" = type { %"class.blink::MemberBase.1068" }
%"class.blink::MemberBase.1068" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.25", %"class.blink::HeapHashSet.1074", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1081", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1074" = type { %"class.WTF::HashSet.1077" }
%"class.WTF::HashSet.1077" = type { %"class.WTF::HashTable.1078" }
%"class.WTF::HashTable.1078" = type <{ %"class.blink::Member.1080"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1080" = type opaque
%"class.blink::HeapTaskRunnerTimer.1081" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1082", { i64, i64 } }
%"class.blink::WeakMember.1082" = type { %"class.blink::MemberBase.1068" }
%"class.blink::WeakMember.1069" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Member.1070" = type { %"class.blink::MemberBase.1071" }
%"class.blink::MemberBase.1071" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.34" }
%"class.blink::Member.34" = type { %"class.blink::MemberBase.35" }
%"class.blink::MemberBase.35" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.21", i32, %"class.blink::HeapVector" }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.50" }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::HeapHashMap.52"* }
%"class.blink::HeapHashMap.52" = type opaque
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.55" = type { %"class.WTF::Vector.58" }
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60" }
%"class.WTF::VectorBufferBase.60" = type { %"class.blink::Member.61"*, i32, i32 }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.12", %"class.blink::Member.14", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.12" = type { %"class.WTF::SingleThreadedBitField.13" }
%"class.WTF::SingleThreadedBitField.13" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.17", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.17" = type { %"class.base::RefCounted.18" }
%"class.base::RefCounted.18" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::DOMURLUtils.base" = type <{ %"class.blink::DOMURLUtilsReadOnly", i8 }>
%"class.blink::DOMURLUtilsReadOnly" = type { i32 (...)** }
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::RelList"* }
%"class.blink::RelList" = type { %"class.blink::DOMTokenList.base", [7 x i8] }
%"class.blink::DOMTokenList.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::SpaceSplitString", %"class.blink::Member.21", %"class.blink::QualifiedName", i8 }>
%"class.absl::optional.1564" = type { %"class.absl::optional_internal::optional_data.1565" }
%"class.absl::optional_internal::optional_data.1565" = type { %"class.absl::optional_internal::optional_data_base.1566" }
%"class.absl::optional_internal::optional_data_base.1566" = type { %"class.absl::optional_internal::optional_data_dtor_base.1567" }
%"class.absl::optional_internal::optional_data_dtor_base.1567" = type { i8, %union.anon.1568 }
%union.anon.1568 = type { %"class.WTF::String" }
%"class.absl::optional.1559" = type { %"class.absl::optional_internal::optional_data.1560" }
%"class.absl::optional_internal::optional_data.1560" = type { %"class.absl::optional_internal::optional_data_base.1561" }
%"class.absl::optional_internal::optional_data_base.1561" = type { %"class.absl::optional_internal::optional_data_dtor_base.1562" }
%"class.absl::optional_internal::optional_data_dtor_base.1562" = type { i8, %union.anon.1563 }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.14", %"class.WTF::Vector.1642" }
%"class.WTF::Vector.1642" = type { %"class.WTF::VectorBuffer.1643" }
%"class.WTF::VectorBuffer.1643" = type { %"class.WTF::VectorBufferBase.1644", [64 x i8] }
%"class.WTF::VectorBufferBase.1644" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.1650", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.1662", %"class.WTF::Vector.1663" }
%"class.std::__1::unique_ptr.1650" = type { %"class.std::__1::__compressed_pair.1651" }
%"class.std::__1::__compressed_pair.1651" = type { %"struct.std::__1::__compressed_pair_elem.1652" }
%"struct.std::__1::__compressed_pair_elem.1652" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.1653", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1653" = type { %"class.std::__1::__compressed_pair.1654" }
%"class.std::__1::__compressed_pair.1654" = type { %"struct.std::__1::__compressed_pair_elem.1655" }
%"struct.std::__1::__compressed_pair_elem.1655" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.1662" = type { %"class.blink::MemberBase.610" }
%"class.WTF::Vector.1663" = type { %"class.WTF::VectorBuffer.1664" }
%"class.WTF::VectorBuffer.1664" = type { %"class.WTF::VectorBufferBase.1431" }
%"struct.blink::ImpressionFeatures" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::AttributionSourceParams" = type { %"class.blink::IDLDictionaryBase", i8, i8, %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", i64 }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

@__const._ZN5blink22GetImpressionForAnchorEPNS_17HTMLAnchorElementE.expiry = private unnamed_addr constant { { { { i8, [7 x i8], %union.anon.577 } } } } { { { { i8, [7 x i8], %union.anon.577 } } } { { { i8, [7 x i8], %union.anon.577 } } { { i8, [7 x i8], %union.anon.577 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.577 { i64 -6148914691236517206 } } } } }, align 8
@_ZN5blink10html_names22kAttributionexpiryAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@__const._ZN5blink22GetImpressionForAnchorEPNS_17HTMLAnchorElementE.priority = private unnamed_addr constant { { { { i8, [7 x i8], %union.anon.1563 } } } } { { { { i8, [7 x i8], %union.anon.1563 } } } { { { i8, [7 x i8], %union.anon.1563 } } { { i8, [7 x i8], %union.anon.1563 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.1563 { i64 -6148914691236517206 } } } } }, align 8
@_ZN5blink10html_names30kAttributionsourcepriorityAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names29kAttributionsourceeventidAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names27kAttributiondestinationAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names24kAttributionreporttoAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str = private unnamed_addr constant [97 x i8] c"The 'attribution-reporting' permissions policy must be enabled to declare an attribution source.\00", align 1
@__const._ZN5blink12_GLOBAL__N_113GetImpressionEPNS_16ExecutionContextERKN3WTF6StringES6_RKN4absl8optionalIS4_EENS8_ImEENS8_IlEEPNS_17HTMLAnchorElementE.expiry = private unnamed_addr constant { { { { i8, [7 x i8], %union.anon.268 } } } } { { { { i8, [7 x i8], %union.anon.268 } } } { { { i8, [7 x i8], %union.anon.268 } } { { i8, [7 x i8], %union.anon.268 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.268 { %"class.base::TimeDelta" { i64 -6148914691236517206 } } } } } }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.2 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.3 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22GetImpressionForAnchorEPNS_17HTMLAnchorElementE(%"class.absl::optional.1549"* noalias sret, %"class.blink::HTMLAnchorElement"*) local_unnamed_addr #0 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca [7 x i8], align 1
  %6 = alloca [7 x i8], align 1
  %7 = alloca [7 x i8], align 1
  %8 = alloca [7 x i8], align 1
  %9 = alloca %"class.absl::optional.1564", align 8
  %10 = alloca %"class.absl::optional.573", align 8
  %11 = alloca %"class.absl::optional.1559", align 8
  %12 = getelementptr inbounds [7 x i8], [7 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %12)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 getelementptr inbounds ({ { { { i8, [7 x i8], %union.anon.577 } } } }, { { { { i8, [7 x i8], %union.anon.577 } } } }* @__const._ZN5blink22GetImpressionForAnchorEPNS_17HTMLAnchorElementE.expiry, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false)
  %13 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %1, i64 0, i32 0, i32 0
  %14 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names22kAttributionexpiryAttrE, align 8
  %15 = tail call zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %13, %"class.blink::QualifiedName"* dereferenceable(8) %14) #7
  br i1 %15, label %16, label %78

16:                                               ; preds = %2
  %17 = getelementptr inbounds [7 x i8], [7 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %17)
  %18 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %18, align 8
  %20 = icmp eq %"class.blink::ElementData"* %19, null
  br i1 %20, label %71, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %19, i64 0, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %21
  %27 = bitcast %"class.blink::ElementData"* %19 to %"class.blink::UniqueElementData"*
  %28 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %19, i64 1, i32 1
  %29 = bitcast %"class.blink::Member.14"* %28 to %"class.blink::Attribute"**
  %30 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %27, i64 0, i32 2, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  br label %38

33:                                               ; preds = %21
  %34 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %19, i64 1
  %35 = bitcast %"class.blink::ElementData"* %34 to %"class.blink::Attribute"*
  %36 = lshr i32 %23, 1
  %37 = and i32 %36, 268435455
  br label %38

38:                                               ; preds = %33, %26
  %39 = phi %"class.blink::Attribute"* [ %35, %33 ], [ %30, %26 ]
  %40 = phi i32 [ %37, %33 ], [ %32, %26 ]
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %39, i64 %41
  %43 = icmp eq i32 %40, 0
  br i1 %43, label %71, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %14, i64 0, i32 0, i32 0
  %46 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %49

49:                                               ; preds = %64, %44
  %50 = phi %"class.blink::Attribute"* [ %39, %44 ], [ %65, %64 ]
  %51 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %51, align 8
  %53 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %52, %46
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %56, %57
  br i1 %58, label %59, label %64

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %52, i64 0, i32 4, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %61, %62
  br i1 %63, label %67, label %64

64:                                               ; preds = %59, %54
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %50, i64 1
  %66 = icmp eq %"class.blink::Attribute"* %65, %42
  br i1 %66, label %71, label %49

67:                                               ; preds = %59, %49
  %68 = icmp eq %"class.blink::Attribute"* %50, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %50, i64 0, i32 1
  br label %73

71:                                               ; preds = %64, %67, %38, %16
  %72 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %73

73:                                               ; preds = %69, %71
  %74 = phi %"class.WTF::AtomicString"* [ %72, %71 ], [ %70, %69 ]
  %75 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %74, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #7
  store i8 0, i8* %4, align 1
  %76 = call i64 @_ZNK3WTF6String14ToUInt64StrictEPb(%"class.WTF::String"* %75, i8* nonnull %4) #7
  %77 = load i8, i8* %4, align 1, !range !2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* nonnull align 1 %17, i64 7, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %17)
  br label %78

78:                                               ; preds = %73, %2
  %79 = phi i64 [ %76, %73 ], [ -6148914691236517206, %2 ]
  %80 = phi i8 [ %77, %73 ], [ 0, %2 ]
  %81 = getelementptr inbounds [7 x i8], [7 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %81)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %81, i8* align 1 getelementptr inbounds ({ { { { i8, [7 x i8], %union.anon.1563 } } } }, { { { { i8, [7 x i8], %union.anon.1563 } } } }* @__const._ZN5blink22GetImpressionForAnchorEPNS_17HTMLAnchorElementE.priority, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false)
  %82 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names30kAttributionsourcepriorityAttrE, align 8
  %83 = call zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %13, %"class.blink::QualifiedName"* dereferenceable(8) %82) #7
  br i1 %83, label %84, label %146

84:                                               ; preds = %78
  %85 = getelementptr inbounds [7 x i8], [7 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %85)
  %86 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %87 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %86, align 8
  %88 = icmp eq %"class.blink::ElementData"* %87, null
  br i1 %88, label %139, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %87, i64 0, i32 0, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %101, label %94

94:                                               ; preds = %89
  %95 = bitcast %"class.blink::ElementData"* %87 to %"class.blink::UniqueElementData"*
  %96 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %87, i64 1, i32 1
  %97 = bitcast %"class.blink::Member.14"* %96 to %"class.blink::Attribute"**
  %98 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %95, i64 0, i32 2, i32 0, i32 0, i32 2
  %100 = load i32, i32* %99, align 4
  br label %106

101:                                              ; preds = %89
  %102 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %87, i64 1
  %103 = bitcast %"class.blink::ElementData"* %102 to %"class.blink::Attribute"*
  %104 = lshr i32 %91, 1
  %105 = and i32 %104, 268435455
  br label %106

106:                                              ; preds = %101, %94
  %107 = phi %"class.blink::Attribute"* [ %103, %101 ], [ %98, %94 ]
  %108 = phi i32 [ %105, %101 ], [ %100, %94 ]
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %107, i64 %109
  %111 = icmp eq i32 %108, 0
  br i1 %111, label %139, label %112

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %82, i64 0, i32 0, i32 0
  %114 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %113, align 8
  %115 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %114, i64 0, i32 3, i32 0, i32 0, i32 0
  %116 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %114, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %117

117:                                              ; preds = %132, %112
  %118 = phi %"class.blink::Attribute"* [ %107, %112 ], [ %133, %132 ]
  %119 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %118, i64 0, i32 0, i32 0, i32 0
  %120 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %119, align 8
  %121 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %120, %114
  br i1 %121, label %135, label %122

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %120, i64 0, i32 3, i32 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %124, %125
  br i1 %126, label %127, label %132

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %120, i64 0, i32 4, i32 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %129, %130
  br i1 %131, label %135, label %132

132:                                              ; preds = %127, %122
  %133 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %118, i64 1
  %134 = icmp eq %"class.blink::Attribute"* %133, %110
  br i1 %134, label %139, label %117

135:                                              ; preds = %127, %117
  %136 = icmp eq %"class.blink::Attribute"* %118, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %135
  %138 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %118, i64 0, i32 1
  br label %141

139:                                              ; preds = %132, %135, %106, %84
  %140 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %141

141:                                              ; preds = %137, %139
  %142 = phi %"class.WTF::AtomicString"* [ %140, %139 ], [ %138, %137 ]
  %143 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %142, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #7
  store i8 0, i8* %3, align 1
  %144 = call i64 @_ZNK3WTF6String13ToInt64StrictEPb(%"class.WTF::String"* %143, i8* nonnull %3) #7
  %145 = load i8, i8* %3, align 1, !range !2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %81, i8* nonnull align 1 %85, i64 7, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %85)
  br label %146

146:                                              ; preds = %141, %78
  %147 = phi i64 [ %144, %141 ], [ -6148914691236517206, %78 ]
  %148 = phi i8 [ %145, %141 ], [ 0, %78 ]
  %149 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %150 = bitcast %"class.blink::HTMLAnchorElement"* %1 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %151 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %150, align 8
  %152 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %151, i64 10
  %153 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %152, align 8
  %154 = call %"class.blink::ExecutionContext"* %153(%"class.blink::Node"* %149) #7
  %155 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names29kAttributionsourceeventidAttrE, align 8
  %156 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %157 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %156, align 8
  %158 = icmp eq %"class.blink::ElementData"* %157, null
  br i1 %158, label %209, label %159

159:                                              ; preds = %146
  %160 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %157, i64 0, i32 0, i32 0, i32 0
  %161 = load i32, i32* %160, align 4
  %162 = and i32 %161, 1
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %171, label %164

164:                                              ; preds = %159
  %165 = bitcast %"class.blink::ElementData"* %157 to %"class.blink::UniqueElementData"*
  %166 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %157, i64 1, i32 1
  %167 = bitcast %"class.blink::Member.14"* %166 to %"class.blink::Attribute"**
  %168 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %167, align 8
  %169 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %165, i64 0, i32 2, i32 0, i32 0, i32 2
  %170 = load i32, i32* %169, align 4
  br label %176

171:                                              ; preds = %159
  %172 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %157, i64 1
  %173 = bitcast %"class.blink::ElementData"* %172 to %"class.blink::Attribute"*
  %174 = lshr i32 %161, 1
  %175 = and i32 %174, 268435455
  br label %176

176:                                              ; preds = %171, %164
  %177 = phi %"class.blink::Attribute"* [ %173, %171 ], [ %168, %164 ]
  %178 = phi i32 [ %175, %171 ], [ %170, %164 ]
  %179 = zext i32 %178 to i64
  %180 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %177, i64 %179
  %181 = icmp eq i32 %178, 0
  br i1 %181, label %209, label %182

182:                                              ; preds = %176
  %183 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %155, i64 0, i32 0, i32 0
  %184 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %183, align 8
  %185 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %184, i64 0, i32 3, i32 0, i32 0, i32 0
  %186 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %184, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %187

187:                                              ; preds = %202, %182
  %188 = phi %"class.blink::Attribute"* [ %177, %182 ], [ %203, %202 ]
  %189 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %188, i64 0, i32 0, i32 0, i32 0
  %190 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %189, align 8
  %191 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %190, %184
  br i1 %191, label %205, label %192

192:                                              ; preds = %187
  %193 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %190, i64 0, i32 3, i32 0, i32 0, i32 0
  %194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %193, align 8
  %195 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %185, align 8
  %196 = icmp eq %"class.WTF::StringImpl"* %194, %195
  br i1 %196, label %197, label %202

197:                                              ; preds = %192
  %198 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %190, i64 0, i32 4, i32 0, i32 0, i32 0
  %199 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %198, align 8
  %200 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %186, align 8
  %201 = icmp eq %"class.WTF::StringImpl"* %199, %200
  br i1 %201, label %205, label %202

202:                                              ; preds = %197, %192
  %203 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %188, i64 1
  %204 = icmp eq %"class.blink::Attribute"* %203, %180
  br i1 %204, label %209, label %187

205:                                              ; preds = %197, %187
  %206 = icmp eq %"class.blink::Attribute"* %188, null
  br i1 %206, label %209, label %207

207:                                              ; preds = %205
  %208 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %188, i64 0, i32 1
  br label %211

209:                                              ; preds = %202, %205, %176, %146
  %210 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %211

211:                                              ; preds = %207, %209
  %212 = phi %"class.WTF::AtomicString"* [ %210, %209 ], [ %208, %207 ]
  %213 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %212, i64 0, i32 0
  %214 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names27kAttributiondestinationAttrE, align 8
  br i1 %158, label %265, label %215

215:                                              ; preds = %211
  %216 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %157, i64 0, i32 0, i32 0, i32 0
  %217 = load i32, i32* %216, align 4
  %218 = and i32 %217, 1
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %227, label %220

220:                                              ; preds = %215
  %221 = bitcast %"class.blink::ElementData"* %157 to %"class.blink::UniqueElementData"*
  %222 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %157, i64 1, i32 1
  %223 = bitcast %"class.blink::Member.14"* %222 to %"class.blink::Attribute"**
  %224 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %223, align 8
  %225 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %221, i64 0, i32 2, i32 0, i32 0, i32 2
  %226 = load i32, i32* %225, align 4
  br label %232

227:                                              ; preds = %215
  %228 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %157, i64 1
  %229 = bitcast %"class.blink::ElementData"* %228 to %"class.blink::Attribute"*
  %230 = lshr i32 %217, 1
  %231 = and i32 %230, 268435455
  br label %232

232:                                              ; preds = %227, %220
  %233 = phi %"class.blink::Attribute"* [ %229, %227 ], [ %224, %220 ]
  %234 = phi i32 [ %231, %227 ], [ %226, %220 ]
  %235 = zext i32 %234 to i64
  %236 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %233, i64 %235
  %237 = icmp eq i32 %234, 0
  br i1 %237, label %265, label %238

238:                                              ; preds = %232
  %239 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %214, i64 0, i32 0, i32 0
  %240 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %239, align 8
  %241 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %240, i64 0, i32 3, i32 0, i32 0, i32 0
  %242 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %240, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %243

243:                                              ; preds = %258, %238
  %244 = phi %"class.blink::Attribute"* [ %233, %238 ], [ %259, %258 ]
  %245 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %244, i64 0, i32 0, i32 0, i32 0
  %246 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %245, align 8
  %247 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %246, %240
  br i1 %247, label %261, label %248

248:                                              ; preds = %243
  %249 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %246, i64 0, i32 3, i32 0, i32 0, i32 0
  %250 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %249, align 8
  %251 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %241, align 8
  %252 = icmp eq %"class.WTF::StringImpl"* %250, %251
  br i1 %252, label %253, label %258

253:                                              ; preds = %248
  %254 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %246, i64 0, i32 4, i32 0, i32 0, i32 0
  %255 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %254, align 8
  %256 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %242, align 8
  %257 = icmp eq %"class.WTF::StringImpl"* %255, %256
  br i1 %257, label %261, label %258

258:                                              ; preds = %253, %248
  %259 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %244, i64 1
  %260 = icmp eq %"class.blink::Attribute"* %259, %236
  br i1 %260, label %265, label %243

261:                                              ; preds = %253, %243
  %262 = icmp eq %"class.blink::Attribute"* %244, null
  br i1 %262, label %265, label %263

263:                                              ; preds = %261
  %264 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %244, i64 0, i32 1
  br label %267

265:                                              ; preds = %258, %261, %232, %211
  %266 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %267

267:                                              ; preds = %263, %265
  %268 = phi %"class.WTF::AtomicString"* [ %266, %265 ], [ %264, %263 ]
  %269 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %268, i64 0, i32 0
  %270 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %270) #7
  %271 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names24kAttributionreporttoAttrE, align 8
  %272 = call zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %13, %"class.blink::QualifiedName"* dereferenceable(8) %271) #7
  br i1 %272, label %273, label %351

273:                                              ; preds = %267
  %274 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %156, align 8
  %275 = icmp eq %"class.blink::ElementData"* %274, null
  br i1 %275, label %326, label %276

276:                                              ; preds = %273
  %277 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %274, i64 0, i32 0, i32 0, i32 0
  %278 = load i32, i32* %277, align 4
  %279 = and i32 %278, 1
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %288, label %281

281:                                              ; preds = %276
  %282 = bitcast %"class.blink::ElementData"* %274 to %"class.blink::UniqueElementData"*
  %283 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %274, i64 1, i32 1
  %284 = bitcast %"class.blink::Member.14"* %283 to %"class.blink::Attribute"**
  %285 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %284, align 8
  %286 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %282, i64 0, i32 2, i32 0, i32 0, i32 2
  %287 = load i32, i32* %286, align 4
  br label %293

288:                                              ; preds = %276
  %289 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %274, i64 1
  %290 = bitcast %"class.blink::ElementData"* %289 to %"class.blink::Attribute"*
  %291 = lshr i32 %278, 1
  %292 = and i32 %291, 268435455
  br label %293

293:                                              ; preds = %288, %281
  %294 = phi %"class.blink::Attribute"* [ %290, %288 ], [ %285, %281 ]
  %295 = phi i32 [ %292, %288 ], [ %287, %281 ]
  %296 = zext i32 %295 to i64
  %297 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %294, i64 %296
  %298 = icmp eq i32 %295, 0
  br i1 %298, label %326, label %299

299:                                              ; preds = %293
  %300 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %271, i64 0, i32 0, i32 0
  %301 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %300, align 8
  %302 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %301, i64 0, i32 3, i32 0, i32 0, i32 0
  %303 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %301, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %304

304:                                              ; preds = %319, %299
  %305 = phi %"class.blink::Attribute"* [ %294, %299 ], [ %320, %319 ]
  %306 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %305, i64 0, i32 0, i32 0, i32 0
  %307 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %306, align 8
  %308 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %307, %301
  br i1 %308, label %322, label %309

309:                                              ; preds = %304
  %310 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %307, i64 0, i32 3, i32 0, i32 0, i32 0
  %311 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %310, align 8
  %312 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %302, align 8
  %313 = icmp eq %"class.WTF::StringImpl"* %311, %312
  br i1 %313, label %314, label %319

314:                                              ; preds = %309
  %315 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %307, i64 0, i32 4, i32 0, i32 0, i32 0
  %316 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %315, align 8
  %317 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %303, align 8
  %318 = icmp eq %"class.WTF::StringImpl"* %316, %317
  br i1 %318, label %322, label %319

319:                                              ; preds = %314, %309
  %320 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %305, i64 1
  %321 = icmp eq %"class.blink::Attribute"* %320, %297
  br i1 %321, label %326, label %304

322:                                              ; preds = %314, %304
  %323 = icmp eq %"class.blink::Attribute"* %305, null
  br i1 %323, label %326, label %324

324:                                              ; preds = %322
  %325 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %305, i64 0, i32 1
  br label %328

326:                                              ; preds = %319, %322, %293, %273
  %327 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %328

328:                                              ; preds = %324, %326
  %329 = phi %"class.WTF::AtomicString"* [ %327, %326 ], [ %325, %324 ]
  store i8 1, i8* %270, align 8, !alias.scope !3
  %330 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %329, i64 0, i32 0, i32 0, i32 0
  %331 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %330, align 8, !noalias !3
  %332 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %331, %"class.WTF::StringImpl"** %332, align 8, !alias.scope !3
  %333 = icmp eq %"class.WTF::StringImpl"* %331, null
  br i1 %333, label %352, label %334

334:                                              ; preds = %328
  %335 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %331, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %336 = load atomic i32, i32* %335 monotonic, align 4, !noalias !3
  %337 = and i32 %336, 2
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %339, label %352

339:                                              ; preds = %334
  %340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %331, i64 0, i32 0
  %341 = load i32, i32* %340, align 4, !noalias !3
  %342 = zext i32 %341 to i33
  %343 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %342, i33 1) #7
  %344 = extractvalue { i33, i1 } %343, 1
  %345 = extractvalue { i33, i1 } %343, 0
  %346 = icmp slt i33 %345, 0
  %347 = or i1 %344, %346
  br i1 %347, label %348, label %349, !prof !6

348:                                              ; preds = %339
  call void @llvm.trap() #7, !noalias !3
  unreachable

349:                                              ; preds = %339
  %350 = trunc i33 %345 to i32
  store i32 %350, i32* %340, align 4, !noalias !3
  br label %352

351:                                              ; preds = %267
  store i8 0, i8* %270, align 8
  br label %352

352:                                              ; preds = %349, %334, %328, %351
  %353 = getelementptr inbounds %"class.absl::optional.573", %"class.absl::optional.573"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 %80, i8* %353, align 8
  %354 = getelementptr inbounds i8, i8* %353, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %354, i8* nonnull align 1 %12, i64 7, i1 false)
  %355 = getelementptr inbounds %"class.absl::optional.573", %"class.absl::optional.573"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %79, i64* %355, align 8
  %356 = getelementptr inbounds %"class.absl::optional.1559", %"class.absl::optional.1559"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 %148, i8* %356, align 8
  %357 = getelementptr inbounds i8, i8* %356, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %357, i8* nonnull align 1 %81, i64 7, i1 false)
  %358 = getelementptr inbounds %"class.absl::optional.1559", %"class.absl::optional.1559"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %147, i64* %358, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_113GetImpressionEPNS_16ExecutionContextERKN3WTF6StringES6_RKN4absl8optionalIS4_EENS8_ImEENS8_IlEEPNS_17HTMLAnchorElementE(%"class.absl::optional.1549"* sret %0, %"class.blink::ExecutionContext"* %154, %"class.WTF::String"* dereferenceable(8) %213, %"class.WTF::String"* dereferenceable(8) %269, %"class.absl::optional.1564"* nonnull dereferenceable(16) %9, %"class.absl::optional.573"* nonnull byval(%"class.absl::optional.573") align 8 %10, %"class.absl::optional.1559"* nonnull byval(%"class.absl::optional.1559") align 8 %11, %"class.blink::HTMLAnchorElement"* %1)
  %359 = load i8, i8* %270, align 8, !range !2
  %360 = icmp eq i8 %359, 0
  br i1 %360, label %379, label %361

361:                                              ; preds = %352
  %362 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %363 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %362, align 8
  %364 = icmp eq %"class.WTF::StringImpl"* %363, null
  br i1 %364, label %378, label %365

365:                                              ; preds = %361
  %366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %363, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %367 = load atomic i32, i32* %366 monotonic, align 4
  %368 = and i32 %367, 2
  %369 = icmp eq i32 %368, 0
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %363, i64 0, i32 0
  %371 = load i32, i32* %370, align 4
  br i1 %369, label %372, label %374

372:                                              ; preds = %365
  %373 = add i32 %371, -1
  store i32 %373, i32* %370, align 4
  br label %374

374:                                              ; preds = %372, %365
  %375 = phi i32 [ %373, %372 ], [ %371, %365 ]
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %377, label %378

377:                                              ; preds = %374
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %363) #7
  br label %378

378:                                              ; preds = %377, %374, %361
  store i8 0, i8* %270, align 8
  br label %379

379:                                              ; preds = %352, %378
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %270) #7
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %81)
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %12)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_113GetImpressionEPNS_16ExecutionContextERKN3WTF6StringES6_RKN4absl8optionalIS4_EENS8_ImEENS8_IlEEPNS_17HTMLAnchorElementE(%"class.absl::optional.1549"* noalias sret, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.absl::optional.1564"* dereferenceable(16), %"class.absl::optional.573"* nocapture readonly byval(%"class.absl::optional.573") align 8, %"class.absl::optional.1559"* nocapture readonly byval(%"class.absl::optional.1559") align 8, %"class.blink::HTMLAnchorElement"*) unnamed_addr #0 {
  %9 = alloca %"class.absl::optional.1123", align 8
  %10 = alloca %"class.absl::optional.1564", align 8
  %11 = alloca %"class.absl::optional.1564", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.absl::optional.1123", align 8
  %14 = alloca %"class.absl::optional.1564", align 8
  %15 = alloca %"class.absl::optional.1564", align 8
  %16 = alloca %"class.absl::optional.1123", align 8
  %17 = alloca %"class.absl::optional.1564", align 8
  %18 = alloca %"class.absl::optional.1564", align 8
  %19 = alloca %"class.absl::optional.1123", align 8
  %20 = alloca %"class.absl::optional.1564", align 8
  %21 = alloca %"class.absl::optional.1564", align 8
  %22 = alloca i8, align 1
  %23 = alloca %"class.absl::optional.1123", align 8
  %24 = alloca %"class.absl::optional.1564", align 8
  %25 = alloca %"class.absl::optional.1564", align 8
  %26 = alloca %"class.absl::optional.1554", align 8
  %27 = alloca %"class.absl::optional.1123", align 8
  %28 = alloca %"class.absl::optional.1564", align 8
  %29 = alloca %"class.absl::optional.1564", align 8
  %30 = alloca %"struct.blink::WebImpression", align 8
  %31 = icmp eq %"class.blink::ExecutionContext"* %1, null
  %32 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 0, i32 4
  %33 = select i1 %31, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %32
  %34 = tail call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase28ConversionMeasurementEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %33) #7
  br i1 %34, label %39, label %35

35:                                               ; preds = %8
  %36 = getelementptr inbounds %"class.absl::optional.1549", %"class.absl::optional.1549"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds %"class.absl::optional.1549", %"class.absl::optional.1549"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %38 = bitcast %union.anon.1553* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 56, i1 false) #7
  br label %653

39:                                               ; preds = %8
  br i1 %31, label %49, label %40

40:                                               ; preds = %39
  %41 = bitcast %"class.blink::ExecutionContext"* %1 to i1 (%"class.blink::ExecutionContext"*)***
  %42 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %41, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %42, i64 1
  %44 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.blink::ExecutionContext"* nonnull %1) #7
  br i1 %45, label %46, label %49

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 -1, i32 8
  %48 = icmp eq i32* %47, null
  br i1 %48, label %49, label %53

49:                                               ; preds = %39, %40, %46
  %50 = getelementptr inbounds %"class.absl::optional.1549", %"class.absl::optional.1549"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %50, align 8
  %51 = getelementptr inbounds %"class.absl::optional.1549", %"class.absl::optional.1549"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %52 = bitcast %union.anon.1553* %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 56, i1 false) #7
  br label %653

53:                                               ; preds = %46
  %54 = getelementptr inbounds i32, i32* %47, i64 18
  %55 = bitcast i32* %54 to %"class.blink::LocalFrame"**
  %56 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %55, align 8
  %57 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %58 = tail call zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom24PermissionsPolicyFeatureENS_13ReportOptionsERKN3WTF6StringE(%"class.blink::ExecutionContext"* nonnull %1, i32 73, i32 1, %"class.WTF::String"* dereferenceable(8) %57) #7
  br i1 %58, label %147, label %59

59:                                               ; preds = %53
  %60 = tail call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %56) #7
  %61 = icmp eq %"class.blink::LocalDOMWindow"* %60, null
  %62 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %60, i64 0, i32 1
  %63 = bitcast %"class.blink::ExecutionContext.base"* %62 to %"class.blink::ExecutionContext"*
  %64 = select i1 %61, %"class.blink::ExecutionContext"* null, %"class.blink::ExecutionContext"* %63
  %65 = getelementptr inbounds %"class.absl::optional.1123", %"class.absl::optional.1123"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #7
  %66 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %56, i64 0, i32 0, i32 24
  store i8 1, i8* %65, align 8
  %67 = getelementptr inbounds %"class.absl::optional.1123", %"class.absl::optional.1123"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %68 = bitcast %"class.base::UnguessableToken"* %67 to i8*
  %69 = bitcast %"class.base::UnguessableToken"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 16, i1 false) #7
  %70 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %7, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #7
  store i8 0, i8* %71, align 8
  %72 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #7
  store i8 0, i8* %72, align 8
  call void @_ZN5blink11AuditsIssue22ReportAttributionIssueEPNS_16ExecutionContextENS_29AttributionReportingIssueTypeERKN4absl8optionalIN4base16UnguessableTokenEEEPNS_7ElementERKNS5_IN3WTF6StringEEESH_(%"class.blink::ExecutionContext"* %64, i32 0, %"class.absl::optional.1123"* nonnull dereferenceable(24) %9, %"class.blink::Element"* %70, %"class.absl::optional.1564"* nonnull dereferenceable(16) %10, %"class.absl::optional.1564"* nonnull dereferenceable(16) %11) #7
  %73 = load i8, i8* %72, align 8, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %93, label %75

75:                                               ; preds = %59
  %76 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #7
  br label %92

92:                                               ; preds = %91, %88, %75
  store i8 0, i8* %72, align 8
  br label %93

93:                                               ; preds = %59, %92
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #7
  %94 = load i8, i8* %71, align 8, !range !2
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %114, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #7
  br label %113

113:                                              ; preds = %112, %109, %96
  store i8 0, i8* %71, align 8
  br label %114

114:                                              ; preds = %93, %113
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #7
  %115 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #7
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %116, align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str, i64 0, i64 0), i64 96) #7
  %117 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #7
  %118 = bitcast i8* %117 to %"class.blink::ConsoleMessage"*
  %119 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #7
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %118, i32 8, i32 3, %"class.WTF::String"* nonnull dereferenceable(8) %12, %"class.blink::SourceLocation"* %119) #7
  %120 = getelementptr inbounds i8, i8* %117, i64 -4
  %121 = bitcast i8* %120 to i16*
  %122 = load atomic i16, i16* %121 monotonic, align 2
  %123 = or i16 %122, 1
  store atomic i16 %123, i16* %121 release, align 2
  %124 = bitcast %"class.blink::ExecutionContext"* %1 to void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)***
  %125 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %125, i64 52
  %127 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %126, align 8
  call void %127(%"class.blink::ExecutionContext"* nonnull %1, %"class.blink::ConsoleMessage"* %118, i1 zeroext false) #7
  %128 = getelementptr inbounds %"class.absl::optional.1549", %"class.absl::optional.1549"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %128, align 8
  %129 = getelementptr inbounds %"class.absl::optional.1549", %"class.absl::optional.1549"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %130 = bitcast %union.anon.1553* %129 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 0, i64 56, i1 false) #7
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %132 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %132, label %146, label %133

133:                                              ; preds = %114
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  br i1 %137, label %140, label %142

140:                                              ; preds = %133
  %141 = add i32 %139, -1
  store i32 %141, i32* %138, align 4
  br label %142

142:                                              ; preds = %140, %133
  %143 = phi i32 [ %141, %140 ], [ %139, %133 ]
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %142
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %131) #7
  br label %146

146:                                              ; preds = %114, %142, %145
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #7
  br label %653

147:                                              ; preds = %53
  %148 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %56, i64 0, i32 0, i32 1
  %149 = tail call dereferenceable(392) %"class.blink::Frame"* @_ZNK5blink9FrameTree3TopEv(%"class.blink::FrameTree"* %148) #7
  %150 = bitcast %"class.blink::Frame"* %149 to %"class.blink::SecurityContext"* (%"class.blink::Frame"*)***
  %151 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)**, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*** %150, align 8
  %152 = getelementptr inbounds %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %151, i64 10
  %153 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %152, align 8
  %154 = tail call %"class.blink::SecurityContext"* %153(%"class.blink::Frame"* %149) #7
  %155 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %154, i64 0, i32 2, i32 0
  %156 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %155, align 8
  %157 = tail call zeroext i1 @_ZNK5blink14SecurityOrigin24IsPotentiallyTrustworthyEv(%"class.blink::SecurityOrigin"* %156) #7
  br i1 %157, label %227, label %158

158:                                              ; preds = %147
  %159 = tail call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %56) #7
  %160 = icmp eq %"class.blink::LocalDOMWindow"* %159, null
  %161 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %159, i64 0, i32 1
  %162 = bitcast %"class.blink::ExecutionContext.base"* %161 to %"class.blink::ExecutionContext"*
  %163 = select i1 %160, %"class.blink::ExecutionContext"* null, %"class.blink::ExecutionContext"* %162
  %164 = getelementptr inbounds %"class.absl::optional.1123", %"class.absl::optional.1123"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %164) #7
  %165 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %149, i64 0, i32 24
  store i8 1, i8* %164, align 8
  %166 = getelementptr inbounds %"class.absl::optional.1123", %"class.absl::optional.1123"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %167 = bitcast %"class.base::UnguessableToken"* %166 to i8*
  %168 = bitcast %"class.base::UnguessableToken"* %165 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 16, i1 false) #7
  %169 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %7, i64 0, i32 0, i32 0
  %170 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %170) #7
  store i8 0, i8* %170, align 8
  %171 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %171) #7
  %172 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)**, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*** %150, align 8
  %173 = getelementptr inbounds %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %172, i64 10
  %174 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %173, align 8
  %175 = tail call %"class.blink::SecurityContext"* %174(%"class.blink::Frame"* %149) #7
  %176 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %175, i64 0, i32 2, i32 0
  %177 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %176, align 8
  %178 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin8ToStringEv(%"class.blink::SecurityOrigin"* %177) #7
  %179 = ptrtoint %"class.WTF::StringImpl"* %178 to i64
  store i8 1, i8* %171, align 8
  %180 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %181 = bitcast %"class.WTF::String"* %180 to i64*
  store i64 %179, i64* %181, align 8
  call void @_ZN5blink11AuditsIssue22ReportAttributionIssueEPNS_16ExecutionContextENS_29AttributionReportingIssueTypeERKN4absl8optionalIN4base16UnguessableTokenEEEPNS_7ElementERKNS5_IN3WTF6StringEEESH_(%"class.blink::ExecutionContext"* %163, i32 3, %"class.absl::optional.1123"* nonnull dereferenceable(24) %13, %"class.blink::Element"* %169, %"class.absl::optional.1564"* nonnull dereferenceable(16) %14, %"class.absl::optional.1564"* nonnull dereferenceable(16) %15) #7
  %182 = load i8, i8* %171, align 8, !range !2
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %202, label %184

184:                                              ; preds = %158
  %185 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %186 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %185, align 8
  %187 = icmp eq %"class.WTF::StringImpl"* %186, null
  br i1 %187, label %201, label %188

188:                                              ; preds = %184
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load atomic i32, i32* %189 monotonic, align 4
  %191 = and i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 0
  %194 = load i32, i32* %193, align 4
  br i1 %192, label %195, label %197

195:                                              ; preds = %188
  %196 = add i32 %194, -1
  store i32 %196, i32* %193, align 4
  br label %197

197:                                              ; preds = %195, %188
  %198 = phi i32 [ %196, %195 ], [ %194, %188 ]
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %197
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %186) #7
  br label %201

201:                                              ; preds = %200, %197, %184
  store i8 0, i8* %171, align 8
  br label %202

202:                                              ; preds = %201, %158
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %171) #7
  %203 = load i8, i8* %170, align 8, !range !2
  %204 = icmp eq i8 %203, 0
  br i1 %204, label %223, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %206, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %208, label %222, label %209

209:                                              ; preds = %205
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  br i1 %213, label %216, label %218

216:                                              ; preds = %209
  %217 = add i32 %215, -1
  store i32 %217, i32* %214, align 4
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi i32 [ %217, %216 ], [ %215, %209 ]
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %207) #7
  br label %222

222:                                              ; preds = %221, %218, %205
  store i8 0, i8* %170, align 8
  br label %223

223:                                              ; preds = %202, %222
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %170) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %164) #7
  %224 = getelementptr inbounds %"class.absl::optional.1549", %"class.absl::optional.1549"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %224, align 8
  %225 = getelementptr inbounds %"class.absl::optional.1549", %"class.absl::optional.1549"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %226 = bitcast %union.anon.1553* %225 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %226, i8 0, i64 56, i1 false) #7
  br label %653

227:                                              ; preds = %147
  %228 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %56, i64 0, i32 0
  %229 = tail call zeroext i1 @_ZNK5blink5Frame11IsMainFrameEv(%"class.blink::Frame"* %228) #7
  br i1 %229, label %301, label %230

230:                                              ; preds = %227
  %231 = tail call %"class.blink::SecurityContext"* @_ZNK5blink10LocalFrame18GetSecurityContextEv(%"class.blink::LocalFrame"* %56) #7
  %232 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %231, i64 0, i32 2, i32 0
  %233 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %232, align 8
  %234 = tail call zeroext i1 @_ZNK5blink14SecurityOrigin24IsPotentiallyTrustworthyEv(%"class.blink::SecurityOrigin"* %233) #7
  br i1 %234, label %301, label %235

235:                                              ; preds = %230
  %236 = tail call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %56) #7
  %237 = icmp eq %"class.blink::LocalDOMWindow"* %236, null
  %238 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %236, i64 0, i32 1
  %239 = bitcast %"class.blink::ExecutionContext.base"* %238 to %"class.blink::ExecutionContext"*
  %240 = select i1 %237, %"class.blink::ExecutionContext"* null, %"class.blink::ExecutionContext"* %239
  %241 = getelementptr inbounds %"class.absl::optional.1123", %"class.absl::optional.1123"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %241) #7
  %242 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %56, i64 0, i32 0, i32 24
  store i8 1, i8* %241, align 8
  %243 = getelementptr inbounds %"class.absl::optional.1123", %"class.absl::optional.1123"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %244 = bitcast %"class.base::UnguessableToken"* %243 to i8*
  %245 = bitcast %"class.base::UnguessableToken"* %242 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %244, i8* align 8 %245, i64 16, i1 false) #7
  %246 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %7, i64 0, i32 0, i32 0
  %247 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %247) #7
  store i8 0, i8* %247, align 8
  %248 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %248) #7
  %249 = tail call %"class.blink::SecurityContext"* @_ZNK5blink10LocalFrame18GetSecurityContextEv(%"class.blink::LocalFrame"* %56) #7
  %250 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %249, i64 0, i32 2, i32 0
  %251 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %250, align 8
  %252 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin8ToStringEv(%"class.blink::SecurityOrigin"* %251) #7
  %253 = ptrtoint %"class.WTF::StringImpl"* %252 to i64
  store i8 1, i8* %248, align 8
  %254 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %255 = bitcast %"class.WTF::String"* %254 to i64*
  store i64 %253, i64* %255, align 8
  call void @_ZN5blink11AuditsIssue22ReportAttributionIssueEPNS_16ExecutionContextENS_29AttributionReportingIssueTypeERKN4absl8optionalIN4base16UnguessableTokenEEEPNS_7ElementERKNS5_IN3WTF6StringEEESH_(%"class.blink::ExecutionContext"* %240, i32 3, %"class.absl::optional.1123"* nonnull dereferenceable(24) %16, %"class.blink::Element"* %246, %"class.absl::optional.1564"* nonnull dereferenceable(16) %17, %"class.absl::optional.1564"* nonnull dereferenceable(16) %18) #7
  %256 = load i8, i8* %248, align 8, !range !2
  %257 = icmp eq i8 %256, 0
  br i1 %257, label %276, label %258

258:                                              ; preds = %235
  %259 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %260 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %259, align 8
  %261 = icmp eq %"class.WTF::StringImpl"* %260, null
  br i1 %261, label %275, label %262

262:                                              ; preds = %258
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = load atomic i32, i32* %263 monotonic, align 4
  %265 = and i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 0
  %268 = load i32, i32* %267, align 4
  br i1 %266, label %269, label %271

269:                                              ; preds = %262
  %270 = add i32 %268, -1
  store i32 %270, i32* %267, align 4
  br label %271

271:                                              ; preds = %269, %262
  %272 = phi i32 [ %270, %269 ], [ %268, %262 ]
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %275

274:                                              ; preds = %271
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %260) #7
  br label %275

275:                                              ; preds = %274, %271, %258
  store i8 0, i8* %248, align 8
  br label %276

276:                                              ; preds = %275, %235
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %248) #7
  %277 = load i8, i8* %247, align 8, !range !2
  %278 = icmp eq i8 %277, 0
  br i1 %278, label %297, label %279

279:                                              ; preds = %276
  %280 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %281 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %280, align 8
  %282 = icmp eq %"class.WTF::StringImpl"* %281, null
  br i1 %282, label %296, label %283

283:                                              ; preds = %279
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = load atomic i32, i32* %284 monotonic, align 4
  %286 = and i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 0
  %289 = load i32, i32* %288, align 4
  br i1 %287, label %290, label %292

290:                                              ; preds = %283
  %291 = add i32 %289, -1
  store i32 %291, i32* %288, align 4
  br label %292

292:                                              ; preds = %290, %283
  %293 = phi i32 [ %291, %290 ], [ %289, %283 ]
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %296

295:                                              ; preds = %292
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %281) #7
  br label %296

296:                                              ; preds = %295, %292, %279
  store i8 0, i8* %247, align 8
  br label %297

297:                                              ; preds = %276, %296
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %247) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %241) #7
  %298 = getelementptr inbounds %"class.absl::optional.1549", %"class.absl::optional.1549"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %298, align 8
  %299 = getelementptr inbounds %"class.absl::optional.1549", %"class.absl::optional.1549"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %300 = bitcast %union.anon.1553* %299 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %300, i8 0, i64 56, i1 false) #7
  br label %653

301:                                              ; preds = %227, %230
  %302 = tail call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin16CreateFromStringERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %3) #7
  %303 = tail call zeroext i1 @_ZNK5blink14SecurityOrigin24IsPotentiallyTrustworthyEv(%"class.blink::SecurityOrigin"* %302) #7
  br i1 %303, label %380, label %304

304:                                              ; preds = %301
  %305 = tail call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %56) #7
  %306 = icmp eq %"class.blink::LocalDOMWindow"* %305, null
  %307 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %305, i64 0, i32 1
  %308 = bitcast %"class.blink::ExecutionContext.base"* %307 to %"class.blink::ExecutionContext"*
  %309 = select i1 %306, %"class.blink::ExecutionContext"* null, %"class.blink::ExecutionContext"* %308
  %310 = getelementptr inbounds %"class.absl::optional.1123", %"class.absl::optional.1123"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %310) #7
  store i8 0, i8* %310, align 8
  %311 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %7, i64 0, i32 0, i32 0
  %312 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %312) #7
  store i8 0, i8* %312, align 8
  %313 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %313) #7
  store i8 1, i8* %313, align 8
  %314 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %315 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %314, align 8
  %316 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %21, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %315, %"class.WTF::StringImpl"** %316, align 8
  %317 = icmp eq %"class.WTF::StringImpl"* %315, null
  br i1 %317, label %335, label %318

318:                                              ; preds = %304
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %315, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %320 = load atomic i32, i32* %319 monotonic, align 4
  %321 = and i32 %320, 2
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %335

323:                                              ; preds = %318
  %324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %315, i64 0, i32 0
  %325 = load i32, i32* %324, align 4
  %326 = zext i32 %325 to i33
  %327 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %326, i33 1) #7
  %328 = extractvalue { i33, i1 } %327, 1
  %329 = extractvalue { i33, i1 } %327, 0
  %330 = icmp slt i33 %329, 0
  %331 = or i1 %328, %330
  br i1 %331, label %332, label %333, !prof !6

332:                                              ; preds = %323
  tail call void @llvm.trap() #7
  unreachable

333:                                              ; preds = %323
  %334 = trunc i33 %329 to i32
  store i32 %334, i32* %324, align 4
  br label %335

335:                                              ; preds = %304, %318, %333
  call void @_ZN5blink11AuditsIssue22ReportAttributionIssueEPNS_16ExecutionContextENS_29AttributionReportingIssueTypeERKN4absl8optionalIN4base16UnguessableTokenEEEPNS_7ElementERKNS5_IN3WTF6StringEEESH_(%"class.blink::ExecutionContext"* %309, i32 3, %"class.absl::optional.1123"* nonnull dereferenceable(24) %19, %"class.blink::Element"* %311, %"class.absl::optional.1564"* nonnull dereferenceable(16) %20, %"class.absl::optional.1564"* nonnull dereferenceable(16) %21) #7
  %336 = load i8, i8* %313, align 8, !range !2
  %337 = icmp eq i8 %336, 0
  br i1 %337, label %355, label %338

338:                                              ; preds = %335
  %339 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %316, align 8
  %340 = icmp eq %"class.WTF::StringImpl"* %339, null
  br i1 %340, label %354, label %341

341:                                              ; preds = %338
  %342 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %339, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load atomic i32, i32* %342 monotonic, align 4
  %344 = and i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %339, i64 0, i32 0
  %347 = load i32, i32* %346, align 4
  br i1 %345, label %348, label %350

348:                                              ; preds = %341
  %349 = add i32 %347, -1
  store i32 %349, i32* %346, align 4
  br label %350

350:                                              ; preds = %348, %341
  %351 = phi i32 [ %349, %348 ], [ %347, %341 ]
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %353, label %354

353:                                              ; preds = %350
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %339) #7
  br label %354

354:                                              ; preds = %353, %350, %338
  store i8 0, i8* %313, align 8
  br label %355

355:                                              ; preds = %335, %354
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %313) #7
  %356 = load i8, i8* %312, align 8, !range !2
  %357 = icmp eq i8 %356, 0
  br i1 %357, label %376, label %358

358:                                              ; preds = %355
  %359 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %360 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %359, align 8
  %361 = icmp eq %"class.WTF::StringImpl"* %360, null
  br i1 %361, label %375, label %362

362:                                              ; preds = %358
  %363 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %364 = load atomic i32, i32* %363 monotonic, align 4
  %365 = and i32 %364, 2
  %366 = icmp eq i32 %365, 0
  %367 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 0
  %368 = load i32, i32* %367, align 4
  br i1 %366, label %369, label %371

369:                                              ; preds = %362
  %370 = add i32 %368, -1
  store i32 %370, i32* %367, align 4
  br label %371

371:                                              ; preds = %369, %362
  %372 = phi i32 [ %370, %369 ], [ %368, %362 ]
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %375

374:                                              ; preds = %371
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %360) #7
  br label %375

375:                                              ; preds = %374, %371, %358
  store i8 0, i8* %312, align 8
  br label %376

376:                                              ; preds = %355, %375
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %312) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %310) #7
  %377 = getelementptr inbounds %"class.absl::optional.1549", %"class.absl::optional.1549"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %377, align 8
  %378 = getelementptr inbounds %"class.absl::optional.1549", %"class.absl::optional.1549"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %379 = bitcast %union.anon.1553* %378 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %379, i8 0, i64 56, i1 false) #7
  br label %644

380:                                              ; preds = %301
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %22) #7
  store i8 0, i8* %22, align 1
  %381 = call i64 @_ZNK3WTF6String14ToUInt64StrictEPb(%"class.WTF::String"* %2, i8* nonnull %22) #7
  %382 = load i8, i8* %22, align 1, !range !2
  %383 = icmp eq i8 %382, 0
  br i1 %383, label %384, label %462

384:                                              ; preds = %380
  %385 = call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %56) #7
  %386 = icmp eq %"class.blink::LocalDOMWindow"* %385, null
  %387 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %385, i64 0, i32 1
  %388 = bitcast %"class.blink::ExecutionContext.base"* %387 to %"class.blink::ExecutionContext"*
  %389 = select i1 %386, %"class.blink::ExecutionContext"* null, %"class.blink::ExecutionContext"* %388
  %390 = getelementptr inbounds %"class.absl::optional.1123", %"class.absl::optional.1123"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %390) #7
  %391 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %56, i64 0, i32 0, i32 24
  store i8 1, i8* %390, align 8
  %392 = getelementptr inbounds %"class.absl::optional.1123", %"class.absl::optional.1123"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %393 = bitcast %"class.base::UnguessableToken"* %392 to i8*
  %394 = bitcast %"class.base::UnguessableToken"* %391 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %393, i8* align 8 %394, i64 16, i1 false) #7
  %395 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %7, i64 0, i32 0, i32 0
  %396 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %396) #7
  store i8 0, i8* %396, align 8
  %397 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %397) #7
  store i8 1, i8* %397, align 8
  %398 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %399 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %398, align 8
  %400 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %25, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %399, %"class.WTF::StringImpl"** %400, align 8
  %401 = icmp eq %"class.WTF::StringImpl"* %399, null
  br i1 %401, label %419, label %402

402:                                              ; preds = %384
  %403 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %399, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %404 = load atomic i32, i32* %403 monotonic, align 4
  %405 = and i32 %404, 2
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %407, label %419

407:                                              ; preds = %402
  %408 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %399, i64 0, i32 0
  %409 = load i32, i32* %408, align 4
  %410 = zext i32 %409 to i33
  %411 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %410, i33 1) #7
  %412 = extractvalue { i33, i1 } %411, 1
  %413 = extractvalue { i33, i1 } %411, 0
  %414 = icmp slt i33 %413, 0
  %415 = or i1 %412, %414
  br i1 %415, label %416, label %417, !prof !6

416:                                              ; preds = %407
  call void @llvm.trap() #7
  unreachable

417:                                              ; preds = %407
  %418 = trunc i33 %413 to i32
  store i32 %418, i32* %408, align 4
  br label %419

419:                                              ; preds = %384, %402, %417
  call void @_ZN5blink11AuditsIssue22ReportAttributionIssueEPNS_16ExecutionContextENS_29AttributionReportingIssueTypeERKN4absl8optionalIN4base16UnguessableTokenEEEPNS_7ElementERKNS5_IN3WTF6StringEEESH_(%"class.blink::ExecutionContext"* %389, i32 1, %"class.absl::optional.1123"* nonnull dereferenceable(24) %23, %"class.blink::Element"* %395, %"class.absl::optional.1564"* nonnull dereferenceable(16) %24, %"class.absl::optional.1564"* nonnull dereferenceable(16) %25) #7
  %420 = load i8, i8* %397, align 8, !range !2
  %421 = icmp eq i8 %420, 0
  br i1 %421, label %439, label %422

422:                                              ; preds = %419
  %423 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %400, align 8
  %424 = icmp eq %"class.WTF::StringImpl"* %423, null
  br i1 %424, label %438, label %425

425:                                              ; preds = %422
  %426 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %423, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %427 = load atomic i32, i32* %426 monotonic, align 4
  %428 = and i32 %427, 2
  %429 = icmp eq i32 %428, 0
  %430 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %423, i64 0, i32 0
  %431 = load i32, i32* %430, align 4
  br i1 %429, label %432, label %434

432:                                              ; preds = %425
  %433 = add i32 %431, -1
  store i32 %433, i32* %430, align 4
  br label %434

434:                                              ; preds = %432, %425
  %435 = phi i32 [ %433, %432 ], [ %431, %425 ]
  %436 = icmp eq i32 %435, 0
  br i1 %436, label %437, label %438

437:                                              ; preds = %434
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %423) #7
  br label %438

438:                                              ; preds = %437, %434, %422
  store i8 0, i8* %397, align 8
  br label %439

439:                                              ; preds = %419, %438
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %397) #7
  %440 = load i8, i8* %396, align 8, !range !2
  %441 = icmp eq i8 %440, 0
  br i1 %441, label %460, label %442

442:                                              ; preds = %439
  %443 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %444 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %443, align 8
  %445 = icmp eq %"class.WTF::StringImpl"* %444, null
  br i1 %445, label %459, label %446

446:                                              ; preds = %442
  %447 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %444, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %448 = load atomic i32, i32* %447 monotonic, align 4
  %449 = and i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %444, i64 0, i32 0
  %452 = load i32, i32* %451, align 4
  br i1 %450, label %453, label %455

453:                                              ; preds = %446
  %454 = add i32 %452, -1
  store i32 %454, i32* %451, align 4
  br label %455

455:                                              ; preds = %453, %446
  %456 = phi i32 [ %454, %453 ], [ %452, %446 ]
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %458, label %459

458:                                              ; preds = %455
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %444) #7
  br label %459

459:                                              ; preds = %458, %455, %442
  store i8 0, i8* %396, align 8
  br label %460

460:                                              ; preds = %439, %459
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %396) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %390) #7
  %461 = load i8, i8* %22, align 1, !range !2
  br label %462

462:                                              ; preds = %380, %460
  %463 = phi i8 [ 1, %380 ], [ %461, %460 ]
  %464 = icmp eq i8 %463, 0
  %465 = select i1 %464, i64 0, i64 %381
  %466 = getelementptr inbounds %"class.absl::optional.1554", %"class.absl::optional.1554"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %466) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %466, i8 -86, i64 16, i1 false)
  store i8 0, i8* %466, align 8
  %467 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %468 = load i8, i8* %467, align 8, !range !2
  %469 = icmp eq i8 %468, 0
  br i1 %469, label %564, label %470

470:                                              ; preds = %462
  %471 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %472 = call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin16CreateFromStringERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %471) #7
  %473 = load i8, i8* %466, align 8, !range !2
  %474 = icmp eq i8 %473, 0
  %475 = getelementptr inbounds %"class.absl::optional.1554", %"class.absl::optional.1554"* %26, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %474, label %476, label %477

476:                                              ; preds = %470
  call void @_ZN5blink17WebSecurityOriginC1E13scoped_refptrIKNS_14SecurityOriginEE(%"class.blink::WebSecurityOrigin"* %475, %"class.blink::SecurityOrigin"* %472) #7
  store i8 1, i8* %466, align 8
  br label %482

477:                                              ; preds = %470
  %478 = call dereferenceable(8) %"class.blink::WebSecurityOrigin"* @_ZN5blink17WebSecurityOriginaSE13scoped_refptrIKNS_14SecurityOriginEE(%"class.blink::WebSecurityOrigin"* %475, %"class.blink::SecurityOrigin"* %472) #7
  %479 = load i8, i8* %466, align 8
  %480 = icmp eq i8 %479, 0
  br i1 %480, label %481, label %482, !prof !6

481:                                              ; preds = %477
  call void @llvm.trap() #7
  unreachable

482:                                              ; preds = %476, %477
  %483 = call zeroext i1 @_ZNK5blink17WebSecurityOrigin24IsPotentiallyTrustworthyEv(%"class.blink::WebSecurityOrigin"* %475) #7
  br i1 %483, label %564, label %484

484:                                              ; preds = %482
  %485 = call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %56) #7
  %486 = icmp eq %"class.blink::LocalDOMWindow"* %485, null
  %487 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %485, i64 0, i32 1
  %488 = bitcast %"class.blink::ExecutionContext.base"* %487 to %"class.blink::ExecutionContext"*
  %489 = select i1 %486, %"class.blink::ExecutionContext"* null, %"class.blink::ExecutionContext"* %488
  %490 = getelementptr inbounds %"class.absl::optional.1123", %"class.absl::optional.1123"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %490) #7
  store i8 0, i8* %490, align 8
  %491 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %7, i64 0, i32 0, i32 0
  %492 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %492) #7
  store i8 0, i8* %492, align 8
  %493 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %493) #7
  %494 = load i8, i8* %467, align 8, !range !2
  %495 = icmp eq i8 %494, 0
  br i1 %495, label %496, label %497, !prof !6

496:                                              ; preds = %484
  call void @llvm.trap() #7
  unreachable

497:                                              ; preds = %484
  store i8 1, i8* %493, align 8
  %498 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %471, i64 0, i32 0, i32 0
  %499 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %498, align 8
  %500 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %499, %"class.WTF::StringImpl"** %500, align 8
  %501 = icmp eq %"class.WTF::StringImpl"* %499, null
  br i1 %501, label %519, label %502

502:                                              ; preds = %497
  %503 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %499, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %504 = load atomic i32, i32* %503 monotonic, align 4
  %505 = and i32 %504, 2
  %506 = icmp eq i32 %505, 0
  br i1 %506, label %507, label %519

507:                                              ; preds = %502
  %508 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %499, i64 0, i32 0
  %509 = load i32, i32* %508, align 4
  %510 = zext i32 %509 to i33
  %511 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %510, i33 1) #7
  %512 = extractvalue { i33, i1 } %511, 1
  %513 = extractvalue { i33, i1 } %511, 0
  %514 = icmp slt i33 %513, 0
  %515 = or i1 %512, %514
  br i1 %515, label %516, label %517, !prof !6

516:                                              ; preds = %507
  call void @llvm.trap() #7
  unreachable

517:                                              ; preds = %507
  %518 = trunc i33 %513 to i32
  store i32 %518, i32* %508, align 4
  br label %519

519:                                              ; preds = %497, %502, %517
  call void @_ZN5blink11AuditsIssue22ReportAttributionIssueEPNS_16ExecutionContextENS_29AttributionReportingIssueTypeERKN4absl8optionalIN4base16UnguessableTokenEEEPNS_7ElementERKNS5_IN3WTF6StringEEESH_(%"class.blink::ExecutionContext"* %489, i32 3, %"class.absl::optional.1123"* nonnull dereferenceable(24) %27, %"class.blink::Element"* %491, %"class.absl::optional.1564"* nonnull dereferenceable(16) %28, %"class.absl::optional.1564"* nonnull dereferenceable(16) %29) #7
  %520 = load i8, i8* %493, align 8, !range !2
  %521 = icmp eq i8 %520, 0
  br i1 %521, label %539, label %522

522:                                              ; preds = %519
  %523 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %500, align 8
  %524 = icmp eq %"class.WTF::StringImpl"* %523, null
  br i1 %524, label %538, label %525

525:                                              ; preds = %522
  %526 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %523, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %527 = load atomic i32, i32* %526 monotonic, align 4
  %528 = and i32 %527, 2
  %529 = icmp eq i32 %528, 0
  %530 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %523, i64 0, i32 0
  %531 = load i32, i32* %530, align 4
  br i1 %529, label %532, label %534

532:                                              ; preds = %525
  %533 = add i32 %531, -1
  store i32 %533, i32* %530, align 4
  br label %534

534:                                              ; preds = %532, %525
  %535 = phi i32 [ %533, %532 ], [ %531, %525 ]
  %536 = icmp eq i32 %535, 0
  br i1 %536, label %537, label %538

537:                                              ; preds = %534
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %523) #7
  br label %538

538:                                              ; preds = %537, %534, %522
  store i8 0, i8* %493, align 8
  br label %539

539:                                              ; preds = %519, %538
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %493) #7
  %540 = load i8, i8* %492, align 8, !range !2
  %541 = icmp eq i8 %540, 0
  br i1 %541, label %560, label %542

542:                                              ; preds = %539
  %543 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %544 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %543, align 8
  %545 = icmp eq %"class.WTF::StringImpl"* %544, null
  br i1 %545, label %559, label %546

546:                                              ; preds = %542
  %547 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %544, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %548 = load atomic i32, i32* %547 monotonic, align 4
  %549 = and i32 %548, 2
  %550 = icmp eq i32 %549, 0
  %551 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %544, i64 0, i32 0
  %552 = load i32, i32* %551, align 4
  br i1 %550, label %553, label %555

553:                                              ; preds = %546
  %554 = add i32 %552, -1
  store i32 %554, i32* %551, align 4
  br label %555

555:                                              ; preds = %553, %546
  %556 = phi i32 [ %554, %553 ], [ %552, %546 ]
  %557 = icmp eq i32 %556, 0
  br i1 %557, label %558, label %559

558:                                              ; preds = %555
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %544) #7
  br label %559

559:                                              ; preds = %558, %555, %542
  store i8 0, i8* %492, align 8
  br label %560

560:                                              ; preds = %539, %559
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %492) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %490) #7
  %561 = getelementptr inbounds %"class.absl::optional.1549", %"class.absl::optional.1549"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %561, align 8
  %562 = getelementptr inbounds %"class.absl::optional.1549", %"class.absl::optional.1549"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %563 = bitcast %union.anon.1553* %562 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %563, i8 0, i64 56, i1 false) #7
  br label %638

564:                                              ; preds = %462, %482
  %565 = getelementptr inbounds %"class.absl::optional.573", %"class.absl::optional.573"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %566 = load i8, i8* %565, align 8, !range !2
  %567 = icmp eq i8 %566, 0
  br i1 %567, label %577, label %568

568:                                              ; preds = %564
  %569 = getelementptr inbounds %"class.absl::optional.573", %"class.absl::optional.573"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %570 = load i64, i64* %569, align 8
  %571 = icmp slt i64 %570, 0
  %572 = select i1 %571, i64 -9223372036854775808, i64 9223372036854775807
  %573 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %570, i64 1000) #7
  %574 = extractvalue { i64, i1 } %573, 1
  %575 = extractvalue { i64, i1 } %573, 0
  %576 = select i1 %574, i64 %572, i64 %575, !prof !6
  br label %577

577:                                              ; preds = %564, %568
  %578 = phi i64 [ %576, %568 ], [ -6148914691236517206, %564 ]
  %579 = phi i8 [ 1, %568 ], [ 0, %564 ]
  %580 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 0, i32 3
  %581 = icmp eq %"class.blink::UseCounter"* %580, null
  br i1 %581, label %590, label %582

582:                                              ; preds = %577
  %583 = bitcast %"class.blink::UseCounter"* %580 to void (%"class.blink::UseCounter"*, i32)***
  %584 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %583, align 8
  %585 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %584, i64 3
  %586 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %585, align 8
  call void %586(%"class.blink::UseCounter"* nonnull %580, i32 3365) #7
  %587 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %583, align 8
  %588 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %587, i64 3
  %589 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %588, align 8
  call void %589(%"class.blink::UseCounter"* nonnull %580, i32 3366) #7
  br label %590

590:                                              ; preds = %577, %582
  %591 = getelementptr inbounds %"class.absl::optional.1559", %"class.absl::optional.1559"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %592 = load i8, i8* %591, align 8, !range !2
  %593 = icmp eq i8 %592, 0
  %594 = getelementptr inbounds %"class.absl::optional.1559", %"class.absl::optional.1559"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %595 = load i64, i64* %594, align 8
  %596 = select i1 %593, i64 0, i64 %595
  %597 = bitcast %"struct.blink::WebImpression"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %597) #7
  %598 = getelementptr inbounds %"struct.blink::WebImpression", %"struct.blink::WebImpression"* %30, i64 0, i32 0
  %599 = icmp eq %"class.blink::SecurityOrigin"* %302, null
  br i1 %599, label %602, label %600

600:                                              ; preds = %590
  %601 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %302, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %601) #7
  br label %602

602:                                              ; preds = %590, %600
  call void @_ZN5blink17WebSecurityOriginC1E13scoped_refptrIKNS_14SecurityOriginEE(%"class.blink::WebSecurityOrigin"* nonnull %598, %"class.blink::SecurityOrigin"* %302) #7
  %603 = getelementptr inbounds %"struct.blink::WebImpression", %"struct.blink::WebImpression"* %30, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %603, i8 0, i64 16, i1 false) #7
  %604 = load i8, i8* %466, align 8, !range !2
  %605 = icmp eq i8 %604, 0
  br i1 %605, label %610, label %606

606:                                              ; preds = %602
  %607 = getelementptr inbounds %"class.absl::optional.1554", %"class.absl::optional.1554"* %26, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %608 = getelementptr inbounds %"struct.blink::WebImpression", %"struct.blink::WebImpression"* %30, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %609 = getelementptr inbounds %"class.blink::WebSecurityOrigin", %"class.blink::WebSecurityOrigin"* %608, i64 0, i32 0, i32 0
  store i8* null, i8** %609, align 8
  call void @_ZN5blink17WebSecurityOrigin6AssignERKS0_(%"class.blink::WebSecurityOrigin"* %608, %"class.blink::WebSecurityOrigin"* dereferenceable(8) %607) #7
  store i8 1, i8* %603, align 8
  br label %610

610:                                              ; preds = %602, %606
  %611 = getelementptr inbounds %"struct.blink::WebImpression", %"struct.blink::WebImpression"* %30, i64 0, i32 2
  store i64 %465, i64* %611, align 8
  %612 = getelementptr inbounds %"struct.blink::WebImpression", %"struct.blink::WebImpression"* %30, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 %579, i8* %612, align 8
  %613 = getelementptr inbounds i8, i8* %597, i64 33
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %613, i8* nonnull align 1 getelementptr inbounds ({ { { { i8, [7 x i8], %union.anon.268 } } } }, { { { { i8, [7 x i8], %union.anon.268 } } } }* @__const._ZN5blink12_GLOBAL__N_113GetImpressionEPNS_16ExecutionContextERKN3WTF6StringES6_RKN4absl8optionalIS4_EENS8_ImEENS8_IlEEPNS_17HTMLAnchorElementE.expiry, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false)
  %614 = getelementptr inbounds %"struct.blink::WebImpression", %"struct.blink::WebImpression"* %30, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 %578, i64* %614, align 8
  %615 = getelementptr inbounds %"struct.blink::WebImpression", %"struct.blink::WebImpression"* %30, i64 0, i32 4
  store i64 %596, i64* %615, align 8
  %616 = getelementptr inbounds %"class.absl::optional.1549", %"class.absl::optional.1549"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %616, align 8
  %617 = getelementptr inbounds %"class.absl::optional.1549", %"class.absl::optional.1549"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %618 = getelementptr inbounds %"struct.blink::WebImpression", %"struct.blink::WebImpression"* %617, i64 0, i32 0
  %619 = getelementptr inbounds %"struct.blink::WebImpression", %"struct.blink::WebImpression"* %617, i64 0, i32 0, i32 0, i32 0
  store i8* null, i8** %619, align 8
  call void @_ZN5blink17WebSecurityOrigin6AssignERKS0_(%"class.blink::WebSecurityOrigin"* %618, %"class.blink::WebSecurityOrigin"* nonnull dereferenceable(8) %598) #7
  %620 = getelementptr inbounds %"class.absl::optional.1549", %"class.absl::optional.1549"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %620, i8 0, i64 16, i1 false) #7
  %621 = load i8, i8* %603, align 8, !range !2
  %622 = icmp eq i8 %621, 0
  br i1 %622, label %623, label %627

623:                                              ; preds = %610
  %624 = getelementptr inbounds %"class.absl::optional.1549", %"class.absl::optional.1549"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %625 = bitcast i64* %624 to i8*
  %626 = bitcast i64* %611 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %625, i8* align 8 %626, i64 32, i1 false) #7
  br label %637

627:                                              ; preds = %610
  %628 = getelementptr inbounds %"struct.blink::WebImpression", %"struct.blink::WebImpression"* %30, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %629 = getelementptr inbounds %"class.absl::optional.1549", %"class.absl::optional.1549"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %630 = getelementptr inbounds %"class.blink::WebSecurityOrigin", %"class.blink::WebSecurityOrigin"* %629, i64 0, i32 0, i32 0
  store i8* null, i8** %630, align 8
  call void @_ZN5blink17WebSecurityOrigin6AssignERKS0_(%"class.blink::WebSecurityOrigin"* %629, %"class.blink::WebSecurityOrigin"* dereferenceable(8) %628) #7
  store i8 1, i8* %620, align 8
  %631 = load i8, i8* %603, align 8
  %632 = getelementptr inbounds %"class.absl::optional.1549", %"class.absl::optional.1549"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %633 = bitcast i64* %632 to i8*
  %634 = bitcast i64* %611 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %633, i8* align 8 %634, i64 32, i1 false) #7
  %635 = icmp eq i8 %631, 0
  br i1 %635, label %637, label %636

636:                                              ; preds = %627
  call void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"* %628) #7
  store i8 0, i8* %603, align 8
  br label %637

637:                                              ; preds = %623, %627, %636
  call void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"* nonnull %598) #7
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %597) #7
  br label %638

638:                                              ; preds = %637, %560
  %639 = load i8, i8* %466, align 8, !range !2
  %640 = icmp eq i8 %639, 0
  br i1 %640, label %643, label %641

641:                                              ; preds = %638
  %642 = getelementptr inbounds %"class.absl::optional.1554", %"class.absl::optional.1554"* %26, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"* %642) #7
  store i8 0, i8* %466, align 8
  br label %643

643:                                              ; preds = %638, %641
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %466) #7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %22) #7
  br label %644

644:                                              ; preds = %643, %376
  %645 = icmp eq %"class.blink::SecurityOrigin"* %302, null
  br i1 %645, label %653, label %646

646:                                              ; preds = %644
  %647 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %302, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %647) #7
  %648 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %302, i64 0, i32 0, i32 0, i32 0, i32 0
  %649 = load i32, i32* %648, align 4
  %650 = icmp eq i32 %649, 0
  br i1 %650, label %651, label %653

651:                                              ; preds = %646
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %302) #7
  %652 = bitcast %"class.blink::SecurityOrigin"* %302 to i8*
  call void @free(i8* %652) #7
  br label %653

653:                                              ; preds = %651, %646, %644, %49, %146, %297, %223, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink31GetImpressionFromWindowFeaturesEPNS_16ExecutionContextERKNS_18ImpressionFeaturesE(%"class.absl::optional.1549"* noalias sret, %"class.blink::ExecutionContext"*, %"struct.blink::ImpressionFeatures"* dereferenceable(40)) local_unnamed_addr #0 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca %"class.absl::optional.1564", align 8
  %7 = alloca %"class.absl::optional.573", align 8
  %8 = alloca %"class.absl::optional.1559", align 8
  %9 = getelementptr inbounds %"struct.blink::ImpressionFeatures", %"struct.blink::ImpressionFeatures"* %2, i64 0, i32 0
  %10 = getelementptr inbounds %"struct.blink::ImpressionFeatures", %"struct.blink::ImpressionFeatures"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"struct.blink::ImpressionFeatures", %"struct.blink::ImpressionFeatures"* %2, i64 0, i32 1
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %22

18:                                               ; preds = %13, %3
  %19 = getelementptr inbounds %"class.absl::optional.1549", %"class.absl::optional.1549"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"class.absl::optional.1549", %"class.absl::optional.1549"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast %union.anon.1553* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 56, i1 false) #7
  br label %90

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #7
  %24 = getelementptr inbounds %"struct.blink::ImpressionFeatures", %"struct.blink::ImpressionFeatures"* %2, i64 0, i32 2, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %45, label %27

27:                                               ; preds = %22
  store i8 1, i8* %23, align 8, !alias.scope !7
  %28 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %28, align 8, !alias.scope !7
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4, !noalias !7
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %46

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %35 = load i32, i32* %34, align 4, !noalias !7
  %36 = zext i32 %35 to i33
  %37 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %36, i33 1) #7
  %38 = extractvalue { i33, i1 } %37, 1
  %39 = extractvalue { i33, i1 } %37, 0
  %40 = icmp slt i33 %39, 0
  %41 = or i1 %38, %40
  br i1 %41, label %42, label %43, !prof !6

42:                                               ; preds = %33
  tail call void @llvm.trap() #7, !noalias !7
  unreachable

43:                                               ; preds = %33
  %44 = trunc i33 %39 to i32
  store i32 %44, i32* %34, align 4, !noalias !7
  br label %46

45:                                               ; preds = %22
  store i8 0, i8* %23, align 8
  br label %46

46:                                               ; preds = %43, %27, %45
  %47 = getelementptr inbounds %"struct.blink::ImpressionFeatures", %"struct.blink::ImpressionFeatures"* %2, i64 0, i32 3
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %47, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %55, label %51

51:                                               ; preds = %46
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #7
  store i8 0, i8* %4, align 1
  %52 = call i64 @_ZNK3WTF6String14ToUInt64StrictEPb(%"class.WTF::String"* %47, i8* nonnull %4) #7
  %53 = load i8, i8* %4, align 1, !range !2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #7
  %54 = getelementptr inbounds %"class.absl::optional.573", %"class.absl::optional.573"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %52, i64* %54, align 8
  br label %55

55:                                               ; preds = %46, %51
  %56 = phi i8 [ %53, %51 ], [ 0, %46 ]
  %57 = getelementptr inbounds %"class.absl::optional.573", %"class.absl::optional.573"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 %56, i8* %57, align 8
  %58 = getelementptr inbounds %"struct.blink::ImpressionFeatures", %"struct.blink::ImpressionFeatures"* %2, i64 0, i32 4
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %58, i64 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %55
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #7
  store i8 0, i8* %5, align 1
  %63 = call i64 @_ZNK3WTF6String13ToInt64StrictEPb(%"class.WTF::String"* %58, i8* nonnull %5) #7
  %64 = load i8, i8* %5, align 1, !range !2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #7
  %65 = getelementptr inbounds %"class.absl::optional.1559", %"class.absl::optional.1559"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %63, i64* %65, align 8
  br label %66

66:                                               ; preds = %55, %62
  %67 = phi i8 [ %64, %62 ], [ 0, %55 ]
  %68 = getelementptr inbounds %"class.absl::optional.1559", %"class.absl::optional.1559"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 %67, i8* %68, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_113GetImpressionEPNS_16ExecutionContextERKN3WTF6StringES6_RKN4absl8optionalIS4_EENS8_ImEENS8_IlEEPNS_17HTMLAnchorElementE(%"class.absl::optional.1549"* sret %0, %"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %9, %"class.WTF::String"* dereferenceable(8) %14, %"class.absl::optional.1564"* nonnull dereferenceable(16) %6, %"class.absl::optional.573"* nonnull byval(%"class.absl::optional.573") align 8 %7, %"class.absl::optional.1559"* nonnull byval(%"class.absl::optional.1559") align 8 %8, %"class.blink::HTMLAnchorElement"* null)
  %69 = load i8, i8* %23, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %89, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #7
  br label %88

88:                                               ; preds = %87, %84, %71
  store i8 0, i8* %23, align 8
  br label %89

89:                                               ; preds = %66, %88
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #7
  br label %90

90:                                               ; preds = %89, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22GetImpressionForParamsEPNS_16ExecutionContextEPKNS_23AttributionSourceParamsE(%"class.absl::optional.1549"* noalias sret, %"class.blink::ExecutionContext"*, %"class.blink::AttributionSourceParams"*) local_unnamed_addr #0 {
  %4 = alloca %"class.absl::optional.1564", align 8
  %5 = alloca %"class.absl::optional.573", align 8
  %6 = alloca %"class.absl::optional.1559", align 8
  %7 = getelementptr inbounds %"class.blink::AttributionSourceParams", %"class.blink::AttributionSourceParams"* %2, i64 0, i32 6
  %8 = getelementptr inbounds %"class.blink::AttributionSourceParams", %"class.blink::AttributionSourceParams"* %2, i64 0, i32 3
  %9 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.blink::AttributionSourceParams", %"class.blink::AttributionSourceParams"* %2, i64 0, i32 5, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %31, label %13

13:                                               ; preds = %3
  store i8 1, i8* %9, align 8, !alias.scope !10
  %14 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %14, align 8, !alias.scope !10
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4, !noalias !10
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %32

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %21 = load i32, i32* %20, align 4, !noalias !10
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #7
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !6

28:                                               ; preds = %19
  tail call void @llvm.trap() #7, !noalias !10
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4, !noalias !10
  br label %32

31:                                               ; preds = %3
  store i8 0, i8* %9, align 8
  br label %32

32:                                               ; preds = %29, %13, %31
  %33 = getelementptr inbounds %"class.blink::AttributionSourceParams", %"class.blink::AttributionSourceParams"* %2, i64 0, i32 1
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::AttributionSourceParams", %"class.blink::AttributionSourceParams"* %2, i64 0, i32 4
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"class.absl::optional.573", %"class.absl::optional.573"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %38, i64* %39, align 8
  br label %40

40:                                               ; preds = %32, %36
  %41 = phi i8 [ 1, %36 ], [ 0, %32 ]
  %42 = getelementptr inbounds %"class.absl::optional.573", %"class.absl::optional.573"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 %41, i8* %42, align 8
  %43 = getelementptr inbounds %"class.blink::AttributionSourceParams", %"class.blink::AttributionSourceParams"* %2, i64 0, i32 2
  %44 = load i8, i8* %43, align 1, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.blink::AttributionSourceParams", %"class.blink::AttributionSourceParams"* %2, i64 0, i32 7
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.absl::optional.1559", %"class.absl::optional.1559"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %48, i64* %49, align 8
  br label %50

50:                                               ; preds = %40, %46
  %51 = phi i8 [ 1, %46 ], [ 0, %40 ]
  %52 = getelementptr inbounds %"class.absl::optional.1559", %"class.absl::optional.1559"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 %51, i8* %52, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_113GetImpressionEPNS_16ExecutionContextERKN3WTF6StringES6_RKN4absl8optionalIS4_EENS8_ImEENS8_IlEEPNS_17HTMLAnchorElementE(%"class.absl::optional.1549"* sret %0, %"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %7, %"class.WTF::String"* dereferenceable(8) %8, %"class.absl::optional.1564"* nonnull dereferenceable(16) %4, %"class.absl::optional.573"* nonnull byval(%"class.absl::optional.573") align 8 %5, %"class.absl::optional.1559"* nonnull byval(%"class.absl::optional.1559") align 8 %6, %"class.blink::HTMLAnchorElement"* null)
  %53 = load i8, i8* %9, align 8, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %73, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.absl::optional.1564", %"class.absl::optional.1564"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #7
  br label %72

72:                                               ; preds = %71, %68, %55
  store i8 0, i8* %9, align 8
  br label %73

73:                                               ; preds = %50, %72
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #7
  ret void
}

declare i64 @_ZNK3WTF6String14ToUInt64StrictEPb(%"class.WTF::String"*, i8*) local_unnamed_addr #2

declare i64 @_ZNK3WTF6String13ToInt64StrictEPb(%"class.WTF::String"*, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase28ConversionMeasurementEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom24PermissionsPolicyFeatureENS_13ReportOptionsERKN3WTF6StringE(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink11AuditsIssue22ReportAttributionIssueEPNS_16ExecutionContextENS_29AttributionReportingIssueTypeERKN4absl8optionalIN4base16UnguessableTokenEEEPNS_7ElementERKNS5_IN3WTF6StringEEESH_(%"class.blink::ExecutionContext"*, i32, %"class.absl::optional.1123"* dereferenceable(24), %"class.blink::Element"*, %"class.absl::optional.1564"* dereferenceable(16), %"class.absl::optional.1564"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare dereferenceable(392) %"class.blink::Frame"* @_ZNK5blink9FrameTree3TopEv(%"class.blink::FrameTree"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink14SecurityOrigin24IsPotentiallyTrustworthyEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin8ToStringEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Frame11IsMainFrameEv(%"class.blink::Frame"*) local_unnamed_addr #2

declare %"class.blink::SecurityContext"* @_ZNK5blink10LocalFrame18GetSecurityContextEv(%"class.blink::LocalFrame"*) unnamed_addr #2

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin16CreateFromStringERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17WebSecurityOrigin24IsPotentiallyTrustworthyEv(%"class.blink::WebSecurityOrigin"*) local_unnamed_addr #2

declare void @_ZN5blink17WebSecurityOriginC1E13scoped_refptrIKNS_14SecurityOriginEE(%"class.blink::WebSecurityOrigin"*, %"class.blink::SecurityOrigin"*) unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !6

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #7
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* %40, i8* %41) #7
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #7
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !6

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #7
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #7
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #7
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #7
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #7
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #7
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #7
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare dereferenceable(8) %"class.blink::WebSecurityOrigin"* @_ZN5blink17WebSecurityOriginaSE13scoped_refptrIKNS_14SecurityOriginEE(%"class.blink::WebSecurityOrigin"*, %"class.blink::SecurityOrigin"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #5

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink17WebSecurityOrigin6AssignERKS0_(%"class.blink::WebSecurityOrigin"*, %"class.blink::WebSecurityOrigin"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4absl13make_optionalIRKN3WTF6StringEEENS_8optionalINSt3__15decayIT_E4typeEEEOS8_: argument 0"}
!5 = distinct !{!5, !"_ZN4absl13make_optionalIRKN3WTF6StringEEENS_8optionalINSt3__15decayIT_E4typeEEEOS8_"}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN4absl13make_optionalIRKN3WTF6StringEEENS_8optionalINSt3__15decayIT_E4typeEEEOS8_: argument 0"}
!9 = distinct !{!9, !"_ZN4absl13make_optionalIRKN3WTF6StringEEENS_8optionalINSt3__15decayIT_E4typeEEEOS8_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN4absl13make_optionalIRKN3WTF6StringEEENS_8optionalINSt3__15decayIT_E4typeEEEOS8_: argument 0"}
!12 = distinct !{!12, !"_ZN4absl13make_optionalIRKN3WTF6StringEEENS_8optionalINSt3__15decayIT_E4typeEEEOS8_"}
