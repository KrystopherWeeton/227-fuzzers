; ModuleID = '../../v8/src/heap/marking-barrier.cc'
source_filename = "../../v8/src/heap/marking-barrier.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.v8::internal::MarkingBarrier" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::IncrementalMarking"*, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.v8::internal::MajorMarkingState", [7 x i8], %"class.std::__1::unordered_map.637", i8, i8, i8, [5 x i8] }>
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.215", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.269", %"class.std::__1::vector.269", %"class.std::__1::vector.269", %"class.std::__1::vector.276", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.170", %"class.std::__1::vector.171", %"class.std::__1::vector.178", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.170" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, [16 x %"class.v8::internal::HeapObject"] }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::vector.171" = type { %"class.std::__1::__vector_base.172" }
%"class.std::__1::__vector_base.172" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.173" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.178" = type { %"class.std::__1::__vector_base.179" }
%"class.std::__1::__vector_base.179" = type { %"class.std::__1::unique_ptr.180"*, %"class.std::__1::unique_ptr.180"*, %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::unique_ptr.180" = type opaque
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.std::__1::unique_ptr.180"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, [64 x %"class.v8::internal::HeapObject"] }
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.186", %"class.v8::internal::Worklist.188", %"class.v8::internal::Worklist.188", %"class.v8::internal::Worklist.188", %"class.v8::internal::Worklist.190", %"class.v8::internal::Worklist.192", %"class.v8::internal::Worklist.194", %"class.v8::internal::Worklist.196", %"class.v8::internal::Worklist.198", %"class.v8::internal::Worklist.200" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, i64, [64 x %"class.v8::internal::TransitionArray"] }
%"class.v8::internal::TransitionArray" = type { %"class.v8::internal::WeakFixedArray" }
%"class.v8::internal::WeakFixedArray" = type { %"class.v8::internal::TorqueGeneratedWeakFixedArray" }
%"class.v8::internal::TorqueGeneratedWeakFixedArray" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.186" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.188" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.190" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.192" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.194" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.196" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.198" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.200" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.202", i8, i64 }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.218" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.170"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.218" = type { %"class.std::__1::__hash_table.219" }
%"class.std::__1::__hash_table.219" = type <{ %"class.std::__1::unique_ptr.220", %"class.std::__1::__compressed_pair.230", %"class.std::__1::__compressed_pair.235", %"class.std::__1::__compressed_pair.238", [4 x i8] }>
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222", %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"struct.std::__1::__hash_node_base.223"** }
%"struct.std::__1::__hash_node_base.223" = type { %"struct.std::__1::__hash_node_base.223"* }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.std::__1::__bucket_list_deallocator.225" }
%"class.std::__1::__bucket_list_deallocator.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"struct.std::__1::__hash_node_base.223" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.245" }
%"class.std::__1::unordered_map.245" = type { %"class.std::__1::__hash_table.246" }
%"class.std::__1::__hash_table.246" = type <{ %"class.std::__1::unique_ptr.247", %"class.std::__1::__compressed_pair.257", %"class.std::__1::__compressed_pair.262", %"class.std::__1::__compressed_pair.265", [4 x i8] }>
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249", %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"struct.std::__1::__hash_node_base.250"** }
%"struct.std::__1::__hash_node_base.250" = type { %"struct.std::__1::__hash_node_base.250"* }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.std::__1::__bucket_list_deallocator.252" }
%"class.std::__1::__bucket_list_deallocator.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.std::__1::__hash_node_base.250" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.269" = type { %"class.std::__1::__vector_base.270" }
%"class.std::__1::__vector_base.270" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.271" }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.15", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.77", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.15", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.15", %"struct.std::__1::atomic.59", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.59" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__cxx_atomic_impl.61" }
%"struct.std::__1::__cxx_atomic_impl.61" = type { %"struct.std::__1::__cxx_atomic_base_impl.62" }
%"struct.std::__1::__cxx_atomic_base_impl.62" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.63" }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.65" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.70", %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::atomic.77" = type { %"struct.std::__1::__atomic_base.78" }
%"struct.std::__1::__atomic_base.78" = type { %"struct.std::__1::__cxx_atomic_impl.79" }
%"struct.std::__1::__cxx_atomic_impl.79" = type { %"struct.std::__1::__cxx_atomic_base_impl.80" }
%"struct.std::__1::__cxx_atomic_base_impl.80" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i64 }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.81", i8, [7 x i8] }>
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { i64*, i64*, %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.276" = type { %"class.std::__1::__vector_base.277" }
%"class.std::__1::__vector_base.277" = type { %"struct.std::__1::pair.278"*, %"struct.std::__1::pair.278"*, %"class.std::__1::__compressed_pair.279" }
%"struct.std::__1::pair.278" = type opaque
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::pair.278"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.284", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.269"], [3 x %"class.std::__1::vector.269"], i8, %"struct.std::__1::atomic.141", [6 x i8], %"class.std::__1::vector.269", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"struct.std::__1::atomic.141" = type { %"struct.std::__1::__atomic_base.142" }
%"struct.std::__1::__atomic_base.142" = type { %"struct.std::__1::__cxx_atomic_impl.143" }
%"struct.std::__1::__cxx_atomic_impl.143" = type { %"struct.std::__1::__cxx_atomic_base_impl.144" }
%"struct.std::__1::__cxx_atomic_base_impl.144" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.352", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.356", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.361" }
%"struct.std::__1::atomic.352" = type { %"struct.std::__1::__atomic_base.353" }
%"struct.std::__1::__atomic_base.353" = type { %"struct.std::__1::__cxx_atomic_impl.354" }
%"struct.std::__1::__cxx_atomic_impl.354" = type { %"struct.std::__1::__cxx_atomic_base_impl.355" }
%"struct.std::__1::__cxx_atomic_base_impl.355" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.356" = type { %"struct.std::__1::__atomic_base.357" }
%"struct.std::__1::__atomic_base.357" = type { %"struct.std::__1::__cxx_atomic_impl.358" }
%"struct.std::__1::__cxx_atomic_impl.358" = type { %"struct.std::__1::__cxx_atomic_base_impl.359" }
%"struct.std::__1::__cxx_atomic_base_impl.359" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.361" = type { %"class.std::__1::__hash_table.362" }
%"class.std::__1::__hash_table.362" = type <{ %"class.std::__1::unique_ptr.363", %"class.std::__1::__compressed_pair.373", %"class.std::__1::__compressed_pair.378", %"class.std::__1::__compressed_pair.381", [4 x i8] }>
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365", %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"struct.std::__1::__hash_node_base.366"** }
%"struct.std::__1::__hash_node_base.366" = type { %"struct.std::__1::__hash_node_base.366"* }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"class.std::__1::__bucket_list_deallocator.368" }
%"class.std::__1::__bucket_list_deallocator.368" = type { %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"struct.std::__1::__hash_node_base.366" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.std::__1::unordered_map.637" = type { %"class.std::__1::__hash_table.638" }
%"class.std::__1::__hash_table.638" = type <{ %"class.std::__1::unique_ptr.639", %"class.std::__1::__compressed_pair.649", %"class.std::__1::__compressed_pair.654", %"class.std::__1::__compressed_pair.657", [4 x i8] }>
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641", %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"struct.std::__1::__hash_node_base.642"** }
%"struct.std::__1::__hash_node_base.642" = type { %"struct.std::__1::__hash_node_base.642"* }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.std::__1::__bucket_list_deallocator.644" }
%"class.std::__1::__bucket_list_deallocator.644" = type { %"class.std::__1::__compressed_pair.645" }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.650" }
%"struct.std::__1::__compressed_pair_elem.650" = type { %"struct.std::__1::__hash_node_base.642" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.20", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.135", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.150", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.154", %"class.std::__1::vector.154", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.298", %"class.std::__1::unique_ptr.304", %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.349", %"class.std::__1::unique_ptr.388", %"class.std::__1::unique_ptr.418", %"class.std::__1::unique_ptr.424", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.440", %"class.std::__1::unique_ptr.440", %"class.std::__1::unique_ptr.446", %"class.std::__1::unique_ptr.452", %"class.std::__1::unique_ptr.452", %"class.std::__1::unique_ptr.458", %"class.std::__1::unique_ptr.464", %"class.std::__1::shared_ptr.470", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.493", %"class.std::__1::unique_ptr.519", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.525", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.540", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.320", i8, [7 x i8], %"class.std::__1::unordered_map.546", %"class.std::__1::unordered_map.572", %"class.std::__1::unordered_map.546", %"class.std::__1::unordered_map.596", %"class.std::__1::vector.624", i8, %"class.std::__1::unique_ptr.631", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.15", %"struct.std::__1::atomic.15", %"struct.std::__1::atomic.15" }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.709", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.715", %"class.std::__1::unique_ptr.736", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.746", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.867", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.880", void (i32, %"class.v8::SharedArrayBuffer"*, i64, i64, double, %"class.v8::Isolate::AtomicsWaitWakeHandle"*, i8*)*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.890", void (%"class.v8::Context"*, %"class.v8::Module"*, %"class.v8::Object"*)*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.902", %"struct.std::__1::atomic.141", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.977", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1020"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1032", i32, i8, i8, i32, i32, %"class.std::__1::vector.1038", %"class.std::__1::vector.1038", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1045", i64, %"class.std::__1::unordered_map.1046", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.533", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.149", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1098", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1112", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, %"class.v8::Value"* (%"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Array"*)*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1146", %"class.std::__1::vector.1150", %"class.std::__1::vector.1150", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.704", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.704" = type { %"struct.std::__1::__atomic_base.705" }
%"struct.std::__1::__atomic_base.705" = type { %"struct.std::__1::__cxx_atomic_impl.706" }
%"struct.std::__1::__cxx_atomic_impl.706" = type { %"struct.std::__1::__cxx_atomic_base_impl.707" }
%"struct.std::__1::__cxx_atomic_base_impl.707" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.709" = type { %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.711" }
%"struct.std::__1::__compressed_pair_elem.711" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.533" }
%"class.std::__1::shared_ptr.715" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.128", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.730" }
%"class.std::__1::vector.128" = type { %"class.std::__1::__vector_base.129" }
%"class.std::__1::__vector_base.129" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.130" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.719" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.128", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.719" = type { %"class.std::__1::__vector_base.720" }
%"class.std::__1::__vector_base.720" = type { %"class.std::__1::unique_ptr.721"*, %"class.std::__1::unique_ptr.721"*, %"class.std::__1::__compressed_pair.722" }
%"class.std::__1::unique_ptr.721" = type { %"class.std::__1::__compressed_pair.1170" }
%"class.std::__1::__compressed_pair.1170" = type { %"struct.std::__1::__compressed_pair_elem.1171" }
%"struct.std::__1::__compressed_pair_elem.1171" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.722" = type { %"struct.std::__1::__compressed_pair_elem.723" }
%"struct.std::__1::__compressed_pair_elem.723" = type { %"class.std::__1::unique_ptr.721"* }
%"class.std::__1::unique_ptr.730" = type { %"class.std::__1::__compressed_pair.731" }
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.732" }
%"struct.std::__1::__compressed_pair_elem.732" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.739", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.739" = type { %"struct.std::__1::__atomic_base.740" }
%"struct.std::__1::__atomic_base.740" = type { %"struct.std::__1::__cxx_atomic_impl.741" }
%"struct.std::__1::__cxx_atomic_impl.741" = type { %"struct.std::__1::__cxx_atomic_base_impl.742" }
%"struct.std::__1::__cxx_atomic_base_impl.742" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.746" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.747", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.747" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.748", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.748" = type { %"class.std::__1::__vector_base.749" }
%"class.std::__1::__vector_base.749" = type { %"class.std::__1::unique_ptr.750"*, %"class.std::__1::unique_ptr.750"*, %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::unique_ptr.750" = type opaque
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.std::__1::unique_ptr.750"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.756 }
%union.anon.756 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.763", %"struct.std::__1::atomic.141", %"class.std::__1::unique_ptr.769", %"class.std::__1::unique_ptr.775", %"class.std::__1::unique_ptr.781", %"class.std::__1::unique_ptr.787", %"class.std::__1::unique_ptr.793", %"class.std::__1::set.799", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.769" = type { %"class.std::__1::__compressed_pair.770" }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.771" }
%"struct.std::__1::__compressed_pair_elem.771" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.775" = type { %"class.std::__1::__compressed_pair.776" }
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.777" }
%"struct.std::__1::__compressed_pair_elem.777" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.781" = type { %"class.std::__1::__compressed_pair.782" }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.783" }
%"struct.std::__1::__compressed_pair_elem.783" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.787" = type { %"class.std::__1::__compressed_pair.788" }
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.793" = type { %"class.std::__1::__compressed_pair.794" }
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.795" }
%"struct.std::__1::__compressed_pair_elem.795" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.799" = type { %"class.std::__1::__tree.800" }
%"class.std::__1::__tree.800" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.801", %"class.std::__1::__compressed_pair.805" }
%"class.std::__1::__compressed_pair.801" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.808" }
%"class.v8::internal::TaggedImpl.808" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.807" }
%"class.v8::internal::TaggedImpl.807" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.674", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.674" = type { %"class.std::__1::__compressed_pair.675" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.809", %"class.v8::internal::DetachableVector.810", %"class.v8::internal::DetachableVector.809", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.810" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.809" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr.668", %"class.std::__1::unique_ptr.471" }
%"class.std::__1::unique_ptr.668" = type { %"class.std::__1::__compressed_pair.669" }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.670" }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"class.v8::internal::VirtualMemory"* }
%"class.std::__1::unique_ptr.471" = type { %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.474", %"class.std::__1::set.482" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.474" = type { %"class.std::__1::__tree.475" }
%"class.std::__1::__tree.475" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.476", %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.482" = type { %"class.std::__1::__tree.483" }
%"class.std::__1::__tree.483" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.476", %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.811", %"class.std::__1::vector.817", %"class.std::__1::unique_ptr.824", %"class.std::__1::vector.831", %"class.std::__1::unique_ptr.838", i64, %"class.std::__1::vector.844", %"class.std::__1::vector.852", %"class.std::__1::vector.860", i8, i8, i32 }
%"class.std::__1::unique_ptr.811" = type { %"class.std::__1::__compressed_pair.812" }
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.813" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.817" = type { %"class.std::__1::__vector_base.818" }
%"class.std::__1::__vector_base.818" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.819" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820" }
%"struct.std::__1::__compressed_pair_elem.820" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.824" = type { %"class.std::__1::__compressed_pair.825" }
%"class.std::__1::__compressed_pair.825" = type { %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.v8::internal::GlobalHandles::NodeSpace.827"* }
%"class.v8::internal::GlobalHandles::NodeSpace.827" = type opaque
%"class.std::__1::vector.831" = type { %"class.std::__1::__vector_base.832" }
%"class.std::__1::__vector_base.832" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.833" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.833" = type { %"struct.std::__1::__compressed_pair_elem.834" }
%"struct.std::__1::__compressed_pair_elem.834" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.838" = type { %"class.std::__1::__compressed_pair.839" }
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.844" = type { %"class.std::__1::__vector_base.845" }
%"class.std::__1::__vector_base.845" = type { %"struct.std::__1::pair.846"*, %"struct.std::__1::pair.846"*, %"class.std::__1::__compressed_pair.847" }
%"struct.std::__1::pair.846" = type opaque
%"class.std::__1::__compressed_pair.847" = type { %"struct.std::__1::__compressed_pair_elem.848" }
%"struct.std::__1::__compressed_pair_elem.848" = type { %"struct.std::__1::pair.846"* }
%"class.std::__1::vector.852" = type { %"class.std::__1::__vector_base.853" }
%"class.std::__1::__vector_base.853" = type { %"struct.std::__1::pair.854"*, %"struct.std::__1::pair.854"*, %"class.std::__1::__compressed_pair.855" }
%"struct.std::__1::pair.854" = type opaque
%"class.std::__1::__compressed_pair.855" = type { %"struct.std::__1::__compressed_pair_elem.856" }
%"struct.std::__1::__compressed_pair_elem.856" = type { %"struct.std::__1::pair.854"* }
%"class.std::__1::vector.860" = type { %"class.std::__1::__vector_base.861" }
%"class.std::__1::__vector_base.861" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.862" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.680", %"class.std::__1::vector.867" }
%"class.std::__1::vector.680" = type { %"class.std::__1::__vector_base.681" }
%"class.std::__1::__vector_base.681" = type { i64**, i64**, %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.874" }
%"class.std::__1::unique_ptr.874" = type { %"class.std::__1::__compressed_pair.875" }
%"class.std::__1::__compressed_pair.875" = type { %"struct.std::__1::__compressed_pair_elem.876" }
%"struct.std::__1::__compressed_pair_elem.876" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.867" = type { %"class.std::__1::__vector_base.868" }
%"class.std::__1::__vector_base.868" = type { i32*, i32*, %"class.std::__1::__compressed_pair.869" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.870" }
%"struct.std::__1::__compressed_pair_elem.870" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.880" = type { %"struct.std::__1::__atomic_base.881" }
%"struct.std::__1::__atomic_base.881" = type { %"struct.std::__1::__cxx_atomic_impl.882" }
%"struct.std::__1::__cxx_atomic_impl.882" = type { %"struct.std::__1::__cxx_atomic_base_impl.883" }
%"struct.std::__1::__cxx_atomic_base_impl.883" = type { i32 }
%"class.v8::SharedArrayBuffer" = type { i8 }
%"class.v8::Isolate::AtomicsWaitWakeHandle" = type { i8 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.890" = type { %"struct.std::__1::__atomic_base.891" }
%"struct.std::__1::__atomic_base.891" = type { %"struct.std::__1::__cxx_atomic_impl.892" }
%"struct.std::__1::__cxx_atomic_impl.892" = type { %"struct.std::__1::__cxx_atomic_base_impl.893" }
%"struct.std::__1::__cxx_atomic_base_impl.893" = type { i32 }
%"class.v8::Context" = type { i8 }
%"class.v8::Module" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.895" }
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.896" }
%"struct.std::__1::__compressed_pair_elem.896" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.897 }
%union.anon.897 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.902" = type { %"class.std::__1::__hash_table.903" }
%"class.std::__1::__hash_table.903" = type <{ %"class.std::__1::unique_ptr.904", %"class.std::__1::__compressed_pair.914", %"class.std::__1::__compressed_pair.919", %"class.std::__1::__compressed_pair.922", [4 x i8] }>
%"class.std::__1::unique_ptr.904" = type { %"class.std::__1::__compressed_pair.905" }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.906", %"struct.std::__1::__compressed_pair_elem.908" }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"struct.std::__1::__hash_node_base.907"** }
%"struct.std::__1::__hash_node_base.907" = type { %"struct.std::__1::__hash_node_base.907"* }
%"struct.std::__1::__compressed_pair_elem.908" = type { %"class.std::__1::__bucket_list_deallocator.909" }
%"class.std::__1::__bucket_list_deallocator.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.914" = type { %"struct.std::__1::__compressed_pair_elem.915" }
%"struct.std::__1::__compressed_pair_elem.915" = type { %"struct.std::__1::__hash_node_base.907" }
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.928", %"class.v8::internal::Handle.934", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.935", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.928" = type { %"class.std::__1::__compressed_pair.929" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.930" }
%"struct.std::__1::__compressed_pair_elem.930" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.934" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.935" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.936", %"class.std::__1::vector.942", %"class.std::__1::unique_ptr.950", %"class.std::__1::unique_ptr.956", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.962", %"class.std::__1::vector.968", %"struct.std::__1::pair.976" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.936" = type { %"class.std::__1::__compressed_pair.937" }
%"class.std::__1::__compressed_pair.937" = type { %"struct.std::__1::__compressed_pair_elem.938" }
%"struct.std::__1::__compressed_pair_elem.938" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.942" = type { %"class.std::__1::__vector_base.943" }
%"class.std::__1::__vector_base.943" = type { %"class.std::__1::unique_ptr.944"*, %"class.std::__1::unique_ptr.944"*, %"class.std::__1::__compressed_pair.945" }
%"class.std::__1::unique_ptr.944" = type opaque
%"class.std::__1::__compressed_pair.945" = type { %"struct.std::__1::__compressed_pair_elem.946" }
%"struct.std::__1::__compressed_pair_elem.946" = type { %"class.std::__1::unique_ptr.944"* }
%"class.std::__1::unique_ptr.950" = type { %"class.std::__1::__compressed_pair.951" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.952" }
%"struct.std::__1::__compressed_pair_elem.952" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.956" = type { %"class.std::__1::__compressed_pair.957" }
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.962" = type { %"class.std::__1::__compressed_pair.963" }
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.964" }
%"struct.std::__1::__compressed_pair_elem.964" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.968" = type { %"class.std::__1::__vector_base.969" }
%"class.std::__1::__vector_base.969" = type { %"struct.std::__1::pair.970"*, %"struct.std::__1::pair.970"*, %"class.std::__1::__compressed_pair.971" }
%"struct.std::__1::pair.970" = type opaque
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.972" }
%"struct.std::__1::__compressed_pair_elem.972" = type { %"struct.std::__1::pair.970"* }
%"struct.std::__1::pair.976" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.708"*, i16, i8*)*, i8* }
%"class.v8::Local.708" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.977" = type { %"class.std::__1::__compressed_pair.978" }
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.979" }
%"struct.std::__1::__compressed_pair_elem.979" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.980", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.980" = type { %"class.std::__1::__hash_table.981" }
%"class.std::__1::__hash_table.981" = type <{ %"class.std::__1::unique_ptr.982", %"class.std::__1::__compressed_pair.992", %"class.std::__1::__compressed_pair.997", %"class.std::__1::__compressed_pair.1001", [4 x i8] }>
%"class.std::__1::unique_ptr.982" = type { %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984", %"struct.std::__1::__compressed_pair_elem.986" }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"struct.std::__1::__hash_node_base.985"** }
%"struct.std::__1::__hash_node_base.985" = type { %"struct.std::__1::__hash_node_base.985"* }
%"struct.std::__1::__compressed_pair_elem.986" = type { %"class.std::__1::__bucket_list_deallocator.987" }
%"class.std::__1::__bucket_list_deallocator.987" = type { %"class.std::__1::__compressed_pair.988" }
%"class.std::__1::__compressed_pair.988" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"struct.std::__1::__hash_node_base.985" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.1015" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.1009"**, %"struct.std::__1::pair.1009"**, %"struct.std::__1::pair.1009"**, %"class.std::__1::__compressed_pair.1010" }
%"struct.std::__1::pair.1009" = type opaque
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.1011" }
%"struct.std::__1::__compressed_pair_elem.1011" = type { %"struct.std::__1::pair.1009"** }
%"class.std::__1::__compressed_pair.1015" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::String" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1020" = type { %"class.std::__1::__vector_base.1021" }
%"class.std::__1::__vector_base.1021" = type { %"class.v8::internal::Handle.1022"*, %"class.v8::internal::Handle.1022"*, %"class.std::__1::__compressed_pair.1023" }
%"class.v8::internal::Handle.1022" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"class.v8::internal::Handle.1022"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type { %"class.v8::MicrotaskQueue", i64, i64, i64, i64*, i64, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"*, i32, i32, i32, i8, %"class.std::__1::vector.1028" }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.std::__1::vector.1028" = type { %"class.std::__1::__vector_base.1029" }
%"class.std::__1::__vector_base.1029" = type { %"struct.std::__1::pair.1009"*, %"struct.std::__1::pair.1009"*, %"class.std::__1::__compressed_pair.1030" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.1031" }
%"struct.std::__1::__compressed_pair_elem.1031" = type { %"struct.std::__1::pair.1009"* }
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.885", i32, %"class.v8::Local.708" }
%"class.v8::Local.885" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1032" = type { %"class.std::__1::__compressed_pair.1033" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.1034" }
%"struct.std::__1::__compressed_pair_elem.1034" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.680", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1038" = type { %"class.std::__1::__vector_base.1039" }
%"class.std::__1::__vector_base.1039" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1040" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.1041" }
%"struct.std::__1::__compressed_pair_elem.1041" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1045" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1046" = type { %"class.std::__1::__hash_table.1047" }
%"class.std::__1::__hash_table.1047" = type <{ %"class.std::__1::unique_ptr.1048", %"class.std::__1::__compressed_pair.1058", %"class.std::__1::__compressed_pair.1063", %"class.std::__1::__compressed_pair.1066", [4 x i8] }>
%"class.std::__1::unique_ptr.1048" = type { %"class.std::__1::__compressed_pair.1049" }
%"class.std::__1::__compressed_pair.1049" = type { %"struct.std::__1::__compressed_pair_elem.1050", %"struct.std::__1::__compressed_pair_elem.1052" }
%"struct.std::__1::__compressed_pair_elem.1050" = type { %"struct.std::__1::__hash_node_base.1051"** }
%"struct.std::__1::__hash_node_base.1051" = type { %"struct.std::__1::__hash_node_base.1051"* }
%"struct.std::__1::__compressed_pair_elem.1052" = type { %"class.std::__1::__bucket_list_deallocator.1053" }
%"class.std::__1::__bucket_list_deallocator.1053" = type { %"class.std::__1::__compressed_pair.1054" }
%"class.std::__1::__compressed_pair.1054" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.1059" }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"struct.std::__1::__hash_node_base.1051" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1066" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.533" = type { %"class.std::__1::__vector_base.534" }
%"class.std::__1::__vector_base.534" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.535" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.536" }
%"struct.std::__1::__compressed_pair_elem.536" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.149" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1070", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1095", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1096", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1070" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.528, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.528 = type { i64 }
%"class.std::__1::weak_ptr.1095" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.149" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1096" = type { %"class.v8::PersistentBase.1097" }
%"class.v8::PersistentBase.1097" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1071", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1071" = type { %"class.std::__1::__hash_table.1072" }
%"class.std::__1::__hash_table.1072" = type <{ %"class.std::__1::unique_ptr.1073", %"class.std::__1::__compressed_pair.1083", %"class.std::__1::__compressed_pair.1088", %"class.std::__1::__compressed_pair.1091", [4 x i8] }>
%"class.std::__1::unique_ptr.1073" = type { %"class.std::__1::__compressed_pair.1074" }
%"class.std::__1::__compressed_pair.1074" = type { %"struct.std::__1::__compressed_pair_elem.1075", %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1075" = type { %"struct.std::__1::__hash_node_base.1076"** }
%"struct.std::__1::__hash_node_base.1076" = type { %"struct.std::__1::__hash_node_base.1076"* }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.std::__1::__bucket_list_deallocator.1078" }
%"class.std::__1::__bucket_list_deallocator.1078" = type { %"class.std::__1::__compressed_pair.1079" }
%"class.std::__1::__compressed_pair.1079" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1083" = type { %"struct.std::__1::__compressed_pair_elem.1084" }
%"struct.std::__1::__compressed_pair_elem.1084" = type { %"struct.std::__1::__hash_node_base.1076" }
%"class.std::__1::__compressed_pair.1088" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1098" = type { %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.1100" }
%"struct.std::__1::__compressed_pair_elem.1100" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1103", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.661", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.665", %"class.std::__1::unique_ptr.690", %"class.std::__1::unique_ptr.464", %"class.std::__1::vector.696", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.661" = type { %"struct.std::__1::__atomic_base.662" }
%"struct.std::__1::__atomic_base.662" = type { %"struct.std::__1::__cxx_atomic_impl.663" }
%"struct.std::__1::__cxx_atomic_impl.663" = type { %"struct.std::__1::__cxx_atomic_base_impl.664" }
%"struct.std::__1::__cxx_atomic_base_impl.664" = type { i32 }
%"class.std::__1::unique_ptr.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.667" }
%"struct.std::__1::__compressed_pair_elem.667" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.680" }
%"class.std::__1::unique_ptr.690" = type { %"class.std::__1::__compressed_pair.691" }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.692" }
%"struct.std::__1::__compressed_pair_elem.692" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.696" = type { %"class.std::__1::__vector_base.697" }
%"class.std::__1::__vector_base.697" = type { %"struct.std::__1::pair.698"*, %"struct.std::__1::pair.698"*, %"class.std::__1::__compressed_pair.699" }
%"struct.std::__1::pair.698" = type opaque
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"struct.std::__1::pair.698"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.88" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.29", %"class.std::__1::vector.29", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.31" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.36" }
%"class.std::__1::__hash_table.36" = type <{ %"class.std::__1::unique_ptr.37", %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.54", [4 x i8] }>
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39", %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::__hash_node_base.40"** }
%"struct.std::__1::__hash_node_base.40" = type { %"struct.std::__1::__hash_node_base.40"* }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::__bucket_list_deallocator.42" }
%"class.std::__1::__bucket_list_deallocator.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.40" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1103" = type { %"class.std::__1::__compressed_pair.1104" }
%"class.std::__1::__compressed_pair.1104" = type { %"struct.std::__1::__compressed_pair_elem.1105" }
%"struct.std::__1::__compressed_pair_elem.1105" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1112" = type { %"class.std::__1::__compressed_pair.1113" }
%"class.std::__1::__compressed_pair.1113" = type { %"struct.std::__1::__compressed_pair_elem.1114" }
%"struct.std::__1::__compressed_pair_elem.1114" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.886", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.886" = type { %"class.v8::Context"* }
%"class.v8::Array" = type { i8 }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1120" }
%"class.std::__1::unordered_map.1120" = type { %"class.std::__1::__hash_table.1121" }
%"class.std::__1::__hash_table.1121" = type <{ %"class.std::__1::unique_ptr.1122", %"class.std::__1::__compressed_pair.1132", %"class.std::__1::__compressed_pair.1137", %"class.std::__1::__compressed_pair.1140", [4 x i8] }>
%"class.std::__1::unique_ptr.1122" = type { %"class.std::__1::__compressed_pair.1123" }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124", %"struct.std::__1::__compressed_pair_elem.1126" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"struct.std::__1::__hash_node_base.1125"** }
%"struct.std::__1::__hash_node_base.1125" = type { %"struct.std::__1::__hash_node_base.1125"* }
%"struct.std::__1::__compressed_pair_elem.1126" = type { %"class.std::__1::__bucket_list_deallocator.1127" }
%"class.std::__1::__bucket_list_deallocator.1127" = type { %"class.std::__1::__compressed_pair.1128" }
%"class.std::__1::__compressed_pair.1128" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1132" = type { %"struct.std::__1::__compressed_pair_elem.1133" }
%"struct.std::__1::__compressed_pair_elem.1133" = type { %"struct.std::__1::__hash_node_base.1125" }
%"class.std::__1::__compressed_pair.1137" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1140" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::atomic.1146" = type { %"struct.std::__1::__atomic_base.1147" }
%"struct.std::__1::__atomic_base.1147" = type { %"struct.std::__1::__cxx_atomic_impl.1148" }
%"struct.std::__1::__cxx_atomic_impl.1148" = type { %"struct.std::__1::__cxx_atomic_base_impl.1149" }
%"struct.std::__1::__cxx_atomic_base_impl.1149" = type { %"class.std::__1::vector.1150"* }
%"class.std::__1::vector.1150" = type { %"class.std::__1::__vector_base.1151" }
%"class.std::__1::__vector_base.1151" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1152" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1152" = type { %"struct.std::__1::__compressed_pair_elem.1153" }
%"struct.std::__1::__compressed_pair_elem.1153" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.24" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.92" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"*, %"class.std::__1::__compressed_pair.95" }
%"struct.std::__1::pair.94" = type { i32, i64 }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.std::__1::pair.94"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.100" }
%"class.std::__1::unordered_map.100" = type { %"class.std::__1::__hash_table.101" }
%"class.std::__1::__hash_table.101" = type <{ %"class.std::__1::unique_ptr.102", %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.117", %"class.std::__1::__compressed_pair.122", [4 x i8] }>
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104", %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.105"** }
%"struct.std::__1::__hash_node_base.105" = type { %"struct.std::__1::__hash_node_base.105"* }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.std::__1::__bucket_list_deallocator.107" }
%"class.std::__1::__bucket_list_deallocator.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.std::__1::__hash_node_base.105" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.141", %"struct.std::__1::atomic.145", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.145" = type { %"struct.std::__1::__atomic_base.146" }
%"struct.std::__1::__atomic_base.146" = type { %"struct.std::__1::__cxx_atomic_impl.147" }
%"struct.std::__1::__cxx_atomic_impl.147" = type { %"struct.std::__1::__cxx_atomic_base_impl.148" }
%"struct.std::__1::__cxx_atomic_base_impl.148" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.150" = type { %"struct.std::__1::__atomic_base.151" }
%"struct.std::__1::__atomic_base.151" = type { %"struct.std::__1::__cxx_atomic_impl.152" }
%"struct.std::__1::__cxx_atomic_impl.152" = type { %"struct.std::__1::__cxx_atomic_base_impl.153" }
%"struct.std::__1::__cxx_atomic_base_impl.153" = type { i32 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.156" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.294"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.269", %"class.std::__1::vector.269", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.294" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::HeapObject, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::HeapObject, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::HeapObject, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::HeapObject, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::HeapObject, 64>::Segment" = type { %"class.v8::internal::Worklist<v8::internal::HeapObject, 64>::Segment"*, i64, [64 x %"class.v8::internal::HeapObject"] }
%"class.v8::internal::Worklist<v8::internal::HeapObject, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.320", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.313"], %"class.std::__1::unique_ptr.284" }
%"class.std::__1::vector.313" = type { %"class.std::__1::__vector_base.314" }
%"class.std::__1::__vector_base.314" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.std::__1::unique_ptr.388" = type { %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.284", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.141", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.391", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.391" = type { %"class.std::__1::__hash_table.392" }
%"class.std::__1::__hash_table.392" = type <{ %"class.std::__1::unique_ptr.393", %"class.std::__1::__compressed_pair.403", %"class.std::__1::__compressed_pair.408", %"class.std::__1::__compressed_pair.411", [4 x i8] }>
%"class.std::__1::unique_ptr.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395", %"struct.std::__1::__compressed_pair_elem.397" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"struct.std::__1::__hash_node_base.396"** }
%"struct.std::__1::__hash_node_base.396" = type { %"struct.std::__1::__hash_node_base.396"* }
%"struct.std::__1::__compressed_pair_elem.397" = type { %"class.std::__1::__bucket_list_deallocator.398" }
%"class.std::__1::__bucket_list_deallocator.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"struct.std::__1::__hash_node_base.396" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.424" = type { %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.427" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.440" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::EmbedderHeapTracer"*, %"class.v8::internal::DefaultEmbedderRootsHandler", i32, i8, [3 x i8], %"struct.v8::internal::LocalEmbedderHeapTracer::RemoteStatistics", %"struct.v8::WrapperDescriptor", [4 x i8] }>
%"class.v8::EmbedderHeapTracer" = type { i32 (...)**, %"class.v8::Isolate"* }
%"class.v8::internal::DefaultEmbedderRootsHandler" = type { %"class.v8::EmbedderRootsHandler", %"class.v8::EmbedderHeapTracer"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.v8::internal::LocalEmbedderHeapTracer::RemoteStatistics" = type { i64, i64, i64 }
%"struct.v8::WrapperDescriptor" = type <{ i32, i32, i16, [2 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.std::__1::shared_ptr.470" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.489", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.471", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.489" = type { %"struct.std::__1::__atomic_base.490" }
%"struct.std::__1::__atomic_base.490" = type { %"struct.std::__1::__cxx_atomic_impl.491" }
%"struct.std::__1::__cxx_atomic_impl.491" = type { %"struct.std::__1::__cxx_atomic_base_impl.492" }
%"struct.std::__1::__cxx_atomic_base_impl.492" = type { i8* }
%"class.v8::CppHeap" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.493" = type { %"class.std::__1::__hash_table.494" }
%"class.std::__1::__hash_table.494" = type <{ %"class.std::__1::unique_ptr.495", %"class.std::__1::__compressed_pair.505", %"class.std::__1::__compressed_pair.510", %"class.std::__1::__compressed_pair.513", [4 x i8] }>
%"class.std::__1::unique_ptr.495" = type { %"class.std::__1::__compressed_pair.496" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.497", %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"struct.std::__1::__hash_node_base.498"** }
%"struct.std::__1::__hash_node_base.498" = type { %"struct.std::__1::__hash_node_base.498"* }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"class.std::__1::__bucket_list_deallocator.500" }
%"class.std::__1::__bucket_list_deallocator.500" = type { %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"struct.std::__1::__hash_node_base.498" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.519" = type { %"class.std::__1::__compressed_pair.520" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.521" }
%"struct.std::__1::__compressed_pair_elem.521" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.525" = type { %"class.std::__1::__compressed_pair.526" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527" }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type <{ %"class.v8::internal::GlobalSafepoint::Barrier", %"class.v8::internal::Heap"*, %"class.v8::base::Mutex", %"class.v8::internal::LocalHeap"*, i32, [4 x i8] }>
%"class.v8::internal::GlobalSafepoint::Barrier" = type { %"class.v8::base::Mutex", %"class.v8::base::ConditionVariable", %"class.v8::base::ConditionVariable", i8, i32 }
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.533", %"class.std::__1::vector.533" }
%"class.std::__1::unique_ptr.540" = type { %"class.std::__1::__compressed_pair.541" }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.std::__1::unordered_set.320" = type { %"class.std::__1::__hash_table.321" }
%"class.std::__1::__hash_table.321" = type <{ %"class.std::__1::unique_ptr.322", %"class.std::__1::__compressed_pair.332", %"class.std::__1::__compressed_pair.337", %"class.std::__1::__compressed_pair.341", [4 x i8] }>
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324", %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"struct.std::__1::__hash_node_base.325"** }
%"struct.std::__1::__hash_node_base.325" = type { %"struct.std::__1::__hash_node_base.325"* }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.std::__1::__bucket_list_deallocator.327" }
%"class.std::__1::__bucket_list_deallocator.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"struct.std::__1::__hash_node_base.325" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.572" = type { %"class.std::__1::__hash_table.573" }
%"class.std::__1::__hash_table.573" = type <{ %"class.std::__1::unique_ptr.574", %"class.std::__1::__compressed_pair.584", %"class.std::__1::__compressed_pair.589", %"class.std::__1::__compressed_pair.592", [4 x i8] }>
%"class.std::__1::unique_ptr.574" = type { %"class.std::__1::__compressed_pair.575" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576", %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"struct.std::__1::__hash_node_base.577"** }
%"struct.std::__1::__hash_node_base.577" = type { %"struct.std::__1::__hash_node_base.577"* }
%"struct.std::__1::__compressed_pair_elem.578" = type { %"class.std::__1::__bucket_list_deallocator.579" }
%"class.std::__1::__bucket_list_deallocator.579" = type { %"class.std::__1::__compressed_pair.580" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"struct.std::__1::__hash_node_base.577" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.546" = type { %"class.std::__1::__hash_table.547" }
%"class.std::__1::__hash_table.547" = type <{ %"class.std::__1::unique_ptr.548", %"class.std::__1::__compressed_pair.558", %"class.std::__1::__compressed_pair.563", %"class.std::__1::__compressed_pair.566", [4 x i8] }>
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550", %"struct.std::__1::__compressed_pair_elem.552" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"struct.std::__1::__hash_node_base.551"** }
%"struct.std::__1::__hash_node_base.551" = type { %"struct.std::__1::__hash_node_base.551"* }
%"struct.std::__1::__compressed_pair_elem.552" = type { %"class.std::__1::__bucket_list_deallocator.553" }
%"class.std::__1::__bucket_list_deallocator.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"struct.std::__1::__hash_node_base.551" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.618", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.624" = type { %"class.std::__1::__vector_base.625" }
%"class.std::__1::__vector_base.625" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.631" = type { %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.633" }
%"struct.std::__1::__compressed_pair_elem.633" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::SlotSet::Bucket" = type { [32 x i32] }
%"class.v8::internal::RelocInfo" = type { i64, i8, i64, %"class.v8::internal::Code", i64 }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::tuple.1190" = type { i8 }
%"struct.v8::internal::MarkCompactCollector::RecordRelocSlotInfo" = type { %"class.v8::internal::MemoryChunk"*, i32, i8, i32 }
%"class.v8::internal::LargePage" = type { %"class.v8::internal::MemoryChunk" }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base.642", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.1167" }
%"struct.std::__1::pair.1167" = type { %"class.v8::internal::MemoryChunk"*, %"class.std::__1::unique_ptr.1158" }
%"class.std::__1::unique_ptr.1158" = type { %"class.std::__1::__compressed_pair.1159" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.1160" }
%"struct.std::__1::__compressed_pair_elem.1160" = type { %"class.v8::internal::TypedSlots"* }

$_ZN4heap4base8WorklistIN2v88internal10HeapObjectELt64EE5LocalD2Ev = comdat any

$_ZN2v88internal14MarkingBarrier9MarkValueENS0_10HeapObjectES2_ = comdat any

$_ZN4heap4base8WorklistIN2v88internal10HeapObjectELt64EE5Local7PublishEv = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkENS_10unique_ptrINS3_10TypedSlotsENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS3_16BasicMemoryChunk6HasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkENS_10unique_ptrINS3_10TypedSlotsENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS3_16BasicMemoryChunk6HasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkENS_10unique_ptrINS3_10TypedSlotsENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS3_16BasicMemoryChunk6HasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE8__rehashEm = comdat any

@_ZN2v88internal25FLAG_track_retaining_pathE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal30FLAG_trace_incremental_markingE = external local_unnamed_addr global i8, align 1
@.str = private unnamed_addr constant [52 x i8] c"[IncrementalMarking] Restarting (new grey objects)\0A\00", align 1
@_ZTVN2v88internal10TypedSlotsE = external unnamed_addr constant { [4 x i8*] }, align 8
@.str.1 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.2 = private unnamed_addr constant [47 x i8] c"push_segment_ implies push_segment_->IsEmpty()\00", align 1
@.str.3 = private unnamed_addr constant [45 x i8] c"pop_segment_ implies pop_segment_->IsEmpty()\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN2v88internal14MarkingBarrierC1EPNS0_4HeapE = hidden unnamed_addr alias void (%"class.v8::internal::MarkingBarrier"*, %"class.v8::internal::Heap"*), void (%"class.v8::internal::MarkingBarrier"*, %"class.v8::internal::Heap"*)* @_ZN2v88internal14MarkingBarrierC2EPNS0_4HeapE
@_ZN2v88internal14MarkingBarrierC1EPNS0_9LocalHeapE = hidden unnamed_addr alias void (%"class.v8::internal::MarkingBarrier"*, %"class.v8::internal::LocalHeap"*), void (%"class.v8::internal::MarkingBarrier"*, %"class.v8::internal::LocalHeap"*)* @_ZN2v88internal14MarkingBarrierC2EPNS0_9LocalHeapE
@_ZN2v88internal14MarkingBarrierD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::MarkingBarrier"*), void (%"class.v8::internal::MarkingBarrier"*)* @_ZN2v88internal14MarkingBarrierD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MarkingBarrierC2EPNS0_4HeapE(%"class.v8::internal::MarkingBarrier"* nocapture, %"class.v8::internal::Heap"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 0
  store %"class.v8::internal::Heap"* %1, %"class.v8::internal::Heap"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %1, i64 0, i32 81, i32 0, i32 0, i32 0
  %6 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %5, align 8
  store %"class.v8::internal::MarkCompactCollector"* %6, %"class.v8::internal::MarkCompactCollector"** %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %1, i64 0, i32 86, i32 0, i32 0, i32 0
  %9 = bitcast %"class.v8::internal::IncrementalMarking"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.v8::internal::IncrementalMarking"** %7 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %6, i64 0, i32 10, i32 0
  %13 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 3, i32 0
  store %"class.heap::base::Worklist"* %12, %"class.heap::base::Worklist"** %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 3, i32 1
  %15 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #11
  store %"class.heap::base::internal::SegmentBase"* %15, %"class.heap::base::internal::SegmentBase"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 3, i32 2
  %17 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #11
  store %"class.heap::base::internal::SegmentBase"* %17, %"class.heap::base::internal::SegmentBase"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 6
  %19 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 6, i32 0, i32 3
  %20 = bitcast %"class.std::__1::__compressed_pair.657"* %19 to i32*
  %21 = bitcast %"class.std::__1::unordered_map.637"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %20, align 4
  %22 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 7
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 8
  store i8 0, i8* %23, align 1
  %24 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 9
  store i8 1, i8* %24, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MarkingBarrierC2EPNS0_9LocalHeapE(%"class.v8::internal::MarkingBarrier"* nocapture, %"class.v8::internal::LocalHeap"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %1, i64 0, i32 0
  %5 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %4, align 8
  store %"class.v8::internal::Heap"* %5, %"class.v8::internal::Heap"** %3, align 8
  %6 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %5, i64 0, i32 81, i32 0, i32 0, i32 0
  %8 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %7, align 8
  store %"class.v8::internal::MarkCompactCollector"* %8, %"class.v8::internal::MarkCompactCollector"** %6, align 8
  %9 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 2
  store %"class.v8::internal::IncrementalMarking"* null, %"class.v8::internal::IncrementalMarking"** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %8, i64 0, i32 10, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 3, i32 0
  store %"class.heap::base::Worklist"* %10, %"class.heap::base::Worklist"** %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 3, i32 1
  %13 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #11
  store %"class.heap::base::internal::SegmentBase"* %13, %"class.heap::base::internal::SegmentBase"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 3, i32 2
  %15 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #11
  store %"class.heap::base::internal::SegmentBase"* %15, %"class.heap::base::internal::SegmentBase"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 6
  %17 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 6, i32 0, i32 3
  %18 = bitcast %"class.std::__1::__compressed_pair.657"* %17 to i32*
  %19 = bitcast %"class.std::__1::unordered_map.637"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %18, align 4
  %20 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 7
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 8
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 9
  store i8 0, i8* %22, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MarkingBarrierD2Ev(%"class.v8::internal::MarkingBarrier"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.642"* %3, null
  br i1 %4, label %21, label %5

5:                                                ; preds = %1, %18
  %6 = phi %"struct.std::__1::__hash_node_base.642"* [ %8, %18 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642", %"struct.std::__1::__hash_node_base.642"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642", %"struct.std::__1::__hash_node_base.642"* %6, i64 3
  %10 = bitcast %"struct.std::__1::__hash_node_base.642"* %9 to %"class.v8::internal::TypedSlots"**
  %11 = load %"class.v8::internal::TypedSlots"*, %"class.v8::internal::TypedSlots"** %10, align 8
  store %"class.v8::internal::TypedSlots"* null, %"class.v8::internal::TypedSlots"** %10, align 8
  %12 = icmp eq %"class.v8::internal::TypedSlots"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %5
  %14 = bitcast %"class.v8::internal::TypedSlots"* %11 to void (%"class.v8::internal::TypedSlots"*)***
  %15 = load void (%"class.v8::internal::TypedSlots"*)**, void (%"class.v8::internal::TypedSlots"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.v8::internal::TypedSlots"*)*, void (%"class.v8::internal::TypedSlots"*)** %15, i64 1
  %17 = load void (%"class.v8::internal::TypedSlots"*)*, void (%"class.v8::internal::TypedSlots"*)** %16, align 8
  tail call void %17(%"class.v8::internal::TypedSlots"* nonnull %11) #11
  br label %18

18:                                               ; preds = %13, %5
  %19 = bitcast %"struct.std::__1::__hash_node_base.642"* %6 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  %20 = icmp eq %"struct.std::__1::__hash_node_base.642"* %8, null
  br i1 %20, label %21, label %5

21:                                               ; preds = %18, %1
  %22 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.642"**, %"struct.std::__1::__hash_node_base.642"*** %22, align 8
  store %"struct.std::__1::__hash_node_base.642"** null, %"struct.std::__1::__hash_node_base.642"*** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base.642"** %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %"struct.std::__1::__hash_node_base.642"** %23 to i8*
  tail call void @_ZdlPv(i8* %26) #12
  br label %27

27:                                               ; preds = %21, %25
  %28 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 3
  tail call void @_ZN4heap4base8WorklistIN2v88internal10HeapObjectELt64EE5LocalD2Ev(%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"* %28) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4heap4base8WorklistIN2v88internal10HeapObjectELt64EE5LocalD2Ev(%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"* %0, i64 0, i32 1
  %3 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %2, align 8
  %4 = icmp eq %"class.heap::base::internal::SegmentBase"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %3, i64 0, i32 1
  %7 = load i16, i16* %6, align 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %10, label %9, !prof !2

9:                                                ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable

10:                                               ; preds = %5, %1
  %11 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"* %0, i64 0, i32 2
  %12 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %11, align 8
  %13 = icmp eq %"class.heap::base::internal::SegmentBase"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %12, i64 0, i32 1
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %19, label %18, !prof !2

18:                                               ; preds = %14
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0)) #13
  unreachable

19:                                               ; preds = %14, %10
  %20 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #11
  %21 = icmp eq %"class.heap::base::internal::SegmentBase"* %20, %3
  %22 = or i1 %4, %21
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.heap::base::internal::SegmentBase"* %3 to i8*
  tail call void @_ZdlPv(i8* %24) #12
  br label %25

25:                                               ; preds = %19, %23
  %26 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %11, align 8
  %27 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #11
  %28 = icmp eq %"class.heap::base::internal::SegmentBase"* %27, %26
  %29 = icmp eq %"class.heap::base::internal::SegmentBase"* %26, null
  %30 = or i1 %29, %28
  br i1 %30, label %33, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.heap::base::internal::SegmentBase"* %26 to i8*
  tail call void @_ZdlPv(i8* %32) #12
  br label %33

33:                                               ; preds = %25, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MarkingBarrier5WriteENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES2_(%"class.v8::internal::MarkingBarrier"*, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = tail call zeroext i1 @_ZN2v88internal14MarkingBarrier9MarkValueENS0_10HeapObjectES2_(%"class.v8::internal::MarkingBarrier"* %0, i64 %1, i64 %3)
  br i1 %5, label %6, label %82

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 7
  %8 = load i8, i8* %7, align 8, !range !3
  %9 = icmp eq i8 %8, 0
  %10 = icmp eq i64 %2, 0
  %11 = or i1 %10, %9
  br i1 %11, label %82, label %12

12:                                               ; preds = %6
  %13 = and i64 %3, -262144
  %14 = inttoptr i64 %13 to %"class.v8::internal::BasicMemoryChunk"*
  %15 = and i64 %1, -262144
  %16 = inttoptr i64 %15 to %"class.v8::internal::MemoryChunk"*
  %17 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %14, i64 0, i32 1
  %18 = load atomic i64, i64* %17 monotonic, align 8
  %19 = and i64 %18, 64
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %82, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %16, i64 0, i32 0, i32 1
  %23 = load atomic i64, i64* %22 monotonic, align 8
  %24 = and i64 %23, 88
  %25 = icmp ne i64 %24, 0
  %26 = trunc i64 %23 to i16
  %27 = icmp sgt i16 %26, -1
  %28 = and i1 %27, %25
  br i1 %28, label %82, label %29

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %16, i64 0, i32 1, i64 1
  %31 = bitcast %"class.v8::internal::SlotSet"** %30 to i64*
  %32 = load atomic i64, i64* %31 acquire, align 8
  %33 = inttoptr i64 %32 to %"class.v8::internal::SlotSet"*
  %34 = icmp eq i64 %32, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %29
  %36 = tail call %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk15AllocateSlotSetILNS0_17RememberedSetTypeE1EEEPNS0_7SlotSetEv(%"class.v8::internal::MemoryChunk"* %16) #11
  br label %37

37:                                               ; preds = %35, %29
  %38 = phi %"class.v8::internal::SlotSet"* [ %36, %35 ], [ %33, %29 ]
  %39 = sub i64 %2, %15
  %40 = lshr i64 %39, 2
  %41 = lshr i64 %39, 12
  %42 = lshr i64 %39, 7
  %43 = and i64 %42, 31
  %44 = trunc i64 %40 to i32
  %45 = and i32 %44, 31
  %46 = bitcast %"class.v8::internal::SlotSet"* %38 to %"class.v8::internal::SlotSet::Bucket"**
  %47 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %46, i64 %41
  %48 = bitcast %"class.v8::internal::SlotSet::Bucket"** %47 to i64*
  %49 = load atomic i64, i64* %48 acquire, align 8
  %50 = inttoptr i64 %49 to %"class.v8::internal::SlotSet::Bucket"*
  %51 = icmp eq i64 %49, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %37
  %53 = tail call i8* @_ZN2v88internal8MallocednwEm(i64 128) #11
  %54 = bitcast i8* %53 to %"class.v8::internal::SlotSet::Bucket"*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %53, i8 0, i64 128, i1 false) #11
  %55 = ptrtoint i8* %53 to i64
  %56 = cmpxchg volatile i64* %48, i64 0, i64 %55 release monotonic
  %57 = extractvalue { i64, i1 } %56, 1
  br i1 %57, label %64, label %58

58:                                               ; preds = %52
  %59 = icmp eq i8* %53, null
  br i1 %59, label %61, label %60

60:                                               ; preds = %58
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %53) #11
  br label %61

61:                                               ; preds = %60, %58
  %62 = load atomic i64, i64* %48 acquire, align 8
  %63 = inttoptr i64 %62 to %"class.v8::internal::SlotSet::Bucket"*
  br label %64

64:                                               ; preds = %61, %52, %37
  %65 = phi %"class.v8::internal::SlotSet::Bucket"* [ %54, %52 ], [ %63, %61 ], [ %50, %37 ]
  %66 = shl i32 1, %45
  %67 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %65, i64 0, i32 0, i64 %43
  %68 = load atomic i32, i32* %67 acquire, align 4
  %69 = and i32 %68, %66
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %82

71:                                               ; preds = %64
  %72 = load atomic i32, i32* %67 monotonic, align 4
  br label %73

73:                                               ; preds = %77, %71
  %74 = phi i32 [ %72, %71 ], [ %80, %77 ]
  %75 = and i32 %74, %66
  %76 = icmp eq i32 %75, %66
  br i1 %76, label %82, label %77

77:                                               ; preds = %73
  %78 = or i32 %74, %66
  %79 = cmpxchg volatile i32* %67, i32 %74, i32 %78 release monotonic
  %80 = extractvalue { i32, i1 } %79, 0
  %81 = extractvalue { i32, i1 } %79, 1
  br i1 %81, label %82, label %73

82:                                               ; preds = %77, %73, %64, %21, %12, %6, %4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal14MarkingBarrier9MarkValueENS0_10HeapObjectES2_(%"class.v8::internal::MarkingBarrier"*, i64, i64) local_unnamed_addr #1 comdat align 2 {
  %4 = and i64 %2, -262144
  %5 = or i64 %4, 272
  %6 = sub i64 %2, %4
  %7 = trunc i64 %6 to i32
  %8 = lshr i32 %7, 2
  %9 = and i32 %8, 31
  %10 = shl i32 1, %9
  %11 = inttoptr i64 %5 to i32*
  %12 = lshr i64 %6, 7
  %13 = and i64 %12, 33554431
  %14 = getelementptr inbounds i32, i32* %11, i64 %13
  %15 = load atomic i32, i32* %14 monotonic, align 4
  br label %16

16:                                               ; preds = %20, %3
  %17 = phi i32 [ %15, %3 ], [ %23, %20 ]
  %18 = and i32 %17, %10
  %19 = icmp eq i32 %18, %10
  br i1 %19, label %89, label %20

20:                                               ; preds = %16
  %21 = or i32 %17, %10
  %22 = cmpxchg volatile i32* %14, i32 %17, i32 %21 release monotonic
  %23 = extractvalue { i32, i1 } %22, 0
  %24 = extractvalue { i32, i1 } %22, 1
  br i1 %24, label %25, label %16

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 3, i32 1
  %27 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %26, align 8
  %28 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %27, i64 0, i32 1
  %29 = load i16, i16* %28, align 2
  %30 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %27, i64 0, i32 0
  %31 = load i16, i16* %30, align 2
  %32 = icmp eq i16 %29, %31
  %33 = bitcast %"class.heap::base::internal::SegmentBase"* %27 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*
  br i1 %32, label %34, label %59, !prof !4

34:                                               ; preds = %25
  %35 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #11
  %36 = icmp eq %"class.heap::base::internal::SegmentBase"* %27, %35
  br i1 %36, label %51, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 3, i32 0
  %39 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %38, align 8
  %40 = bitcast %"class.heap::base::internal::SegmentBase"** %26 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"**
  %41 = load %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %40, align 8
  %42 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %39, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %42) #11
  %43 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %39, i64 0, i32 1
  %44 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %41, i64 0, i32 1
  %47 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = ptrtoint %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %41 to i64
  store atomic i64 %48, i64* %44 monotonic, align 8
  %49 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i64* %49, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %42) #11
  br label %51

51:                                               ; preds = %37, %34
  %52 = tail call i8* @_Znwm(i64 528) #12
  %53 = bitcast i8* %52 to i16*
  store i16 64, i16* %53, align 2
  %54 = getelementptr inbounds i8, i8* %52, i64 2
  %55 = bitcast i8* %54 to i16*
  store i16 0, i16* %55, align 2
  %56 = getelementptr inbounds i8, i8* %52, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 520, i1 false) #11
  %57 = bitcast %"class.heap::base::internal::SegmentBase"** %26 to i8**
  store i8* %52, i8** %57, align 8
  %58 = bitcast i8* %52 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*
  br label %59

59:                                               ; preds = %25, %51
  %60 = phi %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* [ %58, %51 ], [ %33, %25 ]
  %61 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %60, i64 0, i32 0, i32 1
  %62 = load i16, i16* %61, align 2
  %63 = add i16 %62, 1
  store i16 %63, i16* %61, align 2
  %64 = zext i16 %62 to i64
  %65 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %60, i64 0, i32 2, i64 %64, i32 0, i32 0, i32 0
  store i64 %2, i64* %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 9
  %67 = load i8, i8* %66, align 2, !range !3
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %83, label %69

69:                                               ; preds = %59
  %70 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 2
  %71 = load %"class.v8::internal::IncrementalMarking"*, %"class.v8::internal::IncrementalMarking"** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %71, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i8, i8* %72 seq_cst, align 1
  %74 = icmp eq i8 %73, 2
  br i1 %74, label %75, label %83

75:                                               ; preds = %69
  store atomic i8 1, i8* %72 seq_cst, align 1
  %76 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %83, label %78

78:                                               ; preds = %75
  %79 = bitcast %"class.v8::internal::IncrementalMarking"* %71 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %80, -41416
  %82 = inttoptr i64 %81 to %"class.v8::internal::Isolate"*
  tail call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %82, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0)) #11
  br label %83

83:                                               ; preds = %78, %75, %69, %59
  %84 = load i8, i8* @_ZN2v88internal25FLAG_track_retaining_pathE, align 1, !range !3
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %89, label %86, !prof !2

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 0
  %88 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %87, align 8
  tail call void @_ZN2v88internal4Heap16AddRetainingRootENS0_4RootENS0_10HeapObjectE(%"class.v8::internal::Heap"* %88, i32 22, i64 %2) #11
  br label %89

89:                                               ; preds = %16, %83, %86
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MarkingBarrier5WriteENS0_4CodeEPNS0_9RelocInfoENS0_10HeapObjectE(%"class.v8::internal::MarkingBarrier"*, i64, %"class.v8::internal::RelocInfo"*, i64) local_unnamed_addr #0 align 2 {
  %5 = tail call zeroext i1 @_ZN2v88internal14MarkingBarrier9MarkValueENS0_10HeapObjectES2_(%"class.v8::internal::MarkingBarrier"* %0, i64 %1, i64 %3)
  br i1 %5, label %6, label %16

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 7
  %8 = load i8, i8* %7, align 8, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 9
  %12 = load i8, i8* %11, align 2, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  tail call void @_ZN2v88internal20MarkCompactCollector15RecordRelocSlotENS0_4CodeEPNS0_9RelocInfoENS0_10HeapObjectE(i64 %1, %"class.v8::internal::RelocInfo"* %2, i64 %3) #11
  br label %16

15:                                               ; preds = %10
  tail call void @_ZN2v88internal14MarkingBarrier15RecordRelocSlotENS0_4CodeEPNS0_9RelocInfoENS0_10HeapObjectE(%"class.v8::internal::MarkingBarrier"* %0, i64 %1, %"class.v8::internal::RelocInfo"* %2, i64 %3)
  br label %16

16:                                               ; preds = %6, %15, %14, %4
  ret void
}

declare void @_ZN2v88internal20MarkCompactCollector15RecordRelocSlotENS0_4CodeEPNS0_9RelocInfoENS0_10HeapObjectE(i64, %"class.v8::internal::RelocInfo"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MarkingBarrier15RecordRelocSlotENS0_4CodeEPNS0_9RelocInfoENS0_10HeapObjectE(%"class.v8::internal::MarkingBarrier"*, i64, %"class.v8::internal::RelocInfo"*, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple.1190", align 1
  %7 = alloca %"struct.v8::internal::MarkCompactCollector::RecordRelocSlotInfo", align 8
  %8 = bitcast %"struct.v8::internal::MarkCompactCollector::RecordRelocSlotInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  call void @_ZN2v88internal20MarkCompactCollector22PrepareRecordRelocSlotENS0_4CodeEPNS0_9RelocInfoENS0_10HeapObjectE(%"struct.v8::internal::MarkCompactCollector::RecordRelocSlotInfo"* nonnull sret %7, i64 %1, %"class.v8::internal::RelocInfo"* %2, i64 %3) #11
  %9 = getelementptr inbounds %"struct.v8::internal::MarkCompactCollector::RecordRelocSlotInfo", %"struct.v8::internal::MarkCompactCollector::RecordRelocSlotInfo"* %7, i64 0, i32 2
  %10 = load i8, i8* %9, align 4, !range !3
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %44, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"struct.v8::internal::MarkCompactCollector::RecordRelocSlotInfo", %"struct.v8::internal::MarkCompactCollector::RecordRelocSlotInfo"* %7, i64 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 6, i32 0
  %15 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::MemoryChunk"** %13, %"class.v8::internal::MemoryChunk"*** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::tuple.1190", %"class.std::__1::tuple.1190"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #11
  %18 = call { %"struct.std::__1::__hash_node_base.642"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkENS_10unique_ptrINS3_10TypedSlotsENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS3_16BasicMemoryChunk6HasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.638"* %14, %"class.v8::internal::MemoryChunk"** nonnull dereferenceable(8) %13, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.1190"* nonnull dereferenceable(1) %6) #11
  %19 = extractvalue { %"struct.std::__1::__hash_node_base.642"*, i8 } %18, 0
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642", %"struct.std::__1::__hash_node_base.642"* %19, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  %21 = bitcast %"struct.std::__1::__hash_node_base.642"* %20 to %"class.v8::internal::TypedSlots"**
  %22 = load %"class.v8::internal::TypedSlots"*, %"class.v8::internal::TypedSlots"** %21, align 8
  %23 = icmp eq %"class.v8::internal::TypedSlots"* %22, null
  br i1 %23, label %24, label %38

24:                                               ; preds = %12
  %25 = call i8* @_Znwm(i64 24) #12
  %26 = bitcast i8* %25 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal10TypedSlotsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds i8, i8* %25, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #11
  %28 = load %"class.v8::internal::TypedSlots"*, %"class.v8::internal::TypedSlots"** %21, align 8
  %29 = bitcast %"struct.std::__1::__hash_node_base.642"* %20 to i8**
  store i8* %25, i8** %29, align 8
  %30 = icmp eq %"class.v8::internal::TypedSlots"* %28, null
  %31 = bitcast i8* %25 to %"class.v8::internal::TypedSlots"*
  br i1 %30, label %38, label %32

32:                                               ; preds = %24
  %33 = bitcast %"class.v8::internal::TypedSlots"* %28 to void (%"class.v8::internal::TypedSlots"*)***
  %34 = load void (%"class.v8::internal::TypedSlots"*)**, void (%"class.v8::internal::TypedSlots"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.v8::internal::TypedSlots"*)*, void (%"class.v8::internal::TypedSlots"*)** %34, i64 1
  %36 = load void (%"class.v8::internal::TypedSlots"*)*, void (%"class.v8::internal::TypedSlots"*)** %35, align 8
  call void %36(%"class.v8::internal::TypedSlots"* nonnull %28) #11
  %37 = load %"class.v8::internal::TypedSlots"*, %"class.v8::internal::TypedSlots"** %21, align 8
  br label %38

38:                                               ; preds = %12, %32, %24
  %39 = phi %"class.v8::internal::TypedSlots"* [ %22, %12 ], [ %37, %32 ], [ %31, %24 ]
  %40 = getelementptr inbounds %"struct.v8::internal::MarkCompactCollector::RecordRelocSlotInfo", %"struct.v8::internal::MarkCompactCollector::RecordRelocSlotInfo"* %7, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %"struct.v8::internal::MarkCompactCollector::RecordRelocSlotInfo", %"struct.v8::internal::MarkCompactCollector::RecordRelocSlotInfo"* %7, i64 0, i32 3
  %43 = load i32, i32* %42, align 8
  call void @_ZN2v88internal10TypedSlots6InsertENS0_8SlotTypeEj(%"class.v8::internal::TypedSlots"* %39, i32 %41, i32 %43) #11
  br label %44

44:                                               ; preds = %4, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal14MarkingBarrier5WriteENS0_13JSArrayBufferEPNS0_20ArrayBufferExtensionE(%"class.v8::internal::MarkingBarrier"* nocapture readnone, i64, %"class.v8::internal::ArrayBufferExtension"* nocapture) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::ArrayBufferExtension", %"class.v8::internal::ArrayBufferExtension"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 1, i8* %4 monotonic, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MarkingBarrier5WriteENS0_15DescriptorArrayEi(%"class.v8::internal::MarkingBarrier"* nocapture readonly, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = add i64 %1, 7
  %5 = inttoptr i64 %4 to i16*
  %6 = load atomic i16, i16* %5 monotonic, align 2
  %7 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 1
  %8 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %8, i64 0, i32 26
  %10 = load i32, i32* %9, align 4
  %11 = zext i16 %6 to i32
  %12 = lshr i16 %6, 2
  %13 = xor i32 %10, %11
  %14 = and i32 %13, 3
  %15 = icmp eq i32 %14, 0
  %16 = zext i16 %12 to i32
  %17 = select i1 %15, i32 %16, i32 0
  %18 = icmp slt i32 %17, %2
  br i1 %18, label %19, label %20

19:                                               ; preds = %3
  tail call void @_ZN2v88internal20MarkCompactCollector35MarkDescriptorArrayFromWriteBarrierENS0_15DescriptorArrayEi(%"class.v8::internal::MarkCompactCollector"* %8, i64 %1, i32 %2) #11
  br label %20

20:                                               ; preds = %19, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN2v88internal20MarkCompactCollector35MarkDescriptorArrayFromWriteBarrierENS0_15DescriptorArrayEi(%"class.v8::internal::MarkCompactCollector"*, i64, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN2v88internal20MarkCompactCollector22PrepareRecordRelocSlotENS0_4CodeEPNS0_9RelocInfoENS0_10HeapObjectE(%"struct.v8::internal::MarkCompactCollector::RecordRelocSlotInfo"* sret, i64, %"class.v8::internal::RelocInfo"*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN2v88internal10TypedSlots6InsertENS0_8SlotTypeEj(%"class.v8::internal::TypedSlots"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MarkingBarrier11ActivateAllEPNS0_4HeapEb(%"class.v8::internal::Heap"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 97, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::MarkingBarrier"*, %"class.v8::internal::MarkingBarrier"** %3, align 8
  tail call void @_ZN2v88internal14MarkingBarrier8ActivateEb(%"class.v8::internal::MarkingBarrier"* %4, i1 zeroext %1)
  %5 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 117, i32 0, i32 0, i32 0
  %6 = load %"class.v8::internal::GlobalSafepoint"*, %"class.v8::internal::GlobalSafepoint"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::GlobalSafepoint", %"class.v8::internal::GlobalSafepoint"* %6, i64 0, i32 3
  %8 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %7, align 8
  %9 = icmp eq %"class.v8::internal::LocalHeap"* %8, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %2, %10
  %11 = phi %"class.v8::internal::LocalHeap"* [ %15, %10 ], [ %8, %2 ]
  %12 = getelementptr %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %11, i64 0, i32 9, i32 0, i32 0, i32 0
  %13 = load %"class.v8::internal::MarkingBarrier"*, %"class.v8::internal::MarkingBarrier"** %12, align 8
  tail call void @_ZN2v88internal14MarkingBarrier8ActivateEb(%"class.v8::internal::MarkingBarrier"* %13, i1 zeroext %1) #11
  %14 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %11, i64 0, i32 6
  %15 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %14, align 8
  %16 = icmp eq %"class.v8::internal::LocalHeap"* %15, null
  br i1 %16, label %17, label %10

17:                                               ; preds = %10, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MarkingBarrier8ActivateEb(%"class.v8::internal::MarkingBarrier"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 7
  store i8 %3, i8* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 8
  store i8 1, i8* %5, align 1
  %6 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 9
  %7 = load i8, i8* %6, align 2, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %127, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %11, i64 0, i32 25
  %13 = load %"class.v8::internal::OldSpace"*, %"class.v8::internal::OldSpace"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::OldSpace", %"class.v8::internal::OldSpace"* %13, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %15 = bitcast %"class.v8::internal::MemoryChunk"** %14 to %"class.v8::internal::Page"**
  %16 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %15, align 8
  %17 = icmp eq %"class.v8::internal::Page"* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %9, %18
  %19 = phi %"class.v8::internal::Page"* [ %23, %18 ], [ %16, %9 ]
  %20 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %19, i64 0, i32 0
  tail call void @_ZN2v88internal11MemoryChunk25SetOldGenerationPageFlagsEb(%"class.v8::internal::MemoryChunk"* %20, i1 zeroext true) #11
  %21 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %19, i64 0, i32 0, i32 12, i32 0
  %22 = bitcast %"class.v8::internal::MemoryChunk"** %21 to %"class.v8::internal::Page"**
  %23 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %22, align 8
  %24 = icmp eq %"class.v8::internal::Page"* %23, null
  br i1 %24, label %25, label %18

25:                                               ; preds = %18
  %26 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %10, align 8
  br label %27

27:                                               ; preds = %25, %9
  %28 = phi %"class.v8::internal::Heap"* [ %26, %25 ], [ %11, %9 ]
  %29 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %28, i64 0, i32 27
  %30 = load %"class.v8::internal::MapSpace"*, %"class.v8::internal::MapSpace"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::MapSpace", %"class.v8::internal::MapSpace"* %30, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %32 = bitcast %"class.v8::internal::MemoryChunk"** %31 to %"class.v8::internal::Page"**
  %33 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %32, align 8
  %34 = icmp eq %"class.v8::internal::Page"* %33, null
  br i1 %34, label %44, label %35

35:                                               ; preds = %27, %35
  %36 = phi %"class.v8::internal::Page"* [ %40, %35 ], [ %33, %27 ]
  %37 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %36, i64 0, i32 0
  tail call void @_ZN2v88internal11MemoryChunk25SetOldGenerationPageFlagsEb(%"class.v8::internal::MemoryChunk"* %37, i1 zeroext true) #11
  %38 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %36, i64 0, i32 0, i32 12, i32 0
  %39 = bitcast %"class.v8::internal::MemoryChunk"** %38 to %"class.v8::internal::Page"**
  %40 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %39, align 8
  %41 = icmp eq %"class.v8::internal::Page"* %40, null
  br i1 %41, label %42, label %35

42:                                               ; preds = %35
  %43 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %10, align 8
  br label %44

44:                                               ; preds = %42, %27
  %45 = phi %"class.v8::internal::Heap"* [ %43, %42 ], [ %28, %27 ]
  %46 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %45, i64 0, i32 26
  %47 = load %"class.v8::internal::CodeSpace"*, %"class.v8::internal::CodeSpace"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::CodeSpace", %"class.v8::internal::CodeSpace"* %47, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %49 = bitcast %"class.v8::internal::MemoryChunk"** %48 to %"class.v8::internal::Page"**
  %50 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %49, align 8
  %51 = icmp eq %"class.v8::internal::Page"* %50, null
  br i1 %51, label %61, label %52

52:                                               ; preds = %44, %52
  %53 = phi %"class.v8::internal::Page"* [ %57, %52 ], [ %50, %44 ]
  %54 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %53, i64 0, i32 0
  tail call void @_ZN2v88internal11MemoryChunk25SetOldGenerationPageFlagsEb(%"class.v8::internal::MemoryChunk"* %54, i1 zeroext true) #11
  %55 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %53, i64 0, i32 0, i32 12, i32 0
  %56 = bitcast %"class.v8::internal::MemoryChunk"** %55 to %"class.v8::internal::Page"**
  %57 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %56, align 8
  %58 = icmp eq %"class.v8::internal::Page"* %57, null
  br i1 %58, label %59, label %52

59:                                               ; preds = %52
  %60 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %10, align 8
  br label %61

61:                                               ; preds = %59, %44
  %62 = phi %"class.v8::internal::Heap"* [ %60, %59 ], [ %45, %44 ]
  %63 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %62, i64 0, i32 24
  %64 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %64, i64 0, i32 4, i32 0, i32 2, i32 0
  %66 = bitcast %"class.v8::internal::MemoryChunk"** %65 to %"class.v8::internal::Page"**
  %67 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %66, align 8
  %68 = icmp eq %"class.v8::internal::Page"* %67, null
  br i1 %68, label %78, label %69

69:                                               ; preds = %61, %69
  %70 = phi %"class.v8::internal::Page"* [ %74, %69 ], [ %67, %61 ]
  %71 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %70, i64 0, i32 0
  tail call void @_ZN2v88internal11MemoryChunk27SetYoungGenerationPageFlagsEb(%"class.v8::internal::MemoryChunk"* %71, i1 zeroext true) #11
  %72 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %70, i64 0, i32 0, i32 12, i32 0
  %73 = bitcast %"class.v8::internal::MemoryChunk"** %72 to %"class.v8::internal::Page"**
  %74 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %73, align 8
  %75 = icmp eq %"class.v8::internal::Page"* %74, null
  br i1 %75, label %76, label %69

76:                                               ; preds = %69
  %77 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %10, align 8
  br label %78

78:                                               ; preds = %76, %61
  %79 = phi %"class.v8::internal::Heap"* [ %77, %76 ], [ %62, %61 ]
  %80 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %79, i64 0, i32 30
  %81 = load %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"** %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::NewLargeObjectSpace", %"class.v8::internal::NewLargeObjectSpace"* %81, i64 0, i32 0, i32 0, i32 2, i32 0
  %83 = bitcast %"class.v8::internal::MemoryChunk"** %82 to %"class.v8::internal::LargePage"**
  %84 = load %"class.v8::internal::LargePage"*, %"class.v8::internal::LargePage"** %83, align 8
  %85 = icmp eq %"class.v8::internal::LargePage"* %84, null
  br i1 %85, label %88, label %96

86:                                               ; preds = %96
  %87 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %10, align 8
  br label %88

88:                                               ; preds = %86, %78
  %89 = phi %"class.v8::internal::Heap"* [ %87, %86 ], [ %79, %78 ]
  %90 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %89, i64 0, i32 28
  %91 = load %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::OldLargeObjectSpace"** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::OldLargeObjectSpace", %"class.v8::internal::OldLargeObjectSpace"* %91, i64 0, i32 0, i32 0, i32 2, i32 0
  %93 = bitcast %"class.v8::internal::MemoryChunk"** %92 to %"class.v8::internal::LargePage"**
  %94 = load %"class.v8::internal::LargePage"*, %"class.v8::internal::LargePage"** %93, align 8
  %95 = icmp eq %"class.v8::internal::LargePage"* %94, null
  br i1 %95, label %105, label %113

96:                                               ; preds = %78, %96
  %97 = phi %"class.v8::internal::LargePage"* [ %101, %96 ], [ %84, %78 ]
  %98 = getelementptr inbounds %"class.v8::internal::LargePage", %"class.v8::internal::LargePage"* %97, i64 0, i32 0
  tail call void @_ZN2v88internal11MemoryChunk27SetYoungGenerationPageFlagsEb(%"class.v8::internal::MemoryChunk"* %98, i1 zeroext true) #11
  %99 = getelementptr inbounds %"class.v8::internal::LargePage", %"class.v8::internal::LargePage"* %97, i64 0, i32 0, i32 12, i32 0
  %100 = bitcast %"class.v8::internal::MemoryChunk"** %99 to %"class.v8::internal::LargePage"**
  %101 = load %"class.v8::internal::LargePage"*, %"class.v8::internal::LargePage"** %100, align 8
  %102 = icmp eq %"class.v8::internal::LargePage"* %101, null
  br i1 %102, label %86, label %96

103:                                              ; preds = %113
  %104 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %10, align 8
  br label %105

105:                                              ; preds = %103, %88
  %106 = phi %"class.v8::internal::Heap"* [ %104, %103 ], [ %89, %88 ]
  %107 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %106, i64 0, i32 29
  %108 = load %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"** %107, align 8
  %109 = getelementptr inbounds %"class.v8::internal::CodeLargeObjectSpace", %"class.v8::internal::CodeLargeObjectSpace"* %108, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %110 = bitcast %"class.v8::internal::MemoryChunk"** %109 to %"class.v8::internal::LargePage"**
  %111 = load %"class.v8::internal::LargePage"*, %"class.v8::internal::LargePage"** %110, align 8
  %112 = icmp eq %"class.v8::internal::LargePage"* %111, null
  br i1 %112, label %127, label %120

113:                                              ; preds = %88, %113
  %114 = phi %"class.v8::internal::LargePage"* [ %118, %113 ], [ %94, %88 ]
  %115 = getelementptr inbounds %"class.v8::internal::LargePage", %"class.v8::internal::LargePage"* %114, i64 0, i32 0
  tail call void @_ZN2v88internal11MemoryChunk25SetOldGenerationPageFlagsEb(%"class.v8::internal::MemoryChunk"* %115, i1 zeroext true) #11
  %116 = getelementptr inbounds %"class.v8::internal::LargePage", %"class.v8::internal::LargePage"* %114, i64 0, i32 0, i32 12, i32 0
  %117 = bitcast %"class.v8::internal::MemoryChunk"** %116 to %"class.v8::internal::LargePage"**
  %118 = load %"class.v8::internal::LargePage"*, %"class.v8::internal::LargePage"** %117, align 8
  %119 = icmp eq %"class.v8::internal::LargePage"* %118, null
  br i1 %119, label %103, label %113

120:                                              ; preds = %105, %120
  %121 = phi %"class.v8::internal::LargePage"* [ %125, %120 ], [ %111, %105 ]
  %122 = getelementptr inbounds %"class.v8::internal::LargePage", %"class.v8::internal::LargePage"* %121, i64 0, i32 0
  tail call void @_ZN2v88internal11MemoryChunk25SetOldGenerationPageFlagsEb(%"class.v8::internal::MemoryChunk"* %122, i1 zeroext true) #11
  %123 = getelementptr inbounds %"class.v8::internal::LargePage", %"class.v8::internal::LargePage"* %121, i64 0, i32 0, i32 12, i32 0
  %124 = bitcast %"class.v8::internal::MemoryChunk"** %123 to %"class.v8::internal::LargePage"**
  %125 = load %"class.v8::internal::LargePage"*, %"class.v8::internal::LargePage"** %124, align 8
  %126 = icmp eq %"class.v8::internal::LargePage"* %125, null
  br i1 %126, label %127, label %120

127:                                              ; preds = %120, %105, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MarkingBarrier13DeactivateAllEPNS0_4HeapE(%"class.v8::internal::Heap"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 97, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::MarkingBarrier"*, %"class.v8::internal::MarkingBarrier"** %2, align 8
  tail call void @_ZN2v88internal14MarkingBarrier10DeactivateEv(%"class.v8::internal::MarkingBarrier"* %3)
  %4 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 117, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::GlobalSafepoint"*, %"class.v8::internal::GlobalSafepoint"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::GlobalSafepoint", %"class.v8::internal::GlobalSafepoint"* %5, i64 0, i32 3
  %7 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %6, align 8
  %8 = icmp eq %"class.v8::internal::LocalHeap"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %1, %9
  %10 = phi %"class.v8::internal::LocalHeap"* [ %14, %9 ], [ %7, %1 ]
  %11 = getelementptr %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %10, i64 0, i32 9, i32 0, i32 0, i32 0
  %12 = load %"class.v8::internal::MarkingBarrier"*, %"class.v8::internal::MarkingBarrier"** %11, align 8
  tail call void @_ZN2v88internal14MarkingBarrier10DeactivateEv(%"class.v8::internal::MarkingBarrier"* %12) #11
  %13 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %10, i64 0, i32 6
  %14 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %13, align 8
  %15 = icmp eq %"class.v8::internal::LocalHeap"* %14, null
  br i1 %15, label %16, label %9

16:                                               ; preds = %9, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MarkingBarrier10DeactivateEv(%"class.v8::internal::MarkingBarrier"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 8
  store i8 0, i8* %2, align 1
  %3 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 7
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 9
  %5 = load i8, i8* %4, align 2, !range !3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %125, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 0
  %9 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %9, i64 0, i32 25
  %11 = load %"class.v8::internal::OldSpace"*, %"class.v8::internal::OldSpace"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::OldSpace", %"class.v8::internal::OldSpace"* %11, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %13 = bitcast %"class.v8::internal::MemoryChunk"** %12 to %"class.v8::internal::Page"**
  %14 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %13, align 8
  %15 = icmp eq %"class.v8::internal::Page"* %14, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %7, %16
  %17 = phi %"class.v8::internal::Page"* [ %21, %16 ], [ %14, %7 ]
  %18 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %17, i64 0, i32 0
  tail call void @_ZN2v88internal11MemoryChunk25SetOldGenerationPageFlagsEb(%"class.v8::internal::MemoryChunk"* %18, i1 zeroext false) #11
  %19 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %17, i64 0, i32 0, i32 12, i32 0
  %20 = bitcast %"class.v8::internal::MemoryChunk"** %19 to %"class.v8::internal::Page"**
  %21 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %20, align 8
  %22 = icmp eq %"class.v8::internal::Page"* %21, null
  br i1 %22, label %23, label %16

23:                                               ; preds = %16
  %24 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %8, align 8
  br label %25

25:                                               ; preds = %23, %7
  %26 = phi %"class.v8::internal::Heap"* [ %24, %23 ], [ %9, %7 ]
  %27 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %26, i64 0, i32 27
  %28 = load %"class.v8::internal::MapSpace"*, %"class.v8::internal::MapSpace"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::MapSpace", %"class.v8::internal::MapSpace"* %28, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %30 = bitcast %"class.v8::internal::MemoryChunk"** %29 to %"class.v8::internal::Page"**
  %31 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %30, align 8
  %32 = icmp eq %"class.v8::internal::Page"* %31, null
  br i1 %32, label %42, label %33

33:                                               ; preds = %25, %33
  %34 = phi %"class.v8::internal::Page"* [ %38, %33 ], [ %31, %25 ]
  %35 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %34, i64 0, i32 0
  tail call void @_ZN2v88internal11MemoryChunk25SetOldGenerationPageFlagsEb(%"class.v8::internal::MemoryChunk"* %35, i1 zeroext false) #11
  %36 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %34, i64 0, i32 0, i32 12, i32 0
  %37 = bitcast %"class.v8::internal::MemoryChunk"** %36 to %"class.v8::internal::Page"**
  %38 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %37, align 8
  %39 = icmp eq %"class.v8::internal::Page"* %38, null
  br i1 %39, label %40, label %33

40:                                               ; preds = %33
  %41 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %8, align 8
  br label %42

42:                                               ; preds = %40, %25
  %43 = phi %"class.v8::internal::Heap"* [ %41, %40 ], [ %26, %25 ]
  %44 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %43, i64 0, i32 26
  %45 = load %"class.v8::internal::CodeSpace"*, %"class.v8::internal::CodeSpace"** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::CodeSpace", %"class.v8::internal::CodeSpace"* %45, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %47 = bitcast %"class.v8::internal::MemoryChunk"** %46 to %"class.v8::internal::Page"**
  %48 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %47, align 8
  %49 = icmp eq %"class.v8::internal::Page"* %48, null
  br i1 %49, label %59, label %50

50:                                               ; preds = %42, %50
  %51 = phi %"class.v8::internal::Page"* [ %55, %50 ], [ %48, %42 ]
  %52 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %51, i64 0, i32 0
  tail call void @_ZN2v88internal11MemoryChunk25SetOldGenerationPageFlagsEb(%"class.v8::internal::MemoryChunk"* %52, i1 zeroext false) #11
  %53 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %51, i64 0, i32 0, i32 12, i32 0
  %54 = bitcast %"class.v8::internal::MemoryChunk"** %53 to %"class.v8::internal::Page"**
  %55 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %54, align 8
  %56 = icmp eq %"class.v8::internal::Page"* %55, null
  br i1 %56, label %57, label %50

57:                                               ; preds = %50
  %58 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %8, align 8
  br label %59

59:                                               ; preds = %57, %42
  %60 = phi %"class.v8::internal::Heap"* [ %58, %57 ], [ %43, %42 ]
  %61 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %60, i64 0, i32 24
  %62 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %62, i64 0, i32 4, i32 0, i32 2, i32 0
  %64 = bitcast %"class.v8::internal::MemoryChunk"** %63 to %"class.v8::internal::Page"**
  %65 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %64, align 8
  %66 = icmp eq %"class.v8::internal::Page"* %65, null
  br i1 %66, label %76, label %67

67:                                               ; preds = %59, %67
  %68 = phi %"class.v8::internal::Page"* [ %72, %67 ], [ %65, %59 ]
  %69 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %68, i64 0, i32 0
  tail call void @_ZN2v88internal11MemoryChunk27SetYoungGenerationPageFlagsEb(%"class.v8::internal::MemoryChunk"* %69, i1 zeroext false) #11
  %70 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %68, i64 0, i32 0, i32 12, i32 0
  %71 = bitcast %"class.v8::internal::MemoryChunk"** %70 to %"class.v8::internal::Page"**
  %72 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %71, align 8
  %73 = icmp eq %"class.v8::internal::Page"* %72, null
  br i1 %73, label %74, label %67

74:                                               ; preds = %67
  %75 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %8, align 8
  br label %76

76:                                               ; preds = %74, %59
  %77 = phi %"class.v8::internal::Heap"* [ %75, %74 ], [ %60, %59 ]
  %78 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %77, i64 0, i32 30
  %79 = load %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"** %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::NewLargeObjectSpace", %"class.v8::internal::NewLargeObjectSpace"* %79, i64 0, i32 0, i32 0, i32 2, i32 0
  %81 = bitcast %"class.v8::internal::MemoryChunk"** %80 to %"class.v8::internal::LargePage"**
  %82 = load %"class.v8::internal::LargePage"*, %"class.v8::internal::LargePage"** %81, align 8
  %83 = icmp eq %"class.v8::internal::LargePage"* %82, null
  br i1 %83, label %86, label %94

84:                                               ; preds = %94
  %85 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %8, align 8
  br label %86

86:                                               ; preds = %84, %76
  %87 = phi %"class.v8::internal::Heap"* [ %85, %84 ], [ %77, %76 ]
  %88 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %87, i64 0, i32 28
  %89 = load %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::OldLargeObjectSpace"** %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::OldLargeObjectSpace", %"class.v8::internal::OldLargeObjectSpace"* %89, i64 0, i32 0, i32 0, i32 2, i32 0
  %91 = bitcast %"class.v8::internal::MemoryChunk"** %90 to %"class.v8::internal::LargePage"**
  %92 = load %"class.v8::internal::LargePage"*, %"class.v8::internal::LargePage"** %91, align 8
  %93 = icmp eq %"class.v8::internal::LargePage"* %92, null
  br i1 %93, label %103, label %111

94:                                               ; preds = %76, %94
  %95 = phi %"class.v8::internal::LargePage"* [ %99, %94 ], [ %82, %76 ]
  %96 = getelementptr inbounds %"class.v8::internal::LargePage", %"class.v8::internal::LargePage"* %95, i64 0, i32 0
  tail call void @_ZN2v88internal11MemoryChunk27SetYoungGenerationPageFlagsEb(%"class.v8::internal::MemoryChunk"* %96, i1 zeroext false) #11
  %97 = getelementptr inbounds %"class.v8::internal::LargePage", %"class.v8::internal::LargePage"* %95, i64 0, i32 0, i32 12, i32 0
  %98 = bitcast %"class.v8::internal::MemoryChunk"** %97 to %"class.v8::internal::LargePage"**
  %99 = load %"class.v8::internal::LargePage"*, %"class.v8::internal::LargePage"** %98, align 8
  %100 = icmp eq %"class.v8::internal::LargePage"* %99, null
  br i1 %100, label %84, label %94

101:                                              ; preds = %111
  %102 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %8, align 8
  br label %103

103:                                              ; preds = %101, %86
  %104 = phi %"class.v8::internal::Heap"* [ %102, %101 ], [ %87, %86 ]
  %105 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %104, i64 0, i32 29
  %106 = load %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"** %105, align 8
  %107 = getelementptr inbounds %"class.v8::internal::CodeLargeObjectSpace", %"class.v8::internal::CodeLargeObjectSpace"* %106, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %108 = bitcast %"class.v8::internal::MemoryChunk"** %107 to %"class.v8::internal::LargePage"**
  %109 = load %"class.v8::internal::LargePage"*, %"class.v8::internal::LargePage"** %108, align 8
  %110 = icmp eq %"class.v8::internal::LargePage"* %109, null
  br i1 %110, label %125, label %118

111:                                              ; preds = %86, %111
  %112 = phi %"class.v8::internal::LargePage"* [ %116, %111 ], [ %92, %86 ]
  %113 = getelementptr inbounds %"class.v8::internal::LargePage", %"class.v8::internal::LargePage"* %112, i64 0, i32 0
  tail call void @_ZN2v88internal11MemoryChunk25SetOldGenerationPageFlagsEb(%"class.v8::internal::MemoryChunk"* %113, i1 zeroext false) #11
  %114 = getelementptr inbounds %"class.v8::internal::LargePage", %"class.v8::internal::LargePage"* %112, i64 0, i32 0, i32 12, i32 0
  %115 = bitcast %"class.v8::internal::MemoryChunk"** %114 to %"class.v8::internal::LargePage"**
  %116 = load %"class.v8::internal::LargePage"*, %"class.v8::internal::LargePage"** %115, align 8
  %117 = icmp eq %"class.v8::internal::LargePage"* %116, null
  br i1 %117, label %101, label %111

118:                                              ; preds = %103, %118
  %119 = phi %"class.v8::internal::LargePage"* [ %123, %118 ], [ %109, %103 ]
  %120 = getelementptr inbounds %"class.v8::internal::LargePage", %"class.v8::internal::LargePage"* %119, i64 0, i32 0
  tail call void @_ZN2v88internal11MemoryChunk25SetOldGenerationPageFlagsEb(%"class.v8::internal::MemoryChunk"* %120, i1 zeroext false) #11
  %121 = getelementptr inbounds %"class.v8::internal::LargePage", %"class.v8::internal::LargePage"* %119, i64 0, i32 0, i32 12, i32 0
  %122 = bitcast %"class.v8::internal::MemoryChunk"** %121 to %"class.v8::internal::LargePage"**
  %123 = load %"class.v8::internal::LargePage"*, %"class.v8::internal::LargePage"** %122, align 8
  %124 = icmp eq %"class.v8::internal::LargePage"* %123, null
  br i1 %124, label %125, label %118

125:                                              ; preds = %118, %103, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MarkingBarrier10PublishAllEPNS0_4HeapE(%"class.v8::internal::Heap"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 97, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::MarkingBarrier"*, %"class.v8::internal::MarkingBarrier"** %2, align 8
  tail call void @_ZN2v88internal14MarkingBarrier7PublishEv(%"class.v8::internal::MarkingBarrier"* %3)
  %4 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 117, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::GlobalSafepoint"*, %"class.v8::internal::GlobalSafepoint"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::GlobalSafepoint", %"class.v8::internal::GlobalSafepoint"* %5, i64 0, i32 3
  %7 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %6, align 8
  %8 = icmp eq %"class.v8::internal::LocalHeap"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %1, %9
  %10 = phi %"class.v8::internal::LocalHeap"* [ %14, %9 ], [ %7, %1 ]
  %11 = getelementptr %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %10, i64 0, i32 9, i32 0, i32 0, i32 0
  %12 = load %"class.v8::internal::MarkingBarrier"*, %"class.v8::internal::MarkingBarrier"** %11, align 8
  tail call void @_ZN2v88internal14MarkingBarrier7PublishEv(%"class.v8::internal::MarkingBarrier"* %12) #11
  %13 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %10, i64 0, i32 6
  %14 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %13, align 8
  %15 = icmp eq %"class.v8::internal::LocalHeap"* %14, null
  br i1 %15, label %16, label %9

16:                                               ; preds = %9, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MarkingBarrier7PublishEv(%"class.v8::internal::MarkingBarrier"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 8
  %3 = load i8, i8* %2, align 1, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %101, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 3
  tail call void @_ZN4heap4base8WorklistIN2v88internal10HeapObjectELt64EE5Local7PublishEv(%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"* %6)
  %7 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = bitcast %"struct.std::__1::__hash_node_base.642"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %74

11:                                               ; preds = %97, %5
  %12 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %101, label %15

15:                                               ; preds = %11
  %16 = load %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %7, align 8
  %17 = icmp eq %"struct.std::__1::__hash_node_base.642"* %16, null
  br i1 %17, label %34, label %18

18:                                               ; preds = %15, %31
  %19 = phi %"struct.std::__1::__hash_node_base.642"* [ %21, %31 ], [ %16, %15 ]
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642", %"struct.std::__1::__hash_node_base.642"* %19, i64 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642", %"struct.std::__1::__hash_node_base.642"* %19, i64 3
  %23 = bitcast %"struct.std::__1::__hash_node_base.642"* %22 to %"class.v8::internal::TypedSlots"**
  %24 = load %"class.v8::internal::TypedSlots"*, %"class.v8::internal::TypedSlots"** %23, align 8
  store %"class.v8::internal::TypedSlots"* null, %"class.v8::internal::TypedSlots"** %23, align 8
  %25 = icmp eq %"class.v8::internal::TypedSlots"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.v8::internal::TypedSlots"* %24 to void (%"class.v8::internal::TypedSlots"*)***
  %28 = load void (%"class.v8::internal::TypedSlots"*)**, void (%"class.v8::internal::TypedSlots"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.v8::internal::TypedSlots"*)*, void (%"class.v8::internal::TypedSlots"*)** %28, i64 1
  %30 = load void (%"class.v8::internal::TypedSlots"*)*, void (%"class.v8::internal::TypedSlots"*)** %29, align 8
  tail call void %30(%"class.v8::internal::TypedSlots"* nonnull %24) #11
  br label %31

31:                                               ; preds = %26, %18
  %32 = bitcast %"struct.std::__1::__hash_node_base.642"* %19 to i8*
  tail call void @_ZdlPv(i8* %32) #12
  %33 = icmp eq %"struct.std::__1::__hash_node_base.642"* %21, null
  br i1 %33, label %34, label %18

34:                                               ; preds = %31, %15
  store %"struct.std::__1::__hash_node_base.642"* null, %"struct.std::__1::__hash_node_base.642"** %7, align 8
  %35 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %56, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = add i64 %36, -1
  %41 = and i64 %36, 3
  %42 = icmp ult i64 %40, 3
  br i1 %42, label %45, label %43

43:                                               ; preds = %38
  %44 = sub i64 %36, %41
  br label %57

45:                                               ; preds = %57, %38
  %46 = phi i64 [ 0, %38 ], [ %71, %57 ]
  %47 = icmp eq i64 %41, 0
  br i1 %47, label %56, label %48

48:                                               ; preds = %45, %48
  %49 = phi i64 [ %53, %48 ], [ %46, %45 ]
  %50 = phi i64 [ %54, %48 ], [ %41, %45 ]
  %51 = load %"struct.std::__1::__hash_node_base.642"**, %"struct.std::__1::__hash_node_base.642"*** %39, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %51, i64 %49
  store %"struct.std::__1::__hash_node_base.642"* null, %"struct.std::__1::__hash_node_base.642"** %52, align 8
  %53 = add nuw i64 %49, 1
  %54 = add i64 %50, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %48, !llvm.loop !5

56:                                               ; preds = %45, %48, %34
  store i64 0, i64* %12, align 8
  br label %101

57:                                               ; preds = %57, %43
  %58 = phi i64 [ 0, %43 ], [ %71, %57 ]
  %59 = phi i64 [ %44, %43 ], [ %72, %57 ]
  %60 = load %"struct.std::__1::__hash_node_base.642"**, %"struct.std::__1::__hash_node_base.642"*** %39, align 8
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %60, i64 %58
  store %"struct.std::__1::__hash_node_base.642"* null, %"struct.std::__1::__hash_node_base.642"** %61, align 8
  %62 = or i64 %58, 1
  %63 = load %"struct.std::__1::__hash_node_base.642"**, %"struct.std::__1::__hash_node_base.642"*** %39, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %63, i64 %62
  store %"struct.std::__1::__hash_node_base.642"* null, %"struct.std::__1::__hash_node_base.642"** %64, align 8
  %65 = or i64 %58, 2
  %66 = load %"struct.std::__1::__hash_node_base.642"**, %"struct.std::__1::__hash_node_base.642"*** %39, align 8
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %66, i64 %65
  store %"struct.std::__1::__hash_node_base.642"* null, %"struct.std::__1::__hash_node_base.642"** %67, align 8
  %68 = or i64 %58, 3
  %69 = load %"struct.std::__1::__hash_node_base.642"**, %"struct.std::__1::__hash_node_base.642"*** %39, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %69, i64 %68
  store %"struct.std::__1::__hash_node_base.642"* null, %"struct.std::__1::__hash_node_base.642"** %70, align 8
  %71 = add nuw i64 %58, 4
  %72 = add i64 %59, -4
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %45, label %57

74:                                               ; preds = %5, %97
  %75 = phi i64 [ %99, %97 ], [ %9, %5 ]
  %76 = inttoptr i64 %75 to %"struct.std::__1::__hash_node"*
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %76, i64 0, i32 2, i32 0, i32 0
  %78 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %77, align 8
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %76, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %80 = load %"class.v8::internal::TypedSlots"*, %"class.v8::internal::TypedSlots"** %79, align 8
  store %"class.v8::internal::TypedSlots"* null, %"class.v8::internal::TypedSlots"** %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %78, i64 0, i32 5, i64 1
  %82 = bitcast %"class.v8::internal::TypedSlotSet"** %81 to i64*
  %83 = load atomic i64, i64* %82 acquire, align 8
  %84 = inttoptr i64 %83 to %"class.v8::internal::TypedSlotSet"*
  %85 = icmp eq i64 %83, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %74
  %87 = tail call %"class.v8::internal::TypedSlotSet"* @_ZN2v88internal11MemoryChunk20AllocateTypedSlotSetILNS0_17RememberedSetTypeE1EEEPNS0_12TypedSlotSetEv(%"class.v8::internal::MemoryChunk"* %78) #11
  br label %88

88:                                               ; preds = %86, %74
  %89 = phi %"class.v8::internal::TypedSlotSet"* [ %87, %86 ], [ %84, %74 ]
  %90 = getelementptr inbounds %"class.v8::internal::TypedSlotSet", %"class.v8::internal::TypedSlotSet"* %89, i64 0, i32 0
  tail call void @_ZN2v88internal10TypedSlots5MergeEPS1_(%"class.v8::internal::TypedSlots"* %90, %"class.v8::internal::TypedSlots"* %80) #11
  %91 = icmp eq %"class.v8::internal::TypedSlots"* %80, null
  br i1 %91, label %97, label %92

92:                                               ; preds = %88
  %93 = bitcast %"class.v8::internal::TypedSlots"* %80 to void (%"class.v8::internal::TypedSlots"*)***
  %94 = load void (%"class.v8::internal::TypedSlots"*)**, void (%"class.v8::internal::TypedSlots"*)*** %93, align 8
  %95 = getelementptr inbounds void (%"class.v8::internal::TypedSlots"*)*, void (%"class.v8::internal::TypedSlots"*)** %94, i64 1
  %96 = load void (%"class.v8::internal::TypedSlots"*)*, void (%"class.v8::internal::TypedSlots"*)** %95, align 8
  tail call void %96(%"class.v8::internal::TypedSlots"* nonnull %80) #11
  br label %97

97:                                               ; preds = %88, %92
  %98 = inttoptr i64 %75 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %11, label %74

101:                                              ; preds = %56, %11, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4heap4base8WorklistIN2v88internal10HeapObjectELt64EE5Local7PublishEv(%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"* %0, i64 0, i32 1
  %3 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %2, align 8
  %4 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %3, i64 0, i32 1
  %5 = load i16, i16* %4, align 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %31, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #11
  %9 = icmp eq %"class.heap::base::internal::SegmentBase"* %3, %8
  br i1 %9, label %24, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"* %0, i64 0, i32 0
  %12 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %11, align 8
  %13 = bitcast %"class.heap::base::internal::SegmentBase"** %2 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"**
  %14 = load %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %13, align 8
  %15 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %12, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %15) #11
  %16 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %12, i64 0, i32 1
  %17 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %14, i64 0, i32 1
  %20 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = ptrtoint %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %14 to i64
  store atomic i64 %21, i64* %17 monotonic, align 8
  %22 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i64* %22, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %15) #11
  br label %24

24:                                               ; preds = %7, %10
  %25 = tail call i8* @_Znwm(i64 528) #12
  %26 = bitcast i8* %25 to i16*
  store i16 64, i16* %26, align 2
  %27 = getelementptr inbounds i8, i8* %25, i64 2
  %28 = bitcast i8* %27 to i16*
  store i16 0, i16* %28, align 2
  %29 = getelementptr inbounds i8, i8* %25, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 520, i1 false) #11
  %30 = bitcast %"class.heap::base::internal::SegmentBase"** %2 to i8**
  store i8* %25, i8** %30, align 8
  br label %31

31:                                               ; preds = %24, %1
  %32 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"* %0, i64 0, i32 2
  %33 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %32, align 8
  %34 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %33, i64 0, i32 1
  %35 = load i16, i16* %34, align 2
  %36 = icmp eq i16 %35, 0
  br i1 %36, label %61, label %37

37:                                               ; preds = %31
  %38 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #11
  %39 = icmp eq %"class.heap::base::internal::SegmentBase"* %33, %38
  br i1 %39, label %54, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"* %0, i64 0, i32 0
  %42 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %41, align 8
  %43 = bitcast %"class.heap::base::internal::SegmentBase"** %32 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"**
  %44 = load %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %43, align 8
  %45 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %42, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %45) #11
  %46 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %42, i64 0, i32 1
  %47 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %44, i64 0, i32 1
  %50 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = ptrtoint %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %44 to i64
  store atomic i64 %51, i64* %47 monotonic, align 8
  %52 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i64* %52, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %45) #11
  br label %54

54:                                               ; preds = %37, %40
  %55 = tail call i8* @_Znwm(i64 528) #12
  %56 = bitcast i8* %55 to i16*
  store i16 64, i16* %56, align 2
  %57 = getelementptr inbounds i8, i8* %55, i64 2
  %58 = bitcast i8* %57 to i16*
  store i16 0, i16* %58, align 2
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 520, i1 false) #11
  %60 = bitcast %"class.heap::base::internal::SegmentBase"** %32 to i8**
  store i8* %55, i8** %60, align 8
  br label %61

61:                                               ; preds = %54, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MarkingBarrier15DeactivateSpaceEPNS0_10PagedSpaceE(%"class.v8::internal::MarkingBarrier"* nocapture readnone, %"class.v8::internal::PagedSpace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %1, i64 0, i32 0, i32 0, i32 2, i32 0
  %4 = bitcast %"class.v8::internal::MemoryChunk"** %3 to %"class.v8::internal::Page"**
  %5 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %4, align 8
  %6 = icmp eq %"class.v8::internal::Page"* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %8, %2
  ret void

8:                                                ; preds = %2, %8
  %9 = phi %"class.v8::internal::Page"* [ %13, %8 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %9, i64 0, i32 0
  tail call void @_ZN2v88internal11MemoryChunk25SetOldGenerationPageFlagsEb(%"class.v8::internal::MemoryChunk"* %10, i1 zeroext false) #11
  %11 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %9, i64 0, i32 0, i32 12, i32 0
  %12 = bitcast %"class.v8::internal::MemoryChunk"** %11 to %"class.v8::internal::Page"**
  %13 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %12, align 8
  %14 = icmp eq %"class.v8::internal::Page"* %13, null
  br i1 %14, label %7, label %8
}

declare void @_ZN2v88internal11MemoryChunk25SetOldGenerationPageFlagsEb(%"class.v8::internal::MemoryChunk"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MarkingBarrier15DeactivateSpaceEPNS0_8NewSpaceE(%"class.v8::internal::MarkingBarrier"* nocapture readnone, %"class.v8::internal::NewSpace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1, i64 0, i32 4, i32 0, i32 2, i32 0
  %4 = bitcast %"class.v8::internal::MemoryChunk"** %3 to %"class.v8::internal::Page"**
  %5 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %4, align 8
  %6 = icmp eq %"class.v8::internal::Page"* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %8, %2
  ret void

8:                                                ; preds = %2, %8
  %9 = phi %"class.v8::internal::Page"* [ %13, %8 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %9, i64 0, i32 0
  tail call void @_ZN2v88internal11MemoryChunk27SetYoungGenerationPageFlagsEb(%"class.v8::internal::MemoryChunk"* %10, i1 zeroext false) #11
  %11 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %9, i64 0, i32 0, i32 12, i32 0
  %12 = bitcast %"class.v8::internal::MemoryChunk"** %11 to %"class.v8::internal::Page"**
  %13 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %12, align 8
  %14 = icmp eq %"class.v8::internal::Page"* %13, null
  br i1 %14, label %7, label %8
}

declare void @_ZN2v88internal11MemoryChunk27SetYoungGenerationPageFlagsEb(%"class.v8::internal::MemoryChunk"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MarkingBarrier13ActivateSpaceEPNS0_10PagedSpaceE(%"class.v8::internal::MarkingBarrier"* nocapture readnone, %"class.v8::internal::PagedSpace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %1, i64 0, i32 0, i32 0, i32 2, i32 0
  %4 = bitcast %"class.v8::internal::MemoryChunk"** %3 to %"class.v8::internal::Page"**
  %5 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %4, align 8
  %6 = icmp eq %"class.v8::internal::Page"* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %8, %2
  ret void

8:                                                ; preds = %2, %8
  %9 = phi %"class.v8::internal::Page"* [ %13, %8 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %9, i64 0, i32 0
  tail call void @_ZN2v88internal11MemoryChunk25SetOldGenerationPageFlagsEb(%"class.v8::internal::MemoryChunk"* %10, i1 zeroext true) #11
  %11 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %9, i64 0, i32 0, i32 12, i32 0
  %12 = bitcast %"class.v8::internal::MemoryChunk"** %11 to %"class.v8::internal::Page"**
  %13 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %12, align 8
  %14 = icmp eq %"class.v8::internal::Page"* %13, null
  br i1 %14, label %7, label %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MarkingBarrier13ActivateSpaceEPNS0_8NewSpaceE(%"class.v8::internal::MarkingBarrier"* nocapture readnone, %"class.v8::internal::NewSpace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1, i64 0, i32 4, i32 0, i32 2, i32 0
  %4 = bitcast %"class.v8::internal::MemoryChunk"** %3 to %"class.v8::internal::Page"**
  %5 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %4, align 8
  %6 = icmp eq %"class.v8::internal::Page"* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %8, %2
  ret void

8:                                                ; preds = %2, %8
  %9 = phi %"class.v8::internal::Page"* [ %13, %8 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %9, i64 0, i32 0
  tail call void @_ZN2v88internal11MemoryChunk27SetYoungGenerationPageFlagsEb(%"class.v8::internal::MemoryChunk"* %10, i1 zeroext true) #11
  %11 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %9, i64 0, i32 0, i32 12, i32 0
  %12 = bitcast %"class.v8::internal::MemoryChunk"** %11 to %"class.v8::internal::Page"**
  %13 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %12, align 8
  %14 = icmp eq %"class.v8::internal::Page"* %13, null
  br i1 %14, label %7, label %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal14MarkingBarrier23IsCurrentMarkingBarrierEv(%"class.v8::internal::MarkingBarrier"* readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MarkingBarrier", %"class.v8::internal::MarkingBarrier"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2, align 8
  %4 = tail call %"class.v8::internal::MarkingBarrier"* @_ZN2v88internal12WriteBarrier21CurrentMarkingBarrierEPNS0_4HeapE(%"class.v8::internal::Heap"* %3) #11
  %5 = icmp eq %"class.v8::internal::MarkingBarrier"* %4, %0
  ret i1 %5
}

declare %"class.v8::internal::MarkingBarrier"* @_ZN2v88internal12WriteBarrier21CurrentMarkingBarrierEPNS0_4HeapE(%"class.v8::internal::Heap"*) local_unnamed_addr #2

declare void @_ZN2v88internal4Heap16AddRetainingRootENS0_4RootENS0_10HeapObjectE(%"class.v8::internal::Heap"*, i32, i64) local_unnamed_addr #2

declare %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() local_unnamed_addr #2

declare void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #2

declare void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #2

declare void @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"*, i8*, ...) local_unnamed_addr #2

declare %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk15AllocateSlotSetILNS0_17RememberedSetTypeE1EEEPNS0_7SlotSetEv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #2

declare i8* @_ZN2v88internal8MallocednwEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88internal8MalloceddlEPv(i8*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.642"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkENS_10unique_ptrINS3_10TypedSlotsENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS3_16BasicMemoryChunk6HasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.638"*, %"class.v8::internal::MemoryChunk"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1190"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.v8::internal::MemoryChunk"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 18
  %9 = getelementptr inbounds %"class.std::__1::__hash_table.638", %"class.std::__1::__hash_table.638"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  %12 = inttoptr i64 %7 to %"class.v8::internal::MemoryChunk"*
  br i1 %11, label %72, label %13

13:                                               ; preds = %5
  %14 = tail call i64 @llvm.ctpop.i64(i64 %10) #11, !range !7
  %15 = icmp ugt i64 %14, 1
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  %17 = add i64 %10, 70368744177663
  %18 = and i64 %17, %8
  br label %23

19:                                               ; preds = %13
  %20 = icmp ult i64 %8, %10
  br i1 %20, label %23, label %21

21:                                               ; preds = %19
  %22 = urem i64 %8, %10
  br label %23

23:                                               ; preds = %16, %19, %21
  %24 = phi i64 [ %18, %16 ], [ %22, %21 ], [ %8, %19 ]
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.638", %"class.std::__1::__hash_table.638"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.642"**, %"struct.std::__1::__hash_node_base.642"*** %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %26, i64 %24
  %28 = load %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.642"* %28, null
  br i1 %29, label %72, label %30

30:                                               ; preds = %23
  %31 = add i64 %10, -1
  br i1 %15, label %32, label %54

32:                                               ; preds = %30, %49
  %33 = phi %"struct.std::__1::__hash_node_base.642"* [ %35, %49 ], [ %28, %30 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642", %"struct.std::__1::__hash_node_base.642"* %33, i64 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base.642"* %35, null
  br i1 %36, label %72, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642", %"struct.std::__1::__hash_node_base.642"* %35, i64 1
  %39 = bitcast %"struct.std::__1::__hash_node_base.642"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, %8
  br i1 %41, label %49, label %42

42:                                               ; preds = %37
  %43 = icmp ult i64 %40, %10
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %40, %10
  br label %46

46:                                               ; preds = %44, %42
  %47 = phi i64 [ %45, %44 ], [ %40, %42 ]
  %48 = icmp eq i64 %47, %24
  br i1 %48, label %49, label %72

49:                                               ; preds = %46, %37
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642", %"struct.std::__1::__hash_node_base.642"* %35, i64 2
  %51 = bitcast %"struct.std::__1::__hash_node_base.642"* %50 to %"class.v8::internal::MemoryChunk"**
  %52 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %51, align 8
  %53 = icmp eq %"class.v8::internal::MemoryChunk"* %52, %12
  br i1 %53, label %163, label %32

54:                                               ; preds = %30, %67
  %55 = phi %"struct.std::__1::__hash_node_base.642"* [ %57, %67 ], [ %28, %30 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642", %"struct.std::__1::__hash_node_base.642"* %55, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base.642"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642", %"struct.std::__1::__hash_node_base.642"* %57, i64 1
  %61 = bitcast %"struct.std::__1::__hash_node_base.642"* %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %62, %8
  %64 = and i64 %62, %31
  %65 = icmp eq i64 %64, %24
  %66 = or i1 %63, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642", %"struct.std::__1::__hash_node_base.642"* %57, i64 2
  %69 = bitcast %"struct.std::__1::__hash_node_base.642"* %68 to %"class.v8::internal::MemoryChunk"**
  %70 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %69, align 8
  %71 = icmp eq %"class.v8::internal::MemoryChunk"* %70, %12
  br i1 %71, label %163, label %54

72:                                               ; preds = %59, %54, %46, %32, %23, %5
  %73 = phi i64 [ %24, %23 ], [ undef, %5 ], [ %24, %32 ], [ %24, %46 ], [ %24, %54 ], [ %24, %59 ]
  %74 = tail call i8* @_Znwm(i64 32) #12, !noalias !8
  %75 = getelementptr inbounds i8, i8* %74, i64 16
  %76 = bitcast %"class.std::__1::tuple"* %3 to i64**
  %77 = load i64*, i64** %76, align 8, !noalias !8
  %78 = load i64, i64* %77, align 8, !noalias !8
  %79 = bitcast i8* %75 to i64*
  store i64 %78, i64* %79, align 8, !noalias !8
  %80 = getelementptr inbounds i8, i8* %74, i64 24
  %81 = bitcast i8* %80 to i64*
  store i64 0, i64* %81, align 8, !noalias !8
  %82 = getelementptr inbounds i8, i8* %74, i64 8
  %83 = bitcast i8* %82 to i64*
  store i64 %8, i64* %83, align 8, !noalias !8
  %84 = bitcast i8* %74 to %"struct.std::__1::__hash_node_base.642"**
  store %"struct.std::__1::__hash_node_base.642"* null, %"struct.std::__1::__hash_node_base.642"** %84, align 8, !noalias !8
  %85 = getelementptr inbounds %"class.std::__1::__hash_table.638", %"class.std::__1::__hash_table.638"* %0, i64 0, i32 2, i32 0, i32 0
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, 1
  %88 = uitofp i64 %87 to float
  %89 = uitofp i64 %10 to float
  %90 = getelementptr inbounds %"class.std::__1::__hash_table.638", %"class.std::__1::__hash_table.638"* %0, i64 0, i32 3, i32 0, i32 0
  %91 = load float, float* %90, align 4
  %92 = fmul float %91, %89
  %93 = fcmp olt float %92, %88
  %94 = or i1 %11, %93
  br i1 %94, label %95, label %118

95:                                               ; preds = %72
  %96 = shl i64 %10, 1
  %97 = icmp ult i64 %10, 3
  %98 = tail call i64 @llvm.ctpop.i64(i64 %10) #11, !range !7
  %99 = icmp ugt i64 %98, 1
  %100 = or i1 %97, %99
  %101 = zext i1 %100 to i64
  %102 = or i64 %96, %101
  %103 = fdiv float %88, %91
  %104 = tail call float @llvm.ceil.f32(float %103) #11
  %105 = fptoui float %104 to i64
  %106 = icmp ult i64 %102, %105
  %107 = select i1 %106, i64 %105, i64 %102
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkENS_10unique_ptrINS3_10TypedSlotsENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS3_16BasicMemoryChunk6HasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE6rehashEm(%"class.std::__1::__hash_table.638"* %0, i64 %107)
  %108 = load i64, i64* %9, align 8
  %109 = tail call i64 @llvm.ctpop.i64(i64 %108) #11, !range !7
  %110 = icmp ugt i64 %109, 1
  br i1 %110, label %114, label %111

111:                                              ; preds = %95
  %112 = add i64 %108, 70368744177663
  %113 = and i64 %112, %8
  br label %118

114:                                              ; preds = %95
  %115 = icmp ult i64 %8, %108
  br i1 %115, label %118, label %116

116:                                              ; preds = %114
  %117 = urem i64 %8, %108
  br label %118

118:                                              ; preds = %116, %114, %111, %72
  %119 = phi i64 [ %10, %72 ], [ %108, %111 ], [ %108, %114 ], [ %108, %116 ]
  %120 = phi i64 [ %73, %72 ], [ %113, %111 ], [ %8, %114 ], [ %117, %116 ]
  %121 = getelementptr inbounds %"class.std::__1::__hash_table.638", %"class.std::__1::__hash_table.638"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %122 = load %"struct.std::__1::__hash_node_base.642"**, %"struct.std::__1::__hash_node_base.642"*** %121, align 8
  %123 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %122, i64 %120
  %124 = load %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %123, align 8
  %125 = icmp eq %"struct.std::__1::__hash_node_base.642"* %124, null
  br i1 %125, label %126, label %152

126:                                              ; preds = %118
  %127 = getelementptr inbounds %"class.std::__1::__hash_table.638", %"class.std::__1::__hash_table.638"* %0, i64 0, i32 1, i32 0, i32 0
  %128 = bitcast %"struct.std::__1::__hash_node_base.642"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i8* %74 to i64*
  store i64 %129, i64* %130, align 8
  %131 = bitcast %"struct.std::__1::__hash_node_base.642"* %127 to i8**
  store i8* %74, i8** %131, align 8
  store %"struct.std::__1::__hash_node_base.642"* %127, %"struct.std::__1::__hash_node_base.642"** %123, align 8
  %132 = load %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %84, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.642"* %132, null
  br i1 %133, label %159, label %134

134:                                              ; preds = %126
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642", %"struct.std::__1::__hash_node_base.642"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base.642"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = tail call i64 @llvm.ctpop.i64(i64 %119) #11, !range !7
  %139 = icmp ugt i64 %138, 1
  br i1 %139, label %143, label %140

140:                                              ; preds = %134
  %141 = add i64 %119, -1
  %142 = and i64 %137, %141
  br label %147

143:                                              ; preds = %134
  %144 = icmp ult i64 %137, %119
  br i1 %144, label %147, label %145

145:                                              ; preds = %143
  %146 = urem i64 %137, %119
  br label %147

147:                                              ; preds = %140, %143, %145
  %148 = phi i64 [ %142, %140 ], [ %146, %145 ], [ %137, %143 ]
  %149 = load %"struct.std::__1::__hash_node_base.642"**, %"struct.std::__1::__hash_node_base.642"*** %121, align 8
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %149, i64 %148
  %151 = bitcast %"struct.std::__1::__hash_node_base.642"** %150 to i8**
  br label %157

152:                                              ; preds = %118
  %153 = bitcast %"struct.std::__1::__hash_node_base.642"* %124 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast i8* %74 to i64*
  store i64 %154, i64* %155, align 8
  %156 = bitcast %"struct.std::__1::__hash_node_base.642"* %124 to i8**
  br label %157

157:                                              ; preds = %147, %152
  %158 = phi i8** [ %156, %152 ], [ %151, %147 ]
  store i8* %74, i8** %158, align 8
  br label %159

159:                                              ; preds = %157, %126
  %160 = bitcast i8* %74 to %"struct.std::__1::__hash_node_base.642"*
  %161 = load i64, i64* %85, align 8
  %162 = add i64 %161, 1
  store i64 %162, i64* %85, align 8
  br label %163

163:                                              ; preds = %67, %49, %159
  %164 = phi i8 [ 1, %159 ], [ 0, %49 ], [ 0, %67 ]
  %165 = phi %"struct.std::__1::__hash_node_base.642"* [ %160, %159 ], [ %35, %49 ], [ %57, %67 ]
  %166 = insertvalue { %"struct.std::__1::__hash_node_base.642"*, i8 } undef, %"struct.std::__1::__hash_node_base.642"* %165, 0
  %167 = insertvalue { %"struct.std::__1::__hash_node_base.642"*, i8 } %166, i8 %164, 1
  ret { %"struct.std::__1::__hash_node_base.642"*, i8 } %167
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkENS_10unique_ptrINS3_10TypedSlotsENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS3_16BasicMemoryChunk6HasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE6rehashEm(%"class.std::__1::__hash_table.638"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !7
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.638", %"class.std::__1::__hash_table.638"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkENS_10unique_ptrINS3_10TypedSlotsENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS3_16BasicMemoryChunk6HasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE8__rehashEm(%"class.std::__1::__hash_table.638"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !7
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.638", %"class.std::__1::__hash_table.638"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.638", %"class.std::__1::__hash_table.638"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !7
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkENS_10unique_ptrINS3_10TypedSlotsENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS3_16BasicMemoryChunk6HasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE8__rehashEm(%"class.std::__1::__hash_table.638"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkENS_10unique_ptrINS3_10TypedSlotsENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS3_16BasicMemoryChunk6HasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE8__rehashEm(%"class.std::__1::__hash_table.638"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.638", %"class.std::__1::__hash_table.638"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.638", %"class.std::__1::__hash_table.638"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.642"**, %"struct.std::__1::__hash_node_base.642"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.638"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.642"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.642"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.644", %"class.std::__1::__bucket_list_deallocator.644"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.642"**, %"struct.std::__1::__hash_node_base.642"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.642"* null, %"struct.std::__1::__hash_node_base.642"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !11

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.638", %"class.std::__1::__hash_table.638"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642", %"struct.std::__1::__hash_node_base.642"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.642"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.642"**, %"struct.std::__1::__hash_node_base.642"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.642"* null, %"struct.std::__1::__hash_node_base.642"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.642"**, %"struct.std::__1::__hash_node_base.642"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.642"* null, %"struct.std::__1::__hash_node_base.642"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.642"**, %"struct.std::__1::__hash_node_base.642"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.642"* null, %"struct.std::__1::__hash_node_base.642"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.642"**, %"struct.std::__1::__hash_node_base.642"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.642"* null, %"struct.std::__1::__hash_node_base.642"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642", %"struct.std::__1::__hash_node_base.642"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.642"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !7
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.642"**, %"struct.std::__1::__hash_node_base.642"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.642"* %36, %"struct.std::__1::__hash_node_base.642"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642", %"struct.std::__1::__hash_node_base.642"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.642"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base.642"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.642"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642", %"struct.std::__1::__hash_node_base.642"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.642"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.642"**, %"struct.std::__1::__hash_node_base.642"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.642"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base.642"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642", %"struct.std::__1::__hash_node_base.642"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.642"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642", %"struct.std::__1::__hash_node_base.642"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base.642"* %103 to %"class.v8::internal::MemoryChunk"**
  %105 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %130, align 8
  %106 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %104, align 8
  %107 = icmp eq %"class.v8::internal::MemoryChunk"* %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base.642"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base.642"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base.642"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base.642"**, %"struct.std::__1::__hash_node_base.642"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base.642"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base.642"**, %"struct.std::__1::__hash_node_base.642"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642", %"struct.std::__1::__hash_node_base.642"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.642"* %80, %"struct.std::__1::__hash_node_base.642"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.642"* %82, %"struct.std::__1::__hash_node_base.642"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base.642"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642", %"struct.std::__1::__hash_node_base.642"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.642"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642", %"struct.std::__1::__hash_node_base.642"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base.642"* %129 to %"class.v8::internal::MemoryChunk"**
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base.642"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base.642"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642", %"struct.std::__1::__hash_node_base.642"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base.642"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base.642"**, %"struct.std::__1::__hash_node_base.642"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.642"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642", %"struct.std::__1::__hash_node_base.642"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base.642"* %146 to %"class.v8::internal::MemoryChunk"**
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base.642"* %134, %"struct.std::__1::__hash_node_base.642"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base.642"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642", %"struct.std::__1::__hash_node_base.642"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base.642"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642", %"struct.std::__1::__hash_node_base.642"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base.642"* %155 to %"class.v8::internal::MemoryChunk"**
  %157 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %147, align 8
  %158 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %156, align 8
  %159 = icmp eq %"class.v8::internal::MemoryChunk"* %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base.642"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base.642"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base.642"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base.642"**, %"struct.std::__1::__hash_node_base.642"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base.642"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base.642"**, %"struct.std::__1::__hash_node_base.642"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642", %"struct.std::__1::__hash_node_base.642"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.642"* %132, %"struct.std::__1::__hash_node_base.642"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base.642"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642", %"struct.std::__1::__hash_node_base.642"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base.642"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table.638", %"class.std::__1::__hash_table.638"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base.642"**, %"struct.std::__1::__hash_node_base.642"*** %180, align 8
  store %"struct.std::__1::__hash_node_base.642"** null, %"struct.std::__1::__hash_node_base.642"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base.642"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base.642"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #12
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.644", %"class.std::__1::__bucket_list_deallocator.644"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

declare %"class.v8::internal::TypedSlotSet"* @_ZN2v88internal11MemoryChunk20AllocateTypedSlotSetILNS0_17RememberedSetTypeE1EEEPNS0_12TypedSlotSetEv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #2

declare void @_ZN2v88internal10TypedSlots5MergeEPS1_(%"class.v8::internal::TypedSlots"*, %"class.v8::internal::TypedSlots"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = !{i64 0, i64 65}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkENS_10unique_ptrINS3_10TypedSlotsENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS3_16BasicMemoryChunk6HasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSR_IJEEEEEENS6_INS_11__hash_nodeISB_PvEENS_22__hash_node_destructorINSK_ISY_EEEEEEmOT_DpOT0_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkENS_10unique_ptrINS3_10TypedSlotsENS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS3_16BasicMemoryChunk6HasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS_9allocatorISB_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSR_IJEEEEEENS6_INS_11__hash_nodeISB_PvEENS_22__hash_node_destructorINSK_ISY_EEEEEEmOT_DpOT0_"}
!11 = distinct !{!11, !6}
