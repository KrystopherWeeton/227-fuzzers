; ModuleID = '../../ui/gfx/geometry/quad_f.cc'
source_filename = "../../ui/gfx/geometry/quad_f.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::QuadF" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.gfx::Vector2dF" = type { float, float }

@.str = private unnamed_addr constant [12 x i8] c"%s;%s;%s;%s\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx5QuadFaSERKNS_5RectFE(%"class.gfx::QuadF"* nocapture, %"class.gfx::RectF"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 0
  %4 = bitcast %"class.gfx::RectF"* %1 to i32*
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 1
  %7 = bitcast float* %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = bitcast %"class.gfx::QuadF"* %0 to i32*
  store i32 %5, i32* %9, align 4
  %10 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 0, i32 1
  %11 = bitcast float* %10 to i32*
  store i32 %8, i32* %11, align 4
  %12 = load float, float* %3, align 4
  %13 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 0
  %14 = load float, float* %13, align 4
  %15 = fadd float %12, %14
  %16 = load i32, i32* %7, align 4
  %17 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 1, i32 0
  store float %15, float* %17, align 4
  %18 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 1, i32 1
  %19 = bitcast float* %18 to i32*
  store i32 %16, i32* %19, align 4
  %20 = load float, float* %3, align 4
  %21 = load float, float* %13, align 4
  %22 = fadd float %20, %21
  %23 = load float, float* %6, align 4
  %24 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 1
  %25 = load float, float* %24, align 4
  %26 = fadd float %23, %25
  %27 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 2, i32 0
  store float %22, float* %27, align 4
  %28 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 2, i32 1
  store float %26, float* %28, align 4
  %29 = load i32, i32* %4, align 4
  %30 = load float, float* %6, align 4
  %31 = load float, float* %24, align 4
  %32 = fadd float %30, %31
  %33 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 3
  %34 = bitcast %"class.gfx::PointF"* %33 to i32*
  store i32 %29, i32* %34, align 4
  %35 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 3, i32 1
  store float %32, float* %35, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx5QuadF8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.gfx::QuadF"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %1, i64 0, i32 0
  call void @_ZNK3gfx6PointF8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.gfx::PointF"* %8) #9
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = select i1 %12, i8* %14, i8* %7
  %16 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %1, i64 0, i32 1
  call void @_ZNK3gfx6PointF8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.gfx::PointF"* %17) #9
  %18 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = select i1 %21, i8* %23, i8* %16
  %25 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #9
  %26 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %1, i64 0, i32 2
  call void @_ZNK3gfx6PointF8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.gfx::PointF"* %26) #9
  %27 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = select i1 %30, i8* %32, i8* %25
  %34 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #9
  %35 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %1, i64 0, i32 3
  call void @_ZNK3gfx6PointF8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %6, %"class.gfx::PointF"* %35) #9
  %36 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = select i1 %39, i8* %41, i8* %34
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* %15, i8* %24, i8* %33, i8* %42) #9
  %43 = load i8, i8* %37, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %2
  %46 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %46) #10
  br label %47

47:                                               ; preds = %2, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #9
  %48 = load i8, i8* %28, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %51) #10
  br label %52

52:                                               ; preds = %47, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #9
  %53 = load i8, i8* %19, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %52
  %56 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %56) #10
  br label %57

57:                                               ; preds = %52, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #9
  %58 = load i8, i8* %10, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %57
  %61 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %61) #10
  br label %62

62:                                               ; preds = %57, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  ret void
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #2

declare void @_ZNK3gfx6PointF8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.gfx::PointF"*) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gfx5QuadF13IsRectilinearEv(%"class.gfx::QuadF"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 0, i32 0
  %3 = load float, float* %2, align 4
  %4 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 1, i32 0
  %5 = load float, float* %4, align 4
  %6 = fsub float %3, %5
  %7 = tail call float @llvm.fabs.f32(float %6) #9
  %8 = fcmp olt float %7, 0x3E80000000000000
  %9 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 1, i32 1
  %10 = load float, float* %9, align 4
  br i1 %8, label %11, label %33

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 2, i32 1
  %13 = load float, float* %12, align 4
  %14 = fsub float %10, %13
  %15 = tail call float @llvm.fabs.f32(float %14) #9
  %16 = fcmp olt float %15, 0x3E80000000000000
  br i1 %16, label %17, label %33

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 2, i32 0
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 3, i32 0
  %21 = load float, float* %20, align 4
  %22 = fsub float %19, %21
  %23 = tail call float @llvm.fabs.f32(float %22) #9
  %24 = fcmp olt float %23, 0x3E80000000000000
  br i1 %24, label %25, label %33

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 3, i32 1
  %27 = load float, float* %26, align 4
  %28 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 0, i32 1
  %29 = load float, float* %28, align 4
  %30 = fsub float %27, %29
  %31 = tail call float @llvm.fabs.f32(float %30) #9
  %32 = fcmp olt float %31, 0x3E80000000000000
  br i1 %32, label %59, label %33

33:                                               ; preds = %1, %25, %17, %11
  %34 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 0, i32 1
  %35 = load float, float* %34, align 4
  %36 = fsub float %35, %10
  %37 = tail call float @llvm.fabs.f32(float %36) #9
  %38 = fcmp olt float %37, 0x3E80000000000000
  br i1 %38, label %39, label %59

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 2, i32 0
  %41 = load float, float* %40, align 4
  %42 = fsub float %5, %41
  %43 = tail call float @llvm.fabs.f32(float %42) #9
  %44 = fcmp olt float %43, 0x3E80000000000000
  br i1 %44, label %45, label %59

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 2, i32 1
  %47 = load float, float* %46, align 4
  %48 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 3, i32 1
  %49 = load float, float* %48, align 4
  %50 = fsub float %47, %49
  %51 = tail call float @llvm.fabs.f32(float %50) #9
  %52 = fcmp olt float %51, 0x3E80000000000000
  br i1 %52, label %53, label %59

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 3, i32 0
  %55 = load float, float* %54, align 4
  %56 = fsub float %55, %3
  %57 = tail call float @llvm.fabs.f32(float %56) #9
  %58 = fcmp olt float %57, 0x3E80000000000000
  br label %59

59:                                               ; preds = %33, %39, %45, %53, %25
  %60 = phi i1 [ true, %25 ], [ false, %45 ], [ false, %39 ], [ false, %33 ], [ %58, %53 ]
  ret i1 %60
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gfx5QuadF18IsCounterClockwiseEv(%"class.gfx::QuadF"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 1, i32 1
  %3 = load float, float* %2, align 4
  %4 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 3, i32 1
  %5 = load float, float* %4, align 4
  %6 = fsub float %3, %5
  %7 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 2, i32 1
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 0, i32 1
  %10 = load float, float* %9, align 4
  %11 = fsub float %8, %10
  %12 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 0, i32 0
  %13 = load float, float* %12, align 4
  %14 = fpext float %6 to double
  %15 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 1, i32 0
  %16 = load float, float* %15, align 4
  %17 = fpext float %11 to double
  %18 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 2, i32 0
  %19 = load float, float* %18, align 4
  %20 = insertelement <2 x float> undef, float %13, i32 0
  %21 = insertelement <2 x float> %20, float %19, i32 1
  %22 = fpext <2 x float> %21 to <2 x double>
  %23 = insertelement <2 x double> undef, double %14, i32 0
  %24 = shufflevector <2 x double> %23, <2 x double> undef, <2 x i32> zeroinitializer
  %25 = fmul <2 x double> %24, %22
  %26 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 3, i32 0
  %27 = load float, float* %26, align 4
  %28 = insertelement <2 x float> undef, float %16, i32 0
  %29 = insertelement <2 x float> %28, float %27, i32 1
  %30 = fpext <2 x float> %29 to <2 x double>
  %31 = insertelement <2 x double> undef, double %17, i32 0
  %32 = shufflevector <2 x double> %31, <2 x double> undef, <2 x i32> zeroinitializer
  %33 = fmul <2 x double> %32, %30
  %34 = fadd <2 x double> %25, %33
  %35 = extractelement <2 x double> %34, i32 0
  %36 = extractelement <2 x double> %34, i32 1
  %37 = fcmp olt double %35, %36
  ret i1 %37
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gfx5QuadF8ContainsERKNS_6PointFE(%"class.gfx::QuadF"* nocapture readonly, %"class.gfx::PointF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 2, i32 0
  %6 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 0, i32 1
  %7 = bitcast float* %5 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  %9 = bitcast float* %6 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4
  %11 = shufflevector <2 x float> %8, <2 x float> undef, <2 x i32> <i32 1, i32 undef>
  %12 = shufflevector <2 x float> %11, <2 x float> %8, <2 x i32> <i32 0, i32 2>
  %13 = fsub <2 x float> %10, %12
  %14 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 1, i32 1
  %15 = load float, float* %14, align 4
  %16 = insertelement <2 x float> undef, float %4, i32 0
  %17 = insertelement <2 x float> %16, float %15, i32 1
  %18 = fsub <2 x float> %17, %8
  %19 = bitcast %"class.gfx::PointF"* %1 to <2 x float>*
  %20 = load <2 x float>, <2 x float>* %19, align 4
  %21 = shufflevector <2 x float> %20, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %22 = fsub <2 x float> %21, %12
  %23 = fpext <2 x float> %13 to <2 x double>
  %24 = fpext <2 x float> %18 to <2 x double>
  %25 = shufflevector <2 x double> %24, <2 x double> %23, <2 x i32> <i32 0, i32 2>
  %26 = shufflevector <2 x double> %24, <2 x double> %23, <2 x i32> <i32 1, i32 3>
  %27 = fmul <2 x double> %25, %26
  %28 = extractelement <2 x double> %27, i32 0
  %29 = extractelement <2 x double> %27, i32 1
  %30 = fsub double %28, %29
  %31 = fpext <2 x float> %22 to <2 x double>
  %32 = fmul <2 x double> %24, %31
  %33 = shufflevector <2 x double> %31, <2 x double> undef, <2 x i32> <i32 1, i32 0>
  %34 = fmul <2 x double> %33, %23
  %35 = fsub <2 x double> %32, %34
  %36 = insertelement <2 x double> undef, double %30, i32 0
  %37 = shufflevector <2 x double> %36, <2 x double> undef, <2 x i32> zeroinitializer
  %38 = fdiv <2 x double> %35, %37
  %39 = fcmp oge <2 x double> %38, zeroinitializer
  %40 = extractelement <2 x i1> %39, i32 0
  %41 = extractelement <2 x i1> %39, i32 1
  %42 = and i1 %41, %40
  br i1 %42, label %43, label %49

43:                                               ; preds = %2
  %44 = extractelement <2 x double> %38, i32 1
  %45 = fsub double 1.000000e+00, %44
  %46 = extractelement <2 x double> %38, i32 0
  %47 = fsub double %45, %46
  %48 = fcmp ult double %47, 0.000000e+00
  br i1 %48, label %49, label %91

49:                                               ; preds = %43, %2
  %50 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 3, i32 0
  %51 = bitcast float* %50 to <2 x float>*
  %52 = load <2 x float>, <2 x float>* %51, align 4
  %53 = shufflevector <2 x float> %8, <2 x float> %10, <2 x i32> <i32 0, i32 2>
  %54 = fsub <2 x float> %53, %52
  %55 = extractelement <2 x float> %20, i32 0
  %56 = insertelement <2 x float> undef, float %55, i32 0
  %57 = insertelement <2 x float> %56, float %4, i32 1
  %58 = shufflevector <2 x float> %52, <2 x float> undef, <2 x i32> zeroinitializer
  %59 = fsub <2 x float> %57, %58
  %60 = shufflevector <2 x float> %11, <2 x float> %20, <2 x i32> <i32 0, i32 3>
  %61 = shufflevector <2 x float> %52, <2 x float> undef, <2 x i32> <i32 1, i32 1>
  %62 = fsub <2 x float> %60, %61
  %63 = fpext <2 x float> %54 to <2 x double>
  %64 = fpext <2 x float> %59 to <2 x double>
  %65 = fpext <2 x float> %62 to <2 x double>
  %66 = extractelement <2 x double> %64, i32 1
  %67 = extractelement <2 x double> %65, i32 0
  %68 = fmul double %66, %67
  %69 = extractelement <2 x double> %63, i32 0
  %70 = extractelement <2 x double> %63, i32 1
  %71 = fmul double %69, %70
  %72 = fsub double %68, %71
  %73 = fmul <2 x double> %64, %65
  %74 = shufflevector <2 x double> %63, <2 x double> %64, <2 x i32> <i32 0, i32 2>
  %75 = shufflevector <2 x double> %65, <2 x double> %63, <2 x i32> <i32 1, i32 3>
  %76 = fmul <2 x double> %74, %75
  %77 = fsub <2 x double> %73, %76
  %78 = insertelement <2 x double> undef, double %72, i32 0
  %79 = shufflevector <2 x double> %78, <2 x double> undef, <2 x i32> zeroinitializer
  %80 = fdiv <2 x double> %77, %79
  %81 = fcmp oge <2 x double> %80, zeroinitializer
  %82 = extractelement <2 x i1> %81, i32 0
  %83 = extractelement <2 x i1> %81, i32 1
  %84 = and i1 %82, %83
  br i1 %84, label %85, label %91

85:                                               ; preds = %49
  %86 = extractelement <2 x double> %80, i32 0
  %87 = fsub double 1.000000e+00, %86
  %88 = extractelement <2 x double> %80, i32 1
  %89 = fsub double %87, %88
  %90 = fcmp oge double %89, 0.000000e+00
  br label %91

91:                                               ; preds = %43, %85, %49
  %92 = phi i1 [ true, %43 ], [ false, %49 ], [ %90, %85 ]
  ret i1 %92
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gfx5QuadF5ScaleEff(%"class.gfx::QuadF"* nocapture, float, float) local_unnamed_addr #6 align 2 {
  %4 = bitcast %"class.gfx::QuadF"* %0 to <4 x float>*
  %5 = load <4 x float>, <4 x float>* %4, align 4
  %6 = insertelement <2 x float> undef, float %1, i32 0
  %7 = insertelement <2 x float> %6, float %2, i32 1
  %8 = shufflevector <2 x float> %7, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %9 = fmul <4 x float> %5, %8
  %10 = bitcast %"class.gfx::QuadF"* %0 to <4 x float>*
  store <4 x float> %9, <4 x float>* %10, align 4
  %11 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 2, i32 0
  %12 = bitcast float* %11 to <4 x float>*
  %13 = load <4 x float>, <4 x float>* %12, align 4
  %14 = shufflevector <2 x float> %7, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %15 = fmul <4 x float> %13, %14
  %16 = bitcast float* %11 to <4 x float>*
  store <4 x float> %15, <4 x float>* %16, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gfx5QuadFpLERKNS_9Vector2dFE(%"class.gfx::QuadF"* nocapture, %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fadd float %4, %6
  store float %7, float* %5, align 4
  %8 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 0, i32 1
  %11 = load float, float* %10, align 4
  %12 = fadd float %9, %11
  store float %12, float* %10, align 4
  %13 = load float, float* %3, align 4
  %14 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 1, i32 0
  %15 = load float, float* %14, align 4
  %16 = fadd float %13, %15
  store float %16, float* %14, align 4
  %17 = load float, float* %8, align 4
  %18 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 1, i32 1
  %19 = load float, float* %18, align 4
  %20 = fadd float %17, %19
  store float %20, float* %18, align 4
  %21 = load float, float* %3, align 4
  %22 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 2, i32 0
  %23 = load float, float* %22, align 4
  %24 = fadd float %21, %23
  store float %24, float* %22, align 4
  %25 = load float, float* %8, align 4
  %26 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 2, i32 1
  %27 = load float, float* %26, align 4
  %28 = fadd float %25, %27
  store float %28, float* %26, align 4
  %29 = load float, float* %3, align 4
  %30 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 3, i32 0
  %31 = load float, float* %30, align 4
  %32 = fadd float %29, %31
  store float %32, float* %30, align 4
  %33 = load float, float* %8, align 4
  %34 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 3, i32 1
  %35 = load float, float* %34, align 4
  %36 = fadd float %33, %35
  store float %36, float* %34, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gfx5QuadFmIERKNS_9Vector2dFE(%"class.gfx::QuadF"* nocapture, %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fsub float %6, %4
  store float %7, float* %5, align 4
  %8 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 0, i32 1
  %11 = load float, float* %10, align 4
  %12 = fsub float %11, %9
  store float %12, float* %10, align 4
  %13 = load float, float* %3, align 4
  %14 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 1, i32 0
  %15 = load float, float* %14, align 4
  %16 = fsub float %15, %13
  store float %16, float* %14, align 4
  %17 = load float, float* %8, align 4
  %18 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 1, i32 1
  %19 = load float, float* %18, align 4
  %20 = fsub float %19, %17
  store float %20, float* %18, align 4
  %21 = load float, float* %3, align 4
  %22 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 2, i32 0
  %23 = load float, float* %22, align 4
  %24 = fsub float %23, %21
  store float %24, float* %22, align 4
  %25 = load float, float* %8, align 4
  %26 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 2, i32 1
  %27 = load float, float* %26, align 4
  %28 = fsub float %27, %25
  store float %28, float* %26, align 4
  %29 = load float, float* %3, align 4
  %30 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 3, i32 0
  %31 = load float, float* %30, align 4
  %32 = fsub float %31, %29
  store float %32, float* %30, align 4
  %33 = load float, float* %8, align 4
  %34 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 3, i32 1
  %35 = load float, float* %34, align 4
  %36 = fsub float %35, %33
  store float %36, float* %34, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfxplERKNS_5QuadFERKNS_9Vector2dFE(%"class.gfx::QuadF"* noalias nocapture sret, %"class.gfx::QuadF"* nocapture readonly dereferenceable(32), %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 2, i32 0
  %5 = bitcast %"class.gfx::QuadF"* %0 to i8*
  %6 = bitcast %"class.gfx::QuadF"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 32, i1 false)
  %7 = bitcast %"class.gfx::Vector2dF"* %2 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  %9 = shufflevector <2 x float> %8, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %10 = bitcast %"class.gfx::QuadF"* %0 to <4 x float>*
  %11 = load <4 x float>, <4 x float>* %10, align 4
  %12 = fadd <4 x float> %9, %11
  %13 = bitcast %"class.gfx::QuadF"* %0 to <4 x float>*
  store <4 x float> %12, <4 x float>* %13, align 4
  %14 = bitcast float* %4 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 4
  %16 = shufflevector <2 x float> %8, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %17 = fadd <4 x float> %16, %15
  %18 = bitcast float* %4 to <4 x float>*
  store <4 x float> %17, <4 x float>* %18, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfxmiERKNS_5QuadFERKNS_9Vector2dFE(%"class.gfx::QuadF"* noalias nocapture sret, %"class.gfx::QuadF"* nocapture readonly dereferenceable(32), %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 2, i32 0
  %5 = bitcast %"class.gfx::QuadF"* %0 to i8*
  %6 = bitcast %"class.gfx::QuadF"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 32, i1 false)
  %7 = bitcast %"class.gfx::Vector2dF"* %2 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  %9 = shufflevector <2 x float> %8, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %10 = bitcast %"class.gfx::QuadF"* %0 to <4 x float>*
  %11 = load <4 x float>, <4 x float>* %10, align 4
  %12 = fsub <4 x float> %11, %9
  %13 = bitcast %"class.gfx::QuadF"* %0 to <4 x float>*
  store <4 x float> %12, <4 x float>* %13, align 4
  %14 = bitcast float* %4 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 4
  %16 = shufflevector <2 x float> %8, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %17 = fsub <4 x float> %15, %16
  %18 = bitcast float* %4 to <4 x float>*
  store <4 x float> %17, <4 x float>* %18, align 4
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
