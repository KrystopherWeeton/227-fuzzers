; ModuleID = '../../third_party/blink/renderer/platform/wtf/text/string_builder.cc'
source_filename = "../../third_party/blink/renderer/platform/wtf/text/string_builder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon, i32, i8, i8, [2 x i8] }>
%union.anon = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [16 x i8] }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.WTF::VectorBuffer.2" = type { %"class.WTF::VectorBufferBase.3", [16 x i8] }
%"class.WTF::VectorBufferBase.3" = type { i16*, i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.6 }
%union.anon.6 = type { %"class.WTF::Vector" }
%"class.absl::optional.7" = type { %"class.absl::optional_internal::optional_data.8" }
%"class.absl::optional_internal::optional_data.8" = type { %"class.absl::optional_internal::optional_data_base.9" }
%"class.absl::optional_internal::optional_data_base.9" = type { %"class.absl::optional_internal::optional_data_dtor_base.10" }
%"class.absl::optional_internal::optional_data_dtor_base.10" = type { i8, %union.anon.11 }
%union.anon.11 = type { %"class.WTF::Vector.1" }
%"class.WTF::Vector.1" = type { %"class.WTF::VectorBuffer.2" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.17 }
%union.anon.17 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::IntegerToStringConverter" = type <{ [3 x i8], [5 x i8], i8*, i32, [4 x i8] }>
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%"class.WTF::Vector.12" = type { %"class.WTF::VectorBuffer.13" }
%"class.WTF::VectorBuffer.13" = type { %"class.WTF::VectorBufferBase.14", [256 x i8] }
%"class.WTF::VectorBufferBase.14" = type { i8*, i32, i32 }

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3WTF13StringBuilder6AppendEDs = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE6AppendIDsEEvPKT_j = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j = comdat any

$_ZN3WTF13StringBuilder12AppendNumberIhEEvT_ = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF12VectorBufferIcLj256ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPc = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIDsS1_E11OffsetRangeES6_ = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIhS1_E11OffsetRangeES6_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm = comdat any

$_ZN3WTF6VectorIcLj256ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIcLj256ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@_ZN3WTF12g_empty_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %29

7:                                                ; preds = %1
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %171, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %171

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #4
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #4
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %171

29:                                               ; preds = %1
  %30 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %153

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %35 = load i8, i8* %34, align 4, !range !3
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %76, label %37

37:                                               ; preds = %33
  %38 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #4
  %39 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @_ZN3WTF6StringC1EPKhj(%"class.WTF::String"* nonnull %2, i8* %40, i32 %5) #4
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %42 = bitcast %"class.WTF::String"* %2 to i64*
  %43 = load i64, i64* %42, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %41, align 8
  %44 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  store i64 %43, i64* %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %116, label %47

47:                                               ; preds = %37
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #4
  br label %60

60:                                               ; preds = %56, %59
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %116, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %116

75:                                               ; preds = %72
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #4
  br label %116

76:                                               ; preds = %33
  %77 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #4
  %78 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %79 = bitcast %union.anon* %78 to i16**
  %80 = load i16*, i16** %79, align 8
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %3, i16* %80, i32 %5) #4
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %82 = bitcast %"class.WTF::String"* %3 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %81, align 8
  %84 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  store i64 %83, i64* %84, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %116, label %87

87:                                               ; preds = %76
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %96

94:                                               ; preds = %87
  %95 = add i32 %93, -1
  store i32 %95, i32* %92, align 4
  br label %96

96:                                               ; preds = %94, %87
  %97 = phi i32 [ %95, %94 ], [ %93, %87 ]
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #4
  br label %100

100:                                              ; preds = %96, %99
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %116, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %103
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %103
  %113 = phi i32 [ %111, %110 ], [ %109, %103 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #4
  br label %116

116:                                              ; preds = %115, %112, %100, %76, %75, %72, %60, %37
  %117 = phi i8* [ %38, %37 ], [ %38, %60 ], [ %38, %72 ], [ %38, %75 ], [ %77, %76 ], [ %77, %100 ], [ %77, %112 ], [ %77, %115 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #4
  %118 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %119 = load i8, i8* %118, align 1, !range !3
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %150, label %121

121:                                              ; preds = %116
  %122 = load i8, i8* %34, align 4, !range !3
  %123 = icmp eq i8 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %125 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %126, 0
  br i1 %123, label %138, label %128

128:                                              ; preds = %121
  br i1 %127, label %130, label %129, !prof !2

129:                                              ; preds = %128
  store i32 0, i32* %125, align 4
  br label %130

130:                                              ; preds = %129, %128
  %131 = getelementptr inbounds %union.anon, %union.anon* %124, i64 0, i32 0, i32 0, i32 0, i32 0
  %132 = load i8*, i8** %131, align 8
  %133 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %134 = icmp eq i8* %133, %132
  br i1 %134, label %137, label %135, !prof !4

135:                                              ; preds = %130
  %136 = getelementptr inbounds %union.anon, %union.anon* %124, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %136, i8* %132) #4
  br label %137

137:                                              ; preds = %135, %130
  store i8* null, i8** %131, align 8
  br label %149

138:                                              ; preds = %121
  br i1 %127, label %140, label %139, !prof !2

139:                                              ; preds = %138
  store i32 0, i32* %125, align 4
  br label %140

140:                                              ; preds = %139, %138
  %141 = bitcast %union.anon* %124 to i16**
  %142 = load i16*, i16** %141, align 8
  %143 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %144 = bitcast i8* %143 to i16*
  %145 = icmp eq i16* %142, %144
  br i1 %145, label %148, label %146, !prof !4

146:                                              ; preds = %140
  %147 = bitcast %union.anon* %124 to %"class.WTF::VectorBuffer.2"*
  call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2"* %147, i16* %142) #4
  br label %148

148:                                              ; preds = %146, %140
  store i16* null, i16** %141, align 8
  br label %149

149:                                              ; preds = %148, %137
  store i8 0, i8* %118, align 1
  br label %150

150:                                              ; preds = %149, %116
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %152, label %171, label %153

153:                                              ; preds = %29, %150
  %154 = phi %"class.WTF::StringImpl"* [ %151, %150 ], [ %31, %29 ]
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %171

159:                                              ; preds = %153
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  %162 = zext i32 %161 to i33
  %163 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %162, i33 1) #4
  %164 = extractvalue { i33, i1 } %163, 1
  %165 = extractvalue { i33, i1 } %163, 0
  %166 = icmp slt i33 %165, 0
  %167 = or i1 %164, %166
  br i1 %167, label %168, label %169, !prof !2

168:                                              ; preds = %159
  call void @llvm.trap() #4
  unreachable

169:                                              ; preds = %159
  %170 = trunc i33 %165 to i32
  store i32 %170, i32* %160, align 4
  br label %171

171:                                              ; preds = %169, %153, %150, %27, %12, %7
  %172 = phi %"class.WTF::StringImpl"* [ null, %7 ], [ %10, %12 ], [ %10, %27 ], [ null, %150 ], [ %154, %153 ], [ %154, %169 ]
  ret %"class.WTF::StringImpl"* %172
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3WTF6StringC1EPKhj(%"class.WTF::String"*, i8*, i32) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"*, i16*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF13StringBuilder11ClearBufferEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 1, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %35, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %7 = load i8, i8* %6, align 4, !range !3
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %8, label %23, label %13

13:                                               ; preds = %5
  br i1 %12, label %15, label %14, !prof !2

14:                                               ; preds = %13
  store i32 0, i32* %10, align 4
  br label %15

15:                                               ; preds = %14, %13
  %16 = getelementptr inbounds %union.anon, %union.anon* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %19 = icmp eq i8* %18, %17
  br i1 %19, label %22, label %20, !prof !4

20:                                               ; preds = %15
  %21 = getelementptr inbounds %union.anon, %union.anon* %9, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %21, i8* %17) #4
  br label %22

22:                                               ; preds = %15, %20
  store i8* null, i8** %16, align 8
  br label %34

23:                                               ; preds = %5
  br i1 %12, label %25, label %24, !prof !2

24:                                               ; preds = %23
  store i32 0, i32* %10, align 4
  br label %25

25:                                               ; preds = %24, %23
  %26 = bitcast %union.anon* %9 to i16**
  %27 = load i16*, i16** %26, align 8
  %28 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %29 = bitcast i8* %28 to i16*
  %30 = icmp eq i16* %27, %29
  br i1 %30, label %33, label %31, !prof !4

31:                                               ; preds = %25
  %32 = bitcast %union.anon* %9 to %"class.WTF::VectorBuffer.2"*
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2"* %32, i16* %27) #4
  br label %33

33:                                               ; preds = %25, %31
  store i16* null, i16** %26, align 8
  br label %34

34:                                               ; preds = %33, %22
  store i8 0, i8* %2, align 1
  br label %35

35:                                               ; preds = %1, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder14ToAtomicStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %30

7:                                                ; preds = %1
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = ptrtoint %"class.WTF::StringImpl"* %10 to i64
  %12 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %12, label %219, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %219

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #4
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %18
  tail call void @llvm.trap() #4
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %219

30:                                               ; preds = %1
  %31 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %192

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %36 = load i8, i8* %35, align 4, !range !3
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %96, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #4
  %40 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  call void @_ZN3WTF12AtomicStringC1EPKhj(%"class.WTF::AtomicString"* nonnull %2, i8* %41, i32 %5) #4
  %42 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %62, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %62

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i33
  %54 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %53, i33 1) #4
  %55 = extractvalue { i33, i1 } %54, 1
  %56 = extractvalue { i33, i1 } %54, 0
  %57 = icmp slt i33 %56, 0
  %58 = or i1 %55, %57
  br i1 %58, label %59, label %60, !prof !2

59:                                               ; preds = %50
  call void @llvm.trap() #4
  unreachable

60:                                               ; preds = %50
  %61 = trunc i33 %56 to i32
  store i32 %61, i32* %51, align 4
  br label %62

62:                                               ; preds = %60, %45, %38
  %63 = ptrtoint %"class.WTF::StringImpl"* %43 to i64
  %64 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %63, i64* %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #4
  br label %80

80:                                               ; preds = %62, %76, %79
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %155, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %155

95:                                               ; preds = %92
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #4
  br label %155

96:                                               ; preds = %34
  %97 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #4
  %98 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %99 = bitcast %union.anon* %98 to i16**
  %100 = load i16*, i16** %99, align 8
  call void @_ZN3WTF12AtomicStringC1EPKDsj(%"class.WTF::AtomicString"* nonnull %3, i16* %100, i32 %5) #4
  %101 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %121, label %104

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %121

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i33
  %113 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %112, i33 1) #4
  %114 = extractvalue { i33, i1 } %113, 1
  %115 = extractvalue { i33, i1 } %113, 0
  %116 = icmp slt i33 %115, 0
  %117 = or i1 %114, %116
  br i1 %117, label %118, label %119, !prof !2

118:                                              ; preds = %109
  call void @llvm.trap() #4
  unreachable

119:                                              ; preds = %109
  %120 = trunc i33 %115 to i32
  store i32 %120, i32* %110, align 4
  br label %121

121:                                              ; preds = %119, %104, %96
  %122 = ptrtoint %"class.WTF::StringImpl"* %102 to i64
  %123 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %122, i64* %123, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #4
  br label %139

139:                                              ; preds = %121, %135, %138
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %140, null
  br i1 %141, label %155, label %142

142:                                              ; preds = %139
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load atomic i32, i32* %143 monotonic, align 4
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  br i1 %146, label %149, label %151

149:                                              ; preds = %142
  %150 = add i32 %148, -1
  store i32 %150, i32* %147, align 4
  br label %151

151:                                              ; preds = %149, %142
  %152 = phi i32 [ %150, %149 ], [ %148, %142 ]
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %151
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %140) #4
  br label %155

155:                                              ; preds = %154, %151, %139, %95, %92, %80
  %156 = phi i8* [ %39, %80 ], [ %39, %92 ], [ %39, %95 ], [ %97, %139 ], [ %97, %151 ], [ %97, %154 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156) #4
  %157 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %158 = load i8, i8* %157, align 1, !range !3
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %189, label %160

160:                                              ; preds = %155
  %161 = load i8, i8* %35, align 4, !range !3
  %162 = icmp eq i8 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %164 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %165 = load i32, i32* %164, align 4
  %166 = icmp eq i32 %165, 0
  br i1 %162, label %177, label %167

167:                                              ; preds = %160
  br i1 %166, label %169, label %168, !prof !2

168:                                              ; preds = %167
  store i32 0, i32* %164, align 4
  br label %169

169:                                              ; preds = %168, %167
  %170 = getelementptr inbounds %union.anon, %union.anon* %163, i64 0, i32 0, i32 0, i32 0, i32 0
  %171 = load i8*, i8** %170, align 8
  %172 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %173 = icmp eq i8* %172, %171
  br i1 %173, label %176, label %174, !prof !4

174:                                              ; preds = %169
  %175 = getelementptr inbounds %union.anon, %union.anon* %163, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %175, i8* %171) #4
  br label %176

176:                                              ; preds = %174, %169
  store i8* null, i8** %170, align 8
  br label %188

177:                                              ; preds = %160
  br i1 %166, label %179, label %178, !prof !2

178:                                              ; preds = %177
  store i32 0, i32* %164, align 4
  br label %179

179:                                              ; preds = %178, %177
  %180 = bitcast %union.anon* %163 to i16**
  %181 = load i16*, i16** %180, align 8
  %182 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %183 = bitcast i8* %182 to i16*
  %184 = icmp eq i16* %181, %183
  br i1 %184, label %187, label %185, !prof !4

185:                                              ; preds = %179
  %186 = bitcast %union.anon* %163 to %"class.WTF::VectorBuffer.2"*
  call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2"* %186, i16* %181) #4
  br label %187

187:                                              ; preds = %185, %179
  store i16* null, i16** %180, align 8
  br label %188

188:                                              ; preds = %187, %176
  store i8 0, i8* %157, align 1
  br label %189

189:                                              ; preds = %188, %155
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %191 = icmp eq %"class.WTF::StringImpl"* %190, null
  br i1 %191, label %216, label %192

192:                                              ; preds = %30, %189
  %193 = phi %"class.WTF::StringImpl"* [ %190, %189 ], [ %32, %30 ]
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load atomic i32, i32* %194 acquire, align 4
  %196 = and i32 %195, 4
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %214, label %198

198:                                              ; preds = %192
  %199 = load atomic i32, i32* %194 monotonic, align 4
  %200 = and i32 %199, 2
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %216

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 0
  %204 = load i32, i32* %203, align 4
  %205 = zext i32 %204 to i33
  %206 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %205, i33 1) #4
  %207 = extractvalue { i33, i1 } %206, 1
  %208 = extractvalue { i33, i1 } %206, 0
  %209 = icmp slt i33 %208, 0
  %210 = or i1 %207, %209
  br i1 %210, label %211, label %212, !prof !2

211:                                              ; preds = %202
  call void @llvm.trap() #4
  unreachable

212:                                              ; preds = %202
  %213 = trunc i33 %208 to i32
  store i32 %213, i32* %203, align 4
  br label %216

214:                                              ; preds = %192
  %215 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %193) #4
  br label %216

216:                                              ; preds = %189, %198, %212, %214
  %217 = phi %"class.WTF::StringImpl"* [ %215, %214 ], [ %193, %198 ], [ %193, %212 ], [ null, %189 ]
  %218 = ptrtoint %"class.WTF::StringImpl"* %217 to i64
  br label %219

219:                                              ; preds = %28, %13, %7, %216
  %220 = phi i64 [ %218, %216 ], [ %11, %7 ], [ %11, %13 ], [ %11, %28 ]
  %221 = inttoptr i64 %220 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %221
}

declare void @_ZN3WTF12AtomicStringC1EPKhj(%"class.WTF::AtomicString"*, i8*, i32) unnamed_addr #2

declare void @_ZN3WTF12AtomicStringC1EPKDsj(%"class.WTF::AtomicString"*, i16*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK3WTF13StringBuilder9SubstringEjj(%"class.WTF::StringBuilder"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp ugt i32 %6, %1
  br i1 %7, label %31, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %13, label %57, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %57

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #4
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !2

28:                                               ; preds = %19
  tail call void @llvm.trap() #4
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %57

31:                                               ; preds = %3
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0
  %37 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %36, i32 %1, i32 %2) #4
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %38, align 8
  br label %57

39:                                               ; preds = %31
  %40 = sub i32 %6, %1
  %41 = icmp ult i32 %40, %2
  %42 = select i1 %41, i32 %40, i32 %2
  %43 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %44 = load i8, i8* %43, align 4, !range !3
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = zext i32 %1 to i64
  %50 = getelementptr inbounds i8, i8* %48, i64 %49
  call void @_ZN3WTF6StringC1EPKhj(%"class.WTF::String"* nonnull %4, i8* %50, i32 %42) #4
  br label %57

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %53 = bitcast %union.anon* %52 to i16**
  %54 = load i16*, i16** %53, align 8
  %55 = zext i32 %1 to i64
  %56 = getelementptr inbounds i16, i16* %54, i64 %55
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %4, i16* %56, i32 %42) #4
  br label %57

57:                                               ; preds = %29, %14, %8, %51, %46, %35
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  ret %"class.WTF::StringImpl"* %59
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF13StringBuilder4SwapERS0_(%"class.WTF::StringBuilder"*, %"class.WTF::StringBuilder"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional", align 8
  %4 = alloca %"class.absl::optional.7", align 8
  %5 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #4
  %6 = bitcast %"class.absl::optional"* %3 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  store i8 0, i8* %5, align 8
  %7 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %union.anon.6* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false) #4
  %9 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #4
  %10 = bitcast %"class.absl::optional.7"* %4 to i64*
  store i64 -6148914691236517206, i64* %10, align 8
  store i8 0, i8* %9, align 8
  %11 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %union.anon.11* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 32, i1 false) #4
  %13 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %14 = load i8, i8* %13, align 1, !range !3
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %60, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %18 = load i8, i8* %17, align 4, !range !3
  %19 = icmp eq i8 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  br i1 %19, label %40, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %22, i64 0, i32 0
  %24 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %25 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %22, i64 0, i32 0, i32 0, i32 0
  store i8* %24, i8** %25, align 8
  %26 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store i32 16, i32* %26, align 8
  %27 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds %union.anon, %union.anon* %20, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIhS1_E11OffsetRangeES6_(%"class.WTF::VectorBuffer"* %23, %"class.WTF::VectorBuffer"* dereferenceable(32) %28, i64 0, i64 0) #4
  store i8 1, i8* %5, align 8
  %29 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32, !prof !2

32:                                               ; preds = %21
  store i32 0, i32* %29, align 4
  br label %33

33:                                               ; preds = %32, %21
  %34 = getelementptr inbounds %union.anon, %union.anon* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %37 = icmp eq i8* %36, %35
  br i1 %37, label %39, label %38, !prof !4

38:                                               ; preds = %33
  call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %28, i8* %35) #4
  br label %39

39:                                               ; preds = %33, %38
  store i8* null, i8** %34, align 8
  br label %60

40:                                               ; preds = %16
  %41 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %41, i64 0, i32 0
  %43 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %44 = bitcast %"class.WTF::Vector.1"* %41 to i8**
  store i8* %43, i8** %44, align 8
  %45 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store i32 8, i32* %45, align 8
  %46 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %46, align 4
  %47 = bitcast %union.anon* %20 to %"class.WTF::VectorBuffer.2"*
  call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIDsS1_E11OffsetRangeES6_(%"class.WTF::VectorBuffer.2"* %42, %"class.WTF::VectorBuffer.2"* dereferenceable(32) %47, i64 0, i64 0) #4
  store i8 1, i8* %9, align 8
  %48 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %52, label %51, !prof !2

51:                                               ; preds = %40
  store i32 0, i32* %48, align 4
  br label %52

52:                                               ; preds = %51, %40
  %53 = bitcast %union.anon* %20 to i16**
  %54 = load i16*, i16** %53, align 8
  %55 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %56 = bitcast i8* %55 to i16*
  %57 = icmp eq i16* %54, %56
  br i1 %57, label %59, label %58, !prof !4

58:                                               ; preds = %52
  call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2"* %47, i16* %54) #4
  br label %59

59:                                               ; preds = %52, %58
  store i16* null, i16** %53, align 8
  br label %60

60:                                               ; preds = %2, %39, %59
  %61 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 4
  %62 = load i8, i8* %61, align 1, !range !3
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %108, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 3
  %66 = load i8, i8* %65, align 4, !range !3
  %67 = icmp eq i8 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  br i1 %67, label %88, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 1, i32 0
  %71 = getelementptr inbounds %union.anon, %union.anon* %68, i64 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %73 = getelementptr inbounds %union.anon, %union.anon* %68, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8* %72, i8** %73, align 8
  %74 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store i32 16, i32* %74, align 8
  %75 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %75, align 4
  %76 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %70, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIhS1_E11OffsetRangeES6_(%"class.WTF::VectorBuffer"* %71, %"class.WTF::VectorBuffer"* dereferenceable(32) %76, i64 0, i64 0) #4
  %77 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %81, label %80, !prof !2

80:                                               ; preds = %69
  store i32 0, i32* %77, align 4
  br label %81

81:                                               ; preds = %80, %69
  %82 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %70, i64 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %85 = icmp eq i8* %84, %83
  br i1 %85, label %87, label %86, !prof !4

86:                                               ; preds = %81
  call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %76, i8* %83) #4
  br label %87

87:                                               ; preds = %81, %86
  store i8* null, i8** %82, align 8
  br label %108

88:                                               ; preds = %64
  %89 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 1
  %90 = bitcast %union.anon* %68 to %"class.WTF::VectorBuffer.2"*
  %91 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %92 = getelementptr inbounds %union.anon, %union.anon* %68, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8* %91, i8** %92, align 8
  %93 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store i32 8, i32* %93, align 8
  %94 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %94, align 4
  %95 = bitcast %union.anon* %89 to %"class.WTF::VectorBuffer.2"*
  call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIDsS1_E11OffsetRangeES6_(%"class.WTF::VectorBuffer.2"* %90, %"class.WTF::VectorBuffer.2"* dereferenceable(32) %95, i64 0, i64 0) #4
  %96 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %100, label %99, !prof !2

99:                                               ; preds = %88
  store i32 0, i32* %96, align 4
  br label %100

100:                                              ; preds = %99, %88
  %101 = bitcast %union.anon* %89 to i16**
  %102 = load i16*, i16** %101, align 8
  %103 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %104 = bitcast i8* %103 to i16*
  %105 = icmp eq i16* %102, %104
  br i1 %105, label %107, label %106, !prof !4

106:                                              ; preds = %100
  call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2"* %95, i16* %102) #4
  br label %107

107:                                              ; preds = %100, %106
  store i16* null, i16** %101, align 8
  br label %108

108:                                              ; preds = %60, %87, %107
  %109 = load i8, i8* %5, align 8, !range !3
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %119, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 1, i32 0
  %113 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %112, i64 0, i32 0
  %114 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %115 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %112, i64 0, i32 0, i32 0, i32 0
  store i8* %114, i8** %115, align 8
  %116 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store i32 16, i32* %116, align 8
  %117 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %117, align 4
  %118 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIhS1_E11OffsetRangeES6_(%"class.WTF::VectorBuffer"* %113, %"class.WTF::VectorBuffer"* dereferenceable(32) %118, i64 0, i64 0) #4
  br label %130

119:                                              ; preds = %108
  %120 = load i8, i8* %9, align 8, !range !3
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %130, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 1
  %124 = bitcast %union.anon* %123 to %"class.WTF::VectorBuffer.2"*
  %125 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %126 = getelementptr inbounds %union.anon, %union.anon* %123, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8* %125, i8** %126, align 8
  %127 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store i32 8, i32* %127, align 8
  %128 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %128, align 4
  %129 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIDsS1_E11OffsetRangeES6_(%"class.WTF::VectorBuffer.2"* %124, %"class.WTF::VectorBuffer.2"* dereferenceable(32) %129, i64 0, i64 0) #4
  br label %130

130:                                              ; preds = %119, %122, %111
  %131 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %132 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %133 = load i64, i64* %132, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %131, align 8
  %134 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 0, i32 0, i32 0
  %135 = bitcast %"class.WTF::StringBuilder"* %1 to i64*
  %136 = load i64, i64* %135, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %134, align 8
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  store i64 %136, i64* %132, align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %137, null
  br i1 %138, label %152, label %139

139:                                              ; preds = %130
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  br i1 %143, label %146, label %148

146:                                              ; preds = %139
  %147 = add i32 %145, -1
  store i32 %147, i32* %144, align 4
  br label %148

148:                                              ; preds = %146, %139
  %149 = phi i32 [ %147, %146 ], [ %145, %139 ]
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %148
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %137) #4
  br label %152

152:                                              ; preds = %151, %148, %130
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  store i64 %133, i64* %135, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %168, label %155

155:                                              ; preds = %152
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %153) #4
  br label %168

168:                                              ; preds = %152, %164, %167
  %169 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %170 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 2
  %171 = load i32, i32* %169, align 4
  %172 = load i32, i32* %170, align 4
  store i32 %172, i32* %169, align 4
  store i32 %171, i32* %170, align 4
  %173 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %174 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 3
  %175 = load i8, i8* %173, align 1, !range !3
  %176 = load i8, i8* %174, align 1, !range !3
  store i8 %176, i8* %173, align 1
  store i8 %175, i8* %174, align 1
  %177 = load i8, i8* %13, align 1, !range !3
  %178 = load i8, i8* %61, align 1, !range !3
  store i8 %178, i8* %13, align 1
  store i8 %177, i8* %61, align 1
  %179 = load i8, i8* %9, align 8, !range !3
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %196, label %181

181:                                              ; preds = %168
  %182 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %183 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %184 = load i32, i32* %183, align 4
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %187, label %186, !prof !2

186:                                              ; preds = %181
  store i32 0, i32* %183, align 4
  br label %187

187:                                              ; preds = %186, %181
  %188 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %182, i64 0, i32 0, i32 0, i32 0
  %189 = load i16*, i16** %188, align 8
  %190 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %191 = bitcast i8* %190 to i16*
  %192 = icmp eq i16* %189, %191
  br i1 %192, label %195, label %193, !prof !4

193:                                              ; preds = %187
  %194 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %182, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2"* %194, i16* %189) #4
  br label %195

195:                                              ; preds = %193, %187
  store i16* null, i16** %188, align 8
  store i8 0, i8* %9, align 8
  br label %196

196:                                              ; preds = %168, %195
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #4
  %197 = load i8, i8* %5, align 8, !range !3
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %213, label %199

199:                                              ; preds = %196
  %200 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %201 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %202 = load i32, i32* %201, align 4
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %205, label %204, !prof !2

204:                                              ; preds = %199
  store i32 0, i32* %201, align 4
  br label %205

205:                                              ; preds = %204, %199
  %206 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %200, i64 0, i32 0, i32 0, i32 0
  %207 = load i8*, i8** %206, align 8
  %208 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %209 = icmp eq i8* %208, %207
  br i1 %209, label %212, label %210, !prof !4

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %200, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %211, i8* %207) #4
  br label %212

212:                                              ; preds = %210, %205
  store i8* null, i8** %206, align 8
  store i8 0, i8* %5, align 8
  br label %213

213:                                              ; preds = %196, %212
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF13StringBuilder11Ensure16BitEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 4, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %7 = load i8, i8* %6, align 1, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %5, %1
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 0) #4
  br label %10

10:                                               ; preds = %5, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 1, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %35, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %7 = load i8, i8* %6, align 4, !range !3
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %8, label %23, label %13

13:                                               ; preds = %5
  br i1 %12, label %15, label %14, !prof !2

14:                                               ; preds = %13
  store i32 0, i32* %10, align 4
  br label %15

15:                                               ; preds = %14, %13
  %16 = getelementptr inbounds %union.anon, %union.anon* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %19 = icmp eq i8* %18, %17
  br i1 %19, label %22, label %20, !prof !4

20:                                               ; preds = %15
  %21 = getelementptr inbounds %union.anon, %union.anon* %9, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %21, i8* %17) #4
  br label %22

22:                                               ; preds = %20, %15
  store i8* null, i8** %16, align 8
  br label %34

23:                                               ; preds = %5
  br i1 %12, label %25, label %24, !prof !2

24:                                               ; preds = %23
  store i32 0, i32* %10, align 4
  br label %25

25:                                               ; preds = %24, %23
  %26 = bitcast %union.anon* %9 to i16**
  %27 = load i16*, i16** %26, align 8
  %28 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %29 = bitcast i8* %28 to i16*
  %30 = icmp eq i16* %27, %29
  br i1 %30, label %33, label %31, !prof !4

31:                                               ; preds = %25
  %32 = bitcast %union.anon* %9 to %"class.WTF::VectorBuffer.2"*
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2"* %32, i16* %27) #4
  br label %33

33:                                               ; preds = %31, %25
  store i16* null, i16** %26, align 8
  br label %34

34:                                               ; preds = %33, %22
  store i8 0, i8* %2, align 1
  br label %35

35:                                               ; preds = %1, %34
  %36 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %37 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  store i64 0, i64* %36, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #4
  br label %53

53:                                               ; preds = %52, %49, %35
  %54 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  store i32 0, i32* %54, align 8
  %55 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  store i8 1, i8* %55, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3WTF13StringBuilder8CapacityEv(%"class.WTF::StringBuilder"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 1, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  br label %8

8:                                                ; preds = %5, %1
  %9 = phi i32 [ 0, %1 ], [ %7, %5 ]
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %4 = load i8, i8* %3, align 1, !range !3
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %7 = load i8, i8* %6, align 4, !range !3
  %8 = icmp ne i8 %7, 0
  br i1 %5, label %9, label %12

9:                                                ; preds = %2
  br i1 %8, label %10, label %11

10:                                               ; preds = %9
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 %1)
  br label %65

11:                                               ; preds = %9
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 %1)
  br label %65

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  br i1 %8, label %14, label %39

14:                                               ; preds = %12
  %15 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %17, %1
  br i1 %18, label %19, label %65, !prof !4

19:                                               ; preds = %14
  %20 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %23, label %38

23:                                               ; preds = %19
  %24 = icmp ugt i32 %1, 16
  br i1 %24, label %25, label %32

25:                                               ; preds = %23
  %26 = zext i32 %1 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %26) #4
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #4
  %29 = ptrtoint i8* %28 to i64
  %30 = bitcast %union.anon* %13 to i64*
  store atomic i64 %29, i64* %30 monotonic, align 8
  %31 = trunc i64 %27 to i32
  br label %36

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %34 = ptrtoint i8* %33 to i64
  %35 = bitcast %union.anon* %13 to i64*
  store atomic i64 %34, i64* %35 monotonic, align 8
  br label %36

36:                                               ; preds = %32, %25
  %37 = phi i32 [ 16, %32 ], [ %31, %25 ]
  store i32 %37, i32* %16, align 8
  br label %65

38:                                               ; preds = %19
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %15, i32 %1) #4
  br label %65

39:                                               ; preds = %12
  %40 = bitcast %union.anon* %13 to %"class.WTF::Vector.1"*
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = icmp ult i32 %42, %1
  br i1 %43, label %44, label %65, !prof !4

44:                                               ; preds = %39
  %45 = bitcast %union.anon* %13 to i16**
  %46 = load i16*, i16** %45, align 8
  %47 = icmp eq i16* %46, null
  br i1 %47, label %48, label %64

48:                                               ; preds = %44
  %49 = icmp ugt i32 %1, 8
  br i1 %49, label %50, label %58

50:                                               ; preds = %48
  %51 = zext i32 %1 to i64
  %52 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %51) #4
  %53 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %52, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #4
  %54 = ptrtoint i8* %53 to i64
  %55 = bitcast %union.anon* %13 to i64*
  store atomic i64 %54, i64* %55 monotonic, align 8
  %56 = lshr i64 %52, 1
  %57 = trunc i64 %56 to i32
  br label %62

58:                                               ; preds = %48
  %59 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %60 = ptrtoint i8* %59 to i64
  %61 = bitcast %union.anon* %13 to i64*
  store atomic i64 %60, i64* %61 monotonic, align 8
  br label %62

62:                                               ; preds = %58, %50
  %63 = phi i32 [ 8, %58 ], [ %57, %50 ]
  store i32 %63, i32* %41, align 8
  br label %65

64:                                               ; preds = %44
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1"* %40, i32 %1) #4
  br label %65

65:                                               ; preds = %64, %62, %39, %38, %36, %14, %10, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store i32 16, i32* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  store i8 1, i8* %9, align 1
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %1, 16
  %13 = select i1 %12, i32 %1, i32 16
  %14 = add i32 %11, %13
  %15 = icmp ugt i32 %14, 16
  br i1 %15, label %16, label %23

16:                                               ; preds = %2
  %17 = zext i32 %14 to i64
  %18 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %17) #4
  %19 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %18, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #4
  %20 = ptrtoint i8* %19 to i64
  %21 = bitcast %"class.WTF::Vector"* %4 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = trunc i64 %18 to i32
  store i32 %22, i32* %7, align 8
  br label %23

23:                                               ; preds = %2, %16
  store i32 0, i32* %10, align 8
  %24 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #4
  %25 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %28, label %32

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %29, align 8
  %30 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %31 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %30, i64* %31, align 8
  br label %39

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 1
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %38 = bitcast i8** %37 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %38, align 8
  br label %39

39:                                               ; preds = %28, %32
  %40 = phi i32 [ %35, %32 ], [ 0, %28 ]
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %40, i32* %41, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #4
  %42 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  store i64 0, i64* %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #4
  br label %58

58:                                               ; preds = %57, %54, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = bitcast %"class.WTF::Vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #4
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 1, i64 0
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  store i8* %9, i8** %6, align 8
  store i32 16, i32* %7, align 8
  store i32 0, i32* %8, align 4
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %14 = load i8, i8* %13, align 1, !range !3
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %33, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %17, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIhS1_E11OffsetRangeES6_(%"class.WTF::VectorBuffer"* nonnull %18, %"class.WTF::VectorBuffer"* dereferenceable(32) %19, i64 0, i64 0) #4
  %20 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %24, label %23, !prof !2

23:                                               ; preds = %16
  store i32 0, i32* %20, align 4
  br label %24

24:                                               ; preds = %23, %16
  %25 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %17, i64 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %28 = icmp eq i8* %27, %26
  br i1 %28, label %30, label %29, !prof !4

29:                                               ; preds = %24
  call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %19, i8* %26) #4
  br label %30

30:                                               ; preds = %24, %29
  store i8* null, i8** %25, align 8
  %31 = load i32, i32* %7, align 8
  %32 = load i32, i32* %11, align 8
  br label %33

33:                                               ; preds = %2, %30
  %34 = phi i32 [ %12, %2 ], [ %32, %30 ]
  %35 = phi i32 [ 0, %2 ], [ %31, %30 ]
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %38 = getelementptr inbounds %union.anon, %union.anon* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8* %37, i8** %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store i32 8, i32* %39, align 8
  %40 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %40, align 4
  store i8 1, i8* %13, align 1
  %41 = icmp ugt i32 %1, 8
  %42 = select i1 %41, i32 %1, i32 8
  %43 = add i32 %34, %42
  %44 = icmp ult i32 %35, %43
  %45 = select i1 %44, i32 %43, i32 %35
  %46 = icmp ugt i32 %45, 8
  br i1 %46, label %47, label %55

47:                                               ; preds = %33
  %48 = zext i32 %45 to i64
  %49 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %48) #4
  %50 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %49, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #4
  %51 = ptrtoint i8* %50 to i64
  %52 = bitcast %union.anon* %36 to i64*
  store atomic i64 %51, i64* %52 monotonic, align 8
  %53 = lshr i64 %49, 1
  %54 = trunc i64 %53 to i32
  store i32 %54, i32* %39, align 8
  br label %55

55:                                               ; preds = %33, %47
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  store i8 0, i8* %56, align 4
  store i32 0, i32* %11, align 8
  %57 = load i32, i32* %8, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %55
  %60 = load i8*, i8** %6, align 8
  call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %60, i32 %12)
  br label %96

61:                                               ; preds = %55
  %62 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #4
  %63 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %66, label %70

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %67, align 8
  %68 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %69 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %68, i64* %69, align 8
  br label %77

70:                                               ; preds = %61
  %71 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %71, align 8
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 1
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %76 = bitcast i8** %75 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %76, align 8
  br label %77

77:                                               ; preds = %66, %70
  %78 = phi i32 [ %73, %70 ], [ 0, %66 ]
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %78, i32* %79, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #4
  %80 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  store i64 0, i64* %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #4
  br label %96

96:                                               ; preds = %77, %92, %95, %59
  %97 = load i32, i32* %8, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %100, label %99, !prof !2

99:                                               ; preds = %96
  store i32 0, i32* %8, align 4
  br label %100

100:                                              ; preds = %99, %96
  %101 = load i8*, i8** %6, align 8
  %102 = icmp eq i8* %9, %101
  br i1 %102, label %105, label %103, !prof !4

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* nonnull %104, i8* %101) #4
  br label %105

105:                                              ; preds = %100, %103
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF13StringBuilder20Reserve16BitCapacityEj(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 4, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %8 = load i8, i8* %7, align 1, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %6, %2
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 %1)
  br label %38

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %13 = bitcast %union.anon* %12 to %"class.WTF::Vector.1"*
  %14 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %15, %1
  br i1 %16, label %17, label %38, !prof !4

17:                                               ; preds = %11
  %18 = bitcast %union.anon* %12 to i16**
  %19 = load i16*, i16** %18, align 8
  %20 = icmp eq i16* %19, null
  br i1 %20, label %21, label %37

21:                                               ; preds = %17
  %22 = icmp ugt i32 %1, 8
  br i1 %22, label %23, label %31

23:                                               ; preds = %21
  %24 = zext i32 %1 to i64
  %25 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %24) #4
  %26 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %25, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #4
  %27 = ptrtoint i8* %26 to i64
  %28 = bitcast %union.anon* %12 to i64*
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = lshr i64 %25, 1
  %30 = trunc i64 %29 to i32
  br label %35

31:                                               ; preds = %21
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %33 = ptrtoint i8* %32 to i64
  %34 = bitcast %union.anon* %12 to i64*
  store atomic i64 %33, i64* %34 monotonic, align 8
  br label %35

35:                                               ; preds = %31, %23
  %36 = phi i32 [ 8, %31 ], [ %30, %23 ]
  store i32 %36, i32* %14, align 8
  br label %38

37:                                               ; preds = %17
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1"* %13, i32 %1) #4
  br label %38

38:                                               ; preds = %37, %35, %11, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF13StringBuilder6ResizeEj(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0
  %4 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %3, i32 0, i32 %1) #4
  %5 = ptrtoint %"class.WTF::StringImpl"* %4 to i64
  %6 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %7 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %5, i64* %6, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #4
  br label %23

23:                                               ; preds = %22, %19, %2
  %24 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  store i32 %1, i32* %24, align 8
  %25 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %26 = load i8, i8* %25, align 1, !range !3
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %80, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %30 = load i8, i8* %29, align 4, !range !3
  %31 = icmp eq i8 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  br i1 %31, label %55, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %union.anon, %union.anon* %32, i64 0, i32 0
  %35 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = icmp ult i32 %36, %1
  br i1 %37, label %38, label %78

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = icmp ult i32 %40, %1
  br i1 %41, label %42, label %44

42:                                               ; preds = %38
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %34, i32 %1) #4
  %43 = load i32, i32* %35, align 4
  br label %44

44:                                               ; preds = %42, %38
  %45 = phi i32 [ %43, %42 ], [ %36, %38 ]
  %46 = getelementptr inbounds %union.anon, %union.anon* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = zext i32 %45 to i64
  %49 = getelementptr inbounds i8, i8* %47, i64 %48
  %50 = zext i32 %1 to i64
  %51 = getelementptr inbounds i8, i8* %47, i64 %50
  %52 = ptrtoint i8* %51 to i64
  %53 = ptrtoint i8* %49 to i64
  %54 = sub i64 %52, %53
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %49, i8 0, i64 %54, i1 false) #4
  br label %78

55:                                               ; preds = %28
  %56 = bitcast %union.anon* %32 to %"class.WTF::Vector.1"*
  %57 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = icmp ult i32 %58, %1
  br i1 %59, label %60, label %78

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = icmp ult i32 %62, %1
  br i1 %63, label %64, label %66

64:                                               ; preds = %60
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1"* %56, i32 %1) #4
  %65 = load i32, i32* %57, align 4
  br label %66

66:                                               ; preds = %64, %60
  %67 = phi i32 [ %65, %64 ], [ %58, %60 ]
  %68 = bitcast %union.anon* %32 to i16**
  %69 = load i16*, i16** %68, align 8
  %70 = zext i32 %67 to i64
  %71 = getelementptr inbounds i16, i16* %69, i64 %70
  %72 = zext i32 %1 to i64
  %73 = getelementptr inbounds i16, i16* %69, i64 %72
  %74 = bitcast i16* %71 to i8*
  %75 = ptrtoint i16* %73 to i64
  %76 = ptrtoint i16* %71 to i64
  %77 = sub i64 %75, %76
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %74, i8 0, i64 %77, i1 false) #4
  br label %78

78:                                               ; preds = %66, %55, %44, %33
  %79 = phi i32* [ %35, %33 ], [ %35, %44 ], [ %57, %55 ], [ %57, %66 ]
  store i32 %1, i32* %79, align 4
  br label %80

80:                                               ; preds = %78, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %98, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !3
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #4
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #4
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #4
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %98

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4)
  br label %98

80:                                               ; preds = %74
  %81 = icmp eq i32 %4, 1
  br i1 %81, label %82, label %84

82:                                               ; preds = %80
  %83 = load i16, i16* %14, align 2
  tail call void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"* %0, i16 zeroext %83) #4
  br label %98

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %86 = load i8, i8* %85, align 4, !range !3
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %92

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %90 = load i8, i8* %89, align 1, !range !3
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %88, %84
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 %4) #4
  br label %93

93:                                               ; preds = %88, %92
  %94 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %95 = bitcast %union.anon* %94 to %"class.WTF::Vector.1"*
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE6AppendIDsEEvPKT_j(%"class.WTF::Vector.1"* %95, i16* %14, i32 %4) #4
  %96 = load i32, i32* %22, align 8
  %97 = add i32 %96, %4
  store i32 %97, i32* %22, align 8
  br label %98

98:                                               ; preds = %93, %82, %67, %79, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %25, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %7 = load i8, i8* %6, align 4, !range !3
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %10 = load i8, i8* %9, align 1, !range !3
  %11 = icmp ne i8 %10, 0
  br i1 %8, label %16, label %12

12:                                               ; preds = %5
  br i1 %11, label %14, label %13

13:                                               ; preds = %12
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 %2) #4
  br label %14

14:                                               ; preds = %12, %13
  %15 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector"* %15, i8* %1, i32 %2)
  br label %21

16:                                               ; preds = %5
  br i1 %11, label %18, label %17

17:                                               ; preds = %16
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 %2) #4
  br label %18

18:                                               ; preds = %16, %17
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %20 = bitcast %union.anon* %19 to %"class.WTF::Vector.1"*
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector.1"* %20, i8* %1, i32 %2)
  br label %21

21:                                               ; preds = %14, %18
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = add i32 %23, %2
  store i32 %24, i32* %22, align 8
  br label %25

25:                                               ; preds = %21, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = alloca i16, align 2
  switch i32 %2, label %67 [
    i32 0, label %82
    i32 1, label %6
  ]

6:                                                ; preds = %3
  %7 = load i16, i16* %1, align 2
  %8 = bitcast i16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %8)
  store i16 %7, i16* %5, align 2
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %10 = load i8, i8* %9, align 4, !range !3
  %11 = icmp ne i8 %10, 0
  %12 = icmp ult i16 %7, 256
  %13 = and i1 %12, %11
  br i1 %13, label %14, label %39

14:                                               ; preds = %6
  %15 = trunc i16 %7 to i8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4)
  store i8 %15, i8* %4, align 1
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %17 = load i8, i8* %16, align 1, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #4
  br label %20

20:                                               ; preds = %14, %19
  %21 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %34, label %27, !prof !2

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %21, i64 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = zext i32 %23 to i64
  %31 = getelementptr inbounds i8, i8* %29, i64 %30
  store i8 %15, i8* %31, align 1
  %32 = load i32, i32* %22, align 4
  %33 = add i32 %32, 1
  store i32 %33, i32* %22, align 4
  br label %35

34:                                               ; preds = %20
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector"* %21, i8* nonnull dereferenceable(1) %4) #4
  br label %35

35:                                               ; preds = %27, %34
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = add i32 %37, 1
  store i32 %38, i32* %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4)
  br label %66

39:                                               ; preds = %6
  %40 = icmp eq i8 %10, 0
  br i1 %40, label %41, label %45

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %43 = load i8, i8* %42, align 1, !range !3
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %41, %39
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #4
  br label %46

46:                                               ; preds = %41, %45
  %47 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = icmp eq i32 %49, %51
  br i1 %52, label %60, label %53, !prof !2

53:                                               ; preds = %46
  %54 = bitcast %union.anon* %47 to i16**
  %55 = load i16*, i16** %54, align 8
  %56 = zext i32 %49 to i64
  %57 = getelementptr inbounds i16, i16* %55, i64 %56
  store i16 %7, i16* %57, align 2
  %58 = load i32, i32* %48, align 4
  %59 = add i32 %58, 1
  store i32 %59, i32* %48, align 4
  br label %62

60:                                               ; preds = %46
  %61 = bitcast %union.anon* %47 to %"class.WTF::Vector.1"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1"* %61, i16* nonnull dereferenceable(2) %5) #4
  br label %62

62:                                               ; preds = %60, %53
  %63 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %64 = load i32, i32* %63, align 8
  %65 = add i32 %64, 1
  store i32 %65, i32* %63, align 8
  br label %66

66:                                               ; preds = %35, %62
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %8)
  br label %82

67:                                               ; preds = %3
  %68 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %69 = load i8, i8* %68, align 4, !range !3
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %73 = load i8, i8* %72, align 1, !range !3
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %71, %67
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 %2) #4
  br label %76

76:                                               ; preds = %71, %75
  %77 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %78 = bitcast %union.anon* %77 to %"class.WTF::Vector.1"*
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE6AppendIDsEEvPKT_j(%"class.WTF::Vector.1"* %78, i16* %1, i32 %2)
  %79 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %80 = load i32, i32* %79, align 8
  %81 = add i32 %80, %2
  store i32 %81, i32* %79, align 8
  br label %82

82:                                               ; preds = %3, %76, %66
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"*, i16 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i16, align 2
  store i16 %1, i16* %4, align 2
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !3
  %7 = icmp ne i8 %6, 0
  %8 = icmp ult i16 %1, 256
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %35

10:                                               ; preds = %2
  %11 = trunc i16 %1 to i8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3)
  store i8 %11, i8* %3, align 1
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %13 = load i8, i8* %12, align 1, !range !3
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %10
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #4
  br label %16

16:                                               ; preds = %10, %15
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %30, label %23, !prof !2

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %17, i64 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = zext i32 %19 to i64
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  store i8 %11, i8* %27, align 1
  %28 = load i32, i32* %18, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %18, align 4
  br label %31

30:                                               ; preds = %16
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector"* %17, i8* nonnull dereferenceable(1) %3) #4
  br label %31

31:                                               ; preds = %23, %30
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3)
  br label %62

35:                                               ; preds = %2
  %36 = icmp eq i8 %6, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %39 = load i8, i8* %38, align 1, !range !3
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %37, %35
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #4
  br label %42

42:                                               ; preds = %37, %41
  %43 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %56, label %49, !prof !2

49:                                               ; preds = %42
  %50 = bitcast %union.anon* %43 to i16**
  %51 = load i16*, i16** %50, align 8
  %52 = zext i32 %45 to i64
  %53 = getelementptr inbounds i16, i16* %51, i64 %52
  store i16 %1, i16* %53, align 2
  %54 = load i32, i32* %44, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %44, align 4
  br label %58

56:                                               ; preds = %42
  %57 = bitcast %union.anon* %43 to %"class.WTF::Vector.1"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1"* %57, i16* nonnull dereferenceable(2) %4) #4
  br label %58

58:                                               ; preds = %49, %56
  %59 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %60 = load i32, i32* %59, align 8
  %61 = add i32 %60, 1
  store i32 %61, i32* %59, align 8
  br label %62

62:                                               ; preds = %58, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE6AppendIDsEEvPKT_j(%"class.WTF::Vector.1"*, i16*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %29

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = icmp ugt i16* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds i16, i16* %15, i64 %18
  %20 = icmp ugt i16* %19, %1
  br i1 %20, label %22, label %21

21:                                               ; preds = %17, %13
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1"* %0, i32 %9) #4
  br label %29

22:                                               ; preds = %17
  %23 = ptrtoint i16* %1 to i64
  %24 = ptrtoint i16* %15 to i64
  %25 = sub i64 %23, %24
  %26 = ashr exact i64 %25, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1"* %0, i32 %9) #4
  %27 = load i16*, i16** %14, align 8
  %28 = getelementptr inbounds i16, i16* %27, i64 %26
  br label %29

29:                                               ; preds = %22, %21, %3
  %30 = phi i16* [ %1, %3 ], [ %1, %21 ], [ %28, %22 ]
  %31 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #4
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %32, align 8
  %33 = load i32, i32* %7, align 4
  %34 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = icmp ult i32 %9, %33
  br i1 %35, label %37, label %36

36:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %32, align 8
  br label %46

37:                                               ; preds = %29
  %38 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #4
  %39 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %33) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* %38, i8* %39) #4
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %41, i8** %32, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #4
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #4
  br label %46

46:                                               ; preds = %36, %37, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #4
  %47 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %48 = load i16*, i16** %47, align 8
  %49 = load i32, i32* %7, align 4
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds i16, i16* %48, i64 %50
  %52 = icmp ne i16* %51, null
  %53 = icmp ne i16* %30, null
  %54 = and i1 %53, %52
  br i1 %54, label %55, label %60, !prof !4

55:                                               ; preds = %46
  %56 = zext i32 %2 to i64
  %57 = bitcast i16* %51 to i8*
  %58 = bitcast i16* %30 to i8*
  %59 = shl nuw nsw i64 %56, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %57, i8* nonnull align 2 %58, i64 %59, i1 false) #4
  br label %60

60:                                               ; preds = %46, %55
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %28

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp ugt i8* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds i8, i8* %15, i64 %18
  %20 = icmp ugt i8* %19, %1
  br i1 %20, label %22, label %21

21:                                               ; preds = %17, %13
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %9) #4
  br label %28

22:                                               ; preds = %17
  %23 = ptrtoint i8* %1 to i64
  %24 = ptrtoint i8* %15 to i64
  %25 = sub i64 %23, %24
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %9) #4
  %26 = load i8*, i8** %14, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 %25
  br label %28

28:                                               ; preds = %22, %21, %3
  %29 = phi i8* [ %1, %3 ], [ %1, %21 ], [ %27, %22 ]
  %30 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #4
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = load i32, i32* %7, align 4
  %33 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33)
  %34 = icmp ult i32 %9, %32
  br i1 %34, label %36, label %35

35:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33)
  store i8* null, i8** %31, align 8
  br label %45

36:                                               ; preds = %28
  %37 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #4
  %38 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %32) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* %37, i8* %38) #4
  %39 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33)
  store i8* %40, i8** %31, align 8
  %41 = icmp eq i8* %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %36
  %43 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #4
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #4
  br label %45

45:                                               ; preds = %35, %36, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #4
  %46 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = load i32, i32* %7, align 4
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %47, i64 %49
  %51 = icmp ne i8* %50, null
  %52 = icmp ne i8* %29, null
  %53 = and i1 %52, %51
  br i1 %53, label %54, label %56, !prof !4

54:                                               ; preds = %45
  %55 = zext i32 %2 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %50, i8* nonnull align 1 %29, i64 %55, i1 false) #4
  br label %56

56:                                               ; preds = %45, %54
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector.1"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1"* %0, i32 %9) #4
  %14 = load i32, i32* %7, align 4
  br label %15

15:                                               ; preds = %13, %3
  %16 = phi i32 [ %14, %13 ], [ %8, %3 ]
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #4
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ult i32 %9, %16
  br i1 %20, label %22, label %21

21:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %15
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #4
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* %23, i8* %24) #4
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #4
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #4
  br label %31

31:                                               ; preds = %21, %22, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #4
  %32 = zext i32 %2 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  %34 = icmp eq i32 %2, 0
  br i1 %34, label %121, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %37 = load i16*, i16** %36, align 8
  %38 = load i32, i32* %7, align 4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %37, i64 %39
  %41 = icmp ult i32 %2, 16
  br i1 %41, label %110, label %42

42:                                               ; preds = %35
  %43 = bitcast i16* %40 to i8*
  %44 = add nuw nsw i64 %39, %32
  %45 = getelementptr i16, i16* %37, i64 %44
  %46 = bitcast i16* %45 to i8*
  %47 = icmp ugt i8* %33, %43
  %48 = icmp ugt i8* %46, %1
  %49 = and i1 %47, %48
  br i1 %49, label %110, label %50

50:                                               ; preds = %42
  %51 = and i64 %32, 4294967280
  %52 = getelementptr i16, i16* %40, i64 %51
  %53 = getelementptr i8, i8* %1, i64 %51
  %54 = add nsw i64 %51, -16
  %55 = lshr exact i64 %54, 4
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 1
  %58 = icmp eq i64 %54, 0
  br i1 %58, label %92, label %59

59:                                               ; preds = %50
  %60 = sub nuw nsw i64 %56, %57
  br label %61

61:                                               ; preds = %61, %59
  %62 = phi i64 [ 0, %59 ], [ %89, %61 ]
  %63 = phi i64 [ %60, %59 ], [ %90, %61 ]
  %64 = getelementptr i16, i16* %40, i64 %62
  %65 = getelementptr i8, i8* %1, i64 %62
  %66 = bitcast i8* %65 to <8 x i8>*
  %67 = load <8 x i8>, <8 x i8>* %66, align 1, !alias.scope !5
  %68 = getelementptr i8, i8* %65, i64 8
  %69 = bitcast i8* %68 to <8 x i8>*
  %70 = load <8 x i8>, <8 x i8>* %69, align 1, !alias.scope !5
  %71 = zext <8 x i8> %67 to <8 x i16>
  %72 = zext <8 x i8> %70 to <8 x i16>
  %73 = bitcast i16* %64 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %73, align 2, !alias.scope !8, !noalias !5
  %74 = getelementptr i16, i16* %64, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %75, align 2, !alias.scope !8, !noalias !5
  %76 = or i64 %62, 16
  %77 = getelementptr i16, i16* %40, i64 %76
  %78 = getelementptr i8, i8* %1, i64 %76
  %79 = bitcast i8* %78 to <8 x i8>*
  %80 = load <8 x i8>, <8 x i8>* %79, align 1, !alias.scope !5
  %81 = getelementptr i8, i8* %78, i64 8
  %82 = bitcast i8* %81 to <8 x i8>*
  %83 = load <8 x i8>, <8 x i8>* %82, align 1, !alias.scope !5
  %84 = zext <8 x i8> %80 to <8 x i16>
  %85 = zext <8 x i8> %83 to <8 x i16>
  %86 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %86, align 2, !alias.scope !8, !noalias !5
  %87 = getelementptr i16, i16* %77, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !8, !noalias !5
  %89 = add i64 %62, 32
  %90 = add i64 %63, -2
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %61, !llvm.loop !10

92:                                               ; preds = %61, %50
  %93 = phi i64 [ 0, %50 ], [ %89, %61 ]
  %94 = icmp eq i64 %57, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %92
  %96 = getelementptr i16, i16* %40, i64 %93
  %97 = getelementptr i8, i8* %1, i64 %93
  %98 = bitcast i8* %97 to <8 x i8>*
  %99 = load <8 x i8>, <8 x i8>* %98, align 1, !alias.scope !5
  %100 = getelementptr i8, i8* %97, i64 8
  %101 = bitcast i8* %100 to <8 x i8>*
  %102 = load <8 x i8>, <8 x i8>* %101, align 1, !alias.scope !5
  %103 = zext <8 x i8> %99 to <8 x i16>
  %104 = zext <8 x i8> %102 to <8 x i16>
  %105 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %105, align 2, !alias.scope !8, !noalias !5
  %106 = getelementptr i16, i16* %96, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !8, !noalias !5
  br label %108

108:                                              ; preds = %92, %95
  %109 = icmp eq i64 %51, %32
  br i1 %109, label %121, label %110

110:                                              ; preds = %108, %42, %35
  %111 = phi i16* [ %40, %42 ], [ %40, %35 ], [ %52, %108 ]
  %112 = phi i8* [ %1, %42 ], [ %1, %35 ], [ %53, %108 ]
  br label %113

113:                                              ; preds = %110, %113
  %114 = phi i16* [ %118, %113 ], [ %111, %110 ]
  %115 = phi i8* [ %119, %113 ], [ %112, %110 ]
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i16
  store i16 %117, i16* %114, align 2
  %118 = getelementptr inbounds i16, i16* %114, i64 1
  %119 = getelementptr inbounds i8, i8* %115, i64 1
  %120 = icmp eq i8* %119, %33
  br i1 %120, label %121, label %113, !llvm.loop !12

121:                                              ; preds = %113, %108, %31
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF13StringBuilder12AppendNumberEb(%"class.WTF::StringBuilder"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i8
  tail call void @_ZN3WTF13StringBuilder12AppendNumberIhEEvT_(%"class.WTF::StringBuilder"* %0, i8 zeroext %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder12AppendNumberIhEEvT_(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %4 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #4
  %5 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 2
  %6 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 2
  %7 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 3
  %8 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 24, i1 false)
  store i8* %5, i8** %6, align 8
  %9 = urem i8 %1, 10
  %10 = udiv i8 %1, 10
  %11 = or i8 %9, 48
  store i8 %11, i8* %5, align 2
  %12 = icmp ugt i8 %1, 9
  br i1 %12, label %13, label %18

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 1
  store i8* %14, i8** %6, align 8
  %15 = urem i8 %10, 10
  %16 = or i8 %15, 48
  store i8 %16, i8* %14, align 1
  %17 = icmp ugt i8 %1, 99
  br i1 %17, label %20, label %25

18:                                               ; preds = %2
  %19 = ptrtoint i8* %5 to i64
  br label %28

20:                                               ; preds = %13
  %21 = load i8*, i8** %6, align 8
  %22 = udiv i8 %1, 100
  %23 = getelementptr inbounds i8, i8* %21, i64 -1
  store i8* %23, i8** %6, align 8
  %24 = or i8 %22, 48
  store i8 %24, i8* %23, align 1
  br label %25

25:                                               ; preds = %20, %13
  %26 = bitcast i8** %6 to i64*
  %27 = load i64, i64* %26, align 8
  br label %28

28:                                               ; preds = %18, %25
  %29 = phi i64 [ %27, %25 ], [ %19, %18 ]
  %30 = ptrtoint i8* %8 to i64
  %31 = sub i64 %30, %29
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %7, align 8
  %33 = inttoptr i64 %29 to i8*
  %34 = icmp eq i32 %32, 0
  br i1 %34, label %55, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %37 = load i8, i8* %36, align 4, !range !3
  %38 = icmp eq i8 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %40 = load i8, i8* %39, align 1, !range !3
  %41 = icmp ne i8 %40, 0
  br i1 %38, label %46, label %42

42:                                               ; preds = %35
  br i1 %41, label %44, label %43

43:                                               ; preds = %42
  call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 %32) #4
  br label %44

44:                                               ; preds = %43, %42
  %45 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector"* %45, i8* %33, i32 %32) #4
  br label %51

46:                                               ; preds = %35
  br i1 %41, label %48, label %47

47:                                               ; preds = %46
  call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 %32) #4
  br label %48

48:                                               ; preds = %47, %46
  %49 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %50 = bitcast %union.anon* %49 to %"class.WTF::Vector.1"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector.1"* %50, i8* %33, i32 %32) #4
  br label %51

51:                                               ; preds = %48, %44
  %52 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %53 = load i32, i32* %52, align 8
  %54 = add i32 %53, %32
  store i32 %54, i32* %52, align 8
  br label %55

55:                                               ; preds = %51, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF13StringBuilder12AppendNumberEf(%"class.WTF::StringBuilder"*, float) local_unnamed_addr #0 align 2 {
  %3 = alloca [96 x i8], align 16
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = fpext float %1 to double
  %6 = getelementptr inbounds [96 x i8], [96 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %6) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 96, i1 false) #4
  %7 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #4
  %8 = call i8* @_ZN3WTF28NumberToFixedPrecisionStringEdjPc(double %5, i32 6, i8* nonnull %6) #4
  %9 = icmp eq i8* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %2
  %11 = call i64 @strlen(i8* nonnull %8) #11
  %12 = icmp ult i64 %11, 4294967296
  br i1 %12, label %14, label %13, !prof !4

13:                                               ; preds = %10
  call void @llvm.trap() #4
  unreachable

14:                                               ; preds = %10
  %15 = trunc i64 %11 to i32
  br label %16

16:                                               ; preds = %2, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %2 ]
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %19 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* %8, i8** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %17, i32* %21, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #4
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %6) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF13StringBuilder12AppendNumberEdj(%"class.WTF::StringBuilder"*, double, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca [96 x i8], align 16
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds [96 x i8], [96 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %6) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 96, i1 false)
  %7 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #4
  %8 = call i8* @_ZN3WTF28NumberToFixedPrecisionStringEdjPc(double %1, i32 %2, i8* nonnull %6) #4
  %9 = icmp eq i8* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %3
  %11 = call i64 @strlen(i8* nonnull %8) #11
  %12 = icmp ult i64 %11, 4294967296
  br i1 %12, label %14, label %13, !prof !4

13:                                               ; preds = %10
  call void @llvm.trap() #4
  unreachable

14:                                               ; preds = %10
  %15 = trunc i64 %11 to i32
  br label %16

16:                                               ; preds = %3, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %3 ]
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %19 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* %8, i8** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %17, i32* %21, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #4
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %6) #4
  ret void
}

declare i8* @_ZN3WTF28NumberToFixedPrecisionStringEdjPc(double, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF13StringBuilder12AppendFormatEPKcz(%"class.WTF::StringBuilder"*, i8*, ...) local_unnamed_addr #0 align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = alloca %"class.WTF::Vector.12", align 8
  %5 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #4
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %7 = bitcast %"class.WTF::Vector.12"* %4 to i8*
  %8 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %7) #4
  %9 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %4, i64 0, i32 0, i32 1, i64 0
  %10 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %4, i64 0, i32 0, i32 0, i32 0
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %4, i64 0, i32 0, i32 0, i32 1
  store i32 256, i32* %11, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %4, i64 0, i32 0, i32 0, i32 2
  store i32 256, i32* %12, align 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 256, i1 false) #4
  call void @llvm.va_start(i8* nonnull %5)
  %13 = load i8*, i8** %10, align 8
  %14 = call i64 @llvm.objectsize.i64.p0i8(i8* %13, i1 false, i1 true, i1 false) #4
  %15 = call i32 @__vsnprintf_chk(i8* %13, i64 256, i32 1, i64 %14, i8* %1, %struct.__va_list_tag* nonnull %6) #4
  call void @llvm.va_end(i8* nonnull %5)
  %16 = icmp sgt i32 %15, 255
  br i1 %16, label %17, label %37

17:                                               ; preds = %2
  %18 = add nuw nsw i32 %15, 1
  %19 = load i32, i32* %11, align 8
  %20 = icmp ugt i32 %19, %15
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  call void @_ZN3WTF6VectorIcLj256ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.12"* nonnull %4, i32 %18) #4
  br label %22

22:                                               ; preds = %17, %21
  %23 = load i8*, i8** %10, align 8
  %24 = load i32, i32* %12, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %23, i64 %25
  %27 = zext i32 %18 to i64
  %28 = getelementptr inbounds i8, i8* %23, i64 %27
  %29 = ptrtoint i8* %28 to i64
  %30 = ptrtoint i8* %26 to i64
  %31 = sub i64 %29, %30
  call void @llvm.memset.p0i8.i64(i8* align 1 %26, i8 0, i64 %31, i1 false) #4
  store i32 %18, i32* %12, align 4
  call void @llvm.va_start(i8* nonnull %5)
  %32 = load i8*, i8** %10, align 8
  %33 = load i32, i32* %12, align 4
  %34 = zext i32 %33 to i64
  %35 = call i64 @llvm.objectsize.i64.p0i8(i8* %32, i1 false, i1 true, i1 false) #4
  %36 = call i32 @__vsnprintf_chk(i8* %32, i64 %34, i32 1, i64 %35, i8* %1, %struct.__va_list_tag* nonnull %6) #4
  call void @llvm.va_end(i8* nonnull %5)
  br label %37

37:                                               ; preds = %22, %2
  %38 = phi i32 [ %36, %22 ], [ %15, %2 ]
  %39 = load i8*, i8** %10, align 8
  %40 = icmp eq i32 %38, 0
  br i1 %40, label %61, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %43 = load i8, i8* %42, align 4, !range !3
  %44 = icmp eq i8 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %46 = load i8, i8* %45, align 1, !range !3
  %47 = icmp ne i8 %46, 0
  br i1 %44, label %52, label %48

48:                                               ; preds = %41
  br i1 %47, label %50, label %49

49:                                               ; preds = %48
  call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 %38) #4
  br label %50

50:                                               ; preds = %49, %48
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector"* %51, i8* %39, i32 %38) #4
  br label %57

52:                                               ; preds = %41
  br i1 %47, label %54, label %53

53:                                               ; preds = %52
  call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 %38) #4
  br label %54

54:                                               ; preds = %53, %52
  %55 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %56 = bitcast %union.anon* %55 to %"class.WTF::Vector.1"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector.1"* %56, i8* %39, i32 %38) #4
  br label %57

57:                                               ; preds = %54, %50
  %58 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %59 = load i32, i32* %58, align 8
  %60 = add i32 %59, %38
  store i32 %60, i32* %58, align 8
  br label %61

61:                                               ; preds = %57, %37
  %62 = load i32, i32* %12, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %65, label %64, !prof !2

64:                                               ; preds = %61
  store i32 0, i32* %12, align 4
  br label %65

65:                                               ; preds = %64, %61
  %66 = load i8*, i8** %10, align 8
  %67 = icmp eq i8* %9, %66
  br i1 %67, label %70, label %68, !prof !4

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %4, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIcLj256ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPc(%"class.WTF::VectorBuffer.13"* nonnull %69, i8* %66) #4
  br label %70

70:                                               ; preds = %65, %68
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %7) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #4
  ret void
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #4

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF13StringBuilder5eraseEj(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp ugt i32 %10, %1
  br i1 %11, label %12, label %94

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %14 = load i8, i8* %13, align 4, !range !3
  %15 = icmp eq i8 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %17 = load i8, i8* %16, align 1, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %15, label %52, label %19

19:                                               ; preds = %12
  br i1 %18, label %20, label %21

20:                                               ; preds = %19
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 0) #4
  br label %21

21:                                               ; preds = %19, %20
  %22 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #4
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #4
  %27 = icmp ugt i32 %25, %1
  br i1 %27, label %28, label %29

28:                                               ; preds = %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #4
  store i8* null, i8** %23, align 8
  br label %38

29:                                               ; preds = %21
  %30 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #4
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %25) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i8* %30, i8* %31) #4
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #4
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %7) #4
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #4
  br label %38

38:                                               ; preds = %35, %29, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #4
  %39 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = zext i32 %1 to i64
  %42 = getelementptr inbounds i8, i8* %40, i64 %41
  %43 = getelementptr inbounds i8, i8* %42, i64 1
  %44 = icmp eq i8* %42, null
  br i1 %44, label %88, label %45, !prof !2

45:                                               ; preds = %38
  %46 = load i32, i32* %24, align 4
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %40, i64 %47
  %49 = ptrtoint i8* %48 to i64
  %50 = ptrtoint i8* %43 to i64
  %51 = sub i64 %49, %50
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 1 %42, i8* nonnull align 1 %43, i64 %51, i1 false) #4
  br label %88

52:                                               ; preds = %12
  br i1 %18, label %53, label %54

53:                                               ; preds = %52
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 0) #4
  br label %54

54:                                               ; preds = %52, %53
  %55 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %56 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #4
  %57 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %57, align 8
  %58 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #4
  %61 = icmp ugt i32 %59, %1
  br i1 %61, label %62, label %63

62:                                               ; preds = %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #4
  store i8* null, i8** %57, align 8
  br label %72

63:                                               ; preds = %54
  %64 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #4
  %65 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %59) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i8* %64, i8* %65) #4
  %66 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %67 = load i8*, i8** %66, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #4
  store i8* %67, i8** %57, align 8
  %68 = icmp eq i8* %67, null
  br i1 %68, label %72, label %69

69:                                               ; preds = %63
  %70 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #4
  %71 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #4
  br label %72

72:                                               ; preds = %69, %63, %62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #4
  %73 = bitcast %union.anon* %55 to i16**
  %74 = load i16*, i16** %73, align 8
  %75 = zext i32 %1 to i64
  %76 = getelementptr inbounds i16, i16* %74, i64 %75
  %77 = getelementptr inbounds i16, i16* %76, i64 1
  %78 = icmp eq i16* %76, null
  br i1 %78, label %88, label %79, !prof !2

79:                                               ; preds = %72
  %80 = load i32, i32* %58, align 4
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds i16, i16* %74, i64 %81
  %83 = bitcast i16* %76 to i8*
  %84 = bitcast i16* %77 to i8*
  %85 = ptrtoint i16* %82 to i64
  %86 = ptrtoint i16* %77 to i64
  %87 = sub i64 %85, %86
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 2 %83, i8* nonnull align 2 %84, i64 %87, i1 false) #4
  br label %88

88:                                               ; preds = %79, %72, %45, %38
  %89 = phi i32* [ %24, %38 ], [ %24, %45 ], [ %58, %72 ], [ %58, %79 ]
  %90 = load i32, i32* %89, align 4
  %91 = add i32 %90, -1
  store i32 %91, i32* %89, align 4
  %92 = load i32, i32* %9, align 8
  %93 = add i32 %92, -1
  store i32 %93, i32* %9, align 8
  br label %94

94:                                               ; preds = %2, %88
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"*, i8*) local_unnamed_addr #7 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #4
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2"*, i16*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector"*, i8* dereferenceable(1)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #4
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #4
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #4
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i8* %15, i8* %16) #4
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #4
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #4
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #4
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #4
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %27) #4
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1"*, i16* dereferenceable(2)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1"* %0, i32 %5) #4
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1"* %0, i32 %5) #4
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #4
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i8* %15, i8* %16) #4
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #4
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #4
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #4
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #4
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1"* %0, i32 %27) #4
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

; Function Attrs: nofree
declare i32 @__vsnprintf_chk(i8*, i64, i32, i64, i8*, %struct.__va_list_tag*) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1 immarg, i1 immarg, i1 immarg) #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIcLj256ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPc(%"class.WTF::VectorBuffer.13"*, i8*) local_unnamed_addr #7 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIDsS1_E11OffsetRangeES6_(%"class.WTF::VectorBuffer.2"*, %"class.WTF::VectorBuffer.2"* dereferenceable(32), i64, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = trunc i64 %3 to i32
  %6 = lshr i64 %3, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.WTF::VectorBuffer.2", %"class.WTF::VectorBuffer.2"* %0, i64 0, i32 0, i32 0
  %9 = load i16*, i16** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::VectorBuffer.2", %"class.WTF::VectorBuffer.2"* %0, i64 0, i32 1, i64 0
  %11 = bitcast i8* %10 to i16*
  %12 = icmp eq i16* %9, %11
  %13 = ptrtoint i16* %9 to i64
  br i1 %12, label %32, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.WTF::VectorBuffer.2", %"class.WTF::VectorBuffer.2"* %1, i64 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBuffer.2", %"class.WTF::VectorBuffer.2"* %1, i64 0, i32 1, i64 0
  %18 = bitcast i8* %17 to i16*
  %19 = icmp eq i16* %16, %18
  br i1 %19, label %42, label %20

20:                                               ; preds = %14
  %21 = ptrtoint i16* %16 to i64
  %22 = bitcast %"class.WTF::VectorBuffer.2"* %1 to i64*
  %23 = bitcast %"class.WTF::VectorBuffer.2"* %0 to i64*
  store atomic i64 %13, i64* %22 monotonic, align 8
  store atomic i64 %21, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::VectorBuffer.2", %"class.WTF::VectorBuffer.2"* %0, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::VectorBuffer.2", %"class.WTF::VectorBuffer.2"* %1, i64 0, i32 0, i32 1
  %26 = load i32, i32* %24, align 4
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %24, align 4
  store i32 %26, i32* %25, align 4
  %28 = getelementptr inbounds %"class.WTF::VectorBuffer.2", %"class.WTF::VectorBuffer.2"* %0, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.WTF::VectorBuffer.2", %"class.WTF::VectorBuffer.2"* %1, i64 0, i32 0, i32 2
  %30 = load i32, i32* %28, align 4
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %28, align 4
  store i32 %30, i32* %29, align 4
  br label %274

32:                                               ; preds = %4
  %33 = lshr i64 %2, 32
  %34 = trunc i64 %33 to i32
  %35 = trunc i64 %2 to i32
  %36 = getelementptr inbounds %"class.WTF::VectorBuffer.2", %"class.WTF::VectorBuffer.2"* %0, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.WTF::VectorBuffer.2", %"class.WTF::VectorBuffer.2"* %1, i64 0, i32 1, i64 0
  %39 = bitcast i8* %38 to i16*
  %40 = getelementptr inbounds %"class.WTF::VectorBuffer.2", %"class.WTF::VectorBuffer.2"* %1, i64 0, i32 0, i32 0
  %41 = load i16*, i16** %40, align 8
  br label %42

42:                                               ; preds = %14, %32
  %43 = phi i16* [ %18, %14 ], [ %39, %32 ]
  %44 = phi i16* [ %16, %14 ], [ %41, %32 ]
  %45 = phi i32 [ 0, %14 ], [ %34, %32 ]
  %46 = phi i32 [ 0, %14 ], [ %35, %32 ]
  %47 = phi i32 [ 0, %14 ], [ %37, %32 ]
  %48 = phi i16* [ null, %14 ], [ %9, %32 ]
  %49 = phi i16* [ null, %14 ], [ %39, %32 ]
  %50 = getelementptr inbounds %"class.WTF::VectorBuffer.2", %"class.WTF::VectorBuffer.2"* %1, i64 0, i32 1, i64 0
  %51 = icmp eq i16* %44, %43
  br i1 %51, label %52, label %55

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::VectorBuffer.2", %"class.WTF::VectorBuffer.2"* %1, i64 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  br label %55

55:                                               ; preds = %42, %52
  %56 = phi i32 [ %7, %52 ], [ 0, %42 ]
  %57 = phi i32 [ %5, %52 ], [ 0, %42 ]
  %58 = phi i32 [ %54, %52 ], [ 0, %42 ]
  %59 = phi i16* [ %43, %52 ], [ null, %42 ]
  %60 = phi i16* [ %11, %52 ], [ null, %42 ]
  %61 = getelementptr inbounds %"class.WTF::VectorBuffer.2", %"class.WTF::VectorBuffer.2"* %0, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.WTF::VectorBuffer.2", %"class.WTF::VectorBuffer.2"* %1, i64 0, i32 0, i32 1
  %63 = load i32, i32* %61, align 4
  %64 = load i32, i32* %62, align 4
  store i32 %64, i32* %61, align 4
  store i32 %63, i32* %62, align 4
  %65 = icmp eq i16* %48, null
  %66 = icmp ne i16* %59, null
  %67 = or i1 %65, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %55
  %69 = and i1 %65, %66
  br i1 %69, label %70, label %78

70:                                               ; preds = %68, %55
  %71 = phi %"class.WTF::VectorBuffer.2"* [ %1, %55 ], [ %0, %68 ]
  %72 = phi %"class.WTF::VectorBuffer.2"* [ %0, %55 ], [ %1, %68 ]
  %73 = phi i8* [ %50, %55 ], [ %10, %68 ]
  %74 = bitcast %"class.WTF::VectorBuffer.2"* %71 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.WTF::VectorBuffer.2"* %72 to i64*
  store atomic i64 %75, i64* %76 monotonic, align 8
  %77 = ptrtoint i8* %73 to i64
  store atomic i64 %77, i64* %74 monotonic, align 8
  br label %78

78:                                               ; preds = %70, %68
  %79 = getelementptr inbounds %"class.WTF::VectorBuffer.2", %"class.WTF::VectorBuffer.2"* %0, i64 0, i32 0, i32 2
  %80 = getelementptr inbounds %"class.WTF::VectorBuffer.2", %"class.WTF::VectorBuffer.2"* %1, i64 0, i32 0, i32 2
  %81 = load i32, i32* %79, align 4
  %82 = load i32, i32* %80, align 4
  store i32 %82, i32* %79, align 4
  store i32 %81, i32* %80, align 4
  %83 = icmp ne i16* %48, null
  %84 = icmp ult i32 %47, 8
  %85 = icmp eq i32 %46, %45
  %86 = icmp eq i32 %57, %56
  br label %87

87:                                               ; preds = %78, %272
  %88 = phi i32 [ 0, %78 ], [ %119, %272 ]
  %89 = icmp ult i32 %88, %47
  %90 = and i1 %83, %89
  %91 = and i1 %84, %90
  %92 = select i1 %91, i32 %47, i32 8
  br i1 %85, label %102, label %93

93:                                               ; preds = %87
  %94 = icmp ult i32 %88, %46
  %95 = icmp ult i32 %46, %92
  %96 = and i1 %94, %95
  %97 = select i1 %96, i32 %46, i32 %92
  %98 = icmp ult i32 %88, %45
  br i1 %98, label %99, label %102

99:                                               ; preds = %93
  %100 = icmp ult i32 %45, %97
  %101 = select i1 %100, i32 %45, i32 %97
  br label %102

102:                                              ; preds = %87, %99, %93
  %103 = phi i32 [ %101, %99 ], [ %97, %93 ], [ %92, %87 ]
  %104 = icmp ult i32 %88, %58
  %105 = and i1 %66, %104
  %106 = icmp ult i32 %58, %103
  %107 = and i1 %105, %106
  %108 = select i1 %107, i32 %58, i32 %103
  br i1 %86, label %118, label %109

109:                                              ; preds = %102
  %110 = icmp ult i32 %88, %57
  %111 = icmp ult i32 %57, %108
  %112 = and i1 %110, %111
  %113 = select i1 %112, i32 %57, i32 %108
  %114 = icmp ult i32 %88, %56
  br i1 %114, label %115, label %118

115:                                              ; preds = %109
  %116 = icmp ult i32 %56, %113
  %117 = select i1 %116, i32 %56, i32 %113
  br label %118

118:                                              ; preds = %102, %115, %109
  %119 = phi i32 [ %117, %115 ], [ %113, %109 ], [ %108, %102 ]
  br i1 %90, label %120, label %125

120:                                              ; preds = %118
  %121 = icmp ult i32 %88, %46
  %122 = or i1 %85, %121
  %123 = icmp uge i32 %88, %45
  %124 = or i1 %123, %122
  br label %125

125:                                              ; preds = %120, %118
  %126 = phi i1 [ false, %118 ], [ %124, %120 ]
  br i1 %105, label %127, label %239

127:                                              ; preds = %125
  %128 = icmp ult i32 %88, %57
  %129 = or i1 %86, %128
  %130 = xor i1 %129, true
  %131 = icmp ult i32 %88, %56
  %132 = and i1 %131, %130
  %133 = xor i1 %126, true
  %134 = or i1 %132, %133
  %135 = xor i1 %131, true
  %136 = or i1 %129, %135
  br i1 %134, label %239, label %137

137:                                              ; preds = %127
  %138 = zext i32 %88 to i64
  %139 = zext i32 %119 to i64
  %140 = getelementptr inbounds i16, i16* %48, i64 %139
  %141 = bitcast i16* %140 to i8*
  %142 = icmp eq i32 %88, %119
  br i1 %142, label %272, label %143

143:                                              ; preds = %137
  %144 = getelementptr inbounds i16, i16* %48, i64 %138
  %145 = bitcast i16* %144 to i8*
  %146 = getelementptr inbounds i16, i16* %59, i64 %138
  %147 = bitcast i16* %146 to i8*
  %148 = sub nsw i64 %139, %138
  %149 = shl nsw i64 %148, 1
  %150 = icmp ult i64 %149, 32
  br i1 %150, label %228, label %151

151:                                              ; preds = %143
  %152 = getelementptr i16, i16* %59, i64 %139
  %153 = icmp ult i16* %144, %152
  %154 = icmp ult i16* %146, %140
  %155 = and i1 %153, %154
  br i1 %155, label %228, label %156

156:                                              ; preds = %151
  %157 = and i64 %149, -32
  %158 = getelementptr i8, i8* %147, i64 %157
  %159 = getelementptr i8, i8* %145, i64 %157
  %160 = add nsw i64 %157, -32
  %161 = lshr exact i64 %160, 5
  %162 = add nuw nsw i64 %161, 1
  %163 = and i64 %162, 1
  %164 = icmp eq i64 %160, 0
  br i1 %164, label %206, label %165

165:                                              ; preds = %156
  %166 = sub nuw nsw i64 %162, %163
  br label %167

167:                                              ; preds = %167, %165
  %168 = phi i64 [ 0, %165 ], [ %203, %167 ]
  %169 = phi i64 [ %166, %165 ], [ %204, %167 ]
  %170 = getelementptr i8, i8* %147, i64 %168
  %171 = getelementptr i8, i8* %145, i64 %168
  %172 = bitcast i8* %171 to <16 x i8>*
  %173 = load <16 x i8>, <16 x i8>* %172, align 1, !alias.scope !13, !noalias !16
  %174 = getelementptr i8, i8* %171, i64 16
  %175 = bitcast i8* %174 to <16 x i8>*
  %176 = load <16 x i8>, <16 x i8>* %175, align 1, !alias.scope !13, !noalias !16
  %177 = bitcast i8* %170 to <16 x i8>*
  %178 = load <16 x i8>, <16 x i8>* %177, align 1, !alias.scope !16
  %179 = getelementptr i8, i8* %170, i64 16
  %180 = bitcast i8* %179 to <16 x i8>*
  %181 = load <16 x i8>, <16 x i8>* %180, align 1, !alias.scope !16
  %182 = bitcast i8* %171 to <16 x i8>*
  store <16 x i8> %178, <16 x i8>* %182, align 1, !alias.scope !13, !noalias !16
  %183 = bitcast i8* %174 to <16 x i8>*
  store <16 x i8> %181, <16 x i8>* %183, align 1, !alias.scope !13, !noalias !16
  %184 = bitcast i8* %170 to <16 x i8>*
  store <16 x i8> %173, <16 x i8>* %184, align 1, !alias.scope !16
  %185 = bitcast i8* %179 to <16 x i8>*
  store <16 x i8> %176, <16 x i8>* %185, align 1, !alias.scope !16
  %186 = or i64 %168, 32
  %187 = getelementptr i8, i8* %147, i64 %186
  %188 = getelementptr i8, i8* %145, i64 %186
  %189 = bitcast i8* %188 to <16 x i8>*
  %190 = load <16 x i8>, <16 x i8>* %189, align 1, !alias.scope !13, !noalias !16
  %191 = getelementptr i8, i8* %188, i64 16
  %192 = bitcast i8* %191 to <16 x i8>*
  %193 = load <16 x i8>, <16 x i8>* %192, align 1, !alias.scope !13, !noalias !16
  %194 = bitcast i8* %187 to <16 x i8>*
  %195 = load <16 x i8>, <16 x i8>* %194, align 1, !alias.scope !16
  %196 = getelementptr i8, i8* %187, i64 16
  %197 = bitcast i8* %196 to <16 x i8>*
  %198 = load <16 x i8>, <16 x i8>* %197, align 1, !alias.scope !16
  %199 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %195, <16 x i8>* %199, align 1, !alias.scope !13, !noalias !16
  %200 = bitcast i8* %191 to <16 x i8>*
  store <16 x i8> %198, <16 x i8>* %200, align 1, !alias.scope !13, !noalias !16
  %201 = bitcast i8* %187 to <16 x i8>*
  store <16 x i8> %190, <16 x i8>* %201, align 1, !alias.scope !16
  %202 = bitcast i8* %196 to <16 x i8>*
  store <16 x i8> %193, <16 x i8>* %202, align 1, !alias.scope !16
  %203 = add i64 %168, 64
  %204 = add i64 %169, -2
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %167, !llvm.loop !18

206:                                              ; preds = %167, %156
  %207 = phi i64 [ 0, %156 ], [ %203, %167 ]
  %208 = icmp eq i64 %163, 0
  br i1 %208, label %226, label %209

209:                                              ; preds = %206
  %210 = getelementptr i8, i8* %147, i64 %207
  %211 = getelementptr i8, i8* %145, i64 %207
  %212 = bitcast i8* %211 to <16 x i8>*
  %213 = load <16 x i8>, <16 x i8>* %212, align 1, !alias.scope !13, !noalias !16
  %214 = getelementptr i8, i8* %211, i64 16
  %215 = bitcast i8* %214 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !13, !noalias !16
  %217 = bitcast i8* %210 to <16 x i8>*
  %218 = load <16 x i8>, <16 x i8>* %217, align 1, !alias.scope !16
  %219 = getelementptr i8, i8* %210, i64 16
  %220 = bitcast i8* %219 to <16 x i8>*
  %221 = load <16 x i8>, <16 x i8>* %220, align 1, !alias.scope !16
  %222 = bitcast i8* %211 to <16 x i8>*
  store <16 x i8> %218, <16 x i8>* %222, align 1, !alias.scope !13, !noalias !16
  %223 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %221, <16 x i8>* %223, align 1, !alias.scope !13, !noalias !16
  %224 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %213, <16 x i8>* %224, align 1, !alias.scope !16
  %225 = bitcast i8* %219 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %225, align 1, !alias.scope !16
  br label %226

226:                                              ; preds = %206, %209
  %227 = icmp eq i64 %149, %157
  br i1 %227, label %272, label %228

228:                                              ; preds = %226, %151, %143
  %229 = phi i8* [ %147, %151 ], [ %147, %143 ], [ %158, %226 ]
  %230 = phi i8* [ %145, %151 ], [ %145, %143 ], [ %159, %226 ]
  br label %231

231:                                              ; preds = %228, %231
  %232 = phi i8* [ %237, %231 ], [ %229, %228 ]
  %233 = phi i8* [ %236, %231 ], [ %230, %228 ]
  %234 = load i8, i8* %233, align 1
  %235 = load i8, i8* %232, align 1
  store i8 %235, i8* %233, align 1
  store i8 %234, i8* %232, align 1
  %236 = getelementptr inbounds i8, i8* %233, i64 1
  %237 = getelementptr inbounds i8, i8* %232, i64 1
  %238 = icmp eq i8* %236, %141
  br i1 %238, label %272, label %231, !llvm.loop !19

239:                                              ; preds = %127, %125
  %240 = phi i1 [ false, %125 ], [ %136, %127 ]
  br i1 %126, label %241, label %256

241:                                              ; preds = %239
  %242 = zext i32 %88 to i64
  %243 = getelementptr inbounds i16, i16* %48, i64 %242
  %244 = getelementptr inbounds i16, i16* %49, i64 %242
  %245 = icmp ne i16* %244, null
  %246 = icmp ne i16* %243, null
  %247 = and i1 %246, %245
  br i1 %247, label %248, label %272, !prof !4

248:                                              ; preds = %241
  %249 = zext i32 %119 to i64
  %250 = getelementptr inbounds i16, i16* %48, i64 %249
  %251 = bitcast i16* %243 to i8*
  %252 = ptrtoint i16* %250 to i64
  %253 = ptrtoint i16* %243 to i64
  %254 = sub i64 %252, %253
  %255 = bitcast i16* %244 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %255, i8* nonnull align 2 %251, i64 %254, i1 false) #4
  br label %272

256:                                              ; preds = %239
  br i1 %240, label %257, label %272

257:                                              ; preds = %256
  %258 = zext i32 %88 to i64
  %259 = getelementptr inbounds i16, i16* %59, i64 %258
  %260 = getelementptr inbounds i16, i16* %60, i64 %258
  %261 = icmp ne i16* %260, null
  %262 = icmp ne i16* %259, null
  %263 = and i1 %262, %261
  br i1 %263, label %264, label %272, !prof !4

264:                                              ; preds = %257
  %265 = zext i32 %119 to i64
  %266 = getelementptr inbounds i16, i16* %59, i64 %265
  %267 = bitcast i16* %259 to i8*
  %268 = ptrtoint i16* %266 to i64
  %269 = ptrtoint i16* %259 to i64
  %270 = sub i64 %268, %269
  %271 = bitcast i16* %260 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %271, i8* nonnull align 2 %267, i64 %270, i1 false) #4
  br label %272

272:                                              ; preds = %231, %226, %264, %257, %248, %241, %137, %256
  %273 = icmp ult i32 %119, 8
  br i1 %273, label %87, label %274

274:                                              ; preds = %272, %20
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIhS1_E11OffsetRangeES6_(%"class.WTF::VectorBuffer"*, %"class.WTF::VectorBuffer"* dereferenceable(32), i64, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = trunc i64 %3 to i32
  %6 = lshr i64 %3, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 1, i64 0
  %11 = icmp eq i8* %9, %10
  %12 = ptrtoint i8* %9 to i64
  br i1 %11, label %30, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 1, i64 0
  %17 = icmp eq i8* %15, %16
  br i1 %17, label %39, label %18

18:                                               ; preds = %13
  %19 = ptrtoint i8* %15 to i64
  %20 = bitcast %"class.WTF::VectorBuffer"* %1 to i64*
  %21 = bitcast %"class.WTF::VectorBuffer"* %0 to i64*
  store atomic i64 %12, i64* %20 monotonic, align 8
  store atomic i64 %19, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 1
  %24 = load i32, i32* %22, align 4
  %25 = load i32, i32* %23, align 4
  store i32 %25, i32* %22, align 4
  store i32 %24, i32* %23, align 4
  %26 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 2
  %27 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 2
  %28 = load i32, i32* %26, align 4
  %29 = load i32, i32* %27, align 4
  store i32 %29, i32* %26, align 4
  store i32 %28, i32* %27, align 4
  br label %262

30:                                               ; preds = %4
  %31 = lshr i64 %2, 32
  %32 = trunc i64 %31 to i32
  %33 = trunc i64 %2 to i32
  %34 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 1, i64 0
  %37 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %13, %30
  %40 = phi i8* [ %38, %30 ], [ %15, %13 ]
  %41 = phi i32 [ %32, %30 ], [ 0, %13 ]
  %42 = phi i32 [ %33, %30 ], [ 0, %13 ]
  %43 = phi i32 [ %35, %30 ], [ 0, %13 ]
  %44 = phi i8* [ %9, %30 ], [ null, %13 ]
  %45 = phi i8* [ %36, %30 ], [ null, %13 ]
  %46 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 1, i64 0
  %47 = icmp eq i8* %40, %46
  br i1 %47, label %48, label %51

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  br label %51

51:                                               ; preds = %39, %48
  %52 = phi i32 [ %7, %48 ], [ 0, %39 ]
  %53 = phi i32 [ %5, %48 ], [ 0, %39 ]
  %54 = phi i32 [ %50, %48 ], [ 0, %39 ]
  %55 = phi i8* [ %46, %48 ], [ null, %39 ]
  %56 = phi i8* [ %10, %48 ], [ null, %39 ]
  %57 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 1
  %59 = load i32, i32* %57, align 4
  %60 = load i32, i32* %58, align 4
  store i32 %60, i32* %57, align 4
  store i32 %59, i32* %58, align 4
  %61 = icmp eq i8* %44, null
  %62 = icmp ne i8* %55, null
  %63 = or i1 %61, %62
  br i1 %63, label %64, label %66

64:                                               ; preds = %51
  %65 = and i1 %61, %62
  br i1 %65, label %66, label %74

66:                                               ; preds = %64, %51
  %67 = phi %"class.WTF::VectorBuffer"* [ %1, %51 ], [ %0, %64 ]
  %68 = phi %"class.WTF::VectorBuffer"* [ %0, %51 ], [ %1, %64 ]
  %69 = phi i8* [ %46, %51 ], [ %10, %64 ]
  %70 = bitcast %"class.WTF::VectorBuffer"* %67 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.WTF::VectorBuffer"* %68 to i64*
  store atomic i64 %71, i64* %72 monotonic, align 8
  %73 = ptrtoint i8* %69 to i64
  store atomic i64 %73, i64* %70 monotonic, align 8
  br label %74

74:                                               ; preds = %66, %64
  %75 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 2
  %76 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 2
  %77 = load i32, i32* %75, align 4
  %78 = load i32, i32* %76, align 4
  store i32 %78, i32* %75, align 4
  store i32 %77, i32* %76, align 4
  %79 = icmp ne i8* %44, null
  %80 = icmp ult i32 %43, 16
  %81 = icmp eq i32 %42, %41
  %82 = icmp eq i32 %53, %52
  br label %83

83:                                               ; preds = %74, %260
  %84 = phi i32 [ 0, %74 ], [ %115, %260 ]
  %85 = icmp ult i32 %84, %43
  %86 = and i1 %79, %85
  %87 = and i1 %80, %86
  %88 = select i1 %87, i32 %43, i32 16
  br i1 %81, label %98, label %89

89:                                               ; preds = %83
  %90 = icmp ult i32 %84, %42
  %91 = icmp ult i32 %42, %88
  %92 = and i1 %90, %91
  %93 = select i1 %92, i32 %42, i32 %88
  %94 = icmp ult i32 %84, %41
  br i1 %94, label %95, label %98

95:                                               ; preds = %89
  %96 = icmp ult i32 %41, %93
  %97 = select i1 %96, i32 %41, i32 %93
  br label %98

98:                                               ; preds = %83, %95, %89
  %99 = phi i32 [ %97, %95 ], [ %93, %89 ], [ %88, %83 ]
  %100 = icmp ult i32 %84, %54
  %101 = and i1 %62, %100
  %102 = icmp ult i32 %54, %99
  %103 = and i1 %101, %102
  %104 = select i1 %103, i32 %54, i32 %99
  br i1 %82, label %114, label %105

105:                                              ; preds = %98
  %106 = icmp ult i32 %84, %53
  %107 = icmp ult i32 %53, %104
  %108 = and i1 %106, %107
  %109 = select i1 %108, i32 %53, i32 %104
  %110 = icmp ult i32 %84, %52
  br i1 %110, label %111, label %114

111:                                              ; preds = %105
  %112 = icmp ult i32 %52, %109
  %113 = select i1 %112, i32 %52, i32 %109
  br label %114

114:                                              ; preds = %98, %111, %105
  %115 = phi i32 [ %113, %111 ], [ %109, %105 ], [ %104, %98 ]
  br i1 %86, label %116, label %121

116:                                              ; preds = %114
  %117 = icmp ult i32 %84, %42
  %118 = or i1 %81, %117
  %119 = icmp uge i32 %84, %41
  %120 = or i1 %119, %118
  br label %121

121:                                              ; preds = %116, %114
  %122 = phi i1 [ false, %114 ], [ %120, %116 ]
  br i1 %101, label %123, label %231

123:                                              ; preds = %121
  %124 = icmp ult i32 %84, %53
  %125 = or i1 %82, %124
  %126 = xor i1 %125, true
  %127 = icmp ult i32 %84, %52
  %128 = and i1 %127, %126
  %129 = xor i1 %122, true
  %130 = or i1 %128, %129
  %131 = xor i1 %127, true
  %132 = or i1 %125, %131
  br i1 %130, label %231, label %133

133:                                              ; preds = %123
  %134 = zext i32 %84 to i64
  %135 = zext i32 %115 to i64
  %136 = getelementptr inbounds i8, i8* %44, i64 %135
  %137 = icmp eq i32 %84, %115
  br i1 %137, label %260, label %138

138:                                              ; preds = %133
  %139 = getelementptr inbounds i8, i8* %55, i64 %134
  %140 = getelementptr inbounds i8, i8* %44, i64 %134
  %141 = sub nsw i64 %135, %134
  %142 = icmp ult i64 %141, 32
  br i1 %142, label %220, label %143

143:                                              ; preds = %138
  %144 = getelementptr i8, i8* %55, i64 %135
  %145 = icmp ult i8* %140, %144
  %146 = icmp ult i8* %139, %136
  %147 = and i1 %145, %146
  br i1 %147, label %220, label %148

148:                                              ; preds = %143
  %149 = and i64 %141, -32
  %150 = getelementptr i8, i8* %139, i64 %149
  %151 = getelementptr i8, i8* %140, i64 %149
  %152 = add nsw i64 %149, -32
  %153 = lshr exact i64 %152, 5
  %154 = add nuw nsw i64 %153, 1
  %155 = and i64 %154, 1
  %156 = icmp eq i64 %152, 0
  br i1 %156, label %198, label %157

157:                                              ; preds = %148
  %158 = sub nuw nsw i64 %154, %155
  br label %159

159:                                              ; preds = %159, %157
  %160 = phi i64 [ 0, %157 ], [ %195, %159 ]
  %161 = phi i64 [ %158, %157 ], [ %196, %159 ]
  %162 = getelementptr i8, i8* %139, i64 %160
  %163 = getelementptr i8, i8* %140, i64 %160
  %164 = bitcast i8* %163 to <16 x i8>*
  %165 = load <16 x i8>, <16 x i8>* %164, align 1, !alias.scope !20, !noalias !23
  %166 = getelementptr i8, i8* %163, i64 16
  %167 = bitcast i8* %166 to <16 x i8>*
  %168 = load <16 x i8>, <16 x i8>* %167, align 1, !alias.scope !20, !noalias !23
  %169 = bitcast i8* %162 to <16 x i8>*
  %170 = load <16 x i8>, <16 x i8>* %169, align 1, !alias.scope !23
  %171 = getelementptr i8, i8* %162, i64 16
  %172 = bitcast i8* %171 to <16 x i8>*
  %173 = load <16 x i8>, <16 x i8>* %172, align 1, !alias.scope !23
  %174 = bitcast i8* %163 to <16 x i8>*
  store <16 x i8> %170, <16 x i8>* %174, align 1, !alias.scope !20, !noalias !23
  %175 = bitcast i8* %166 to <16 x i8>*
  store <16 x i8> %173, <16 x i8>* %175, align 1, !alias.scope !20, !noalias !23
  %176 = bitcast i8* %162 to <16 x i8>*
  store <16 x i8> %165, <16 x i8>* %176, align 1, !alias.scope !23
  %177 = bitcast i8* %171 to <16 x i8>*
  store <16 x i8> %168, <16 x i8>* %177, align 1, !alias.scope !23
  %178 = or i64 %160, 32
  %179 = getelementptr i8, i8* %139, i64 %178
  %180 = getelementptr i8, i8* %140, i64 %178
  %181 = bitcast i8* %180 to <16 x i8>*
  %182 = load <16 x i8>, <16 x i8>* %181, align 1, !alias.scope !20, !noalias !23
  %183 = getelementptr i8, i8* %180, i64 16
  %184 = bitcast i8* %183 to <16 x i8>*
  %185 = load <16 x i8>, <16 x i8>* %184, align 1, !alias.scope !20, !noalias !23
  %186 = bitcast i8* %179 to <16 x i8>*
  %187 = load <16 x i8>, <16 x i8>* %186, align 1, !alias.scope !23
  %188 = getelementptr i8, i8* %179, i64 16
  %189 = bitcast i8* %188 to <16 x i8>*
  %190 = load <16 x i8>, <16 x i8>* %189, align 1, !alias.scope !23
  %191 = bitcast i8* %180 to <16 x i8>*
  store <16 x i8> %187, <16 x i8>* %191, align 1, !alias.scope !20, !noalias !23
  %192 = bitcast i8* %183 to <16 x i8>*
  store <16 x i8> %190, <16 x i8>* %192, align 1, !alias.scope !20, !noalias !23
  %193 = bitcast i8* %179 to <16 x i8>*
  store <16 x i8> %182, <16 x i8>* %193, align 1, !alias.scope !23
  %194 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %185, <16 x i8>* %194, align 1, !alias.scope !23
  %195 = add i64 %160, 64
  %196 = add i64 %161, -2
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %198, label %159, !llvm.loop !25

198:                                              ; preds = %159, %148
  %199 = phi i64 [ 0, %148 ], [ %195, %159 ]
  %200 = icmp eq i64 %155, 0
  br i1 %200, label %218, label %201

201:                                              ; preds = %198
  %202 = getelementptr i8, i8* %139, i64 %199
  %203 = getelementptr i8, i8* %140, i64 %199
  %204 = bitcast i8* %203 to <16 x i8>*
  %205 = load <16 x i8>, <16 x i8>* %204, align 1, !alias.scope !20, !noalias !23
  %206 = getelementptr i8, i8* %203, i64 16
  %207 = bitcast i8* %206 to <16 x i8>*
  %208 = load <16 x i8>, <16 x i8>* %207, align 1, !alias.scope !20, !noalias !23
  %209 = bitcast i8* %202 to <16 x i8>*
  %210 = load <16 x i8>, <16 x i8>* %209, align 1, !alias.scope !23
  %211 = getelementptr i8, i8* %202, i64 16
  %212 = bitcast i8* %211 to <16 x i8>*
  %213 = load <16 x i8>, <16 x i8>* %212, align 1, !alias.scope !23
  %214 = bitcast i8* %203 to <16 x i8>*
  store <16 x i8> %210, <16 x i8>* %214, align 1, !alias.scope !20, !noalias !23
  %215 = bitcast i8* %206 to <16 x i8>*
  store <16 x i8> %213, <16 x i8>* %215, align 1, !alias.scope !20, !noalias !23
  %216 = bitcast i8* %202 to <16 x i8>*
  store <16 x i8> %205, <16 x i8>* %216, align 1, !alias.scope !23
  %217 = bitcast i8* %211 to <16 x i8>*
  store <16 x i8> %208, <16 x i8>* %217, align 1, !alias.scope !23
  br label %218

218:                                              ; preds = %198, %201
  %219 = icmp eq i64 %141, %149
  br i1 %219, label %260, label %220

220:                                              ; preds = %218, %143, %138
  %221 = phi i8* [ %139, %143 ], [ %139, %138 ], [ %150, %218 ]
  %222 = phi i8* [ %140, %143 ], [ %140, %138 ], [ %151, %218 ]
  br label %223

223:                                              ; preds = %220, %223
  %224 = phi i8* [ %229, %223 ], [ %221, %220 ]
  %225 = phi i8* [ %228, %223 ], [ %222, %220 ]
  %226 = load i8, i8* %225, align 1
  %227 = load i8, i8* %224, align 1
  store i8 %227, i8* %225, align 1
  store i8 %226, i8* %224, align 1
  %228 = getelementptr inbounds i8, i8* %225, i64 1
  %229 = getelementptr inbounds i8, i8* %224, i64 1
  %230 = icmp eq i8* %228, %136
  br i1 %230, label %260, label %223, !llvm.loop !26

231:                                              ; preds = %123, %121
  %232 = phi i1 [ false, %121 ], [ %132, %123 ]
  br i1 %122, label %233, label %246

233:                                              ; preds = %231
  %234 = zext i32 %84 to i64
  %235 = getelementptr inbounds i8, i8* %44, i64 %234
  %236 = getelementptr inbounds i8, i8* %45, i64 %234
  %237 = icmp ne i8* %236, null
  %238 = icmp ne i8* %235, null
  %239 = and i1 %238, %237
  br i1 %239, label %240, label %260, !prof !4

240:                                              ; preds = %233
  %241 = zext i32 %115 to i64
  %242 = getelementptr inbounds i8, i8* %44, i64 %241
  %243 = ptrtoint i8* %242 to i64
  %244 = ptrtoint i8* %235 to i64
  %245 = sub i64 %243, %244
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %236, i8* nonnull align 1 %235, i64 %245, i1 false) #4
  br label %260

246:                                              ; preds = %231
  br i1 %232, label %247, label %260

247:                                              ; preds = %246
  %248 = zext i32 %84 to i64
  %249 = getelementptr inbounds i8, i8* %55, i64 %248
  %250 = getelementptr inbounds i8, i8* %56, i64 %248
  %251 = icmp ne i8* %250, null
  %252 = icmp ne i8* %249, null
  %253 = and i1 %252, %251
  br i1 %253, label %254, label %260, !prof !4

254:                                              ; preds = %247
  %255 = zext i32 %115 to i64
  %256 = getelementptr inbounds i8, i8* %55, i64 %255
  %257 = ptrtoint i8* %256 to i64
  %258 = ptrtoint i8* %249 to i64
  %259 = sub i64 %257, %258
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %250, i8* nonnull align 1 %249, i64 %259, i1 false) #4
  br label %260

260:                                              ; preds = %223, %218, %254, %247, %240, %233, %133, %246
  %261 = icmp ult i32 %115, 16
  br i1 %261, label %83, label %262

262:                                              ; preds = %260, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #4
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %18, i8* nonnull %6) #4
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #4
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #4
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !4

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #4
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !4

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %46, i8* %42) #4
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #4
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #4
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #4
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #4
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #4
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #4
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #4
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #4
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2"* %19, i16* nonnull %6) #4
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #4
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #4
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !4

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #4
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2"* %53, i16* %48) #4
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #4
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #4
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #4
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #4
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #4
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #4
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #4
  ret i64 %21
}

declare i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #4
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #4
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #4
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #4
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #4
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #4
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #4
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIcLj256ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.12"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #4
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i8* %15, i8* %16) #4
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #4
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #4
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 256
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %37) #4
  %39 = call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %38) #4
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.12"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.12"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 256, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIcLj256ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.12"* %0, i32 %27) #4
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIcLj256ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.12"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 257
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.12"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 256, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.12"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 256, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #4
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIcLj256ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPc(%"class.WTF::VectorBuffer.13"* %18, i8* nonnull %6) #4
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %27) #4
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %28) #4
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !4

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #4
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !4

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIcLj256ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPc(%"class.WTF::VectorBuffer.13"* %46, i8* %42) #4
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.12"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7}
!7 = distinct !{!7, !"LVerDomain"}
!8 = !{!9}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !11}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !11}
!19 = distinct !{!19, !11}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!24}
!24 = distinct !{!24, !22}
!25 = distinct !{!25, !11}
!26 = distinct !{!26, !11}
