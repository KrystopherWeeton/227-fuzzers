; ModuleID = '../../third_party/blink/renderer/platform/audio/hrtf_database_loader.cc'
source_filename = "../../third_party/blink/renderer/platform/audio/hrtf_database_loader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::HashMap<double, blink::HRTFDatabaseLoader *, WTF::FloatHash<double>, WTF::HashTraits<double>, WTF::HashTraits<blink::HRTFDatabaseLoader *>, WTF::PartitionAllocator> *>::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashMap<double, blink::HRTFDatabaseLoader *, WTF::FloatHash<double>, WTF::HashTraits<double>, WTF::HashTraits<blink::HRTFDatabaseLoader *>, WTF::PartitionAllocator> *>::InstanceStorage" = type { [8 x i8] }
%"class.blink::HRTFDatabaseLoader" = type <{ %"class.WTF::RefCounted", [4 x i8], %"class.WTF::Mutex", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2", float, [4 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::HRTFDatabase"* }
%"class.blink::HRTFDatabase" = type <{ %"class.WTF::Vector", float, [4 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr.0"*, i32, i32 }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::HRTFElevation"* }
%"class.blink::HRTFElevation" = type <{ %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22", double, float, [4 x i8] }>
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.WTF::Vector.25"* }
%"class.WTF::Vector.25" = type { %"class.WTF::VectorBuffer.26" }
%"class.WTF::VectorBuffer.26" = type { %"class.WTF::VectorBufferBase.27" }
%"class.WTF::VectorBufferBase.27" = type { %"class.std::__1::unique_ptr.28"*, i32, i32 }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::HRTFKernel"* }
%"class.blink::HRTFKernel" = type { %"class.std::__1::unique_ptr.31", float, float }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::FFTFrame"* }
%"class.blink::FFTFrame" = type { i32, i32, %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray" }
%"class.blink::AudioArray" = type <{ float*, float*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.blink::Thread"* }
%"class.blink::Thread" = type { i32 (...)** }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { double, %"class.blink::HRTFDatabaseLoader"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.12", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::CrossThreadOnceFunction" = type { %"class.base::OnceCallback" }
%"struct.blink::ThreadCreationParams" = type <{ i32, [4 x i8], i8*, %"class.blink::FrameOrWorkerScheduler"*, i32, i8, [3 x i8] }>
%"class.blink::FrameOrWorkerScheduler" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.blink::Platform" = type { i32 (...)** }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"struct.std::__1::default_delete" = type { i8 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.14, i8, [7 x i8] }>
%class.scoped_refptr.14 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.15", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.15" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.16" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::default_delete.43" = type { i8 }

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink18HRTFDatabaseLoaderEFvvEJN3WTF28CrossThreadUnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink18HRTFDatabaseLoaderEFvvEJN3WTF28CrossThreadUnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink18HRTFDatabaseLoaderEFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS4_EENSA_IS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink18HRTFDatabaseLoaderEFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS3_EENS9_IS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN3WTF9HashTableIdNS_12KeyValuePairIdPN5blink18HRTFDatabaseLoaderEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERfS4_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIdNS_12KeyValuePairIdPN5blink18HRTFDatabaseLoaderEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF9HashTableIdNS_12KeyValuePairIdPN5blink18HRTFDatabaseLoaderEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_ = comdat any

$_ZN3WTF9HashTableIdNS_12KeyValuePairIdPN5blink18HRTFDatabaseLoaderEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKd = comdat any

$_ZNKSt3__114default_deleteIN5blink12HRTFDatabaseEEclEPS2_ = comdat any

$_ZNKSt3__114default_deleteIN3WTF6VectorINS_10unique_ptrIN5blink10HRTFKernelENS0_IS5_EEEELj0ENS1_18PartitionAllocatorEEEEclEPS9_ = comdat any

$_ZN3WTF9HashTableIdNS_12KeyValuePairIdPN5blink18HRTFDatabaseLoaderEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE4findERKd = comdat any

@.str = private unnamed_addr constant [19 x i8] c"LoadAsynchronously\00", align 1
@.str.1 = private unnamed_addr constant [72 x i8] c"../../third_party/blink/renderer/platform/audio/hrtf_database_loader.cc\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"WaitForLoaderThreadCompletion\00", align 1
@_ZZN5blinkL12GetLoaderMapEvE5s_map = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blinkL12GetLoaderMapEvE5s_map = internal global i64 0, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapIdPN5blink18HRTFDatabaseLoaderENS_9FloatHashIdEENS_10HashTraitsIdEENS7_IS4_EENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [217 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::HashMap<double, blink::HRTFDatabaseLoader *, WTF::FloatHash<double>, WTF::HashTraits<double>, WTF::HashTraits<blink::HRTFDatabaseLoader *>, WTF::PartitionAllocator>]\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.4 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIdPN5blink18HRTFDatabaseLoaderEEEEEPKcv = private unnamed_addr constant [102 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<double, blink::HRTFDatabaseLoader *>]\00", align 1

@_ZN5blink18HRTFDatabaseLoaderC1Ef = hidden unnamed_addr alias void (%"class.blink::HRTFDatabaseLoader"*, float), void (%"class.blink::HRTFDatabaseLoader"*, float)* @_ZN5blink18HRTFDatabaseLoaderC2Ef
@_ZN5blink18HRTFDatabaseLoaderD1Ev = hidden unnamed_addr alias void (%"class.blink::HRTFDatabaseLoader"*), void (%"class.blink::HRTFDatabaseLoader"*)* @_ZN5blink18HRTFDatabaseLoaderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HRTFDatabaseLoader"* @_ZN5blink18HRTFDatabaseLoader38CreateAndLoadAsynchronouslyIfNecessaryEf(float) local_unnamed_addr #0 align 2 {
  %2 = alloca float, align 4
  %3 = alloca %"class.blink::HRTFDatabaseLoader"*, align 8
  store float %0, float* %2, align 4
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL12GetLoaderMapEvE5s_map to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %11, !prof !2

6:                                                ; preds = %1
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL12GetLoaderMapEvE5s_map) #8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %6
  %10 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 24, i8* getelementptr inbounds ([217 x i8], [217 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapIdPN5blink18HRTFDatabaseLoaderENS_9FloatHashIdEENS_10HashTraitsIdEENS7_IS4_EENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false) #8
  store i8* %10, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL12GetLoaderMapEvE5s_map to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL12GetLoaderMapEvE5s_map) #8
  br label %11

11:                                               ; preds = %1, %6, %9
  %12 = load %"class.WTF::HashMap"*, %"class.WTF::HashMap"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL12GetLoaderMapEvE5s_map to %"class.WTF::HashMap"**), align 8
  %13 = load float, float* %2, align 4
  %14 = fpext float %13 to double
  %15 = bitcast double %14 to i64
  %16 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %12, i64 0, i32 0, i32 0
  %17 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %16, align 8
  %18 = icmp eq %"struct.WTF::KeyValuePair"* %17, null
  br i1 %18, label %87, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %12, i64 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = add i32 %21, -1
  %23 = zext i32 %22 to i64
  %24 = shl i64 %15, 32
  %25 = xor i64 %24, -1
  %26 = add i64 %25, %15
  %27 = lshr i64 %26, 22
  %28 = xor i64 %27, %26
  %29 = shl i64 %28, 13
  %30 = xor i64 %29, -1
  %31 = add i64 %28, %30
  %32 = lshr i64 %31, 8
  %33 = xor i64 %32, %31
  %34 = mul i64 %33, 9
  %35 = lshr i64 %34, 15
  %36 = xor i64 %35, %34
  %37 = shl i64 %36, 27
  %38 = xor i64 %37, -1
  %39 = add i64 %36, %38
  %40 = lshr i64 %39, 31
  %41 = xor i64 %40, %39
  %42 = trunc i64 %41 to i32
  %43 = and i32 %22, %42
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 %44
  %46 = bitcast %"struct.WTF::KeyValuePair"* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, %15
  br i1 %48, label %78, label %49

49:                                               ; preds = %19
  %50 = xor i32 %42, -1
  %51 = lshr i32 %42, 23
  %52 = add i32 %51, %50
  %53 = shl i32 %52, 12
  %54 = xor i32 %53, %52
  %55 = lshr i32 %54, 7
  %56 = xor i32 %55, %54
  %57 = shl i32 %56, 2
  %58 = xor i32 %57, %56
  %59 = lshr i32 %58, 20
  %60 = xor i32 %59, %58
  %61 = or i32 %60, 1
  %62 = zext i32 %61 to i64
  br label %63

63:                                               ; preds = %69, %49
  %64 = phi i64 [ %44, %49 ], [ %73, %69 ]
  %65 = phi i64 [ 0, %49 ], [ %71, %69 ]
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 %64, i32 0
  %67 = load double, double* %66, align 8
  %68 = fcmp oeq double %67, 0x7FF0000000000000
  br i1 %68, label %87, label %69

69:                                               ; preds = %63
  %70 = icmp eq i64 %65, 0
  %71 = select i1 %70, i64 %62, i64 %65
  %72 = add i64 %71, %64
  %73 = and i64 %72, %23
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 %73
  %75 = bitcast %"struct.WTF::KeyValuePair"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %76, %15
  br i1 %77, label %78, label %63

78:                                               ; preds = %69, %19
  %79 = phi %"struct.WTF::KeyValuePair"* [ %45, %19 ], [ %74, %69 ]
  %80 = icmp eq %"struct.WTF::KeyValuePair"* %79, null
  br i1 %80, label %87, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 1
  %83 = load %"class.blink::HRTFDatabaseLoader"*, %"class.blink::HRTFDatabaseLoader"** %82, align 8
  %84 = icmp eq %"class.blink::HRTFDatabaseLoader"* %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::HRTFDatabaseLoader", %"class.blink::HRTFDatabaseLoader"* %83, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %86) #8
  br label %109

87:                                               ; preds = %63, %11, %78, %81
  %88 = tail call noalias i8* @malloc(i64 72) #8
  %89 = bitcast i8* %88 to %"class.blink::HRTFDatabaseLoader"*
  %90 = bitcast i8* %88 to i32*
  store i32 1, i32* %90, align 4
  %91 = getelementptr inbounds i8, i8* %88, i64 8
  %92 = bitcast i8* %91 to %"class.WTF::MutexBase"*
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %92, i1 zeroext false) #8
  %93 = getelementptr inbounds i8, i8* %88, i64 48
  %94 = getelementptr inbounds i8, i8* %88, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 16, i1 false) #8
  %95 = bitcast i8* %94 to float*
  store float %13, float* %95, align 8
  %96 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL12GetLoaderMapEvE5s_map to i8*) acquire, align 8
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %98, label %103, !prof !2

98:                                               ; preds = %87
  %99 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL12GetLoaderMapEvE5s_map) #8
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %98
  %102 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 24, i8* getelementptr inbounds ([217 x i8], [217 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapIdPN5blink18HRTFDatabaseLoaderENS_9FloatHashIdEENS_10HashTraitsIdEENS7_IS4_EENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 20, i1 false) #8
  store i8* %102, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL12GetLoaderMapEvE5s_map to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL12GetLoaderMapEvE5s_map) #8
  br label %103

103:                                              ; preds = %87, %98, %101
  %104 = load %"class.WTF::HashMap"*, %"class.WTF::HashMap"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL12GetLoaderMapEvE5s_map to %"class.WTF::HashMap"**), align 8
  %105 = bitcast %"class.blink::HRTFDatabaseLoader"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #8
  %106 = bitcast %"class.blink::HRTFDatabaseLoader"** %3 to i8**
  store i8* %88, i8** %106, align 8
  %107 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %104, i64 0, i32 0
  %108 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIdNS_12KeyValuePairIdPN5blink18HRTFDatabaseLoaderEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERfS4_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable"* %107, float* nonnull dereferenceable(4) %2, %"class.blink::HRTFDatabaseLoader"** nonnull dereferenceable(8) %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #8
  call void @_ZN5blink18HRTFDatabaseLoader18LoadAsynchronouslyEv(%"class.blink::HRTFDatabaseLoader"* %89)
  br label %109

109:                                              ; preds = %85, %103
  %110 = phi %"class.blink::HRTFDatabaseLoader"* [ %83, %85 ], [ %89, %103 ]
  ret %"class.blink::HRTFDatabaseLoader"* %110
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HRTFDatabaseLoader18LoadAsynchronouslyEv(%"class.blink::HRTFDatabaseLoader"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %6 = alloca %"struct.blink::ThreadCreationParams", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %9 = tail call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #8
  %10 = bitcast %"struct.blink::ThreadCreationParams"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #8
  call void @_ZN5blink20ThreadCreationParamsC1ENS_10ThreadTypeE(%"struct.blink::ThreadCreationParams"* nonnull %6, i32 14) #8
  %11 = call %"class.blink::Thread"* @_ZN5blink8Platform12CreateThreadERKNS_20ThreadCreationParamsE(%"class.blink::Platform"* %9, %"struct.blink::ThreadCreationParams"* nonnull dereferenceable(32) %6) #8
  %12 = ptrtoint %"class.blink::Thread"* %11 to i64
  %13 = getelementptr inbounds %"class.blink::HRTFDatabaseLoader", %"class.blink::HRTFDatabaseLoader"* %0, i64 0, i32 4
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::Thread"*, %"class.blink::Thread"** %14, align 8
  %16 = bitcast %"class.std::__1::unique_ptr.2"* %13 to i64*
  store i64 %12, i64* %16, align 8
  %17 = icmp eq %"class.blink::Thread"* %15, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %1
  %19 = bitcast %"class.blink::Thread"* %15 to void (%"class.blink::Thread"*)***
  %20 = load void (%"class.blink::Thread"*)**, void (%"class.blink::Thread"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Thread"*)*, void (%"class.blink::Thread"*)** %20, i64 1
  %22 = load void (%"class.blink::Thread"*)*, void (%"class.blink::Thread"*)** %21, align 8
  call void %22(%"class.blink::Thread"* nonnull %15) #8
  %23 = load %"class.blink::Thread"*, %"class.blink::Thread"** %14, align 8
  br label %24

24:                                               ; preds = %18, %1
  %25 = phi %"class.blink::Thread"* [ %23, %18 ], [ %11, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #8
  %26 = bitcast %"class.blink::Thread"* %25 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %27 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %26, align 8
  %28 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %27, i64 3
  %29 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %28, align 8
  %30 = call %"class.base::SingleThreadTaskRunner"* %29(%"class.blink::Thread"* %25) #8
  %31 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1, i64 0, i64 0), i32 100) #8
  %32 = ptrtoint %"class.blink::HRTFDatabaseLoader"* %0 to i64
  %33 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33)
  %34 = call i8* @_Znwm(i64 56) #9, !noalias !3
  %35 = bitcast i8* %34 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %35, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink18HRTFDatabaseLoaderEFvvEJN3WTF28CrossThreadUnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink18HRTFDatabaseLoaderEFvvEJN3WTF28CrossThreadUnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !3
  %36 = getelementptr inbounds i8, i8* %34, i64 32
  %37 = bitcast i8* %36 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::HRTFDatabaseLoader"*)* @_ZN5blink18HRTFDatabaseLoader8LoadTaskEv to i64), i64 0>, <2 x i64>* %37, align 8, !noalias !3
  %38 = getelementptr inbounds i8, i8* %34, i64 48
  %39 = bitcast i8* %38 to i64*
  store i64 %32, i64* %39, align 8, !noalias !3
  %40 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #8, !noalias !10
  %41 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %42 = ptrtoint i8* %34 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %41, align 8, !noalias !11
  %43 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %43, align 8, !noalias !11
  %44 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %44) #8, !noalias !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #8, !noalias !10
  %45 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %45) #8, !noalias !10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33)
  %46 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46)
  %47 = bitcast %"class.WTF::CrossThreadOnceFunction"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47)
  %48 = bitcast %"class.base::SingleThreadTaskRunner"* %30 to %"class.base::TaskRunner"*
  %49 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %49, align 8
  %50 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %42, i64* %51, align 8, !alias.scope !14
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %50, align 8, !noalias !14
  %52 = bitcast %"class.base::SingleThreadTaskRunner"* %30 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %53 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %52, align 8
  %54 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %53, align 8
  %55 = call zeroext i1 %54(%"class.base::TaskRunner"* %48, %"class.base::Location"* nonnull dereferenceable(32) %7, %"class.base::OnceCallback"* nonnull %4, i64 0) #8
  %56 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %56) #8
  %57 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %57) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47)
  %58 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %58) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #8
  %59 = icmp eq %"class.base::SingleThreadTaskRunner"* %30, null
  br i1 %59, label %68, label %60

60:                                               ; preds = %24
  %61 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %30, i64 0, i32 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw sub i32* %62, i32 1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %68

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %61, i64 -2
  %67 = bitcast %"class.base::RefCountedThreadSafe"* %66 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %67) #8
  br label %68

68:                                               ; preds = %24, %60, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HRTFDatabaseLoaderC2Ef(%"class.blink::HRTFDatabaseLoader"*, float) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HRTFDatabaseLoader", %"class.blink::HRTFDatabaseLoader"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.blink::HRTFDatabaseLoader", %"class.blink::HRTFDatabaseLoader"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %4, i1 zeroext false) #8
  %5 = getelementptr inbounds %"class.blink::HRTFDatabaseLoader", %"class.blink::HRTFDatabaseLoader"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.blink::HRTFDatabaseLoader", %"class.blink::HRTFDatabaseLoader"* %0, i64 0, i32 5
  %7 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  store float %1, float* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HRTFDatabaseLoaderD2Ev(%"class.blink::HRTFDatabaseLoader"*) unnamed_addr #0 align 2 {
  %2 = alloca double, align 8
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL12GetLoaderMapEvE5s_map to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %10, !prof !2

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL12GetLoaderMapEvE5s_map) #8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %5
  %9 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 24, i8* getelementptr inbounds ([217 x i8], [217 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapIdPN5blink18HRTFDatabaseLoaderENS_9FloatHashIdEENS_10HashTraitsIdEENS7_IS4_EENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #8
  store i8* %9, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL12GetLoaderMapEvE5s_map to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL12GetLoaderMapEvE5s_map) #8
  br label %10

10:                                               ; preds = %1, %5, %8
  %11 = load %"class.WTF::HashMap"*, %"class.WTF::HashMap"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL12GetLoaderMapEvE5s_map to %"class.WTF::HashMap"**), align 8
  %12 = bitcast double* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8
  %13 = getelementptr inbounds %"class.blink::HRTFDatabaseLoader", %"class.blink::HRTFDatabaseLoader"* %0, i64 0, i32 5
  %14 = load float, float* %13, align 8
  %15 = fpext float %14 to double
  store double %15, double* %2, align 8
  %16 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %11, i64 0, i32 0
  %17 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIdNS_12KeyValuePairIdPN5blink18HRTFDatabaseLoaderEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE4findERKd(%"class.WTF::HashTable"* %16, double* nonnull dereferenceable(8) %2) #8
  %18 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %17, 0
  %19 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %11, i64 0, i32 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %11, i64 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 %23
  %25 = icmp eq %"struct.WTF::KeyValuePair"* %24, %18
  br i1 %25, label %73, label %26

26:                                               ; preds = %10
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 0, i32 0
  store double 0xFFF0000000000000, double* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %11, i64 0, i32 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = add i32 %29, 1
  %31 = and i32 %30, 2147483647
  %32 = and i32 %29, -2147483648
  %33 = or i32 %31, %32
  store i32 %33, i32* %28, align 8
  %34 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %11, i64 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = add i32 %35, -1
  store i32 %36, i32* %34, align 4
  %37 = mul i32 %36, 6
  %38 = load i32, i32* %21, align 8
  %39 = icmp ult i32 %37, %38
  %40 = icmp ugt i32 %38, 8
  %41 = and i1 %39, %40
  br i1 %41, label %42, label %73

42:                                               ; preds = %26
  %43 = lshr i32 %38, 1
  %44 = zext i32 %43 to i64
  %45 = shl nuw nsw i64 %44, 4
  %46 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %45, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIdPN5blink18HRTFDatabaseLoaderEEEEEPKcv, i64 0, i64 0)) #8
  %47 = bitcast i8* %46 to %"struct.WTF::KeyValuePair"*
  %48 = icmp eq i32 %43, 0
  br i1 %48, label %71, label %49

49:                                               ; preds = %42
  %50 = and i64 %44, 1
  %51 = icmp eq i32 %43, 1
  br i1 %51, label %65, label %52

52:                                               ; preds = %49
  %53 = sub nsw i64 %44, %50
  br label %54

54:                                               ; preds = %54, %52
  %55 = phi i64 [ 0, %52 ], [ %62, %54 ]
  %56 = phi i64 [ %53, %52 ], [ %63, %54 ]
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 %55, i32 0
  store double 0x7FF0000000000000, double* %57, align 8
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 %55, i32 1
  store %"class.blink::HRTFDatabaseLoader"* null, %"class.blink::HRTFDatabaseLoader"** %58, align 8
  %59 = or i64 %55, 1
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 %59, i32 0
  store double 0x7FF0000000000000, double* %60, align 8
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 %59, i32 1
  store %"class.blink::HRTFDatabaseLoader"* null, %"class.blink::HRTFDatabaseLoader"** %61, align 8
  %62 = add nuw nsw i64 %55, 2
  %63 = add i64 %56, -2
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %54

65:                                               ; preds = %54, %49
  %66 = phi i64 [ 0, %49 ], [ %62, %54 ]
  %67 = icmp eq i64 %50, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 %66, i32 0
  store double 0x7FF0000000000000, double* %69, align 8
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 %66, i32 1
  store %"class.blink::HRTFDatabaseLoader"* null, %"class.blink::HRTFDatabaseLoader"** %70, align 8
  br label %71

71:                                               ; preds = %68, %65, %42
  %72 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIdNS_12KeyValuePairIdPN5blink18HRTFDatabaseLoaderEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable"* %16, %"struct.WTF::KeyValuePair"* %47, i32 %43, %"struct.WTF::KeyValuePair"* null) #8
  br label %73

73:                                               ; preds = %10, %26, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8
  %74 = getelementptr inbounds %"class.blink::HRTFDatabaseLoader", %"class.blink::HRTFDatabaseLoader"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %75 = load %"class.blink::Thread"*, %"class.blink::Thread"** %74, align 8
  store %"class.blink::Thread"* null, %"class.blink::Thread"** %74, align 8
  %76 = icmp eq %"class.blink::Thread"* %75, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %73
  %78 = bitcast %"class.blink::Thread"* %75 to void (%"class.blink::Thread"*)***
  %79 = load void (%"class.blink::Thread"*)**, void (%"class.blink::Thread"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.blink::Thread"*)*, void (%"class.blink::Thread"*)** %79, i64 1
  %81 = load void (%"class.blink::Thread"*)*, void (%"class.blink::Thread"*)** %80, align 8
  call void %81(%"class.blink::Thread"* nonnull %75) #8
  br label %82

82:                                               ; preds = %73, %77
  %83 = getelementptr inbounds %"class.blink::HRTFDatabaseLoader", %"class.blink::HRTFDatabaseLoader"* %0, i64 0, i32 3
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.blink::HRTFDatabase"*, %"class.blink::HRTFDatabase"** %84, align 8
  store %"class.blink::HRTFDatabase"* null, %"class.blink::HRTFDatabase"** %84, align 8
  %86 = icmp eq %"class.blink::HRTFDatabase"* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %82
  %88 = bitcast %"class.std::__1::unique_ptr"* %83 to %"struct.std::__1::default_delete"*
  call void @_ZNKSt3__114default_deleteIN5blink12HRTFDatabaseEEclEPS2_(%"struct.std::__1::default_delete"* %88, %"class.blink::HRTFDatabase"* nonnull %85) #8
  br label %89

89:                                               ; preds = %82, %87
  %90 = getelementptr inbounds %"class.blink::HRTFDatabaseLoader", %"class.blink::HRTFDatabaseLoader"* %0, i64 0, i32 2, i32 0
  call void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"* %90) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HRTFDatabaseLoader8LoadTaskEv(%"class.blink::HRTFDatabaseLoader"*) #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HRTFDatabaseLoader", %"class.blink::HRTFDatabaseLoader"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %2) #8
  %3 = getelementptr inbounds %"class.blink::HRTFDatabaseLoader", %"class.blink::HRTFDatabaseLoader"* %0, i64 0, i32 5
  %4 = tail call noalias i8* @malloc(i64 24) #8
  %5 = bitcast i8* %4 to %"class.blink::HRTFDatabase"*
  %6 = load float, float* %3, align 4
  tail call void @_ZN5blink12HRTFDatabaseC1Ef(%"class.blink::HRTFDatabase"* %5, float %6) #8
  %7 = getelementptr inbounds %"class.blink::HRTFDatabaseLoader", %"class.blink::HRTFDatabaseLoader"* %0, i64 0, i32 3
  %8 = ptrtoint i8* %4 to i64
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::HRTFDatabase"*, %"class.blink::HRTFDatabase"** %9, align 8
  %11 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 %8, i64* %11, align 8
  %12 = icmp eq %"class.blink::HRTFDatabase"* %10, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.std::__1::unique_ptr"* %7 to %"struct.std::__1::default_delete"*
  tail call void @_ZNKSt3__114default_deleteIN5blink12HRTFDatabaseEEclEPS2_(%"struct.std::__1::default_delete"* %14, %"class.blink::HRTFDatabase"* nonnull %10) #8
  br label %15

15:                                               ; preds = %13, %1
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %2) #8
  ret void
}

declare %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() local_unnamed_addr #3

declare %"class.blink::Thread"* @_ZN5blink8Platform12CreateThreadERKNS_20ThreadCreationParamsE(%"class.blink::Platform"*, %"struct.blink::ThreadCreationParams"* dereferenceable(32)) local_unnamed_addr #3

declare void @_ZN5blink20ThreadCreationParamsC1ENS_10ThreadTypeE(%"struct.blink::ThreadCreationParams"*, i32) unnamed_addr #3

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HRTFDatabase"* @_ZN5blink18HRTFDatabaseLoader8DatabaseEv(%"class.blink::HRTFDatabaseLoader"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HRTFDatabaseLoader", %"class.blink::HRTFDatabaseLoader"* %0, i64 0, i32 2
  %3 = tail call zeroext i1 @_ZN3WTF5Mutex7TryLockEv(%"class.WTF::Mutex"* %2) #8
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::HRTFDatabaseLoader", %"class.blink::HRTFDatabaseLoader"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.blink::HRTFDatabase"*, %"class.blink::HRTFDatabase"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %2, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %7) #8
  br label %8

8:                                                ; preds = %1, %4
  %9 = phi %"class.blink::HRTFDatabase"* [ %6, %4 ], [ null, %1 ]
  ret %"class.blink::HRTFDatabase"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HRTFDatabaseLoader11CleanupTaskEPN4base13WaitableEventE(%"class.blink::HRTFDatabaseLoader"* nocapture readnone, %"class.base::WaitableEvent"*) #0 align 2 {
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %1) #8
  ret void
}

declare void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HRTFDatabaseLoader29WaitForLoaderThreadCompletionEv(%"class.blink::HRTFDatabaseLoader"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %6 = alloca %"class.base::WaitableEvent", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %9 = getelementptr inbounds %"class.blink::HRTFDatabaseLoader", %"class.blink::HRTFDatabaseLoader"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %10 = load %"class.blink::Thread"*, %"class.blink::Thread"** %9, align 8
  %11 = icmp eq %"class.blink::Thread"* %10, null
  br i1 %11, label %70, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.base::WaitableEvent"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #8
  %14 = bitcast %"class.base::WaitableEvent"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  call void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"* nonnull %6, i32 0, i32 1) #8
  %15 = load %"class.blink::Thread"*, %"class.blink::Thread"** %9, align 8
  %16 = bitcast %"class.blink::Thread"* %15 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %17 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %17, i64 3
  %19 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %18, align 8
  %20 = call %"class.base::SingleThreadTaskRunner"* %19(%"class.blink::Thread"* %15) #8
  %21 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1, i64 0, i64 0), i32 130) #8
  %22 = ptrtoint %"class.blink::HRTFDatabaseLoader"* %0 to i64
  %23 = ptrtoint %"class.base::WaitableEvent"* %6 to i64
  %24 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = call i8* @_Znwm(i64 64) #9, !noalias !17
  %26 = bitcast i8* %25 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %26, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink18HRTFDatabaseLoaderEFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS4_EENSA_IS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink18HRTFDatabaseLoaderEFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS3_EENS9_IS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !17
  %27 = getelementptr inbounds i8, i8* %25, i64 32
  %28 = bitcast i8* %27 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::HRTFDatabaseLoader"*, %"class.base::WaitableEvent"*)* @_ZN5blink18HRTFDatabaseLoader11CleanupTaskEPN4base13WaitableEventE to i64), i64 0>, <2 x i64>* %28, align 8, !noalias !17
  %29 = getelementptr inbounds i8, i8* %25, i64 48
  %30 = bitcast i8* %29 to i64*
  store i64 %22, i64* %30, align 8, !noalias !17
  %31 = getelementptr inbounds i8, i8* %25, i64 56
  %32 = bitcast i8* %31 to i64*
  store i64 %23, i64* %32, align 8, !noalias !17
  %33 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8, !noalias !24
  %34 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %35 = ptrtoint i8* %25 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %34, align 8, !noalias !25
  %36 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %36, align 8, !noalias !25
  %37 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #8, !noalias !25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8, !noalias !24
  %38 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %38) #8, !noalias !24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  %39 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39)
  %40 = bitcast %"class.WTF::CrossThreadOnceFunction"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40)
  %41 = bitcast %"class.base::SingleThreadTaskRunner"* %20 to %"class.base::TaskRunner"*
  %42 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %42, align 8
  %43 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %35, i64* %44, align 8, !alias.scope !28
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %43, align 8, !noalias !28
  %45 = bitcast %"class.base::SingleThreadTaskRunner"* %20 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %46 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %45, align 8
  %47 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %46, align 8
  %48 = call zeroext i1 %47(%"class.base::TaskRunner"* %41, %"class.base::Location"* nonnull dereferenceable(32) %7, %"class.base::OnceCallback"* nonnull %4, i64 0) #8
  %49 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %49) #8
  %50 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %50) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40)
  %51 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %51) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #8
  %52 = icmp eq %"class.base::SingleThreadTaskRunner"* %20, null
  br i1 %52, label %61, label %53

53:                                               ; preds = %12
  %54 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %20, i64 0, i32 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw sub i32* %55, i32 1 acq_rel
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %54, i64 -2
  %60 = bitcast %"class.base::RefCountedThreadSafe"* %59 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %60) #8
  br label %61

61:                                               ; preds = %12, %53, %58
  notail call void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"* nonnull %6) #8
  %62 = load %"class.blink::Thread"*, %"class.blink::Thread"** %9, align 8
  store %"class.blink::Thread"* null, %"class.blink::Thread"** %9, align 8
  %63 = icmp eq %"class.blink::Thread"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %61
  %65 = bitcast %"class.blink::Thread"* %62 to void (%"class.blink::Thread"*)***
  %66 = load void (%"class.blink::Thread"*)**, void (%"class.blink::Thread"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.blink::Thread"*)*, void (%"class.blink::Thread"*)** %66, i64 1
  %68 = load void (%"class.blink::Thread"*)*, void (%"class.blink::Thread"*)** %67, align 8
  call void %68(%"class.blink::Thread"* nonnull %62) #8
  br label %69

69:                                               ; preds = %61, %64
  call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #8
  br label %70

70:                                               ; preds = %1, %69
  ret void
}

declare void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"*, i32, i32) unnamed_addr #3

declare void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #4

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

declare void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"*, i1 zeroext) unnamed_addr #3

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #3

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink18HRTFDatabaseLoaderEFvvEJN3WTF28CrossThreadUnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.blink::HRTFDatabaseLoader"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::HRTFDatabaseLoader"*)**
  %21 = load void (%"class.blink::HRTFDatabaseLoader"*)*, void (%"class.blink::HRTFDatabaseLoader"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.blink::HRTFDatabaseLoader"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::HRTFDatabaseLoader"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.blink::HRTFDatabaseLoader"* %12) #8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink18HRTFDatabaseLoaderEFvvEJN3WTF28CrossThreadUnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #9
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZN3WTF5Mutex7TryLockEv(%"class.WTF::Mutex"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink18HRTFDatabaseLoaderEFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS4_EENSA_IS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.base::WaitableEvent"**
  %8 = load %"class.base::WaitableEvent"*, %"class.base::WaitableEvent"** %7, align 8
  %9 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %12 = bitcast void ()** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8, i8* %5, i64 %13
  %15 = bitcast i8* %14 to %"class.blink::HRTFDatabaseLoader"*
  %16 = and i64 %10, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %1
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %10, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to void (%"class.blink::HRTFDatabaseLoader"*, %"class.base::WaitableEvent"*)**
  %24 = load void (%"class.blink::HRTFDatabaseLoader"*, %"class.base::WaitableEvent"*)*, void (%"class.blink::HRTFDatabaseLoader"*, %"class.base::WaitableEvent"*)** %23, align 8
  br label %27

25:                                               ; preds = %1
  %26 = inttoptr i64 %10 to void (%"class.blink::HRTFDatabaseLoader"*, %"class.base::WaitableEvent"*)*
  br label %27

27:                                               ; preds = %18, %25
  %28 = phi void (%"class.blink::HRTFDatabaseLoader"*, %"class.base::WaitableEvent"*)* [ %24, %18 ], [ %26, %25 ]
  tail call void %28(%"class.blink::HRTFDatabaseLoader"* %15, %"class.base::WaitableEvent"* %8) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink18HRTFDatabaseLoaderEFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS3_EENS9_IS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #9
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIdNS_12KeyValuePairIdPN5blink18HRTFDatabaseLoaderEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERfS4_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable"*, float* dereferenceable(4), %"class.blink::HRTFDatabaseLoader"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIdNS_12KeyValuePairIdPN5blink18HRTFDatabaseLoaderEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load float, float* %1, align 4
  %17 = fpext float %16 to double
  %18 = bitcast double %17 to i64
  %19 = shl i64 %18, 32
  %20 = xor i64 %19, -1
  %21 = add i64 %20, %18
  %22 = lshr i64 %21, 22
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 13
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 8
  %28 = xor i64 %27, %26
  %29 = mul i64 %28, 9
  %30 = lshr i64 %29, 15
  %31 = xor i64 %30, %29
  %32 = shl i64 %31, 27
  %33 = xor i64 %32, -1
  %34 = add i64 %31, %33
  %35 = lshr i64 %34, 31
  %36 = xor i64 %35, %34
  %37 = trunc i64 %36 to i32
  %38 = and i32 %14, %37
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %39
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %40, i64 0, i32 0
  %42 = load double, double* %41, align 8
  %43 = fcmp oeq double %42, 0x7FF0000000000000
  br i1 %43, label %91, label %44

44:                                               ; preds = %10
  %45 = xor i32 %37, -1
  %46 = lshr i32 %37, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %67
  %59 = phi double [ %42, %44 ], [ %76, %67 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %40, %44 ], [ %74, %67 ]
  %61 = phi %"struct.WTF::KeyValuePair"* [ null, %44 ], [ %69, %67 ]
  %62 = phi i64 [ %39, %44 ], [ %73, %67 ]
  %63 = phi i64 [ 0, %44 ], [ %71, %67 ]
  %64 = bitcast %"struct.WTF::KeyValuePair"* %60 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %65, %18
  br i1 %66, label %110, label %67

67:                                               ; preds = %58
  %68 = fcmp oeq double %59, 0xFFF0000000000000
  %69 = select i1 %68, %"struct.WTF::KeyValuePair"* %60, %"struct.WTF::KeyValuePair"* %61
  %70 = icmp eq i64 %63, 0
  %71 = select i1 %70, i64 %57, i64 %63
  %72 = add i64 %71, %62
  %73 = and i64 %72, %15
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %73
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %74, i64 0, i32 0
  %76 = load double, double* %75, align 8
  %77 = fcmp oeq double %76, 0x7FF0000000000000
  br i1 %77, label %78, label %58

78:                                               ; preds = %67
  %79 = icmp eq %"struct.WTF::KeyValuePair"* %69, null
  br i1 %79, label %91, label %80

80:                                               ; preds = %78
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 0, i32 0
  store double 0x7FF0000000000000, double* %81, align 8
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 0, i32 1
  store %"class.blink::HRTFDatabaseLoader"* null, %"class.blink::HRTFDatabaseLoader"** %82, align 8
  %83 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %84 = load i32, i32* %83, align 8
  %85 = add i32 %84, 2147483647
  %86 = and i32 %85, 2147483647
  %87 = and i32 %84, -2147483648
  %88 = or i32 %86, %87
  store i32 %88, i32* %83, align 8
  %89 = load float, float* %1, align 4
  %90 = fpext float %89 to double
  br label %91

91:                                               ; preds = %10, %78, %80
  %92 = phi double [ %17, %78 ], [ %90, %80 ], [ %17, %10 ]
  %93 = phi %"struct.WTF::KeyValuePair"* [ %74, %78 ], [ %69, %80 ], [ %40, %10 ]
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %93, i64 0, i32 0
  store double %92, double* %94, align 8
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %93, i64 0, i32 1
  %96 = bitcast %"class.blink::HRTFDatabaseLoader"** %2 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.blink::HRTFDatabaseLoader"** %95 to i64*
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %100 = load i32, i32* %99, align 4
  %101 = add i32 %100, 1
  store i32 %101, i32* %99, align 4
  %102 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %103 = load i32, i32* %102, align 8
  %104 = add i32 %103, %101
  %105 = shl i32 %104, 1
  %106 = load i32, i32* %12, align 8
  %107 = icmp ult i32 %105, %106
  br i1 %107, label %110, label %108

108:                                              ; preds = %91
  %109 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIdNS_12KeyValuePairIdPN5blink18HRTFDatabaseLoaderEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %93)
  br label %110

110:                                              ; preds = %58, %91, %108
  %111 = phi i8 [ 1, %91 ], [ 1, %108 ], [ 0, %58 ]
  %112 = phi %"struct.WTF::KeyValuePair"* [ %93, %91 ], [ %109, %108 ], [ %60, %58 ]
  %113 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %112, 0
  %114 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %113, i8 %111, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %114
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIdNS_12KeyValuePairIdPN5blink18HRTFDatabaseLoaderEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIdPN5blink18HRTFDatabaseLoaderEEEEEPKcv, i64 0, i64 0)) #8
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %60, label %38

38:                                               ; preds = %31
  %39 = and i64 %33, 1
  %40 = icmp eq i32 %32, 1
  br i1 %40, label %54, label %41

41:                                               ; preds = %38
  %42 = sub nsw i64 %33, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %51, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %52, %43 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %44, i32 0
  store double 0x7FF0000000000000, double* %46, align 8
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %44, i32 1
  store %"class.blink::HRTFDatabaseLoader"* null, %"class.blink::HRTFDatabaseLoader"** %47, align 8
  %48 = or i64 %44, 1
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %48, i32 0
  store double 0x7FF0000000000000, double* %49, align 8
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %48, i32 1
  store %"class.blink::HRTFDatabaseLoader"* null, %"class.blink::HRTFDatabaseLoader"** %50, align 8
  %51 = add nuw nsw i64 %44, 2
  %52 = add i64 %45, -2
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %43

54:                                               ; preds = %43, %38
  %55 = phi i64 [ 0, %38 ], [ %51, %43 ]
  %56 = icmp eq i64 %39, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %55, i32 0
  store double 0x7FF0000000000000, double* %58, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %55, i32 1
  store %"class.blink::HRTFDatabaseLoader"* null, %"class.blink::HRTFDatabaseLoader"** %59, align 8
  br label %60

60:                                               ; preds = %57, %54, %31
  %61 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIdNS_12KeyValuePairIdPN5blink18HRTFDatabaseLoaderEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #8
  ret %"struct.WTF::KeyValuePair"* %61
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIdNS_12KeyValuePairIdPN5blink18HRTFDatabaseLoaderEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %42

24:                                               ; preds = %66
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %67, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %70, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %68, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #8
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret %"struct.WTF::KeyValuePair"* %33

42:                                               ; preds = %21, %66
  %43 = phi i64 [ %67, %66 ], [ %23, %21 ]
  %44 = phi i32 [ %68, %66 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair"* [ %69, %66 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair"* [ %70, %66 ], [ null, %21 ]
  %47 = phi i32 [ %71, %66 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %48
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 0
  %51 = load double, double* %50, align 8
  %52 = fcmp oeq double %51, 0x7FF0000000000000
  %53 = fcmp oeq double %51, 0xFFF0000000000000
  %54 = or i1 %52, %53
  br i1 %54, label %66, label %55

55:                                               ; preds = %42
  %56 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIdNS_12KeyValuePairIdPN5blink18HRTFDatabaseLoaderEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKd(%"class.WTF::HashTable"* nonnull %5, double* dereferenceable(8) %50) #8
  %57 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %56, 0
  %58 = bitcast %"struct.WTF::KeyValuePair"* %57 to i8*
  %59 = bitcast %"struct.WTF::KeyValuePair"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 16, i1 false) #8
  %60 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %60, i64 %48
  %62 = icmp eq %"struct.WTF::KeyValuePair"* %61, %3
  %63 = select i1 %62, %"struct.WTF::KeyValuePair"* %57, %"struct.WTF::KeyValuePair"* %46
  %64 = load i32, i32* %12, align 8
  %65 = ptrtoint %"struct.WTF::KeyValuePair"* %60 to i64
  br label %66

66:                                               ; preds = %42, %55
  %67 = phi i64 [ %43, %42 ], [ %65, %55 ]
  %68 = phi i32 [ %44, %42 ], [ %64, %55 ]
  %69 = phi %"struct.WTF::KeyValuePair"* [ %45, %42 ], [ %60, %55 ]
  %70 = phi %"struct.WTF::KeyValuePair"* [ %46, %42 ], [ %63, %55 ]
  %71 = add i32 %47, 1
  %72 = icmp eq i32 %71, %68
  br i1 %72, label %24, label %42
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIdNS_12KeyValuePairIdPN5blink18HRTFDatabaseLoaderEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKd(%"class.WTF::HashTable"*, double* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast double* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %35 = load double, double* %34, align 8
  %36 = fcmp oeq double %35, 0x7FF0000000000000
  br i1 %36, label %54, label %37

37:                                               ; preds = %2
  %38 = xor i32 %29, -1
  %39 = lshr i32 %29, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %60

51:                                               ; preds = %70
  %52 = ptrtoint %"struct.WTF::KeyValuePair"* %77 to i64
  %53 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair"*
  br label %54

54:                                               ; preds = %51, %2
  %55 = phi i64 [ %52, %51 ], [ %33, %2 ]
  %56 = phi %"struct.WTF::KeyValuePair"* [ %53, %51 ], [ null, %2 ]
  %57 = icmp eq %"struct.WTF::KeyValuePair"* %56, null
  %58 = ptrtoint %"struct.WTF::KeyValuePair"* %56 to i64
  %59 = select i1 %57, i64 %55, i64 %58
  br label %82

60:                                               ; preds = %70, %37
  %61 = phi i64 [ 0, %37 ], [ %72, %70 ]
  %62 = phi double [ %35, %37 ], [ %80, %70 ]
  %63 = phi i64 [ %33, %37 ], [ %78, %70 ]
  %64 = phi %"struct.WTF::KeyValuePair"* [ %32, %37 ], [ %77, %70 ]
  %65 = phi i64 [ %31, %37 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %37 ], [ %74, %70 ]
  %67 = bitcast %"struct.WTF::KeyValuePair"* %64 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %68, %10
  br i1 %69, label %82, label %70

70:                                               ; preds = %60
  %71 = fcmp oeq double %62, 0xFFF0000000000000
  %72 = select i1 %71, i64 %63, i64 %61
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %50, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 0, i32 0
  %80 = load double, double* %79, align 8
  %81 = fcmp oeq double %80, 0x7FF0000000000000
  br i1 %81, label %51, label %60

82:                                               ; preds = %60, %54
  %83 = phi i64 [ %59, %54 ], [ %63, %60 ]
  %84 = phi i8 [ 0, %54 ], [ 1, %60 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %87
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink12HRTFDatabaseEEclEPS2_(%"struct.std::__1::default_delete"*, %"class.blink::HRTFDatabase"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::HRTFDatabase"* %1, null
  br i1 %3, label %46, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::HRTFDatabase", %"class.blink::HRTFDatabase"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.0"* %6, null
  br i1 %7, label %44, label %8, !prof !31

8:                                                ; preds = %4
  %9 = bitcast %"class.std::__1::unique_ptr.0"* %6 to i8*
  %10 = getelementptr inbounds %"class.blink::HRTFDatabase", %"class.blink::HRTFDatabase"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %42, label %13, !prof !32

13:                                               ; preds = %8
  %14 = zext i32 %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 %14
  br label %16

16:                                               ; preds = %36, %13
  %17 = phi %"class.std::__1::unique_ptr.0"* [ %37, %36 ], [ %6, %13 ]
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::HRTFElevation"*, %"class.blink::HRTFElevation"** %18, align 8
  store %"class.blink::HRTFElevation"* null, %"class.blink::HRTFElevation"** %18, align 8
  %20 = icmp eq %"class.blink::HRTFElevation"* %19, null
  br i1 %20, label %36, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::HRTFElevation", %"class.blink::HRTFElevation"* %19, i64 0, i32 1
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::Vector.25"*, %"class.WTF::Vector.25"** %23, align 8
  store %"class.WTF::Vector.25"* null, %"class.WTF::Vector.25"** %23, align 8
  %25 = icmp eq %"class.WTF::Vector.25"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  %27 = bitcast %"class.std::__1::unique_ptr.22"* %22 to %"struct.std::__1::default_delete.43"*
  tail call void @_ZNKSt3__114default_deleteIN3WTF6VectorINS_10unique_ptrIN5blink10HRTFKernelENS0_IS5_EEEELj0ENS1_18PartitionAllocatorEEEEclEPS9_(%"struct.std::__1::default_delete.43"* %27, %"class.WTF::Vector.25"* nonnull %24) #8
  br label %28

28:                                               ; preds = %26, %21
  %29 = getelementptr inbounds %"class.blink::HRTFElevation", %"class.blink::HRTFElevation"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::Vector.25"*, %"class.WTF::Vector.25"** %29, align 8
  store %"class.WTF::Vector.25"* null, %"class.WTF::Vector.25"** %29, align 8
  %31 = icmp eq %"class.WTF::Vector.25"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.blink::HRTFElevation"* %19 to %"struct.std::__1::default_delete.43"*
  tail call void @_ZNKSt3__114default_deleteIN3WTF6VectorINS_10unique_ptrIN5blink10HRTFKernelENS0_IS5_EEEELj0ENS1_18PartitionAllocatorEEEEclEPS9_(%"struct.std::__1::default_delete.43"* nonnull %33, %"class.WTF::Vector.25"* nonnull %30) #8
  br label %34

34:                                               ; preds = %32, %28
  %35 = bitcast %"class.blink::HRTFElevation"* %19 to i8*
  tail call void @free(i8* %35) #8
  br label %36

36:                                               ; preds = %34, %16
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %17, i64 1
  %38 = icmp eq %"class.std::__1::unique_ptr.0"* %37, %15
  br i1 %38, label %39, label %16

39:                                               ; preds = %36
  store i32 0, i32* %10, align 4
  %40 = bitcast %"class.blink::HRTFDatabase"* %1 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %8
  %43 = phi i8* [ %41, %39 ], [ %9, %8 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #8
  br label %44

44:                                               ; preds = %4, %42
  %45 = bitcast %"class.blink::HRTFDatabase"* %1 to i8*
  tail call void @free(i8* %45) #8
  br label %46

46:                                               ; preds = %44, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN3WTF6VectorINS_10unique_ptrIN5blink10HRTFKernelENS0_IS5_EEEELj0ENS1_18PartitionAllocatorEEEEclEPS9_(%"struct.std::__1::default_delete.43"*, %"class.WTF::Vector.25"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.25"* %1, null
  br i1 %3, label %39, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.28"* %6, null
  br i1 %7, label %37, label %8, !prof !31

8:                                                ; preds = %4
  %9 = bitcast %"class.std::__1::unique_ptr.28"* %6 to i8*
  %10 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %1, i64 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %35, label %13, !prof !32

13:                                               ; preds = %8
  %14 = zext i32 %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %6, i64 %14
  br label %16

16:                                               ; preds = %29, %13
  %17 = phi %"class.std::__1::unique_ptr.28"* [ %30, %29 ], [ %6, %13 ]
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::HRTFKernel"*, %"class.blink::HRTFKernel"** %18, align 8
  store %"class.blink::HRTFKernel"* null, %"class.blink::HRTFKernel"** %18, align 8
  %20 = icmp eq %"class.blink::HRTFKernel"* %19, null
  br i1 %20, label %29, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::HRTFKernel", %"class.blink::HRTFKernel"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::FFTFrame"*, %"class.blink::FFTFrame"** %22, align 8
  store %"class.blink::FFTFrame"* null, %"class.blink::FFTFrame"** %22, align 8
  %24 = icmp eq %"class.blink::FFTFrame"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  tail call void @_ZN5blink8FFTFrameD1Ev(%"class.blink::FFTFrame"* nonnull %23) #8
  %26 = bitcast %"class.blink::FFTFrame"* %23 to i8*
  tail call void @free(i8* %26) #8
  br label %27

27:                                               ; preds = %25, %21
  %28 = bitcast %"class.blink::HRTFKernel"* %19 to i8*
  tail call void @free(i8* %28) #8
  br label %29

29:                                               ; preds = %27, %16
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %17, i64 1
  %31 = icmp eq %"class.std::__1::unique_ptr.28"* %30, %15
  br i1 %31, label %32, label %16

32:                                               ; preds = %29
  store i32 0, i32* %10, align 4
  %33 = bitcast %"class.WTF::Vector.25"* %1 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %8
  %36 = phi i8* [ %34, %32 ], [ %9, %8 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %36) #8
  store %"class.std::__1::unique_ptr.28"* null, %"class.std::__1::unique_ptr.28"** %5, align 8
  br label %37

37:                                               ; preds = %4, %35
  %38 = bitcast %"class.WTF::Vector.25"* %1 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %38) #8
  br label %39

39:                                               ; preds = %37, %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink8FFTFrameD1Ev(%"class.blink::FFTFrame"*) unnamed_addr #2

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIdNS_12KeyValuePairIdPN5blink18HRTFDatabaseLoaderEEENS_24KeyValuePairKeyExtractorENS_9FloatHashIdEENS_18HashMapValueTraitsINS_10HashTraitsIdEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE4findERKd(%"class.WTF::HashTable"*, double* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast double* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %33
  %35 = bitcast %"struct.WTF::KeyValuePair"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %12
  br i1 %37, label %67, label %38

38:                                               ; preds = %8
  %39 = xor i32 %31, -1
  %40 = lshr i32 %31, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %58, %38
  %53 = phi i64 [ %33, %38 ], [ %62, %58 ]
  %54 = phi i64 [ 0, %38 ], [ %60, %58 ]
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %53, i32 0
  %56 = load double, double* %55, align 8
  %57 = fcmp oeq double %56, 0x7FF0000000000000
  br i1 %57, label %70, label %58

58:                                               ; preds = %52
  %59 = icmp eq i64 %54, 0
  %60 = select i1 %59, i64 %51, i64 %54
  %61 = add i64 %60, %53
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %62
  %64 = bitcast %"struct.WTF::KeyValuePair"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %65, %12
  br i1 %66, label %67, label %52

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %52, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79, %"struct.WTF::KeyValuePair"* %78, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %80
}

declare void @_ZN5blink12HRTFDatabaseC1Ef(%"class.blink::HRTFDatabase"*, float) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!4, !6, !8}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink18HRTFDatabaseLoaderEFvvEJN3WTF28CrossThreadUnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink18HRTFDatabaseLoaderEFvvEJN3WTF28CrossThreadUnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base8BindOnceIMN5blink18HRTFDatabaseLoaderEFvvEJN3WTF28CrossThreadUnretainedWrapperIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8BindOnceIMN5blink18HRTFDatabaseLoaderEFvvEJN3WTF28CrossThreadUnretainedWrapperIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!8 = distinct !{!8, !9, !"_ZN3WTF19CrossThreadBindOnceIMN5blink18HRTFDatabaseLoaderEFvvEJNS_28CrossThreadUnretainedWrapperIS2_EEEEEDaOT_DpOT0_: argument 0"}
!9 = distinct !{!9, !"_ZN3WTF19CrossThreadBindOnceIMN5blink18HRTFDatabaseLoaderEFvvEJNS_28CrossThreadUnretainedWrapperIS2_EEEEEDaOT_DpOT0_"}
!10 = !{!8}
!11 = !{!12, !8}
!12 = distinct !{!12, !13, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!13 = distinct !{!13, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!16 = distinct !{!16, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!17 = !{!18, !20, !22}
!18 = distinct !{!18, !19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink18HRTFDatabaseLoaderEFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS4_EENSA_IS5_EEEEEDcOT0_DpOT1_: argument 0"}
!19 = distinct !{!19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink18HRTFDatabaseLoaderEFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS4_EENSA_IS5_EEEEEDcOT0_DpOT1_"}
!20 = distinct !{!20, !21, !"_ZN4base8BindOnceIMN5blink18HRTFDatabaseLoaderEFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS2_EENS8_IS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8BindOnceIMN5blink18HRTFDatabaseLoaderEFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS2_EENS8_IS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!22 = distinct !{!22, !23, !"_ZN3WTF19CrossThreadBindOnceIMN5blink18HRTFDatabaseLoaderEFvPN4base13WaitableEventEEJNS_28CrossThreadUnretainedWrapperIS2_EENS8_IS4_EEEEEDaOT_DpOT0_: argument 0"}
!23 = distinct !{!23, !"_ZN3WTF19CrossThreadBindOnceIMN5blink18HRTFDatabaseLoaderEFvPN4base13WaitableEventEEJNS_28CrossThreadUnretainedWrapperIS2_EENS8_IS4_EEEEEDaOT_DpOT0_"}
!24 = !{!22}
!25 = !{!26, !22}
!26 = distinct !{!26, !27, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!27 = distinct !{!27, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!30 = distinct !{!30, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!31 = !{!"branch_weights", i32 2000, i32 1}
!32 = !{!"branch_weights", i32 1, i32 2000}
