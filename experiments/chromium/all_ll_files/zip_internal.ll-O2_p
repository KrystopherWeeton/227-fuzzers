; ModuleID = '../../third_party/zlib/google/zip_internal.cc'
source_filename = "../../third_party/zlib/google/zip_internal.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%struct.zlib_filefunc_def_s = type { i8* (i8*, i8*, i32)*, i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*)*, i64 (i8*, i8*, i64, i32)*, i32 (i8*, i8*)*, i32 (i8*, i8*)*, i8* }
%"struct.base::Time::Exploded" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%struct.zip_fileinfo = type { %struct.tm_zip_s, i64, i64, i64 }
%struct.tm_zip_s = type { i32, i32, i32, i32, i32, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

@.str = private unnamed_addr constant [3 x i8] c"fd\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"r+b\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"wb\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN3zip8internal16OpenForUnzippingERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %9 = select i1 %5, i8* %7, i8* %8
  %10 = tail call i8* @unzOpen2(i8* %9, %struct.zlib_filefunc_def_s* null) #9
  ret i8* %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i8* @unzOpen2(i8*, %struct.zlib_filefunc_def_s*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN3zip8internal18OpenFdForUnzippingEi(i32) local_unnamed_addr #0 {
  %2 = alloca %struct.zlib_filefunc_def_s, align 8
  %3 = bitcast %struct.zlib_filefunc_def_s* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %3) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 64, i1 false)
  call void @fill_fopen_filefunc(%struct.zlib_filefunc_def_s* nonnull %2) #9
  %4 = getelementptr inbounds %struct.zlib_filefunc_def_s, %struct.zlib_filefunc_def_s* %2, i64 0, i32 0
  store i8* (i8*, i8*, i32)* @_ZN12_GLOBAL__N_114FdOpenFileFuncEPvPKci, i8* (i8*, i8*, i32)** %4, align 8
  %5 = getelementptr inbounds %struct.zlib_filefunc_def_s, %struct.zlib_filefunc_def_s* %2, i64 0, i32 5
  store i32 (i8*, i8*)* @_ZN12_GLOBAL__N_115FdCloseFileFuncEPvS0_, i32 (i8*, i8*)** %5, align 8
  %6 = call noalias i8* @malloc(i64 4) #9
  %7 = bitcast i8* %6 to i32*
  store i32 %0, i32* %7, align 4
  %8 = getelementptr inbounds %struct.zlib_filefunc_def_s, %struct.zlib_filefunc_def_s* %2, i64 0, i32 7
  store i8* %6, i8** %8, align 8
  %9 = call i8* @unzOpen2(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %struct.zlib_filefunc_def_s* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %3) #9
  ret i8* %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN3zip8internal25PrepareMemoryForUnzippingERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = alloca %struct.zlib_filefunc_def_s, align 8
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %38, label %12

12:                                               ; preds = %1
  %13 = tail call noalias i8* @malloc(i64 24) #9
  %14 = icmp eq i8* %13, null
  br i1 %14, label %38, label %15

15:                                               ; preds = %12
  br i1 %6, label %16, label %20

16:                                               ; preds = %15
  %17 = bitcast %"class.std::__1::basic_string"* %0 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast i8* %13 to i64*
  store i64 %18, i64* %19, align 8
  br label %22

20:                                               ; preds = %15
  %21 = bitcast i8* %13 to %"class.std::__1::basic_string"**
  store %"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"** %21, align 8
  br label %22

22:                                               ; preds = %16, %20
  %23 = phi i64 [ %8, %16 ], [ %9, %20 ]
  %24 = getelementptr inbounds i8, i8* %13, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %13, i64 16
  %27 = bitcast i8* %26 to i64*
  store i64 0, i64* %27, align 8
  %28 = bitcast %struct.zlib_filefunc_def_s* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %28) #9
  %29 = getelementptr inbounds %struct.zlib_filefunc_def_s, %struct.zlib_filefunc_def_s* %2, i64 0, i32 0
  store i8* (i8*, i8*, i32)* @_ZN12_GLOBAL__N_113OpenZipBufferEPvPKci, i8* (i8*, i8*, i32)** %29, align 8
  %30 = getelementptr inbounds %struct.zlib_filefunc_def_s, %struct.zlib_filefunc_def_s* %2, i64 0, i32 1
  %31 = bitcast i64 (i8*, i8*, i8*, i64)** %30 to <2 x i64 (i8*, i8*, i8*, i64)*>*
  store <2 x i64 (i8*, i8*, i8*, i64)*> <i64 (i8*, i8*, i8*, i64)* @_ZN12_GLOBAL__N_113ReadZipBufferEPvS0_S0_m, i64 (i8*, i8*, i8*, i64)* @_ZN12_GLOBAL__N_114WriteZipBufferEPvS0_PKvm>, <2 x i64 (i8*, i8*, i8*, i64)*>* %31, align 8
  %32 = getelementptr inbounds %struct.zlib_filefunc_def_s, %struct.zlib_filefunc_def_s* %2, i64 0, i32 3
  store i64 (i8*, i8*)* @_ZN12_GLOBAL__N_120GetOffsetOfZipBufferEPvS0_, i64 (i8*, i8*)** %32, align 8
  %33 = getelementptr inbounds %struct.zlib_filefunc_def_s, %struct.zlib_filefunc_def_s* %2, i64 0, i32 4
  store i64 (i8*, i8*, i64, i32)* @_ZN12_GLOBAL__N_113SeekZipBufferEPvS0_mi, i64 (i8*, i8*, i64, i32)** %33, align 8
  %34 = getelementptr inbounds %struct.zlib_filefunc_def_s, %struct.zlib_filefunc_def_s* %2, i64 0, i32 5
  %35 = bitcast i32 (i8*, i8*)** %34 to <2 x i32 (i8*, i8*)*>*
  store <2 x i32 (i8*, i8*)*> <i32 (i8*, i8*)* @_ZN12_GLOBAL__N_114CloseZipBufferEPvS0_, i32 (i8*, i8*)* @_ZN12_GLOBAL__N_119GetErrorOfZipBufferEPvS0_>, <2 x i32 (i8*, i8*)*>* %35, align 8
  %36 = getelementptr inbounds %struct.zlib_filefunc_def_s, %struct.zlib_filefunc_def_s* %2, i64 0, i32 7
  store i8* %13, i8** %36, align 8
  %37 = call i8* @unzOpen2(i8* null, %struct.zlib_filefunc_def_s* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %28) #9
  br label %38

38:                                               ; preds = %22, %12, %1
  %39 = phi i8* [ null, %1 ], [ %37, %22 ], [ null, %12 ]
  ret i8* %39
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i8* @_ZN12_GLOBAL__N_113OpenZipBufferEPvPKci(i8*, i8* nocapture readnone, i32) #4 {
  %4 = and i32 %2, 3
  %5 = icmp ne i32 %4, 1
  %6 = icmp eq i8* %0, null
  %7 = or i1 %6, %5
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = bitcast i8* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %20, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds i8, i8* %0, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds i8, i8* %0, i64 16
  %19 = bitcast i8* %18 to i64*
  store i64 0, i64* %19, align 8
  br label %20

20:                                               ; preds = %3, %17, %12, %8
  %21 = phi i8* [ null, %3 ], [ %0, %17 ], [ null, %12 ], [ null, %8 ]
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZN12_GLOBAL__N_113ReadZipBufferEPvS0_S0_m(i8*, i8* nocapture readnone, i8* nocapture, i64) #0 {
  %5 = getelementptr inbounds i8, i8* %0, i64 8
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %0, i64 16
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %7, %10
  %12 = icmp eq i8* %0, null
  br i1 %12, label %25, label %13

13:                                               ; preds = %4
  %14 = bitcast i8* %0 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp ne i8* %15, null
  %17 = icmp ne i64 %11, 0
  %18 = and i1 %17, %16
  br i1 %18, label %19, label %25

19:                                               ; preds = %13
  %20 = icmp ult i64 %11, %3
  %21 = select i1 %20, i64 %11, i64 %3
  %22 = getelementptr inbounds i8, i8* %15, i64 %10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %22, i64 %21, i1 false)
  %23 = load i64, i64* %9, align 8
  %24 = add i64 %23, %21
  store i64 %24, i64* %9, align 8
  br label %25

25:                                               ; preds = %13, %4, %19
  %26 = phi i64 [ %21, %19 ], [ 0, %4 ], [ 0, %13 ]
  ret i64 %26
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i64 @_ZN12_GLOBAL__N_114WriteZipBufferEPvS0_PKvm(i8* nocapture readnone, i8* nocapture readnone, i8* nocapture readnone, i64) #5 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZN12_GLOBAL__N_120GetOffsetOfZipBufferEPvS0_(i8* readonly, i8* nocapture readnone) #6 {
  %3 = icmp eq i8* %0, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %0, i64 16
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  br label %8

8:                                                ; preds = %2, %4
  %9 = phi i64 [ %7, %4 ], [ -1, %2 ]
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZN12_GLOBAL__N_113SeekZipBufferEPvS0_mi(i8*, i8* nocapture readnone, i64, i32) #0 {
  %5 = icmp eq i8* %0, null
  br i1 %5, label %32, label %6

6:                                                ; preds = %4
  switch i32 %3, label %32 [
    i32 1, label %7
    i32 2, label %17
    i32 0, label %24
  ]

7:                                                ; preds = %6
  %8 = getelementptr inbounds i8, i8* %0, i64 16
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, %2
  %12 = getelementptr inbounds i8, i8* %0, i64 8
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %11
  %16 = select i1 %15, i64 %14, i64 %11
  store i64 %16, i64* %9, align 8
  br label %32

17:                                               ; preds = %6
  %18 = getelementptr inbounds i8, i8* %0, i64 8
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = tail call i64 @llvm.usub.sat.i64(i64 %20, i64 %2)
  %22 = getelementptr inbounds i8, i8* %0, i64 16
  %23 = bitcast i8* %22 to i64*
  store i64 %21, i64* %23, align 8
  br label %32

24:                                               ; preds = %6
  %25 = getelementptr inbounds i8, i8* %0, i64 8
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp ugt i64 %27, %2
  %29 = select i1 %28, i64 %2, i64 %27
  %30 = getelementptr inbounds i8, i8* %0, i64 16
  %31 = bitcast i8* %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %6, %4, %24, %17, %7
  %33 = phi i64 [ 0, %7 ], [ 0, %17 ], [ 0, %24 ], [ -1, %4 ], [ -1, %6 ]
  ret i64 %33
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_114CloseZipBufferEPvS0_(i8*, i8* nocapture readnone) #0 {
  %3 = icmp eq i8* %0, null
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void @free(i8* nonnull %0) #9
  br label %5

5:                                                ; preds = %2, %4
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_119GetErrorOfZipBufferEPvS0_(i8* nocapture readnone, i8* nocapture readnone) #5 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN3zip8internal14OpenForZippingERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #0 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %10 = select i1 %6, i8* %8, i8* %9
  %11 = tail call i8* @zipOpen2(i8* %10, i32 %1, i8** null, %struct.zlib_filefunc_def_s* null) #9
  ret i8* %11
}

declare i8* @zipOpen2(i8*, i32, i8**, %struct.zlib_filefunc_def_s*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN3zip8internal16OpenFdForZippingEii(i32, i32) local_unnamed_addr #0 {
  %3 = alloca %struct.zlib_filefunc_def_s, align 8
  %4 = bitcast %struct.zlib_filefunc_def_s* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 64, i1 false)
  call void @fill_fopen_filefunc(%struct.zlib_filefunc_def_s* nonnull %3) #9
  %5 = getelementptr inbounds %struct.zlib_filefunc_def_s, %struct.zlib_filefunc_def_s* %3, i64 0, i32 0
  store i8* (i8*, i8*, i32)* @_ZN12_GLOBAL__N_114FdOpenFileFuncEPvPKci, i8* (i8*, i8*, i32)** %5, align 8
  %6 = getelementptr inbounds %struct.zlib_filefunc_def_s, %struct.zlib_filefunc_def_s* %3, i64 0, i32 5
  store i32 (i8*, i8*)* @_ZN12_GLOBAL__N_115FdCloseFileFuncEPvS0_, i32 (i8*, i8*)** %6, align 8
  %7 = call noalias i8* @malloc(i64 4) #9
  %8 = bitcast i8* %7 to i32*
  store i32 %0, i32* %8, align 4
  %9 = getelementptr inbounds %struct.zlib_filefunc_def_s, %struct.zlib_filefunc_def_s* %3, i64 0, i32 7
  store i8* %7, i8** %9, align 8
  %10 = call i8* @zipOpen2(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %1, i8** null, %struct.zlib_filefunc_def_s* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #9
  ret i8* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3zip8internal19ZipOpenNewFileInZipEPvRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN4base4TimeE(i8*, %"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #0 {
  %4 = alloca %"struct.base::Time::Exploded", align 4
  %5 = alloca %"class.base::Time", align 8
  %6 = alloca %struct.zip_fileinfo, align 16
  %7 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %5, i64 0, i32 0, i32 0
  store i64 %2, i64* %7, align 8
  %8 = bitcast %struct.zip_fileinfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #9
  %9 = bitcast %"struct.base::Time::Exploded"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #9, !noalias !2
  %10 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %4, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %9, i8 -86, i64 32, i1 false) #9, !noalias !2
  call void @_ZNK4base4Time7ExplodeEbPNS0_8ExplodedE(%"class.base::Time"* nonnull %5, i1 zeroext true, %"struct.base::Time::Exploded"* nonnull %4) #9, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 0, i64 48, i1 false) #9, !alias.scope !2
  %11 = load i32, i32* %10, align 4, !noalias !2
  %12 = icmp sgt i32 %11, 1979
  br i1 %12, label %13, label %24

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %4, i64 0, i32 3
  %15 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %4, i64 0, i32 1
  %16 = getelementptr inbounds %struct.zip_fileinfo, %struct.zip_fileinfo* %6, i64 0, i32 0, i32 5
  store i32 %11, i32* %16, align 4, !alias.scope !2
  %17 = load i32, i32* %15, align 4, !noalias !2
  %18 = add nsw i32 %17, -1
  %19 = getelementptr inbounds %struct.zip_fileinfo, %struct.zip_fileinfo* %6, i64 0, i32 0, i32 4
  store i32 %18, i32* %19, align 16, !alias.scope !2
  %20 = bitcast i32* %14 to <4 x i32>*
  %21 = load <4 x i32>, <4 x i32>* %20, align 4, !noalias !2
  %22 = shufflevector <4 x i32> %21, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %23 = bitcast %struct.zip_fileinfo* %6 to <4 x i32>*
  store <4 x i32> %22, <4 x i32>* %23, align 16, !alias.scope !2
  br label %24

24:                                               ; preds = %3, %13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #9, !noalias !2
  %25 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %32 = select i1 %28, i8* %30, i8* %31
  %33 = call i32 @zipOpenNewFileInZip4(i8* %0, i8* %32, %struct.zip_fileinfo* nonnull %6, i8* null, i32 0, i8* null, i32 0, i8* null, i32 8, i32 -1, i32 0, i32 -15, i32 8, i32 0, i8* null, i64 0, i64 0, i64 2048) #9
  %34 = icmp eq i32 %33, 0
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #9
  ret i1 %34
}

declare i32 @zipOpenNewFileInZip4(i8*, i8*, %struct.zip_fileinfo*, i8*, i32, i8*, i32, i8*, i32, i32, i32, i32, i32, i32, i8*, i64, i64, i64) local_unnamed_addr #2

declare void @fill_fopen_filefunc(%struct.zlib_filefunc_def_s*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal noalias i8* @_ZN12_GLOBAL__N_114FdOpenFileFuncEPvPKci(i8* nocapture readonly, i8* readnone, i32) #0 {
  %4 = and i32 %2, 3
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %13, label %6

6:                                                ; preds = %3
  %7 = and i32 %2, 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %6
  %10 = and i32 %2, 8
  %11 = icmp eq i32 %10, 0
  %12 = select i1 %11, i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0)
  br label %13

13:                                               ; preds = %9, %6, %3
  %14 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), %3 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), %6 ], [ %12, %9 ]
  %15 = icmp ne i8* %1, null
  %16 = icmp ne i8* %14, null
  %17 = and i1 %15, %16
  br i1 %17, label %18, label %26

18:                                               ; preds = %13
  %19 = bitcast i8* %0 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = tail call i32 @dup(i32 %20) #9
  %22 = icmp eq i32 %21, -1
  br i1 %22, label %26, label %23

23:                                               ; preds = %18
  %24 = tail call %struct._IO_FILE* @fdopen(i32 %21, i8* nonnull %14) #9
  %25 = bitcast %struct._IO_FILE* %24 to i8*
  br label %26

26:                                               ; preds = %23, %18, %13
  %27 = phi i8* [ null, %13 ], [ %25, %23 ], [ null, %18 ]
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_115FdCloseFileFuncEPvS0_(i8* nocapture, i8* nocapture) #0 {
  %3 = bitcast i8* %1 to %struct._IO_FILE*
  %4 = tail call i32 @fclose(%struct._IO_FILE* %3)
  tail call void @free(i8* %0) #9
  ret i32 0
}

; Function Attrs: nounwind
declare i32 @dup(i32) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare noalias %struct._IO_FILE* @fdopen(i32, i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNK4base4Time7ExplodeEbPNS0_8ExplodedE(%"class.base::Time"*, i1 zeroext, %"struct.base::Time::Exploded"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.usub.sat.i64(i64, i64) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN12_GLOBAL__N_117TimeToZipFileInfoERKN4base4TimeE: argument 0"}
!4 = distinct !{!4, !"_ZN12_GLOBAL__N_117TimeToZipFileInfoERKN4base4TimeE"}
