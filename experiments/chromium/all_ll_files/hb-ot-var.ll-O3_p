; ModuleID = '../../third_party/harfbuzz-ng/src/src/hb-ot-var.cc'
source_filename = "../../third_party/harfbuzz-ng/src/src/hb-ot-var.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.hb_face_t = type { %struct.hb_object_header_t, %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)*, i8*, void (i8*)*, i32, %struct.hb_atomic_int_t, %struct.hb_atomic_int_t, %struct.hb_shaper_object_dataset_t, %struct.hb_ot_face_t, %struct.hb_atomic_ptr_t.126 }
%struct.hb_object_header_t = type { %struct.hb_reference_count_t, %struct.hb_atomic_int_t, %struct.hb_atomic_ptr_t }
%struct.hb_reference_count_t = type { %struct.hb_atomic_int_t }
%struct.hb_atomic_ptr_t = type { %struct.hb_user_data_array_t* }
%struct.hb_user_data_array_t = type { %struct.hb_mutex_t, %struct.hb_lockable_set_t }
%struct.hb_mutex_t = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.hb_lockable_set_t = type { %struct.hb_vector_t }
%struct.hb_vector_t = type { i32, i32, %"struct.hb_user_data_array_t::hb_user_data_item_t"* }
%"struct.hb_user_data_array_t::hb_user_data_item_t" = type { %struct.hb_user_data_key_t*, i8*, void (i8*)* }
%struct.hb_user_data_key_t = type { i8 }
%struct.hb_blob_t = type { %struct.hb_object_header_t, i8*, i32, i32, i8*, void (i8*)* }
%struct.hb_atomic_int_t = type { i32 }
%struct.hb_shaper_object_dataset_t = type { %struct.hb_face_t*, %struct.hb_shaper_lazy_loader_t }
%struct.hb_shaper_lazy_loader_t = type { %struct.hb_lazy_loader_t }
%struct.hb_lazy_loader_t = type { %struct.hb_atomic_ptr_t.0 }
%struct.hb_atomic_ptr_t.0 = type { %struct.hb_ot_face_data_t* }
%struct.hb_ot_face_data_t = type opaque
%struct.hb_ot_face_t = type { %struct.hb_face_t*, %struct.hb_table_lazy_loader_t, %struct.hb_face_lazy_loader_t, %struct.hb_table_lazy_loader_t.6, %struct.hb_face_lazy_loader_t.9, %struct.hb_table_lazy_loader_t.13, %struct.hb_face_lazy_loader_t.16, %struct.hb_face_lazy_loader_t.20, %struct.hb_table_lazy_loader_t.24, %struct.hb_face_lazy_loader_t.27, %struct.hb_table_lazy_loader_t.31, %struct.hb_face_lazy_loader_t.34, %struct.hb_face_lazy_loader_t.38, %struct.hb_face_lazy_loader_t.42, %struct.hb_face_lazy_loader_t.46, %struct.hb_table_lazy_loader_t.50, %struct.hb_table_lazy_loader_t.53, %struct.hb_table_lazy_loader_t.56, %struct.hb_face_lazy_loader_t.59, %struct.hb_table_lazy_loader_t.63, %struct.hb_table_lazy_loader_t.66, %struct.hb_face_lazy_loader_t.69, %struct.hb_face_lazy_loader_t.73, %struct.hb_face_lazy_loader_t.77, %struct.hb_table_lazy_loader_t.81, %struct.hb_table_lazy_loader_t.84, %struct.hb_table_lazy_loader_t.87, %struct.hb_table_lazy_loader_t.90, %struct.hb_table_lazy_loader_t.93, %struct.hb_table_lazy_loader_t.96, %struct.hb_table_lazy_loader_t.99, %struct.hb_table_lazy_loader_t.102, %struct.hb_table_lazy_loader_t.105, %struct.hb_table_lazy_loader_t.108, %struct.hb_face_lazy_loader_t.111, %struct.hb_face_lazy_loader_t.115, %struct.hb_face_lazy_loader_t.119, %struct.hb_table_lazy_loader_t.123 }
%struct.hb_table_lazy_loader_t = type { %struct.hb_lazy_loader_t.1 }
%struct.hb_lazy_loader_t.1 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_atomic_ptr_t.2 = type { %struct.hb_blob_t* }
%struct.hb_face_lazy_loader_t = type { %struct.hb_lazy_loader_t.3 }
%struct.hb_lazy_loader_t.3 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_atomic_ptr_t.5 = type { %"struct.OT::cmap_accelerator_t"* }
%"struct.OT::cmap_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.6 = type { %struct.hb_lazy_loader_t.7 }
%struct.hb_lazy_loader_t.7 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.9 = type { %struct.hb_lazy_loader_t.10 }
%struct.hb_lazy_loader_t.10 = type { %struct.hb_atomic_ptr_t.12 }
%struct.hb_atomic_ptr_t.12 = type { %"struct.OT::hmtx_accelerator_t"* }
%"struct.OT::hmtx_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.13 = type { %struct.hb_lazy_loader_t.14 }
%struct.hb_lazy_loader_t.14 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.16 = type { %struct.hb_lazy_loader_t.17 }
%struct.hb_lazy_loader_t.17 = type { %struct.hb_atomic_ptr_t.19 }
%struct.hb_atomic_ptr_t.19 = type { %"struct.OT::post_accelerator_t"* }
%"struct.OT::post_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.20 = type { %struct.hb_lazy_loader_t.21 }
%struct.hb_lazy_loader_t.21 = type { %struct.hb_atomic_ptr_t.23 }
%struct.hb_atomic_ptr_t.23 = type { %"struct.OT::name_accelerator_t"* }
%"struct.OT::name_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.24 = type { %struct.hb_lazy_loader_t.25 }
%struct.hb_lazy_loader_t.25 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.27 = type { %struct.hb_lazy_loader_t.28 }
%struct.hb_lazy_loader_t.28 = type { %struct.hb_atomic_ptr_t.30 }
%struct.hb_atomic_ptr_t.30 = type { %"struct.OT::meta_accelerator_t"* }
%"struct.OT::meta_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.31 = type { %struct.hb_lazy_loader_t.32 }
%struct.hb_lazy_loader_t.32 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.34 = type { %struct.hb_lazy_loader_t.35 }
%struct.hb_lazy_loader_t.35 = type { %struct.hb_atomic_ptr_t.37 }
%struct.hb_atomic_ptr_t.37 = type { %"struct.OT::vmtx_accelerator_t"* }
%"struct.OT::vmtx_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.38 = type { %struct.hb_lazy_loader_t.39 }
%struct.hb_lazy_loader_t.39 = type { %struct.hb_atomic_ptr_t.41 }
%struct.hb_atomic_ptr_t.41 = type { %"struct.OT::glyf_accelerator_t"* }
%"struct.OT::glyf_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.42 = type { %struct.hb_lazy_loader_t.43 }
%struct.hb_lazy_loader_t.43 = type { %struct.hb_atomic_ptr_t.45 }
%struct.hb_atomic_ptr_t.45 = type { %"struct.OT::cff1_accelerator_t"* }
%"struct.OT::cff1_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.46 = type { %struct.hb_lazy_loader_t.47 }
%struct.hb_lazy_loader_t.47 = type { %struct.hb_atomic_ptr_t.49 }
%struct.hb_atomic_ptr_t.49 = type { %"struct.OT::cff2_accelerator_t"* }
%"struct.OT::cff2_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.50 = type { %struct.hb_lazy_loader_t.51 }
%struct.hb_lazy_loader_t.51 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.53 = type { %struct.hb_lazy_loader_t.54 }
%struct.hb_lazy_loader_t.54 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.56 = type { %struct.hb_lazy_loader_t.57 }
%struct.hb_lazy_loader_t.57 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.59 = type { %struct.hb_lazy_loader_t.60 }
%struct.hb_lazy_loader_t.60 = type { %struct.hb_atomic_ptr_t.62 }
%struct.hb_atomic_ptr_t.62 = type { %"struct.OT::gvar_accelerator_t"* }
%"struct.OT::gvar_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.63 = type { %struct.hb_lazy_loader_t.64 }
%struct.hb_lazy_loader_t.64 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.66 = type { %struct.hb_lazy_loader_t.67 }
%struct.hb_lazy_loader_t.67 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.69 = type { %struct.hb_lazy_loader_t.70 }
%struct.hb_lazy_loader_t.70 = type { %struct.hb_atomic_ptr_t.72 }
%struct.hb_atomic_ptr_t.72 = type { %"struct.OT::GDEF_accelerator_t"* }
%"struct.OT::GDEF_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.73 = type { %struct.hb_lazy_loader_t.74 }
%struct.hb_lazy_loader_t.74 = type { %struct.hb_atomic_ptr_t.76 }
%struct.hb_atomic_ptr_t.76 = type { %"struct.OT::GSUB_accelerator_t"* }
%"struct.OT::GSUB_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.77 = type { %struct.hb_lazy_loader_t.78 }
%struct.hb_lazy_loader_t.78 = type { %struct.hb_atomic_ptr_t.80 }
%struct.hb_atomic_ptr_t.80 = type { %"struct.OT::GPOS_accelerator_t"* }
%"struct.OT::GPOS_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.81 = type { %struct.hb_lazy_loader_t.82 }
%struct.hb_lazy_loader_t.82 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.84 = type { %struct.hb_lazy_loader_t.85 }
%struct.hb_lazy_loader_t.85 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.87 = type { %struct.hb_lazy_loader_t.88 }
%struct.hb_lazy_loader_t.88 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.90 = type { %struct.hb_lazy_loader_t.91 }
%struct.hb_lazy_loader_t.91 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.93 = type { %struct.hb_lazy_loader_t.94 }
%struct.hb_lazy_loader_t.94 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.96 = type { %struct.hb_lazy_loader_t.97 }
%struct.hb_lazy_loader_t.97 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.99 = type { %struct.hb_lazy_loader_t.100 }
%struct.hb_lazy_loader_t.100 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.102 = type { %struct.hb_lazy_loader_t.103 }
%struct.hb_lazy_loader_t.103 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.105 = type { %struct.hb_lazy_loader_t.106 }
%struct.hb_lazy_loader_t.106 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.108 = type { %struct.hb_lazy_loader_t.109 }
%struct.hb_lazy_loader_t.109 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.111 = type { %struct.hb_lazy_loader_t.112 }
%struct.hb_lazy_loader_t.112 = type { %struct.hb_atomic_ptr_t.114 }
%struct.hb_atomic_ptr_t.114 = type { %"struct.OT::CBDT_accelerator_t"* }
%"struct.OT::CBDT_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.115 = type { %struct.hb_lazy_loader_t.116 }
%struct.hb_lazy_loader_t.116 = type { %struct.hb_atomic_ptr_t.118 }
%struct.hb_atomic_ptr_t.118 = type { %"struct.OT::sbix_accelerator_t"* }
%"struct.OT::sbix_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.119 = type { %struct.hb_lazy_loader_t.120 }
%struct.hb_lazy_loader_t.120 = type { %struct.hb_atomic_ptr_t.122 }
%struct.hb_atomic_ptr_t.122 = type { %"struct.OT::SVG_accelerator_t"* }
%"struct.OT::SVG_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.123 = type { %struct.hb_lazy_loader_t.124 }
%struct.hb_lazy_loader_t.124 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_atomic_ptr_t.126 = type { %"struct.hb_face_t::plan_node_t"* }
%"struct.hb_face_t::plan_node_t" = type { %struct.hb_shape_plan_t*, %"struct.hb_face_t::plan_node_t"* }
%struct.hb_shape_plan_t = type { %struct.hb_object_header_t, %struct.hb_face_t*, %struct.hb_shape_plan_key_t, %struct.hb_ot_shape_plan_t }
%struct.hb_shape_plan_key_t = type { %struct.hb_segment_properties_t, %struct.hb_feature_t*, i32, %struct.hb_ot_shape_plan_key_t, i32 (%struct.hb_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*, %struct.hb_feature_t*, i32)*, i8* }
%struct.hb_segment_properties_t = type { i32, i32, %struct.hb_language_impl_t*, i8*, i8* }
%struct.hb_language_impl_t = type opaque
%struct.hb_feature_t = type { i32, i32, i32, i32 }
%struct.hb_ot_shape_plan_key_t = type { [2 x i32] }
%struct.hb_font_t = type { %struct.hb_object_header_t, %struct.hb_font_t*, %struct.hb_face_t*, i32, i32, i64, i64, i32, i32, float, i32, i32*, float*, %struct.hb_font_funcs_t*, i8*, void (i8*)*, %struct.hb_shaper_object_dataset_t.128 }
%struct.hb_font_funcs_t = type { %struct.hb_object_header_t, %struct.anon, %struct.anon.127, %"union.hb_font_funcs_t::get_t" }
%struct.anon = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.anon.127 = type { void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)* }
%"union.hb_font_funcs_t::get_t" = type { %"struct.hb_font_funcs_t::get_t::get_funcs_t" }
%"struct.hb_font_funcs_t::get_t::get_funcs_t" = type { i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*)*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, %struct.hb_glyph_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i8*, i32, i32*, i8*)* }
%struct.hb_font_extents_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hb_glyph_extents_t = type { i32, i32, i32, i32 }
%struct.hb_shaper_object_dataset_t.128 = type { %struct.hb_font_t*, %struct.hb_shaper_lazy_loader_t.129 }
%struct.hb_shaper_lazy_loader_t.129 = type { %struct.hb_lazy_loader_t.130 }
%struct.hb_lazy_loader_t.130 = type { %struct.hb_atomic_ptr_t.132 }
%struct.hb_atomic_ptr_t.132 = type { %struct.hb_ot_font_data_t* }
%struct.hb_ot_font_data_t = type opaque
%struct.hb_buffer_t = type { %struct.hb_object_header_t, %struct.hb_unicode_funcs_t*, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hb_segment_properties_t, i8, i8, i8, i32, i32, i32, i32, %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t*, %struct.hb_glyph_position_t*, i32, [2 x [5 x i32]], [2 x i32], i32 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, i8*)*, i8*, void (i8*)* }
%struct.hb_unicode_funcs_t = type { %struct.hb_object_header_t, %struct.hb_unicode_funcs_t*, %struct.anon.133, %struct.anon.134, %struct.anon.135 }
%struct.anon.133 = type { i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i8*)* }
%struct.anon.134 = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.anon.135 = type { void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)* }
%struct.hb_glyph_info_t = type { i32, i32, i32, %union._hb_var_int_t, %union._hb_var_int_t }
%union._hb_var_int_t = type { i32 }
%struct.hb_glyph_position_t = type { i32, i32, i32, i32, %union._hb_var_int_t }
%struct.hb_ot_shape_plan_t = type <{ %struct.hb_segment_properties_t, %struct.hb_ot_complex_shaper_t*, %struct.hb_ot_map_t, %struct.hb_aat_map_t, i8*, i32, i32, i32, i32, i32, i32, i16, [6 x i8] }>
%struct.hb_ot_complex_shaper_t = type opaque
%struct.hb_ot_map_t = type { [2 x i32], [2 x i8], i32, %struct.hb_sorted_vector_t, [2 x %struct.hb_vector_t.137], [2 x %struct.hb_vector_t.138] }
%struct.hb_sorted_vector_t = type { %struct.hb_vector_t.136 }
%struct.hb_vector_t.136 = type { i32, i32, %"struct.hb_ot_map_t::feature_map_t"* }
%"struct.hb_ot_map_t::feature_map_t" = type { i32, [2 x i32], [2 x i32], i32, i32, i32, i8 }
%struct.hb_vector_t.137 = type { i32, i32, %"struct.hb_ot_map_t::lookup_map_t"* }
%"struct.hb_ot_map_t::lookup_map_t" = type { i16, i8, i32 }
%struct.hb_vector_t.138 = type { i32, i32, %"struct.hb_ot_map_t::stage_map_t"* }
%"struct.hb_ot_map_t::stage_map_t" = type { i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* }
%struct.hb_aat_map_t = type { %struct.hb_vector_t.139 }
%struct.hb_vector_t.139 = type { i32, i32, i32* }
%"struct.OT::fvar" = type { %"struct.OT::FixedVersion", %"struct.OT::OffsetTo", %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::IntType" }
%"struct.OT::FixedVersion" = type { %"struct.OT::IntType", %"struct.OT::IntType" }
%"struct.OT::OffsetTo" = type { %"struct.OT::Offset" }
%"struct.OT::Offset" = type { %"struct.OT::IntType" }
%"struct.OT::IntType" = type { %struct.BEInt }
%struct.BEInt = type { [2 x i8] }
%struct.hb_ot_var_axis_t = type { i32, i32, float, float, float }
%"struct.OT::AxisRecord" = type { %"struct.OT::Tag", %"struct.OT::HBFixed", %"struct.OT::HBFixed", %"struct.OT::HBFixed", %"struct.OT::IntType", %"struct.OT::Index" }
%"struct.OT::Tag" = type { %"struct.OT::IntType.142" }
%"struct.OT::IntType.142" = type { %struct.BEInt.143 }
%struct.BEInt.143 = type { [4 x i8] }
%"struct.OT::HBFixed" = type { %"struct.OT::IntType.144" }
%"struct.OT::IntType.144" = type { %struct.BEInt.145 }
%struct.BEInt.145 = type { [4 x i8] }
%"struct.OT::Index" = type { %"struct.OT::IntType" }
%struct.hb_ot_var_axis_info_t = type { i32, i32, i32, i32, float, float, float, i32 }
%struct.hb_variation_t = type { i32, float }
%"struct.OT::avar" = type { %"struct.OT::FixedVersion", %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::SegmentMaps" }
%"struct.OT::SegmentMaps" = type { %"struct.OT::ArrayOf" }
%"struct.OT::ArrayOf" = type { %"struct.OT::IntType", [1 x %"struct.OT::AxisValueMap"] }
%"struct.OT::AxisValueMap" = type { [2 x %"struct.OT::F2DOT14"] }
%"struct.OT::F2DOT14" = type { %"struct.OT::IntType.140" }
%"struct.OT::IntType.140" = type { %struct.BEInt.141 }
%struct.BEInt.141 = type { [2 x i8] }
%struct.hb_sanitize_context_t = type <{ %struct.hb_dispatch_context_t, [4 x i8], i8*, i8*, i32, i32, i8, [3 x i8], i32, %struct.hb_blob_t*, i32, i8, [3 x i8] }>
%struct.hb_dispatch_context_t = type { i32 }
%"struct.OT::InstanceRecord" = type { %"struct.OT::Index", %"struct.OT::IntType", %"struct.OT::UnsizedArrayOf" }
%"struct.OT::UnsizedArrayOf" = type { [1 x %"struct.OT::HBFixed"] }

$_ZNK2OT4fvar19get_axes_deprecatedEjPjP16hb_ot_var_axis_t = comdat any

$_ZNK2OT4fvar20find_axis_deprecatedEjPjP16hb_ot_var_axis_t = comdat any

$_ZNK2OT4fvar14get_axis_infosEjPjP21hb_ot_var_axis_info_t = comdat any

$_ZNK2OT4fvar14find_axis_infoEjP21hb_ot_var_axis_info_t = comdat any

$_ZNK2OT4fvar20normalize_axis_valueEjf = comdat any

$_ZNK2OT11SegmentMaps3mapEijj = comdat any

$_ZNK16hb_lazy_loader_tIN2OT4fvarE22hb_table_lazy_loader_tIS1_Lj16EE9hb_face_tLj16E9hb_blob_tE10get_storedEv = comdat any

$_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4fvarEEEP9hb_blob_tS4_ = comdat any

$_ZNK2OT4fvar8sanitizeEP21hb_sanitize_context_t = comdat any

$_ZNK16hb_lazy_loader_tIN2OT4avarE22hb_table_lazy_loader_tIS1_Lj17EE9hb_face_tLj17E9hb_blob_tE10get_storedEv = comdat any

$_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4avarEEEP9hb_blob_tS4_ = comdat any

$_ZNK2OT4avar8sanitizeEP21hb_sanitize_context_t = comdat any

@_hb_NullPool = external hidden constant [48 x i64], align 16

; Function Attrs: nounwind ssp uwtable
define hidden i32 @hb_ot_var_has_data(%struct.hb_face_t*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 8, i32 16, i32 0
  %3 = tail call %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN2OT4fvarE22hb_table_lazy_loader_tIS1_Lj16EE9hb_face_tLj16E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.54* %2) #4
  %4 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %3, i64 0, i32 1
  %5 = bitcast i8** %4 to %"struct.OT::fvar"**
  %6 = load %"struct.OT::fvar"*, %"struct.OT::fvar"** %5, align 8
  %7 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %3, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 16
  %10 = select i1 %9, %"struct.OT::fvar"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::fvar"*), %"struct.OT::fvar"* %6
  %11 = bitcast %"struct.OT::fvar"* %10 to i16*
  %12 = load i16, i16* %11, align 1
  %13 = tail call i16 @llvm.bswap.i16(i16 %12) #4
  %14 = zext i16 %13 to i32
  %15 = shl nuw i32 %14, 16
  %16 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %10, i64 0, i32 0, i32 1
  %17 = bitcast %"struct.OT::IntType"* %16 to i16*
  %18 = load i16, i16* %17, align 1
  %19 = tail call i16 @llvm.bswap.i16(i16 %18) #4
  %20 = zext i16 %19 to i32
  %21 = or i32 %15, %20
  %22 = icmp ne i32 %21, 0
  %23 = zext i1 %22 to i32
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @hb_ot_var_get_axis_count(%struct.hb_face_t*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 8, i32 16, i32 0
  %3 = tail call %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN2OT4fvarE22hb_table_lazy_loader_tIS1_Lj16EE9hb_face_tLj16E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.54* %2) #4
  %4 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %3, i64 0, i32 1
  %5 = bitcast i8** %4 to %"struct.OT::fvar"**
  %6 = load %"struct.OT::fvar"*, %"struct.OT::fvar"** %5, align 8
  %7 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %3, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 16
  %10 = select i1 %9, %"struct.OT::fvar"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::fvar"*), %"struct.OT::fvar"* %6
  %11 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %10, i64 0, i32 3
  %12 = bitcast %"struct.OT::IntType"* %11 to i16*
  %13 = load i16, i16* %12, align 1
  %14 = tail call i16 @llvm.bswap.i16(i16 %13) #4
  %15 = zext i16 %14 to i32
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @hb_ot_var_get_axes(%struct.hb_face_t*, i32, i32*, %struct.hb_ot_var_axis_t*) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 8, i32 16, i32 0
  %6 = tail call %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN2OT4fvarE22hb_table_lazy_loader_tIS1_Lj16EE9hb_face_tLj16E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.54* %5) #4
  %7 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %6, i64 0, i32 1
  %8 = bitcast i8** %7 to %"struct.OT::fvar"**
  %9 = load %"struct.OT::fvar"*, %"struct.OT::fvar"** %8, align 8
  %10 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %6, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = icmp ult i32 %11, 16
  %13 = select i1 %12, %"struct.OT::fvar"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::fvar"*), %"struct.OT::fvar"* %9
  %14 = tail call i32 @_ZNK2OT4fvar19get_axes_deprecatedEjPjP16hb_ot_var_axis_t(%"struct.OT::fvar"* %13, i32 %1, i32* %2, %struct.hb_ot_var_axis_t* %3)
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK2OT4fvar19get_axes_deprecatedEjPjP16hb_ot_var_axis_t(%"struct.OT::fvar"*, i32, i32*, %struct.hb_ot_var_axis_t*) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i32* %2, null
  br i1 %5, label %127, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %0, i64 0, i32 1
  %8 = bitcast %"struct.OT::OffsetTo"* %7 to i16*
  %9 = load i16, i16* %8, align 1
  %10 = icmp eq i16 %9, 0
  %11 = tail call i16 @llvm.bswap.i16(i16 %9) #4
  %12 = zext i16 %11 to i64
  %13 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %12
  %14 = bitcast i8* %13 to %"struct.OT::AxisRecord"*
  %15 = select i1 %10, %"struct.OT::AxisRecord"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::AxisRecord"*), %"struct.OT::AxisRecord"* %14, !prof !2
  %16 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %0, i64 0, i32 3
  %17 = bitcast %"struct.OT::IntType"* %16 to i16*
  %18 = load i16, i16* %17, align 1
  %19 = tail call i16 @llvm.bswap.i16(i16 %18) #4
  %20 = zext i16 %19 to i32
  %21 = tail call i32 @llvm.usub.sat.i32(i32 %20, i32 %1) #4
  %22 = load i32, i32* %2, align 4
  %23 = icmp ugt i32 %21, %22
  %24 = select i1 %23, i32 %22, i32 %21
  store i32 %24, i32* %2, align 4
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %15, i64 %25
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %127, label %28

28:                                               ; preds = %6
  %29 = zext i32 %24 to i64
  br label %30

30:                                               ; preds = %28, %30
  %31 = phi i64 [ 0, %28 ], [ %125, %30 ]
  %32 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %26, i64 %31
  %33 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = shl nuw i32 %35, 24
  %37 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = shl nuw nsw i32 %39, 16
  %41 = or i32 %40, %36
  %42 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = shl nuw nsw i32 %44, 8
  %46 = or i32 %41, %45
  %47 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = or i32 %46, %49
  %51 = getelementptr inbounds %struct.hb_ot_var_axis_t, %struct.hb_ot_var_axis_t* %3, i64 %31, i32 0
  store i32 %50, i32* %51, align 4
  %52 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 5, i32 0
  %53 = bitcast %"struct.OT::IntType"* %52 to i16*
  %54 = load i16, i16* %53, align 1
  %55 = tail call i16 @llvm.bswap.i16(i16 %54) #4
  %56 = zext i16 %55 to i32
  %57 = getelementptr inbounds %struct.hb_ot_var_axis_t, %struct.hb_ot_var_axis_t* %3, i64 %31, i32 1
  store i32 %56, i32* %57, align 4
  %58 = getelementptr inbounds %struct.hb_ot_var_axis_t, %struct.hb_ot_var_axis_t* %3, i64 %31, i32 2
  %59 = getelementptr inbounds %struct.hb_ot_var_axis_t, %struct.hb_ot_var_axis_t* %3, i64 %31, i32 3
  %60 = getelementptr inbounds %struct.hb_ot_var_axis_t, %struct.hb_ot_var_axis_t* %3, i64 %31, i32 4
  %61 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i64 0
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = shl nuw i32 %63, 24
  %65 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i64 1
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = shl nuw nsw i32 %67, 16
  %69 = or i32 %68, %64
  %70 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i64 2
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = shl nuw nsw i32 %72, 8
  %74 = or i32 %69, %73
  %75 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i64 3
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = or i32 %74, %77
  %79 = sitofp i32 %78 to float
  %80 = fmul float %79, 0x3EF0000000000000
  store float %80, float* %59, align 4
  %81 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i32
  %84 = shl nuw i32 %83, 24
  %85 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 1, i32 0, i32 0, i32 0, i64 1
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = shl nuw nsw i32 %87, 16
  %89 = or i32 %88, %84
  %90 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 1, i32 0, i32 0, i32 0, i64 2
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i32
  %93 = shl nuw nsw i32 %92, 8
  %94 = or i32 %89, %93
  %95 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 1, i32 0, i32 0, i32 0, i64 3
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i32
  %98 = or i32 %94, %97
  %99 = sitofp i32 %98 to float
  %100 = fmul float %99, 0x3EF0000000000000
  %101 = fcmp ole float %80, %100
  %102 = select i1 %101, float %80, float %100
  store float %102, float* %58, align 4
  %103 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 3, i32 0, i32 0, i32 0, i64 0
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i32
  %106 = shl nuw i32 %105, 24
  %107 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 3, i32 0, i32 0, i32 0, i64 1
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i32
  %110 = shl nuw nsw i32 %109, 16
  %111 = or i32 %110, %106
  %112 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 3, i32 0, i32 0, i32 0, i64 2
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i32
  %115 = shl nuw nsw i32 %114, 8
  %116 = or i32 %111, %115
  %117 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 3, i32 0, i32 0, i32 0, i64 3
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i32
  %120 = or i32 %116, %119
  %121 = sitofp i32 %120 to float
  %122 = fmul float %121, 0x3EF0000000000000
  %123 = fcmp oge float %80, %122
  %124 = select i1 %123, float %80, float %122
  store float %124, float* %60, align 4
  %125 = add nuw nsw i64 %31, 1
  %126 = icmp ult i64 %125, %29
  br i1 %126, label %30, label %127

127:                                              ; preds = %30, %4, %6
  %128 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %0, i64 0, i32 3
  %129 = bitcast %"struct.OT::IntType"* %128 to i16*
  %130 = load i16, i16* %129, align 1
  %131 = tail call i16 @llvm.bswap.i16(i16 %130) #4
  %132 = zext i16 %131 to i32
  ret i32 %132
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @hb_ot_var_find_axis(%struct.hb_face_t*, i32, i32*, %struct.hb_ot_var_axis_t*) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 8, i32 16, i32 0
  %6 = tail call %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN2OT4fvarE22hb_table_lazy_loader_tIS1_Lj16EE9hb_face_tLj16E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.54* %5) #4
  %7 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %6, i64 0, i32 1
  %8 = bitcast i8** %7 to %"struct.OT::fvar"**
  %9 = load %"struct.OT::fvar"*, %"struct.OT::fvar"** %8, align 8
  %10 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %6, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = icmp ult i32 %11, 16
  %13 = select i1 %12, %"struct.OT::fvar"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::fvar"*), %"struct.OT::fvar"* %9
  %14 = tail call zeroext i1 @_ZNK2OT4fvar20find_axis_deprecatedEjPjP16hb_ot_var_axis_t(%"struct.OT::fvar"* %13, i32 %1, i32* %2, %struct.hb_ot_var_axis_t* %3)
  %15 = zext i1 %14 to i32
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT4fvar20find_axis_deprecatedEjPjP16hb_ot_var_axis_t(%"struct.OT::fvar"*, i32, i32*, %struct.hb_ot_var_axis_t*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6)
  store i32 -1431655766, i32* %5, align 4
  %7 = icmp eq i32* %2, null
  %8 = select i1 %7, i32* %5, i32* %2
  store i32 -1, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %0, i64 0, i32 1
  %10 = bitcast %"struct.OT::OffsetTo"* %9 to i16*
  %11 = load i16, i16* %10, align 1
  %12 = icmp eq i16 %11, 0
  %13 = tail call i16 @llvm.bswap.i16(i16 %11) #4
  %14 = zext i16 %13 to i64
  %15 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %14
  %16 = bitcast i8* %15 to %"struct.OT::AxisRecord"*
  %17 = select i1 %12, %"struct.OT::AxisRecord"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::AxisRecord"*), %"struct.OT::AxisRecord"* %16, !prof !2
  %18 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %0, i64 0, i32 3
  %19 = bitcast %"struct.OT::IntType"* %18 to i16*
  %20 = load i16, i16* %19, align 1
  %21 = tail call i16 @llvm.bswap.i16(i16 %20) #4
  %22 = zext i16 %21 to i32
  %23 = icmp eq i16 %20, 0
  br i1 %23, label %148, label %24

24:                                               ; preds = %4
  %25 = zext i16 %21 to i64
  br label %26

26:                                               ; preds = %47, %24
  %27 = phi i64 [ 0, %24 ], [ %48, %47 ]
  %28 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %17, i64 %27, i32 0, i32 0, i32 0, i32 0, i64 0
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = shl nuw i32 %30, 24
  %32 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %17, i64 %27, i32 0, i32 0, i32 0, i32 0, i64 1
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = shl nuw nsw i32 %34, 16
  %36 = or i32 %35, %31
  %37 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %17, i64 %27, i32 0, i32 0, i32 0, i32 0, i64 2
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = shl nuw nsw i32 %39, 8
  %41 = or i32 %36, %40
  %42 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %17, i64 %27, i32 0, i32 0, i32 0, i32 0, i64 3
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = or i32 %41, %44
  %46 = icmp eq i32 %45, %1
  br i1 %46, label %50, label %47

47:                                               ; preds = %26
  %48 = add nuw nsw i64 %27, 1
  %49 = icmp ult i64 %48, %25
  br i1 %49, label %26, label %148

50:                                               ; preds = %26
  %51 = trunc i64 %27 to i32
  store i32 %51, i32* %8, align 4
  %52 = icmp ugt i32 %22, %51
  %53 = and i64 %27, 4294967295
  %54 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %17, i64 %53
  %55 = select i1 %52, %"struct.OT::AxisRecord"* %54, %"struct.OT::AxisRecord"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::AxisRecord"*), !prof !3
  %56 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = shl nuw i32 %58, 24
  %60 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = shl nuw nsw i32 %62, 16
  %64 = or i32 %63, %59
  %65 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = shl nuw nsw i32 %67, 8
  %69 = or i32 %64, %68
  %70 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = or i32 %69, %72
  %74 = getelementptr inbounds %struct.hb_ot_var_axis_t, %struct.hb_ot_var_axis_t* %3, i64 0, i32 0
  store i32 %73, i32* %74, align 4
  %75 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %55, i64 0, i32 5, i32 0
  %76 = bitcast %"struct.OT::IntType"* %75 to i16*
  %77 = load i16, i16* %76, align 1
  %78 = tail call i16 @llvm.bswap.i16(i16 %77) #4
  %79 = zext i16 %78 to i32
  %80 = getelementptr inbounds %struct.hb_ot_var_axis_t, %struct.hb_ot_var_axis_t* %3, i64 0, i32 1
  store i32 %79, i32* %80, align 4
  %81 = getelementptr inbounds %struct.hb_ot_var_axis_t, %struct.hb_ot_var_axis_t* %3, i64 0, i32 2
  %82 = getelementptr inbounds %struct.hb_ot_var_axis_t, %struct.hb_ot_var_axis_t* %3, i64 0, i32 3
  %83 = getelementptr inbounds %struct.hb_ot_var_axis_t, %struct.hb_ot_var_axis_t* %3, i64 0, i32 4
  %84 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i64 0
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = shl nuw i32 %86, 24
  %88 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i64 1
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = shl nuw nsw i32 %90, 16
  %92 = or i32 %91, %87
  %93 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i64 2
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = shl nuw nsw i32 %95, 8
  %97 = or i32 %92, %96
  %98 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i64 3
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = or i32 %97, %100
  %102 = sitofp i32 %101 to float
  %103 = fmul float %102, 0x3EF0000000000000
  store float %103, float* %82, align 4
  %104 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %55, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i32
  %107 = shl nuw i32 %106, 24
  %108 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %55, i64 0, i32 1, i32 0, i32 0, i32 0, i64 1
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i32
  %111 = shl nuw nsw i32 %110, 16
  %112 = or i32 %111, %107
  %113 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %55, i64 0, i32 1, i32 0, i32 0, i32 0, i64 2
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = shl nuw nsw i32 %115, 8
  %117 = or i32 %112, %116
  %118 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %55, i64 0, i32 1, i32 0, i32 0, i32 0, i64 3
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i32
  %121 = or i32 %117, %120
  %122 = sitofp i32 %121 to float
  %123 = fmul float %122, 0x3EF0000000000000
  %124 = fcmp ole float %103, %123
  %125 = select i1 %124, float %103, float %123
  store float %125, float* %81, align 4
  %126 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %55, i64 0, i32 3, i32 0, i32 0, i32 0, i64 0
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i32
  %129 = shl nuw i32 %128, 24
  %130 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %55, i64 0, i32 3, i32 0, i32 0, i32 0, i64 1
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i32
  %133 = shl nuw nsw i32 %132, 16
  %134 = or i32 %133, %129
  %135 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %55, i64 0, i32 3, i32 0, i32 0, i32 0, i64 2
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i32
  %138 = shl nuw nsw i32 %137, 8
  %139 = or i32 %134, %138
  %140 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %55, i64 0, i32 3, i32 0, i32 0, i32 0, i64 3
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i32
  %143 = or i32 %139, %142
  %144 = sitofp i32 %143 to float
  %145 = fmul float %144, 0x3EF0000000000000
  %146 = fcmp oge float %103, %145
  %147 = select i1 %146, float %103, float %145
  store float %147, float* %83, align 4
  br label %148

148:                                              ; preds = %47, %4, %50
  %149 = phi i1 [ true, %50 ], [ false, %4 ], [ false, %47 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6)
  ret i1 %149
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @hb_ot_var_get_axis_infos(%struct.hb_face_t*, i32, i32*, %struct.hb_ot_var_axis_info_t*) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 8, i32 16, i32 0
  %6 = tail call %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN2OT4fvarE22hb_table_lazy_loader_tIS1_Lj16EE9hb_face_tLj16E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.54* %5) #4
  %7 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %6, i64 0, i32 1
  %8 = bitcast i8** %7 to %"struct.OT::fvar"**
  %9 = load %"struct.OT::fvar"*, %"struct.OT::fvar"** %8, align 8
  %10 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %6, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = icmp ult i32 %11, 16
  %13 = select i1 %12, %"struct.OT::fvar"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::fvar"*), %"struct.OT::fvar"* %9
  %14 = tail call i32 @_ZNK2OT4fvar14get_axis_infosEjPjP21hb_ot_var_axis_info_t(%"struct.OT::fvar"* %13, i32 %1, i32* %2, %struct.hb_ot_var_axis_info_t* %3)
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK2OT4fvar14get_axis_infosEjPjP21hb_ot_var_axis_info_t(%"struct.OT::fvar"*, i32, i32*, %struct.hb_ot_var_axis_info_t*) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i32* %2, null
  br i1 %5, label %137, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %0, i64 0, i32 1
  %8 = bitcast %"struct.OT::OffsetTo"* %7 to i16*
  %9 = load i16, i16* %8, align 1
  %10 = icmp eq i16 %9, 0
  %11 = tail call i16 @llvm.bswap.i16(i16 %9) #4
  %12 = zext i16 %11 to i64
  %13 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %12
  %14 = bitcast i8* %13 to %"struct.OT::AxisRecord"*
  %15 = select i1 %10, %"struct.OT::AxisRecord"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::AxisRecord"*), %"struct.OT::AxisRecord"* %14, !prof !2
  %16 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %0, i64 0, i32 3
  %17 = bitcast %"struct.OT::IntType"* %16 to i16*
  %18 = load i16, i16* %17, align 1
  %19 = tail call i16 @llvm.bswap.i16(i16 %18) #4
  %20 = zext i16 %19 to i32
  %21 = tail call i32 @llvm.usub.sat.i32(i32 %20, i32 %1) #4
  %22 = load i32, i32* %2, align 4
  %23 = icmp ugt i32 %21, %22
  %24 = select i1 %23, i32 %22, i32 %21
  store i32 %24, i32* %2, align 4
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %15, i64 %25
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %137, label %28

28:                                               ; preds = %6
  %29 = zext i32 %24 to i64
  br label %30

30:                                               ; preds = %28, %30
  %31 = phi i64 [ 0, %28 ], [ %135, %30 ]
  %32 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %26, i64 %31
  %33 = trunc i64 %31 to i32
  %34 = add i32 %33, %1
  %35 = getelementptr inbounds %struct.hb_ot_var_axis_info_t, %struct.hb_ot_var_axis_info_t* %3, i64 %31, i32 0
  store i32 %34, i32* %35, align 4
  %36 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = shl nuw i32 %38, 24
  %40 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = shl nuw nsw i32 %42, 16
  %44 = or i32 %43, %39
  %45 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = shl nuw nsw i32 %47, 8
  %49 = or i32 %44, %48
  %50 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = or i32 %49, %52
  %54 = getelementptr inbounds %struct.hb_ot_var_axis_info_t, %struct.hb_ot_var_axis_info_t* %3, i64 %31, i32 1
  store i32 %53, i32* %54, align 4
  %55 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 5, i32 0
  %56 = bitcast %"struct.OT::IntType"* %55 to i16*
  %57 = load i16, i16* %56, align 1
  %58 = tail call i16 @llvm.bswap.i16(i16 %57) #4
  %59 = zext i16 %58 to i32
  %60 = getelementptr inbounds %struct.hb_ot_var_axis_info_t, %struct.hb_ot_var_axis_info_t* %3, i64 %31, i32 2
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 4
  %62 = bitcast %"struct.OT::IntType"* %61 to i16*
  %63 = load i16, i16* %62, align 1
  %64 = tail call i16 @llvm.bswap.i16(i16 %63) #4
  %65 = zext i16 %64 to i32
  %66 = getelementptr inbounds %struct.hb_ot_var_axis_info_t, %struct.hb_ot_var_axis_info_t* %3, i64 %31, i32 3
  store i32 %65, i32* %66, align 4
  %67 = getelementptr inbounds %struct.hb_ot_var_axis_info_t, %struct.hb_ot_var_axis_info_t* %3, i64 %31, i32 4
  %68 = getelementptr inbounds %struct.hb_ot_var_axis_info_t, %struct.hb_ot_var_axis_info_t* %3, i64 %31, i32 5
  %69 = getelementptr inbounds %struct.hb_ot_var_axis_info_t, %struct.hb_ot_var_axis_info_t* %3, i64 %31, i32 6
  %70 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i64 0
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = shl nuw i32 %72, 24
  %74 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i64 1
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i32
  %77 = shl nuw nsw i32 %76, 16
  %78 = or i32 %77, %73
  %79 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i64 2
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = shl nuw nsw i32 %81, 8
  %83 = or i32 %78, %82
  %84 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i64 3
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = or i32 %83, %86
  %88 = sitofp i32 %87 to float
  %89 = fmul float %88, 0x3EF0000000000000
  store float %89, float* %68, align 4
  %90 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i32
  %93 = shl nuw i32 %92, 24
  %94 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 1, i32 0, i32 0, i32 0, i64 1
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = shl nuw nsw i32 %96, 16
  %98 = or i32 %97, %93
  %99 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 1, i32 0, i32 0, i32 0, i64 2
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = shl nuw nsw i32 %101, 8
  %103 = or i32 %98, %102
  %104 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 1, i32 0, i32 0, i32 0, i64 3
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i32
  %107 = or i32 %103, %106
  %108 = sitofp i32 %107 to float
  %109 = fmul float %108, 0x3EF0000000000000
  %110 = fcmp ole float %89, %109
  %111 = select i1 %110, float %89, float %109
  store float %111, float* %67, align 4
  %112 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 3, i32 0, i32 0, i32 0, i64 0
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i32
  %115 = shl nuw i32 %114, 24
  %116 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 3, i32 0, i32 0, i32 0, i64 1
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i32
  %119 = shl nuw nsw i32 %118, 16
  %120 = or i32 %119, %115
  %121 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 3, i32 0, i32 0, i32 0, i64 2
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i32
  %124 = shl nuw nsw i32 %123, 8
  %125 = or i32 %120, %124
  %126 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 3, i32 0, i32 0, i32 0, i64 3
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i32
  %129 = or i32 %125, %128
  %130 = sitofp i32 %129 to float
  %131 = fmul float %130, 0x3EF0000000000000
  %132 = fcmp oge float %89, %131
  %133 = select i1 %132, float %89, float %131
  store float %133, float* %69, align 4
  %134 = getelementptr inbounds %struct.hb_ot_var_axis_info_t, %struct.hb_ot_var_axis_info_t* %3, i64 %31, i32 7
  store i32 0, i32* %134, align 4
  %135 = add nuw nsw i64 %31, 1
  %136 = icmp ult i64 %135, %29
  br i1 %136, label %30, label %137

137:                                              ; preds = %30, %4, %6
  %138 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %0, i64 0, i32 3
  %139 = bitcast %"struct.OT::IntType"* %138 to i16*
  %140 = load i16, i16* %139, align 1
  %141 = tail call i16 @llvm.bswap.i16(i16 %140) #4
  %142 = zext i16 %141 to i32
  ret i32 %142
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @hb_ot_var_find_axis_info(%struct.hb_face_t*, i32, %struct.hb_ot_var_axis_info_t*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 8, i32 16, i32 0
  %5 = tail call %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN2OT4fvarE22hb_table_lazy_loader_tIS1_Lj16EE9hb_face_tLj16E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.54* %4) #4
  %6 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %5, i64 0, i32 1
  %7 = bitcast i8** %6 to %"struct.OT::fvar"**
  %8 = load %"struct.OT::fvar"*, %"struct.OT::fvar"** %7, align 8
  %9 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %5, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp ult i32 %10, 16
  %12 = select i1 %11, %"struct.OT::fvar"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::fvar"*), %"struct.OT::fvar"* %8
  %13 = tail call zeroext i1 @_ZNK2OT4fvar14find_axis_infoEjP21hb_ot_var_axis_info_t(%"struct.OT::fvar"* %12, i32 %1, %struct.hb_ot_var_axis_info_t* %2)
  %14 = zext i1 %13 to i32
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT4fvar14find_axis_infoEjP21hb_ot_var_axis_info_t(%"struct.OT::fvar"*, i32, %struct.hb_ot_var_axis_info_t*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %0, i64 0, i32 1
  %5 = bitcast %"struct.OT::OffsetTo"* %4 to i16*
  %6 = load i16, i16* %5, align 1
  %7 = icmp eq i16 %6, 0
  %8 = tail call i16 @llvm.bswap.i16(i16 %6) #4
  %9 = zext i16 %8 to i64
  %10 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %9
  %11 = bitcast i8* %10 to %"struct.OT::AxisRecord"*
  %12 = select i1 %7, %"struct.OT::AxisRecord"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::AxisRecord"*), %"struct.OT::AxisRecord"* %11, !prof !2
  %13 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %0, i64 0, i32 3
  %14 = bitcast %"struct.OT::IntType"* %13 to i16*
  %15 = load i16, i16* %14, align 1
  %16 = tail call i16 @llvm.bswap.i16(i16 %15) #4
  %17 = zext i16 %16 to i32
  %18 = icmp eq i16 %15, 0
  br i1 %18, label %151, label %19

19:                                               ; preds = %3
  %20 = zext i16 %16 to i64
  br label %21

21:                                               ; preds = %42, %19
  %22 = phi i64 [ 0, %19 ], [ %43, %42 ]
  %23 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %12, i64 %22, i32 0, i32 0, i32 0, i32 0, i64 0
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw i32 %25, 24
  %27 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %12, i64 %22, i32 0, i32 0, i32 0, i32 0, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 16
  %31 = or i32 %30, %26
  %32 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %12, i64 %22, i32 0, i32 0, i32 0, i32 0, i64 2
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = shl nuw nsw i32 %34, 8
  %36 = or i32 %31, %35
  %37 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %12, i64 %22, i32 0, i32 0, i32 0, i32 0, i64 3
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = or i32 %36, %39
  %41 = icmp eq i32 %40, %1
  br i1 %41, label %45, label %42

42:                                               ; preds = %21
  %43 = add nuw nsw i64 %22, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %21, label %151

45:                                               ; preds = %21
  %46 = trunc i64 %22 to i32
  %47 = icmp ugt i32 %17, %46
  %48 = and i64 %22, 4294967295
  %49 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %12, i64 %48
  %50 = select i1 %47, %"struct.OT::AxisRecord"* %49, %"struct.OT::AxisRecord"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::AxisRecord"*), !prof !3
  %51 = getelementptr inbounds %struct.hb_ot_var_axis_info_t, %struct.hb_ot_var_axis_info_t* %2, i64 0, i32 0
  store i32 %46, i32* %51, align 4
  %52 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = shl nuw i32 %54, 24
  %56 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = shl nuw nsw i32 %58, 16
  %60 = or i32 %59, %55
  %61 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = shl nuw nsw i32 %63, 8
  %65 = or i32 %60, %64
  %66 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = or i32 %65, %68
  %70 = getelementptr inbounds %struct.hb_ot_var_axis_info_t, %struct.hb_ot_var_axis_info_t* %2, i64 0, i32 1
  store i32 %69, i32* %70, align 4
  %71 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %50, i64 0, i32 5, i32 0
  %72 = bitcast %"struct.OT::IntType"* %71 to i16*
  %73 = load i16, i16* %72, align 1
  %74 = tail call i16 @llvm.bswap.i16(i16 %73) #4
  %75 = zext i16 %74 to i32
  %76 = getelementptr inbounds %struct.hb_ot_var_axis_info_t, %struct.hb_ot_var_axis_info_t* %2, i64 0, i32 2
  store i32 %75, i32* %76, align 4
  %77 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %50, i64 0, i32 4
  %78 = bitcast %"struct.OT::IntType"* %77 to i16*
  %79 = load i16, i16* %78, align 1
  %80 = tail call i16 @llvm.bswap.i16(i16 %79) #4
  %81 = zext i16 %80 to i32
  %82 = getelementptr inbounds %struct.hb_ot_var_axis_info_t, %struct.hb_ot_var_axis_info_t* %2, i64 0, i32 3
  store i32 %81, i32* %82, align 4
  %83 = getelementptr inbounds %struct.hb_ot_var_axis_info_t, %struct.hb_ot_var_axis_info_t* %2, i64 0, i32 4
  %84 = getelementptr inbounds %struct.hb_ot_var_axis_info_t, %struct.hb_ot_var_axis_info_t* %2, i64 0, i32 5
  %85 = getelementptr inbounds %struct.hb_ot_var_axis_info_t, %struct.hb_ot_var_axis_info_t* %2, i64 0, i32 6
  %86 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i64 0
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = shl nuw i32 %88, 24
  %90 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i64 1
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i32
  %93 = shl nuw nsw i32 %92, 16
  %94 = or i32 %93, %89
  %95 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i64 2
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i32
  %98 = shl nuw nsw i32 %97, 8
  %99 = or i32 %94, %98
  %100 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i64 3
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  %103 = or i32 %99, %102
  %104 = sitofp i32 %103 to float
  %105 = fmul float %104, 0x3EF0000000000000
  store float %105, float* %84, align 4
  %106 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %50, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  %109 = shl nuw i32 %108, 24
  %110 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %50, i64 0, i32 1, i32 0, i32 0, i32 0, i64 1
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  %113 = shl nuw nsw i32 %112, 16
  %114 = or i32 %113, %109
  %115 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %50, i64 0, i32 1, i32 0, i32 0, i32 0, i64 2
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = shl nuw nsw i32 %117, 8
  %119 = or i32 %114, %118
  %120 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %50, i64 0, i32 1, i32 0, i32 0, i32 0, i64 3
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i32
  %123 = or i32 %119, %122
  %124 = sitofp i32 %123 to float
  %125 = fmul float %124, 0x3EF0000000000000
  %126 = fcmp ole float %105, %125
  %127 = select i1 %126, float %105, float %125
  store float %127, float* %83, align 4
  %128 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %50, i64 0, i32 3, i32 0, i32 0, i32 0, i64 0
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = shl nuw i32 %130, 24
  %132 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %50, i64 0, i32 3, i32 0, i32 0, i32 0, i64 1
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i32
  %135 = shl nuw nsw i32 %134, 16
  %136 = or i32 %135, %131
  %137 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %50, i64 0, i32 3, i32 0, i32 0, i32 0, i64 2
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i32
  %140 = shl nuw nsw i32 %139, 8
  %141 = or i32 %136, %140
  %142 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %50, i64 0, i32 3, i32 0, i32 0, i32 0, i64 3
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = or i32 %141, %144
  %146 = sitofp i32 %145 to float
  %147 = fmul float %146, 0x3EF0000000000000
  %148 = fcmp oge float %105, %147
  %149 = select i1 %148, float %105, float %147
  store float %149, float* %85, align 4
  %150 = getelementptr inbounds %struct.hb_ot_var_axis_info_t, %struct.hb_ot_var_axis_info_t* %2, i64 0, i32 7
  store i32 0, i32* %150, align 4
  br label %151

151:                                              ; preds = %42, %3, %45
  %152 = phi i1 [ true, %45 ], [ false, %3 ], [ false, %42 ]
  ret i1 %152
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @hb_ot_var_get_named_instance_count(%struct.hb_face_t*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 8, i32 16, i32 0
  %3 = tail call %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN2OT4fvarE22hb_table_lazy_loader_tIS1_Lj16EE9hb_face_tLj16E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.54* %2) #4
  %4 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %3, i64 0, i32 1
  %5 = bitcast i8** %4 to %"struct.OT::fvar"**
  %6 = load %"struct.OT::fvar"*, %"struct.OT::fvar"** %5, align 8
  %7 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %3, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 16
  %10 = select i1 %9, %"struct.OT::fvar"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::fvar"*), %"struct.OT::fvar"* %6
  %11 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %10, i64 0, i32 5
  %12 = bitcast %"struct.OT::IntType"* %11 to i16*
  %13 = load i16, i16* %12, align 1
  %14 = tail call i16 @llvm.bswap.i16(i16 %13) #4
  %15 = zext i16 %14 to i32
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @hb_ot_var_named_instance_get_subfamily_name_id(%struct.hb_face_t*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 8, i32 16, i32 0
  %4 = tail call %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN2OT4fvarE22hb_table_lazy_loader_tIS1_Lj16EE9hb_face_tLj16E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.54* %3) #4
  %5 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %4, i64 0, i32 1
  %6 = bitcast i8** %5 to %"struct.OT::fvar"**
  %7 = load %"struct.OT::fvar"*, %"struct.OT::fvar"** %6, align 8
  %8 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %4, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = icmp ult i32 %9, 16
  %11 = select i1 %10, %"struct.OT::fvar"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::fvar"*), %"struct.OT::fvar"* %7
  %12 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %11, i64 0, i32 5
  %13 = bitcast %"struct.OT::IntType"* %12 to i16*
  %14 = load i16, i16* %13, align 1
  %15 = tail call i16 @llvm.bswap.i16(i16 %14) #4
  %16 = zext i16 %15 to i32
  %17 = icmp ugt i32 %16, %1
  br i1 %17, label %18, label %49, !prof !3

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %11, i64 0, i32 1
  %20 = bitcast %"struct.OT::OffsetTo"* %19 to i16*
  %21 = load i16, i16* %20, align 1
  %22 = icmp eq i16 %21, 0
  %23 = tail call i16 @llvm.bswap.i16(i16 %21) #4
  %24 = zext i16 %23 to i64
  %25 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %24
  %26 = bitcast i8* %25 to %"struct.OT::AxisRecord"*
  %27 = select i1 %22, %"struct.OT::AxisRecord"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::AxisRecord"*), %"struct.OT::AxisRecord"* %26, !prof !2
  %28 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %11, i64 0, i32 3
  %29 = bitcast %"struct.OT::IntType"* %28 to i16*
  %30 = load i16, i16* %29, align 1
  %31 = tail call i16 @llvm.bswap.i16(i16 %30) #4
  %32 = zext i16 %31 to i64
  %33 = mul nuw nsw i64 %32, 20
  %34 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %33
  %35 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %11, i64 0, i32 6
  %36 = bitcast %"struct.OT::IntType"* %35 to i16*
  %37 = load i16, i16* %36, align 1
  %38 = tail call i16 @llvm.bswap.i16(i16 %37) #4
  %39 = zext i16 %38 to i32
  %40 = mul i32 %39, %1
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %34, i64 %41
  %43 = icmp eq i8* %42, null
  br i1 %43, label %49, label %44, !prof !2

44:                                               ; preds = %18
  %45 = bitcast i8* %42 to i16*
  %46 = load i16, i16* %45, align 1
  %47 = tail call i16 @llvm.bswap.i16(i16 %46) #4
  %48 = zext i16 %47 to i32
  br label %49

49:                                               ; preds = %2, %18, %44
  %50 = phi i32 [ %48, %44 ], [ 65535, %18 ], [ 65535, %2 ]
  ret i32 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @hb_ot_var_named_instance_get_postscript_name_id(%struct.hb_face_t*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 8, i32 16, i32 0
  %4 = tail call %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN2OT4fvarE22hb_table_lazy_loader_tIS1_Lj16EE9hb_face_tLj16E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.54* %3) #4
  %5 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %4, i64 0, i32 1
  %6 = bitcast i8** %5 to %"struct.OT::fvar"**
  %7 = load %"struct.OT::fvar"*, %"struct.OT::fvar"** %6, align 8
  %8 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %4, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = icmp ult i32 %9, 16
  %11 = select i1 %10, %"struct.OT::fvar"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::fvar"*), %"struct.OT::fvar"* %7
  %12 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %11, i64 0, i32 5
  %13 = bitcast %"struct.OT::IntType"* %12 to i16*
  %14 = load i16, i16* %13, align 1
  %15 = tail call i16 @llvm.bswap.i16(i16 %14) #4
  %16 = zext i16 %15 to i32
  %17 = icmp ugt i32 %16, %1
  br i1 %17, label %18, label %58, !prof !3

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %11, i64 0, i32 1
  %20 = bitcast %"struct.OT::OffsetTo"* %19 to i16*
  %21 = load i16, i16* %20, align 1
  %22 = icmp eq i16 %21, 0
  %23 = tail call i16 @llvm.bswap.i16(i16 %21) #4
  %24 = zext i16 %23 to i64
  %25 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %24
  %26 = bitcast i8* %25 to %"struct.OT::AxisRecord"*
  %27 = select i1 %22, %"struct.OT::AxisRecord"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::AxisRecord"*), %"struct.OT::AxisRecord"* %26, !prof !2
  %28 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %11, i64 0, i32 3
  %29 = bitcast %"struct.OT::IntType"* %28 to i16*
  %30 = load i16, i16* %29, align 1
  %31 = tail call i16 @llvm.bswap.i16(i16 %30) #4
  %32 = zext i16 %31 to i64
  %33 = mul nuw nsw i64 %32, 20
  %34 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %33
  %35 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %11, i64 0, i32 6
  %36 = bitcast %"struct.OT::IntType"* %35 to i16*
  %37 = load i16, i16* %36, align 1
  %38 = tail call i16 @llvm.bswap.i16(i16 %37) #4
  %39 = zext i16 %38 to i32
  %40 = mul i32 %39, %1
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %34, i64 %41
  %43 = icmp eq i8* %42, null
  br i1 %43, label %58, label %44, !prof !2

44:                                               ; preds = %18
  %45 = zext i16 %31 to i32
  %46 = shl nuw nsw i32 %45, 2
  %47 = add nuw nsw i32 %46, 6
  %48 = icmp ugt i32 %47, %39
  br i1 %48, label %58, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds i8, i8* %42, i64 4
  %51 = bitcast i8* %50 to %"struct.OT::HBFixed"*
  %52 = zext i32 %46 to i64
  %53 = getelementptr inbounds %"struct.OT::HBFixed", %"struct.OT::HBFixed"* %51, i64 0, i32 0, i32 0, i32 0, i64 %52
  %54 = bitcast i8* %53 to i16*
  %55 = load i16, i16* %54, align 1
  %56 = tail call i16 @llvm.bswap.i16(i16 %55) #4
  %57 = zext i16 %56 to i32
  br label %58

58:                                               ; preds = %2, %18, %44, %49
  %59 = phi i32 [ %57, %49 ], [ 65535, %18 ], [ 65535, %44 ], [ 65535, %2 ]
  ret i32 %59
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @hb_ot_var_named_instance_get_design_coords(%struct.hb_face_t*, i32, i32*, float* nocapture) local_unnamed_addr #0 {
  %5 = bitcast float* %3 to i8*
  %6 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 8, i32 16, i32 0
  %7 = tail call %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN2OT4fvarE22hb_table_lazy_loader_tIS1_Lj16EE9hb_face_tLj16E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.54* %6) #4
  %8 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %7, i64 0, i32 1
  %9 = bitcast i8** %8 to %"struct.OT::fvar"**
  %10 = load %"struct.OT::fvar"*, %"struct.OT::fvar"** %9, align 8
  %11 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %7, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = icmp ult i32 %12, 16
  %14 = select i1 %13, %"struct.OT::fvar"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::fvar"*), %"struct.OT::fvar"* %10
  %15 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %14, i64 0, i32 5
  %16 = bitcast %"struct.OT::IntType"* %15 to i16*
  %17 = load i16, i16* %16, align 1
  %18 = tail call i16 @llvm.bswap.i16(i16 %17) #4
  %19 = zext i16 %18 to i32
  %20 = icmp ugt i32 %19, %1
  br i1 %20, label %23, label %21, !prof !3

21:                                               ; preds = %4
  %22 = icmp eq i32* %2, null
  br i1 %22, label %139, label %51

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %14, i64 0, i32 1
  %25 = bitcast %"struct.OT::OffsetTo"* %24 to i16*
  %26 = load i16, i16* %25, align 1
  %27 = icmp eq i16 %26, 0
  %28 = tail call i16 @llvm.bswap.i16(i16 %26) #4
  %29 = zext i16 %28 to i64
  %30 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %29
  %31 = bitcast i8* %30 to %"struct.OT::AxisRecord"*
  %32 = select i1 %27, %"struct.OT::AxisRecord"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::AxisRecord"*), %"struct.OT::AxisRecord"* %31, !prof !2
  %33 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %14, i64 0, i32 3
  %34 = bitcast %"struct.OT::IntType"* %33 to i16*
  %35 = load i16, i16* %34, align 1
  %36 = tail call i16 @llvm.bswap.i16(i16 %35) #4
  %37 = zext i16 %36 to i64
  %38 = mul nuw nsw i64 %37, 20
  %39 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %38
  %40 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %14, i64 0, i32 6
  %41 = bitcast %"struct.OT::IntType"* %40 to i16*
  %42 = load i16, i16* %41, align 1
  %43 = tail call i16 @llvm.bswap.i16(i16 %42) #4
  %44 = zext i16 %43 to i32
  %45 = mul i32 %44, %1
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %39, i64 %46
  %48 = icmp eq i8* %47, null
  %49 = icmp ne i32* %2, null
  br i1 %48, label %50, label %52, !prof !2

50:                                               ; preds = %23
  br i1 %49, label %51, label %139

51:                                               ; preds = %50, %21
  store i32 0, i32* %2, align 4
  br label %139

52:                                               ; preds = %23
  br i1 %49, label %53, label %136

53:                                               ; preds = %52
  %54 = load i32, i32* %2, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %136, label %56

56:                                               ; preds = %53
  %57 = zext i16 %36 to i32
  %58 = getelementptr inbounds i8, i8* %47, i64 4
  %59 = bitcast i8* %58 to %"struct.OT::HBFixed"*
  %60 = icmp ult i32 %54, %57
  %61 = select i1 %60, i32 %54, i32 %57
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %136, label %63

63:                                               ; preds = %56
  %64 = zext i32 %61 to i64
  %65 = icmp ult i32 %61, 4
  br i1 %65, label %106, label %66

66:                                               ; preds = %63
  %67 = getelementptr float, float* %3, i64 %64
  %68 = bitcast float* %67 to i8*
  %69 = getelementptr %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 %37, i32 1, i32 0, i32 0, i32 0, i64 %46
  %70 = shl nuw nsw i32 %61, 2
  %71 = zext i32 %70 to i64
  %72 = add nuw nsw i64 %71, %46
  %73 = getelementptr %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %32, i64 %37, i32 1, i32 0, i32 0, i32 0, i64 %72
  %74 = icmp ugt i8* %73, %5
  %75 = icmp ult i8* %69, %68
  %76 = and i1 %74, %75
  br i1 %76, label %106, label %77

77:                                               ; preds = %66
  %78 = and i64 %64, 65532
  br label %79

79:                                               ; preds = %79, %77
  %80 = phi i64 [ 0, %77 ], [ %102, %79 ]
  %81 = getelementptr inbounds %"struct.OT::HBFixed", %"struct.OT::HBFixed"* %59, i64 %80, i32 0, i32 0, i32 0, i64 0
  %82 = bitcast i8* %81 to <16 x i8>*
  %83 = load <16 x i8>, <16 x i8>* %82, align 1
  %84 = shufflevector <16 x i8> %83, <16 x i8> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %85 = shufflevector <16 x i8> %83, <16 x i8> undef, <4 x i32> <i32 1, i32 5, i32 9, i32 13>
  %86 = shufflevector <16 x i8> %83, <16 x i8> undef, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %87 = shufflevector <16 x i8> %83, <16 x i8> undef, <4 x i32> <i32 3, i32 7, i32 11, i32 15>
  %88 = zext <4 x i8> %84 to <4 x i32>
  %89 = shl nuw <4 x i32> %88, <i32 24, i32 24, i32 24, i32 24>
  %90 = zext <4 x i8> %85 to <4 x i32>
  %91 = shl nuw nsw <4 x i32> %90, <i32 16, i32 16, i32 16, i32 16>
  %92 = or <4 x i32> %91, %89
  %93 = zext <4 x i8> %86 to <4 x i32>
  %94 = shl nuw nsw <4 x i32> %93, <i32 8, i32 8, i32 8, i32 8>
  %95 = or <4 x i32> %92, %94
  %96 = zext <4 x i8> %87 to <4 x i32>
  %97 = or <4 x i32> %95, %96
  %98 = sitofp <4 x i32> %97 to <4 x float>
  %99 = fmul <4 x float> %98, <float 0x3EF0000000000000, float 0x3EF0000000000000, float 0x3EF0000000000000, float 0x3EF0000000000000>
  %100 = getelementptr inbounds float, float* %3, i64 %80
  %101 = bitcast float* %100 to <4 x float>*
  store <4 x float> %99, <4 x float>* %101, align 4, !alias.scope !4, !noalias !7
  %102 = add i64 %80, 4
  %103 = icmp eq i64 %102, %78
  br i1 %103, label %104, label %79, !llvm.loop !9

104:                                              ; preds = %79
  %105 = icmp eq i64 %78, %64
  br i1 %105, label %133, label %106

106:                                              ; preds = %104, %66, %63
  %107 = phi i64 [ 0, %66 ], [ 0, %63 ], [ %78, %104 ]
  br label %108

108:                                              ; preds = %106, %108
  %109 = phi i64 [ %131, %108 ], [ %107, %106 ]
  %110 = getelementptr inbounds %"struct.OT::HBFixed", %"struct.OT::HBFixed"* %59, i64 %109, i32 0, i32 0, i32 0, i64 0
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  %113 = shl nuw i32 %112, 24
  %114 = getelementptr inbounds %"struct.OT::HBFixed", %"struct.OT::HBFixed"* %59, i64 %109, i32 0, i32 0, i32 0, i64 1
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i32
  %117 = shl nuw nsw i32 %116, 16
  %118 = or i32 %117, %113
  %119 = getelementptr inbounds %"struct.OT::HBFixed", %"struct.OT::HBFixed"* %59, i64 %109, i32 0, i32 0, i32 0, i64 2
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i32
  %122 = shl nuw nsw i32 %121, 8
  %123 = or i32 %118, %122
  %124 = getelementptr inbounds %"struct.OT::HBFixed", %"struct.OT::HBFixed"* %59, i64 %109, i32 0, i32 0, i32 0, i64 3
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  %127 = or i32 %123, %126
  %128 = sitofp i32 %127 to float
  %129 = fmul float %128, 0x3EF0000000000000
  %130 = getelementptr inbounds float, float* %3, i64 %109
  store float %129, float* %130, align 4
  %131 = add nuw nsw i64 %109, 1
  %132 = icmp ult i64 %131, %64
  br i1 %132, label %108, label %133, !llvm.loop !11

133:                                              ; preds = %108, %104
  %134 = load i16, i16* %34, align 1
  %135 = tail call i16 @llvm.bswap.i16(i16 %134) #4
  br label %136

136:                                              ; preds = %133, %56, %53, %52
  %137 = phi i16 [ %135, %133 ], [ %36, %56 ], [ %36, %53 ], [ %36, %52 ]
  %138 = zext i16 %137 to i32
  br label %139

139:                                              ; preds = %21, %50, %51, %136
  %140 = phi i32 [ %138, %136 ], [ 0, %51 ], [ 0, %50 ], [ 0, %21 ]
  ret i32 %140
}

; Function Attrs: nounwind ssp uwtable
define hidden void @hb_ot_var_normalize_variations(%struct.hb_face_t*, %struct.hb_variation_t* nocapture readonly, i32, i32* nocapture, i32) local_unnamed_addr #0 {
  %6 = alloca %struct.hb_ot_var_axis_info_t, align 4
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %5
  %9 = bitcast i32* %3 to i8*
  %10 = zext i32 %4 to i64
  %11 = shl nuw nsw i64 %10, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 %11, i1 false)
  br label %12

12:                                               ; preds = %8, %5
  %13 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 8, i32 16, i32 0
  %14 = tail call %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN2OT4fvarE22hb_table_lazy_loader_tIS1_Lj16EE9hb_face_tLj16E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.54* %13) #4
  %15 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %14, i64 0, i32 1
  %16 = bitcast i8** %15 to %"struct.OT::fvar"**
  %17 = load %"struct.OT::fvar"*, %"struct.OT::fvar"** %16, align 8
  %18 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %14, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = icmp ult i32 %19, 16
  %21 = select i1 %20, %"struct.OT::fvar"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::fvar"*), %"struct.OT::fvar"* %17
  %22 = icmp eq i32 %2, 0
  br i1 %22, label %32, label %23

23:                                               ; preds = %12
  %24 = bitcast %struct.hb_ot_var_axis_info_t* %6 to i8*
  %25 = getelementptr inbounds %struct.hb_ot_var_axis_info_t, %struct.hb_ot_var_axis_info_t* %6, i64 0, i32 0
  %26 = getelementptr inbounds %struct.hb_ot_var_axis_info_t, %struct.hb_ot_var_axis_info_t* %6, i64 0, i32 4
  %27 = getelementptr inbounds %struct.hb_ot_var_axis_info_t, %struct.hb_ot_var_axis_info_t* %6, i64 0, i32 5
  %28 = getelementptr inbounds %struct.hb_ot_var_axis_info_t, %struct.hb_ot_var_axis_info_t* %6, i64 0, i32 6
  %29 = getelementptr inbounds %struct.hb_ot_var_axis_info_t, %struct.hb_ot_var_axis_info_t* %6, i64 0, i32 7
  %30 = zext i32 %2 to i64
  %31 = bitcast %struct.hb_ot_var_axis_info_t* %6 to i8*
  br label %70

32:                                               ; preds = %93, %12
  %33 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 8, i32 17, i32 0
  %34 = call %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN2OT4avarE22hb_table_lazy_loader_tIS1_Lj17EE9hb_face_tLj17E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.57* %33) #4
  %35 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %34, i64 0, i32 1
  %36 = bitcast i8** %35 to %"struct.OT::avar"**
  %37 = load %"struct.OT::avar"*, %"struct.OT::avar"** %36, align 8
  %38 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %34, i64 0, i32 2
  %39 = load i32, i32* %38, align 8
  %40 = icmp ult i32 %39, 8
  %41 = select i1 %40, %"struct.OT::avar"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::avar"*), %"struct.OT::avar"* %37
  %42 = getelementptr inbounds %"struct.OT::avar", %"struct.OT::avar"* %41, i64 0, i32 2
  %43 = bitcast %"struct.OT::IntType"* %42 to i16*
  %44 = load i16, i16* %43, align 1
  %45 = call i16 @llvm.bswap.i16(i16 %44) #4
  %46 = zext i16 %45 to i32
  %47 = icmp ult i32 %46, %4
  %48 = select i1 %47, i32 %46, i32 %4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %69, label %50

50:                                               ; preds = %32
  %51 = getelementptr inbounds %"struct.OT::avar", %"struct.OT::avar"* %41, i64 0, i32 3
  %52 = zext i32 %48 to i64
  br label %53

53:                                               ; preds = %53, %50
  %54 = phi i64 [ 0, %50 ], [ %67, %53 ]
  %55 = phi %"struct.OT::SegmentMaps"* [ %51, %50 ], [ %66, %53 ]
  %56 = getelementptr inbounds i32, i32* %3, i64 %54
  %57 = load i32, i32* %56, align 4
  %58 = call i32 @_ZNK2OT11SegmentMaps3mapEijj(%"struct.OT::SegmentMaps"* %55, i32 %57, i32 0, i32 1) #4
  store i32 %58, i32* %56, align 4
  %59 = bitcast %"struct.OT::SegmentMaps"* %55 to i16*
  %60 = load i16, i16* %59, align 1
  %61 = call i16 @llvm.bswap.i16(i16 %60) #4
  %62 = zext i16 %61 to i64
  %63 = shl nuw nsw i64 %62, 2
  %64 = or i64 %63, 2
  %65 = getelementptr inbounds %"struct.OT::SegmentMaps", %"struct.OT::SegmentMaps"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %64
  %66 = bitcast i8* %65 to %"struct.OT::SegmentMaps"*
  %67 = add nuw nsw i64 %54, 1
  %68 = icmp ult i64 %67, %52
  br i1 %68, label %53, label %69

69:                                               ; preds = %53, %32
  ret void

70:                                               ; preds = %93, %23
  %71 = phi i64 [ 0, %23 ], [ %94, %93 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %31, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %26, align 4
  store float 0xFFFFFFFFE0000000, float* %27, align 4
  store float 0xFFFFFFFFE0000000, float* %28, align 4
  store i32 -1431655766, i32* %29, align 4
  %72 = getelementptr inbounds %struct.hb_variation_t, %struct.hb_variation_t* %1, i64 %71, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = call %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN2OT4fvarE22hb_table_lazy_loader_tIS1_Lj16EE9hb_face_tLj16E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.54* %13) #4
  %75 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %74, i64 0, i32 1
  %76 = bitcast i8** %75 to %"struct.OT::fvar"**
  %77 = load %"struct.OT::fvar"*, %"struct.OT::fvar"** %76, align 8
  %78 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %74, i64 0, i32 2
  %79 = load i32, i32* %78, align 8
  %80 = icmp ult i32 %79, 16
  %81 = select i1 %80, %"struct.OT::fvar"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::fvar"*), %"struct.OT::fvar"* %77
  %82 = call zeroext i1 @_ZNK2OT4fvar14find_axis_infoEjP21hb_ot_var_axis_info_t(%"struct.OT::fvar"* %81, i32 %73, %struct.hb_ot_var_axis_info_t* nonnull %6) #4
  br i1 %82, label %83, label %93

83:                                               ; preds = %70
  %84 = load i32, i32* %25, align 4
  %85 = icmp ult i32 %84, %4
  br i1 %85, label %86, label %93

86:                                               ; preds = %83
  %87 = getelementptr inbounds %struct.hb_variation_t, %struct.hb_variation_t* %1, i64 %71, i32 1
  %88 = load float, float* %87, align 4
  %89 = call i32 @_ZNK2OT4fvar20normalize_axis_valueEjf(%"struct.OT::fvar"* %21, i32 %84, float %88)
  %90 = load i32, i32* %25, align 4
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds i32, i32* %3, i64 %91
  store i32 %89, i32* %92, align 4
  br label %93

93:                                               ; preds = %70, %86, %83
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #4
  %94 = add nuw nsw i64 %71, 1
  %95 = icmp eq i64 %94, %30
  br i1 %95, label %32, label %70
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK2OT4fvar20normalize_axis_valueEjf(%"struct.OT::fvar"*, i32, float) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %0, i64 0, i32 1
  %5 = bitcast %"struct.OT::OffsetTo"* %4 to i16*
  %6 = load i16, i16* %5, align 1
  %7 = icmp eq i16 %6, 0
  %8 = tail call i16 @llvm.bswap.i16(i16 %6) #4
  %9 = zext i16 %8 to i64
  %10 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %9
  %11 = bitcast i8* %10 to %"struct.OT::AxisRecord"*
  %12 = select i1 %7, %"struct.OT::AxisRecord"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::AxisRecord"*), %"struct.OT::AxisRecord"* %11, !prof !2
  %13 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %0, i64 0, i32 3
  %14 = bitcast %"struct.OT::IntType"* %13 to i16*
  %15 = load i16, i16* %14, align 1
  %16 = tail call i16 @llvm.bswap.i16(i16 %15) #4
  %17 = zext i16 %16 to i32
  %18 = icmp ugt i32 %17, %1
  %19 = zext i32 %1 to i64
  %20 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %12, i64 %19
  %21 = select i1 %18, %"struct.OT::AxisRecord"* %20, %"struct.OT::AxisRecord"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::AxisRecord"*), !prof !3
  %22 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i64 0
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = shl nuw i32 %24, 24
  %26 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i64 1
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = shl nuw nsw i32 %28, 16
  %30 = or i32 %29, %25
  %31 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i64 2
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = shl nuw nsw i32 %33, 8
  %35 = or i32 %30, %34
  %36 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i64 3
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = or i32 %35, %38
  %40 = sitofp i32 %39 to float
  %41 = fmul float %40, 0x3EF0000000000000
  %42 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %21, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = shl nuw i32 %44, 24
  %46 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %21, i64 0, i32 1, i32 0, i32 0, i32 0, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = shl nuw nsw i32 %48, 16
  %50 = or i32 %49, %45
  %51 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %21, i64 0, i32 1, i32 0, i32 0, i32 0, i64 2
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = shl nuw nsw i32 %53, 8
  %55 = or i32 %50, %54
  %56 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %21, i64 0, i32 1, i32 0, i32 0, i32 0, i64 3
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = or i32 %55, %58
  %60 = sitofp i32 %59 to float
  %61 = fmul float %60, 0x3EF0000000000000
  %62 = fcmp ole float %41, %61
  %63 = select i1 %62, float %41, float %61
  %64 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %21, i64 0, i32 3, i32 0, i32 0, i32 0, i64 0
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = shl nuw i32 %66, 24
  %68 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %21, i64 0, i32 3, i32 0, i32 0, i32 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = shl nuw nsw i32 %70, 16
  %72 = or i32 %71, %67
  %73 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %21, i64 0, i32 3, i32 0, i32 0, i32 0, i64 2
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = shl nuw nsw i32 %75, 8
  %77 = or i32 %72, %76
  %78 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %21, i64 0, i32 3, i32 0, i32 0, i32 0, i64 3
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = or i32 %77, %80
  %82 = sitofp i32 %81 to float
  %83 = fmul float %82, 0x3EF0000000000000
  %84 = fcmp oge float %41, %83
  %85 = select i1 %84, float %41, float %83
  %86 = fcmp ole float %63, %2
  %87 = select i1 %86, float %2, float %63
  %88 = fcmp ole float %87, %85
  %89 = select i1 %88, float %87, float %85
  %90 = fcmp oeq float %89, %41
  br i1 %90, label %102, label %91

91:                                               ; preds = %3
  %92 = fcmp olt float %89, %41
  %93 = fsub float %89, %41
  %94 = fsub float %85, %41
  %95 = fsub float %41, %63
  %96 = select i1 %92, float %95, float %94
  %97 = fdiv float %93, %96
  %98 = fmul float %97, 1.638400e+04
  %99 = fadd float %98, 5.000000e-01
  %100 = tail call float @llvm.floor.f32(float %99) #4
  %101 = fptosi float %100 to i32
  br label %102

102:                                              ; preds = %3, %91
  %103 = phi i32 [ %101, %91 ], [ 0, %3 ]
  ret i32 %103
}

; Function Attrs: nounwind ssp uwtable
define hidden void @hb_ot_var_normalize_coords(%struct.hb_face_t*, i32, float* nocapture readonly, i32* nocapture) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 8, i32 16, i32 0
  %6 = tail call %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN2OT4fvarE22hb_table_lazy_loader_tIS1_Lj16EE9hb_face_tLj16E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.54* %5) #4
  %7 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %6, i64 0, i32 1
  %8 = bitcast i8** %7 to %"struct.OT::fvar"**
  %9 = load %"struct.OT::fvar"*, %"struct.OT::fvar"** %8, align 8
  %10 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %6, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = icmp ult i32 %11, 16
  %13 = select i1 %12, %"struct.OT::fvar"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::fvar"*), %"struct.OT::fvar"* %9
  %14 = icmp eq i32 %1, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %4
  %16 = zext i32 %1 to i64
  br label %55

17:                                               ; preds = %55, %4
  %18 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 8, i32 17, i32 0
  %19 = tail call %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN2OT4avarE22hb_table_lazy_loader_tIS1_Lj17EE9hb_face_tLj17E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.57* %18) #4
  %20 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %19, i64 0, i32 1
  %21 = bitcast i8** %20 to %"struct.OT::avar"**
  %22 = load %"struct.OT::avar"*, %"struct.OT::avar"** %21, align 8
  %23 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %19, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = icmp ult i32 %24, 8
  %26 = select i1 %25, %"struct.OT::avar"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::avar"*), %"struct.OT::avar"* %22
  %27 = getelementptr inbounds %"struct.OT::avar", %"struct.OT::avar"* %26, i64 0, i32 2
  %28 = bitcast %"struct.OT::IntType"* %27 to i16*
  %29 = load i16, i16* %28, align 1
  %30 = tail call i16 @llvm.bswap.i16(i16 %29) #4
  %31 = zext i16 %30 to i32
  %32 = icmp ult i32 %31, %1
  %33 = select i1 %32, i32 %31, i32 %1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %54, label %35

35:                                               ; preds = %17
  %36 = getelementptr inbounds %"struct.OT::avar", %"struct.OT::avar"* %26, i64 0, i32 3
  %37 = zext i32 %33 to i64
  br label %38

38:                                               ; preds = %38, %35
  %39 = phi i64 [ 0, %35 ], [ %52, %38 ]
  %40 = phi %"struct.OT::SegmentMaps"* [ %36, %35 ], [ %51, %38 ]
  %41 = getelementptr inbounds i32, i32* %3, i64 %39
  %42 = load i32, i32* %41, align 4
  %43 = tail call i32 @_ZNK2OT11SegmentMaps3mapEijj(%"struct.OT::SegmentMaps"* %40, i32 %42, i32 0, i32 1) #4
  store i32 %43, i32* %41, align 4
  %44 = bitcast %"struct.OT::SegmentMaps"* %40 to i16*
  %45 = load i16, i16* %44, align 1
  %46 = tail call i16 @llvm.bswap.i16(i16 %45) #4
  %47 = zext i16 %46 to i64
  %48 = shl nuw nsw i64 %47, 2
  %49 = or i64 %48, 2
  %50 = getelementptr inbounds %"struct.OT::SegmentMaps", %"struct.OT::SegmentMaps"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %49
  %51 = bitcast i8* %50 to %"struct.OT::SegmentMaps"*
  %52 = add nuw nsw i64 %39, 1
  %53 = icmp ult i64 %52, %37
  br i1 %53, label %38, label %54

54:                                               ; preds = %38, %17
  ret void

55:                                               ; preds = %55, %15
  %56 = phi i64 [ 0, %15 ], [ %62, %55 ]
  %57 = getelementptr inbounds float, float* %2, i64 %56
  %58 = load float, float* %57, align 4
  %59 = trunc i64 %56 to i32
  %60 = tail call i32 @_ZNK2OT4fvar20normalize_axis_valueEjf(%"struct.OT::fvar"* %13, i32 %59, float %58)
  %61 = getelementptr inbounds i32, i32* %3, i64 %56
  store i32 %60, i32* %61, align 4
  %62 = add nuw nsw i64 %56, 1
  %63 = icmp eq i64 %62, %16
  br i1 %63, label %17, label %55
}

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK2OT11SegmentMaps3mapEijj(%"struct.OT::SegmentMaps"*, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"struct.OT::SegmentMaps"* %0 to i16*
  %6 = load i16, i16* %5, align 1
  %7 = tail call i16 @llvm.bswap.i16(i16 %6) #4
  %8 = zext i16 %7 to i32
  %9 = icmp ult i16 %7, 2
  br i1 %9, label %10, label %27

10:                                               ; preds = %4
  %11 = icmp eq i16 %6, 0
  br i1 %11, label %123, label %12

12:                                               ; preds = %10
  %13 = zext i32 %2 to i64
  %14 = getelementptr inbounds %"struct.OT::SegmentMaps", %"struct.OT::SegmentMaps"* %0, i64 0, i32 0, i32 1, i64 0, i32 0, i64 %13, i32 0
  %15 = bitcast %"struct.OT::IntType.140"* %14 to i16*
  %16 = load i16, i16* %15, align 1
  %17 = tail call i16 @llvm.bswap.i16(i16 %16) #4
  %18 = sext i16 %17 to i32
  %19 = sub i32 %1, %18
  %20 = zext i32 %3 to i64
  %21 = getelementptr inbounds %"struct.OT::SegmentMaps", %"struct.OT::SegmentMaps"* %0, i64 0, i32 0, i32 1, i64 0, i32 0, i64 %20, i32 0
  %22 = bitcast %"struct.OT::IntType.140"* %21 to i16*
  %23 = load i16, i16* %22, align 1
  %24 = tail call i16 @llvm.bswap.i16(i16 %23) #4
  %25 = sext i16 %24 to i32
  %26 = add nsw i32 %19, %25
  br label %123

27:                                               ; preds = %4
  %28 = zext i32 %2 to i64
  %29 = getelementptr inbounds %"struct.OT::SegmentMaps", %"struct.OT::SegmentMaps"* %0, i64 0, i32 0, i32 1, i64 0, i32 0, i64 %28, i32 0
  %30 = bitcast %"struct.OT::IntType.140"* %29 to i16*
  %31 = load i16, i16* %30, align 1
  %32 = tail call i16 @llvm.bswap.i16(i16 %31) #4
  %33 = sext i16 %32 to i32
  %34 = icmp slt i32 %33, %1
  br i1 %34, label %44, label %35

35:                                               ; preds = %27
  %36 = sub i32 %1, %33
  %37 = zext i32 %3 to i64
  %38 = getelementptr inbounds %"struct.OT::SegmentMaps", %"struct.OT::SegmentMaps"* %0, i64 0, i32 0, i32 1, i64 0, i32 0, i64 %37, i32 0
  %39 = bitcast %"struct.OT::IntType.140"* %38 to i16*
  %40 = load i16, i16* %39, align 1
  %41 = tail call i16 @llvm.bswap.i16(i16 %40) #4
  %42 = sext i16 %41 to i32
  %43 = add nsw i32 %36, %42
  br label %123

44:                                               ; preds = %27
  %45 = add nsw i32 %8, -1
  %46 = icmp ugt i32 %45, 1
  br i1 %46, label %47, label %64

47:                                               ; preds = %44
  %48 = zext i32 %45 to i64
  br label %49

49:                                               ; preds = %58, %47
  %50 = phi i64 [ 1, %47 ], [ %59, %58 ]
  %51 = phi i32 [ 1, %47 ], [ %60, %58 ]
  %52 = getelementptr inbounds %"struct.OT::SegmentMaps", %"struct.OT::SegmentMaps"* %0, i64 0, i32 0, i32 1, i64 %50, i32 0, i64 %28, i32 0
  %53 = bitcast %"struct.OT::IntType.140"* %52 to i16*
  %54 = load i16, i16* %53, align 1
  %55 = tail call i16 @llvm.bswap.i16(i16 %54) #4
  %56 = sext i16 %55 to i32
  %57 = icmp slt i32 %56, %1
  br i1 %57, label %58, label %62

58:                                               ; preds = %49
  %59 = add nuw nsw i64 %50, 1
  %60 = add nuw i32 %51, 1
  %61 = icmp eq i64 %59, %48
  br i1 %61, label %64, label %49

62:                                               ; preds = %49
  %63 = trunc i64 %50 to i32
  br label %64

64:                                               ; preds = %58, %62, %44
  %65 = phi i32 [ 1, %44 ], [ %63, %62 ], [ %60, %58 ]
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %"struct.OT::SegmentMaps", %"struct.OT::SegmentMaps"* %0, i64 0, i32 0, i32 1, i64 %66, i32 0, i64 %28, i32 0
  %68 = bitcast %"struct.OT::IntType.140"* %67 to i16*
  %69 = load i16, i16* %68, align 1
  %70 = tail call i16 @llvm.bswap.i16(i16 %69) #4
  %71 = sext i16 %70 to i32
  %72 = icmp sgt i32 %71, %1
  br i1 %72, label %82, label %73

73:                                               ; preds = %64
  %74 = sub i32 %1, %71
  %75 = zext i32 %3 to i64
  %76 = getelementptr inbounds %"struct.OT::SegmentMaps", %"struct.OT::SegmentMaps"* %0, i64 0, i32 0, i32 1, i64 %66, i32 0, i64 %75, i32 0
  %77 = bitcast %"struct.OT::IntType.140"* %76 to i16*
  %78 = load i16, i16* %77, align 1
  %79 = tail call i16 @llvm.bswap.i16(i16 %78) #4
  %80 = sext i16 %79 to i32
  %81 = add nsw i32 %74, %80
  br label %123

82:                                               ; preds = %64
  %83 = add i32 %65, -1
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds %"struct.OT::SegmentMaps", %"struct.OT::SegmentMaps"* %0, i64 0, i32 0, i32 1, i64 %84, i32 0, i64 %28, i32 0
  %86 = bitcast %"struct.OT::IntType.140"* %85 to i16*
  %87 = load i16, i16* %86, align 1
  %88 = icmp eq i16 %87, %69
  br i1 %88, label %89, label %96, !prof !2

89:                                               ; preds = %82
  %90 = zext i32 %3 to i64
  %91 = getelementptr inbounds %"struct.OT::SegmentMaps", %"struct.OT::SegmentMaps"* %0, i64 0, i32 0, i32 1, i64 %84, i32 0, i64 %90, i32 0
  %92 = bitcast %"struct.OT::IntType.140"* %91 to i16*
  %93 = load i16, i16* %92, align 1
  %94 = tail call i16 @llvm.bswap.i16(i16 %93) #4
  %95 = sext i16 %94 to i32
  br label %123

96:                                               ; preds = %82
  %97 = tail call i16 @llvm.bswap.i16(i16 %87) #4
  %98 = sext i16 %97 to i32
  %99 = sub nsw i32 %71, %98
  %100 = zext i32 %3 to i64
  %101 = getelementptr inbounds %"struct.OT::SegmentMaps", %"struct.OT::SegmentMaps"* %0, i64 0, i32 0, i32 1, i64 %84, i32 0, i64 %100, i32 0
  %102 = bitcast %"struct.OT::IntType.140"* %101 to i16*
  %103 = load i16, i16* %102, align 1
  %104 = tail call i16 @llvm.bswap.i16(i16 %103) #4
  %105 = sext i16 %104 to i32
  %106 = sitofp i16 %104 to float
  %107 = getelementptr inbounds %"struct.OT::SegmentMaps", %"struct.OT::SegmentMaps"* %0, i64 0, i32 0, i32 1, i64 %66, i32 0, i64 %100, i32 0
  %108 = bitcast %"struct.OT::IntType.140"* %107 to i16*
  %109 = load i16, i16* %108, align 1
  %110 = tail call i16 @llvm.bswap.i16(i16 %109) #4
  %111 = sext i16 %110 to i32
  %112 = sub nsw i32 %111, %105
  %113 = sitofp i32 %112 to float
  %114 = sub nsw i32 %1, %98
  %115 = sitofp i32 %114 to float
  %116 = fmul float %115, %113
  %117 = sitofp i32 %99 to float
  %118 = fdiv float %116, %117
  %119 = fadd float %118, %106
  %120 = fadd float %119, 5.000000e-01
  %121 = tail call float @llvm.floor.f32(float %120) #4
  %122 = fptosi float %121 to i32
  br label %123

123:                                              ; preds = %73, %89, %96, %10, %35, %12
  %124 = phi i32 [ %26, %12 ], [ %43, %35 ], [ %1, %10 ], [ %81, %73 ], [ %95, %89 ], [ %122, %96 ]
  ret i32 %124
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN2OT4fvarE22hb_table_lazy_loader_tIS1_Lj16EE9hb_face_tLj16E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.54*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %struct.hb_sanitize_context_t, align 8
  %3 = bitcast %struct.hb_lazy_loader_t.54* %0 to i64*
  %4 = load atomic i64, i64* %3 acquire, align 8
  %5 = inttoptr i64 %4 to %struct.hb_blob_t*
  %6 = icmp eq i64 %4, 0
  br i1 %6, label %7, label %46, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.hb_lazy_loader_t.54, %struct.hb_lazy_loader_t.54* %0, i64 -16
  %9 = bitcast %struct.hb_lazy_loader_t.54* %8 to %struct.hb_face_t**
  %10 = bitcast %struct.hb_sanitize_context_t* %2 to i8*
  %11 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 2
  %13 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 8
  %14 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 9
  %15 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 10
  %16 = bitcast i8** %12 to i8*
  %17 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 11
  br label %18

18:                                               ; preds = %7, %41
  %19 = load %struct.hb_face_t*, %struct.hb_face_t** %9, align 8
  %20 = icmp eq %struct.hb_face_t* %19, null
  br i1 %20, label %21, label %23, !prof !2

21:                                               ; preds = %18
  %22 = call %struct.hb_blob_t* @hb_blob_get_empty() #4
  br label %46

23:                                               ; preds = %18
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10) #4
  store i32 0, i32* %11, align 8
  store i32 0, i32* %13, align 4
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %14, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 25, i1 false) #4
  %24 = call i32 @hb_face_get_glyph_count(%struct.hb_face_t* nonnull %19) #4
  store i32 %24, i32* %15, align 8
  store i8 1, i8* %17, align 4
  %25 = call %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t* nonnull %19, i32 1719034226) #4
  %26 = call %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4fvarEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t* nonnull %2, %struct.hb_blob_t* %25) #4
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #4
  %27 = icmp eq %struct.hb_blob_t* %26, null
  br i1 %27, label %28, label %30, !prof !2

28:                                               ; preds = %23
  %29 = call %struct.hb_blob_t* @hb_blob_get_empty() #4
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi %struct.hb_blob_t* [ %29, %28 ], [ %26, %23 ]
  %32 = ptrtoint %struct.hb_blob_t* %31 to i64
  %33 = cmpxchg weak i64* %3, i64 0, i64 %32 acq_rel monotonic
  %34 = extractvalue { i64, i1 } %33, 1
  br i1 %34, label %46, label %35, !prof !3

35:                                               ; preds = %30
  %36 = icmp eq %struct.hb_blob_t* %31, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %35
  %38 = call %struct.hb_blob_t* @hb_blob_get_empty() #4
  %39 = icmp eq %struct.hb_blob_t* %38, %31
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  call void @hb_blob_destroy(%struct.hb_blob_t* nonnull %31) #4
  br label %41

41:                                               ; preds = %40, %37, %35
  %42 = load atomic i64, i64* %3 acquire, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %18, label %44, !prof !2

44:                                               ; preds = %41
  %45 = inttoptr i64 %42 to %struct.hb_blob_t*
  br label %46

46:                                               ; preds = %30, %1, %44, %21
  %47 = phi %struct.hb_blob_t* [ %22, %21 ], [ %45, %44 ], [ %5, %1 ], [ %31, %30 ]
  ret %struct.hb_blob_t* %47
}

declare %struct.hb_blob_t* @hb_blob_get_empty() local_unnamed_addr #3

declare i32 @hb_face_get_glyph_count(%struct.hb_face_t*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4fvarEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t*, %struct.hb_blob_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %1) #4
  %4 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 9
  store %struct.hb_blob_t* %3, %struct.hb_blob_t** %4, align 8
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 6
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 3
  %8 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 4
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 8
  %10 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %1, i64 0, i32 2
  br label %12

12:                                               ; preds = %52, %2
  %13 = phi %struct.hb_blob_t* [ %3, %2 ], [ %58, %52 ]
  %14 = phi i8 [ 0, %2 ], [ 1, %52 ]
  store i8 %14, i8* %5, align 8
  %15 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %13, i64 0, i32 1
  %16 = load i8*, i8** %15, align 8
  store i8* %16, i8** %6, align 8
  %17 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %13, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %16, i64 %19
  store i8* %20, i8** %7, align 8
  %21 = icmp ugt i32 %18, 67108862
  br i1 %21, label %28, label %22, !prof !2

22:                                               ; preds = %12
  %23 = shl i32 %18, 6
  %24 = icmp ugt i32 %23, 16384
  %25 = select i1 %24, i32 %23, i32 16384
  %26 = icmp ult i32 %25, 1073741823
  %27 = select i1 %26, i32 %25, i32 1073741823
  br label %28

28:                                               ; preds = %12, %22
  %29 = phi i32 [ %27, %22 ], [ 1073741823, %12 ]
  store i32 %29, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %30 = icmp eq i8* %16, null
  br i1 %30, label %31, label %33, !prof !2

31:                                               ; preds = %28
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %13) #4
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %32 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #4
  br label %70

33:                                               ; preds = %28
  %34 = bitcast i8* %16 to %"struct.OT::fvar"*
  %35 = tail call zeroext i1 @_ZNK2OT4fvar8sanitizeEP21hb_sanitize_context_t(%"struct.OT::fvar"* nonnull %34, %struct.hb_sanitize_context_t* %0)
  %36 = load i32, i32* %9, align 4
  %37 = icmp ne i32 %36, 0
  br i1 %35, label %38, label %48

38:                                               ; preds = %33
  br i1 %37, label %39, label %59

39:                                               ; preds = %38
  %40 = bitcast i8* %16 to %"struct.OT::fvar"*
  store i32 0, i32* %9, align 4
  %41 = tail call zeroext i1 @_ZNK2OT4fvar8sanitizeEP21hb_sanitize_context_t(%"struct.OT::fvar"* nonnull %40, %struct.hb_sanitize_context_t* %0)
  %42 = load i32, i32* %9, align 4
  %43 = icmp ne i32 %42, 0
  %44 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %44) #4
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %45 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #4
  %46 = xor i1 %41, true
  %47 = or i1 %43, %46
  br i1 %47, label %68, label %62

48:                                               ; preds = %33
  br i1 %37, label %49, label %63

49:                                               ; preds = %48
  %50 = load i8, i8* %5, align 8, !range !12
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %63

52:                                               ; preds = %49
  %53 = tail call i8* @hb_blob_get_data_writable(%struct.hb_blob_t* %1, i32* null) #4
  store i8* %53, i8** %6, align 8
  %54 = load i32, i32* %11, align 8
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %53, i64 %55
  store i8* %56, i8** %7, align 8
  %57 = icmp eq i8* %53, null
  %58 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  br i1 %57, label %65, label %12

59:                                               ; preds = %38
  %60 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %60) #4
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %61 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false) #4
  br label %62

62:                                               ; preds = %39, %59
  tail call void @hb_blob_make_immutable(%struct.hb_blob_t* %1) #4
  br label %70

63:                                               ; preds = %48, %49
  %64 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  br label %65

65:                                               ; preds = %52, %63
  %66 = phi %struct.hb_blob_t* [ %64, %63 ], [ %58, %52 ]
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %66) #4
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %67 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #4
  br label %68

68:                                               ; preds = %65, %39
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %1) #4
  %69 = tail call %struct.hb_blob_t* @hb_blob_get_empty() #4
  br label %70

70:                                               ; preds = %68, %62, %31
  %71 = phi %struct.hb_blob_t* [ %1, %31 ], [ %69, %68 ], [ %1, %62 ]
  ret %struct.hb_blob_t* %71
}

declare %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT4fvar8sanitizeEP21hb_sanitize_context_t(%"struct.OT::fvar"*, %struct.hb_sanitize_context_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %4 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %5 = load i8*, i8** %4, align 8
  %6 = icmp ugt i8* %5, %3
  br i1 %6, label %122, label %7, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = icmp ult i8* %9, %3
  br i1 %10, label %122, label %11, !prof !2

11:                                               ; preds = %7
  %12 = ptrtoint i8* %9 to i64
  %13 = ptrtoint %"struct.OT::fvar"* %0 to i64
  %14 = sub i64 %12, %13
  %15 = trunc i64 %14 to i32
  %16 = icmp ult i32 %15, 4
  br i1 %16, label %122, label %17, !prof !2

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %19 = load i32, i32* %18, align 8
  %20 = add i32 %19, -4
  store i32 %20, i32* %18, align 8
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %122

22:                                               ; preds = %17
  %23 = bitcast %"struct.OT::fvar"* %0 to i16*
  %24 = load i16, i16* %23, align 1
  %25 = icmp ne i16 %24, 256
  %26 = icmp ult i32 %15, 16
  %27 = or i1 %25, %26
  br i1 %27, label %122, label %28, !prof !13

28:                                               ; preds = %22
  %29 = add i32 %19, -20
  store i32 %29, i32* %18, align 8
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %122

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %0, i64 0, i32 4
  %33 = bitcast %"struct.OT::IntType"* %32 to i16*
  %34 = load i16, i16* %33, align 1
  %35 = icmp eq i16 %34, 5120
  br i1 %35, label %36, label %122

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %0, i64 0, i32 6
  %38 = bitcast %"struct.OT::IntType"* %37 to i16*
  %39 = load i16, i16* %38, align 1
  %40 = tail call i16 @llvm.bswap.i16(i16 %39) #4
  %41 = zext i16 %40 to i32
  %42 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %0, i64 0, i32 3
  %43 = bitcast %"struct.OT::IntType"* %42 to i16*
  %44 = load i16, i16* %43, align 1
  %45 = tail call i16 @llvm.bswap.i16(i16 %44) #4
  %46 = zext i16 %45 to i32
  %47 = shl nuw nsw i32 %46, 2
  %48 = add nuw nsw i32 %47, 4
  %49 = icmp ugt i32 %48, %41
  br i1 %49, label %122, label %50

50:                                               ; preds = %36
  %51 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %0, i64 0, i32 1
  %52 = bitcast %"struct.OT::OffsetTo"* %51 to i16*
  %53 = load i16, i16* %52, align 1
  %54 = icmp eq i16 %53, 0
  %55 = tail call i16 @llvm.bswap.i16(i16 %53) #4
  %56 = zext i16 %55 to i64
  %57 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %56
  %58 = bitcast i8* %57 to %"struct.OT::AxisRecord"*
  %59 = select i1 %54, %"struct.OT::AxisRecord"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::AxisRecord"*), %"struct.OT::AxisRecord"* %58, !prof !2
  %60 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %61 = mul nuw nsw i32 %46, 20
  %62 = icmp eq i16 %44, 0
  br i1 %62, label %75, label %63

63:                                               ; preds = %50
  %64 = icmp ugt i8* %5, %60
  %65 = icmp ult i8* %9, %60
  %66 = or i1 %64, %65
  br i1 %66, label %122, label %67, !prof !13

67:                                               ; preds = %63
  %68 = ptrtoint %"struct.OT::AxisRecord"* %59 to i64
  %69 = sub i64 %12, %68
  %70 = trunc i64 %69 to i32
  %71 = icmp ugt i32 %61, %70
  br i1 %71, label %122, label %72, !prof !2

72:                                               ; preds = %67
  %73 = sub nsw i32 %29, %61
  store i32 %73, i32* %18, align 8
  %74 = icmp sgt i32 %73, 0
  br i1 %74, label %75, label %122

75:                                               ; preds = %50, %72
  %76 = phi i32 [ %29, %50 ], [ %73, %72 ]
  %77 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %0, i64 0, i32 5
  %78 = bitcast %"struct.OT::IntType"* %77 to i16*
  %79 = load i16, i16* %78, align 1
  %80 = tail call i16 @llvm.bswap.i16(i16 %79) #4
  %81 = zext i16 %80 to i32
  %82 = icmp eq i16 %79, 0
  br i1 %82, label %97, label %83, !prof !2

83:                                               ; preds = %75
  %84 = load i16, i16* %52, align 1
  %85 = icmp eq i16 %84, 0
  %86 = tail call i16 @llvm.bswap.i16(i16 %84) #4
  %87 = zext i16 %86 to i64
  %88 = getelementptr inbounds %"struct.OT::fvar", %"struct.OT::fvar"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %87
  %89 = bitcast i8* %88 to %"struct.OT::AxisRecord"*
  %90 = select i1 %85, %"struct.OT::AxisRecord"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::AxisRecord"*), %"struct.OT::AxisRecord"* %89, !prof !2
  %91 = load i16, i16* %43, align 1
  %92 = tail call i16 @llvm.bswap.i16(i16 %91) #4
  %93 = zext i16 %92 to i64
  %94 = mul nuw nsw i64 %93, 20
  %95 = getelementptr inbounds %"struct.OT::AxisRecord", %"struct.OT::AxisRecord"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %94
  %96 = bitcast i8* %95 to %"struct.OT::InstanceRecord"*
  br label %97

97:                                               ; preds = %75, %83
  %98 = phi %"struct.OT::InstanceRecord"* [ %96, %83 ], [ null, %75 ]
  %99 = load i16, i16* %38, align 1
  %100 = tail call i16 @llvm.bswap.i16(i16 %99) #4
  %101 = zext i16 %100 to i32
  %102 = icmp eq i16 %99, 0
  br i1 %102, label %106, label %103

103:                                              ; preds = %97
  %104 = udiv i32 -1, %101
  %105 = icmp ugt i32 %104, %81
  br i1 %105, label %106, label %122

106:                                              ; preds = %103, %97
  %107 = getelementptr inbounds %"struct.OT::InstanceRecord", %"struct.OT::InstanceRecord"* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %108 = mul nuw i32 %101, %81
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %122, label %110

110:                                              ; preds = %106
  %111 = icmp ugt i8* %5, %107
  %112 = icmp ult i8* %9, %107
  %113 = or i1 %111, %112
  br i1 %113, label %122, label %114, !prof !13

114:                                              ; preds = %110
  %115 = ptrtoint %"struct.OT::InstanceRecord"* %98 to i64
  %116 = sub i64 %12, %115
  %117 = trunc i64 %116 to i32
  %118 = icmp ugt i32 %108, %117
  br i1 %118, label %122, label %119, !prof !2

119:                                              ; preds = %114
  %120 = sub i32 %76, %108
  store i32 %120, i32* %18, align 8
  %121 = icmp sgt i32 %120, 0
  br label %122

122:                                              ; preds = %22, %119, %114, %110, %106, %103, %63, %67, %2, %7, %11, %36, %72, %31, %28, %17
  %123 = phi i1 [ false, %72 ], [ false, %36 ], [ false, %31 ], [ false, %28 ], [ false, %22 ], [ false, %17 ], [ false, %11 ], [ false, %7 ], [ false, %2 ], [ false, %67 ], [ false, %63 ], [ false, %103 ], [ true, %106 ], [ false, %114 ], [ false, %110 ], [ %121, %119 ]
  ret i1 %123
}

declare i8* @hb_blob_get_data_writable(%struct.hb_blob_t*, i32*) local_unnamed_addr #3

declare void @hb_blob_make_immutable(%struct.hb_blob_t*) local_unnamed_addr #3

declare void @hb_blob_destroy(%struct.hb_blob_t*) local_unnamed_addr #3

declare %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN2OT4avarE22hb_table_lazy_loader_tIS1_Lj17EE9hb_face_tLj17E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.57*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %struct.hb_sanitize_context_t, align 8
  %3 = bitcast %struct.hb_lazy_loader_t.57* %0 to i64*
  %4 = load atomic i64, i64* %3 acquire, align 8
  %5 = inttoptr i64 %4 to %struct.hb_blob_t*
  %6 = icmp eq i64 %4, 0
  br i1 %6, label %7, label %46, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.hb_lazy_loader_t.57, %struct.hb_lazy_loader_t.57* %0, i64 -17
  %9 = bitcast %struct.hb_lazy_loader_t.57* %8 to %struct.hb_face_t**
  %10 = bitcast %struct.hb_sanitize_context_t* %2 to i8*
  %11 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 2
  %13 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 8
  %14 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 9
  %15 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 10
  %16 = bitcast i8** %12 to i8*
  %17 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 11
  br label %18

18:                                               ; preds = %7, %41
  %19 = load %struct.hb_face_t*, %struct.hb_face_t** %9, align 8
  %20 = icmp eq %struct.hb_face_t* %19, null
  br i1 %20, label %21, label %23, !prof !2

21:                                               ; preds = %18
  %22 = call %struct.hb_blob_t* @hb_blob_get_empty() #4
  br label %46

23:                                               ; preds = %18
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10) #4
  store i32 0, i32* %11, align 8
  store i32 0, i32* %13, align 4
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %14, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 25, i1 false) #4
  %24 = call i32 @hb_face_get_glyph_count(%struct.hb_face_t* nonnull %19) #4
  store i32 %24, i32* %15, align 8
  store i8 1, i8* %17, align 4
  %25 = call %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t* nonnull %19, i32 1635148146) #4
  %26 = call %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4avarEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t* nonnull %2, %struct.hb_blob_t* %25) #4
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #4
  %27 = icmp eq %struct.hb_blob_t* %26, null
  br i1 %27, label %28, label %30, !prof !2

28:                                               ; preds = %23
  %29 = call %struct.hb_blob_t* @hb_blob_get_empty() #4
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi %struct.hb_blob_t* [ %29, %28 ], [ %26, %23 ]
  %32 = ptrtoint %struct.hb_blob_t* %31 to i64
  %33 = cmpxchg weak i64* %3, i64 0, i64 %32 acq_rel monotonic
  %34 = extractvalue { i64, i1 } %33, 1
  br i1 %34, label %46, label %35, !prof !3

35:                                               ; preds = %30
  %36 = icmp eq %struct.hb_blob_t* %31, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %35
  %38 = call %struct.hb_blob_t* @hb_blob_get_empty() #4
  %39 = icmp eq %struct.hb_blob_t* %38, %31
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  call void @hb_blob_destroy(%struct.hb_blob_t* nonnull %31) #4
  br label %41

41:                                               ; preds = %40, %37, %35
  %42 = load atomic i64, i64* %3 acquire, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %18, label %44, !prof !2

44:                                               ; preds = %41
  %45 = inttoptr i64 %42 to %struct.hb_blob_t*
  br label %46

46:                                               ; preds = %30, %1, %44, %21
  %47 = phi %struct.hb_blob_t* [ %22, %21 ], [ %45, %44 ], [ %5, %1 ], [ %31, %30 ]
  ret %struct.hb_blob_t* %47
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4avarEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t*, %struct.hb_blob_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %1) #4
  %4 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 9
  store %struct.hb_blob_t* %3, %struct.hb_blob_t** %4, align 8
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 6
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 3
  %8 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 4
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 8
  %10 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %1, i64 0, i32 2
  br label %12

12:                                               ; preds = %52, %2
  %13 = phi %struct.hb_blob_t* [ %3, %2 ], [ %58, %52 ]
  %14 = phi i8 [ 0, %2 ], [ 1, %52 ]
  store i8 %14, i8* %5, align 8
  %15 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %13, i64 0, i32 1
  %16 = load i8*, i8** %15, align 8
  store i8* %16, i8** %6, align 8
  %17 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %13, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %16, i64 %19
  store i8* %20, i8** %7, align 8
  %21 = icmp ugt i32 %18, 67108862
  br i1 %21, label %28, label %22, !prof !2

22:                                               ; preds = %12
  %23 = shl i32 %18, 6
  %24 = icmp ugt i32 %23, 16384
  %25 = select i1 %24, i32 %23, i32 16384
  %26 = icmp ult i32 %25, 1073741823
  %27 = select i1 %26, i32 %25, i32 1073741823
  br label %28

28:                                               ; preds = %12, %22
  %29 = phi i32 [ %27, %22 ], [ 1073741823, %12 ]
  store i32 %29, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %30 = icmp eq i8* %16, null
  br i1 %30, label %31, label %33, !prof !2

31:                                               ; preds = %28
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %13) #4
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %32 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #4
  br label %70

33:                                               ; preds = %28
  %34 = bitcast i8* %16 to %"struct.OT::avar"*
  %35 = tail call zeroext i1 @_ZNK2OT4avar8sanitizeEP21hb_sanitize_context_t(%"struct.OT::avar"* nonnull %34, %struct.hb_sanitize_context_t* %0)
  %36 = load i32, i32* %9, align 4
  %37 = icmp ne i32 %36, 0
  br i1 %35, label %38, label %48

38:                                               ; preds = %33
  br i1 %37, label %39, label %59

39:                                               ; preds = %38
  %40 = bitcast i8* %16 to %"struct.OT::avar"*
  store i32 0, i32* %9, align 4
  %41 = tail call zeroext i1 @_ZNK2OT4avar8sanitizeEP21hb_sanitize_context_t(%"struct.OT::avar"* nonnull %40, %struct.hb_sanitize_context_t* %0)
  %42 = load i32, i32* %9, align 4
  %43 = icmp ne i32 %42, 0
  %44 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %44) #4
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %45 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #4
  %46 = xor i1 %41, true
  %47 = or i1 %43, %46
  br i1 %47, label %68, label %62

48:                                               ; preds = %33
  br i1 %37, label %49, label %63

49:                                               ; preds = %48
  %50 = load i8, i8* %5, align 8, !range !12
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %63

52:                                               ; preds = %49
  %53 = tail call i8* @hb_blob_get_data_writable(%struct.hb_blob_t* %1, i32* null) #4
  store i8* %53, i8** %6, align 8
  %54 = load i32, i32* %11, align 8
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %53, i64 %55
  store i8* %56, i8** %7, align 8
  %57 = icmp eq i8* %53, null
  %58 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  br i1 %57, label %65, label %12

59:                                               ; preds = %38
  %60 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %60) #4
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %61 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false) #4
  br label %62

62:                                               ; preds = %39, %59
  tail call void @hb_blob_make_immutable(%struct.hb_blob_t* %1) #4
  br label %70

63:                                               ; preds = %48, %49
  %64 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  br label %65

65:                                               ; preds = %52, %63
  %66 = phi %struct.hb_blob_t* [ %64, %63 ], [ %58, %52 ]
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %66) #4
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %67 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #4
  br label %68

68:                                               ; preds = %65, %39
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %1) #4
  %69 = tail call %struct.hb_blob_t* @hb_blob_get_empty() #4
  br label %70

70:                                               ; preds = %68, %62, %31
  %71 = phi %struct.hb_blob_t* [ %1, %31 ], [ %69, %68 ], [ %1, %62 ]
  ret %struct.hb_blob_t* %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT4avar8sanitizeEP21hb_sanitize_context_t(%"struct.OT::avar"*, %struct.hb_sanitize_context_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.OT::avar", %"struct.OT::avar"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %4 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %5 = load i8*, i8** %4, align 8
  %6 = icmp ugt i8* %5, %3
  br i1 %6, label %90, label %7, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = icmp ult i8* %9, %3
  br i1 %10, label %90, label %11, !prof !2

11:                                               ; preds = %7
  %12 = ptrtoint i8* %9 to i64
  %13 = ptrtoint %"struct.OT::avar"* %0 to i64
  %14 = sub i64 %12, %13
  %15 = trunc i64 %14 to i32
  %16 = icmp ult i32 %15, 4
  br i1 %16, label %90, label %17, !prof !2

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %19 = load i32, i32* %18, align 8
  %20 = add i32 %19, -4
  store i32 %20, i32* %18, align 8
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %90, !prof !3

22:                                               ; preds = %17
  %23 = bitcast %"struct.OT::avar"* %0 to i16*
  %24 = load i16, i16* %23, align 1
  %25 = icmp ne i16 %24, 256
  %26 = icmp ult i32 %15, 8
  %27 = or i1 %25, %26
  br i1 %27, label %90, label %28, !prof !13

28:                                               ; preds = %22
  %29 = add i32 %19, -12
  store i32 %29, i32* %18, align 8
  %30 = icmp slt i32 %29, 1
  br i1 %30, label %90, label %31, !prof !2

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"struct.OT::avar", %"struct.OT::avar"* %0, i64 0, i32 2
  %33 = bitcast %"struct.OT::IntType"* %32 to i16*
  %34 = load i16, i16* %33, align 1
  %35 = tail call i16 @llvm.bswap.i16(i16 %34) #4
  %36 = zext i16 %35 to i32
  %37 = icmp eq i16 %34, 0
  br i1 %37, label %90, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.OT::avar", %"struct.OT::avar"* %0, i64 0, i32 3
  br label %40

40:                                               ; preds = %38, %79
  %41 = phi i32 [ %81, %79 ], [ %29, %38 ]
  %42 = phi i32 [ %88, %79 ], [ 0, %38 ]
  %43 = phi %"struct.OT::SegmentMaps"* [ %87, %79 ], [ %39, %38 ]
  %44 = getelementptr inbounds %"struct.OT::SegmentMaps", %"struct.OT::SegmentMaps"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %45 = icmp ugt i8* %5, %44
  %46 = icmp ult i8* %9, %44
  %47 = or i1 %45, %46
  br i1 %47, label %90, label %48, !prof !13

48:                                               ; preds = %40
  %49 = ptrtoint %"struct.OT::SegmentMaps"* %43 to i64
  %50 = sub i64 %12, %49
  %51 = trunc i64 %50 to i32
  %52 = icmp ult i32 %51, 2
  br i1 %52, label %90, label %53, !prof !2

53:                                               ; preds = %48
  %54 = add i32 %41, -2
  store i32 %54, i32* %18, align 8
  %55 = icmp sgt i32 %54, 0
  br i1 %55, label %56, label %90, !prof !14

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"struct.OT::SegmentMaps", %"struct.OT::SegmentMaps"* %43, i64 0, i32 0, i32 1, i64 0
  %58 = bitcast %"struct.OT::SegmentMaps"* %43 to i16*
  %59 = load i16, i16* %58, align 1
  %60 = tail call i16 @llvm.bswap.i16(i16 %59) #4
  %61 = zext i16 %60 to i32
  %62 = getelementptr inbounds %"struct.OT::AxisValueMap", %"struct.OT::AxisValueMap"* %57, i64 0, i32 0, i64 0, i32 0, i32 0, i32 0, i64 0
  %63 = shl nuw nsw i32 %61, 2
  %64 = icmp eq i16 %59, 0
  br i1 %64, label %79, label %65

65:                                               ; preds = %56
  %66 = icmp ugt i8* %5, %62
  %67 = icmp ult i8* %9, %62
  %68 = or i1 %66, %67
  br i1 %68, label %90, label %69, !prof !13

69:                                               ; preds = %65
  %70 = ptrtoint %"struct.OT::AxisValueMap"* %57 to i64
  %71 = sub i64 %12, %70
  %72 = trunc i64 %71 to i32
  %73 = icmp ugt i32 %63, %72
  br i1 %73, label %90, label %74, !prof !2

74:                                               ; preds = %69
  %75 = sub nsw i32 %54, %63
  store i32 %75, i32* %18, align 8
  %76 = icmp sgt i32 %75, 0
  br i1 %76, label %77, label %90, !prof !3

77:                                               ; preds = %74
  %78 = load i16, i16* %58, align 1
  br label %79

79:                                               ; preds = %77, %56
  %80 = phi i16 [ %78, %77 ], [ 0, %56 ]
  %81 = phi i32 [ %75, %77 ], [ %54, %56 ]
  %82 = tail call i16 @llvm.bswap.i16(i16 %80) #4
  %83 = zext i16 %82 to i64
  %84 = shl nuw nsw i64 %83, 2
  %85 = or i64 %84, 2
  %86 = getelementptr inbounds %"struct.OT::SegmentMaps", %"struct.OT::SegmentMaps"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %85
  %87 = bitcast i8* %86 to %"struct.OT::SegmentMaps"*
  %88 = add nuw nsw i32 %42, 1
  %89 = icmp ult i32 %88, %36
  br i1 %89, label %40, label %90

90:                                               ; preds = %79, %74, %53, %48, %40, %69, %65, %22, %31, %2, %7, %11, %28, %17
  %91 = phi i1 [ false, %17 ], [ false, %22 ], [ false, %28 ], [ false, %11 ], [ false, %7 ], [ false, %2 ], [ true, %31 ], [ true, %79 ], [ false, %74 ], [ false, %53 ], [ false, %48 ], [ false, %40 ], [ false, %69 ], [ false, %65 ]
  ret i1 %91
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.usub.sat.i32(i32, i32) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6}
!6 = distinct !{!6, !"LVerDomain"}
!7 = !{!8}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !10}
!12 = !{i8 0, i8 2}
!13 = !{!"branch_weights", i32 4001, i32 4000000}
!14 = !{!"branch_weights", i32 2146410443, i32 1073205}
