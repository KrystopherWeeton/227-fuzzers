; ModuleID = '../../third_party/blink/renderer/core/scroll/smooth_scroll_sequencer.cc'
source_filename = "../../third_party/blink/renderer/core/scroll/smooth_scroll_sequencer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.21", i32, [4 x i8], %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.191", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.198", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.137", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__cxx_atomic_impl.60" }
%"struct.std::__1::__cxx_atomic_impl.60" = type { %"struct.std::__1::__cxx_atomic_base_impl.61" }
%"struct.std::__1::__cxx_atomic_base_impl.61" = type { i64 }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::Worklist.68"* }
%"class.blink::Worklist.68" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::Worklist.75"* }
%"class.blink::Worklist.75" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::Worklist.82"* }
%"class.blink::Worklist.82" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::Worklist.89"* }
%"class.blink::Worklist.89" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::Worklist.96"* }
%"class.blink::Worklist.96" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::Worklist.103"* }
%"class.blink::Worklist.103" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::Worklist.110"* }
%"class.blink::Worklist.110" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.117", %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.129", %"class.std::__1::__compressed_pair.131", [4 x i8] }>
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119", %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { i64 }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { float }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.140", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.149" }
%"class.WTF::Vector.149" = type { %"class.WTF::VectorBuffer.150" }
%"class.WTF::VectorBuffer.150" = type { %"class.WTF::VectorBufferBase.151" }
%"class.WTF::VectorBufferBase.151" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.165" }
%"class.WTF::VectorBuffer.165" = type { %"class.WTF::VectorBufferBase.166" }
%"class.WTF::VectorBufferBase.166" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.179" }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.68"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.75"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.82"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.89"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.96"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.202" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.197 }
%class.scoped_refptr.197 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.198" = type { %"struct.std::__1::__atomic_base.199" }
%"struct.std::__1::__atomic_base.199" = type { %"struct.std::__1::__cxx_atomic_impl.200" }
%"struct.std::__1::__cxx_atomic_impl.200" = type { %"struct.std::__1::__cxx_atomic_base_impl.201" }
%"struct.std::__1::__cxx_atomic_base_impl.201" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::SequencedScroll" = type <{ %"class.blink::Member", %"class.blink::FloatSize", i32, [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.0", %"class.blink::Member.2", %"class.blink::Member.4", %"class.blink::Member.6", %"class.WTF::Vector", i16, %class.scoped_refptr.9 }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type { %"class.blink::ScrollAnimatorCompositorCoordinator", %"class.blink::Member", %"class.std::__1::unique_ptr.15", %"class.blink::FloatSize", double, i8, %"class.base::OnceCallback" }
%"class.blink::ScrollAnimatorCompositorCoordinator" = type { %"class.blink::CompositorAnimationClient", %"class.blink::CompositorAnimationDelegate", %"class.blink::ThreadState::PrefinalizerRegistration.13", %"class.std::__1::unique_ptr", %"struct.cc::ElementId", i32, %"class.blink::IntSize", i8, i32, i32 }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration.13" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"struct.cc::ElementId" = type { i64 }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.blink::CompositorScrollOffsetAnimationCurve"* }
%"class.blink::CompositorScrollOffsetAnimationCurve" = type opaque
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.base::OnceCallback"*, i32, i32 }
%class.scoped_refptr.9 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.10" }>
%"class.base::RefCountedThreadSafe.10" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.221", %"class.blink::FreeList", %"class.WTF::Vector.226" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.221" = type { %"class.WTF::VectorBuffer.222" }
%"class.WTF::VectorBuffer.222" = type { %"class.WTF::VectorBufferBase.223" }
%"class.WTF::VectorBufferBase.223" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.226" = type { %"class.WTF::VectorBuffer.227" }
%"class.WTF::VectorBuffer.227" = type { %"class.WTF::VectorBufferBase.228" }
%"class.WTF::VectorBufferBase.228" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.blink::SmoothScrollSequencer" = type <{ %"class.blink::HeapVector", %"class.blink::Member", i32, [4 x i8] }>
%"class.blink::HeapVector" = type { %"class.WTF::Vector.211" }
%"class.WTF::Vector.211" = type { %"class.WTF::VectorBuffer.212" }
%"class.WTF::VectorBuffer.212" = type { %"class.WTF::VectorBufferBase.213" }
%"class.WTF::VectorBufferBase.213" = type { %"class.blink::Member.214"*, i32, i32 }
%"class.blink::Member.214" = type { %"class.blink::MemberBase.215" }
%"class.blink::MemberBase.215" = type { %"struct.blink::SequencedScroll"* }
%"struct.std::__1::atomic.246" = type { %"struct.std::__1::__atomic_base.247" }
%"struct.std::__1::__atomic_base.247" = type { %"struct.std::__1::__atomic_base.248" }
%"struct.std::__1::__atomic_base.248" = type { %"struct.std::__1::__cxx_atomic_impl.249" }
%"struct.std::__1::__cxx_atomic_impl.249" = type { %"struct.std::__1::__cxx_atomic_base_impl.250" }
%"struct.std::__1::__cxx_atomic_base_impl.250" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZN5blink10ThreadHeap8AllocateINS_15SequencedScrollEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15SequencedScrollEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_15SequencedScrollEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15SequencedScrollEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15SequencedScrollEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15SequencedScrollEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15SequencedScrollEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15SequencedScrollEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_15SequencedScrollEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15SequencedScrollEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_15SequencedScrollEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15SequencedScrollEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZZN5blink11GCInfoTraitINS_15SequencedScrollEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15SequencedScrollEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15SequencedScrollEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15SequencedScrollEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15SequencedScrollEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SequencedScroll]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15SequencedScrollEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15SequencedScrollEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15SequencedScrollEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15SequencedScrollEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.6 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.8 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15SequencedScrollEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15SequencedScrollEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_15SequencedScrollEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15SequencedScrollEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_15SequencedScrollEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [171 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::SequencedScroll>, WTF::VectorTraits<blink::Member<blink::SequencedScroll> > >]\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15SequencedScroll5TraceEPNS_7VisitorE(%"struct.blink::SequencedScroll"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.blink::SequencedScroll"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %72, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = and i64 %4, -131072
  %9 = inttoptr i64 %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 4138
  %11 = load i8, i8* %10, align 2
  %12 = icmp eq i8 %11, 1
  br i1 %12, label %13, label %15

13:                                               ; preds = %6
  %14 = getelementptr inbounds i8, i8* %9, i64 4160
  br label %53

15:                                               ; preds = %6
  %16 = getelementptr inbounds i8, i8* %9, i64 4096
  %17 = bitcast i8* %16 to %"class.blink::NormalPage"*
  %18 = getelementptr inbounds i8, i8* %9, i64 4400
  %19 = bitcast i8* %18 to i8**
  %20 = bitcast i8* %18 to i64*
  %21 = load i64, i64* %20, align 16
  %22 = sub i64 %4, %21
  %23 = lshr i64 %22, 3
  %24 = lshr i64 %22, 6
  %25 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %17, i64 0, i32 2, i32 0, i32 1, i64 %24
  %26 = load atomic i8, i8* %25 acquire, align 1
  %27 = trunc i64 %23 to i32
  %28 = and i32 %27, 7
  %29 = shl i32 2, %28
  %30 = trunc i32 %29 to i8
  %31 = add i8 %30, -1
  %32 = and i8 %31, %26
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %40

34:                                               ; preds = %15, %34
  %35 = phi i64 [ %36, %34 ], [ %24, %15 ]
  %36 = add i64 %35, -1
  %37 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %17, i64 0, i32 2, i32 0, i32 1, i64 %36
  %38 = load atomic i8, i8* %37 acquire, align 1
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %34, label %40

40:                                               ; preds = %34, %15
  %41 = phi i64 [ %24, %15 ], [ %36, %34 ]
  %42 = phi i8 [ %32, %15 ], [ %38, %34 ]
  %43 = zext i8 %42 to i32
  %44 = tail call i32 @llvm.ctlz.i32(i32 %43, i1 true) #8, !range !2
  %45 = add nsw i32 %44, -24
  %46 = shl i64 %41, 3
  %47 = or i64 %46, 7
  %48 = sext i32 %45 to i64
  %49 = sub i64 %47, %48
  %50 = shl i64 %49, 3
  %51 = load i8*, i8** %19, align 16
  %52 = getelementptr inbounds i8, i8* %51, i64 %50
  br label %53

53:                                               ; preds = %40, %13
  %54 = phi i8* [ %14, %13 ], [ %52, %40 ]
  %55 = getelementptr inbounds i8, i8* %54, i64 8
  %56 = getelementptr inbounds i8, i8* %54, i64 4
  %57 = bitcast i8* %56 to i16*
  %58 = load atomic i16, i16* %57 acquire, align 2
  %59 = lshr i16 %58, 2
  %60 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %61 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %60, i64 0, i32 0
  %62 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %61, align 8
  %63 = zext i16 %59 to i64
  %64 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %62, i64 %63
  %65 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %64, align 8
  %66 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %65, i64 0, i32 0
  %67 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %66, align 8
  %68 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %69 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %69, i64 5
  %71 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, align 8
  tail call void %71(%"class.blink::Visitor"* %1, i8* nonnull %7, i8* %55, void (%"class.blink::Visitor"*, i8*)* %67) #8
  br label %72

72:                                               ; preds = %2, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SmoothScrollSequencer14QueueAnimationEPNS_14ScrollableAreaENS_9FloatSizeENS_5mojom14ScrollBehaviorE(%"class.blink::SmoothScrollSequencer"*, %"class.blink::ScrollableArea"*, <2 x float>, i32) local_unnamed_addr #1 align 2 {
  %5 = alloca <2 x float>, align 8
  %6 = bitcast <2 x float>* %5 to %"class.blink::FloatSize"*
  %7 = alloca %"struct.blink::SequencedScroll"*, align 8
  store <2 x float> %2, <2 x float>* %5, align 8
  %8 = ptrtoint %"class.blink::ScrollableArea"* %1 to i64
  %9 = bitcast %"class.blink::ScrollableArea"* %1 to <2 x float> (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*)***
  %10 = load <2 x float> (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*)**, <2 x float> (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*)*** %9, align 8
  %11 = getelementptr inbounds <2 x float> (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*)*, <2 x float> (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*)** %10, i64 64
  %12 = load <2 x float> (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*)*, <2 x float> (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*)** %11, align 8
  %13 = call <2 x float> %12(%"class.blink::ScrollableArea"* %1, %"class.blink::FloatSize"* nonnull dereferenceable(8) %6) #8
  %14 = bitcast %"class.blink::ScrollableArea"* %1 to <2 x float> (%"class.blink::ScrollableArea"*)***
  %15 = load <2 x float> (%"class.blink::ScrollableArea"*)**, <2 x float> (%"class.blink::ScrollableArea"*)*** %14, align 8
  %16 = getelementptr inbounds <2 x float> (%"class.blink::ScrollableArea"*)*, <2 x float> (%"class.blink::ScrollableArea"*)** %15, i64 47
  %17 = load <2 x float> (%"class.blink::ScrollableArea"*)*, <2 x float> (%"class.blink::ScrollableArea"*)** %16, align 8
  %18 = call <2 x float> %17(%"class.blink::ScrollableArea"* %1) #8
  %19 = extractelement <2 x float> %13, i32 0
  %20 = extractelement <2 x float> %18, i32 0
  %21 = fcmp oeq float %19, %20
  br i1 %21, label %22, label %26

22:                                               ; preds = %4
  %23 = extractelement <2 x float> %13, i32 1
  %24 = extractelement <2 x float> %18, i32 1
  %25 = fcmp une float %23, %24
  br i1 %25, label %26, label %63

26:                                               ; preds = %4, %22
  %27 = bitcast %"struct.blink::SequencedScroll"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  %28 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SequencedScrollEEEPhm(i64 24) #8
  %29 = bitcast <2 x float>* %5 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast i8* %28 to i64*
  store i64 %8, i64* %31, align 8
  %32 = getelementptr inbounds i8, i8* %28, i64 8
  %33 = bitcast i8* %32 to i64*
  store i64 %30, i64* %33, align 8
  %34 = getelementptr inbounds i8, i8* %28, i64 16
  %35 = bitcast i8* %34 to i32*
  store i32 %3, i32* %35, align 8
  %36 = getelementptr inbounds i8, i8* %28, i64 -4
  %37 = bitcast i8* %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = or i16 %38, 1
  store atomic i16 %39, i16* %37 release, align 2
  %40 = bitcast %"struct.blink::SequencedScroll"** %7 to i8**
  store i8* %28, i8** %40, align 8
  %41 = getelementptr inbounds %"class.blink::SmoothScrollSequencer", %"class.blink::SmoothScrollSequencer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.blink::SmoothScrollSequencer", %"class.blink::SmoothScrollSequencer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %42, %44
  br i1 %45, label %60, label %46, !prof !3

46:                                               ; preds = %26
  %47 = ptrtoint i8* %28 to i64
  %48 = getelementptr inbounds %"class.blink::SmoothScrollSequencer", %"class.blink::SmoothScrollSequencer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::Member.214"*, %"class.blink::Member.214"** %48, align 8
  %50 = zext i32 %42 to i64
  %51 = getelementptr inbounds %"class.blink::Member.214", %"class.blink::Member.214"* %49, i64 %50
  %52 = bitcast %"class.blink::Member.214"* %51 to i64*
  store atomic i64 %47, i64* %52 monotonic, align 8
  %53 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %46
  %56 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %28) #8
  br label %57

57:                                               ; preds = %55, %46
  %58 = load i32, i32* %41, align 4
  %59 = add i32 %58, 1
  store i32 %59, i32* %41, align 4
  br label %62

60:                                               ; preds = %26
  %61 = getelementptr inbounds %"class.blink::SmoothScrollSequencer", %"class.blink::SmoothScrollSequencer"* %0, i64 0, i32 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15SequencedScrollEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.211"* %61, %"struct.blink::SequencedScroll"** nonnull dereferenceable(8) %7) #8
  br label %62

62:                                               ; preds = %57, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %63

63:                                               ; preds = %62, %22
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SmoothScrollSequencer19RunQueuedAnimationsEv(%"class.blink::SmoothScrollSequencer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SmoothScrollSequencer", %"class.blink::SmoothScrollSequencer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SmoothScrollSequencer", %"class.blink::SmoothScrollSequencer"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::Member"* %6 to i64*
  store atomic i64 0, i64* %7 monotonic, align 8
  %8 = getelementptr inbounds %"class.blink::SmoothScrollSequencer", %"class.blink::SmoothScrollSequencer"* %0, i64 0, i32 2
  store i32 1, i32* %8, align 8
  br label %48

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::SmoothScrollSequencer", %"class.blink::SmoothScrollSequencer"* %0, i64 0, i32 0, i32 0
  %11 = add i32 %3, -1
  %12 = tail call dereferenceable(8) %"class.blink::Member.214"* @_ZN3WTF6VectorIN5blink6MemberINS1_15SequencedScrollEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.211"* %10, i32 %11) #8
  %13 = getelementptr inbounds %"class.blink::Member.214", %"class.blink::Member.214"* %12, i64 0, i32 0, i32 0
  %14 = load %"struct.blink::SequencedScroll"*, %"struct.blink::SequencedScroll"** %13, align 8
  %15 = load i32, i32* %2, align 4
  %16 = add i32 %15, -1
  %17 = getelementptr inbounds %"class.blink::SmoothScrollSequencer", %"class.blink::SmoothScrollSequencer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::Member.214"*, %"class.blink::Member.214"** %17, align 8
  %19 = zext i32 %16 to i64
  %20 = zext i32 %15 to i64
  %21 = getelementptr inbounds %"class.blink::Member.214", %"class.blink::Member.214"* %18, i64 %19
  %22 = getelementptr inbounds %"class.blink::Member.214", %"class.blink::Member.214"* %18, i64 %20
  %23 = bitcast %"class.blink::Member.214"* %21 to i8*
  %24 = ptrtoint %"class.blink::Member.214"* %22 to i64
  %25 = ptrtoint %"class.blink::Member.214"* %21 to i64
  %26 = sub i64 %24, %25
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %23, i64 %26) #8
  store i32 %16, i32* %2, align 4
  %27 = getelementptr inbounds %"class.blink::SmoothScrollSequencer", %"class.blink::SmoothScrollSequencer"* %0, i64 0, i32 1
  %28 = bitcast %"struct.blink::SequencedScroll"* %14 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.blink::Member"* %27 to i64*
  store atomic i64 %29, i64* %30 monotonic, align 8
  %31 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %32 = icmp eq i32 %31, 0
  %33 = inttoptr i64 %29 to %"class.blink::ScrollableArea"*
  br i1 %32, label %39, label %34

34:                                               ; preds = %9
  %35 = inttoptr i64 %29 to i8*
  %36 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %35) #8
  %37 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %27, i64 0, i32 0, i32 0
  %38 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %37, align 8
  br label %39

39:                                               ; preds = %9, %34
  %40 = phi %"class.blink::ScrollableArea"* [ %33, %9 ], [ %38, %34 ]
  %41 = getelementptr inbounds %"struct.blink::SequencedScroll", %"struct.blink::SequencedScroll"* %14, i64 0, i32 1
  %42 = getelementptr inbounds %"struct.blink::SequencedScroll", %"struct.blink::SequencedScroll"* %14, i64 0, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = bitcast %"class.blink::ScrollableArea"* %40 to void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)***
  %45 = load void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)**, void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)*, void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)** %45, i64 5
  %47 = load void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)*, void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)** %46, align 8
  tail call void %47(%"class.blink::ScrollableArea"* %40, %"class.blink::FloatSize"* dereferenceable(8) %41, i32 5, i32 %43) #8
  br label %48

48:                                               ; preds = %39, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SmoothScrollSequencer15AbortAnimationsEv(%"class.blink::SmoothScrollSequencer"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SmoothScrollSequencer", %"class.blink::SmoothScrollSequencer"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %3, align 8
  %5 = icmp eq %"class.blink::ScrollableArea"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::ScrollableArea"* %4 to void (%"class.blink::ScrollableArea"*)***
  %8 = load void (%"class.blink::ScrollableArea"*)**, void (%"class.blink::ScrollableArea"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::ScrollableArea"*)*, void (%"class.blink::ScrollableArea"*)** %8, i64 79
  %10 = load void (%"class.blink::ScrollableArea"*)*, void (%"class.blink::ScrollableArea"*)** %9, align 8
  tail call void %10(%"class.blink::ScrollableArea"* nonnull %4) #8
  %11 = bitcast %"class.blink::Member"* %2 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  br label %12

12:                                               ; preds = %1, %6
  %13 = getelementptr inbounds %"class.blink::SmoothScrollSequencer", %"class.blink::SmoothScrollSequencer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::SmoothScrollSequencer", %"class.blink::SmoothScrollSequencer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  %20 = bitcast %"class.blink::SmoothScrollSequencer"* %0 to i8**
  br i1 %19, label %25, label %21

21:                                               ; preds = %16
  %22 = load i8*, i8** %20, align 8
  %23 = zext i32 %18 to i64
  %24 = shl nuw nsw i64 %23, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %22, i64 %24) #8
  store i32 0, i32* %17, align 4
  br label %25

25:                                               ; preds = %21, %16
  %26 = load i8*, i8** %20, align 8
  %27 = bitcast %"class.blink::SmoothScrollSequencer"* %0 to i64*
  store atomic i64 0, i64* %27 monotonic, align 8
  store i32 0, i32* %13, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %26) #8
  br label %28

28:                                               ; preds = %12, %25
  %29 = getelementptr inbounds %"class.blink::SmoothScrollSequencer", %"class.blink::SmoothScrollSequencer"* %0, i64 0, i32 2
  store i32 1, i32* %29, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21SmoothScrollSequencer29FilterNewScrollOrAbortCurrentENS_5mojom10ScrollTypeE(%"class.blink::SmoothScrollSequencer"* nocapture, i32) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %3 [
    i32 5, label %37
    i32 4, label %37
    i32 2, label %37
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.blink::SmoothScrollSequencer", %"class.blink::SmoothScrollSequencer"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  %7 = icmp ne i32 %1, 0
  %8 = and i1 %7, %6
  br i1 %8, label %37, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::SmoothScrollSequencer", %"class.blink::SmoothScrollSequencer"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %11, align 8
  %13 = icmp eq %"class.blink::ScrollableArea"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.blink::ScrollableArea"* %12 to void (%"class.blink::ScrollableArea"*)***
  %16 = load void (%"class.blink::ScrollableArea"*)**, void (%"class.blink::ScrollableArea"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::ScrollableArea"*)*, void (%"class.blink::ScrollableArea"*)** %16, i64 79
  %18 = load void (%"class.blink::ScrollableArea"*)*, void (%"class.blink::ScrollableArea"*)** %17, align 8
  tail call void %18(%"class.blink::ScrollableArea"* nonnull %12) #8
  %19 = bitcast %"class.blink::Member"* %10 to i64*
  store atomic i64 0, i64* %19 monotonic, align 8
  br label %20

20:                                               ; preds = %14, %9
  %21 = getelementptr inbounds %"class.blink::SmoothScrollSequencer", %"class.blink::SmoothScrollSequencer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %36, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::SmoothScrollSequencer", %"class.blink::SmoothScrollSequencer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  %28 = bitcast %"class.blink::SmoothScrollSequencer"* %0 to i8**
  br i1 %27, label %33, label %29

29:                                               ; preds = %24
  %30 = load i8*, i8** %28, align 8
  %31 = zext i32 %26 to i64
  %32 = shl nuw nsw i64 %31, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %30, i64 %32) #8
  store i32 0, i32* %25, align 4
  br label %33

33:                                               ; preds = %29, %24
  %34 = load i8*, i8** %28, align 8
  %35 = bitcast %"class.blink::SmoothScrollSequencer"* %0 to i64*
  store atomic i64 0, i64* %35 monotonic, align 8
  store i32 0, i32* %21, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %34) #8
  br label %36

36:                                               ; preds = %20, %33
  store i32 1, i32* %4, align 8
  br label %37

37:                                               ; preds = %3, %2, %2, %2, %36
  %38 = phi i1 [ false, %36 ], [ false, %2 ], [ false, %2 ], [ false, %2 ], [ true, %3 ]
  ret i1 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SmoothScrollSequencer24DidDisposeScrollableAreaERKNS_14ScrollableAreaE(%"class.blink::SmoothScrollSequencer"* nocapture, %"class.blink::ScrollableArea"* readnone dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SmoothScrollSequencer", %"class.blink::SmoothScrollSequencer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Member.214"*, %"class.blink::Member.214"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::SmoothScrollSequencer", %"class.blink::SmoothScrollSequencer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.blink::Member.214", %"class.blink::Member.214"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %48, label %12

10:                                               ; preds = %12
  %11 = icmp eq %"class.blink::Member.214"* %19, %8
  br i1 %11, label %48, label %12

12:                                               ; preds = %2, %10
  %13 = phi %"class.blink::Member.214"* [ %19, %10 ], [ %4, %2 ]
  %14 = getelementptr inbounds %"class.blink::Member.214", %"class.blink::Member.214"* %13, i64 0, i32 0, i32 0
  %15 = load %"struct.blink::SequencedScroll"*, %"struct.blink::SequencedScroll"** %14, align 8
  %16 = getelementptr inbounds %"struct.blink::SequencedScroll", %"struct.blink::SequencedScroll"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %16, align 8
  %18 = icmp eq %"class.blink::ScrollableArea"* %17, %1
  %19 = getelementptr inbounds %"class.blink::Member.214", %"class.blink::Member.214"* %13, i64 1
  br i1 %18, label %20, label %10

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.blink::SmoothScrollSequencer", %"class.blink::SmoothScrollSequencer"* %0, i64 0, i32 1
  %22 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %22, align 8
  %24 = icmp eq %"class.blink::ScrollableArea"* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::ScrollableArea"* %23 to void (%"class.blink::ScrollableArea"*)***
  %27 = load void (%"class.blink::ScrollableArea"*)**, void (%"class.blink::ScrollableArea"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::ScrollableArea"*)*, void (%"class.blink::ScrollableArea"*)** %27, i64 79
  %29 = load void (%"class.blink::ScrollableArea"*)*, void (%"class.blink::ScrollableArea"*)** %28, align 8
  tail call void %29(%"class.blink::ScrollableArea"* nonnull %23) #8
  %30 = bitcast %"class.blink::Member"* %21 to i64*
  store atomic i64 0, i64* %30 monotonic, align 8
  br label %31

31:                                               ; preds = %25, %20
  %32 = getelementptr inbounds %"class.blink::SmoothScrollSequencer", %"class.blink::SmoothScrollSequencer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %46, label %35

35:                                               ; preds = %31
  %36 = load i32, i32* %5, align 4
  %37 = icmp eq i32 %36, 0
  %38 = bitcast %"class.blink::SmoothScrollSequencer"* %0 to i8**
  br i1 %37, label %43, label %39

39:                                               ; preds = %35
  %40 = load i8*, i8** %38, align 8
  %41 = zext i32 %36 to i64
  %42 = shl nuw nsw i64 %41, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %40, i64 %42) #8
  store i32 0, i32* %5, align 4
  br label %43

43:                                               ; preds = %39, %35
  %44 = load i8*, i8** %38, align 8
  %45 = bitcast %"class.blink::SmoothScrollSequencer"* %0 to i64*
  store atomic i64 0, i64* %45 monotonic, align 8
  store i32 0, i32* %32, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %44) #8
  br label %46

46:                                               ; preds = %31, %43
  %47 = getelementptr inbounds %"class.blink::SmoothScrollSequencer", %"class.blink::SmoothScrollSequencer"* %0, i64 0, i32 2
  store i32 1, i32* %47, align 8
  br label %48

48:                                               ; preds = %10, %2, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink21SmoothScrollSequencer5TraceEPNS_7VisitorE(%"class.blink::SmoothScrollSequencer"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::SmoothScrollSequencer"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast %"class.blink::SmoothScrollSequencer"* %0 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #8
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %1, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15SequencedScrollEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #8
  br label %17

17:                                               ; preds = %2, %11
  %18 = getelementptr inbounds %"class.blink::SmoothScrollSequencer", %"class.blink::SmoothScrollSequencer"* %0, i64 0, i32 1
  %19 = bitcast %"class.blink::Member"* %18 to i64*
  %20 = load atomic i64, i64* %19 monotonic, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %88, label %22

22:                                               ; preds = %17
  %23 = inttoptr i64 %20 to i8*
  %24 = and i64 %20, -131072
  %25 = inttoptr i64 %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 4138
  %27 = load i8, i8* %26, align 2
  %28 = icmp eq i8 %27, 1
  br i1 %28, label %29, label %31

29:                                               ; preds = %22
  %30 = getelementptr inbounds i8, i8* %25, i64 4160
  br label %69

31:                                               ; preds = %22
  %32 = getelementptr inbounds i8, i8* %25, i64 4096
  %33 = bitcast i8* %32 to %"class.blink::NormalPage"*
  %34 = getelementptr inbounds i8, i8* %25, i64 4400
  %35 = bitcast i8* %34 to i8**
  %36 = bitcast i8* %34 to i64*
  %37 = load i64, i64* %36, align 16
  %38 = sub i64 %20, %37
  %39 = lshr i64 %38, 3
  %40 = lshr i64 %38, 6
  %41 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %33, i64 0, i32 2, i32 0, i32 1, i64 %40
  %42 = load atomic i8, i8* %41 acquire, align 1
  %43 = trunc i64 %39 to i32
  %44 = and i32 %43, 7
  %45 = shl i32 2, %44
  %46 = trunc i32 %45 to i8
  %47 = add i8 %46, -1
  %48 = and i8 %47, %42
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %56

50:                                               ; preds = %31, %50
  %51 = phi i64 [ %52, %50 ], [ %40, %31 ]
  %52 = add i64 %51, -1
  %53 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %33, i64 0, i32 2, i32 0, i32 1, i64 %52
  %54 = load atomic i8, i8* %53 acquire, align 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %50, label %56

56:                                               ; preds = %50, %31
  %57 = phi i64 [ %40, %31 ], [ %52, %50 ]
  %58 = phi i8 [ %48, %31 ], [ %54, %50 ]
  %59 = zext i8 %58 to i32
  %60 = tail call i32 @llvm.ctlz.i32(i32 %59, i1 true) #8, !range !2
  %61 = add nsw i32 %60, -24
  %62 = shl i64 %57, 3
  %63 = or i64 %62, 7
  %64 = sext i32 %61 to i64
  %65 = sub i64 %63, %64
  %66 = shl i64 %65, 3
  %67 = load i8*, i8** %35, align 16
  %68 = getelementptr inbounds i8, i8* %67, i64 %66
  br label %69

69:                                               ; preds = %56, %29
  %70 = phi i8* [ %30, %29 ], [ %68, %56 ]
  %71 = getelementptr inbounds i8, i8* %70, i64 8
  %72 = getelementptr inbounds i8, i8* %70, i64 4
  %73 = bitcast i8* %72 to i16*
  %74 = load atomic i16, i16* %73 acquire, align 2
  %75 = lshr i16 %74, 2
  %76 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %77 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %76, i64 0, i32 0
  %78 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %77, align 8
  %79 = zext i16 %75 to i64
  %80 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %78, i64 %79
  %81 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %80, align 8
  %82 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %81, i64 0, i32 0
  %83 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %82, align 8
  %84 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %85 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %85, i64 5
  %87 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %86, align 8
  tail call void %87(%"class.blink::Visitor"* %1, i8* nonnull %23, i8* %71, void (%"class.blink::Visitor"*, i8*)* %83) #8
  br label %88

88:                                               ; preds = %17, %69
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15SequencedScrollEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15SequencedScrollEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15SequencedScrollEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.246"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15SequencedScrollEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.246"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15SequencedScrollEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #8
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %21, i8* %22) #8
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #8
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #8
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #5

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #5

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #5

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #5

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15SequencedScrollEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %72, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = and i64 %4, -131072
  %9 = inttoptr i64 %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 4138
  %11 = load i8, i8* %10, align 2
  %12 = icmp eq i8 %11, 1
  br i1 %12, label %13, label %15

13:                                               ; preds = %6
  %14 = getelementptr inbounds i8, i8* %9, i64 4160
  br label %53

15:                                               ; preds = %6
  %16 = getelementptr inbounds i8, i8* %9, i64 4096
  %17 = bitcast i8* %16 to %"class.blink::NormalPage"*
  %18 = getelementptr inbounds i8, i8* %9, i64 4400
  %19 = bitcast i8* %18 to i8**
  %20 = bitcast i8* %18 to i64*
  %21 = load i64, i64* %20, align 16
  %22 = sub i64 %4, %21
  %23 = lshr i64 %22, 3
  %24 = lshr i64 %22, 6
  %25 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %17, i64 0, i32 2, i32 0, i32 1, i64 %24
  %26 = load atomic i8, i8* %25 acquire, align 1
  %27 = trunc i64 %23 to i32
  %28 = and i32 %27, 7
  %29 = shl i32 2, %28
  %30 = trunc i32 %29 to i8
  %31 = add i8 %30, -1
  %32 = and i8 %31, %26
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %40

34:                                               ; preds = %15, %34
  %35 = phi i64 [ %36, %34 ], [ %24, %15 ]
  %36 = add i64 %35, -1
  %37 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %17, i64 0, i32 2, i32 0, i32 1, i64 %36
  %38 = load atomic i8, i8* %37 acquire, align 1
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %34, label %40

40:                                               ; preds = %34, %15
  %41 = phi i64 [ %24, %15 ], [ %36, %34 ]
  %42 = phi i8 [ %32, %15 ], [ %38, %34 ]
  %43 = zext i8 %42 to i32
  %44 = tail call i32 @llvm.ctlz.i32(i32 %43, i1 true) #8, !range !2
  %45 = add nsw i32 %44, -24
  %46 = shl i64 %41, 3
  %47 = or i64 %46, 7
  %48 = sext i32 %45 to i64
  %49 = sub i64 %47, %48
  %50 = shl i64 %49, 3
  %51 = load i8*, i8** %19, align 16
  %52 = getelementptr inbounds i8, i8* %51, i64 %50
  br label %53

53:                                               ; preds = %40, %13
  %54 = phi i8* [ %14, %13 ], [ %52, %40 ]
  %55 = getelementptr inbounds i8, i8* %54, i64 8
  %56 = getelementptr inbounds i8, i8* %54, i64 4
  %57 = bitcast i8* %56 to i16*
  %58 = load atomic i16, i16* %57 acquire, align 2
  %59 = lshr i16 %58, 2
  %60 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %61 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %60, i64 0, i32 0
  %62 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %61, align 8
  %63 = zext i16 %59 to i64
  %64 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %62, i64 %63
  %65 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %64, align 8
  %66 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %65, i64 0, i32 0
  %67 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %66, align 8
  %68 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %69 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %69, i64 5
  %71 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, align 8
  tail call void %71(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* %55, void (%"class.blink::Visitor"*, i8*)* %67) #8
  br label %72

72:                                               ; preds = %2, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15SequencedScrollEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.246"*) local_unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15SequencedScrollEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.211"*, %"struct.blink::SequencedScroll"** dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.211", %"class.WTF::Vector.211"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.211", %"class.WTF::Vector.211"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_15SequencedScrollEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.211"* %0, i32 %14) #8
  %15 = getelementptr inbounds %"class.WTF::Vector.211", %"class.WTF::Vector.211"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.214"*, %"class.blink::Member.214"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.214", %"class.blink::Member.214"* %16, i64 %18
  %20 = bitcast %"struct.blink::SequencedScroll"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.214"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #8
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15SequencedScrollEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.211"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.211", %"class.WTF::Vector.211"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.211", %"class.WTF::Vector.211"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.214"*, %"class.blink::Member.214"** %8, align 8
  %10 = icmp eq %"class.blink::Member.214"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15SequencedScrollEEEEEmm(i64 %11) #8
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15SequencedScrollEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #8
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.211"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #8
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.214"*, %"class.blink::Member.214"** %8, align 8
  %26 = icmp eq %"class.blink::Member.214"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.214"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #8
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #8
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !5
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0)) #8
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #8
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15SequencedScrollEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.211"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15SequencedScrollEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.211"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.211"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.211", %"class.WTF::Vector.211"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.211"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.211", %"class.WTF::Vector.211"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #8
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15SequencedScrollEEEEEmm(i64 %14) #8
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15SequencedScrollEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #8
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.211", %"class.WTF::Vector.211"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.214"*, %"class.blink::Member.214"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.211", %"class.WTF::Vector.211"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.214"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.214"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.211"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #8
  %33 = bitcast %"class.WTF::Vector.211"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #8
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #8
  %42 = bitcast %"class.WTF::Vector.211"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.211", %"class.WTF::Vector.211"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #8
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15SequencedScrollEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.6, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15SequencedScrollEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.8, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_15SequencedScrollEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_15SequencedScrollEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15SequencedScrollEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15SequencedScrollEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.246"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15SequencedScrollEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.246"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([171 x i8], [171 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_15SequencedScrollEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15SequencedScrollEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.214"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.214", %"class.blink::Member.214"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.214"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15SequencedScrollEE5TraceEPNS_7VisitorEPKv) #8
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_15SequencedScrollEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #5

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #5

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #5

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.214"* @_ZN3WTF6VectorIN5blink6MemberINS1_15SequencedScrollEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.211"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.211", %"class.WTF::Vector.211"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.211", %"class.WTF::Vector.211"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.214"*, %"class.blink::Member.214"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.214", %"class.blink::Member.214"* %24, i64 %25
  ret %"class.blink::Member.214"* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 24, i32 33}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{i8 0, i8 2}
