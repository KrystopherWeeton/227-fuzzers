; ModuleID = '../../third_party/blink/renderer/core/css/css_style_sheet.cc'
source_filename = "../../third_party/blink/renderer/core/css/css_style_sheet.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.520" }
%"struct.std::__1::atomic.520" = type { %"struct.std::__1::__atomic_base.521" }
%"struct.std::__1::__atomic_base.521" = type { %"struct.std::__1::__atomic_base.522" }
%"struct.std::__1::__atomic_base.522" = type { %"struct.std::__1::__cxx_atomic_impl.523" }
%"struct.std::__1::__cxx_atomic_impl.523" = type { %"struct.std::__1::__cxx_atomic_base_impl.524" }
%"struct.std::__1::__cxx_atomic_base_impl.524" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.117", i32, [4 x i8], %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.269", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.287", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.294", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.120", %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.189", %"class.std::__1::unique_ptr.189", %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.233", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.153" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.153" = type { %"struct.std::__1::__atomic_base.154" }
%"struct.std::__1::__atomic_base.154" = type { %"struct.std::__1::__atomic_base.155" }
%"struct.std::__1::__atomic_base.155" = type { %"struct.std::__1::__cxx_atomic_impl.156" }
%"struct.std::__1::__cxx_atomic_impl.156" = type { %"struct.std::__1::__cxx_atomic_base_impl.157" }
%"struct.std::__1::__cxx_atomic_base_impl.157" = type { i64 }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::Worklist.164"* }
%"class.blink::Worklist.164" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.153" }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::Worklist.171"* }
%"class.blink::Worklist.171" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.153" }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::Worklist.178"* }
%"class.blink::Worklist.178" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.153" }
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::Worklist.185"* }
%"class.blink::Worklist.185" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.153" }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::Worklist.192"* }
%"class.blink::Worklist.192" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.153" }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::Worklist.199"* }
%"class.blink::Worklist.199" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.153" }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::Worklist.206"* }
%"class.blink::Worklist.206" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.153" }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.213", %"class.std::__1::__compressed_pair.220", %"class.std::__1::__compressed_pair.225", %"class.std::__1::__compressed_pair.227", [4 x i8] }>
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215", %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { i64 }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { float }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.236", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.245" }
%"class.WTF::Vector.245" = type { %"class.WTF::VectorBuffer.246" }
%"class.WTF::VectorBuffer.246" = type { %"class.WTF::VectorBufferBase.247" }
%"class.WTF::VectorBufferBase.247" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.261" }
%"class.WTF::VectorBuffer.261" = type { %"class.WTF::VectorBufferBase.262" }
%"class.WTF::VectorBufferBase.262" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.275" }
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.164"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.171"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.178"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.185"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.192"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.2262", i64 }
%"class.std::__1::vector.2262" = type { %"class.std::__1::__vector_base.2263" }
%"class.std::__1::__vector_base.2263" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.2264" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.2264" = type { %"struct.std::__1::__compressed_pair_elem.2265" }
%"struct.std::__1::__compressed_pair_elem.2265" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.293 }
%class.scoped_refptr.293 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.294" = type { %"struct.std::__1::__atomic_base.295" }
%"struct.std::__1::__atomic_base.295" = type { %"struct.std::__1::__cxx_atomic_impl.296" }
%"struct.std::__1::__cxx_atomic_impl.296" = type { %"struct.std::__1::__cxx_atomic_base_impl.297" }
%"struct.std::__1::__cxx_atomic_base_impl.297" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.104", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.104" = type { %"class.base::RefCounted.105" }
%"class.base::RefCounted.105" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.108" }
%"class.blink::HeapHashMap.108" = type { %"class.WTF::HashMap.111" }
%"class.WTF::HashMap.111" = type { %"class.WTF::HashTable.112" }
%"class.WTF::HashTable.112" = type <{ %"struct.WTF::KeyValuePair.114"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.114" = type { %"class.blink::WeakMember.115", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.115" = type { %"class.blink::MemberBase.116" }
%"class.blink::MemberBase.116" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::SVGQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.63", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.485, %"class.WTF::Vector.376", %"class.WTF::Vector.376", %"class.blink::Member", %"class.blink::Member.486", %"class.blink::HeapHashSet.490", %"class.blink::Member.8", %"class.WTF::HashSet.367", %"class.WTF::TextPosition", %"class.blink::Member.497", %"class.blink::HeapVector.499", %"class.blink::Member.506" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::StyleSheetContents"* }
%class.scoped_refptr.485 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.454", %"class.WTF::Vector.456" }
%"class.WTF::RefCounted.454" = type { %"class.base::RefCounted.455" }
%"class.base::RefCounted.455" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.456" = type { %"class.WTF::VectorBuffer.457" }
%"class.WTF::VectorBuffer.457" = type { %"class.WTF::VectorBufferBase.458" }
%"class.WTF::VectorBufferBase.458" = type { %"class.std::__1::unique_ptr.459"*, i32, i32 }
%"class.std::__1::unique_ptr.459" = type { %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.462", %"class.WTF::String" }
%"class.WTF::Vector.462" = type { %"class.WTF::VectorBuffer.463" }
%"class.WTF::VectorBuffer.463" = type { %"class.WTF::VectorBufferBase.464" }
%"class.WTF::VectorBufferBase.464" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.376" = type { %"class.WTF::VectorBuffer.377" }
%"class.WTF::VectorBuffer.377" = type { %"class.WTF::VectorBufferBase.378" }
%"class.WTF::VectorBufferBase.378" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.6", %"class.blink::Member.8", %"class.blink::Member.0", %"class.blink::Member.10", %"class.blink::Member.10", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::Member.48", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.53", %"class.blink::HeapVector.55" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.17" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.21", i32, %"class.blink::HeapVector" }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.24" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.28", %"class.blink::Member.30", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.28" = type { %"class.WTF::SingleThreadedBitField.29" }
%"class.WTF::SingleThreadedBitField.29" = type { i32 }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.34 }
%class.scoped_refptr.34 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.35", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.35" = type { %"class.base::RefCounted.36" }
%"class.base::RefCounted.36" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.40" }
%"class.WTF::Vector.40" = type { %"class.WTF::VectorBuffer.41" }
%"class.WTF::VectorBuffer.41" = type { %"class.WTF::VectorBufferBase.42" }
%"class.WTF::VectorBufferBase.42" = type { %"class.blink::Member.21"*, i32, i32 }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.50" }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::HeapHashMap.52"* }
%"class.blink::HeapHashMap.52" = type opaque
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.55" = type { %"class.WTF::Vector.58" }
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60" }
%"class.WTF::VectorBufferBase.60" = type { %"class.blink::Member.61"*, i32, i32 }
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.488" }
%"class.blink::Member.488" = type { %"class.blink::MemberBase.489" }
%"class.blink::MemberBase.489" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.490" = type { %"class.WTF::HashSet.493" }
%"class.WTF::HashSet.493" = type { %"class.WTF::HashTable.494" }
%"class.WTF::HashTable.494" = type <{ %"class.blink::WeakMember.496"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.496" = type { %"class.blink::MemberBase.1" }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.516", %"class.WTF::Vector.516", i8, i32, %"class.blink::Member.527", %"class.blink::Member.802", %"class.blink::Member.1075", %"class.blink::Member.1077", %"class.blink::Member.1079", %"class.blink::Member.1081", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1083", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1089", %"class.blink::Member.1091", %"class.blink::Member.61", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1094", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.21", %"class.blink::Member.1050", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::UserActionElementSet", %"class.blink::Member.1109", double, double, i64, i64, %"class.blink::HeapHashSet.1111", %"class.blink::HeapHashSet.1118", i16, i8, %"class.blink::Member.1125", %"class.blink::Member.1127", %"class.blink::Member.1297", %"class.blink::Member.1299", %"class.blink::TextLinkColors", %"class.blink::Member.1301", i8, [7 x i8], %"class.blink::HeapHashMap.1303", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.21", %"class.WTF::Vector.1310", %"class.blink::Member.1315", %"class.blink::Member.1319", i8, %"class.blink::Member.21", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1321", %"class.blink::HeapVector.1323", %"class.std::__1::unique_ptr.1331", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1337", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1350", %"class.WTF::Vector.1352", i8, i8, %"class.std::__1::unique_ptr.1357", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.1363", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1371", i8, i32, %"class.blink::Member.1373", %"class.blink::Member.1375", %"class.blink::Member.1377", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1379", %"class.WTF::HashMap.1381", %"class.blink::Member.1386", %"class.blink::Member.1388", %"class.blink::Member.1390", %"class.blink::Member.1392", %"class.blink::Member.8", %"class.blink::Member.8", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1394", i8, i32, %"class.blink::Member.1401", %"class.blink::Member.1403", i32, %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.std::__1::unique_ptr.1411", i64, %"class.std::__1::unique_ptr.1417", i32, i32, %"class.blink::Member.1423", %"class.blink::Member.1425", %"class.blink::Member.1427", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1429", %"class.WTF::Vector.1061", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1431", %"class.blink::Member.1438", %"class.std::__1::unique_ptr.1440", %"class.blink::Member.1446", i8, i8, %"class.WTF::String", %"class.blink::Member.1448", i8, [7 x i8], %"class.blink::HeapHashMap.1450", %"class.blink::HeapObserverSet.1457", %"class.blink::Member.1465", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1467", i32, i8, i8, %"class.blink::WeakMember.1469", %"class.blink::Member.1470" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.509" }
%"class.blink::HeapHashMap.509" = type { %"class.WTF::HashMap.512" }
%"class.WTF::HashMap.512" = type { %"class.WTF::HashTable.513" }
%"class.WTF::HashTable.513" = type <{ %"struct.WTF::KeyValuePair.515"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.515" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.516" = type { %"class.WTF::VectorBuffer.517" }
%"class.WTF::VectorBuffer.517" = type { %"class.WTF::VectorBufferBase.518" }
%"class.WTF::VectorBufferBase.518" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.519 }
%class.scoped_refptr.519 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.520" }
%"class.blink::Member.527" = type { %"class.blink::MemberBase.528" }
%"class.blink::MemberBase.528" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.902", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.910", %"class.blink::Member.8", %"class.blink::Member.912", i8, %"class.blink::Member.914", %"class.blink::Member.916", %"class.blink::Member.918", %"class.blink::Member.918", %"class.blink::Member.918", %"class.blink::Member.918", %"class.blink::Member.918", %"class.blink::Member.918", %"class.blink::Member.920", %"class.blink::Member.922", %"class.blink::Member.924", %"class.blink::Member.926", %"class.blink::Member.928", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.859", %"class.blink::Member.930", %class.scoped_refptr.932, %"class.blink::HeapHashSet.994", %"class.blink::Member.1001", %"class.blink::HeapHashMap.1014", %"class.std::__1::unique_ptr.1021", %"class.blink::Member.1033", %"class.blink::Member.1054", %"class.blink::Member.1056", %"class.blink::Member.1058", %"class.WTF::Vector.1061", %"class.util::TokenType", %"class.WTF::HashSet.1066", %"class.WTF::Deque.1070" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.550", %"class.blink::Member.552", %"class.blink::Member.554", %"class.blink::Member.556", i8, %"class.WTF::Vector.558" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.543" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.531" }
%"class.blink::HeapVector.531" = type { %"class.WTF::Vector.534" }
%"class.WTF::Vector.534" = type { %"class.WTF::VectorBuffer.535" }
%"class.WTF::VectorBuffer.535" = type { %"class.WTF::VectorBufferBase.536", [32 x i8] }
%"class.WTF::VectorBufferBase.536" = type { %"struct.std::__1::pair.537"*, i32, i32 }
%"struct.std::__1::pair.537" = type { %"class.WTF::AtomicString", %"class.blink::Member.538" }
%"class.blink::Member.538" = type { %"class.blink::MemberBase.539" }
%"class.blink::MemberBase.539" = type { %"class.blink::HeapVector.540"* }
%"class.blink::HeapVector.540" = type opaque
%"class.std::__1::unique_ptr.543" = type { %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.WTF::Vector.546"* }
%"class.WTF::Vector.546" = type opaque
%"class.blink::Member.550" = type { %"class.blink::MemberBase.551" }
%"class.blink::MemberBase.551" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1512", %"class.blink::Member.1514", %"class.blink::Member.1516", i8, i32, i8, i32, %"class.blink::Member.1518", %"class.blink::Member.552", %"class.blink::FrameLifecycle", %"class.blink::Member.550", %"class.blink::Member.550", %"class.blink::Member.550", %"class.blink::Member.550", %"class.blink::Member.550", %"class.blink::Member.550", %"class.blink::Member.1039", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1526", i8, %"class.base::UnguessableToken", %"class.absl::optional.1528", %"class.absl::optional.1533", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.550", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1512" = type { %"class.blink::MemberBase.1513" }
%"class.blink::MemberBase.1513" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1514" = type { %"class.blink::MemberBase.1515" }
%"class.blink::MemberBase.1515" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1516" = type { %"class.blink::MemberBase.1517" }
%"class.blink::MemberBase.1517" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.1518" = type { %"class.blink::MemberBase.1519" }
%"class.blink::MemberBase.1519" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1039" = type { %"class.blink::MemberBase.1040" }
%"class.blink::MemberBase.1040" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1545", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1553", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1561", %"class.blink::FrameLoader", %"class.blink::Member.1582", %"class.blink::Member.21", %"class.blink::Member.1584", %"class.blink::Member.1586", %"class.blink::Member.1588", %"class.blink::Member.1590", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1592", %class.scoped_refptr.1816, %"class.blink::Member.1817", %"class.blink::Member.1819", %"class.blink::Member.1830", %"class.blink::Member.1832", %"class.blink::Member.1834", %"class.blink::Member.1836", %"class.blink::Member.1838", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.1840", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1843", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1849", %"class.std::__1::unique_ptr.1850", %"class.absl::optional.1533", i32, [4 x i8], %"class.std::__1::unique_ptr.1856", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1864", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1869", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1874", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1877", %"class.blink::Member.1879", %"class.blink::Member.1881", %"class.blink::Member.1883", %"class.mojo::StructPtr.1886", %"class.blink::Member.1895", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1897", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1545" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1546" }
%"class.blink::HeapHashMap.1546" = type { %"class.WTF::HashMap.1549" }
%"class.WTF::HashMap.1549" = type { %"class.WTF::HashTable.1550" }
%"class.WTF::HashTable.1550" = type <{ %"struct.WTF::KeyValuePair.1552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1552" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1024", %"class.base::WeakPtrFactory.1029" }
%"class.WTF::HashMap.1024" = type { %"class.WTF::HashTable.1025" }
%"class.WTF::HashTable.1025" = type <{ %"struct.WTF::KeyValuePair.1028"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1028" = type opaque
%"class.base::WeakPtrFactory.1029" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.584 }
%class.scoped_refptr.584 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.585", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.585" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.586" }
%"struct.std::__1::atomic.586" = type { %"struct.std::__1::__atomic_base.587" }
%"struct.std::__1::__atomic_base.587" = type { %"struct.std::__1::__atomic_base.588" }
%"struct.std::__1::__atomic_base.588" = type { %"struct.std::__1::__cxx_atomic_impl.589" }
%"struct.std::__1::__cxx_atomic_impl.589" = type { %"struct.std::__1::__cxx_atomic_base_impl.590" }
%"struct.std::__1::__cxx_atomic_base_impl.590" = type { i8 }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1559" }
%"class.blink::Member.1559" = type { %"class.blink::MemberBase.1560" }
%"class.blink::MemberBase.1560" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1037" }
%"class.blink::WeakMember.1037" = type { %"class.blink::MemberBase.1038" }
%"class.blink::MemberBase.1038" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.745" }
%"class.blink::HeapHashSet.745" = type { %"class.WTF::HashSet.748" }
%"class.WTF::HashSet.748" = type { %"class.WTF::HashTable.749" }
%"class.WTF::HashTable.749" = type <{ %"class.blink::WeakMember.751"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.751" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.682", %"class.base::RepeatingCallback.2525", i64, %"class.std::__1::map.2526", i8*, i64, %"class.base::WeakPtrFactory.2535" }
%"class.base::RepeatingCallback.682" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.2525" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2526" = type { %"class.std::__1::__tree.2527" }
%"class.std::__1::__tree.2527" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2528", %"class.std::__1::__compressed_pair.2532" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2528" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.2532" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.base::WeakPtrFactory.2535" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1561" = type { %"class.WTF::HashSet.1564" }
%"class.WTF::HashSet.1564" = type { %"class.WTF::HashTable.1565" }
%"class.WTF::HashTable.1565" = type <{ %"class.blink::WeakMember.1567"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1567" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1039", %"class.blink::Member.1568", %"class.blink::Member.1570", %"class.std::__1::unique_ptr.1572", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1578" }
%"class.blink::Member.1568" = type { %"class.blink::MemberBase.1569" }
%"class.blink::MemberBase.1569" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1570" = type { %"class.blink::MemberBase.1571" }
%"class.blink::MemberBase.1571" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1572" = type { %"class.std::__1::__compressed_pair.1573" }
%"class.std::__1::__compressed_pair.1573" = type { %"struct.std::__1::__compressed_pair_elem.1574" }
%"struct.std::__1::__compressed_pair_elem.1574" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.WTF::HashSet.1578" = type { %"class.WTF::HashTable.1579" }
%"class.WTF::HashTable.1579" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1582" = type { %"class.blink::MemberBase.1583" }
%"class.blink::MemberBase.1583" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1976", %"class.blink::Member.1039", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1981", i8, i32, %"class.blink::Color", %"class.absl::optional.1983", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1988", %"class.blink::Member.1990", %"class.blink::Member.1990", %"class.std::__1::unique_ptr.1993", i32, [4 x i8], %"class.WTF::HashSet.1996", %"class.blink::Member.2003", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2005", %"class.blink::HeapHashSet.2012", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2020", i8, %"class.blink::Member.2026", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2038", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2052", i8, %"class.std::__1::unique_ptr.2058", %"class.std::__1::unique_ptr.2175", %"class.WTF::Vector.2181", i32, %class.scoped_refptr.2186, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2187", %"class.blink::Member.2189", %"class.blink::Member.2191", %"class.blink::HeapHashSet.2193", %"class.blink::HeapHashSet.2200", %"class.std::__1::unique_ptr.2207", %"class.std::__1::unique_ptr.2214", %"class.WTF::Vector.516" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1976" = type { %"class.WTF::HashTable.1977" }
%"class.WTF::HashTable.1977" = type <{ %class.scoped_refptr.1980*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1980 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1981" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1982", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1099, %"class.base::WeakPtrFactory.1100" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.1099 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.564" }>
%"class.base::RefCountedThreadSafe.564" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.1100" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1982" = type { %"class.blink::MemberBase.1583" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1983" = type { %"class.absl::optional_internal::optional_data.1984" }
%"class.absl::optional_internal::optional_data.1984" = type { %"class.absl::optional_internal::optional_data_base.1985" }
%"class.absl::optional_internal::optional_data_base.1985" = type { %"class.absl::optional_internal::optional_data_dtor_base.1986" }
%"class.absl::optional_internal::optional_data_dtor_base.1986" = type { i8, %union.anon.1987 }
%union.anon.1987 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1988" = type { %"class.blink::MemberBase.1989" }
%"class.blink::MemberBase.1989" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1990" = type { %"class.blink::MemberBase.1991" }
%"class.blink::MemberBase.1991" = type { %"class.blink::HeapHashSet.1992"* }
%"class.blink::HeapHashSet.1992" = type opaque
%"class.std::__1::unique_ptr.1993" = type { %"class.std::__1::__compressed_pair.1994" }
%"class.std::__1::__compressed_pair.1994" = type { %"struct.std::__1::__compressed_pair_elem.1995" }
%"struct.std::__1::__compressed_pair_elem.1995" = type { %"class.WTF::HashSet.1996"* }
%"class.WTF::HashSet.1996" = type { %"class.WTF::HashTable.1997" }
%"class.WTF::HashTable.1997" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.2003" = type { %"class.blink::MemberBase.2004" }
%"class.blink::MemberBase.2004" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2005" = type { %"class.WTF::HashSet.2008" }
%"class.WTF::HashSet.2008" = type { %"class.WTF::HashTable.2009" }
%"class.WTF::HashTable.2009" = type <{ %"class.blink::Member.2011"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2011" = type opaque
%"class.blink::HeapHashSet.2012" = type { %"class.WTF::HashSet.2015" }
%"class.WTF::HashSet.2015" = type { %"class.WTF::HashTable.2016" }
%"class.WTF::HashTable.2016" = type <{ %"class.blink::Member.2018"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2018" = type { %"class.blink::MemberBase.2019" }
%"class.blink::MemberBase.2019" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2248", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2259", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.21" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.2248" = type { %"class.blink::MemberBase.2249" }
%"class.blink::MemberBase.2249" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2250", %"class.blink::Member.2251", %"class.blink::Member.2253", %"class.blink::Member.2255", %"class.blink::Member.2257", %"class.WTF::Vector.516", i16, %class.scoped_refptr.1099 }
%"class.blink::ThreadState::PrefinalizerRegistration.2250" = type { i8 }
%"class.blink::Member.2251" = type { %"class.blink::MemberBase.2252" }
%"class.blink::MemberBase.2252" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2253" = type { %"class.blink::MemberBase.2254" }
%"class.blink::MemberBase.2254" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2255" = type { %"class.blink::MemberBase.2256" }
%"class.blink::MemberBase.2256" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2257" = type { %"class.blink::MemberBase.2258" }
%"class.blink::MemberBase.2258" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.2259" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2260", { i64, i64 } }
%"class.blink::WeakMember.2260" = type { %"class.blink::MemberBase.2019" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.2020" = type { %"class.std::__1::__compressed_pair.2021" }
%"class.std::__1::__compressed_pair.2021" = type { %"struct.std::__1::__compressed_pair_elem.2022" }
%"struct.std::__1::__compressed_pair_elem.2022" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2026" = type { %"class.blink::MemberBase.2027" }
%"class.blink::MemberBase.2027" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2030", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2030" = type { %"class.WTF::HashTable.2031" }
%"class.WTF::HashTable.2031" = type <{ %"struct.WTF::KeyValuePair.2033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2033" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2034", i32, i32 }
%"class.WTF::Vector.2034" = type { %"class.WTF::VectorBuffer.2035" }
%"class.WTF::VectorBuffer.2035" = type { %"class.WTF::VectorBufferBase.2036" }
%"class.WTF::VectorBufferBase.2036" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2038" = type { %"class.WTF::LinkedHashSet.2041" }
%"class.WTF::LinkedHashSet.2041" = type { %"class.WTF::HashMap.2042", %"class.WTF::VectorBackedLinkedList.2046" }
%"class.WTF::HashMap.2042" = type { %"class.WTF::HashTable.2043" }
%"class.WTF::HashTable.2043" = type <{ %"struct.WTF::KeyValuePair.2045"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2045" = type opaque
%"class.WTF::VectorBackedLinkedList.2046" = type { %"class.WTF::Vector.2047", i32, i32 }
%"class.WTF::Vector.2047" = type { %"class.WTF::VectorBuffer.2048" }
%"class.WTF::VectorBuffer.2048" = type { %"class.WTF::VectorBufferBase.2049" }
%"class.WTF::VectorBufferBase.2049" = type { %"class.WTF::VectorBackedLinkedListNode.2050"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2050" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2052" = type { %"class.std::__1::__compressed_pair.2053" }
%"class.std::__1::__compressed_pair.2053" = type { %"struct.std::__1::__compressed_pair_elem.2054" }
%"struct.std::__1::__compressed_pair_elem.2054" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2058" = type { %"class.std::__1::__compressed_pair.2059" }
%"class.std::__1::__compressed_pair.2059" = type { %"struct.std::__1::__compressed_pair_elem.2060" }
%"struct.std::__1::__compressed_pair_elem.2060" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2061, %class.scoped_refptr.2061, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2152", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2157", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2061 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2062", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2069" }
%"class.WTF::RefCounted.2062" = type { %"class.base::RefCounted.2063" }
%"class.base::RefCounted.2063" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2064", i32, [4 x i8] }>
%"class.WTF::Vector.2064" = type { %"class.WTF::VectorBuffer.2065" }
%"class.WTF::VectorBuffer.2065" = type { %"class.WTF::VectorBufferBase.2066" }
%"class.WTF::VectorBufferBase.2066" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2069" = type { %"class.WTF::VectorBuffer.2070" }
%"class.WTF::VectorBuffer.2070" = type { %"class.WTF::VectorBufferBase.2071" }
%"class.WTF::VectorBufferBase.2071" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2075", %"class.std::__1::unique_ptr.2124", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.2072, %class.scoped_refptr.2073, %class.scoped_refptr.2074 }
%class.scoped_refptr.2072 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.2088", i8, i8, %class.scoped_refptr.2072, i32, i32 }
%"class.WTF::RefCounted.2088" = type { %"class.base::RefCounted.2089" }
%"class.base::RefCounted.2089" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2073 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2243" }
%"class.blink::PaintPropertyNode.2243" = type { %"class.WTF::RefCounted.2244", i8, i8, %class.scoped_refptr.2073, i32, i32 }
%"class.WTF::RefCounted.2244" = type { %"class.base::RefCounted.2245" }
%"class.base::RefCounted.2245" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2074 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2240" }
%"class.blink::PaintPropertyNode.2240" = type { %"class.WTF::RefCounted.2241", i8, i8, %class.scoped_refptr.2074, i32, i32 }
%"class.WTF::RefCounted.2241" = type { %"class.base::RefCounted.2242" }
%"class.base::RefCounted.2242" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2075" = type { %"class.std::__1::__compressed_pair.2076" }
%"class.std::__1::__compressed_pair.2076" = type { %"struct.std::__1::__compressed_pair_elem.2077" }
%"struct.std::__1::__compressed_pair_elem.2077" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2078", %"class.WTF::Vector.2083", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2078" = type { %"class.WTF::VectorBuffer.2079" }
%"class.WTF::VectorBuffer.2079" = type { %"class.WTF::VectorBufferBase.2080" }
%"class.WTF::VectorBufferBase.2080" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2083" = type { %"class.WTF::VectorBuffer.2084" }
%"class.WTF::VectorBuffer.2084" = type { %"class.WTF::VectorBufferBase.2085" }
%"class.WTF::VectorBufferBase.2085" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.2103" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.2096, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.2097", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.2090" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.2090" = type { %"class.std::__1::__compressed_pair.2091" }
%"class.std::__1::__compressed_pair.2091" = type { %"struct.std::__1::__compressed_pair_elem.2092" }
%"struct.std::__1::__compressed_pair_elem.2092" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.2096 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.2225", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.2225" = type { %"class.WTF::RefCounted.2226", i8, i8, %class.scoped_refptr.2096, i32, i32 }
%"class.WTF::RefCounted.2226" = type { %"class.base::RefCounted.2227" }
%"class.base::RefCounted.2227" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.2228" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.2228" = type { %"class.absl::optional_internal::optional_data.2229" }
%"class.absl::optional_internal::optional_data.2229" = type { %"class.absl::optional_internal::optional_data_base.2230" }
%"class.absl::optional_internal::optional_data_base.2230" = type { %"class.absl::optional_internal::optional_data_dtor_base.2231" }
%"class.absl::optional_internal::optional_data_dtor_base.2231" = type { i8, %union.anon.2232 }
%union.anon.2232 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.2233", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.2233" = type { %"class.std::__1::__vector_base.2234" }
%"class.std::__1::__vector_base.2234" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.2235" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.2235" = type { %"struct.std::__1::__compressed_pair_elem.2236" }
%"struct.std::__1::__compressed_pair_elem.2236" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.2097" = type { %"class.std::__1::__compressed_pair.2098" }
%"class.std::__1::__compressed_pair.2098" = type { %"struct.std::__1::__compressed_pair_elem.2099" }
%"struct.std::__1::__compressed_pair_elem.2099" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.2103" = type { %"class.std::__1::__compressed_pair.2104" }
%"class.std::__1::__compressed_pair.2104" = type { %"struct.std::__1::__compressed_pair_elem.2105" }
%"struct.std::__1::__compressed_pair_elem.2105" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.2106", %"class.std::__1::unique_ptr.2112", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2106" = type { %"class.std::__1::__compressed_pair.2107" }
%"class.std::__1::__compressed_pair.2107" = type { %"struct.std::__1::__compressed_pair_elem.2108" }
%"struct.std::__1::__compressed_pair_elem.2108" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2112" = type { %"class.std::__1::__compressed_pair.2113" }
%"class.std::__1::__compressed_pair.2113" = type { %"struct.std::__1::__compressed_pair_elem.2114" }
%"struct.std::__1::__compressed_pair_elem.2114" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2124" = type { %"class.std::__1::__compressed_pair.2125" }
%"class.std::__1::__compressed_pair.2125" = type { %"struct.std::__1::__compressed_pair_elem.2126" }
%"struct.std::__1::__compressed_pair_elem.2126" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2127", %"class.absl::optional.2127" }
%"class.absl::optional.2127" = type { %"class.absl::optional_internal::optional_data.2128" }
%"class.absl::optional_internal::optional_data.2128" = type { %"class.absl::optional_internal::optional_data_base.2129" }
%"class.absl::optional_internal::optional_data_base.2129" = type { %"class.absl::optional_internal::optional_data_dtor_base.2130" }
%"class.absl::optional_internal::optional_data_dtor_base.2130" = type { i8, [3 x i8], %union.anon.2131 }
%union.anon.2131 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2069"*, %"class.absl::optional.2137", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2137" = type { %"class.absl::optional_internal::optional_data.2138" }
%"class.absl::optional_internal::optional_data.2138" = type { %"class.absl::optional_internal::optional_data_base.2139" }
%"class.absl::optional_internal::optional_data_base.2139" = type { %"class.absl::optional_internal::optional_data_dtor_base.2140" }
%"class.absl::optional_internal::optional_data_dtor_base.2140" = type { i8, %union.anon.2141 }
%union.anon.2141 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2142", %"class.WTF::Vector.2147" }
%"class.WTF::Vector.2142" = type { %"class.WTF::VectorBuffer.2143" }
%"class.WTF::VectorBuffer.2143" = type { %"class.WTF::VectorBufferBase.2144", [128 x i8] }
%"class.WTF::VectorBufferBase.2144" = type { i32*, i32, i32 }
%"class.WTF::Vector.2147" = type { %"class.WTF::VectorBuffer.2148" }
%"class.WTF::VectorBuffer.2148" = type { %"class.WTF::VectorBufferBase.2149", [128 x i8] }
%"class.WTF::VectorBufferBase.2149" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2152" = type { %"class.WTF::VectorBuffer.2153" }
%"class.WTF::VectorBuffer.2153" = type { %"class.WTF::VectorBufferBase.2154" }
%"class.WTF::VectorBufferBase.2154" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2157" = type { %"class.WTF::HashTable.2158" }
%"class.WTF::HashTable.2158" = type <{ %"struct.WTF::KeyValuePair.2161"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2161" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2162", %"class.WTF::Vector.2167" }
%"class.WTF::HashMap.2162" = type { %"class.WTF::HashTable.2163" }
%"class.WTF::HashTable.2163" = type <{ %"struct.WTF::KeyValuePair.2166"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2166" = type opaque
%"class.WTF::Vector.2167" = type { %"class.WTF::VectorBuffer.2168" }
%"class.WTF::VectorBuffer.2168" = type { %"class.WTF::VectorBufferBase.2169" }
%"class.WTF::VectorBufferBase.2169" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2175" = type { %"class.std::__1::__compressed_pair.2176" }
%"class.std::__1::__compressed_pair.2176" = type { %"struct.std::__1::__compressed_pair_elem.2177" }
%"struct.std::__1::__compressed_pair_elem.2177" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2181" = type { %"class.WTF::VectorBuffer.2182" }
%"class.WTF::VectorBuffer.2182" = type { %"class.WTF::VectorBufferBase.2183" }
%"class.WTF::VectorBufferBase.2183" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2186 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2187" = type { %"class.blink::MemberBase.2188" }
%"class.blink::MemberBase.2188" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2189" = type { %"class.blink::MemberBase.2190" }
%"class.blink::MemberBase.2190" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2191" = type { %"class.blink::MemberBase.2192" }
%"class.blink::MemberBase.2192" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2193" = type { %"class.WTF::HashSet.2196" }
%"class.WTF::HashSet.2196" = type { %"class.WTF::HashTable.2197" }
%"class.WTF::HashTable.2197" = type <{ %"class.blink::WeakMember.2199"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2199" = type opaque
%"class.blink::HeapHashSet.2200" = type { %"class.WTF::HashSet.2203" }
%"class.WTF::HashSet.2203" = type { %"class.WTF::HashTable.2204" }
%"class.WTF::HashTable.2204" = type <{ %"class.blink::WeakMember.2206"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2206" = type opaque
%"class.std::__1::unique_ptr.2207" = type { %"class.std::__1::__compressed_pair.2208" }
%"class.std::__1::__compressed_pair.2208" = type { %"struct.std::__1::__compressed_pair_elem.2209" }
%"struct.std::__1::__compressed_pair_elem.2209" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2210" }
%"class.base::time_internal::TimeBase.2210" = type { i64 }
%"class.std::__1::unique_ptr.2214" = type { %"class.std::__1::__compressed_pair.2215" }
%"class.std::__1::__compressed_pair.2215" = type { %"struct.std::__1::__compressed_pair_elem.2216" }
%"struct.std::__1::__compressed_pair_elem.2216" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2217", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2217" = type { %"class.absl::optional_internal::optional_data.2218" }
%"class.absl::optional_internal::optional_data.2218" = type { %"class.absl::optional_internal::optional_data_base.2219" }
%"class.absl::optional_internal::optional_data_base.2219" = type { %"class.absl::optional_internal::optional_data_dtor_base.2220" }
%"class.absl::optional_internal::optional_data_dtor_base.2220" = type { i8, %union.anon.2221 }
%union.anon.2221 = type { %"class.base::Time" }
%"class.blink::Member.1584" = type { %"class.blink::MemberBase.1585" }
%"class.blink::MemberBase.1585" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1586" = type { %"class.blink::MemberBase.1587" }
%"class.blink::MemberBase.1587" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1588" = type { %"class.blink::MemberBase.1589" }
%"class.blink::MemberBase.1589" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.1596", %"class.blink::HeapListHashSet.1607", %"class.blink::HeapListHashSet.1618", %"class.blink::HeapListHashSet.1629", %"class.blink::HeapListHashSet.1640", %"class.blink::HeapListHashSet.1651", %"class.blink::HeapListHashSet.1662", %"class.blink::HeapListHashSet.1673", %"class.blink::HeapListHashSet.1684", %"class.blink::HeapListHashSet.1695", %"class.blink::HeapListHashSet.1706", %"class.blink::HeapListHashSet.1717", %"class.blink::HeapListHashSet.1728", %"class.blink::HeapListHashSet.1739", %"class.blink::HeapListHashSet.1750", %"class.blink::HeapListHashSet.1761", %"class.blink::HeapListHashSet.1772", %"class.blink::HeapListHashSet.1783", %"class.blink::HeapListHashSet.1794", %"class.blink::HeapListHashSet.1805" }
%"class.blink::HeapListHashSet.1596" = type { %"class.WTF::ListHashSet.base.1606", [7 x i8] }
%"class.WTF::ListHashSet.base.1606" = type <{ %"class.WTF::HashTable.1601", %"class.blink::Member.1603", %"class.blink::Member.1603", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1601" = type <{ %"class.blink::Member.1603"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1603" = type { %"class.blink::MemberBase.1604" }
%"class.blink::MemberBase.1604" = type { %"class.blink::HeapListHashSetNode.1605"* }
%"class.blink::HeapListHashSetNode.1605" = type { %"class.blink::Member.1819", %"class.blink::Member.1603", %"class.blink::Member.1603" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.1607" = type { %"class.WTF::ListHashSet.base.1617", [7 x i8] }
%"class.WTF::ListHashSet.base.1617" = type <{ %"class.WTF::HashTable.1612", %"class.blink::Member.1614", %"class.blink::Member.1614", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1612" = type <{ %"class.blink::Member.1614"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1614" = type { %"class.blink::MemberBase.1615" }
%"class.blink::MemberBase.1615" = type { %"class.blink::HeapListHashSetNode.1616"* }
%"class.blink::HeapListHashSetNode.1616" = type { %"class.blink::Member.1970", %"class.blink::Member.1614", %"class.blink::Member.1614" }
%"class.blink::Member.1970" = type { %"class.blink::MemberBase.1971" }
%"class.blink::MemberBase.1971" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.1618" = type { %"class.WTF::ListHashSet.base.1628", [7 x i8] }
%"class.WTF::ListHashSet.base.1628" = type <{ %"class.WTF::HashTable.1623", %"class.blink::Member.1625", %"class.blink::Member.1625", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1623" = type <{ %"class.blink::Member.1625"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1625" = type { %"class.blink::MemberBase.1626" }
%"class.blink::MemberBase.1626" = type { %"class.blink::HeapListHashSetNode.1627"* }
%"class.blink::HeapListHashSetNode.1627" = type { %"class.blink::Member.1966", %"class.blink::Member.1625", %"class.blink::Member.1625" }
%"class.blink::Member.1966" = type { %"class.blink::MemberBase.1967" }
%"class.blink::MemberBase.1967" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.1629" = type { %"class.WTF::ListHashSet.base.1639", [7 x i8] }
%"class.WTF::ListHashSet.base.1639" = type <{ %"class.WTF::HashTable.1634", %"class.blink::Member.1636", %"class.blink::Member.1636", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1634" = type <{ %"class.blink::Member.1636"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1636" = type { %"class.blink::MemberBase.1637" }
%"class.blink::MemberBase.1637" = type { %"class.blink::HeapListHashSetNode.1638"* }
%"class.blink::HeapListHashSetNode.1638" = type { %"class.blink::Member.1962", %"class.blink::Member.1636", %"class.blink::Member.1636" }
%"class.blink::Member.1962" = type { %"class.blink::MemberBase.1963" }
%"class.blink::MemberBase.1963" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.1640" = type { %"class.WTF::ListHashSet.base.1650", [7 x i8] }
%"class.WTF::ListHashSet.base.1650" = type <{ %"class.WTF::HashTable.1645", %"class.blink::Member.1647", %"class.blink::Member.1647", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1645" = type <{ %"class.blink::Member.1647"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1647" = type { %"class.blink::MemberBase.1648" }
%"class.blink::MemberBase.1648" = type { %"class.blink::HeapListHashSetNode.1649"* }
%"class.blink::HeapListHashSetNode.1649" = type { %"class.blink::Member.1958", %"class.blink::Member.1647", %"class.blink::Member.1647" }
%"class.blink::Member.1958" = type { %"class.blink::MemberBase.1959" }
%"class.blink::MemberBase.1959" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.1651" = type { %"class.WTF::ListHashSet.base.1661", [7 x i8] }
%"class.WTF::ListHashSet.base.1661" = type <{ %"class.WTF::HashTable.1656", %"class.blink::Member.1658", %"class.blink::Member.1658", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1656" = type <{ %"class.blink::Member.1658"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1658" = type { %"class.blink::MemberBase.1659" }
%"class.blink::MemberBase.1659" = type { %"class.blink::HeapListHashSetNode.1660"* }
%"class.blink::HeapListHashSetNode.1660" = type { %"class.blink::Member.1954", %"class.blink::Member.1658", %"class.blink::Member.1658" }
%"class.blink::Member.1954" = type { %"class.blink::MemberBase.1955" }
%"class.blink::MemberBase.1955" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.1662" = type { %"class.WTF::ListHashSet.base.1672", [7 x i8] }
%"class.WTF::ListHashSet.base.1672" = type <{ %"class.WTF::HashTable.1667", %"class.blink::Member.1669", %"class.blink::Member.1669", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1667" = type <{ %"class.blink::Member.1669"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1669" = type { %"class.blink::MemberBase.1670" }
%"class.blink::MemberBase.1670" = type { %"class.blink::HeapListHashSetNode.1671"* }
%"class.blink::HeapListHashSetNode.1671" = type { %"class.blink::Member.1950", %"class.blink::Member.1669", %"class.blink::Member.1669" }
%"class.blink::Member.1950" = type { %"class.blink::MemberBase.1951" }
%"class.blink::MemberBase.1951" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.1673" = type { %"class.WTF::ListHashSet.base.1683", [7 x i8] }
%"class.WTF::ListHashSet.base.1683" = type <{ %"class.WTF::HashTable.1678", %"class.blink::Member.1680", %"class.blink::Member.1680", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1678" = type <{ %"class.blink::Member.1680"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1680" = type { %"class.blink::MemberBase.1681" }
%"class.blink::MemberBase.1681" = type { %"class.blink::HeapListHashSetNode.1682"* }
%"class.blink::HeapListHashSetNode.1682" = type { %"class.blink::Member.1946", %"class.blink::Member.1680", %"class.blink::Member.1680" }
%"class.blink::Member.1946" = type { %"class.blink::MemberBase.1947" }
%"class.blink::MemberBase.1947" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.1684" = type { %"class.WTF::ListHashSet.base.1694", [7 x i8] }
%"class.WTF::ListHashSet.base.1694" = type <{ %"class.WTF::HashTable.1689", %"class.blink::Member.1691", %"class.blink::Member.1691", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1689" = type <{ %"class.blink::Member.1691"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1691" = type { %"class.blink::MemberBase.1692" }
%"class.blink::MemberBase.1692" = type { %"class.blink::HeapListHashSetNode.1693"* }
%"class.blink::HeapListHashSetNode.1693" = type { %"class.blink::Member.1942", %"class.blink::Member.1691", %"class.blink::Member.1691" }
%"class.blink::Member.1942" = type { %"class.blink::MemberBase.1943" }
%"class.blink::MemberBase.1943" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.1695" = type { %"class.WTF::ListHashSet.base.1705", [7 x i8] }
%"class.WTF::ListHashSet.base.1705" = type <{ %"class.WTF::HashTable.1700", %"class.blink::Member.1702", %"class.blink::Member.1702", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1700" = type <{ %"class.blink::Member.1702"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1702" = type { %"class.blink::MemberBase.1703" }
%"class.blink::MemberBase.1703" = type { %"class.blink::HeapListHashSetNode.1704"* }
%"class.blink::HeapListHashSetNode.1704" = type { %"class.blink::Member.1938", %"class.blink::Member.1702", %"class.blink::Member.1702" }
%"class.blink::Member.1938" = type { %"class.blink::MemberBase.1939" }
%"class.blink::MemberBase.1939" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.1706" = type { %"class.WTF::ListHashSet.base.1716", [7 x i8] }
%"class.WTF::ListHashSet.base.1716" = type <{ %"class.WTF::HashTable.1711", %"class.blink::Member.1713", %"class.blink::Member.1713", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1711" = type <{ %"class.blink::Member.1713"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1713" = type { %"class.blink::MemberBase.1714" }
%"class.blink::MemberBase.1714" = type { %"class.blink::HeapListHashSetNode.1715"* }
%"class.blink::HeapListHashSetNode.1715" = type { %"class.blink::Member.1832", %"class.blink::Member.1713", %"class.blink::Member.1713" }
%"class.blink::HeapListHashSet.1717" = type { %"class.WTF::ListHashSet.base.1727", [7 x i8] }
%"class.WTF::ListHashSet.base.1727" = type <{ %"class.WTF::HashTable.1722", %"class.blink::Member.1724", %"class.blink::Member.1724", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1722" = type <{ %"class.blink::Member.1724"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1724" = type { %"class.blink::MemberBase.1725" }
%"class.blink::MemberBase.1725" = type { %"class.blink::HeapListHashSetNode.1726"* }
%"class.blink::HeapListHashSetNode.1726" = type { %"class.blink::Member.1932", %"class.blink::Member.1724", %"class.blink::Member.1724" }
%"class.blink::Member.1932" = type { %"class.blink::MemberBase.1933" }
%"class.blink::MemberBase.1933" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.1728" = type { %"class.WTF::ListHashSet.base.1738", [7 x i8] }
%"class.WTF::ListHashSet.base.1738" = type <{ %"class.WTF::HashTable.1733", %"class.blink::Member.1735", %"class.blink::Member.1735", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1733" = type <{ %"class.blink::Member.1735"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1735" = type { %"class.blink::MemberBase.1736" }
%"class.blink::MemberBase.1736" = type { %"class.blink::HeapListHashSetNode.1737"* }
%"class.blink::HeapListHashSetNode.1737" = type { %"class.blink::Member.1928", %"class.blink::Member.1735", %"class.blink::Member.1735" }
%"class.blink::Member.1928" = type { %"class.blink::MemberBase.1929" }
%"class.blink::MemberBase.1929" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.1739" = type { %"class.WTF::ListHashSet.base.1749", [7 x i8] }
%"class.WTF::ListHashSet.base.1749" = type <{ %"class.WTF::HashTable.1744", %"class.blink::Member.1746", %"class.blink::Member.1746", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1744" = type <{ %"class.blink::Member.1746"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1746" = type { %"class.blink::MemberBase.1747" }
%"class.blink::MemberBase.1747" = type { %"class.blink::HeapListHashSetNode.1748"* }
%"class.blink::HeapListHashSetNode.1748" = type { %"class.blink::Member.1924", %"class.blink::Member.1746", %"class.blink::Member.1746" }
%"class.blink::Member.1924" = type { %"class.blink::MemberBase.1925" }
%"class.blink::MemberBase.1925" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.1750" = type { %"class.WTF::ListHashSet.base.1760", [7 x i8] }
%"class.WTF::ListHashSet.base.1760" = type <{ %"class.WTF::HashTable.1755", %"class.blink::Member.1757", %"class.blink::Member.1757", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1755" = type <{ %"class.blink::Member.1757"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1757" = type { %"class.blink::MemberBase.1758" }
%"class.blink::MemberBase.1758" = type { %"class.blink::HeapListHashSetNode.1759"* }
%"class.blink::HeapListHashSetNode.1759" = type { %"class.blink::Member.1920", %"class.blink::Member.1757", %"class.blink::Member.1757" }
%"class.blink::Member.1920" = type { %"class.blink::MemberBase.1921" }
%"class.blink::MemberBase.1921" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.1761" = type { %"class.WTF::ListHashSet.base.1771", [7 x i8] }
%"class.WTF::ListHashSet.base.1771" = type <{ %"class.WTF::HashTable.1766", %"class.blink::Member.1768", %"class.blink::Member.1768", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1766" = type <{ %"class.blink::Member.1768"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1768" = type { %"class.blink::MemberBase.1769" }
%"class.blink::MemberBase.1769" = type { %"class.blink::HeapListHashSetNode.1770"* }
%"class.blink::HeapListHashSetNode.1770" = type { %"class.blink::Member.1916", %"class.blink::Member.1768", %"class.blink::Member.1768" }
%"class.blink::Member.1916" = type { %"class.blink::MemberBase.1917" }
%"class.blink::MemberBase.1917" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.1772" = type { %"class.WTF::ListHashSet.base.1782", [7 x i8] }
%"class.WTF::ListHashSet.base.1782" = type <{ %"class.WTF::HashTable.1777", %"class.blink::Member.1779", %"class.blink::Member.1779", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1777" = type <{ %"class.blink::Member.1779"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1779" = type { %"class.blink::MemberBase.1780" }
%"class.blink::MemberBase.1780" = type { %"class.blink::HeapListHashSetNode.1781"* }
%"class.blink::HeapListHashSetNode.1781" = type { %"class.blink::Member.1912", %"class.blink::Member.1779", %"class.blink::Member.1779" }
%"class.blink::Member.1912" = type { %"class.blink::MemberBase.1913" }
%"class.blink::MemberBase.1913" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.1783" = type { %"class.WTF::ListHashSet.base.1793", [7 x i8] }
%"class.WTF::ListHashSet.base.1793" = type <{ %"class.WTF::HashTable.1788", %"class.blink::Member.1790", %"class.blink::Member.1790", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1788" = type <{ %"class.blink::Member.1790"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1790" = type { %"class.blink::MemberBase.1791" }
%"class.blink::MemberBase.1791" = type { %"class.blink::HeapListHashSetNode.1792"* }
%"class.blink::HeapListHashSetNode.1792" = type { %"class.blink::Member.1908", %"class.blink::Member.1790", %"class.blink::Member.1790" }
%"class.blink::Member.1908" = type { %"class.blink::MemberBase.1909" }
%"class.blink::MemberBase.1909" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.1794" = type { %"class.WTF::ListHashSet.base.1804", [7 x i8] }
%"class.WTF::ListHashSet.base.1804" = type <{ %"class.WTF::HashTable.1799", %"class.blink::Member.1801", %"class.blink::Member.1801", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1799" = type <{ %"class.blink::Member.1801"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1801" = type { %"class.blink::MemberBase.1802" }
%"class.blink::MemberBase.1802" = type { %"class.blink::HeapListHashSetNode.1803"* }
%"class.blink::HeapListHashSetNode.1803" = type { %"class.blink::Member.1834", %"class.blink::Member.1801", %"class.blink::Member.1801" }
%"class.blink::HeapListHashSet.1805" = type { %"class.WTF::ListHashSet.base.1815", [7 x i8] }
%"class.WTF::ListHashSet.base.1815" = type <{ %"class.WTF::HashTable.1810", %"class.blink::Member.1812", %"class.blink::Member.1812", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1810" = type <{ %"class.blink::Member.1812"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1812" = type { %"class.blink::MemberBase.1813" }
%"class.blink::MemberBase.1813" = type { %"class.blink::HeapListHashSetNode.1814"* }
%"class.blink::HeapListHashSetNode.1814" = type { %"class.blink::Member.1817", %"class.blink::Member.1812", %"class.blink::Member.1812" }
%class.scoped_refptr.1816 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1817" = type { %"class.blink::MemberBase.1818" }
%"class.blink::MemberBase.1818" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1819" = type { %"class.blink::MemberBase.1820" }
%"class.blink::MemberBase.1820" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member.1039", %"class.WTF::Vector.1061", i32, [4 x i8], %"class.blink::HeapHashMap.1823", i32, i8, [3 x i8] }>
%"class.blink::HeapHashMap.1823" = type { %"class.WTF::HashMap.1826" }
%"class.WTF::HashMap.1826" = type { %"class.WTF::HashTable.1827" }
%"class.WTF::HashTable.1827" = type <{ %"struct.WTF::KeyValuePair.1829"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1829" = type opaque
%"class.blink::Member.1830" = type { %"class.blink::MemberBase.1831" }
%"class.blink::MemberBase.1831" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1832" = type { %"class.blink::MemberBase.1833" }
%"class.blink::MemberBase.1833" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1834" = type { %"class.blink::MemberBase.1835" }
%"class.blink::MemberBase.1835" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1836" = type { %"class.blink::MemberBase.1837" }
%"class.blink::MemberBase.1837" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1838" = type { %"class.blink::MemberBase.1839" }
%"class.blink::MemberBase.1839" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.1840" = type { %"class.blink::Member.1841" }
%"class.blink::Member.1841" = type { %"class.blink::MemberBase.1842" }
%"class.blink::MemberBase.1842" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2538" }
%"class.mojo::Remote.2538" = type { %"class.mojo::internal::InterfacePtrState.2539" }
%"class.mojo::internal::InterfacePtrState.2539" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2540" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.561, %"class.std::__1::unique_ptr.679", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.563, i32 }>
%class.scoped_refptr.561 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.563, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.641", %"class.absl::optional.646", %"class.absl::optional.602", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.670", i8, [7 x i8], %class.scoped_refptr.563, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.562" }>
%"class.base::RefCountedThreadSafe.562" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.567 }
%union.anon.567 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.572", %"class.std::__1::unique_ptr.578", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.572" = type { %"class.std::__1::__compressed_pair.573" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.578" = type { %"class.std::__1::__compressed_pair.579" }
%"class.std::__1::__compressed_pair.579" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"struct.std::__1::__compressed_pair_elem.580" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.563, %"class.std::__1::unique_ptr.591", %"class.absl::optional", %"struct.std::__1::atomic.294", i8, i8, i8, i8, i32, i32, %"class.absl::optional.602", %"class.std::__1::unique_ptr.607", i8, i64, %class.scoped_refptr.637, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.640" }
%"class.std::__1::unique_ptr.591" = type { %"class.std::__1::__compressed_pair.592" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.563, i8, %"class.mojo::ScopedHandleBase.594", %class.scoped_refptr.595, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.596" }
%"class.mojo::ScopedHandleBase.594" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.595 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.596" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.600 }
%union.anon.600 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.601", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.601" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.607" = type { %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.610", i8, i64, %class.scoped_refptr.611, %class.scoped_refptr.633 }
%"class.base::RepeatingCallback.610" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.611 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.612", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.622", i8, [7 x i8] }>
%"class.base::RefCounted.612" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.613 }
%class.scoped_refptr.613 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.614", %"class.std::__1::__compressed_pair.619" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::map.622" = type { %"class.std::__1::__tree.623" }
%"class.std::__1::__tree.623" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.624", %"class.std::__1::__compressed_pair.628" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%class.scoped_refptr.633 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.637 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.638 }
%class.scoped_refptr.638 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2261", [4 x i8], %"class.base::RepeatingCallback.682", %class.scoped_refptr.563, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2261" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.639 }
%class.scoped_refptr.639 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.640" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.641" = type { %"class.absl::optional_internal::optional_data.642" }
%"class.absl::optional_internal::optional_data.642" = type { %"class.absl::optional_internal::optional_data_base.643" }
%"class.absl::optional_internal::optional_data_base.643" = type { %"class.absl::optional_internal::optional_data_dtor_base.644" }
%"class.absl::optional_internal::optional_data_dtor_base.644" = type { i8, %union.anon.645 }
%union.anon.645 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.646" = type { %"class.absl::optional_internal::optional_data.647" }
%"class.absl::optional_internal::optional_data.647" = type { %"class.absl::optional_internal::optional_data_base.648" }
%"class.absl::optional_internal::optional_data_base.648" = type { %"class.absl::optional_internal::optional_data_dtor_base.649" }
%"class.absl::optional_internal::optional_data_dtor_base.649" = type { i8, [7 x i8], %union.anon.650 }
%union.anon.650 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.602" = type { %"class.absl::optional_internal::optional_data.603" }
%"class.absl::optional_internal::optional_data.603" = type { %"class.absl::optional_internal::optional_data_base.604" }
%"class.absl::optional_internal::optional_data_base.604" = type { %"class.absl::optional_internal::optional_data_dtor_base.605" }
%"class.absl::optional_internal::optional_data_dtor_base.605" = type { i8, %union.anon.606 }
%union.anon.606 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.655 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.655 = type { %"class.std::__1::map.658" }
%"class.std::__1::map.658" = type { %"class.std::__1::__tree.659" }
%"class.std::__1::__tree.659" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.660", %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.669"*, i64 }
%"class.std::__1::unique_ptr.669" = type opaque
%"class.std::__1::map.670" = type { %"class.std::__1::__tree.671" }
%"class.std::__1::__tree.671" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.672", %"class.std::__1::__compressed_pair.676" }
%"class.std::__1::__compressed_pair.672" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"class.std::__1::__compressed_pair.676" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::unique_ptr.679" = type { %"class.std::__1::__compressed_pair.680" }
%"class.std::__1::__compressed_pair.680" = type { %"struct.std::__1::__compressed_pair_elem.681" }
%"struct.std::__1::__compressed_pair_elem.681" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.682", %"class.base::OnceCallback.683", %"class.absl::optional.684", %"class.absl::optional.689", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.696", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.704", %"class.std::__1::map.715", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.724", i8, %class.scoped_refptr.563, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.725" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.683" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.684" = type { %"class.absl::optional_internal::optional_data.685" }
%"class.absl::optional_internal::optional_data.685" = type { %"class.absl::optional_internal::optional_data_base.686" }
%"class.absl::optional_internal::optional_data_base.686" = type { %"class.absl::optional_internal::optional_data_dtor_base.687" }
%"class.absl::optional_internal::optional_data_dtor_base.687" = type { i8, %union.anon.688 }
%union.anon.688 = type { %"class.base::TimeDelta" }
%"class.absl::optional.689" = type { %"class.absl::optional_internal::optional_data.690" }
%"class.absl::optional_internal::optional_data.690" = type { %"class.absl::optional_internal::optional_data_base.691" }
%"class.absl::optional_internal::optional_data_base.691" = type { %"class.absl::optional_internal::optional_data_dtor_base.692" }
%"class.absl::optional_internal::optional_data_dtor_base.692" = type { i8, %union.anon.693 }
%union.anon.693 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.563, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.694" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.694" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.696" = type { %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.699", %class.scoped_refptr.700 }
%"class.base::RepeatingCallback.699" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.700 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.562", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.704" = type { %"class.std::__1::__tree.705" }
%"class.std::__1::__tree.705" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.706", %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::map.715" = type { %"class.std::__1::__tree.716" }
%"class.std::__1::__tree.716" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.717", %"class.std::__1::__compressed_pair.721" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.base::OnceCallback.724" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.725" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.563 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.2540" = type { %"class.std::__1::__compressed_pair.2541" }
%"class.std::__1::__compressed_pair.2541" = type { %"struct.std::__1::__compressed_pair_elem.2542" }
%"struct.std::__1::__compressed_pair_elem.2542" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1843" = type { %"class.std::__1::__compressed_pair.1844" }
%"class.std::__1::__compressed_pair.1844" = type { %"struct.std::__1::__compressed_pair_elem.1845" }
%"struct.std::__1::__compressed_pair_elem.1845" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1849" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1850" = type { %"class.std::__1::__compressed_pair.1851" }
%"class.std::__1::__compressed_pair.1851" = type { %"struct.std::__1::__compressed_pair_elem.1852" }
%"struct.std::__1::__compressed_pair_elem.1852" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.1856" = type { %"class.std::__1::__compressed_pair.1857" }
%"class.std::__1::__compressed_pair.1857" = type { %"struct.std::__1::__compressed_pair_elem.1858" }
%"struct.std::__1::__compressed_pair_elem.1858" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1862" }
%"class.blink::Member.1862" = type { %"class.blink::MemberBase.1863" }
%"class.blink::MemberBase.1863" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2548" }
%"class.mojo::AssociatedRemote.2548" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2549" }
%"class.mojo::internal::AssociatedInterfacePtrState.2549" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2550" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.679", i32 }>
%"class.std::__1::unique_ptr.2550" = type { %"class.std::__1::__compressed_pair.2551" }
%"class.std::__1::__compressed_pair.2551" = type { %"struct.std::__1::__compressed_pair_elem.2552" }
%"struct.std::__1::__compressed_pair_elem.2552" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1864" = type { %"class.blink::Member.1865" }
%"class.blink::Member.1865" = type { %"class.blink::MemberBase.1866" }
%"class.blink::MemberBase.1866" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2558" }
%"class.mojo::AssociatedRemote.2558" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2559" }
%"class.mojo::internal::AssociatedInterfacePtrState.2559" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2560" }
%"class.std::__1::unique_ptr.2560" = type { %"class.std::__1::__compressed_pair.2561" }
%"class.std::__1::__compressed_pair.2561" = type { %"struct.std::__1::__compressed_pair_elem.2562" }
%"struct.std::__1::__compressed_pair_elem.2562" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1867" }
%"class.blink::Member.1867" = type { %"class.blink::MemberBase.1868" }
%"class.blink::MemberBase.1868" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2568", %"class.blink::Member.1039", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2568" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2569" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.679" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2569" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1869" = type { %"class.blink::Member.1870" }
%"class.blink::Member.1870" = type { %"class.blink::MemberBase.1871" }
%"class.blink::MemberBase.1871" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2572", %"class.blink::Member.1039", %"class.mojo::AssociatedReceiver.2573" }
%"class.blink::ThreadState::PrefinalizerRegistration.2572" = type { i8 }
%"class.mojo::AssociatedReceiver.2573" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2574" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2574" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1872" }
%"class.blink::Member.1872" = type { %"class.blink::MemberBase.1873" }
%"class.blink::MemberBase.1873" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2577", %"class.blink::Member.1039", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2577" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.561, %"class.std::__1::unique_ptr.679", %"class.base::WeakPtrFactory.2578" }
%"class.base::WeakPtrFactory.2578" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1874" = type { %"class.blink::Member.1875" }
%"class.blink::Member.1875" = type { %"class.blink::MemberBase.1876" }
%"class.blink::MemberBase.1876" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2581", %"class.blink::Member.1039", %"class.mojo::AssociatedReceiver.2582" }
%"class.blink::ThreadState::PrefinalizerRegistration.2581" = type { i8 }
%"class.mojo::AssociatedReceiver.2582" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2583" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2583" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1877" = type { %"class.blink::MemberBase.1878" }
%"class.blink::MemberBase.1878" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1879" = type { %"class.blink::MemberBase.1880" }
%"class.blink::MemberBase.1880" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1881" = type { %"class.blink::MemberBase.1882" }
%"class.blink::MemberBase.1882" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1883" = type { %"class.blink::MemberBase.1884" }
%"class.blink::MemberBase.1884" = type { %"class.blink::HeapHashMap.1885"* }
%"class.blink::HeapHashMap.1885" = type opaque
%"class.mojo::StructPtr.1886" = type { %"class.std::__1::unique_ptr.1887" }
%"class.std::__1::unique_ptr.1887" = type { %"class.std::__1::__compressed_pair.1888" }
%"class.std::__1::__compressed_pair.1888" = type { %"struct.std::__1::__compressed_pair_elem.1889" }
%"struct.std::__1::__compressed_pair_elem.1889" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1890", %"class.mojo::InlinedStructPtr.1891" }
%"class.mojo::InlinedStructPtr.1890" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1891" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1895" = type { %"class.blink::MemberBase.1896" }
%"class.blink::MemberBase.1896" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1897" = type { %"class.absl::optional_internal::optional_data.1898" }
%"class.absl::optional_internal::optional_data.1898" = type { %"class.absl::optional_internal::optional_data_base.1899" }
%"class.absl::optional_internal::optional_data_base.1899" = type { %"class.absl::optional_internal::optional_data_dtor_base.1900" }
%"class.absl::optional_internal::optional_data_dtor_base.1900" = type { i8, %union.anon.1901 }
%union.anon.1901 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.550", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair.1520"*, %"struct.std::__1::pair.1520"*, %"class.std::__1::__compressed_pair.1521" }
%"struct.std::__1::pair.1520" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1521" = type { %"struct.std::__1::__compressed_pair_elem.1522" }
%"struct.std::__1::__compressed_pair_elem.1522" = type { %"struct.std::__1::pair.1520"* }
%"class.blink::Member.1526" = type { %"class.blink::MemberBase.1527" }
%"class.blink::MemberBase.1527" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.1528" = type { %"class.absl::optional_internal::optional_data.1529" }
%"class.absl::optional_internal::optional_data.1529" = type { %"class.absl::optional_internal::optional_data_base.1530" }
%"class.absl::optional_internal::optional_data_base.1530" = type { %"class.absl::optional_internal::optional_data_dtor_base.1531" }
%"class.absl::optional_internal::optional_data_dtor_base.1531" = type { i8, %union.anon.1532 }
%union.anon.1532 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.1533" = type { %"class.absl::optional_internal::optional_data.1534" }
%"class.absl::optional_internal::optional_data.1534" = type { %"class.absl::optional_internal::optional_data_base.1535" }
%"class.absl::optional_internal::optional_data_base.1535" = type { %"class.absl::optional_internal::optional_data_dtor_base.1536" }
%"class.absl::optional_internal::optional_data_dtor_base.1536" = type { i8, %union.anon.1537 }
%union.anon.1537 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1538" }
%"class.blink::HeapHashSet.1538" = type { %"class.WTF::HashSet.1541" }
%"class.WTF::HashSet.1541" = type { %"class.WTF::HashTable.1542" }
%"class.WTF::HashTable.1542" = type <{ %"class.blink::WeakMember.1544"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1544" = type opaque
%"class.blink::Member.552" = type { %"class.blink::MemberBase.553" }
%"class.blink::MemberBase.553" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.554" = type { %"class.blink::MemberBase.555" }
%"class.blink::MemberBase.555" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.556" = type { %"class.blink::MemberBase.557" }
%"class.blink::MemberBase.557" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.558" = type { %"class.WTF::VectorBuffer.559" }
%"class.WTF::VectorBuffer.559" = type { %"class.WTF::VectorBufferBase.560" }
%"class.WTF::VectorBufferBase.560" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.729" }
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.737", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.808", i32, i8, [3 x i8], %"class.blink::HeapVector.810", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.818", %"class.blink::Member.820", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.829", %"class.blink::Member.888", %"class.blink::Member.890", i8 }>
%"class.blink::Supplementable.737" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.738" }
%"class.blink::HeapHashMap.738" = type { %"class.WTF::HashMap.741" }
%"class.WTF::HashMap.741" = type { %"class.WTF::HashTable.742" }
%"class.WTF::HashTable.742" = type <{ %"struct.WTF::KeyValuePair.744"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.744" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.752" }
%"class.blink::Supplementable.752" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.753" }
%"class.blink::HeapHashMap.753" = type { %"class.WTF::HashMap.756" }
%"class.WTF::HashMap.756" = type { %"class.WTF::HashTable.757" }
%"class.WTF::HashTable.757" = type <{ %"struct.WTF::KeyValuePair.759"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.759" = type { i8*, %"class.blink::Member.2501" }
%"class.blink::Member.2501" = type { %"class.blink::MemberBase.2502" }
%"class.blink::MemberBase.2502" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2503" }
%"class.blink::Member.2503" = type { %"class.blink::MemberBase.2504" }
%"class.blink::MemberBase.2504" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.760, %"class.std::__1::unique_ptr.769", %"class.std::__1::unique_ptr.769", %"class.std::__1::unique_ptr.796", %"class.std::__1::unique_ptr.796", %"class.blink::Member.802", i32, [4 x i8], %"class.WTF::HashSet.804", i32, i32 }
%class.scoped_refptr.760 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.761", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.763", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.768 }
%"class.WTF::RefCounted.761" = type { %"class.base::RefCounted.762" }
%"class.base::RefCounted.762" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.763" = type { %"class.absl::optional_internal::optional_data.764" }
%"class.absl::optional_internal::optional_data.764" = type { %"class.absl::optional_internal::optional_data_base.765" }
%"class.absl::optional_internal::optional_data_base.765" = type { %"class.absl::optional_internal::optional_data_dtor_base.766" }
%"class.absl::optional_internal::optional_data_dtor_base.766" = type { i8, %union.anon.767 }
%union.anon.767 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.768 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.769" = type { %"class.std::__1::__compressed_pair.770" }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.771" }
%"struct.std::__1::__compressed_pair_elem.771" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.772", %"class.std::__1::map.783", %"class.std::__1::map.792"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.763" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map.772" = type { %"class.std::__1::__tree.773" }
%"class.std::__1::__tree.773" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.774", %"class.std::__1::__compressed_pair.778" }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::map.783" = type { %"class.std::__1::__tree.784" }
%"class.std::__1::__tree.784" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.785", %"class.std::__1::__compressed_pair.789" }
%"class.std::__1::__compressed_pair.785" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::map.792" = type opaque
%"class.std::__1::unique_ptr.796" = type { %"class.std::__1::__compressed_pair.797" }
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.798" }
%"struct.std::__1::__compressed_pair_elem.798" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.804" = type { %"class.WTF::HashTable.805" }
%"class.WTF::HashTable.805" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.808" = type { %"class.blink::MemberBase.809" }
%"class.blink::MemberBase.809" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.810" = type { %"class.WTF::Vector.813" }
%"class.WTF::Vector.813" = type { %"class.WTF::VectorBuffer.814" }
%"class.WTF::VectorBuffer.814" = type { %"class.WTF::VectorBufferBase.815" }
%"class.WTF::VectorBufferBase.815" = type { %"class.blink::Member.816"*, i32, i32 }
%"class.blink::Member.816" = type opaque
%"class.blink::Member.818" = type { %"class.blink::MemberBase.819" }
%"class.blink::MemberBase.819" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.820" = type { %"class.blink::MemberBase.821" }
%"class.blink::MemberBase.821" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.822", i32, i32 }
%"class.blink::HeapHashMap.822" = type { %"class.WTF::HashMap.825" }
%"class.WTF::HashMap.825" = type { %"class.WTF::HashTable.826" }
%"class.WTF::HashTable.826" = type <{ %"struct.WTF::KeyValuePair.828"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.828" = type opaque
%"class.std::__1::unique_ptr.829" = type { %"class.std::__1::__compressed_pair.830" }
%"class.std::__1::__compressed_pair.830" = type { %"struct.std::__1::__compressed_pair_elem.831" }
%"struct.std::__1::__compressed_pair_elem.831" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.832" }
%"class.std::__1::unique_ptr.832" = type { %"class.std::__1::__compressed_pair.833" }
%"class.std::__1::__compressed_pair.833" = type { %"struct.std::__1::__compressed_pair_elem.834" }
%"struct.std::__1::__compressed_pair_elem.834" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.835" }
%"class.WTF::Vector.835" = type { %"class.WTF::VectorBuffer.836" }
%"class.WTF::VectorBuffer.836" = type { %"class.WTF::VectorBufferBase.837" }
%"class.WTF::VectorBufferBase.837" = type { %"class.mojo::StructPtr.838"*, i32, i32 }
%"class.mojo::StructPtr.838" = type { %"class.std::__1::unique_ptr.839" }
%"class.std::__1::unique_ptr.839" = type { %"class.std::__1::__compressed_pair.840" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.841" }
%"struct.std::__1::__compressed_pair_elem.841" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.842", %"class.WTF::HashMap.849", %"class.WTF::HashMap.854", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.859", i32, %"class.mojo::StructPtr.864", %"class.WTF::Vector.859" }
%"class.mojo::StructPtr.842" = type { %"class.std::__1::unique_ptr.843" }
%"class.std::__1::unique_ptr.843" = type { %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.849" = type { %"class.WTF::HashTable.850" }
%"class.WTF::HashTable.850" = type <{ %"struct.WTF::KeyValuePair.853"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.853" = type opaque
%"class.WTF::HashMap.854" = type { %"class.WTF::HashTable.855" }
%"class.WTF::HashTable.855" = type <{ %"struct.WTF::KeyValuePair.858"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.858" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.864" = type { %"class.std::__1::unique_ptr.865" }
%"class.std::__1::unique_ptr.865" = type { %"class.std::__1::__compressed_pair.866" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.867" }
%"struct.std::__1::__compressed_pair_elem.867" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.859", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.879" }
%"class.std::__1::unique_ptr.879" = type { %"class.std::__1::__compressed_pair.880" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.881" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.888" = type { %"class.blink::MemberBase.889" }
%"class.blink::MemberBase.889" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.890" = type { %"class.blink::MemberBase.891" }
%"class.blink::MemberBase.891" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.820", i8, [7 x i8], %"class.WTF::Vector.835", %"class.blink::HeapVector.894", i8, [7 x i8], %"class.WTF::HashSet.804", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.894" = type { %"class.WTF::Vector.897" }
%"class.WTF::Vector.897" = type { %"class.WTF::VectorBuffer.898" }
%"class.WTF::VectorBuffer.898" = type { %"class.WTF::VectorBufferBase.899" }
%"class.WTF::VectorBufferBase.899" = type { %"class.blink::Member.900"*, i32, i32 }
%"class.blink::Member.900" = type opaque
%"class.blink::Supplementable.902" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.903" }
%"class.blink::HeapHashMap.903" = type { %"class.WTF::HashMap.906" }
%"class.WTF::HashMap.906" = type { %"class.WTF::HashTable.907" }
%"class.WTF::HashTable.907" = type <{ %"struct.WTF::KeyValuePair.909"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.909" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.910" = type { %"class.blink::MemberBase.911" }
%"class.blink::MemberBase.911" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.912" = type { %"class.blink::MemberBase.913" }
%"class.blink::MemberBase.913" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.914" = type { %"class.blink::MemberBase.915" }
%"class.blink::MemberBase.915" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.916" = type { %"class.blink::MemberBase.917" }
%"class.blink::MemberBase.917" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.918" = type { %"class.blink::MemberBase.919" }
%"class.blink::MemberBase.919" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.920" = type { %"class.blink::MemberBase.921" }
%"class.blink::MemberBase.921" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.922" = type { %"class.blink::MemberBase.923" }
%"class.blink::MemberBase.923" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.924" = type { %"class.blink::MemberBase.925" }
%"class.blink::MemberBase.925" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.926" = type { %"class.blink::MemberBase.927" }
%"class.blink::MemberBase.927" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.928" = type { %"class.blink::MemberBase.929" }
%"class.blink::MemberBase.929" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.WTF::Vector.859" = type { %"class.WTF::VectorBuffer.860" }
%"class.WTF::VectorBuffer.860" = type { %"class.WTF::VectorBufferBase.861" }
%"class.WTF::VectorBufferBase.861" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.930" = type { %"class.blink::MemberBase.931" }
%"class.blink::MemberBase.931" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.932 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.934", i64, %"class.WTF::Vector.938", %"class.WTF::Vector.943", %"class.WTF::Vector.949", %"class.WTF::Vector.967", %class.scoped_refptr.760, %"class.WTF::HashMap.973", %"class.WTF::Vector.978", %"class.WTF::Vector.938", %"class.WTF::Vector.984", %"class.WTF::HashMap.989", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.933" }
%"class.base::RefCountedThreadSafe.933" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.936" }
%"struct.std::__1::__compressed_pair_elem.936" = type { i8* }
%"class.WTF::Vector.943" = type { %"class.WTF::VectorBuffer.944" }
%"class.WTF::VectorBuffer.944" = type { %"class.WTF::VectorBufferBase.945", [8 x i8] }
%"class.WTF::VectorBufferBase.945" = type { %class.scoped_refptr.946*, i32, i32 }
%class.scoped_refptr.946 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.949" = type { %"class.WTF::VectorBuffer.950" }
%"class.WTF::VectorBuffer.950" = type { %"class.WTF::VectorBufferBase.951" }
%"class.WTF::VectorBufferBase.951" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.953", %"class.std::__1::unique_ptr.959" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.952 }
%class.scoped_refptr.952 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.953" = type { %"class.std::__1::__compressed_pair.954" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.955" }
%"struct.std::__1::__compressed_pair_elem.955" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.959" = type { %"class.std::__1::__compressed_pair.960" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.967" = type { %"class.WTF::VectorBuffer.968" }
%"class.WTF::VectorBuffer.968" = type { %"class.WTF::VectorBufferBase.969" }
%"class.WTF::VectorBufferBase.969" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.970", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.970" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.973" = type { %"class.WTF::HashTable.974" }
%"class.WTF::HashTable.974" = type <{ %"struct.WTF::KeyValuePair.977"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.977" = type opaque
%"class.WTF::Vector.978" = type { %"class.WTF::VectorBuffer.979" }
%"class.WTF::VectorBuffer.979" = type { %"class.WTF::VectorBufferBase.980" }
%"class.WTF::VectorBufferBase.980" = type { %"class.mojo::ScopedHandleBase.981"*, i32, i32 }
%"class.mojo::ScopedHandleBase.981" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.938" = type { %"class.WTF::VectorBuffer.939" }
%"class.WTF::VectorBuffer.939" = type { %"class.WTF::VectorBufferBase.940", [16 x i8] }
%"class.WTF::VectorBufferBase.940" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.984" = type { %"class.WTF::VectorBuffer.985" }
%"class.WTF::VectorBuffer.985" = type { %"class.WTF::VectorBufferBase.986" }
%"class.WTF::VectorBufferBase.986" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.989" = type { %"class.WTF::HashTable.990" }
%"class.WTF::HashTable.990" = type <{ %"struct.WTF::KeyValuePair.993"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.993" = type { i8**, %"class.std::__1::unique_ptr.2517" }
%"class.std::__1::unique_ptr.2517" = type { %"class.std::__1::__compressed_pair.2518" }
%"class.std::__1::__compressed_pair.2518" = type { %"struct.std::__1::__compressed_pair_elem.2519" }
%"struct.std::__1::__compressed_pair_elem.2519" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.994" = type { %"class.WTF::HashSet.997" }
%"class.WTF::HashSet.997" = type { %"class.WTF::HashTable.998" }
%"class.WTF::HashTable.998" = type <{ %"class.blink::WeakMember.1000"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1000" = type opaque
%"class.blink::Member.1001" = type { %"class.blink::MemberBase.1002" }
%"class.blink::MemberBase.1002" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1008", %"class.blink::Member.1008", %"class.blink::Member.1010", %"class.blink::Member.1012", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.1003" }
%"class.absl::optional.1003" = type { %"class.absl::optional_internal::optional_data.1004" }
%"class.absl::optional_internal::optional_data.1004" = type { %"class.absl::optional_internal::optional_data_base.1005" }
%"class.absl::optional_internal::optional_data_base.1005" = type { %"class.absl::optional_internal::optional_data_dtor_base.1006" }
%"class.absl::optional_internal::optional_data_dtor_base.1006" = type { i8, %union.anon.1007 }
%union.anon.1007 = type { i64 }
%"class.blink::Member.1008" = type { %"class.blink::MemberBase.1009" }
%"class.blink::MemberBase.1009" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.1010" = type { %"class.blink::MemberBase.1011" }
%"class.blink::MemberBase.1011" = type { %"class.blink::Event"* }
%"class.blink::Member.1012" = type { %"class.blink::MemberBase.1013" }
%"class.blink::MemberBase.1013" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.1014" = type { %"class.WTF::HashMap.1017" }
%"class.WTF::HashMap.1017" = type { %"class.WTF::HashTable.1018" }
%"class.WTF::HashTable.1018" = type <{ %"struct.WTF::KeyValuePair.1020"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1020" = type opaque
%"class.std::__1::unique_ptr.1021" = type { %"class.std::__1::__compressed_pair.1022" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.1023" }
%"struct.std::__1::__compressed_pair_elem.1023" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.1033" = type { %"class.blink::MemberBase.1034" }
%"class.blink::MemberBase.1034" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.1039", %"class.blink::CachedTextInputInfo", %"class.blink::Member.1050", %"class.blink::Member.1052", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.1041", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.1043", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.1041" = type { %"class.blink::MemberBase.1042" }
%"class.blink::MemberBase.1042" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.1043" = type { %"class.WTF::HashMap.1046" }
%"class.WTF::HashMap.1046" = type { %"class.WTF::HashTable.1047" }
%"class.WTF::HashTable.1047" = type <{ %"struct.WTF::KeyValuePair.1049"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1049" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member", i32, i32 }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.1054" = type { %"class.blink::MemberBase.1055" }
%"class.blink::MemberBase.1055" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.527", %"class.blink::Member.1506", %"class.blink::Member.1508" }
%"class.blink::Member.1506" = type { %"class.blink::MemberBase.1507" }
%"class.blink::MemberBase.1507" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1508" = type { %"class.blink::MemberBase.1509" }
%"class.blink::MemberBase.1509" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.1056" = type { %"class.blink::MemberBase.1057" }
%"class.blink::MemberBase.1057" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.527", %"class.blink::HeapMojoRemote" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1502" }
%"class.blink::Member.1502" = type { %"class.blink::MemberBase.1503" }
%"class.blink::MemberBase.1503" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1058" = type { %"class.blink::MemberBase.1059" }
%"class.blink::MemberBase.1059" = type { %"class.blink::HeapHashMap.1060"* }
%"class.blink::HeapHashMap.1060" = type opaque
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.1066" = type { %"class.WTF::HashTable.1067" }
%"class.WTF::HashTable.1067" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.1070" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1073" }
%"class.WTF::VectorBuffer.1073" = type { %"class.WTF::VectorBufferBase.1074" }
%"class.WTF::VectorBufferBase.1074" = type { i64*, i32, i32 }
%"class.blink::Member.802" = type { %"class.blink::MemberBase.803" }
%"class.blink::MemberBase.803" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.737", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.808", i32, i8, [3 x i8], %"class.blink::HeapVector.810", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.818", %"class.blink::Member.820", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.829", %"class.blink::Member.888", %"class.blink::Member.890", i8, [7 x i8] }>
%"class.blink::Member.1075" = type { %"class.blink::MemberBase.1076" }
%"class.blink::MemberBase.1076" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1077" = type { %"class.blink::MemberBase.1078" }
%"class.blink::MemberBase.1078" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1079" = type { %"class.blink::MemberBase.1080" }
%"class.blink::MemberBase.1080" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1083" = type { %"class.std::__1::__compressed_pair.1084" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1091" = type { %"class.blink::MemberBase.1092" }
%"class.blink::MemberBase.1092" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1093 }
%class.scoped_refptr.1093 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1094" = type { %"class.WTF::VectorBuffer.1095" }
%"class.WTF::VectorBuffer.1095" = type { %"class.WTF::VectorBufferBase.1096" }
%"class.WTF::VectorBufferBase.1096" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.103 }
%class.scoped_refptr.103 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.8", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member", %"class.blink::Member", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1102" }
%"class.blink::HeapHashMap.1102" = type { %"class.WTF::HashMap.1105" }
%"class.WTF::HashMap.1105" = type { %"class.WTF::HashTable.1106" }
%"class.WTF::HashTable.1106" = type <{ %"struct.WTF::KeyValuePair.1108"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1108" = type opaque
%"class.blink::Member.1109" = type { %"class.blink::MemberBase.1110" }
%"class.blink::MemberBase.1110" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1111" = type { %"class.WTF::HashSet.1114" }
%"class.WTF::HashSet.1114" = type { %"class.WTF::HashTable.1115" }
%"class.WTF::HashTable.1115" = type <{ %"class.blink::WeakMember.1117"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1117" = type opaque
%"class.blink::HeapHashSet.1118" = type { %"class.WTF::HashSet.1121" }
%"class.WTF::HashSet.1121" = type { %"class.WTF::HashTable.1122" }
%"class.WTF::HashTable.1122" = type <{ %"class.blink::WeakMember.1124"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1124" = type opaque
%"class.blink::Member.1125" = type { %"class.blink::MemberBase.1126" }
%"class.blink::MemberBase.1126" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1127" = type { %"class.blink::MemberBase.1128" }
%"class.blink::MemberBase.1128" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.8", i32, i32, i32, %"class.blink::Member.61", %"class.blink::Member.1131", %"class.blink::Member.1158", %"class.blink::HeapHashMap.1160", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1167", %"class.blink::HeapHashSet.1167", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1173", %"class.blink::Member.1187", %"class.blink::Member.1217", %"class.blink::Member.1219", %"class.blink::Member.1225", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1236", %"class.blink::Member.1242", %"class.blink::HeapHashMap.1244", %"class.blink::HeapHashMap.1251", %"class.std::__1::unique_ptr.1258", i32, %"class.blink::HeapVector.1264", %"class.blink::HeapVector.1264", %"class.blink::HeapVector.1143", %"class.blink::HeapHashSet", %"class.blink::HeapHashMap.1272", %"class.blink::Member.1279", %"class.blink::HeapHashMap.1281", %class.scoped_refptr.1288, %class.scoped_refptr.1289, %"class.blink::Member.438", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1290", %"class.blink::Member.21" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1131" = type { %"class.blink::MemberBase.1132" }
%"class.blink::MemberBase.1132" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.0", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1135", %"class.blink::HeapVector.1143", i8 }>
%"class.blink::HeapVector.1135" = type { %"class.WTF::Vector.1138" }
%"class.WTF::Vector.1138" = type { %"class.WTF::VectorBuffer.1139" }
%"class.WTF::VectorBuffer.1139" = type { %"class.WTF::VectorBufferBase.1140" }
%"class.WTF::VectorBufferBase.1140" = type { %"class.blink::Member.1141"*, i32, i32 }
%"class.blink::Member.1141" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1154", %"class.blink::Member.1156", %"class.blink::Member.1156", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1154" = type <{ %"class.blink::Member.1156"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1156" = type { %"class.blink::MemberBase.1157" }
%"class.blink::MemberBase.1157" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member", %"class.blink::Member.1156", %"class.blink::Member.1156" }
%"class.blink::Member.1158" = type { %"class.blink::MemberBase.1159" }
%"class.blink::MemberBase.1159" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1160" = type { %"class.WTF::HashMap.1163" }
%"class.WTF::HashMap.1163" = type { %"class.WTF::HashTable.1164" }
%"class.WTF::HashTable.1164" = type <{ %"struct.WTF::KeyValuePair.1166"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1166" = type opaque
%"class.blink::HeapHashSet.1167" = type { %"class.WTF::HashSet.1170" }
%"class.WTF::HashSet.1170" = type { %"class.WTF::HashTable.1171" }
%"class.WTF::HashTable.1171" = type <{ %"class.blink::Member.0"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1173" = type { %"class.blink::MemberBase.1174" }
%"class.blink::MemberBase.1174" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1177", %"class.blink::Member.1179" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1177" = type { %"class.blink::MemberBase.1178" }
%"class.blink::MemberBase.1178" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type opaque
%"class.blink::Member.1179" = type { %"class.blink::MemberBase.1180" }
%"class.blink::MemberBase.1180" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1183", %"class.blink::Member.1185" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Member.1183" = type { %"class.blink::MemberBase.1184" }
%"class.blink::MemberBase.1184" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1185" = type { %"class.blink::MemberBase.1186" }
%"class.blink::MemberBase.1186" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1485", %"class.blink::Member.1179", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp] }
%"class.blink::HeapVector.1485" = type { %"class.WTF::Vector.1488" }
%"class.WTF::Vector.1488" = type { %"class.WTF::VectorBuffer.1489" }
%"class.WTF::VectorBuffer.1489" = type { %"class.WTF::VectorBufferBase.1490" }
%"class.WTF::VectorBufferBase.1490" = type { %"class.blink::Member.1185"*, i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1492, i32, %"class.absl::optional.1493", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.520" }>
%class.sk_sp.1492 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1493" = type { %"class.absl::optional_internal::optional_data.1494" }
%"class.absl::optional_internal::optional_data.1494" = type { %"class.absl::optional_internal::optional_data_base.1495" }
%"class.absl::optional_internal::optional_data_base.1495" = type { %"class.absl::optional_internal::optional_data_dtor_base.1496" }
%"class.absl::optional_internal::optional_data_dtor_base.1496" = type { i8, %union.anon.1497 }
%union.anon.1497 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1187" = type { %"class.blink::MemberBase.1188" }
%"class.blink::MemberBase.1188" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.8", %class.scoped_refptr.1198, %"class.blink::SelectorFilter", %"class.blink::Member.1158", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1191" }
%"class.blink::HeapHashMap.1191" = type { %"class.WTF::HashMap.1194" }
%"class.WTF::HashMap.1194" = type { %"class.WTF::HashTable.1195" }
%"class.WTF::HashTable.1195" = type <{ %"struct.WTF::KeyValuePair.1197"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1197" = type opaque
%class.scoped_refptr.1198 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1199", %"class.std::__1::unique_ptr.1211" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.21", %"class.WTF::Vector.1205" }
%"class.WTF::Vector.1205" = type { %"class.WTF::VectorBuffer.1206" }
%"class.WTF::VectorBuffer.1206" = type { %"class.WTF::VectorBufferBase.1207", [16 x i8] }
%"class.WTF::VectorBufferBase.1207" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1211" = type { %"class.std::__1::__compressed_pair.1212" }
%"class.std::__1::__compressed_pair.1212" = type { %"struct.std::__1::__compressed_pair_elem.1213" }
%"struct.std::__1::__compressed_pair_elem.1213" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1217" = type { %"class.blink::MemberBase.1218" }
%"class.blink::MemberBase.1218" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1219" = type { %"class.blink::MemberBase.1220" }
%"class.blink::MemberBase.1220" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1223", i8, [7 x i8] }>
%"class.blink::Member.1223" = type { %"class.blink::MemberBase.1224" }
%"class.blink::MemberBase.1224" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1225" = type { %"class.blink::MemberBase.1226" }
%"class.blink::MemberBase.1226" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.305", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.354", %"class.WTF::HashMap.354", %"class.WTF::HashMap.354", %"class.WTF::HashMap.359", %class.scoped_refptr.364, %class.scoped_refptr.375, %class.scoped_refptr.374, %"class.WTF::Vector.376", %"class.WTF::Vector.376", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.354" = type { %"class.WTF::HashTable.355" }
%"class.WTF::HashTable.355" = type <{ %"struct.WTF::KeyValuePair.358"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.358" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2505 }
%class.scoped_refptr.2505 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.365", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.371", %"union.blink::InvalidationSet::Backing.372", %"union.blink::InvalidationSet::Backing.373", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.365" = type { %"class.base::RefCounted.366" }
%"class.base::RefCounted.366" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.371" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.372" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.373" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.359" = type { %"class.WTF::HashTable.360" }
%"class.WTF::HashTable.360" = type <{ %"struct.WTF::KeyValuePair.363"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.363" = type opaque
%class.scoped_refptr.364 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.374, %class.scoped_refptr.374 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.365", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.371", %"union.blink::InvalidationSet::Backing.372", %"union.blink::InvalidationSet::Backing.373", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.375 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.374 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.305" = type { %"class.blink::MemberBase.306" }
%"class.blink::MemberBase.306" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.309", %"class.blink::HeapHashMap.309", %"class.blink::HeapHashMap.309", %"class.blink::HeapHashMap.309", %"class.blink::HeapVector.316", %"class.blink::HeapVector.316", %"class.blink::HeapVector.316", %"class.blink::HeapVector.316", %"class.blink::HeapVector.316", %"class.blink::HeapVector.316", %"class.blink::HeapVector.316", %"class.blink::HeapVector.316", %"class.blink::HeapVector.316", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.381", %"class.blink::HeapVector.389", %"class.blink::HeapVector.397", %"class.blink::HeapVector.414", %"class.blink::HeapVector.422", %"class.blink::HeapVector.430", %"class.blink::HeapVector.443", %"class.WTF::Vector.450", i32, %"class.blink::Member.474" }
%"class.blink::HeapHashMap.309" = type { %"class.WTF::HashMap.312" }
%"class.WTF::HashMap.312" = type { %"class.WTF::HashTable.313" }
%"class.WTF::HashTable.313" = type <{ %"struct.WTF::KeyValuePair.315"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.315" = type { %"class.WTF::AtomicString", %"class.blink::Member.2515" }
%"class.blink::Member.2515" = type { %"class.blink::MemberBase.2516" }
%"class.blink::MemberBase.2516" = type { %"class.blink::HeapVector.316"* }
%"class.blink::HeapVector.316" = type { %"class.WTF::Vector.319" }
%"class.WTF::Vector.319" = type { %"class.WTF::VectorBuffer.320" }
%"class.WTF::VectorBuffer.320" = type { %"class.WTF::VectorBufferBase.321" }
%"class.WTF::VectorBufferBase.321" = type { %"class.blink::Member.322"*, i32, i32 }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.326", i64, [4 x i32] }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.30", %"class.blink::Member.349" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.349" = type { %"class.blink::MemberBase.350" }
%"class.blink::MemberBase.350" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.381" = type { %"class.WTF::Vector.384" }
%"class.WTF::Vector.384" = type { %"class.WTF::VectorBuffer.385" }
%"class.WTF::VectorBuffer.385" = type { %"class.WTF::VectorBufferBase.386" }
%"class.WTF::VectorBufferBase.386" = type { %"class.blink::Member.387"*, i32, i32 }
%"class.blink::Member.387" = type { %"class.blink::MemberBase.2511" }
%"class.blink::MemberBase.2511" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.30", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.389" = type { %"class.WTF::Vector.392" }
%"class.WTF::Vector.392" = type { %"class.WTF::VectorBuffer.393" }
%"class.WTF::VectorBuffer.393" = type { %"class.WTF::VectorBufferBase.394" }
%"class.WTF::VectorBufferBase.394" = type { %"class.blink::Member.395"*, i32, i32 }
%"class.blink::Member.395" = type { %"class.blink::MemberBase.2512" }
%"class.blink::MemberBase.2512" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.30" }
%"class.blink::HeapVector.397" = type { %"class.WTF::Vector.400" }
%"class.WTF::Vector.400" = type { %"class.WTF::VectorBuffer.401" }
%"class.WTF::VectorBuffer.401" = type { %"class.WTF::VectorBufferBase.402" }
%"class.WTF::VectorBufferBase.402" = type { %"class.blink::Member.403"*, i32, i32 }
%"class.blink::Member.403" = type { %"class.blink::MemberBase.404" }
%"class.blink::MemberBase.404" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.405", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.405" = type { %"class.WTF::Vector.408" }
%"class.WTF::Vector.408" = type { %"class.WTF::VectorBuffer.409" }
%"class.WTF::VectorBuffer.409" = type { %"class.WTF::VectorBufferBase.410" }
%"class.WTF::VectorBufferBase.410" = type { %"class.blink::Member.411"*, i32, i32 }
%"class.blink::Member.411" = type opaque
%"class.blink::HeapVector.414" = type { %"class.WTF::Vector.417" }
%"class.WTF::Vector.417" = type { %"class.WTF::VectorBuffer.418" }
%"class.WTF::VectorBuffer.418" = type { %"class.WTF::VectorBufferBase.419" }
%"class.WTF::VectorBufferBase.419" = type { %"class.blink::Member.420"*, i32, i32 }
%"class.blink::Member.420" = type { %"class.blink::MemberBase.2513" }
%"class.blink::MemberBase.2513" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.30" }
%"class.blink::HeapVector.422" = type { %"class.WTF::Vector.425" }
%"class.WTF::Vector.425" = type { %"class.WTF::VectorBuffer.426" }
%"class.WTF::VectorBuffer.426" = type { %"class.WTF::VectorBufferBase.427" }
%"class.WTF::VectorBufferBase.427" = type { %"class.blink::Member.428"*, i32, i32 }
%"class.blink::Member.428" = type { %"class.blink::MemberBase.2514" }
%"class.blink::MemberBase.2514" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.438", %"class.blink::Member.438", %"class.blink::Member.438", %"class.blink::Member.438", %"class.blink::Member.438", %"class.blink::Member.438", %"class.blink::Member.438", %"class.blink::Member.438", %"class.blink::Member.438", %"class.blink::Member.438", i32, [4 x i8] }>
%"class.blink::HeapVector.430" = type { %"class.WTF::Vector.433" }
%"class.WTF::Vector.433" = type { %"class.WTF::VectorBuffer.434" }
%"class.WTF::VectorBuffer.434" = type { %"class.WTF::VectorBufferBase.435" }
%"class.WTF::VectorBufferBase.435" = type { %"class.blink::Member.436"*, i32, i32 }
%"class.blink::Member.436" = type { %"class.blink::MemberBase.437" }
%"class.blink::MemberBase.437" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.438", %"class.blink::Member.438", %"class.blink::Member.438", %"class.blink::Member.438", %"class.blink::Member.438" }
%"class.blink::HeapVector.443" = type { %"class.WTF::Vector.446" }
%"class.WTF::Vector.446" = type { %"class.WTF::VectorBuffer.447" }
%"class.WTF::VectorBuffer.447" = type { %"class.WTF::VectorBufferBase.448" }
%"class.WTF::VectorBufferBase.448" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.326", i32, i32 }
%"class.WTF::Vector.450" = type { %"class.WTF::VectorBuffer.451" }
%"class.WTF::VectorBuffer.451" = type { %"class.WTF::VectorBufferBase.452" }
%"class.WTF::VectorBufferBase.452" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.453, i8, [7 x i8] }>
%class.scoped_refptr.453 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.474" = type { %"class.blink::MemberBase.475" }
%"class.blink::MemberBase.475" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.478", %"class.blink::HeapHashMap.478", %"class.blink::HeapHashMap.478", %"class.blink::HeapHashMap.478" }
%"class.blink::HeapHashMap.478" = type { %"class.WTF::HashMap.481" }
%"class.WTF::HashMap.481" = type { %"class.WTF::HashTable.482" }
%"class.WTF::HashTable.482" = type <{ %"struct.WTF::KeyValuePair.484"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.484" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1229" }
%"class.blink::HeapHashMap.1229" = type { %"class.WTF::HashMap.1232" }
%"class.WTF::HashMap.1232" = type { %"class.WTF::HashTable.1233" }
%"class.WTF::HashTable.1233" = type <{ %"struct.WTF::KeyValuePair.1235"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1235" = type { %"class.blink::Member.6", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2506", %"class.WTF::Vector.2506" }
%"class.WTF::Vector.2506" = type { %"class.WTF::VectorBuffer.2507" }
%"class.WTF::VectorBuffer.2507" = type { %"class.WTF::VectorBufferBase.2508" }
%"class.WTF::VectorBufferBase.2508" = type { %class.scoped_refptr.2505*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1236" = type { %"class.WTF::HashSet.1239" }
%"class.WTF::HashSet.1239" = type { %"class.WTF::HashTable.1240" }
%"class.WTF::HashTable.1240" = type <{ %"class.blink::Member.21"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1242" = type { %"class.blink::MemberBase.1243" }
%"class.blink::MemberBase.1243" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type opaque
%"class.blink::HeapHashMap.1251" = type { %"class.WTF::HashMap.1254" }
%"class.WTF::HashMap.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"struct.WTF::KeyValuePair.1257"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1257" = type opaque
%"class.std::__1::unique_ptr.1258" = type { %"class.std::__1::__compressed_pair.1259" }
%"class.std::__1::__compressed_pair.1259" = type { %"struct.std::__1::__compressed_pair_elem.1260" }
%"struct.std::__1::__compressed_pair_elem.1260" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1264" = type { %"class.WTF::Vector.1267" }
%"class.WTF::Vector.1267" = type { %"class.WTF::VectorBuffer.1268" }
%"class.WTF::VectorBuffer.1268" = type { %"class.WTF::VectorBufferBase.1269" }
%"class.WTF::VectorBufferBase.1269" = type { %"struct.std::__1::pair.1270"*, i32, i32 }
%"struct.std::__1::pair.1270" = type opaque
%"class.blink::HeapVector.1143" = type { %"class.WTF::Vector.1146" }
%"class.WTF::Vector.1146" = type { %"class.WTF::VectorBuffer.1147" }
%"class.WTF::VectorBuffer.1147" = type { %"class.WTF::VectorBufferBase.1148" }
%"class.WTF::VectorBufferBase.1148" = type { %"struct.std::__1::pair.1149"*, i32, i32 }
%"struct.std::__1::pair.1149" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.302" }
%"class.WTF::HashTable.302" = type <{ %"class.blink::WeakMember.304"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.304" = type { %"class.blink::MemberBase.62" }
%"class.blink::HeapHashMap.1272" = type { %"class.WTF::HashMap.1275" }
%"class.WTF::HashMap.1275" = type { %"class.WTF::HashTable.1276" }
%"class.WTF::HashTable.1276" = type <{ %"struct.WTF::KeyValuePair.1278"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1278" = type { %"class.WTF::AtomicString", %"class.blink::Member.403" }
%"class.blink::Member.1279" = type { %"class.blink::MemberBase.1280" }
%"class.blink::MemberBase.1280" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1281" = type { %"class.WTF::HashMap.1284" }
%"class.WTF::HashMap.1284" = type { %"class.WTF::HashTable.1285" }
%"class.WTF::HashTable.1285" = type <{ %"struct.WTF::KeyValuePair.1287"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1287" = type opaque
%class.scoped_refptr.1288 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.1289 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type opaque
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1290" = type { %"class.WTF::HashSet.1293" }
%"class.WTF::HashSet.1293" = type { %"class.WTF::HashTable.1294" }
%"class.WTF::HashTable.1294" = type <{ %"class.blink::Member.1296"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1296" = type opaque
%"class.blink::Member.1297" = type { %"class.blink::MemberBase.1298" }
%"class.blink::MemberBase.1298" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.0", %"class.blink::HeapVector.55" }
%"class.blink::Member.1299" = type { %"class.blink::MemberBase.1300" }
%"class.blink::MemberBase.1300" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%"class.WTF::Vector.1310" = type { %"class.WTF::VectorBuffer.1311" }
%"class.WTF::VectorBuffer.1311" = type { %"class.WTF::VectorBufferBase.1312" }
%"class.WTF::VectorBufferBase.1312" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1315" = type { %"class.blink::MemberBase.1316" }
%"class.blink::MemberBase.1316" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1319" = type { %"class.blink::MemberBase.1320" }
%"class.blink::MemberBase.1320" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1321" = type { %"class.blink::MemberBase.1322" }
%"class.blink::MemberBase.1322" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1323" = type { %"class.WTF::Vector.1326" }
%"class.WTF::Vector.1326" = type { %"class.WTF::VectorBuffer.1327" }
%"class.WTF::VectorBuffer.1327" = type { %"class.WTF::VectorBufferBase.1328" }
%"class.WTF::VectorBufferBase.1328" = type { %"class.blink::Member.1329"*, i32, i32 }
%"class.blink::Member.1329" = type opaque
%"class.std::__1::unique_ptr.1331" = type { %"class.std::__1::__compressed_pair.1332" }
%"class.std::__1::__compressed_pair.1332" = type { %"struct.std::__1::__compressed_pair_elem.1333" }
%"struct.std::__1::__compressed_pair_elem.1333" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1337" = type { %"class.WTF::HashSet.1340" }
%"class.WTF::HashSet.1340" = type { %"class.WTF::HashTable.1341" }
%"class.WTF::HashTable.1341" = type <{ %"class.blink::WeakMember.1343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1343" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1344", i32, [4 x i8] }>
%"class.WTF::Vector.1344" = type { %"class.WTF::VectorBuffer.1345" }
%"class.WTF::VectorBuffer.1345" = type { %"class.WTF::VectorBufferBase.1346" }
%"class.WTF::VectorBufferBase.1346" = type { %"struct.std::__1::pair.1347"*, i32, i32 }
%"struct.std::__1::pair.1347" = type opaque
%"class.blink::Member.1350" = type { %"class.blink::MemberBase.1351" }
%"class.blink::MemberBase.1351" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1352" = type { %"class.WTF::VectorBuffer.1353" }
%"class.WTF::VectorBuffer.1353" = type { %"class.WTF::VectorBufferBase.1354" }
%"class.WTF::VectorBufferBase.1354" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1357" = type { %"class.std::__1::__compressed_pair.1358" }
%"class.std::__1::__compressed_pair.1358" = type { %"struct.std::__1::__compressed_pair_elem.1359" }
%"struct.std::__1::__compressed_pair_elem.1359" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1363" = type { %"class.WTF::Vector.1366" }
%"class.WTF::Vector.1366" = type { %"class.WTF::VectorBuffer.1367" }
%"class.WTF::VectorBuffer.1367" = type { %"class.WTF::VectorBufferBase.1368" }
%"class.WTF::VectorBufferBase.1368" = type { %"class.blink::Member.1369"*, i32, i32 }
%"class.blink::Member.1369" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.8" }
%"class.blink::Member.1371" = type { %"class.blink::MemberBase.1372" }
%"class.blink::MemberBase.1372" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1373" = type { %"class.blink::MemberBase.1374" }
%"class.blink::MemberBase.1374" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1375" = type { %"class.blink::MemberBase.1376" }
%"class.blink::MemberBase.1376" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1377" = type { %"class.blink::MemberBase.1378" }
%"class.blink::MemberBase.1378" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1379" = type { %"class.blink::MemberBase.1380" }
%"class.blink::MemberBase.1380" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1381" = type { %"class.WTF::HashTable.1382" }
%"class.WTF::HashTable.1382" = type <{ %"struct.WTF::KeyValuePair.1385"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1385" = type opaque
%"class.blink::Member.1386" = type { %"class.blink::MemberBase.1387" }
%"class.blink::MemberBase.1387" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1388" = type { %"class.blink::MemberBase.1389" }
%"class.blink::MemberBase.1389" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1101", { i64, i64 } }
%"class.blink::WeakMember.1101" = type { %"class.blink::MemberBase.9" }
%"class.blink::HeapHashSet.1394" = type { %"class.WTF::HashSet.1397" }
%"class.WTF::HashSet.1397" = type { %"class.WTF::HashTable.1398" }
%"class.WTF::HashTable.1398" = type <{ %"class.blink::Member.1400"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1400" = type opaque
%"class.blink::Member.1401" = type { %"class.blink::MemberBase.1402" }
%"class.blink::MemberBase.1402" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1403" = type { %"class.blink::MemberBase.1404" }
%"class.blink::MemberBase.1404" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1411" = type { %"class.std::__1::__compressed_pair.1412" }
%"class.std::__1::__compressed_pair.1412" = type { %"struct.std::__1::__compressed_pair_elem.1413" }
%"struct.std::__1::__compressed_pair_elem.1413" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1417" = type { %"class.std::__1::__compressed_pair.1418" }
%"class.std::__1::__compressed_pair.1418" = type { %"struct.std::__1::__compressed_pair_elem.1419" }
%"struct.std::__1::__compressed_pair_elem.1419" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1423" = type { %"class.blink::MemberBase.1424" }
%"class.blink::MemberBase.1424" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1425" = type { %"class.blink::MemberBase.1426" }
%"class.blink::MemberBase.1426" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1427" = type { %"class.blink::MemberBase.1428" }
%"class.blink::MemberBase.1428" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1429" = type { %"class.blink::MemberBase.1430" }
%"class.blink::MemberBase.1430" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1061" = type { %"class.WTF::VectorBuffer.1062" }
%"class.WTF::VectorBuffer.1062" = type { %"class.WTF::VectorBufferBase.1063" }
%"class.WTF::VectorBufferBase.1063" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1431" = type { %"class.WTF::HashMap.1434" }
%"class.WTF::HashMap.1434" = type { %"class.WTF::HashTable.1435" }
%"class.WTF::HashTable.1435" = type <{ %"struct.WTF::KeyValuePair.1437"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1437" = type opaque
%"class.blink::Member.1438" = type { %"class.blink::MemberBase.1439" }
%"class.blink::MemberBase.1439" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1440" = type { %"class.std::__1::__compressed_pair.1441" }
%"class.std::__1::__compressed_pair.1441" = type { %"struct.std::__1::__compressed_pair_elem.1442" }
%"struct.std::__1::__compressed_pair_elem.1442" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1446" = type { %"class.blink::MemberBase.1447" }
%"class.blink::MemberBase.1447" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1448" = type { %"class.blink::MemberBase.1449" }
%"class.blink::MemberBase.1449" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1450" = type { %"class.WTF::HashMap.1453" }
%"class.WTF::HashMap.1453" = type { %"class.WTF::HashTable.1454" }
%"class.WTF::HashTable.1454" = type <{ %"struct.WTF::KeyValuePair.1456"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1456" = type opaque
%"class.blink::HeapObserverSet.1457" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1458" }
%"class.blink::HeapHashSet.1458" = type { %"class.WTF::HashSet.1461" }
%"class.WTF::HashSet.1461" = type { %"class.WTF::HashTable.1462" }
%"class.WTF::HashTable.1462" = type <{ %"class.blink::WeakMember.1464"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1464" = type opaque
%"class.blink::Member.1465" = type { %"class.blink::MemberBase.1466" }
%"class.blink::MemberBase.1466" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.8", %"class.blink::HeapHashSet.1474", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1481", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1474" = type { %"class.WTF::HashSet.1477" }
%"class.WTF::HashSet.1477" = type { %"class.WTF::HashTable.1478" }
%"class.WTF::HashTable.1478" = type <{ %"class.blink::Member.1480"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1480" = type opaque
%"class.blink::HeapTaskRunnerTimer.1481" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1482", { i64, i64 } }
%"class.blink::WeakMember.1482" = type { %"class.blink::MemberBase.1468" }
%"class.blink::WeakMember.1469" = type { %"class.blink::MemberBase" }
%"class.blink::Member.1470" = type { %"class.blink::MemberBase.1471" }
%"class.blink::MemberBase.1471" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.WTF::HashSet.367" = type { %"class.WTF::HashTable.368" }
%"class.WTF::HashTable.368" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.485, %"class.blink::Member.61", %"class.blink::Member.486" }
%"class.blink::HeapVector.499" = type { %"class.WTF::Vector.502" }
%"class.WTF::Vector.502" = type { %"class.WTF::VectorBuffer.503" }
%"class.WTF::VectorBuffer.503" = type { %"class.WTF::VectorBufferBase.504" }
%"class.WTF::VectorBufferBase.504" = type { %"class.blink::Member.486"*, i32, i32 }
%"class.blink::Member.506" = type { %"class.blink::MemberBase.507" }
%"class.blink::MemberBase.507" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::StyleSheetContents" = type <{ %"class.blink::Member.67", %"class.WTF::String", %"class.blink::HeapVector.69", %"class.blink::HeapVector.76", %"class.blink::HeapVector.84", %"class.WTF::HashMap.92", %"class.WTF::AtomicString", %"class.blink::WeakMember", i8, [7 x i8], %"class.blink::Member.98", %"class.blink::HeapHashSet", %"class.blink::HeapHashSet", %"class.blink::Member.305", %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::Member.67" = type { %"class.blink::MemberBase.68" }
%"class.blink::MemberBase.68" = type { %"class.blink::StyleRuleImport"* }
%"class.blink::StyleRuleImport" = type opaque
%"class.blink::HeapVector.69" = type { %"class.WTF::Vector.72" }
%"class.WTF::Vector.72" = type { %"class.WTF::VectorBuffer.73" }
%"class.WTF::VectorBuffer.73" = type { %"class.WTF::VectorBufferBase.74" }
%"class.WTF::VectorBufferBase.74" = type { %"class.blink::Member.67"*, i32, i32 }
%"class.blink::HeapVector.76" = type { %"class.WTF::Vector.79" }
%"class.WTF::Vector.79" = type { %"class.WTF::VectorBuffer.80" }
%"class.WTF::VectorBuffer.80" = type { %"class.WTF::VectorBufferBase.81" }
%"class.WTF::VectorBufferBase.81" = type { %"class.blink::Member.82"*, i32, i32 }
%"class.blink::Member.82" = type opaque
%"class.blink::HeapVector.84" = type { %"class.WTF::Vector.87" }
%"class.WTF::Vector.87" = type { %"class.WTF::VectorBuffer.88" }
%"class.WTF::VectorBuffer.88" = type { %"class.WTF::VectorBufferBase.89" }
%"class.WTF::VectorBufferBase.89" = type { %"class.blink::Member.90"*, i32, i32 }
%"class.blink::Member.90" = type opaque
%"class.WTF::HashMap.92" = type { %"class.WTF::HashTable.93" }
%"class.WTF::HashTable.93" = type <{ %"struct.WTF::KeyValuePair.96"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.96" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.97" }
%"class.blink::MemberBase.97" = type { %"class.blink::CSSStyleSheetResource"* }
%"class.blink::CSSStyleSheetResource" = type { %"class.blink::TextResource", %"class.WTF::String", %"class.blink::Member.63" }
%"class.blink::TextResource" = type { %"class.blink::Resource", %"class.std::__1::unique_ptr.2410" }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.2271", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.2291", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.2368", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.2385", %"class.blink::ResourceResponse", %class.scoped_refptr.2387, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.2271" = type { %"class.absl::optional_internal::optional_data.2272" }
%"class.absl::optional_internal::optional_data.2272" = type { %"class.absl::optional_internal::optional_data_base.2273" }
%"class.absl::optional_internal::optional_data_base.2273" = type { %"class.absl::optional_internal::optional_data_dtor_base.2274" }
%"class.absl::optional_internal::optional_data_dtor_base.2274" = type { i8, %union.anon.2275 }
%union.anon.2275 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.2276", i8, %"class.absl::optional.2281", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.2276" = type { %"class.absl::optional_internal::optional_data.2277" }
%"class.absl::optional_internal::optional_data.2277" = type { %"class.absl::optional_internal::optional_data_base.2278" }
%"class.absl::optional_internal::optional_data_base.2278" = type { %"class.absl::optional_internal::optional_data_dtor_base.2279" }
%"class.absl::optional_internal::optional_data_dtor_base.2279" = type { i8, [7 x i8], %union.anon.2280 }
%union.anon.2280 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.2281" = type { %"class.absl::optional_internal::optional_data.2282" }
%"class.absl::optional_internal::optional_data.2282" = type { %"class.absl::optional_internal::optional_data_base.2283" }
%"class.absl::optional_internal::optional_data_base.2283" = type { %"class.absl::optional_internal::optional_data_dtor_base.2284" }
%"class.absl::optional_internal::optional_data_dtor_base.2284" = type { i8, %union.anon.2285 }
%union.anon.2285 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.2286", %"class.WTF::Vector.859" }
%"class.WTF::Vector.2286" = type { %"class.WTF::VectorBuffer.2287" }
%"class.WTF::VectorBuffer.2287" = type { %"class.WTF::VectorBufferBase.2288" }
%"class.WTF::VectorBufferBase.2288" = type { i32*, i32, i32 }
%"class.WTF::Vector.2291" = type { %"class.WTF::VectorBuffer.2292" }
%"class.WTF::VectorBuffer.2292" = type { %"class.WTF::VectorBufferBase.2293" }
%"class.WTF::VectorBufferBase.2293" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.2364" }
%"class.WTF::HashMap.2364" = type { %"class.WTF::HashTable.2365" }
%"class.WTF::HashTable.2365" = type <{ %"struct.WTF::KeyValuePair.2367"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2367" = type <{ %"class.blink::WeakMember.2598", i32, [4 x i8] }>
%"class.blink::WeakMember.2598" = type { %"class.blink::MemberBase.2599" }
%"class.blink::MemberBase.2599" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2600", [7 x i8], %"class.blink::Member.2601", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.2600" = type { i8 }
%"class.blink::Member.2601" = type { %"class.blink::MemberBase.2602" }
%"class.blink::MemberBase.2602" = type { %"class.blink::Resource"* }
%"class.blink::HeapHashSet.2368" = type { %"class.WTF::HashSet.2371" }
%"class.WTF::HashSet.2371" = type { %"class.WTF::HashTable.2372" }
%"class.WTF::HashTable.2372" = type <{ %"class.blink::WeakMember.2374"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2374" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.2375", %"class.WTF::String", %"class.WTF::HashSet.2376", i8, i8, %class.scoped_refptr.103, %class.scoped_refptr.2381, %class.scoped_refptr.2383 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.base::StrongAlias.2375" = type { i8 }
%"class.WTF::HashSet.2376" = type { %"class.WTF::HashTable.2377" }
%"class.WTF::HashTable.2377" = type <{ %"struct.std::__1::pair.2380"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.2380" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.2381 = type { %"class.base::RefCountedData.2382"* }
%"class.base::RefCountedData.2382" = type opaque
%class.scoped_refptr.2383 = type { %"class.base::RefCountedData.2384"* }
%"class.base::RefCountedData.2384" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.768, %class.scoped_refptr.768, %class.scoped_refptr.768, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.2298, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.2310", %"class.absl::optional.2315", %"class.absl::optional.2325", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.1533", %"class.absl::optional.2325", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.2325", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.1533", %"class.absl::optional.2330", i8, %class.scoped_refptr.2336 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.2294" }
%"class.WTF::HashMap.2294" = type { %"class.WTF::HashTable.2295" }
%"class.WTF::HashTable.2295" = type <{ %"struct.WTF::KeyValuePair.96"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2298 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.2299", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.2308, i8, %"class.url::Origin" }
%"class.base::RefCounted.2299" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.2300" }
%"class.std::__1::vector.2300" = type { %"class.std::__1::__vector_base.2301" }
%"class.std::__1::__vector_base.2301" = type { %"class.std::__1::unique_ptr.2302"*, %"class.std::__1::unique_ptr.2302"*, %"class.std::__1::__compressed_pair.2303" }
%"class.std::__1::unique_ptr.2302" = type { %"class.std::__1::__compressed_pair.2584" }
%"class.std::__1::__compressed_pair.2584" = type { %"struct.std::__1::__compressed_pair_elem.2585" }
%"struct.std::__1::__compressed_pair_elem.2585" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.2303" = type { %"struct.std::__1::__compressed_pair_elem.2304" }
%"struct.std::__1::__compressed_pair_elem.2304" = type { %"class.std::__1::unique_ptr.2302"* }
%class.scoped_refptr.2308 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2309", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2309" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.2310" = type { %"class.absl::optional_internal::optional_data.2311" }
%"class.absl::optional_internal::optional_data.2311" = type { %"class.absl::optional_internal::optional_data_base.2312" }
%"class.absl::optional_internal::optional_data_base.2312" = type { %"class.absl::optional_internal::optional_data_dtor_base.2313" }
%"class.absl::optional_internal::optional_data_dtor_base.2313" = type { i8, %union.anon.2314 }
%union.anon.2314 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.2315" = type { %"class.absl::optional_internal::optional_data.2316" }
%"class.absl::optional_internal::optional_data.2316" = type { %"class.absl::optional_internal::optional_data_base.2317" }
%"class.absl::optional_internal::optional_data_base.2317" = type { %"class.absl::optional_internal::optional_data_dtor_base.2318" }
%"class.absl::optional_internal::optional_data_dtor_base.2318" = type { i8, %union.anon.2319 }
%union.anon.2319 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.2320", %"class.WTF::Vector.859", %"class.WTF::String" }
%"class.WTF::Vector.2320" = type { %"class.WTF::VectorBuffer.2321" }
%"class.WTF::VectorBuffer.2321" = type { %"class.WTF::VectorBufferBase.2322" }
%"class.WTF::VectorBufferBase.2322" = type { %class.scoped_refptr.768*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.684", %"class.absl::optional.684" }
%"class.absl::optional.2325" = type { %"class.absl::optional_internal::optional_data.2326" }
%"class.absl::optional_internal::optional_data.2326" = type { %"class.absl::optional_internal::optional_data_base.2327" }
%"class.absl::optional_internal::optional_data_base.2327" = type { %"class.absl::optional_internal::optional_data_dtor_base.2328" }
%"class.absl::optional_internal::optional_data_dtor_base.2328" = type { i8, %union.anon.2329 }
%union.anon.2329 = type { %"class.WTF::String" }
%"class.absl::optional.2330" = type { %"class.absl::optional_internal::optional_data.2331" }
%"class.absl::optional_internal::optional_data.2331" = type { %"class.absl::optional_internal::optional_data_base.2332" }
%"class.absl::optional_internal::optional_data_base.2332" = type { %"class.absl::optional_internal::optional_data_dtor_base.2333" }
%"class.absl::optional_internal::optional_data_dtor_base.2333" = type { i8, %union.anon.2334 }
%union.anon.2334 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote.2335" }
%"class.mojo::PendingRemote.2335" = type { %"struct.mojo::internal::PendingRemoteState" }
%class.scoped_refptr.2336 = type { %"class.base::RefCountedData.2337"* }
%"class.base::RefCountedData.2337" = type { %"class.base::RefCountedThreadSafe.2589", %"class.base::internal::flat_tree.2590" }
%"class.base::RefCountedThreadSafe.2589" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.2590" = type { %"class.std::__1::vector.2591" }
%"class.std::__1::vector.2591" = type { %"class.std::__1::__vector_base.2592" }
%"class.std::__1::__vector_base.2592" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2593" }
%"class.std::__1::__compressed_pair.2593" = type { %"struct.std::__1::__compressed_pair_elem.2594" }
%"struct.std::__1::__compressed_pair_elem.2594" = type { i32* }
%"class.blink::Member.2385" = type { %"class.blink::MemberBase.2386" }
%"class.blink::MemberBase.2386" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.2338", %class.scoped_refptr.2348, %class.scoped_refptr.2349, %"struct.blink::CacheControlHeader", %"class.absl::optional.684", %"class.absl::optional.2217", %"class.absl::optional.2217", %"class.absl::optional.2217", i64, %"class.blink::KURL", %"class.WTF::Vector.2350", %"class.WTF::String", %"class.WTF::Vector.859", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.1533", %"class.WTF::Vector.859", %"class.blink::KURL", %"class.absl::optional.2355" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.2338" = type { %"class.absl::optional_internal::optional_data.2339" }
%"class.absl::optional_internal::optional_data.2339" = type { %"class.absl::optional_internal::optional_data_base.2340" }
%"class.absl::optional_internal::optional_data_base.2340" = type { %"class.absl::optional_internal::optional_data_dtor_base.2341" }
%"class.absl::optional_internal::optional_data_dtor_base.2341" = type { i8, %union.anon.2342 }
%union.anon.2342 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.859", %"class.WTF::String", i64, i64, %"class.WTF::Vector.342", %"class.WTF::Vector.2343" }
%"class.WTF::Vector.342" = type { %"class.WTF::VectorBuffer.343" }
%"class.WTF::VectorBuffer.343" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::Vector.2343" = type { %"class.WTF::VectorBuffer.2344" }
%"class.WTF::VectorBuffer.2344" = type { %"class.WTF::VectorBufferBase.2345" }
%"class.WTF::VectorBufferBase.2345" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.2348 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.2349 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.WTF::Vector.2350" = type { %"class.WTF::VectorBuffer.2351" }
%"class.WTF::VectorBuffer.2351" = type { %"class.WTF::VectorBufferBase.2352" }
%"class.WTF::VectorBufferBase.2352" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.2355" = type { %"class.absl::optional_internal::optional_data.2356" }
%"class.absl::optional_internal::optional_data.2356" = type { %"class.absl::optional_internal::optional_data_base.2357" }
%"class.absl::optional_internal::optional_data_base.2357" = type { %"class.absl::optional_internal::optional_data_dtor_base.2358" }
%"class.absl::optional_internal::optional_data_dtor_base.2358" = type { i8, %union.anon.2359 }
%union.anon.2359 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.2387 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.2388", i64, %"class.WTF::Vector.2390", %"class.WTF::Vector.2395" }
%"class.WTF::RefCounted.2388" = type { %"class.base::RefCounted.2389" }
%"class.base::RefCounted.2389" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2390" = type { %"class.WTF::VectorBuffer.2391" }
%"class.WTF::VectorBuffer.2391" = type { %"class.WTF::VectorBufferBase.2392" }
%"class.WTF::VectorBufferBase.2392" = type { i8*, i32, i32 }
%"class.WTF::Vector.2395" = type { %"class.WTF::VectorBuffer.2396" }
%"class.WTF::VectorBuffer.2396" = type { %"class.WTF::VectorBufferBase.2397" }
%"class.WTF::VectorBufferBase.2397" = type { %"class.std::__1::unique_ptr.2398"*, i32, i32 }
%"class.std::__1::unique_ptr.2398" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.2401" }
%"class.std::__1::__tree.2401" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2402", %"class.std::__1::__compressed_pair.2406" }
%"class.std::__1::__compressed_pair.2402" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"class.std::__1::__compressed_pair.2406" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::unique_ptr.2410" = type { %"class.std::__1::__compressed_pair.2411" }
%"class.std::__1::__compressed_pair.2411" = type { %"struct.std::__1::__compressed_pair_elem.2412" }
%"struct.std::__1::__compressed_pair_elem.2412" = type { %"class.blink::TextResourceDecoder"* }
%"class.blink::TextResourceDecoder" = type { %"class.blink::TextResourceDecoderOptions", %"class.WTF::TextEncoding", %"class.std::__1::unique_ptr.2413", i32, %"class.WTF::Vector.2390", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.2419" }
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.std::__1::unique_ptr.2413" = type { %"class.std::__1::__compressed_pair.2414" }
%"class.std::__1::__compressed_pair.2414" = type { %"struct.std::__1::__compressed_pair_elem.2415" }
%"struct.std::__1::__compressed_pair_elem.2415" = type { %"class.WTF::TextCodec"* }
%"class.WTF::TextCodec" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2419" = type { %"class.std::__1::__compressed_pair.2420" }
%"class.std::__1::__compressed_pair.2420" = type { %"struct.std::__1::__compressed_pair_elem.2421" }
%"struct.std::__1::__compressed_pair_elem.2421" = type { %"class.blink::HTMLMetaCharsetParser"* }
%"class.blink::HTMLMetaCharsetParser" = type opaque
%"class.blink::Member.98" = type { %"class.blink::MemberBase.99" }
%"class.blink::MemberBase.99" = type { %"class.blink::CSSParserContext"* }
%"class.blink::CSSParserContext" = type <{ %"class.blink::KURL", %class.scoped_refptr.103, i8, i8, i8, [5 x i8], %"struct.blink::Referrer", i8, i8, i8, i8, i32, %"class.WTF::TextEncoding", %"class.blink::WeakMember.298", i32, [4 x i8] }>
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::WeakMember.298" = type { %"class.blink::MemberBase.299" }
%"class.blink::MemberBase.299" = type { %"class.blink::Document"* }
%"class.blink::CSSImportRule" = type { %"class.blink::CSSRule", %"class.blink::Member.67", %"class.blink::Member.497", %"class.blink::Member.61" }
%"class.blink::CSSStyleSheet::InspectorMutationScope" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheetInit" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, %"class.blink::MediaListOrString", %"class.WTF::String" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::MediaListOrString" = type { i32, %"class.blink::Member.497", %"class.WTF::String" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.2430" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.2430" = type { %"class.v8::TracedReference.2431" }
%"class.v8::TracedReference.2431" = type { %"class.v8::BasicTracedReference.2432" }
%"class.v8::BasicTracedReference.2432" = type { %"class.v8::TracedReferenceBase" }
%"class.WTF::StringAppend.2433" = type { %"class.WTF::StringAppend.2434", %"class.WTF::String" }
%"class.WTF::StringAppend.2434" = type { %"class.WTF::StringAppend.2435", i8* }
%"class.WTF::StringAppend.2435" = type { i8*, %"class.WTF::String" }
%"class.WTF::IntegerToStringConverter" = type <{ [12 x i8], [4 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.2433", i8* }
%"class.WTF::StringTypeAdapter.2670" = type <{ i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.2436, i32, i8, i8, [2 x i8] }>
%union.anon.2436 = type { %"class.WTF::Vector.2437" }
%"class.WTF::Vector.2437" = type { %"class.WTF::VectorBuffer.2438" }
%"class.WTF::VectorBuffer.2438" = type { %"class.WTF::VectorBufferBase.2439", [16 x i8] }
%"class.WTF::VectorBufferBase.2439" = type { i8*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::ScriptPromise" = type { %"class.blink::Member.2456", %"class.blink::ScriptValue" }
%"class.blink::Member.2456" = type { %"class.blink::MemberBase.2457" }
%"class.blink::MemberBase.2457" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.2430", %class.scoped_refptr.103 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.2449, %"class.blink::Member.2450", %"class.blink::SelfKeepAlive", %"class.util::TokenType.2454" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.2449 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.2450" = type { %"class.blink::MemberBase.2451" }
%"class.blink::MemberBase.2451" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.2452" }
%"class.blink::Persistent.2452" = type { %"class.blink::PersistentBase.2453" }
%"class.blink::PersistentBase.2453" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType.2454" = type { %"class.base::StrongAlias.2455" }
%"class.base::StrongAlias.2455" = type { %"class.base::UnguessableToken" }
%"class.blink::DOMException" = type { %"class.blink::ScriptWrappable", i16, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.2460", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.2472", %"class.WTF::Vector.2473" }
%"class.std::__1::unique_ptr.2460" = type { %"class.std::__1::__compressed_pair.2461" }
%"class.std::__1::__compressed_pair.2461" = type { %"struct.std::__1::__compressed_pair_elem.2462" }
%"struct.std::__1::__compressed_pair_elem.2462" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.2463", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2463" = type { %"class.std::__1::__compressed_pair.2464" }
%"class.std::__1::__compressed_pair.2464" = type { %"struct.std::__1::__compressed_pair_elem.2465" }
%"struct.std::__1::__compressed_pair_elem.2465" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.2472" = type { %"class.blink::MemberBase.1040" }
%"class.WTF::Vector.2473" = type { %"class.WTF::VectorBuffer.2474" }
%"class.WTF::VectorBuffer.2474" = type { %"class.WTF::VectorBufferBase.2144" }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.30", %"class.WTF::Vector.2645" }
%"class.WTF::Vector.2645" = type { %"class.WTF::VectorBuffer.2646" }
%"class.WTF::VectorBuffer.2646" = type { %"class.WTF::VectorBufferBase.2647", [64 x i8] }
%"class.WTF::VectorBufferBase.2647" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::HTMLLinkElement" = type <{ %"class.blink::HTMLElement", %"class.blink::LinkLoaderClient", %"class.blink::Member.2477", %"class.blink::Member.2483", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.blink::Member.2485", %"class.WTF::Vector.2487", %"class.blink::Member.2492", %"class.blink::LinkRelAttribute", %"class.blink::Member.2485", %"class.WTF::HashSet.2494", %"class.blink::Member.2485", %"class.WTF::HashSet.2494", i8, [7 x i8] }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::LinkLoaderClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2477" = type { %"class.blink::MemberBase.2478" }
%"class.blink::MemberBase.2478" = type { %"class.blink::LinkResource"* }
%"class.blink::LinkResource" = type { i32 (...)**, %"class.blink::Member.2481" }
%"class.blink::Member.2481" = type { %"class.blink::MemberBase.2482" }
%"class.blink::MemberBase.2482" = type { %"class.blink::HTMLLinkElement"* }
%"class.blink::Member.2483" = type { %"class.blink::MemberBase.2484" }
%"class.blink::MemberBase.2484" = type { %"class.blink::LinkLoader"* }
%"class.blink::LinkLoader" = type opaque
%"class.WTF::Vector.2487" = type { %"class.WTF::VectorBuffer.2488" }
%"class.WTF::VectorBuffer.2488" = type { %"class.WTF::VectorBufferBase.2489" }
%"class.WTF::VectorBufferBase.2489" = type { %"class.gfx::Size"*, i32, i32 }
%"class.blink::Member.2492" = type { %"class.blink::MemberBase.2493" }
%"class.blink::MemberBase.2493" = type { %"class.blink::RelList"* }
%"class.blink::RelList" = type { %"class.blink::DOMTokenList.base", [7 x i8] }
%"class.blink::DOMTokenList.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::SpaceSplitString", %"class.blink::Member.21", %"class.blink::QualifiedName", i8 }>
%"class.blink::LinkRelAttribute" = type <{ i32, i16, [2 x i8] }>
%"class.blink::Member.2485" = type { %"class.blink::MemberBase.2486" }
%"class.blink::MemberBase.2486" = type { %"class.blink::DOMTokenList"* }
%"class.blink::DOMTokenList" = type <{ %"class.blink::ScriptWrappable", %"class.blink::SpaceSplitString", %"class.blink::Member.21", %"class.blink::QualifiedName", i8, [7 x i8] }>
%"class.WTF::HashSet.2494" = type { %"class.WTF::HashTable.2495" }
%"class.WTF::HashTable.2495" = type <{ %"class.blink::KURL"*, i32, i32, i32, [4 x i8] }>
%"class.blink::LinkStyle" = type <{ %"class.blink::LinkResource", %"class.blink::ResourceClient.base", [7 x i8], %"class.blink::Member.61", i32, i32, i8, %"class.blink::StyleEngineContext", i8, i8, i8, i8, [2 x i8] }>
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2600", [7 x i8], %"class.blink::Member.2601", i8 }>
%"class.blink::StyleEngineContext" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.2442" = type { %"class.WTF::VectorBuffer.2443" }
%"class.WTF::VectorBuffer.2443" = type { %"class.WTF::VectorBufferBase.2444", [16 x i8] }
%"class.WTF::VectorBufferBase.2444" = type { i16*, i32, i32 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.WTF::StringTypeAdapter.2672" = type { %"class.WTF::StringTypeAdapter.2673" }
%"class.WTF::StringTypeAdapter.2673" = type { %"class.WTF::StringView" }
%"class.blink::StyleSheetCSSRuleList" = type { %"class.blink::CSSRuleList", %"class.blink::Member.61" }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.2612", %"class.blink::FreeList", %"class.WTF::Vector.2617" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array.2611" }
%"struct.std::__1::array.2611" = type { [256 x i8] }
%"class.WTF::Vector.2612" = type { %"class.WTF::VectorBuffer.2613" }
%"class.WTF::VectorBuffer.2613" = type { %"class.WTF::VectorBufferBase.2614" }
%"class.WTF::VectorBufferBase.2614" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.WTF::Vector.2617" = type { %"class.WTF::VectorBuffer.2618" }
%"class.WTF::VectorBuffer.2618" = type { %"class.WTF::VectorBufferBase.2619" }
%"class.WTF::VectorBufferBase.2619" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }

$_ZN13scoped_refptrIN5blink13MediaQuerySetEED2Ev = comdat any

$_ZNK5blink13CSSStyleSheet9ownerNodeEv = comdat any

$_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE6insertIS4_EEvjOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE7EraseAtEj = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZNK5blink13CSSStyleSheet8disabledEv = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink13CSSStyleSheet18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink13CSSStyleSheet5titleEv = comdat any

$_ZNK5blink13CSSStyleSheet4typeEv = comdat any

$_ZNK5blink13CSSStyleSheet9ownerRuleEv = comdat any

$_ZNK5blink13CSSStyleSheet15IsCSSStyleSheetEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_18StyleSheetContentsEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_18StyleSheetContentsEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_18StyleSheetContentsEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_18StyleSheetContentsEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv = comdat any

$_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7CSSRuleEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA54_KcEEEPS1_DpOT_ = comdat any

$_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN5blink21StyleSheetCSSRuleListD0Ev = comdat any

$_ZNK5blink21StyleSheetCSSRuleList5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink11CSSRuleList18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink21StyleSheetCSSRuleList6lengthEv = comdat any

$_ZNK5blink21StyleSheetCSSRuleList4itemEj = comdat any

$_ZNK5blink21StyleSheetCSSRuleList13GetStyleSheetEv = comdat any

$_ZN5blink15ScriptWrappableD2Ev = comdat any

$_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA121_KcEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_7CSSRuleEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_9MediaListEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_11CSSRuleListEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_9TreeScopeEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_9TreeScopeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink10WeakMemberINS3_9TreeScopeEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_9TreeScopeEEEbPKT_ = comdat any

$_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink21StyleSheetCSSRuleListE = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink13CSSStyleSheetE = hidden unnamed_addr constant { [24 x i8*] } { [24 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::CSSStyleSheet"*)* @_ZN5blink13CSSStyleSheetD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSStyleSheet"*)* @_ZN5blink13CSSStyleSheetD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::CSSStyleSheet"*, %"class.blink::Visitor"*)* @_ZNK5blink13CSSStyleSheet5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::CSSStyleSheet"*)* @_ZNK5blink13CSSStyleSheet18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (i1 (%"class.blink::CSSStyleSheet"*)* @_ZNK5blink13CSSStyleSheet8disabledEv to i8*), i8* bitcast (void (%"class.blink::CSSStyleSheet"*, i1)* @_ZN5blink13CSSStyleSheet11setDisabledEb to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::CSSStyleSheet"*)* @_ZNK5blink13CSSStyleSheet9ownerNodeEv to i8*), i8* bitcast (%"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleSheet"*)* @_ZNK5blink13CSSStyleSheet16parentStyleSheetEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::CSSStyleSheet"*)* @_ZNK5blink13CSSStyleSheet4hrefEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::CSSStyleSheet"*)* @_ZNK5blink13CSSStyleSheet5titleEv to i8*), i8* bitcast (%"class.blink::MediaList"* (%"class.blink::CSSStyleSheet"*)* @_ZN5blink13CSSStyleSheet5mediaEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::CSSStyleSheet"*)* @_ZNK5blink13CSSStyleSheet4typeEv to i8*), i8* bitcast (%"class.blink::CSSRule"* (%"class.blink::CSSStyleSheet"*)* @_ZNK5blink13CSSStyleSheet9ownerRuleEv to i8*), i8* bitcast (void (%"class.blink::CSSStyleSheet"*)* @_ZN5blink13CSSStyleSheet14ClearOwnerNodeEv to i8*), i8* bitcast (void (%"class.blink::KURL"*, %"class.blink::CSSStyleSheet"*)* @_ZNK5blink13CSSStyleSheet7BaseURLEv to i8*), i8* bitcast (i1 (%"class.blink::CSSStyleSheet"*)* @_ZNK5blink13CSSStyleSheet9IsLoadingEv to i8*), i8* bitcast (i1 (%"class.blink::CSSStyleSheet"*)* @_ZNK5blink13CSSStyleSheet15IsCSSStyleSheetEv to i8*)] }, align 8
@.str = private unnamed_addr constant [39 x i8] c"Cannot access StyleSheet to insertRule\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"The index provided (\00", align 1
@.str.2 = private unnamed_addr constant [37 x i8] c") is larger than the maximum index (\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c").\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"Failed to parse the rule '\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"'.\00", align 1
@.str.6 = private unnamed_addr constant [58 x i8] c"Can't insert @import rules into a constructed stylesheet.\00", align 1
@.str.7 = private unnamed_addr constant [26 x i8] c"Failed to insert the rule\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"Failed to insert the rule.\00", align 1
@.str.9 = private unnamed_addr constant [39 x i8] c"Cannot access StyleSheet to deleteRule\00", align 1
@.str.10 = private unnamed_addr constant [33 x i8] c"Style sheet is empty (length 0).\00", align 1
@.str.11 = private unnamed_addr constant [22 x i8] c"Failed to delete rule\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c" { \00", align 1
@.str.13 = private unnamed_addr constant [54 x i8] c"Can't call replace on non-constructed CSSStyleSheets.\00", align 1
@.str.14 = private unnamed_addr constant [58 x i8] c"Can't call replaceSync on non-constructed CSSStyleSheets.\00", align 1
@.str.15 = private unnamed_addr constant [20 x i8] c"Cannot access rules\00", align 1
@.str.16 = private unnamed_addr constant [121 x i8] c"@import rules are not allowed here. See https://github.com/WICG/construct-stylesheets/issues/119#issuecomment-588352418.\00", align 1
@_ZN5blink10html_names8kRelAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.17 = private unnamed_addr constant [10 x i8] c"alternate\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.18 = private unnamed_addr constant [13 x i8] c"about:client\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18StyleSheetContentsEEEPKcv = private unnamed_addr constant [73 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::StyleSheetContents]\00", align 1
@.str.19 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.20 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_18StyleSheetContentsEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_18StyleSheetContentsEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_18StyleSheetContentsEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.21 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.22 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.23 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::AtomicString]\00", align 1
@.str.24 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@_ZN5blink13CoreProbeSink16s_existingAgentsE = external local_unnamed_addr global %"struct.std::__1::atomic", align 4
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.25 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.26 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.27 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.28 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.29 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink13CSSStyleSheet18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.30 = private unnamed_addr constant [9 x i8] c"text/css\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CSSParserContextEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSParserContext]\00", align 1
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.31 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.32 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.33 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.34 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_7CSSRuleEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [155 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::CSSRule>, WTF::VectorTraits<blink::Member<blink::CSSRule> > >]\00", align 1
@.str.35 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.36 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.37 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.38 = private unnamed_addr constant [19 x i8] c"position <= size()\00", align 1
@.str.39 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@.str.40 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.41 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.42 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZTVN5blink21StyleSheetCSSRuleListE = linkonce_odr hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*)* @_ZN5blink15ScriptWrappableD2Ev to i8*), i8* bitcast (void (%"class.blink::StyleSheetCSSRuleList"*)* @_ZN5blink21StyleSheetCSSRuleListD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::StyleSheetCSSRuleList"*, %"class.blink::Visitor"*)* @_ZNK5blink21StyleSheetCSSRuleList5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::CSSRuleList"*)* @_ZNK5blink11CSSRuleList18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (i32 (%"class.blink::StyleSheetCSSRuleList"*)* @_ZNK5blink21StyleSheetCSSRuleList6lengthEv to i8*), i8* bitcast (%"class.blink::CSSRule"* (%"class.blink::StyleSheetCSSRuleList"*, i32)* @_ZNK5blink21StyleSheetCSSRuleList4itemEj to i8*), i8* bitcast (%"class.blink::CSSStyleSheet"* (%"class.blink::StyleSheetCSSRuleList"*)* @_ZNK5blink21StyleSheetCSSRuleList13GetStyleSheetEv to i8*)] }, comdat, align 8
@_ZN5blink11CSSRuleList18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ConsoleMessage]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink10html_names9kStyleTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink9svg_names9kStyleTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink10html_names8kLinkTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8

@_ZN5blink13CSSStyleSheetC1EPNS_18StyleSheetContentsEPNS_13CSSImportRuleE = hidden unnamed_addr alias void (%"class.blink::CSSStyleSheet"*, %"class.blink::StyleSheetContents"*, %"class.blink::CSSImportRule"*), void (%"class.blink::CSSStyleSheet"*, %"class.blink::StyleSheetContents"*, %"class.blink::CSSImportRule"*)* @_ZN5blink13CSSStyleSheetC2EPNS_18StyleSheetContentsEPNS_13CSSImportRuleE
@_ZN5blink13CSSStyleSheetC1EPNS_18StyleSheetContentsERNS_4NodeEbRKN3WTF12TextPositionE = hidden unnamed_addr alias void (%"class.blink::CSSStyleSheet"*, %"class.blink::StyleSheetContents"*, %"class.blink::Node"*, i1, %"class.WTF::TextPosition"*), void (%"class.blink::CSSStyleSheet"*, %"class.blink::StyleSheetContents"*, %"class.blink::Node"*, i1, %"class.WTF::TextPosition"*)* @_ZN5blink13CSSStyleSheetC2EPNS_18StyleSheetContentsERNS_4NodeEbRKN3WTF12TextPositionE
@_ZN5blink13CSSStyleSheetD1Ev = hidden unnamed_addr alias void (%"class.blink::CSSStyleSheet"*), void (%"class.blink::CSSStyleSheet"*)* @_ZN5blink13CSSStyleSheetD2Ev
@_ZN5blink13CSSStyleSheet22InspectorMutationScopeC1EPS0_ = hidden unnamed_addr alias void (%"class.blink::CSSStyleSheet::InspectorMutationScope"*, %"class.blink::CSSStyleSheet"*), void (%"class.blink::CSSStyleSheet::InspectorMutationScope"*, %"class.blink::CSSStyleSheet"*)* @_ZN5blink13CSSStyleSheet22InspectorMutationScopeC2EPS0_
@_ZN5blink13CSSStyleSheet22InspectorMutationScopeD1Ev = hidden unnamed_addr alias void (%"class.blink::CSSStyleSheet::InspectorMutationScope"*), void (%"class.blink::CSSStyleSheet::InspectorMutationScope"*)* @_ZN5blink13CSSStyleSheet22InspectorMutationScopeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Document"* @_ZN5blink13CSSStyleSheet19SingleOwnerDocumentEPKS0_(%"class.blink::CSSStyleSheet"* readonly) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.blink::CSSStyleSheet"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %4, align 8
  %6 = tail call %"class.blink::Document"* @_ZN5blink18StyleSheetContents19SingleOwnerDocumentEPKS0_(%"class.blink::StyleSheetContents"* %5) #14
  br label %7

7:                                                ; preds = %1, %3
  %8 = phi %"class.blink::Document"* [ %6, %3 ], [ null, %1 ]
  ret %"class.blink::Document"* %8
}

declare %"class.blink::Document"* @_ZN5blink18StyleSheetContents19SingleOwnerDocumentEPKS0_(%"class.blink::StyleSheetContents"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSStyleSheet"* @_ZN5blink13CSSStyleSheet6CreateERNS_8DocumentEPKNS_17CSSStyleSheetInitERNS_14ExceptionStateE(%"class.blink::Document"* dereferenceable(2848), %"class.blink::CSSStyleSheetInit"*, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.scoped_refptr.485, align 8
  %5 = alloca %class.scoped_refptr.485, align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %class.scoped_refptr.485, align 8
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #14
  %9 = bitcast i8* %8 to %"class.blink::CSSParserContext"*
  tail call void @_ZN5blink16CSSParserContextC1ERKNS_8DocumentE(%"class.blink::CSSParserContext"* %9, %"class.blink::Document"* dereferenceable(2848) %0) #14
  %10 = getelementptr inbounds i8, i8* %8, i64 -4
  %11 = bitcast i8* %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = or i16 %12, 1
  store atomic i16 %13, i16* %11 release, align 2
  %14 = tail call zeroext i1 @_ZN5blink9AdTracker29IsAdScriptExecutingInDocumentEPNS_8DocumentENS0_9StackTypeE(%"class.blink::Document"* %0, i32 1) #14
  br i1 %14, label %15, label %17

15:                                               ; preds = %3
  %16 = getelementptr inbounds i8, i8* %8, i64 144
  store i8 1, i8* %16, align 8
  br label %17

17:                                               ; preds = %15, %3
  %18 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_18StyleSheetContentsEEEPhm(i64 192) #14
  %19 = bitcast i8* %18 to %"class.blink::StyleSheetContents"*
  %20 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %21, align 8
  call void @_ZN5blink18StyleSheetContentsC1EPKNS_16CSSParserContextERKN3WTF6StringEPNS_15StyleRuleImportE(%"class.blink::StyleSheetContents"* %19, %"class.blink::CSSParserContext"* %9, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.blink::StyleRuleImport"* null) #14
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #14
  br label %37

37:                                               ; preds = %17, %33, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  %38 = getelementptr inbounds i8, i8* %18, i64 -4
  %39 = bitcast i8* %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = or i16 %40, 1
  store atomic i16 %41, i16* %39 release, align 2
  %42 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 192) #14
  %43 = bitcast i8* %42 to %"class.blink::CSSStyleSheet"*
  %44 = getelementptr inbounds i8, i8* %42, i64 8
  %45 = bitcast i8* %44 to i64**
  store i64* null, i64** %45, align 8
  %46 = bitcast i8* %42 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN5blink13CSSStyleSheetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %47 = getelementptr inbounds i8, i8* %42, i64 16
  %48 = bitcast i8* %47 to i8**
  store i8* %18, i8** %48, align 8
  %49 = getelementptr inbounds i8, i8* %42, i64 24
  %50 = getelementptr inbounds i8, i8* %42, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 5, i1 false) #14
  %51 = getelementptr inbounds i8, i8* %42, i64 120
  %52 = getelementptr inbounds i8, i8* %42, i64 152
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 28, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 40, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 84, i1 false) #14
  call void @_ZN5blink18StyleSheetContents14RegisterClientEPNS_13CSSStyleSheetE(%"class.blink::StyleSheetContents"* %19, %"class.blink::CSSStyleSheet"* %43) #14
  %53 = getelementptr inbounds i8, i8* %42, i64 -4
  %54 = bitcast i8* %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = or i16 %55, 1
  store atomic i16 %56, i16* %54 release, align 2
  %57 = ptrtoint %"class.blink::Document"* %0 to i64
  %58 = bitcast i8* %51 to i64*
  store atomic i64 %57, i64* %58 monotonic, align 8
  %59 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %37
  %62 = bitcast %"class.blink::Document"* %0 to i8*
  %63 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %62) #14
  br label %64

64:                                               ; preds = %37, %61
  %65 = getelementptr inbounds %"class.blink::CSSStyleSheetInit", %"class.blink::CSSStyleSheetInit"* %1, i64 0, i32 6, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %85, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %85

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #14
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !2

82:                                               ; preds = %73
  call void @llvm.trap() #14
  unreachable

83:                                               ; preds = %73
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %74, align 4
  br label %85

85:                                               ; preds = %83, %68, %64
  %86 = ptrtoint %"class.WTF::StringImpl"* %66 to i64
  %87 = bitcast i8* %50 to i64*
  %88 = bitcast i8* %50 to %"class.WTF::StringImpl"**
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  store i64 %86, i64* %87, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %89) #14
  br label %104

104:                                              ; preds = %85, %100, %103
  call void @_ZN5blink13CSSStyleSheet9DidMutateENS0_8MutationE(%"class.blink::CSSStyleSheet"* %43, i32 0) #14
  %105 = getelementptr inbounds i8, i8* %42, i64 80
  %106 = bitcast i8* %105 to %"class.blink::Node"**
  %107 = load %"class.blink::Node"*, %"class.blink::Node"** %106, align 8
  %108 = icmp eq %"class.blink::Node"* %107, null
  br i1 %108, label %112, label %109

109:                                              ; preds = %104
  %110 = bitcast i8* %47 to %"class.blink::StyleSheetContents"**
  %111 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %110, align 8
  call void @_ZN5blink18StyleSheetContents16UnregisterClientEPNS_13CSSStyleSheetE(%"class.blink::StyleSheetContents"* %111, %"class.blink::CSSStyleSheet"* %43) #14
  br label %112

112:                                              ; preds = %104, %109
  %113 = bitcast i8* %105 to i64*
  store atomic i64 0, i64* %113 monotonic, align 8
  %114 = getelementptr inbounds i8, i8* %42, i64 88
  %115 = bitcast i8* %114 to i64*
  store atomic i64 0, i64* %115 monotonic, align 8
  call void @_ZN5blink18StyleSheetContents14RegisterClientEPNS_13CSSStyleSheetE(%"class.blink::StyleSheetContents"* %19, %"class.blink::CSSStyleSheet"* %43) #14
  %116 = bitcast %class.scoped_refptr.485* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #14
  %117 = getelementptr inbounds %class.scoped_refptr.485, %class.scoped_refptr.485* %7, i64 0, i32 0
  store %"class.blink::MediaQuerySet"* null, %"class.blink::MediaQuerySet"** %117, align 8
  %118 = getelementptr inbounds %"class.blink::CSSStyleSheetInit", %"class.blink::CSSStyleSheetInit"* %1, i64 0, i32 5
  %119 = getelementptr inbounds %"class.blink::MediaListOrString", %"class.blink::MediaListOrString"* %118, i64 0, i32 0
  %120 = load i32, i32* %119, align 8
  %121 = icmp eq i32 %120, 2
  br i1 %121, label %122, label %131

122:                                              ; preds = %112
  %123 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink17MediaListOrString11GetAsStringEv(%"class.blink::MediaListOrString"* %118) #14
  %124 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %0) #14
  %125 = call %"class.blink::MediaQuerySet"* @_ZN5blink13MediaQuerySet6CreateERKN3WTF6StringEPKNS_16ExecutionContextE(%"class.WTF::String"* dereferenceable(8) %123, %"class.blink::ExecutionContext"* %124) #14
  %126 = bitcast %class.scoped_refptr.485* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126)
  %127 = bitcast %class.scoped_refptr.485* %7 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %class.scoped_refptr.485* %5 to i64*
  %130 = ptrtoint %"class.blink::MediaQuerySet"* %125 to i64
  store i64 %130, i64* %127, align 8
  store i64 %128, i64* %129, align 8
  br label %142

131:                                              ; preds = %112
  %132 = call %"class.blink::MediaList"* @_ZNK5blink17MediaListOrString14GetAsMediaListEv(%"class.blink::MediaListOrString"* %118) #14
  %133 = getelementptr inbounds %"class.blink::MediaList", %"class.blink::MediaList"* %132, i64 0, i32 1, i32 0
  %134 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %133, align 8
  %135 = call noalias i8* @malloc(i64 24) #14
  %136 = bitcast i8* %135 to %"class.blink::MediaQuerySet"*
  call void @_ZN5blink13MediaQuerySetC1ERKS0_(%"class.blink::MediaQuerySet"* %136, %"class.blink::MediaQuerySet"* dereferenceable(24) %134) #14
  %137 = bitcast %class.scoped_refptr.485* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137)
  %138 = bitcast %class.scoped_refptr.485* %7 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %class.scoped_refptr.485* %4 to i64*
  %141 = ptrtoint i8* %135 to i64
  store i64 %141, i64* %138, align 8
  store i64 %139, i64* %140, align 8
  br label %142

142:                                              ; preds = %131, %122
  %143 = phi %class.scoped_refptr.485* [ %4, %131 ], [ %5, %122 ]
  %144 = phi i8* [ %137, %131 ], [ %126, %122 ]
  call void @_ZN13scoped_refptrIN5blink13MediaQuerySetEED2Ev(%class.scoped_refptr.485* nonnull %143) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144)
  %145 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 40) #14
  %146 = bitcast i8* %145 to %"class.blink::MediaList"*
  %147 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %117, align 8
  %148 = icmp eq %"class.blink::MediaQuerySet"* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %142
  %150 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %147, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %150) #14
  br label %151

151:                                              ; preds = %142, %149
  call void @_ZN5blink9MediaListC1E13scoped_refptrINS_13MediaQuerySetEEPNS_13CSSStyleSheetE(%"class.blink::MediaList"* %146, %"class.blink::MediaQuerySet"* %147, %"class.blink::CSSStyleSheet"* %43) #14
  %152 = getelementptr inbounds i8, i8* %145, i64 -4
  %153 = bitcast i8* %152 to i16*
  %154 = load atomic i16, i16* %153 monotonic, align 2
  %155 = or i16 %154, 1
  store atomic i16 %155, i16* %153 release, align 2
  %156 = getelementptr inbounds i8, i8* %42, i64 160
  %157 = ptrtoint i8* %145 to i64
  %158 = bitcast i8* %156 to i64*
  store atomic i64 %157, i64* %158 monotonic, align 8
  %159 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %163, label %161

161:                                              ; preds = %151
  %162 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %145) #14
  br label %163

163:                                              ; preds = %151, %161
  %164 = getelementptr inbounds %"class.blink::CSSStyleSheetInit", %"class.blink::CSSStyleSheetInit"* %1, i64 0, i32 3
  %165 = load i8, i8* %164, align 2, !range !3
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %169, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds i8, i8* %42, i64 27
  store i8 1, i8* %168, align 1
  br label %169

169:                                              ; preds = %163, %167
  %170 = getelementptr inbounds %"class.blink::CSSStyleSheetInit", %"class.blink::CSSStyleSheetInit"* %1, i64 0, i32 4
  %171 = load i8, i8* %170, align 1, !range !3
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %178, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds i8, i8* %42, i64 25
  %175 = load i8, i8* %174, align 1, !range !3
  %176 = icmp eq i8 %175, 1
  br i1 %176, label %178, label %177

177:                                              ; preds = %173
  store i8 1, i8* %174, align 1
  call void @_ZN5blink13CSSStyleSheet9DidMutateENS0_8MutationE(%"class.blink::CSSStyleSheet"* %43, i32 0) #14
  br label %178

178:                                              ; preds = %169, %177, %173
  call void @_ZN13scoped_refptrIN5blink13MediaQuerySetEED2Ev(%class.scoped_refptr.485* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #14
  ret %"class.blink::CSSStyleSheet"* %43
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN5blink9AdTracker29IsAdScriptExecutingInDocumentEPNS_8DocumentENS0_9StackTypeE(%"class.blink::Document"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSStyleSheet14ClearOwnerNodeEv(%"class.blink::CSSStyleSheet"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink13CSSStyleSheet9DidMutateENS0_8MutationE(%"class.blink::CSSStyleSheet"* %0, i32 0)
  %2 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 11
  %3 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %7, align 8
  tail call void @_ZN5blink18StyleSheetContents16UnregisterClientEPNS_13CSSStyleSheetE(%"class.blink::StyleSheetContents"* %8, %"class.blink::CSSStyleSheet"* %0) #14
  br label %9

9:                                                ; preds = %1, %6
  %10 = bitcast %"class.blink::Member"* %2 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  ret void
}

declare void @_ZN5blink18StyleSheetContents14RegisterClientEPNS_13CSSStyleSheetE(%"class.blink::StyleSheetContents"*, %"class.blink::CSSStyleSheet"*) local_unnamed_addr #1

declare %"class.blink::MediaQuerySet"* @_ZN5blink13MediaQuerySet6CreateERKN3WTF6StringEPKNS_16ExecutionContextE(%"class.WTF::String"* dereferenceable(8), %"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink17MediaListOrString11GetAsStringEv(%"class.blink::MediaListOrString"*) local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #1

declare %"class.blink::MediaList"* @_ZNK5blink17MediaListOrString14GetAsMediaListEv(%"class.blink::MediaListOrString"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSStyleSheet8SetMediaEPNS_9MediaListE(%"class.blink::CSSStyleSheet"* nocapture, %"class.blink::MediaList"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 17
  %4 = ptrtoint %"class.blink::MediaList"* %1 to i64
  %5 = bitcast %"class.blink::Member.497"* %3 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::MediaList"* %1 to i8*
  %10 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #14
  br label %11

11:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink13CSSStyleSheet27SetAlternateFromConstructorEb(%"class.blink::CSSStyleSheet"* nocapture, i1 zeroext) local_unnamed_addr #3 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 5
  store i8 %3, i8* %4, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSStyleSheet11setDisabledEb(%"class.blink::CSSStyleSheet"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i32
  %4 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 3
  %5 = load i8, i8* %4, align 1, !range !3
  %6 = zext i8 %5 to i32
  %7 = icmp eq i32 %3, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = zext i1 %1 to i8
  store i8 %9, i8* %4, align 1
  tail call void @_ZN5blink13CSSStyleSheet9DidMutateENS0_8MutationE(%"class.blink::CSSStyleSheet"* %0, i32 0)
  br label %10

10:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIN5blink13MediaQuerySetEED2Ev(%class.scoped_refptr.485*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.485, %class.scoped_refptr.485* %0, i64 0, i32 0
  %3 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %2, align 8
  %4 = icmp eq %"class.blink::MediaQuerySet"* %3, null
  br i1 %4, label %40, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #14
  %7 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %40

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %3, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector.456", %"class.WTF::Vector.456"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.std::__1::unique_ptr.459"*, %"class.std::__1::unique_ptr.459"** %12, align 8
  %14 = icmp eq %"class.std::__1::unique_ptr.459"* %13, null
  br i1 %14, label %38, label %15, !prof !4

15:                                               ; preds = %10
  %16 = bitcast %"class.std::__1::unique_ptr.459"* %13 to i8*
  %17 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %3, i64 0, i32 1, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %36, label %20, !prof !2

20:                                               ; preds = %15
  %21 = zext i32 %18 to i64
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.459", %"class.std::__1::unique_ptr.459"* %13, i64 %21
  br label %23

23:                                               ; preds = %30, %20
  %24 = phi %"class.std::__1::unique_ptr.459"* [ %31, %30 ], [ %13, %20 ]
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.459", %"class.std::__1::unique_ptr.459"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::MediaQuery"*, %"class.blink::MediaQuery"** %25, align 8
  store %"class.blink::MediaQuery"* null, %"class.blink::MediaQuery"** %25, align 8
  %27 = icmp eq %"class.blink::MediaQuery"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %23
  tail call void @_ZN5blink10MediaQueryD1Ev(%"class.blink::MediaQuery"* nonnull %26) #14
  %29 = bitcast %"class.blink::MediaQuery"* %26 to i8*
  tail call void @free(i8* %29) #14
  br label %30

30:                                               ; preds = %28, %23
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.459", %"class.std::__1::unique_ptr.459"* %24, i64 1
  %32 = icmp eq %"class.std::__1::unique_ptr.459"* %31, %22
  br i1 %32, label %33, label %23

33:                                               ; preds = %30
  store i32 0, i32* %17, align 4
  %34 = bitcast %"class.WTF::Vector.456"* %11 to i8**
  %35 = load i8*, i8** %34, align 8
  br label %36

36:                                               ; preds = %33, %15
  %37 = phi i8* [ %35, %33 ], [ %16, %15 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %37) #14
  br label %38

38:                                               ; preds = %10, %36
  %39 = bitcast %"class.blink::MediaQuerySet"* %3 to i8*
  tail call void @free(i8* %39) #14
  br label %40

40:                                               ; preds = %38, %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSStyleSheet"* @_ZN5blink13CSSStyleSheet12CreateInlineEPNS_18StyleSheetContentsERNS_4NodeERKN3WTF12TextPositionE(%"class.blink::StyleSheetContents"*, %"class.blink::Node"* dereferenceable(64), %"class.WTF::TextPosition"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 192) #14
  %5 = bitcast i8* %4 to %"class.blink::CSSStyleSheet"*
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to i64**
  store i64* null, i64** %7, align 8
  %8 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN5blink13CSSStyleSheetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 16
  %10 = bitcast i8* %9 to %"class.blink::StyleSheetContents"**
  store %"class.blink::StyleSheetContents"* %0, %"class.blink::StyleSheetContents"** %10, align 8
  %11 = getelementptr inbounds i8, i8* %4, i64 24
  store i8 1, i8* %11, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 25
  %13 = getelementptr inbounds i8, i8* %4, i64 32
  %14 = getelementptr inbounds i8, i8* %4, i64 80
  %15 = bitcast i8* %14 to %"class.blink::Node"**
  %16 = bitcast i8* %12 to i32*
  store i32 0, i32* %16, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 48, i1 false) #14
  store %"class.blink::Node"* %1, %"class.blink::Node"** %15, align 8
  %17 = getelementptr inbounds i8, i8* %4, i64 88
  %18 = getelementptr inbounds i8, i8* %4, i64 120
  %19 = getelementptr inbounds i8, i8* %4, i64 152
  %20 = bitcast %"class.WTF::TextPosition"* %2 to i64*
  %21 = bitcast i8* %19 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 28, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 28, i1 false) #14
  %22 = load i64, i64* %20, align 4
  store i64 %22, i64* %21, align 8
  %23 = getelementptr inbounds i8, i8* %4, i64 160
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 32, i1 false) #14
  tail call void @_ZN5blink18StyleSheetContents14RegisterClientEPNS_13CSSStyleSheetE(%"class.blink::StyleSheetContents"* %0, %"class.blink::CSSStyleSheet"* %5) #14
  %24 = getelementptr inbounds i8, i8* %4, i64 -4
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  store atomic i16 %27, i16* %25 release, align 2
  ret %"class.blink::CSSStyleSheet"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSStyleSheet"* @_ZN5blink13CSSStyleSheet12CreateInlineERNS_4NodeERKNS_4KURLERKN3WTF12TextPositionERKNS6_12TextEncodingE(%"class.blink::Node"* dereferenceable(64), %"class.blink::KURL"* dereferenceable(112), %"class.WTF::TextPosition"* nocapture readonly dereferenceable(8), %"class.WTF::TextEncoding"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"struct.blink::Referrer", align 8
  %7 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  %11 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink8Document7BaseURLEv(%"class.blink::Document"* %10) #14
  %12 = bitcast %"struct.blink::Referrer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #14
  %13 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i64 12) #14
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %40, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 acquire, align 4
  %20 = and i32 %19, 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %38, label %22

22:                                               ; preds = %17
  %23 = load atomic i32, i32* %18 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %40

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #14
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !2

35:                                               ; preds = %26
  call void @llvm.trap() #14
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %40

38:                                               ; preds = %17
  %39 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %15) #14
  br label %40

40:                                               ; preds = %4, %22, %36, %38
  %41 = phi %"class.WTF::StringImpl"* [ %39, %38 ], [ %15, %22 ], [ %15, %36 ], [ null, %4 ]
  %42 = ptrtoint %"class.WTF::StringImpl"* %41 to i64
  %43 = bitcast %"struct.blink::Referrer"* %6 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.blink::Referrer", %"struct.blink::Referrer"* %6, i64 0, i32 1
  store i32 1, i32* %44, align 8
  %45 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #14
  %46 = bitcast i8* %45 to %"class.blink::CSSParserContext"*
  call void @_ZN5blink16CSSParserContextC1ERKNS_8DocumentERKNS_4KURLEbRKNS_8ReferrerERKN3WTF12TextEncodingENS0_15SelectorProfileENS_24ResourceFetchRestrictionE(%"class.blink::CSSParserContext"* %46, %"class.blink::Document"* dereferenceable(2848) %10, %"class.blink::KURL"* dereferenceable(112) %11, i1 zeroext true, %"struct.blink::Referrer"* nonnull dereferenceable(16) %6, %"class.WTF::TextEncoding"* dereferenceable(8) %3, i8 zeroext 0, i32 0) #14
  %47 = getelementptr inbounds i8, i8* %45, i64 -4
  %48 = bitcast i8* %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = or i16 %49, 1
  store atomic i16 %50, i16* %48 release, align 2
  %51 = getelementptr inbounds %"struct.blink::Referrer", %"struct.blink::Referrer"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %40
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #14
  br label %67

67:                                               ; preds = %40, %63, %66
  br i1 %16, label %81, label %68

68:                                               ; preds = %67
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #14
  br label %81

81:                                               ; preds = %67, %77, %80
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #14
  %82 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %7, align 8
  %83 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %82, i64 0, i32 2, i32 0, i32 0
  %84 = load %"class.blink::Document"*, %"class.blink::Document"** %83, align 8
  %85 = call zeroext i1 @_ZN5blink9AdTracker29IsAdScriptExecutingInDocumentEPNS_8DocumentENS0_9StackTypeE(%"class.blink::Document"* %84, i32 1) #14
  br i1 %85, label %86, label %88

86:                                               ; preds = %81
  %87 = getelementptr inbounds i8, i8* %45, i64 144
  store i8 1, i8* %87, align 8
  br label %88

88:                                               ; preds = %86, %81
  %89 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %1, i64 0, i32 4
  %90 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_18StyleSheetContentsEEEPhm(i64 192) #14
  %91 = bitcast i8* %90 to %"class.blink::StyleSheetContents"*
  call void @_ZN5blink18StyleSheetContentsC1EPKNS_16CSSParserContextERKN3WTF6StringEPNS_15StyleRuleImportE(%"class.blink::StyleSheetContents"* %91, %"class.blink::CSSParserContext"* %46, %"class.WTF::String"* dereferenceable(8) %89, %"class.blink::StyleRuleImport"* null) #14
  %92 = getelementptr inbounds i8, i8* %90, i64 -4
  %93 = bitcast i8* %92 to i16*
  %94 = load atomic i16, i16* %93 monotonic, align 2
  %95 = or i16 %94, 1
  store atomic i16 %95, i16* %93 release, align 2
  %96 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 192) #14
  %97 = bitcast i8* %96 to %"class.blink::CSSStyleSheet"*
  %98 = getelementptr inbounds i8, i8* %96, i64 8
  %99 = bitcast i8* %98 to i64**
  store i64* null, i64** %99, align 8
  %100 = bitcast i8* %96 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN5blink13CSSStyleSheetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %100, align 8
  %101 = getelementptr inbounds i8, i8* %96, i64 16
  %102 = bitcast i8* %101 to i8**
  store i8* %90, i8** %102, align 8
  %103 = getelementptr inbounds i8, i8* %96, i64 24
  store i8 1, i8* %103, align 8
  %104 = getelementptr inbounds i8, i8* %96, i64 25
  %105 = getelementptr inbounds i8, i8* %96, i64 32
  %106 = getelementptr inbounds i8, i8* %96, i64 80
  %107 = bitcast i8* %106 to %"class.blink::Node"**
  %108 = bitcast i8* %104 to i32*
  store i32 0, i32* %108, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 48, i1 false) #14
  store %"class.blink::Node"* %0, %"class.blink::Node"** %107, align 8
  %109 = getelementptr inbounds i8, i8* %96, i64 88
  %110 = getelementptr inbounds i8, i8* %96, i64 120
  %111 = getelementptr inbounds i8, i8* %96, i64 152
  %112 = bitcast %"class.WTF::TextPosition"* %2 to i64*
  %113 = bitcast i8* %111 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 28, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 28, i1 false) #14
  %114 = load i64, i64* %112, align 4
  store i64 %114, i64* %113, align 8
  %115 = getelementptr inbounds i8, i8* %96, i64 160
  call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 32, i1 false) #14
  call void @_ZN5blink18StyleSheetContents14RegisterClientEPNS_13CSSStyleSheetE(%"class.blink::StyleSheetContents"* %91, %"class.blink::CSSStyleSheet"* %97) #14
  %116 = getelementptr inbounds i8, i8* %96, i64 -4
  %117 = bitcast i8* %116 to i16*
  %118 = load atomic i16, i16* %117 monotonic, align 2
  %119 = or i16 %118, 1
  store atomic i16 %119, i16* %117 release, align 2
  ret %"class.blink::CSSStyleSheet"* %97
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink8Document7BaseURLEv(%"class.blink::Document"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSStyleSheetC2EPNS_18StyleSheetContentsEPNS_13CSSImportRuleE(%"class.blink::CSSStyleSheet"*, %"class.blink::StyleSheetContents"*, %"class.blink::CSSImportRule"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %4, align 8
  %5 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN5blink13CSSStyleSheetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::StyleSheetContents"* %1, %"class.blink::StyleSheetContents"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::CSSImportRule", %"class.blink::CSSImportRule"* %2, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 12, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 5, i1 false)
  %11 = bitcast %"class.WTF::StringImpl"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 56, i1 false)
  store %"class.blink::CSSRule"* %9, %"class.blink::CSSRule"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 13
  %13 = bitcast %"class.blink::HeapHashSet.490"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 20, i1 false) #14
  %14 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 14, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 16
  %16 = bitcast %"class.blink::Document"** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 28, i1 false)
  %17 = bitcast %"class.WTF::TextPosition"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 40, i1 false)
  tail call void @_ZN5blink18StyleSheetContents14RegisterClientEPNS_13CSSStyleSheetE(%"class.blink::StyleSheetContents"* %1, %"class.blink::CSSStyleSheet"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSStyleSheetC2EPNS_18StyleSheetContentsERNS_4NodeEbRKN3WTF12TextPositionE(%"class.blink::CSSStyleSheet"*, %"class.blink::StyleSheetContents"*, %"class.blink::Node"* dereferenceable(64), i1 zeroext, %"class.WTF::TextPosition"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %6 = zext i1 %3 to i8
  %7 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %7, align 8
  %8 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN5blink13CSSStyleSheetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::StyleSheetContents"* %1, %"class.blink::StyleSheetContents"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 2
  store i8 %6, i8* %10, align 8
  %11 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 7, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 11, i32 0, i32 0
  %14 = bitcast i8* %11 to i32*
  store i32 0, i32* %14, align 1
  %15 = bitcast %"class.WTF::StringImpl"** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 48, i1 false)
  store %"class.blink::Node"* %2, %"class.blink::Node"** %13, align 8
  %16 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 12, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 14, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 16
  %19 = bitcast %"class.WTF::TextPosition"* %4 to i64*
  %20 = bitcast %"class.WTF::TextPosition"* %18 to i64*
  %21 = bitcast %"class.blink::CSSRule"** %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 28, i1 false)
  %22 = bitcast %"class.blink::Document"** %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 28, i1 false)
  %23 = load i64, i64* %19, align 4
  store i64 %23, i64* %20, align 8
  %24 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 17, i32 0, i32 0
  %25 = bitcast %"class.blink::MediaList"** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 32, i1 false)
  tail call void @_ZN5blink18StyleSheetContents14RegisterClientEPNS_13CSSStyleSheetE(%"class.blink::StyleSheetContents"* %1, %"class.blink::CSSStyleSheet"* %0) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSStyleSheetD2Ev(%"class.blink::CSSStyleSheet"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN5blink13CSSStyleSheetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 15, i32 0, i32 0
  %4 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %3, align 8
  %5 = icmp eq %"class.WTF::AtomicString"* %4, null
  br i1 %5, label %38, label %6, !prof !4

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 15, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %36, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %33, %10
  %13 = phi i64 [ 0, %10 ], [ %34, %33 ]
  %14 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 %13
  %15 = bitcast %"class.WTF::AtomicString"* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast i8* %16 to %"class.WTF::StringImpl"*
  %18 = ptrtoint i8* %16 to i64
  switch i64 %18, label %19 [
    i64 -1, label %33
    i64 0, label %33
  ]

19:                                               ; preds = %12
  %20 = getelementptr inbounds i8, i8* %16, i64 8
  %21 = bitcast i8* %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = bitcast i8* %16 to i32*
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %19
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %19
  %30 = phi i32 [ %28, %27 ], [ %26, %19 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #14
  br label %33

33:                                               ; preds = %32, %29, %12, %12
  %34 = add nuw nsw i64 %13, 1
  %35 = icmp eq i64 %34, %11
  br i1 %35, label %36, label %12

36:                                               ; preds = %33, %6
  %37 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #14
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %3, align 8
  br label %38

38:                                               ; preds = %1, %36
  %39 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 10
  %40 = getelementptr inbounds %"class.WTF::Vector.376", %"class.WTF::Vector.376"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::MediaQueryResult"*, %"class.blink::MediaQueryResult"** %40, align 8
  %42 = icmp eq %"class.blink::MediaQueryResult"* %41, null
  br i1 %42, label %61, label %43, !prof !4

43:                                               ; preds = %38
  %44 = bitcast %"class.blink::MediaQueryResult"* %41 to i8*
  %45 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 10, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %59, label %48, !prof !2

48:                                               ; preds = %43
  %49 = zext i32 %46 to i64
  %50 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %41, i64 %49
  br label %51

51:                                               ; preds = %51, %48
  %52 = phi %"class.blink::MediaQueryResult"* [ %54, %51 ], [ %41, %48 ]
  %53 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %52, i64 0, i32 0
  tail call void @_ZN5blink13MediaQueryExpD1Ev(%"class.blink::MediaQueryExp"* %53) #14
  %54 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %52, i64 1
  %55 = icmp eq %"class.blink::MediaQueryResult"* %54, %50
  br i1 %55, label %56, label %51

56:                                               ; preds = %51
  store i32 0, i32* %45, align 4
  %57 = bitcast %"class.WTF::Vector.376"* %39 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %43
  %60 = phi i8* [ %58, %56 ], [ %44, %43 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %60) #14
  store %"class.blink::MediaQueryResult"* null, %"class.blink::MediaQueryResult"** %40, align 8
  br label %61

61:                                               ; preds = %38, %59
  %62 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 9
  %63 = getelementptr inbounds %"class.WTF::Vector.376", %"class.WTF::Vector.376"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::MediaQueryResult"*, %"class.blink::MediaQueryResult"** %63, align 8
  %65 = icmp eq %"class.blink::MediaQueryResult"* %64, null
  br i1 %65, label %84, label %66, !prof !4

66:                                               ; preds = %61
  %67 = bitcast %"class.blink::MediaQueryResult"* %64 to i8*
  %68 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %82, label %71, !prof !2

71:                                               ; preds = %66
  %72 = zext i32 %69 to i64
  %73 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %64, i64 %72
  br label %74

74:                                               ; preds = %74, %71
  %75 = phi %"class.blink::MediaQueryResult"* [ %77, %74 ], [ %64, %71 ]
  %76 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %75, i64 0, i32 0
  tail call void @_ZN5blink13MediaQueryExpD1Ev(%"class.blink::MediaQueryExp"* %76) #14
  %77 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %75, i64 1
  %78 = icmp eq %"class.blink::MediaQueryResult"* %77, %73
  br i1 %78, label %79, label %74

79:                                               ; preds = %74
  store i32 0, i32* %68, align 4
  %80 = bitcast %"class.WTF::Vector.376"* %62 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %79, %66
  %83 = phi i8* [ %81, %79 ], [ %67, %66 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %83) #14
  store %"class.blink::MediaQueryResult"* null, %"class.blink::MediaQueryResult"** %63, align 8
  br label %84

84:                                               ; preds = %61, %82
  %85 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 8
  tail call void @_ZN13scoped_refptrIN5blink13MediaQuerySetEED2Ev(%class.scoped_refptr.485* %85) #14
  %86 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 7, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #14
  br label %102

102:                                              ; preds = %84, %98, %101
  %103 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 0
  tail call void @_ZN5blink10StyleSheetD2Ev(%"class.blink::StyleSheet"* %103) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink10StyleSheetD2Ev(%"class.blink::StyleSheet"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSStyleSheetD0Ev(%"class.blink::CSSStyleSheet"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink13CSSStyleSheetD2Ev(%"class.blink::CSSStyleSheet"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSStyleSheet15WillMutateRulesEv(%"class.blink::CSSStyleSheet"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.blink::Member.63", %"class.blink::Member.63"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %4, i64 0, i32 8
  %6 = load i8, i8* %5, align 8
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %4, i64 0, i32 7, i32 0, i32 0
  %10 = load %"class.blink::CSSStyleSheetResource"*, %"class.blink::CSSStyleSheetResource"** %9, align 8
  %11 = icmp eq %"class.blink::CSSStyleSheetResource"* %10, null
  br i1 %11, label %12, label %17

12:                                               ; preds = %8
  tail call void @_ZN5blink18StyleSheetContents12ClearRuleSetEv(%"class.blink::StyleSheetContents"* %4) #14
  %13 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %3, align 8
  %14 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %13, i64 0, i32 8
  %15 = load i8, i8* %14, align 8
  %16 = or i8 %15, 4
  store i8 %16, i8* %14, align 8
  br label %65

17:                                               ; preds = %8, %1
  tail call void @_ZN5blink18StyleSheetContents16UnregisterClientEPNS_13CSSStyleSheetE(%"class.blink::StyleSheetContents"* %4, %"class.blink::CSSStyleSheet"* %0) #14
  %18 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %3, align 8
  %19 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_18StyleSheetContentsEEEPhm(i64 192) #14
  %20 = bitcast i8* %19 to %"class.blink::StyleSheetContents"*
  tail call void @_ZN5blink18StyleSheetContentsC1ERKS0_(%"class.blink::StyleSheetContents"* %20, %"class.blink::StyleSheetContents"* dereferenceable(192) %18) #14
  %21 = getelementptr inbounds i8, i8* %19, i64 -4
  %22 = bitcast i8* %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = or i16 %23, 1
  store atomic i16 %24, i16* %22 release, align 2
  %25 = ptrtoint i8* %19 to i64
  %26 = bitcast %"class.blink::Member.63"* %2 to i64*
  store atomic i64 %25, i64* %26 monotonic, align 8
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  %29 = bitcast i8* %19 to %"class.blink::StyleSheetContents"*
  br i1 %28, label %33, label %30

30:                                               ; preds = %17
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %19) #14
  %32 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %3, align 8
  br label %33

33:                                               ; preds = %17, %30
  %34 = phi %"class.blink::StyleSheetContents"* [ %29, %17 ], [ %32, %30 ]
  tail call void @_ZN5blink18StyleSheetContents14RegisterClientEPNS_13CSSStyleSheetE(%"class.blink::StyleSheetContents"* %34, %"class.blink::CSSStyleSheet"* %0) #14
  %35 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %3, align 8
  %36 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %35, i64 0, i32 8
  %37 = load i8, i8* %36, align 8
  %38 = or i8 %37, 4
  store i8 %38, i8* %36, align 8
  %39 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 18, i32 0
  %40 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %65, label %43

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  br label %45

45:                                               ; preds = %61, %43
  %46 = phi i32 [ 0, %43 ], [ %62, %61 ]
  %47 = tail call dereferenceable(8) %"class.blink::Member.486"* @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.502"* %39, i32 %46) #14
  %48 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %47, i64 0, i32 0, i32 0
  %49 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %48, align 8
  %50 = icmp eq %"class.blink::CSSRule"* %49, null
  br i1 %50, label %61, label %51

51:                                               ; preds = %45
  %52 = tail call dereferenceable(8) %"class.blink::Member.486"* @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.502"* %39, i32 %46) #14
  %53 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %52, i64 0, i32 0, i32 0
  %54 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %53, align 8
  %55 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %44, align 8
  %56 = tail call %"class.blink::StyleRuleBase"* @_ZNK5blink18StyleSheetContents6RuleAtEj(%"class.blink::StyleSheetContents"* %55, i32 %46) #14
  %57 = bitcast %"class.blink::CSSRule"* %54 to void (%"class.blink::CSSRule"*, %"class.blink::StyleRuleBase"*)***
  %58 = load void (%"class.blink::CSSRule"*, %"class.blink::StyleRuleBase"*)**, void (%"class.blink::CSSRule"*, %"class.blink::StyleRuleBase"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.blink::CSSRule"*, %"class.blink::StyleRuleBase"*)*, void (%"class.blink::CSSRule"*, %"class.blink::StyleRuleBase"*)** %58, i64 11
  %60 = load void (%"class.blink::CSSRule"*, %"class.blink::StyleRuleBase"*)*, void (%"class.blink::CSSRule"*, %"class.blink::StyleRuleBase"*)** %59, align 8
  tail call void %60(%"class.blink::CSSRule"* %54, %"class.blink::StyleRuleBase"* %56) #14
  br label %61

61:                                               ; preds = %51, %45
  %62 = add nuw i32 %46, 1
  %63 = load i32, i32* %40, align 4
  %64 = icmp ult i32 %62, %63
  br i1 %64, label %45, label %65

65:                                               ; preds = %61, %33, %12
  ret void
}

declare void @_ZN5blink18StyleSheetContents12ClearRuleSetEv(%"class.blink::StyleSheetContents"*) local_unnamed_addr #1

declare void @_ZN5blink18StyleSheetContents16UnregisterClientEPNS_13CSSStyleSheetE(%"class.blink::StyleSheetContents"*, %"class.blink::CSSStyleSheet"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSStyleSheet30ReattachChildRuleCSSOMWrappersEv(%"class.blink::CSSStyleSheet"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 18, i32 0
  %3 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  br label %9

8:                                                ; preds = %25, %1
  ret void

9:                                                ; preds = %6, %25
  %10 = phi i32 [ 0, %6 ], [ %26, %25 ]
  %11 = tail call dereferenceable(8) %"class.blink::Member.486"* @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.502"* %2, i32 %10) #14
  %12 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %12, align 8
  %14 = icmp eq %"class.blink::CSSRule"* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %9
  %16 = tail call dereferenceable(8) %"class.blink::Member.486"* @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.502"* %2, i32 %10) #14
  %17 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %17, align 8
  %19 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %7, align 8
  %20 = tail call %"class.blink::StyleRuleBase"* @_ZNK5blink18StyleSheetContents6RuleAtEj(%"class.blink::StyleSheetContents"* %19, i32 %10) #14
  %21 = bitcast %"class.blink::CSSRule"* %18 to void (%"class.blink::CSSRule"*, %"class.blink::StyleRuleBase"*)***
  %22 = load void (%"class.blink::CSSRule"*, %"class.blink::StyleRuleBase"*)**, void (%"class.blink::CSSRule"*, %"class.blink::StyleRuleBase"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::CSSRule"*, %"class.blink::StyleRuleBase"*)*, void (%"class.blink::CSSRule"*, %"class.blink::StyleRuleBase"*)** %22, i64 11
  %24 = load void (%"class.blink::CSSRule"*, %"class.blink::StyleRuleBase"*)*, void (%"class.blink::CSSRule"*, %"class.blink::StyleRuleBase"*)** %23, align 8
  tail call void %24(%"class.blink::CSSRule"* %18, %"class.blink::StyleRuleBase"* %20) #14
  br label %25

25:                                               ; preds = %9, %15
  %26 = add nuw i32 %10, 1
  %27 = load i32, i32* %3, align 4
  %28 = icmp ult i32 %26, %27
  br i1 %28, label %9, label %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSStyleSheet9DidMutateENS0_8MutationE(%"class.blink::CSSStyleSheet"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::HashSet.367", align 8
  br label %4

4:                                                ; preds = %29, %2
  %5 = phi %"class.blink::CSSStyleSheet"* [ %0, %2 ], [ %32, %29 ]
  %6 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %5, i64 0, i32 12, i32 0, i32 0
  %7 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %6, align 8
  %8 = icmp eq %"class.blink::CSSRule"* %7, null
  br i1 %8, label %34, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %7, i64 0, i32 1
  %11 = load i8, i8* %10, align 8
  %12 = and i8 %11, 2
  %13 = icmp eq i8 %12, 0
  %14 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %7, i64 0, i32 2, i32 0, i32 0
  br i1 %13, label %29, label %15

15:                                               ; preds = %9, %20
  %16 = phi %"class.blink::ScriptWrappable"** [ %28, %20 ], [ %14, %9 ]
  %17 = phi %"class.blink::CSSRule"* [ %23, %20 ], [ %7, %9 ]
  %18 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %16, align 8
  %19 = icmp eq %"class.blink::ScriptWrappable"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %17, i64 0, i32 2, i32 0, i32 0
  %22 = bitcast %"class.blink::ScriptWrappable"** %21 to %"class.blink::CSSRule"**
  %23 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %23, i64 0, i32 1
  %25 = load i8, i8* %24, align 8
  %26 = and i8 %25, 2
  %27 = icmp eq i8 %26, 0
  %28 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %23, i64 0, i32 2, i32 0, i32 0
  br i1 %27, label %29, label %15

29:                                               ; preds = %20, %9
  %30 = phi %"class.blink::ScriptWrappable"** [ %14, %9 ], [ %28, %20 ]
  %31 = bitcast %"class.blink::ScriptWrappable"** %30 to %"class.blink::CSSStyleSheet"**
  %32 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %31, align 8
  %33 = icmp eq %"class.blink::CSSStyleSheet"* %32, null
  br i1 %33, label %34, label %4

34:                                               ; preds = %29, %4, %15
  %35 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %5, i64 0, i32 14, i32 0, i32 0
  %36 = load %"class.blink::Document"*, %"class.blink::Document"** %35, align 8
  %37 = icmp eq %"class.blink::Document"* %36, null
  br i1 %37, label %38, label %48

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %5, i64 0, i32 11, i32 0, i32 0
  %40 = load %"class.blink::Node"*, %"class.blink::Node"** %39, align 8
  %41 = icmp eq %"class.blink::Node"* %40, null
  br i1 %41, label %210, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %40, i64 0, i32 3, i32 0, i32 0
  %44 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %44, i64 0, i32 2, i32 0, i32 0
  %46 = load %"class.blink::Document"*, %"class.blink::Document"** %45, align 8
  %47 = icmp eq %"class.blink::Document"* %46, null
  br i1 %47, label %210, label %48

48:                                               ; preds = %34, %42
  %49 = phi %"class.blink::Document"* [ %46, %42 ], [ %36, %34 ]
  %50 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %49, i64 0, i32 5, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = add i32 %51, -2
  %53 = icmp ult i32 %52, 18
  br i1 %53, label %54, label %210

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 15, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %133, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %49, i64 0, i32 59, i32 0, i32 0
  %60 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %59, align 8
  %61 = getelementptr inbounds %"class.WTF::HashSet.367", %"class.WTF::HashSet.367"* %3, i64 0, i32 0
  %62 = bitcast %"class.WTF::HashSet.367"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 0, i64 20, i1 false) #14
  call void @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.368"* nonnull %61, i32 %56) #14
  %63 = load i32, i32* %55, align 4
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 15, i32 0, i32 0
  %66 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 15, i32 0, i32 1
  %68 = load i32, i32* %67, align 8
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %66, i64 %69
  br i1 %64, label %97, label %71

71:                                               ; preds = %58
  %72 = icmp eq i32 %68, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %71, %77
  %74 = phi %"class.WTF::AtomicString"* [ %78, %77 ], [ %66, %71 ]
  %75 = bitcast %"class.WTF::AtomicString"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  switch i64 %76, label %80 [
    i64 -1, label %77
    i64 0, label %77
  ]

77:                                               ; preds = %73, %73
  %78 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %74, i64 1
  %79 = icmp eq %"class.WTF::AtomicString"* %78, %70
  br i1 %79, label %97, label %73

80:                                               ; preds = %73, %71
  %81 = phi %"class.WTF::AtomicString"* [ %66, %71 ], [ %74, %73 ]
  %82 = icmp eq %"class.WTF::AtomicString"* %81, %70
  br i1 %82, label %97, label %83

83:                                               ; preds = %80, %95
  %84 = phi %"class.WTF::AtomicString"* [ %89, %95 ], [ %81, %80 ]
  %85 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.368"* nonnull %61, %"class.WTF::AtomicString"* dereferenceable(8) %84, %"class.WTF::AtomicString"* dereferenceable(8) %84) #14
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %84, i64 1
  %87 = icmp eq %"class.WTF::AtomicString"* %86, %70
  br i1 %87, label %97, label %88

88:                                               ; preds = %83, %92
  %89 = phi %"class.WTF::AtomicString"* [ %93, %92 ], [ %86, %83 ]
  %90 = bitcast %"class.WTF::AtomicString"* %89 to i64*
  %91 = load i64, i64* %90, align 8
  switch i64 %91, label %95 [
    i64 -1, label %92
    i64 0, label %92
  ]

92:                                               ; preds = %88, %88
  %93 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %89, i64 1
  %94 = icmp eq %"class.WTF::AtomicString"* %93, %70
  br i1 %94, label %97, label %88

95:                                               ; preds = %88
  %96 = icmp eq %"class.WTF::AtomicString"* %89, %70
  br i1 %96, label %97, label %83

97:                                               ; preds = %77, %83, %95, %92, %58, %80
  call void @_ZN5blink11StyleEngine34ScheduleCustomElementInvalidationsEN3WTF7HashSetINS1_12AtomicStringENS1_16AtomicStringHashENS1_10HashTraitsIS3_EENS1_18PartitionAllocatorEEE(%"class.blink::StyleEngine"* %60, %"class.WTF::HashSet.367"* nonnull %3) #14
  %98 = getelementptr inbounds %"class.WTF::HashSet.367", %"class.WTF::HashSet.367"* %3, i64 0, i32 0, i32 0
  %99 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %98, align 8
  %100 = icmp eq %"class.WTF::AtomicString"* %99, null
  br i1 %100, label %133, label %101, !prof !4

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.WTF::HashSet.367", %"class.WTF::HashSet.367"* %3, i64 0, i32 0, i32 1
  %103 = load i32, i32* %102, align 8
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %131, label %105

105:                                              ; preds = %101
  %106 = zext i32 %103 to i64
  br label %107

107:                                              ; preds = %128, %105
  %108 = phi i64 [ 0, %105 ], [ %129, %128 ]
  %109 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %99, i64 %108
  %110 = bitcast %"class.WTF::AtomicString"* %109 to i8**
  %111 = load i8*, i8** %110, align 8
  %112 = bitcast i8* %111 to %"class.WTF::StringImpl"*
  %113 = ptrtoint i8* %111 to i64
  switch i64 %113, label %114 [
    i64 -1, label %128
    i64 0, label %128
  ]

114:                                              ; preds = %107
  %115 = getelementptr inbounds i8, i8* %111, i64 8
  %116 = bitcast i8* %115 to i32*
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = bitcast i8* %111 to i32*
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %114
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %114
  %125 = phi i32 [ %123, %122 ], [ %121, %114 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #14
  br label %128

128:                                              ; preds = %127, %124, %107, %107
  %129 = add nuw nsw i64 %108, 1
  %130 = icmp eq i64 %129, %106
  br i1 %130, label %131, label %107

131:                                              ; preds = %128, %101
  %132 = bitcast %"class.WTF::AtomicString"* %99 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %132) #14
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %98, align 8
  br label %133

133:                                              ; preds = %131, %97, %54
  %134 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 11, i32 0, i32 0
  %135 = load %"class.blink::Node"*, %"class.blink::Node"** %134, align 8
  %136 = icmp eq %"class.blink::Node"* %135, null
  br i1 %136, label %147, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %135, i64 0, i32 1
  %139 = load i32, i32* %138, align 8
  %140 = and i32 %139, 256
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %147, label %142

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %49, i64 0, i32 59, i32 0, i32 0
  %144 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %135, i64 0, i32 3, i32 0, i32 0
  %146 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %145, align 8
  call void @_ZN5blink11StyleEngine25SetNeedsActiveStyleUpdateERNS_9TreeScopeE(%"class.blink::StyleEngine"* %144, %"class.blink::TreeScope"* dereferenceable(104) %146) #14
  br label %197

147:                                              ; preds = %137, %133
  %148 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 13, i32 0, i32 0, i32 2
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %197, label %151

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %153 = load %"class.blink::WeakMember.496"*, %"class.blink::WeakMember.496"** %152, align 8
  %154 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %155 = load i32, i32* %154, align 8
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds %"class.blink::WeakMember.496", %"class.blink::WeakMember.496"* %153, i64 %156
  %158 = icmp eq i32 %155, 0
  br i1 %158, label %166, label %159

159:                                              ; preds = %151, %163
  %160 = phi %"class.blink::WeakMember.496"* [ %164, %163 ], [ %153, %151 ]
  %161 = bitcast %"class.blink::WeakMember.496"* %160 to i64*
  %162 = load i64, i64* %161, align 8
  switch i64 %162, label %166 [
    i64 -1, label %163
    i64 0, label %163
  ]

163:                                              ; preds = %159, %159
  %164 = getelementptr inbounds %"class.blink::WeakMember.496", %"class.blink::WeakMember.496"* %160, i64 1
  %165 = icmp eq %"class.blink::WeakMember.496"* %164, %157
  br i1 %165, label %197, label %159

166:                                              ; preds = %159, %151
  %167 = phi %"class.blink::WeakMember.496"* [ %153, %151 ], [ %160, %159 ]
  %168 = icmp eq %"class.blink::WeakMember.496"* %167, %157
  br i1 %168, label %197, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %49, i64 0, i32 59, i32 0, i32 0
  br label %171

171:                                              ; preds = %169, %195
  %172 = phi i8 [ 0, %169 ], [ %185, %195 ]
  %173 = phi %"class.blink::WeakMember.496"* [ %167, %169 ], [ %189, %195 ]
  %174 = getelementptr inbounds %"class.blink::WeakMember.496", %"class.blink::WeakMember.496"* %173, i64 0, i32 0, i32 0
  %175 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %174, align 8
  %176 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %175, i64 0, i32 1, i32 0, i32 0
  %177 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %176, align 8
  %178 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %177, i64 0, i32 0, i32 1
  %179 = load i32, i32* %178, align 8
  %180 = and i32 %179, 256
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %184, label %182

182:                                              ; preds = %171
  %183 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %170, align 8
  call void @_ZN5blink11StyleEngine25SetNeedsActiveStyleUpdateERNS_9TreeScopeE(%"class.blink::StyleEngine"* %183, %"class.blink::TreeScope"* dereferenceable(104) %175) #14
  br label %184

184:                                              ; preds = %171, %182
  %185 = phi i8 [ 1, %182 ], [ %172, %171 ]
  %186 = getelementptr inbounds %"class.blink::WeakMember.496", %"class.blink::WeakMember.496"* %173, i64 1
  %187 = icmp eq %"class.blink::WeakMember.496"* %186, %157
  br i1 %187, label %197, label %188

188:                                              ; preds = %184, %192
  %189 = phi %"class.blink::WeakMember.496"* [ %193, %192 ], [ %186, %184 ]
  %190 = bitcast %"class.blink::WeakMember.496"* %189 to i64*
  %191 = load i64, i64* %190, align 8
  switch i64 %191, label %195 [
    i64 -1, label %192
    i64 0, label %192
  ]

192:                                              ; preds = %188, %188
  %193 = getelementptr inbounds %"class.blink::WeakMember.496", %"class.blink::WeakMember.496"* %189, i64 1
  %194 = icmp eq %"class.blink::WeakMember.496"* %193, %157
  br i1 %194, label %197, label %188

195:                                              ; preds = %188
  %196 = icmp eq %"class.blink::WeakMember.496"* %189, %157
  br i1 %196, label %197, label %171

197:                                              ; preds = %163, %184, %195, %192, %166, %147, %142
  %198 = phi i8 [ 1, %142 ], [ 0, %147 ], [ 0, %166 ], [ %185, %192 ], [ %185, %195 ], [ %185, %184 ], [ 0, %163 ]
  %199 = icmp eq i32 %1, 1
  br i1 %199, label %200, label %210

200:                                              ; preds = %197
  %201 = and i8 %198, 1
  %202 = icmp eq i8 %201, 0
  br i1 %202, label %205, label %203

203:                                              ; preds = %200
  %204 = call dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"* nonnull %49) #14
  call void @_ZN5blink13StyleResolver32InvalidateMatchedPropertiesCacheEv(%"class.blink::StyleResolver"* %204) #14
  br label %205

205:                                              ; preds = %200, %203
  %206 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %207 = and i32 %206, 32
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %210, label %209

209:                                              ; preds = %205
  call void @_ZN5blink5probe23DidMutateStyleSheetImplEPNS_8DocumentEPNS_13CSSStyleSheetE(%"class.blink::Document"* %49, %"class.blink::CSSStyleSheet"* %0) #14
  br label %210

210:                                              ; preds = %38, %209, %205, %197, %48, %42
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* nocapture readonly) local_unnamed_addr #5 align 2 {
  br label %2

2:                                                ; preds = %27, %1
  %3 = phi %"class.blink::CSSStyleSheet"* [ %0, %1 ], [ %30, %27 ]
  %4 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %3, i64 0, i32 12, i32 0, i32 0
  %5 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %4, align 8
  %6 = icmp eq %"class.blink::CSSRule"* %5, null
  br i1 %6, label %32, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %5, i64 0, i32 1
  %9 = load i8, i8* %8, align 8
  %10 = and i8 %9, 2
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %5, i64 0, i32 2, i32 0, i32 0
  br i1 %11, label %27, label %13

13:                                               ; preds = %7, %18
  %14 = phi %"class.blink::ScriptWrappable"** [ %26, %18 ], [ %12, %7 ]
  %15 = phi %"class.blink::CSSRule"* [ %21, %18 ], [ %5, %7 ]
  %16 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %14, align 8
  %17 = icmp eq %"class.blink::ScriptWrappable"* %16, null
  br i1 %17, label %32, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %15, i64 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.blink::ScriptWrappable"** %19 to %"class.blink::CSSRule"**
  %21 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %21, i64 0, i32 1
  %23 = load i8, i8* %22, align 8
  %24 = and i8 %23, 2
  %25 = icmp eq i8 %24, 0
  %26 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %21, i64 0, i32 2, i32 0, i32 0
  br i1 %25, label %27, label %13

27:                                               ; preds = %18, %7
  %28 = phi %"class.blink::ScriptWrappable"** [ %12, %7 ], [ %26, %18 ]
  %29 = bitcast %"class.blink::ScriptWrappable"** %28 to %"class.blink::CSSStyleSheet"**
  %30 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %29, align 8
  %31 = icmp eq %"class.blink::CSSStyleSheet"* %30, null
  br i1 %31, label %32, label %2

32:                                               ; preds = %2, %27, %13
  %33 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %3, i64 0, i32 14, i32 0, i32 0
  %34 = load %"class.blink::Document"*, %"class.blink::Document"** %33, align 8
  %35 = icmp eq %"class.blink::Document"* %34, null
  br i1 %35, label %36, label %45

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %3, i64 0, i32 11, i32 0, i32 0
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = icmp eq %"class.blink::Node"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 0, i32 3, i32 0, i32 0
  %42 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %42, i64 0, i32 2, i32 0, i32 0
  %44 = load %"class.blink::Document"*, %"class.blink::Document"** %43, align 8
  br label %45

45:                                               ; preds = %32, %40, %36
  %46 = phi %"class.blink::Document"* [ %44, %40 ], [ null, %36 ], [ %34, %32 ]
  ret %"class.blink::Document"* %46
}

declare void @_ZN5blink11StyleEngine34ScheduleCustomElementInvalidationsEN3WTF7HashSetINS1_12AtomicStringENS1_16AtomicStringHashENS1_10HashTraitsIS3_EENS1_18PartitionAllocatorEEE(%"class.blink::StyleEngine"*, %"class.WTF::HashSet.367"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Node"* @_ZNK5blink13CSSStyleSheet9ownerNodeEv(%"class.blink::CSSStyleSheet"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 11, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  ret %"class.blink::Node"* %3
}

declare void @_ZN5blink11StyleEngine25SetNeedsActiveStyleUpdateERNS_9TreeScopeE(%"class.blink::StyleEngine"*, %"class.blink::TreeScope"* dereferenceable(104)) local_unnamed_addr #1

declare dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"*) local_unnamed_addr #1

declare void @_ZN5blink13StyleResolver32InvalidateMatchedPropertiesCacheEv(%"class.blink::StyleResolver"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink13CSSStyleSheet28EnableRuleAccessForInspectorEv(%"class.blink::CSSStyleSheet"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 6
  store i8 1, i8* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink13CSSStyleSheet29DisableRuleAccessForInspectorEv(%"class.blink::CSSStyleSheet"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 6
  store i8 0, i8* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink13CSSStyleSheet22InspectorMutationScopeC2EPS0_(%"class.blink::CSSStyleSheet::InspectorMutationScope"* nocapture, %"class.blink::CSSStyleSheet"*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSStyleSheet::InspectorMutationScope", %"class.blink::CSSStyleSheet::InspectorMutationScope"* %0, i64 0, i32 0
  store %"class.blink::CSSStyleSheet"* %1, %"class.blink::CSSStyleSheet"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %1, i64 0, i32 6
  store i8 1, i8* %4, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink13CSSStyleSheet22InspectorMutationScopeD2Ev(%"class.blink::CSSStyleSheet::InspectorMutationScope"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSStyleSheet::InspectorMutationScope", %"class.blink::CSSStyleSheet::InspectorMutationScope"* %0, i64 0, i32 0
  %3 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %3, i64 0, i32 6
  store i8 0, i8* %4, align 4
  ret void
}

declare %"class.blink::StyleRuleBase"* @_ZNK5blink18StyleSheetContents6RuleAtEj(%"class.blink::StyleSheetContents"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSStyleSheet15SetMediaQueriesE13scoped_refptrINS_13MediaQuerySetEE(%"class.blink::CSSStyleSheet"* nocapture, %"class.blink::MediaQuerySet"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.scoped_refptr.485, align 8
  %4 = alloca %class.scoped_refptr.485, align 8
  %5 = getelementptr inbounds %class.scoped_refptr.485, %class.scoped_refptr.485* %4, i64 0, i32 0
  %6 = ptrtoint %"class.blink::MediaQuerySet"* %1 to i64
  store %"class.blink::MediaQuerySet"* null, %"class.blink::MediaQuerySet"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 8
  %8 = bitcast %class.scoped_refptr.485* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8)
  %9 = bitcast %class.scoped_refptr.485* %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %class.scoped_refptr.485* %3 to i64*
  store i64 %6, i64* %9, align 8
  store i64 %10, i64* %11, align 8
  call void @_ZN13scoped_refptrIN5blink13MediaQuerySetEED2Ev(%class.scoped_refptr.485* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8)
  %12 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 17, i32 0, i32 0
  %13 = load %"class.blink::MediaList"*, %"class.blink::MediaList"** %12, align 8
  %14 = icmp eq %"class.blink::MediaList"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.scoped_refptr.485, %class.scoped_refptr.485* %7, i64 0, i32 0
  %17 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %16, align 8
  %18 = icmp eq %"class.blink::MediaQuerySet"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %17, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %20) #14
  call void @_ZN5blink9MediaList8ReattachE13scoped_refptrINS_13MediaQuerySetEE(%"class.blink::MediaList"* nonnull %13, %"class.blink::MediaQuerySet"* nonnull %17) #14
  br label %21

21:                                               ; preds = %15, %2, %19
  call void @_ZN13scoped_refptrIN5blink13MediaQuerySetEED2Ev(%class.scoped_refptr.485* nonnull %4) #14
  ret void
}

declare void @_ZN5blink9MediaList8ReattachE13scoped_refptrINS_13MediaQuerySetEE(%"class.blink::MediaList"*, %"class.blink::MediaQuerySet"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13CSSStyleSheet19MatchesMediaQueriesERKNS_19MediaQueryEvaluatorE(%"class.blink::CSSStyleSheet"*, %"class.blink::MediaQueryEvaluator"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 9
  %4 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %26, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.WTF::Vector.376", %"class.WTF::Vector.376"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::MediaQueryResult"*, %"class.blink::MediaQueryResult"** %12, align 8
  %14 = zext i32 %9 to i64
  %15 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %13, i64 %14
  br label %16

16:                                               ; preds = %16, %11
  %17 = phi %"class.blink::MediaQueryResult"* [ %19, %16 ], [ %13, %11 ]
  %18 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %17, i64 0, i32 0
  tail call void @_ZN5blink13MediaQueryExpD1Ev(%"class.blink::MediaQueryExp"* %18) #14
  %19 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %17, i64 1
  %20 = icmp eq %"class.blink::MediaQueryResult"* %19, %15
  br i1 %20, label %21, label %16

21:                                               ; preds = %16
  store i32 0, i32* %8, align 4
  br label %22

22:                                               ; preds = %21, %7
  %23 = bitcast %"class.WTF::Vector.376"* %3 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = bitcast %"class.WTF::Vector.376"* %3 to i64*
  store atomic i64 0, i64* %25 monotonic, align 8
  store i32 0, i32* %4, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %24) #14
  br label %26

26:                                               ; preds = %2, %22
  %27 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 10
  %28 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %50, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 10, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %46, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::Vector.376", %"class.WTF::Vector.376"* %27, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::MediaQueryResult"*, %"class.blink::MediaQueryResult"** %36, align 8
  %38 = zext i32 %33 to i64
  %39 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %37, i64 %38
  br label %40

40:                                               ; preds = %40, %35
  %41 = phi %"class.blink::MediaQueryResult"* [ %43, %40 ], [ %37, %35 ]
  %42 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %41, i64 0, i32 0
  tail call void @_ZN5blink13MediaQueryExpD1Ev(%"class.blink::MediaQueryExp"* %42) #14
  %43 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %41, i64 1
  %44 = icmp eq %"class.blink::MediaQueryResult"* %43, %39
  br i1 %44, label %45, label %40

45:                                               ; preds = %40
  store i32 0, i32* %32, align 4
  br label %46

46:                                               ; preds = %45, %31
  %47 = bitcast %"class.WTF::Vector.376"* %27 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = bitcast %"class.WTF::Vector.376"* %27 to i64*
  store atomic i64 0, i64* %49 monotonic, align 8
  store i32 0, i32* %28, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %48) #14
  br label %50

50:                                               ; preds = %26, %46
  %51 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 8, i32 0
  %52 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %51, align 8
  %53 = icmp eq %"class.blink::MediaQuerySet"* %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = tail call zeroext i1 @_ZNK5blink19MediaQueryEvaluator4EvalERKNS_13MediaQuerySetEPN3WTF6VectorINS_16MediaQueryResultELj0ENS4_18PartitionAllocatorEEES9_(%"class.blink::MediaQueryEvaluator"* %1, %"class.blink::MediaQuerySet"* nonnull dereferenceable(24) %52, %"class.WTF::Vector.376"* %3, %"class.WTF::Vector.376"* %27) #14
  br label %56

56:                                               ; preds = %50, %54
  %57 = phi i1 [ %55, %54 ], [ true, %50 ]
  ret i1 %57
}

declare zeroext i1 @_ZNK5blink19MediaQueryEvaluator4EvalERKNS_13MediaQuerySetEPN3WTF6VectorINS_16MediaQueryResultELj0ENS4_18PartitionAllocatorEEES9_(%"class.blink::MediaQueryEvaluator"*, %"class.blink::MediaQuerySet"* dereferenceable(24), %"class.WTF::Vector.376"*, %"class.WTF::Vector.376"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink13CSSStyleSheet6lengthEv(%"class.blink::CSSStyleSheet"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %2, align 8
  %4 = tail call i32 @_ZNK5blink18StyleSheetContents9RuleCountEv(%"class.blink::StyleSheetContents"* %3) #14
  ret i32 %4
}

declare i32 @_ZNK5blink18StyleSheetContents9RuleCountEv(%"class.blink::StyleSheetContents"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSRule"* @_ZN5blink13CSSStyleSheet4itemEj(%"class.blink::CSSStyleSheet"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %3, align 8
  %5 = tail call i32 @_ZNK5blink18StyleSheetContents9RuleCountEv(%"class.blink::StyleSheetContents"* %4) #14
  %6 = icmp ugt i32 %5, %1
  br i1 %6, label %7, label %54

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 18, i32 0
  %9 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %37

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp ult i32 %14, %5
  br i1 %15, label %16, label %26

16:                                               ; preds = %12
  %17 = lshr i32 %14, 2
  %18 = add nuw i32 %14, 1
  %19 = add i32 %18, %17
  %20 = icmp ugt i32 %19, 4
  %21 = select i1 %20, i32 %19, i32 4
  %22 = icmp ugt i32 %21, %5
  %23 = select i1 %22, i32 %21, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.502"* %8, i32 %23) #14
  %24 = load i32, i32* %9, align 4
  %25 = zext i32 %24 to i64
  br label %26

26:                                               ; preds = %12, %16
  %27 = phi i64 [ 0, %12 ], [ %25, %16 ]
  %28 = getelementptr inbounds %"class.WTF::Vector.502", %"class.WTF::Vector.502"* %8, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member.486"*, %"class.blink::Member.486"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %29, i64 %27
  %31 = zext i32 %5 to i64
  %32 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %29, i64 %31
  %33 = bitcast %"class.blink::Member.486"* %30 to i8*
  %34 = ptrtoint %"class.blink::Member.486"* %32 to i64
  %35 = ptrtoint %"class.blink::Member.486"* %30 to i64
  %36 = sub i64 %34, %35
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 %36, i1 false) #14
  store i32 %5, i32* %9, align 4
  br label %37

37:                                               ; preds = %26, %7
  %38 = tail call dereferenceable(8) %"class.blink::Member.486"* @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.502"* %8, i32 %1) #14
  %39 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %39, align 8
  %41 = icmp eq %"class.blink::CSSRule"* %40, null
  br i1 %41, label %42, label %54

42:                                               ; preds = %37
  %43 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %3, align 8
  %44 = tail call %"class.blink::StyleRuleBase"* @_ZNK5blink18StyleSheetContents6RuleAtEj(%"class.blink::StyleSheetContents"* %43, i32 %1) #14
  %45 = tail call %"class.blink::CSSRule"* @_ZNK5blink13StyleRuleBase18CreateCSSOMWrapperEPNS_13CSSStyleSheetE(%"class.blink::StyleRuleBase"* %44, %"class.blink::CSSStyleSheet"* %0) #14
  %46 = ptrtoint %"class.blink::CSSRule"* %45 to i64
  %47 = bitcast %"class.blink::Member.486"* %38 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  %48 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %54, label %50

50:                                               ; preds = %42
  %51 = bitcast %"class.blink::CSSRule"* %45 to i8*
  %52 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %51) #14
  %53 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %39, align 8
  br label %54

54:                                               ; preds = %42, %50, %37, %2
  %55 = phi %"class.blink::CSSRule"* [ null, %2 ], [ %40, %37 ], [ %53, %50 ], [ %45, %42 ]
  ret %"class.blink::CSSRule"* %55
}

declare %"class.blink::CSSRule"* @_ZNK5blink13StyleRuleBase18CreateCSSOMWrapperEPNS_13CSSStyleSheetE(%"class.blink::StyleRuleBase"*, %"class.blink::CSSStyleSheet"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13CSSStyleSheet14CanAccessRulesEv(%"class.blink::CSSStyleSheet"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 6
  %3 = load i8, i8* %2, align 4, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %7, i64 0, i32 10, i32 0, i32 0
  %9 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %8, align 8
  %10 = tail call zeroext i1 @_ZNK5blink16CSSParserContext13IsOriginCleanEv(%"class.blink::CSSParserContext"* %9) #14
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i1 [ true, %1 ], [ %10, %5 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSRuleList"* @_ZN5blink13CSSStyleSheet5rulesERNS_14ExceptionStateE(%"class.blink::CSSStyleSheet"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 6
  %4 = load i8, i8* %3, align 4, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %8, i64 0, i32 10, i32 0, i32 0
  %10 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %9, align 8
  %11 = tail call zeroext i1 @_ZNK5blink16CSSParserContext13IsOriginCleanEv(%"class.blink::CSSParserContext"* %10) #14
  br i1 %11, label %13, label %12

12:                                               ; preds = %6
  tail call void @_ZN5blink14ExceptionState18ThrowSecurityErrorEPKcS2_(%"class.blink::ExceptionState"* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.15, i64 0, i64 0), i8* null) #14
  br label %38

13:                                               ; preds = %6, %2
  %14 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 19
  %15 = getelementptr inbounds %"class.blink::Member.506", %"class.blink::Member.506"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::CSSRuleList"*, %"class.blink::CSSRuleList"** %15, align 8
  %17 = icmp eq %"class.blink::CSSRuleList"* %16, null
  br i1 %17, label %18, label %38

18:                                               ; preds = %13
  %19 = ptrtoint %"class.blink::CSSStyleSheet"* %0 to i64
  %20 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 24) #14
  %21 = getelementptr inbounds i8, i8* %20, i64 8
  %22 = bitcast i8* %21 to i64**
  store i64* null, i64** %22, align 8
  %23 = bitcast i8* %20 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink21StyleSheetCSSRuleListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds i8, i8* %20, i64 16
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %20, i64 -4
  %27 = bitcast i8* %26 to i16*
  %28 = load atomic i16, i16* %27 monotonic, align 2
  %29 = or i16 %28, 1
  store atomic i16 %29, i16* %27 release, align 2
  %30 = ptrtoint i8* %20 to i64
  %31 = bitcast %"class.blink::Member.506"* %14 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %33 = icmp eq i32 %32, 0
  %34 = bitcast i8* %20 to %"class.blink::CSSRuleList"*
  br i1 %33, label %38, label %35

35:                                               ; preds = %18
  %36 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #14
  %37 = load %"class.blink::CSSRuleList"*, %"class.blink::CSSRuleList"** %15, align 8
  br label %38

38:                                               ; preds = %12, %13, %18, %35
  %39 = phi %"class.blink::CSSRuleList"* [ null, %12 ], [ %16, %13 ], [ %37, %35 ], [ %34, %18 ]
  ret %"class.blink::CSSRuleList"* %39
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSRuleList"* @_ZN5blink13CSSStyleSheet8cssRulesERNS_14ExceptionStateE(%"class.blink::CSSStyleSheet"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 6
  %4 = load i8, i8* %3, align 4, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %8, i64 0, i32 10, i32 0, i32 0
  %10 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %9, align 8
  %11 = tail call zeroext i1 @_ZNK5blink16CSSParserContext13IsOriginCleanEv(%"class.blink::CSSParserContext"* %10) #14
  br i1 %11, label %13, label %12

12:                                               ; preds = %6
  tail call void @_ZN5blink14ExceptionState18ThrowSecurityErrorEPKcS2_(%"class.blink::ExceptionState"* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.15, i64 0, i64 0), i8* null) #14
  br label %38

13:                                               ; preds = %2, %6
  %14 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 19
  %15 = getelementptr inbounds %"class.blink::Member.506", %"class.blink::Member.506"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::CSSRuleList"*, %"class.blink::CSSRuleList"** %15, align 8
  %17 = icmp eq %"class.blink::CSSRuleList"* %16, null
  br i1 %17, label %18, label %38

18:                                               ; preds = %13
  %19 = ptrtoint %"class.blink::CSSStyleSheet"* %0 to i64
  %20 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 24) #14
  %21 = getelementptr inbounds i8, i8* %20, i64 8
  %22 = bitcast i8* %21 to i64**
  store i64* null, i64** %22, align 8
  %23 = bitcast i8* %20 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink21StyleSheetCSSRuleListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds i8, i8* %20, i64 16
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %20, i64 -4
  %27 = bitcast i8* %26 to i16*
  %28 = load atomic i16, i16* %27 monotonic, align 2
  %29 = or i16 %28, 1
  store atomic i16 %29, i16* %27 release, align 2
  %30 = ptrtoint i8* %20 to i64
  %31 = bitcast %"class.blink::Member.506"* %14 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %33 = icmp eq i32 %32, 0
  %34 = bitcast i8* %20 to %"class.blink::CSSRuleList"*
  br i1 %33, label %38, label %35

35:                                               ; preds = %18
  %36 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #14
  %37 = load %"class.blink::CSSRuleList"*, %"class.blink::CSSRuleList"** %15, align 8
  br label %38

38:                                               ; preds = %18, %35, %13, %12
  %39 = phi %"class.blink::CSSRuleList"* [ null, %12 ], [ %16, %13 ], [ %37, %35 ], [ %34, %18 ]
  ret %"class.blink::CSSRuleList"* %39
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink13CSSStyleSheet10insertRuleERKN3WTF6StringEjRNS_14ExceptionStateE(%"class.blink::CSSStyleSheet"*, %"class.WTF::String"* dereferenceable(8), i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringAppend.2433", align 8
  %6 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %7 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::StringAppend", align 8
  %10 = alloca %"class.WTF::StringAppend.2433", align 8
  %11 = alloca %"class.WTF::StringAppend.2434", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::StringAppend.2434", align 8
  %14 = alloca %"class.blink::Member.486", align 8
  %15 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 6
  %16 = load i8, i8* %15, align 4, !range !3
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  %20 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %20, i64 0, i32 10, i32 0, i32 0
  %22 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %21, align 8
  %23 = tail call zeroext i1 @_ZNK5blink16CSSParserContext13IsOriginCleanEv(%"class.blink::CSSParserContext"* %22) #14
  br i1 %23, label %25, label %24

24:                                               ; preds = %18
  tail call void @_ZN5blink14ExceptionState18ThrowSecurityErrorEPKcS2_(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i8* null) #14
  br label %597

25:                                               ; preds = %4, %18
  %26 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  %27 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %26, align 8
  %28 = tail call i32 @_ZNK5blink18StyleSheetContents9RuleCountEv(%"class.blink::StyleSheetContents"* %27) #14
  %29 = icmp ult i32 %28, %2
  br i1 %29, label %30, label %405

30:                                               ; preds = %25
  %31 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #14
  %32 = bitcast %"class.WTF::StringAppend"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %32) #14
  %33 = bitcast %"class.WTF::StringAppend.2433"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #14
  %34 = bitcast %"class.WTF::StringAppend.2434"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #14
  %35 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #14
  %36 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 11
  %37 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 2
  %38 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 3
  %39 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 32, i1 false) #14
  store i8* %36, i8** %37, align 8
  %40 = urem i32 %2, 10
  %41 = udiv i32 %2, 10
  %42 = trunc i32 %40 to i8
  %43 = or i8 %42, 48
  store i8 %43, i8* %36, align 1
  %44 = icmp ugt i32 %2, 9
  br i1 %44, label %45, label %60

45:                                               ; preds = %30
  %46 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 10
  store i8* %46, i8** %37, align 8
  %47 = urem i32 %41, 10
  %48 = trunc i32 %47 to i8
  %49 = or i8 %48, 48
  store i8 %49, i8* %46, align 2
  %50 = icmp ugt i32 %2, 99
  br i1 %50, label %51, label %58

51:                                               ; preds = %45
  %52 = udiv i32 %2, 100
  %53 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 9
  store i8* %53, i8** %37, align 8
  %54 = urem i32 %52, 10
  %55 = trunc i32 %54 to i8
  %56 = or i8 %55, 48
  store i8 %56, i8* %53, align 1
  %57 = icmp ugt i32 %2, 999
  br i1 %57, label %62, label %71

58:                                               ; preds = %45
  %59 = ptrtoint i8* %46 to i64
  br label %74

60:                                               ; preds = %30
  %61 = ptrtoint i8* %36 to i64
  br label %74

62:                                               ; preds = %51, %62
  %63 = phi i32 [ %65, %62 ], [ %52, %51 ]
  %64 = load i8*, i8** %37, align 8
  %65 = udiv i32 %63, 10
  %66 = getelementptr inbounds i8, i8* %64, i64 -1
  store i8* %66, i8** %37, align 8
  %67 = urem i32 %65, 10
  %68 = trunc i32 %67 to i8
  %69 = or i8 %68, 48
  store i8 %69, i8* %66, align 1
  %70 = icmp ugt i32 %63, 99
  br i1 %70, label %62, label %71

71:                                               ; preds = %62, %51
  %72 = bitcast i8** %37 to i64*
  %73 = load i64, i64* %72, align 8
  br label %74

74:                                               ; preds = %71, %58, %60
  %75 = phi i64 [ %61, %60 ], [ %73, %71 ], [ %59, %58 ]
  %76 = ptrtoint i8* %39 to i64
  %77 = sub i64 %76, %75
  %78 = trunc i64 %77 to i32
  store i32 %78, i32* %38, align 8
  %79 = inttoptr i64 %75 to i8*
  %80 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %79, i32 %78) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #14
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %157, label %82

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %99

89:                                               ; preds = %82
  %90 = zext i32 %88 to i33
  %91 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #14
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !2

96:                                               ; preds = %89
  call void @llvm.trap() #14
  unreachable

97:                                               ; preds = %89
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %87, align 4
  br label %99

99:                                               ; preds = %97, %82
  %100 = phi i32 [ %98, %97 ], [ %88, %82 ]
  %101 = load atomic i32, i32* %83 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %114

104:                                              ; preds = %99
  %105 = zext i32 %100 to i33
  %106 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %105, i33 1) #14
  %107 = extractvalue { i33, i1 } %106, 1
  %108 = extractvalue { i33, i1 } %106, 0
  %109 = icmp slt i33 %108, 0
  %110 = or i1 %107, %109
  br i1 %110, label %111, label %112, !prof !2

111:                                              ; preds = %104
  call void @llvm.trap() #14
  unreachable

112:                                              ; preds = %104
  %113 = trunc i33 %108 to i32
  store i32 %113, i32* %87, align 4
  br label %114

114:                                              ; preds = %112, %99
  %115 = phi i32 [ %113, %112 ], [ %100, %99 ]
  %116 = load atomic i32, i32* %83 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %114
  %120 = add i32 %115, -1
  store i32 %120, i32* %87, align 4
  br label %121

121:                                              ; preds = %119, %114
  %122 = phi i32 [ %120, %119 ], [ %115, %114 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #14
  br label %125

125:                                              ; preds = %121, %124
  %126 = load atomic i32, i32* %83 monotonic, align 4, !noalias !5
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = load i32, i32* %87, align 4
  br i1 %128, label %130, label %140

130:                                              ; preds = %125
  %131 = zext i32 %129 to i33
  %132 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %131, i33 1) #14
  %133 = extractvalue { i33, i1 } %132, 1
  %134 = extractvalue { i33, i1 } %132, 0
  %135 = icmp slt i33 %134, 0
  %136 = or i1 %133, %135
  br i1 %136, label %137, label %138, !prof !2

137:                                              ; preds = %130
  call void @llvm.trap() #14, !noalias !5
  unreachable

138:                                              ; preds = %130
  %139 = trunc i33 %134 to i32
  store i32 %139, i32* %87, align 4, !noalias !5
  br label %140

140:                                              ; preds = %125, %138
  %141 = phi i32 [ %139, %138 ], [ %129, %125 ]
  %142 = bitcast %"class.WTF::StringAppend.2434"* %11 to i64*
  store i64 ptrtoint ([21 x i8]* @.str.1 to i64), i64* %142, align 8, !alias.scope !5
  %143 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %80, %"class.WTF::StringImpl"** %143, align 8, !alias.scope !5
  %144 = load atomic i32, i32* %83 monotonic, align 4, !noalias !5
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %161

147:                                              ; preds = %140
  %148 = zext i32 %141 to i33
  %149 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %148, i33 1) #14
  %150 = extractvalue { i33, i1 } %149, 1
  %151 = extractvalue { i33, i1 } %149, 0
  %152 = icmp slt i33 %151, 0
  %153 = or i1 %150, %152
  br i1 %153, label %154, label %155, !prof !2

154:                                              ; preds = %147
  call void @llvm.trap() #14, !noalias !5
  unreachable

155:                                              ; preds = %147
  %156 = trunc i33 %151 to i32
  store i32 %156, i32* %87, align 4, !noalias !5
  br label %161

157:                                              ; preds = %74
  %158 = bitcast %"class.WTF::StringAppend.2434"* %11 to i64*
  store i64 ptrtoint ([21 x i8]* @.str.1 to i64), i64* %158, align 8, !alias.scope !5
  %159 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %159, align 8, !alias.scope !5
  %160 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i64 0, i64 0), i8** %160, align 8, !alias.scope !5
  br label %173

161:                                              ; preds = %155, %140
  %162 = phi i32 [ %156, %155 ], [ %141, %140 ]
  %163 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i64 0, i64 0), i8** %163, align 8, !alias.scope !5
  %164 = load atomic i32, i32* %83 monotonic, align 4, !noalias !5
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %169

167:                                              ; preds = %161
  %168 = add i32 %162, -1
  store i32 %168, i32* %87, align 4, !noalias !5
  br label %169

169:                                              ; preds = %167, %161
  %170 = phi i32 [ %168, %167 ], [ %162, %161 ]
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %173

172:                                              ; preds = %169
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #14, !noalias !5
  br label %173

173:                                              ; preds = %157, %169, %172
  %174 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %26, align 8
  %175 = call i32 @_ZNK5blink18StyleSheetContents9RuleCountEv(%"class.blink::StyleSheetContents"* %174) #14
  %176 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %176) #14
  %177 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 11
  %178 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 2
  %179 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 3
  %180 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %176, i8 -86, i64 32, i1 false) #14
  store i8* %177, i8** %178, align 8
  %181 = urem i32 %175, 10
  %182 = udiv i32 %175, 10
  %183 = trunc i32 %181 to i8
  %184 = or i8 %183, 48
  store i8 %184, i8* %177, align 1
  %185 = icmp ugt i32 %175, 9
  br i1 %185, label %186, label %201

186:                                              ; preds = %173
  %187 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 10
  store i8* %187, i8** %178, align 8
  %188 = urem i32 %182, 10
  %189 = trunc i32 %188 to i8
  %190 = or i8 %189, 48
  store i8 %190, i8* %187, align 2
  %191 = icmp ugt i32 %175, 99
  br i1 %191, label %192, label %199

192:                                              ; preds = %186
  %193 = udiv i32 %175, 100
  %194 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 9
  store i8* %194, i8** %178, align 8
  %195 = urem i32 %193, 10
  %196 = trunc i32 %195 to i8
  %197 = or i8 %196, 48
  store i8 %197, i8* %194, align 1
  %198 = icmp ugt i32 %175, 999
  br i1 %198, label %203, label %212

199:                                              ; preds = %186
  %200 = ptrtoint i8* %187 to i64
  br label %215

201:                                              ; preds = %173
  %202 = ptrtoint i8* %177 to i64
  br label %215

203:                                              ; preds = %192, %203
  %204 = phi i32 [ %206, %203 ], [ %193, %192 ]
  %205 = load i8*, i8** %178, align 8
  %206 = udiv i32 %204, 10
  %207 = getelementptr inbounds i8, i8* %205, i64 -1
  store i8* %207, i8** %178, align 8
  %208 = urem i32 %206, 10
  %209 = trunc i32 %208 to i8
  %210 = or i8 %209, 48
  store i8 %210, i8* %207, align 1
  %211 = icmp ugt i32 %204, 99
  br i1 %211, label %203, label %212

212:                                              ; preds = %203, %192
  %213 = bitcast i8** %178 to i64*
  %214 = load i64, i64* %213, align 8
  br label %215

215:                                              ; preds = %212, %199, %201
  %216 = phi i64 [ %202, %201 ], [ %214, %212 ], [ %200, %199 ]
  %217 = ptrtoint i8* %180 to i64
  %218 = sub i64 %217, %216
  %219 = trunc i64 %218 to i32
  store i32 %219, i32* %179, align 8
  %220 = inttoptr i64 %216 to i8*
  %221 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %220, i32 %219) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %176) #14
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.2433"* nonnull sret %10, %"class.WTF::StringAppend.2434"* nonnull dereferenceable(24) %11, %"class.WTF::StringImpl"* %221)
  %222 = bitcast %"class.WTF::StringAppend.2433"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %222)
  %223 = bitcast %"class.WTF::StringAppend.2433"* %10 to i64*
  %224 = load i64, i64* %223, align 8, !noalias !8
  %225 = bitcast %"class.WTF::StringAppend.2433"* %5 to i64*
  store i64 %224, i64* %225, align 8, !noalias !8
  %226 = getelementptr inbounds %"class.WTF::StringAppend.2433", %"class.WTF::StringAppend.2433"* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %227 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %226, align 8, !noalias !8
  %228 = getelementptr inbounds %"class.WTF::StringAppend.2433", %"class.WTF::StringAppend.2433"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %227, %"class.WTF::StringImpl"** %228, align 8, !noalias !8
  %229 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %229, label %247, label %230

230:                                              ; preds = %215
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = load atomic i32, i32* %231 monotonic, align 4
  %233 = and i32 %232, 2
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %247

235:                                              ; preds = %230
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %237 = load i32, i32* %236, align 4
  %238 = zext i32 %237 to i33
  %239 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %238, i33 1) #14
  %240 = extractvalue { i33, i1 } %239, 1
  %241 = extractvalue { i33, i1 } %239, 0
  %242 = icmp slt i33 %241, 0
  %243 = or i1 %240, %242
  br i1 %243, label %244, label %245, !prof !2

244:                                              ; preds = %235
  call void @llvm.trap() #14
  unreachable

245:                                              ; preds = %235
  %246 = trunc i33 %241 to i32
  store i32 %246, i32* %236, align 4
  br label %247

247:                                              ; preds = %245, %230, %215
  %248 = getelementptr inbounds %"class.WTF::StringAppend.2433", %"class.WTF::StringAppend.2433"* %5, i64 0, i32 0, i32 1
  %249 = getelementptr inbounds %"class.WTF::StringAppend.2433", %"class.WTF::StringAppend.2433"* %10, i64 0, i32 0, i32 1
  %250 = bitcast i8** %249 to i64*
  %251 = load i64, i64* %250, align 8, !noalias !8
  %252 = bitcast i8** %248 to i64*
  store i64 %251, i64* %252, align 8, !noalias !8
  %253 = getelementptr inbounds %"class.WTF::StringAppend.2433", %"class.WTF::StringAppend.2433"* %10, i64 0, i32 1, i32 0, i32 0
  %254 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %253, align 8, !noalias !8
  %255 = getelementptr inbounds %"class.WTF::StringAppend.2433", %"class.WTF::StringAppend.2433"* %5, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %254, %"class.WTF::StringImpl"** %255, align 8, !noalias !8
  %256 = icmp eq %"class.WTF::StringImpl"* %254, null
  br i1 %256, label %274, label %257

257:                                              ; preds = %247
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load atomic i32, i32* %258 monotonic, align 4
  %260 = and i32 %259, 2
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %274

262:                                              ; preds = %257
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 0
  %264 = load i32, i32* %263, align 4
  %265 = zext i32 %264 to i33
  %266 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %265, i33 1) #14
  %267 = extractvalue { i33, i1 } %266, 1
  %268 = extractvalue { i33, i1 } %266, 0
  %269 = icmp slt i33 %268, 0
  %270 = or i1 %267, %269
  br i1 %270, label %271, label %272, !prof !2

271:                                              ; preds = %262
  call void @llvm.trap() #14
  unreachable

272:                                              ; preds = %262
  %273 = trunc i33 %268 to i32
  store i32 %273, i32* %263, align 4
  br label %274

274:                                              ; preds = %247, %257, %272
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend"* nonnull %9, %"class.WTF::StringAppend.2433"* nonnull byval(%"class.WTF::StringAppend.2433") align 8 %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0)) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %222)
  %275 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %9)
  %276 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %275, %"class.WTF::StringImpl"** %276, align 8
  %277 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %278 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %277, align 8
  %279 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %278, align 8
  call void %279(%"class.blink::ExceptionState"* %3, i32 1, %"class.WTF::String"* nonnull dereferenceable(8) %8) #14
  %280 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %276, align 8
  %281 = icmp eq %"class.WTF::StringImpl"* %280, null
  br i1 %281, label %295, label %282

282:                                              ; preds = %274
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %280, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %284 = load atomic i32, i32* %283 monotonic, align 4
  %285 = and i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %280, i64 0, i32 0
  %288 = load i32, i32* %287, align 4
  br i1 %286, label %289, label %291

289:                                              ; preds = %282
  %290 = add i32 %288, -1
  store i32 %290, i32* %287, align 4
  br label %291

291:                                              ; preds = %289, %282
  %292 = phi i32 [ %290, %289 ], [ %288, %282 ]
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %295

294:                                              ; preds = %291
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %280) #14
  br label %295

295:                                              ; preds = %274, %291, %294
  %296 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %297 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %296, align 8
  %298 = icmp eq %"class.WTF::StringImpl"* %297, null
  br i1 %298, label %312, label %299

299:                                              ; preds = %295
  %300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %297, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %301 = load atomic i32, i32* %300 monotonic, align 4
  %302 = and i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %297, i64 0, i32 0
  %305 = load i32, i32* %304, align 4
  br i1 %303, label %306, label %308

306:                                              ; preds = %299
  %307 = add i32 %305, -1
  store i32 %307, i32* %304, align 4
  br label %308

308:                                              ; preds = %306, %299
  %309 = phi i32 [ %307, %306 ], [ %305, %299 ]
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %312

311:                                              ; preds = %308
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %297) #14
  br label %312

312:                                              ; preds = %311, %308, %295
  %313 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %314 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %313, align 8
  %315 = icmp eq %"class.WTF::StringImpl"* %314, null
  br i1 %315, label %329, label %316

316:                                              ; preds = %312
  %317 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %314, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %318 = load atomic i32, i32* %317 monotonic, align 4
  %319 = and i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %314, i64 0, i32 0
  %322 = load i32, i32* %321, align 4
  br i1 %320, label %323, label %325

323:                                              ; preds = %316
  %324 = add i32 %322, -1
  store i32 %324, i32* %321, align 4
  br label %325

325:                                              ; preds = %323, %316
  %326 = phi i32 [ %324, %323 ], [ %322, %316 ]
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %328, label %329

328:                                              ; preds = %325
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %314) #14
  br label %329

329:                                              ; preds = %312, %325, %328
  %330 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %253, align 8
  %331 = icmp eq %"class.WTF::StringImpl"* %330, null
  br i1 %331, label %345, label %332

332:                                              ; preds = %329
  %333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %330, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %334 = load atomic i32, i32* %333 monotonic, align 4
  %335 = and i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %330, i64 0, i32 0
  %338 = load i32, i32* %337, align 4
  br i1 %336, label %339, label %341

339:                                              ; preds = %332
  %340 = add i32 %338, -1
  store i32 %340, i32* %337, align 4
  br label %341

341:                                              ; preds = %339, %332
  %342 = phi i32 [ %340, %339 ], [ %338, %332 ]
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %344, label %345

344:                                              ; preds = %341
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %330) #14
  br label %345

345:                                              ; preds = %344, %341, %329
  %346 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %226, align 8
  %347 = icmp eq %"class.WTF::StringImpl"* %346, null
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %346, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %350 = load atomic i32, i32* %349 monotonic, align 4
  %351 = and i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %346, i64 0, i32 0
  %354 = load i32, i32* %353, align 4
  br i1 %352, label %355, label %357

355:                                              ; preds = %348
  %356 = add i32 %354, -1
  store i32 %356, i32* %353, align 4
  br label %357

357:                                              ; preds = %355, %348
  %358 = phi i32 [ %356, %355 ], [ %354, %348 ]
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %360, label %361

360:                                              ; preds = %357
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %346) #14
  br label %361

361:                                              ; preds = %345, %357, %360
  %362 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %363 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %362, align 8
  %364 = icmp eq %"class.WTF::StringImpl"* %363, null
  br i1 %364, label %378, label %365

365:                                              ; preds = %361
  %366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %363, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %367 = load atomic i32, i32* %366 monotonic, align 4
  %368 = and i32 %367, 2
  %369 = icmp eq i32 %368, 0
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %363, i64 0, i32 0
  %371 = load i32, i32* %370, align 4
  br i1 %369, label %372, label %374

372:                                              ; preds = %365
  %373 = add i32 %371, -1
  store i32 %373, i32* %370, align 4
  br label %374

374:                                              ; preds = %372, %365
  %375 = phi i32 [ %373, %372 ], [ %371, %365 ]
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %377, label %378

377:                                              ; preds = %374
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %363) #14
  br label %378

378:                                              ; preds = %361, %374, %377
  br i1 %81, label %404, label %379

379:                                              ; preds = %378
  %380 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %381 = load atomic i32, i32* %380 monotonic, align 4
  %382 = and i32 %381, 2
  %383 = icmp eq i32 %382, 0
  %384 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %385 = load i32, i32* %384, align 4
  br i1 %383, label %386, label %388

386:                                              ; preds = %379
  %387 = add i32 %385, -1
  store i32 %387, i32* %384, align 4
  br label %388

388:                                              ; preds = %386, %379
  %389 = phi i32 [ %387, %386 ], [ %385, %379 ]
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %391, label %393

391:                                              ; preds = %388
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #14
  %392 = load i32, i32* %384, align 4
  br label %393

393:                                              ; preds = %388, %391
  %394 = phi i32 [ %389, %388 ], [ %392, %391 ]
  %395 = load atomic i32, i32* %380 monotonic, align 4
  %396 = and i32 %395, 2
  %397 = icmp eq i32 %396, 0
  br i1 %397, label %398, label %400

398:                                              ; preds = %393
  %399 = add i32 %394, -1
  store i32 %399, i32* %384, align 4
  br label %400

400:                                              ; preds = %398, %393
  %401 = phi i32 [ %399, %398 ], [ %394, %393 ]
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %403, label %404

403:                                              ; preds = %400
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #14
  br label %404

404:                                              ; preds = %378, %400, %403
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %32) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #14
  br label %597

405:                                              ; preds = %25
  %406 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %26, align 8
  %407 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %406, i64 0, i32 10, i32 0, i32 0
  %408 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %407, align 8
  %409 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #14
  %410 = bitcast i8* %409 to %"class.blink::CSSParserContext"*
  tail call void @_ZN5blink16CSSParserContextC1EPKS0_PKNS_13CSSStyleSheetE(%"class.blink::CSSParserContext"* %410, %"class.blink::CSSParserContext"* %408, %"class.blink::CSSStyleSheet"* %0) #14
  %411 = getelementptr inbounds i8, i8* %409, i64 -4
  %412 = bitcast i8* %411 to i16*
  %413 = load atomic i16, i16* %412 monotonic, align 2
  %414 = or i16 %413, 1
  store atomic i16 %414, i16* %412 release, align 2
  %415 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %26, align 8
  %416 = tail call %"class.blink::StyleRuleBase"* @_ZN5blink9CSSParser9ParseRuleEPKNS_16CSSParserContextEPNS_18StyleSheetContentsERKN3WTF6StringE(%"class.blink::CSSParserContext"* %410, %"class.blink::StyleSheetContents"* %415, %"class.WTF::String"* dereferenceable(8) %1) #14
  %417 = icmp eq %"class.blink::StyleRuleBase"* %416, null
  br i1 %417, label %418, label %568

418:                                              ; preds = %405
  %419 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %419) #14
  %420 = bitcast %"class.WTF::StringAppend.2434"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %420) #14
  %421 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %422 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %421, align 8
  %423 = icmp eq %"class.WTF::StringImpl"* %422, null
  br i1 %423, label %499, label %424

424:                                              ; preds = %418
  %425 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %422, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %426 = load atomic i32, i32* %425 monotonic, align 4
  %427 = and i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %422, i64 0, i32 0
  %430 = load i32, i32* %429, align 4
  br i1 %428, label %431, label %441

431:                                              ; preds = %424
  %432 = zext i32 %430 to i33
  %433 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %432, i33 1) #14
  %434 = extractvalue { i33, i1 } %433, 1
  %435 = extractvalue { i33, i1 } %433, 0
  %436 = icmp slt i33 %435, 0
  %437 = or i1 %434, %436
  br i1 %437, label %438, label %439, !prof !2

438:                                              ; preds = %431
  tail call void @llvm.trap() #14
  unreachable

439:                                              ; preds = %431
  %440 = trunc i33 %435 to i32
  store i32 %440, i32* %429, align 4
  br label %441

441:                                              ; preds = %439, %424
  %442 = phi i32 [ %440, %439 ], [ %430, %424 ]
  %443 = load atomic i32, i32* %425 monotonic, align 4
  %444 = and i32 %443, 2
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %446, label %456

446:                                              ; preds = %441
  %447 = zext i32 %442 to i33
  %448 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %447, i33 1) #14
  %449 = extractvalue { i33, i1 } %448, 1
  %450 = extractvalue { i33, i1 } %448, 0
  %451 = icmp slt i33 %450, 0
  %452 = or i1 %449, %451
  br i1 %452, label %453, label %454, !prof !2

453:                                              ; preds = %446
  tail call void @llvm.trap() #14
  unreachable

454:                                              ; preds = %446
  %455 = trunc i33 %450 to i32
  store i32 %455, i32* %429, align 4
  br label %456

456:                                              ; preds = %454, %441
  %457 = phi i32 [ %455, %454 ], [ %442, %441 ]
  %458 = load atomic i32, i32* %425 monotonic, align 4
  %459 = and i32 %458, 2
  %460 = icmp eq i32 %459, 0
  br i1 %460, label %461, label %463

461:                                              ; preds = %456
  %462 = add i32 %457, -1
  store i32 %462, i32* %429, align 4
  br label %463

463:                                              ; preds = %461, %456
  %464 = phi i32 [ %462, %461 ], [ %457, %456 ]
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %466, label %467

466:                                              ; preds = %463
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %422) #14
  br label %467

467:                                              ; preds = %463, %466
  %468 = load atomic i32, i32* %425 monotonic, align 4, !noalias !11
  %469 = and i32 %468, 2
  %470 = icmp eq i32 %469, 0
  %471 = load i32, i32* %429, align 4
  br i1 %470, label %472, label %482

472:                                              ; preds = %467
  %473 = zext i32 %471 to i33
  %474 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %473, i33 1) #14
  %475 = extractvalue { i33, i1 } %474, 1
  %476 = extractvalue { i33, i1 } %474, 0
  %477 = icmp slt i33 %476, 0
  %478 = or i1 %475, %477
  br i1 %478, label %479, label %480, !prof !2

479:                                              ; preds = %472
  tail call void @llvm.trap() #14, !noalias !11
  unreachable

480:                                              ; preds = %472
  %481 = trunc i33 %476 to i32
  store i32 %481, i32* %429, align 4, !noalias !11
  br label %482

482:                                              ; preds = %467, %480
  %483 = phi i32 [ %481, %480 ], [ %471, %467 ]
  %484 = bitcast %"class.WTF::StringAppend.2434"* %13 to i64*
  store i64 ptrtoint ([27 x i8]* @.str.4 to i64), i64* %484, align 8, !alias.scope !11
  %485 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %422, %"class.WTF::StringImpl"** %485, align 8, !alias.scope !11
  %486 = load atomic i32, i32* %425 monotonic, align 4, !noalias !11
  %487 = and i32 %486, 2
  %488 = icmp eq i32 %487, 0
  br i1 %488, label %489, label %503

489:                                              ; preds = %482
  %490 = zext i32 %483 to i33
  %491 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %490, i33 1) #14
  %492 = extractvalue { i33, i1 } %491, 1
  %493 = extractvalue { i33, i1 } %491, 0
  %494 = icmp slt i33 %493, 0
  %495 = or i1 %492, %494
  br i1 %495, label %496, label %497, !prof !2

496:                                              ; preds = %489
  tail call void @llvm.trap() #14, !noalias !11
  unreachable

497:                                              ; preds = %489
  %498 = trunc i33 %493 to i32
  store i32 %498, i32* %429, align 4, !noalias !11
  br label %503

499:                                              ; preds = %418
  %500 = bitcast %"class.WTF::StringAppend.2434"* %13 to i64*
  store i64 ptrtoint ([27 x i8]* @.str.4 to i64), i64* %500, align 8, !alias.scope !11
  %501 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %501, align 8, !alias.scope !11
  %502 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %502, align 8, !alias.scope !11
  br label %515

503:                                              ; preds = %497, %482
  %504 = phi i32 [ %498, %497 ], [ %483, %482 ]
  %505 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %505, align 8, !alias.scope !11
  %506 = load atomic i32, i32* %425 monotonic, align 4, !noalias !11
  %507 = and i32 %506, 2
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %509, label %511

509:                                              ; preds = %503
  %510 = add i32 %504, -1
  store i32 %510, i32* %429, align 4, !noalias !11
  br label %511

511:                                              ; preds = %509, %503
  %512 = phi i32 [ %510, %509 ], [ %504, %503 ]
  %513 = icmp eq i32 %512, 0
  br i1 %513, label %514, label %515

514:                                              ; preds = %511
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %422) #14, !noalias !11
  br label %515

515:                                              ; preds = %499, %511, %514
  %516 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.2434"* nonnull %13)
  %517 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %516, %"class.WTF::StringImpl"** %517, align 8
  %518 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %519 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %518, align 8
  %520 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %519, align 8
  call void %520(%"class.blink::ExceptionState"* %3, i32 12, %"class.WTF::String"* nonnull dereferenceable(8) %12) #14
  %521 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %517, align 8
  %522 = icmp eq %"class.WTF::StringImpl"* %521, null
  br i1 %522, label %536, label %523

523:                                              ; preds = %515
  %524 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %521, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %525 = load atomic i32, i32* %524 monotonic, align 4
  %526 = and i32 %525, 2
  %527 = icmp eq i32 %526, 0
  %528 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %521, i64 0, i32 0
  %529 = load i32, i32* %528, align 4
  br i1 %527, label %530, label %532

530:                                              ; preds = %523
  %531 = add i32 %529, -1
  store i32 %531, i32* %528, align 4
  br label %532

532:                                              ; preds = %530, %523
  %533 = phi i32 [ %531, %530 ], [ %529, %523 ]
  %534 = icmp eq i32 %533, 0
  br i1 %534, label %535, label %536

535:                                              ; preds = %532
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %521) #14
  br label %536

536:                                              ; preds = %515, %532, %535
  %537 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  %538 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %537, align 8
  %539 = icmp eq %"class.WTF::StringImpl"* %538, null
  br i1 %539, label %553, label %540

540:                                              ; preds = %536
  %541 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %538, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %542 = load atomic i32, i32* %541 monotonic, align 4
  %543 = and i32 %542, 2
  %544 = icmp eq i32 %543, 0
  %545 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %538, i64 0, i32 0
  %546 = load i32, i32* %545, align 4
  br i1 %544, label %547, label %549

547:                                              ; preds = %540
  %548 = add i32 %546, -1
  store i32 %548, i32* %545, align 4
  br label %549

549:                                              ; preds = %547, %540
  %550 = phi i32 [ %548, %547 ], [ %546, %540 ]
  %551 = icmp eq i32 %550, 0
  br i1 %551, label %552, label %553

552:                                              ; preds = %549
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %538) #14
  br label %553

553:                                              ; preds = %536, %549, %552
  br i1 %423, label %567, label %554

554:                                              ; preds = %553
  %555 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %422, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %556 = load atomic i32, i32* %555 monotonic, align 4
  %557 = and i32 %556, 2
  %558 = icmp eq i32 %557, 0
  %559 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %422, i64 0, i32 0
  %560 = load i32, i32* %559, align 4
  br i1 %558, label %561, label %563

561:                                              ; preds = %554
  %562 = add i32 %560, -1
  store i32 %562, i32* %559, align 4
  br label %563

563:                                              ; preds = %561, %554
  %564 = phi i32 [ %562, %561 ], [ %560, %554 ]
  %565 = icmp eq i32 %564, 0
  br i1 %565, label %566, label %567

566:                                              ; preds = %563
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %422) #14
  br label %567

567:                                              ; preds = %553, %563, %566
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %420) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %419) #14
  br label %597

568:                                              ; preds = %405
  tail call void @_ZN5blink13CSSStyleSheet15WillMutateRulesEv(%"class.blink::CSSStyleSheet"* %0) #14
  %569 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %416, i64 0, i32 0
  %570 = load i8, i8* %569, align 1
  %571 = icmp eq i8 %570, 2
  br i1 %571, label %572, label %577

572:                                              ; preds = %568
  %573 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 14, i32 0, i32 0
  %574 = load %"class.blink::Document"*, %"class.blink::Document"** %573, align 8
  %575 = icmp eq %"class.blink::Document"* %574, null
  br i1 %575, label %577, label %576

576:                                              ; preds = %572
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 12, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.6, i64 0, i64 0)) #14
  br label %593

577:                                              ; preds = %572, %568
  %578 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %26, align 8
  %579 = tail call zeroext i1 @_ZN5blink18StyleSheetContents17WrapperInsertRuleEPNS_13StyleRuleBaseEj(%"class.blink::StyleSheetContents"* %578, %"class.blink::StyleRuleBase"* nonnull %416, i32 %2) #14
  br i1 %579, label %585, label %580

580:                                              ; preds = %577
  %581 = load i8, i8* %569, align 1
  %582 = icmp eq i8 %581, 9
  br i1 %582, label %583, label %584

583:                                              ; preds = %580
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 11, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0)) #14
  br label %593

584:                                              ; preds = %580
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0)) #14
  br label %593

585:                                              ; preds = %577
  %586 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2
  %587 = load i32, i32* %586, align 4
  %588 = icmp eq i32 %587, 0
  br i1 %588, label %593, label %589

589:                                              ; preds = %585
  %590 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 18, i32 0
  %591 = bitcast %"class.blink::Member.486"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %591) #14
  %592 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %14, i64 0, i32 0, i32 0
  store %"class.blink::CSSRule"* null, %"class.blink::CSSRule"** %592, align 8
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE6insertIS4_EEvjOT_(%"class.WTF::Vector.502"* %590, i32 %2, %"class.blink::Member.486"* nonnull dereferenceable(8) %14)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %591) #14
  br label %593

593:                                              ; preds = %584, %583, %589, %585, %576
  %594 = phi i32 [ 0, %576 ], [ 0, %584 ], [ 0, %583 ], [ %2, %589 ], [ %2, %585 ]
  %595 = icmp eq %"class.blink::CSSStyleSheet"* %0, null
  br i1 %595, label %597, label %596

596:                                              ; preds = %593
  call void @_ZN5blink13CSSStyleSheet9DidMutateENS0_8MutationE(%"class.blink::CSSStyleSheet"* nonnull %0, i32 1) #14
  br label %597

597:                                              ; preds = %596, %593, %567, %404, %24
  %598 = phi i32 [ 0, %404 ], [ 0, %24 ], [ 0, %567 ], [ %594, %593 ], [ %594, %596 ]
  ret i32 %598
}

declare void @_ZN5blink14ExceptionState18ThrowSecurityErrorEPKcS2_(%"class.blink::ExceptionState"*, i8*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.2433"* noalias sret, %"class.WTF::StringAppend.2434"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.2434", align 8
  %5 = bitcast %"class.WTF::StringAppend.2434"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.2434"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #14
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #14
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %1, i64 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #14
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %41
  tail call void @llvm.trap() #14
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %54

53:                                               ; preds = %29
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.2433"* %0, %"class.WTF::StringAppend.2434"* nonnull byval(%"class.WTF::StringAppend.2434") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %66

54:                                               ; preds = %36, %51
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.2433"* %0, %"class.WTF::StringAppend.2434"* nonnull byval(%"class.WTF::StringAppend.2434") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %54
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i32 [ %61, %60 ], [ %59, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #14
  br label %66

66:                                               ; preds = %53, %62, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2670", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2670", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2670", align 8
  %5 = alloca i8*, align 8
  %6 = alloca i16*, align 8
  %7 = bitcast %"class.WTF::StringTypeAdapter.2670"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false) #14
  %9 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2670"* nonnull %4, i8* %9) #14
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = bitcast %"class.WTF::StringTypeAdapter.2670"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #14
  %15 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2670"* nonnull %3, i8* %15) #14
  %16 = bitcast %"class.WTF::StringTypeAdapter.2670"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #14
  %18 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2670"* nonnull %2, i8* %18) #14
  %19 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %23 = select i1 %21, %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"* %20
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #14
  br i1 %27, label %28, label %29

28:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #14
  br label %72

29:                                               ; preds = %1
  %30 = icmp eq %"class.WTF::StringImpl"* %11, null
  %31 = select i1 %30, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %11
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #14
  br i1 %35, label %72, label %36

36:                                               ; preds = %29
  %37 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #14
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %38 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %39 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %38, i8** nonnull dereferenceable(8) %5) #14
  %40 = load i8*, i8** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %40)
  %41 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %41, label %108, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %59

49:                                               ; preds = %42
  %50 = zext i32 %48 to i33
  %51 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #14
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !2

56:                                               ; preds = %49
  call void @llvm.trap() #14
  unreachable

57:                                               ; preds = %49
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %47, align 4
  br label %59

59:                                               ; preds = %42, %57
  %60 = phi i32 [ %58, %57 ], [ %48, %42 ]
  %61 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %62 = load atomic i32, i32* %43 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %67 = add i32 %60, -1
  store i32 %67, i32* %66, align 4
  br label %68

68:                                               ; preds = %65, %59
  %69 = phi i32 [ %67, %65 ], [ %60, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %108

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #14
  br label %108

72:                                               ; preds = %29, %28
  %73 = bitcast i16** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #14
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %6, align 8
  %74 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %75 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %74, i16** nonnull dereferenceable(8) %6) #14
  %76 = load i16*, i16** %6, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %76)
  %77 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %77, label %108, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %95

85:                                               ; preds = %78
  %86 = zext i32 %84 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #14
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !2

92:                                               ; preds = %85
  call void @llvm.trap() #14
  unreachable

93:                                               ; preds = %85
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %83, align 4
  br label %95

95:                                               ; preds = %78, %93
  %96 = phi i32 [ %94, %93 ], [ %84, %78 ]
  %97 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %98 = load atomic i32, i32* %79 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %103 = add i32 %96, -1
  store i32 %103, i32* %102, align 4
  br label %104

104:                                              ; preds = %101, %95
  %105 = phi i32 [ %103, %101 ], [ %96, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #14
  br label %108

108:                                              ; preds = %107, %104, %72, %71, %68, %36
  %109 = phi i8* [ %37, %36 ], [ %37, %68 ], [ %37, %71 ], [ %73, %72 ], [ %73, %104 ], [ %73, %107 ]
  %110 = phi i64 [ 0, %36 ], [ %61, %68 ], [ %61, %71 ], [ 0, %72 ], [ %97, %104 ], [ %97, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #14
  %111 = inttoptr i64 %110 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %111
}

declare %"class.blink::StyleRuleBase"* @_ZN5blink9CSSParser9ParseRuleEPKNS_16CSSParserContextEPNS_18StyleSheetContentsERKN3WTF6StringE(%"class.blink::CSSParserContext"*, %"class.blink::StyleSheetContents"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.2434"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2670", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2670", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.2670"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #14
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2670"* nonnull %3, i8* %8) #14
  %9 = bitcast %"class.WTF::StringTypeAdapter.2670"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #14
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2670"* nonnull %2, i8* %11) #14
  %12 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #14
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2434"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #14
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.2434"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #14
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  call void @llvm.trap() #14
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #14
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #14
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2434"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #14
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.2434"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #14
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #14
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #14
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #14
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink18StyleSheetContents17WrapperInsertRuleEPNS_13StyleRuleBaseEj(%"class.blink::StyleSheetContents"*, %"class.blink::StyleRuleBase"*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE6insertIS4_EEvjOT_(%"class.WTF::Vector.502"*, i32, %"class.blink::Member.486"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.502", %"class.WTF::Vector.502"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ult i32 %10, %1
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %8, align 8
  br label %23

14:                                               ; preds = %3
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.38, i64 0, i64 0), i8* %15, i8* %16) #14
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %8, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.26, i64 0, i64 0), i32 1969, %"class.logging::CheckOpResult"* nonnull %5) #14
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #14
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  %24 = load i32, i32* %9, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector.502", %"class.WTF::Vector.502"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %57

28:                                               ; preds = %23
  %29 = add i32 %24, 1
  %30 = getelementptr inbounds %"class.WTF::Vector.502", %"class.WTF::Vector.502"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::Member.486"*, %"class.blink::Member.486"** %30, align 8
  %32 = icmp ugt %"class.blink::Member.486"* %31, %2
  br i1 %32, label %37, label %33

33:                                               ; preds = %28
  %34 = zext i32 %24 to i64
  %35 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %31, i64 %34
  %36 = icmp ugt %"class.blink::Member.486"* %35, %2
  br i1 %36, label %44, label %37

37:                                               ; preds = %33, %28
  %38 = lshr i32 %24, 2
  %39 = add i32 %29, %38
  %40 = icmp ugt i32 %39, 4
  %41 = select i1 %40, i32 %39, i32 4
  %42 = icmp ugt i32 %41, %29
  %43 = select i1 %42, i32 %41, i32 %29
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.502"* %0, i32 %43) #14
  br label %57

44:                                               ; preds = %33
  %45 = ptrtoint %"class.blink::Member.486"* %2 to i64
  %46 = ptrtoint %"class.blink::Member.486"* %31 to i64
  %47 = sub i64 %45, %46
  %48 = ashr exact i64 %47, 3
  %49 = lshr i32 %24, 2
  %50 = add i32 %29, %49
  %51 = icmp ugt i32 %50, 4
  %52 = select i1 %51, i32 %50, i32 4
  %53 = icmp ugt i32 %52, %29
  %54 = select i1 %53, i32 %52, i32 %29
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.502"* %0, i32 %54) #14
  %55 = load %"class.blink::Member.486"*, %"class.blink::Member.486"** %30, align 8
  %56 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %55, i64 %48
  br label %57

57:                                               ; preds = %44, %37, %23
  %58 = phi %"class.blink::Member.486"* [ %2, %23 ], [ %2, %37 ], [ %56, %44 ]
  %59 = getelementptr inbounds %"class.WTF::Vector.502", %"class.WTF::Vector.502"* %0, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::Member.486"*, %"class.blink::Member.486"** %59, align 8
  %61 = zext i32 %1 to i64
  %62 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %60, i64 %61
  %63 = load i32, i32* %9, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %60, i64 %64
  %66 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %62, i64 1
  %67 = icmp ne %"class.blink::Member.486"* %66, null
  %68 = icmp ne %"class.blink::Member.486"* %62, null
  %69 = and i1 %68, %67
  br i1 %69, label %70, label %110, !prof !4

70:                                               ; preds = %57
  %71 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %65, i64 -1
  %72 = icmp ult %"class.blink::Member.486"* %71, %62
  br i1 %72, label %73, label %75

73:                                               ; preds = %70
  %74 = ptrtoint %"class.blink::Member.486"* %62 to i64
  br label %90

75:                                               ; preds = %70
  %76 = ptrtoint %"class.blink::Member.486"* %71 to i64
  %77 = ptrtoint %"class.blink::Member.486"* %62 to i64
  %78 = sub i64 %76, %77
  %79 = ashr exact i64 %78, 3
  %80 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %66, i64 %79
  br label %81

81:                                               ; preds = %81, %75
  %82 = phi %"class.blink::Member.486"* [ %88, %81 ], [ %80, %75 ]
  %83 = phi %"class.blink::Member.486"* [ %87, %81 ], [ %71, %75 ]
  %84 = bitcast %"class.blink::Member.486"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.blink::Member.486"* %82 to i64*
  store atomic i64 %85, i64* %86 monotonic, align 8
  %87 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %83, i64 -1
  %88 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %82, i64 -1
  %89 = icmp ult %"class.blink::Member.486"* %87, %62
  br i1 %89, label %90, label %81

90:                                               ; preds = %81, %73
  %91 = phi i64 [ %74, %73 ], [ %77, %81 ]
  %92 = ptrtoint %"class.blink::Member.486"* %65 to i64
  %93 = sub i64 %92, %91
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %110, label %95

95:                                               ; preds = %90
  %96 = ashr exact i64 %93, 3
  br label %97

97:                                               ; preds = %107, %95
  %98 = phi i64 [ %100, %107 ], [ %96, %95 ]
  %99 = phi %"class.blink::Member.486"* [ %108, %107 ], [ %66, %95 ]
  %100 = add i64 %98, -1
  %101 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %107, label %103

103:                                              ; preds = %97
  %104 = bitcast %"class.blink::Member.486"* %99 to i8**
  %105 = load i8*, i8** %104, align 8
  %106 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %105) #14
  br label %107

107:                                              ; preds = %103, %97
  %108 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %99, i64 1
  %109 = icmp eq i64 %100, 0
  br i1 %109, label %110, label %97

110:                                              ; preds = %107, %57, %90
  %111 = bitcast %"class.blink::Member.486"* %58 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %"class.blink::Member.486"* %62 to i64*
  store atomic i64 %112, i64* %113 monotonic, align 8
  %114 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %119, label %116

116:                                              ; preds = %110
  %117 = inttoptr i64 %112 to i8*
  %118 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %117) #14
  br label %119

119:                                              ; preds = %110, %116
  %120 = load i32, i32* %9, align 4
  %121 = add i32 %120, 1
  store i32 %121, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSStyleSheet10deleteRuleEjRNS_14ExceptionStateE(%"class.blink::CSSStyleSheet"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringAppend.2433", align 8
  %5 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %6 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringAppend", align 8
  %9 = alloca %"class.WTF::StringAppend.2433", align 8
  %10 = alloca %"class.WTF::StringAppend.2434", align 8
  %11 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 6
  %12 = load i8, i8* %11, align 4, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  %16 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %16, i64 0, i32 10, i32 0, i32 0
  %18 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %17, align 8
  %19 = tail call zeroext i1 @_ZNK5blink16CSSParserContext13IsOriginCleanEv(%"class.blink::CSSParserContext"* %18) #14
  br i1 %19, label %21, label %20

20:                                               ; preds = %14
  tail call void @_ZN5blink14ExceptionState18ThrowSecurityErrorEPKcS2_(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.9, i64 0, i64 0), i8* null) #14
  br label %429

21:                                               ; preds = %3, %14
  %22 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  %23 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %22, align 8
  %24 = tail call i32 @_ZNK5blink18StyleSheetContents9RuleCountEv(%"class.blink::StyleSheetContents"* %23) #14
  %25 = icmp ugt i32 %24, %1
  br i1 %25, label %407, label %26

26:                                               ; preds = %21
  %27 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %22, align 8
  %28 = tail call i32 @_ZNK5blink18StyleSheetContents9RuleCountEv(%"class.blink::StyleSheetContents"* %27) #14
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %406, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #14
  %32 = bitcast %"class.WTF::StringAppend"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %32) #14
  %33 = bitcast %"class.WTF::StringAppend.2433"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #14
  %34 = bitcast %"class.WTF::StringAppend.2434"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #14
  %35 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #14
  %36 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 11
  %37 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 2
  %38 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 3
  %39 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 32, i1 false) #14
  store i8* %36, i8** %37, align 8
  %40 = urem i32 %1, 10
  %41 = udiv i32 %1, 10
  %42 = trunc i32 %40 to i8
  %43 = or i8 %42, 48
  store i8 %43, i8* %36, align 1
  %44 = icmp ugt i32 %1, 9
  br i1 %44, label %45, label %60

45:                                               ; preds = %30
  %46 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 10
  store i8* %46, i8** %37, align 8
  %47 = urem i32 %41, 10
  %48 = trunc i32 %47 to i8
  %49 = or i8 %48, 48
  store i8 %49, i8* %46, align 2
  %50 = icmp ugt i32 %1, 99
  br i1 %50, label %51, label %58

51:                                               ; preds = %45
  %52 = udiv i32 %1, 100
  %53 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 9
  store i8* %53, i8** %37, align 8
  %54 = urem i32 %52, 10
  %55 = trunc i32 %54 to i8
  %56 = or i8 %55, 48
  store i8 %56, i8* %53, align 1
  %57 = icmp ugt i32 %1, 999
  br i1 %57, label %62, label %71

58:                                               ; preds = %45
  %59 = ptrtoint i8* %46 to i64
  br label %74

60:                                               ; preds = %30
  %61 = ptrtoint i8* %36 to i64
  br label %74

62:                                               ; preds = %51, %62
  %63 = phi i32 [ %65, %62 ], [ %52, %51 ]
  %64 = load i8*, i8** %37, align 8
  %65 = udiv i32 %63, 10
  %66 = getelementptr inbounds i8, i8* %64, i64 -1
  store i8* %66, i8** %37, align 8
  %67 = urem i32 %65, 10
  %68 = trunc i32 %67 to i8
  %69 = or i8 %68, 48
  store i8 %69, i8* %66, align 1
  %70 = icmp ugt i32 %63, 99
  br i1 %70, label %62, label %71

71:                                               ; preds = %62, %51
  %72 = bitcast i8** %37 to i64*
  %73 = load i64, i64* %72, align 8
  br label %74

74:                                               ; preds = %71, %58, %60
  %75 = phi i64 [ %61, %60 ], [ %73, %71 ], [ %59, %58 ]
  %76 = ptrtoint i8* %39 to i64
  %77 = sub i64 %76, %75
  %78 = trunc i64 %77 to i32
  store i32 %78, i32* %38, align 8
  %79 = inttoptr i64 %75 to i8*
  %80 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %79, i32 %78) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #14
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %157, label %82

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %99

89:                                               ; preds = %82
  %90 = zext i32 %88 to i33
  %91 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #14
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !2

96:                                               ; preds = %89
  call void @llvm.trap() #14
  unreachable

97:                                               ; preds = %89
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %87, align 4
  br label %99

99:                                               ; preds = %97, %82
  %100 = phi i32 [ %98, %97 ], [ %88, %82 ]
  %101 = load atomic i32, i32* %83 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %114

104:                                              ; preds = %99
  %105 = zext i32 %100 to i33
  %106 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %105, i33 1) #14
  %107 = extractvalue { i33, i1 } %106, 1
  %108 = extractvalue { i33, i1 } %106, 0
  %109 = icmp slt i33 %108, 0
  %110 = or i1 %107, %109
  br i1 %110, label %111, label %112, !prof !2

111:                                              ; preds = %104
  call void @llvm.trap() #14
  unreachable

112:                                              ; preds = %104
  %113 = trunc i33 %108 to i32
  store i32 %113, i32* %87, align 4
  br label %114

114:                                              ; preds = %112, %99
  %115 = phi i32 [ %113, %112 ], [ %100, %99 ]
  %116 = load atomic i32, i32* %83 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %114
  %120 = add i32 %115, -1
  store i32 %120, i32* %87, align 4
  br label %121

121:                                              ; preds = %119, %114
  %122 = phi i32 [ %120, %119 ], [ %115, %114 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #14
  br label %125

125:                                              ; preds = %121, %124
  %126 = load atomic i32, i32* %83 monotonic, align 4, !noalias !14
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = load i32, i32* %87, align 4
  br i1 %128, label %130, label %140

130:                                              ; preds = %125
  %131 = zext i32 %129 to i33
  %132 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %131, i33 1) #14
  %133 = extractvalue { i33, i1 } %132, 1
  %134 = extractvalue { i33, i1 } %132, 0
  %135 = icmp slt i33 %134, 0
  %136 = or i1 %133, %135
  br i1 %136, label %137, label %138, !prof !2

137:                                              ; preds = %130
  call void @llvm.trap() #14, !noalias !14
  unreachable

138:                                              ; preds = %130
  %139 = trunc i33 %134 to i32
  store i32 %139, i32* %87, align 4, !noalias !14
  br label %140

140:                                              ; preds = %125, %138
  %141 = phi i32 [ %139, %138 ], [ %129, %125 ]
  %142 = bitcast %"class.WTF::StringAppend.2434"* %10 to i64*
  store i64 ptrtoint ([21 x i8]* @.str.1 to i64), i64* %142, align 8, !alias.scope !14
  %143 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %80, %"class.WTF::StringImpl"** %143, align 8, !alias.scope !14
  %144 = load atomic i32, i32* %83 monotonic, align 4, !noalias !14
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %161

147:                                              ; preds = %140
  %148 = zext i32 %141 to i33
  %149 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %148, i33 1) #14
  %150 = extractvalue { i33, i1 } %149, 1
  %151 = extractvalue { i33, i1 } %149, 0
  %152 = icmp slt i33 %151, 0
  %153 = or i1 %150, %152
  br i1 %153, label %154, label %155, !prof !2

154:                                              ; preds = %147
  call void @llvm.trap() #14, !noalias !14
  unreachable

155:                                              ; preds = %147
  %156 = trunc i33 %151 to i32
  store i32 %156, i32* %87, align 4, !noalias !14
  br label %161

157:                                              ; preds = %74
  %158 = bitcast %"class.WTF::StringAppend.2434"* %10 to i64*
  store i64 ptrtoint ([21 x i8]* @.str.1 to i64), i64* %158, align 8, !alias.scope !14
  %159 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %159, align 8, !alias.scope !14
  %160 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i64 0, i64 0), i8** %160, align 8, !alias.scope !14
  br label %173

161:                                              ; preds = %155, %140
  %162 = phi i32 [ %156, %155 ], [ %141, %140 ]
  %163 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i64 0, i64 0), i8** %163, align 8, !alias.scope !14
  %164 = load atomic i32, i32* %83 monotonic, align 4, !noalias !14
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %169

167:                                              ; preds = %161
  %168 = add i32 %162, -1
  store i32 %168, i32* %87, align 4, !noalias !14
  br label %169

169:                                              ; preds = %167, %161
  %170 = phi i32 [ %168, %167 ], [ %162, %161 ]
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %173

172:                                              ; preds = %169
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #14, !noalias !14
  br label %173

173:                                              ; preds = %157, %169, %172
  %174 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %22, align 8
  %175 = call i32 @_ZNK5blink18StyleSheetContents9RuleCountEv(%"class.blink::StyleSheetContents"* %174) #14
  %176 = add i32 %175, -1
  %177 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %177) #14
  %178 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 11
  %179 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 2
  %180 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 3
  %181 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %177, i8 -86, i64 32, i1 false) #14
  store i8* %178, i8** %179, align 8
  %182 = urem i32 %176, 10
  %183 = udiv i32 %176, 10
  %184 = trunc i32 %182 to i8
  %185 = or i8 %184, 48
  store i8 %185, i8* %178, align 1
  %186 = icmp ugt i32 %176, 9
  br i1 %186, label %187, label %202

187:                                              ; preds = %173
  %188 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 10
  store i8* %188, i8** %179, align 8
  %189 = urem i32 %183, 10
  %190 = trunc i32 %189 to i8
  %191 = or i8 %190, 48
  store i8 %191, i8* %188, align 2
  %192 = icmp ugt i32 %176, 99
  br i1 %192, label %193, label %200

193:                                              ; preds = %187
  %194 = udiv i32 %176, 100
  %195 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 9
  store i8* %195, i8** %179, align 8
  %196 = urem i32 %194, 10
  %197 = trunc i32 %196 to i8
  %198 = or i8 %197, 48
  store i8 %198, i8* %195, align 1
  %199 = icmp ugt i32 %176, 999
  br i1 %199, label %204, label %213

200:                                              ; preds = %187
  %201 = ptrtoint i8* %188 to i64
  br label %216

202:                                              ; preds = %173
  %203 = ptrtoint i8* %178 to i64
  br label %216

204:                                              ; preds = %193, %204
  %205 = phi i32 [ %207, %204 ], [ %194, %193 ]
  %206 = load i8*, i8** %179, align 8
  %207 = udiv i32 %205, 10
  %208 = getelementptr inbounds i8, i8* %206, i64 -1
  store i8* %208, i8** %179, align 8
  %209 = urem i32 %207, 10
  %210 = trunc i32 %209 to i8
  %211 = or i8 %210, 48
  store i8 %211, i8* %208, align 1
  %212 = icmp ugt i32 %205, 99
  br i1 %212, label %204, label %213

213:                                              ; preds = %204, %193
  %214 = bitcast i8** %179 to i64*
  %215 = load i64, i64* %214, align 8
  br label %216

216:                                              ; preds = %213, %200, %202
  %217 = phi i64 [ %203, %202 ], [ %215, %213 ], [ %201, %200 ]
  %218 = ptrtoint i8* %181 to i64
  %219 = sub i64 %218, %217
  %220 = trunc i64 %219 to i32
  store i32 %220, i32* %180, align 8
  %221 = inttoptr i64 %217 to i8*
  %222 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %221, i32 %220) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %177) #14
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.2433"* nonnull sret %9, %"class.WTF::StringAppend.2434"* nonnull dereferenceable(24) %10, %"class.WTF::StringImpl"* %222)
  %223 = bitcast %"class.WTF::StringAppend.2433"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %223)
  %224 = bitcast %"class.WTF::StringAppend.2433"* %9 to i64*
  %225 = load i64, i64* %224, align 8, !noalias !17
  %226 = bitcast %"class.WTF::StringAppend.2433"* %4 to i64*
  store i64 %225, i64* %226, align 8, !noalias !17
  %227 = getelementptr inbounds %"class.WTF::StringAppend.2433", %"class.WTF::StringAppend.2433"* %9, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %228 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %227, align 8, !noalias !17
  %229 = getelementptr inbounds %"class.WTF::StringAppend.2433", %"class.WTF::StringAppend.2433"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %228, %"class.WTF::StringImpl"** %229, align 8, !noalias !17
  %230 = icmp eq %"class.WTF::StringImpl"* %228, null
  br i1 %230, label %248, label %231

231:                                              ; preds = %216
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = load atomic i32, i32* %232 monotonic, align 4
  %234 = and i32 %233, 2
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %236, label %248

236:                                              ; preds = %231
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = zext i32 %238 to i33
  %240 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %239, i33 1) #14
  %241 = extractvalue { i33, i1 } %240, 1
  %242 = extractvalue { i33, i1 } %240, 0
  %243 = icmp slt i33 %242, 0
  %244 = or i1 %241, %243
  br i1 %244, label %245, label %246, !prof !2

245:                                              ; preds = %236
  call void @llvm.trap() #14
  unreachable

246:                                              ; preds = %236
  %247 = trunc i33 %242 to i32
  store i32 %247, i32* %237, align 4
  br label %248

248:                                              ; preds = %246, %231, %216
  %249 = getelementptr inbounds %"class.WTF::StringAppend.2433", %"class.WTF::StringAppend.2433"* %4, i64 0, i32 0, i32 1
  %250 = getelementptr inbounds %"class.WTF::StringAppend.2433", %"class.WTF::StringAppend.2433"* %9, i64 0, i32 0, i32 1
  %251 = bitcast i8** %250 to i64*
  %252 = load i64, i64* %251, align 8, !noalias !17
  %253 = bitcast i8** %249 to i64*
  store i64 %252, i64* %253, align 8, !noalias !17
  %254 = getelementptr inbounds %"class.WTF::StringAppend.2433", %"class.WTF::StringAppend.2433"* %9, i64 0, i32 1, i32 0, i32 0
  %255 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %254, align 8, !noalias !17
  %256 = getelementptr inbounds %"class.WTF::StringAppend.2433", %"class.WTF::StringAppend.2433"* %4, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %255, %"class.WTF::StringImpl"** %256, align 8, !noalias !17
  %257 = icmp eq %"class.WTF::StringImpl"* %255, null
  br i1 %257, label %275, label %258

258:                                              ; preds = %248
  %259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %260 = load atomic i32, i32* %259 monotonic, align 4
  %261 = and i32 %260, 2
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %275

263:                                              ; preds = %258
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 0
  %265 = load i32, i32* %264, align 4
  %266 = zext i32 %265 to i33
  %267 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %266, i33 1) #14
  %268 = extractvalue { i33, i1 } %267, 1
  %269 = extractvalue { i33, i1 } %267, 0
  %270 = icmp slt i33 %269, 0
  %271 = or i1 %268, %270
  br i1 %271, label %272, label %273, !prof !2

272:                                              ; preds = %263
  call void @llvm.trap() #14
  unreachable

273:                                              ; preds = %263
  %274 = trunc i33 %269 to i32
  store i32 %274, i32* %264, align 4
  br label %275

275:                                              ; preds = %248, %258, %273
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend"* nonnull %8, %"class.WTF::StringAppend.2433"* nonnull byval(%"class.WTF::StringAppend.2433") align 8 %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0)) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %223)
  %276 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %8)
  %277 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %276, %"class.WTF::StringImpl"** %277, align 8
  %278 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %279 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %278, align 8
  %280 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %279, align 8
  call void %280(%"class.blink::ExceptionState"* %2, i32 1, %"class.WTF::String"* nonnull dereferenceable(8) %7) #14
  %281 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %277, align 8
  %282 = icmp eq %"class.WTF::StringImpl"* %281, null
  br i1 %282, label %296, label %283

283:                                              ; preds = %275
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = load atomic i32, i32* %284 monotonic, align 4
  %286 = and i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 0
  %289 = load i32, i32* %288, align 4
  br i1 %287, label %290, label %292

290:                                              ; preds = %283
  %291 = add i32 %289, -1
  store i32 %291, i32* %288, align 4
  br label %292

292:                                              ; preds = %290, %283
  %293 = phi i32 [ %291, %290 ], [ %289, %283 ]
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %296

295:                                              ; preds = %292
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %281) #14
  br label %296

296:                                              ; preds = %275, %292, %295
  %297 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %298 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %297, align 8
  %299 = icmp eq %"class.WTF::StringImpl"* %298, null
  br i1 %299, label %313, label %300

300:                                              ; preds = %296
  %301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %298, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %302 = load atomic i32, i32* %301 monotonic, align 4
  %303 = and i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %298, i64 0, i32 0
  %306 = load i32, i32* %305, align 4
  br i1 %304, label %307, label %309

307:                                              ; preds = %300
  %308 = add i32 %306, -1
  store i32 %308, i32* %305, align 4
  br label %309

309:                                              ; preds = %307, %300
  %310 = phi i32 [ %308, %307 ], [ %306, %300 ]
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %312, label %313

312:                                              ; preds = %309
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %298) #14
  br label %313

313:                                              ; preds = %312, %309, %296
  %314 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %315 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %314, align 8
  %316 = icmp eq %"class.WTF::StringImpl"* %315, null
  br i1 %316, label %330, label %317

317:                                              ; preds = %313
  %318 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %315, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %319 = load atomic i32, i32* %318 monotonic, align 4
  %320 = and i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %315, i64 0, i32 0
  %323 = load i32, i32* %322, align 4
  br i1 %321, label %324, label %326

324:                                              ; preds = %317
  %325 = add i32 %323, -1
  store i32 %325, i32* %322, align 4
  br label %326

326:                                              ; preds = %324, %317
  %327 = phi i32 [ %325, %324 ], [ %323, %317 ]
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %329, label %330

329:                                              ; preds = %326
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %315) #14
  br label %330

330:                                              ; preds = %313, %326, %329
  %331 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %254, align 8
  %332 = icmp eq %"class.WTF::StringImpl"* %331, null
  br i1 %332, label %346, label %333

333:                                              ; preds = %330
  %334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %331, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %335 = load atomic i32, i32* %334 monotonic, align 4
  %336 = and i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %331, i64 0, i32 0
  %339 = load i32, i32* %338, align 4
  br i1 %337, label %340, label %342

340:                                              ; preds = %333
  %341 = add i32 %339, -1
  store i32 %341, i32* %338, align 4
  br label %342

342:                                              ; preds = %340, %333
  %343 = phi i32 [ %341, %340 ], [ %339, %333 ]
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %345, label %346

345:                                              ; preds = %342
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %331) #14
  br label %346

346:                                              ; preds = %345, %342, %330
  %347 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %227, align 8
  %348 = icmp eq %"class.WTF::StringImpl"* %347, null
  br i1 %348, label %362, label %349

349:                                              ; preds = %346
  %350 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %347, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %351 = load atomic i32, i32* %350 monotonic, align 4
  %352 = and i32 %351, 2
  %353 = icmp eq i32 %352, 0
  %354 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %347, i64 0, i32 0
  %355 = load i32, i32* %354, align 4
  br i1 %353, label %356, label %358

356:                                              ; preds = %349
  %357 = add i32 %355, -1
  store i32 %357, i32* %354, align 4
  br label %358

358:                                              ; preds = %356, %349
  %359 = phi i32 [ %357, %356 ], [ %355, %349 ]
  %360 = icmp eq i32 %359, 0
  br i1 %360, label %361, label %362

361:                                              ; preds = %358
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %347) #14
  br label %362

362:                                              ; preds = %346, %358, %361
  %363 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %364 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %363, align 8
  %365 = icmp eq %"class.WTF::StringImpl"* %364, null
  br i1 %365, label %379, label %366

366:                                              ; preds = %362
  %367 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %364, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %368 = load atomic i32, i32* %367 monotonic, align 4
  %369 = and i32 %368, 2
  %370 = icmp eq i32 %369, 0
  %371 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %364, i64 0, i32 0
  %372 = load i32, i32* %371, align 4
  br i1 %370, label %373, label %375

373:                                              ; preds = %366
  %374 = add i32 %372, -1
  store i32 %374, i32* %371, align 4
  br label %375

375:                                              ; preds = %373, %366
  %376 = phi i32 [ %374, %373 ], [ %372, %366 ]
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %378, label %379

378:                                              ; preds = %375
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %364) #14
  br label %379

379:                                              ; preds = %362, %375, %378
  br i1 %81, label %405, label %380

380:                                              ; preds = %379
  %381 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %382 = load atomic i32, i32* %381 monotonic, align 4
  %383 = and i32 %382, 2
  %384 = icmp eq i32 %383, 0
  %385 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %386 = load i32, i32* %385, align 4
  br i1 %384, label %387, label %389

387:                                              ; preds = %380
  %388 = add i32 %386, -1
  store i32 %388, i32* %385, align 4
  br label %389

389:                                              ; preds = %387, %380
  %390 = phi i32 [ %388, %387 ], [ %386, %380 ]
  %391 = icmp eq i32 %390, 0
  br i1 %391, label %392, label %394

392:                                              ; preds = %389
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #14
  %393 = load i32, i32* %385, align 4
  br label %394

394:                                              ; preds = %389, %392
  %395 = phi i32 [ %390, %389 ], [ %393, %392 ]
  %396 = load atomic i32, i32* %381 monotonic, align 4
  %397 = and i32 %396, 2
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %399, label %401

399:                                              ; preds = %394
  %400 = add i32 %395, -1
  store i32 %400, i32* %385, align 4
  br label %401

401:                                              ; preds = %399, %394
  %402 = phi i32 [ %400, %399 ], [ %395, %394 ]
  %403 = icmp eq i32 %402, 0
  br i1 %403, label %404, label %405

404:                                              ; preds = %401
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #14
  br label %405

405:                                              ; preds = %379, %401, %404
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %32) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #14
  br label %429

406:                                              ; preds = %26
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0)) #14
  br label %429

407:                                              ; preds = %21
  tail call void @_ZN5blink13CSSStyleSheet15WillMutateRulesEv(%"class.blink::CSSStyleSheet"* %0) #14
  %408 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %22, align 8
  %409 = tail call zeroext i1 @_ZN5blink18StyleSheetContents17WrapperDeleteRuleEj(%"class.blink::StyleSheetContents"* %408, i32 %1) #14
  br i1 %409, label %411, label %410

410:                                              ; preds = %407
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11, i64 0, i64 0)) #14
  br label %426

411:                                              ; preds = %407
  %412 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 18, i32 0
  %413 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2
  %414 = load i32, i32* %413, align 4
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %426, label %416

416:                                              ; preds = %411
  %417 = tail call dereferenceable(8) %"class.blink::Member.486"* @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.502"* %412, i32 %1) #14
  %418 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %417, i64 0, i32 0, i32 0
  %419 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %418, align 8
  %420 = icmp eq %"class.blink::CSSRule"* %419, null
  br i1 %420, label %425, label %421

421:                                              ; preds = %416
  %422 = tail call dereferenceable(8) %"class.blink::Member.486"* @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.502"* %412, i32 %1) #14
  %423 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %422, i64 0, i32 0, i32 0
  %424 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %423, align 8
  tail call void @_ZN5blink7CSSRule19SetParentStyleSheetEPNS_13CSSStyleSheetE(%"class.blink::CSSRule"* %424, %"class.blink::CSSStyleSheet"* null) #14
  br label %425

425:                                              ; preds = %416, %421
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector.502"* %412, i32 %1)
  br label %426

426:                                              ; preds = %411, %425, %410
  %427 = icmp eq %"class.blink::CSSStyleSheet"* %0, null
  br i1 %427, label %429, label %428

428:                                              ; preds = %426
  tail call void @_ZN5blink13CSSStyleSheet9DidMutateENS0_8MutationE(%"class.blink::CSSStyleSheet"* nonnull %0, i32 1) #14
  br label %429

429:                                              ; preds = %428, %426, %405, %406, %20
  ret void
}

declare zeroext i1 @_ZN5blink18StyleSheetContents17WrapperDeleteRuleEj(%"class.blink::StyleSheetContents"*, i32) local_unnamed_addr #1

declare void @_ZN5blink7CSSRule19SetParentStyleSheetEPNS_13CSSStyleSheetE(%"class.blink::CSSRule"*, %"class.blink::CSSStyleSheet"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector.502"*, i32) local_unnamed_addr #7 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.502", %"class.WTF::Vector.502"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.39, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.26, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.502", %"class.WTF::Vector.502"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.486"*, %"class.blink::Member.486"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %24, i64 %25
  %27 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %26, i64 1
  %28 = load i32, i32* %8, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %24, i64 %29
  %31 = icmp ne %"class.blink::Member.486"* %26, null
  %32 = icmp ne %"class.blink::Member.486"* %27, null
  %33 = and i1 %31, %32
  br i1 %33, label %34, label %124, !prof !4

34:                                               ; preds = %22
  %35 = icmp ult %"class.blink::Member.486"* %27, %30
  br i1 %35, label %36, label %104

36:                                               ; preds = %34
  %37 = shl nuw nsw i64 %29, 3
  %38 = add nsw i64 %37, -9
  %39 = shl nuw nsw i64 %25, 3
  %40 = sub nsw i64 %38, %39
  %41 = lshr i64 %40, 3
  %42 = add nuw nsw i64 %41, 1
  %43 = and i64 %42, 7
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %56, label %45

45:                                               ; preds = %36, %45
  %46 = phi %"class.blink::Member.486"* [ %53, %45 ], [ %26, %36 ]
  %47 = phi %"class.blink::Member.486"* [ %52, %45 ], [ %27, %36 ]
  %48 = phi i64 [ %54, %45 ], [ %43, %36 ]
  %49 = bitcast %"class.blink::Member.486"* %47 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.blink::Member.486"* %46 to i64*
  store atomic i64 %50, i64* %51 monotonic, align 8
  %52 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %47, i64 1
  %53 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %46, i64 1
  %54 = add i64 %48, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %45, !llvm.loop !20

56:                                               ; preds = %45, %36
  %57 = phi %"class.blink::Member.486"* [ %26, %36 ], [ %53, %45 ]
  %58 = phi %"class.blink::Member.486"* [ %27, %36 ], [ %52, %45 ]
  %59 = icmp ult i64 %40, 56
  br i1 %59, label %104, label %60

60:                                               ; preds = %56, %60
  %61 = phi %"class.blink::Member.486"* [ %102, %60 ], [ %57, %56 ]
  %62 = phi %"class.blink::Member.486"* [ %101, %60 ], [ %58, %56 ]
  %63 = bitcast %"class.blink::Member.486"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::Member.486"* %61 to i64*
  store atomic i64 %64, i64* %65 monotonic, align 8
  %66 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %62, i64 1
  %67 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %61, i64 1
  %68 = bitcast %"class.blink::Member.486"* %66 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.blink::Member.486"* %67 to i64*
  store atomic i64 %69, i64* %70 monotonic, align 8
  %71 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %62, i64 2
  %72 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %61, i64 2
  %73 = bitcast %"class.blink::Member.486"* %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.blink::Member.486"* %72 to i64*
  store atomic i64 %74, i64* %75 monotonic, align 8
  %76 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %62, i64 3
  %77 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %61, i64 3
  %78 = bitcast %"class.blink::Member.486"* %76 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.blink::Member.486"* %77 to i64*
  store atomic i64 %79, i64* %80 monotonic, align 8
  %81 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %62, i64 4
  %82 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %61, i64 4
  %83 = bitcast %"class.blink::Member.486"* %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.blink::Member.486"* %82 to i64*
  store atomic i64 %84, i64* %85 monotonic, align 8
  %86 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %62, i64 5
  %87 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %61, i64 5
  %88 = bitcast %"class.blink::Member.486"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.blink::Member.486"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %62, i64 6
  %92 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %61, i64 6
  %93 = bitcast %"class.blink::Member.486"* %91 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member.486"* %92 to i64*
  store atomic i64 %94, i64* %95 monotonic, align 8
  %96 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %62, i64 7
  %97 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %61, i64 7
  %98 = bitcast %"class.blink::Member.486"* %96 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.blink::Member.486"* %97 to i64*
  store atomic i64 %99, i64* %100 monotonic, align 8
  %101 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %62, i64 8
  %102 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %61, i64 8
  %103 = icmp ult %"class.blink::Member.486"* %101, %30
  br i1 %103, label %60, label %104

104:                                              ; preds = %56, %60, %34
  %105 = ptrtoint %"class.blink::Member.486"* %30 to i64
  %106 = ptrtoint %"class.blink::Member.486"* %27 to i64
  %107 = sub i64 %105, %106
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %124, label %109

109:                                              ; preds = %104
  %110 = ashr exact i64 %107, 3
  br label %111

111:                                              ; preds = %121, %109
  %112 = phi i64 [ %114, %121 ], [ %110, %109 ]
  %113 = phi %"class.blink::Member.486"* [ %122, %121 ], [ %26, %109 ]
  %114 = add i64 %112, -1
  %115 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %121, label %117

117:                                              ; preds = %111
  %118 = bitcast %"class.blink::Member.486"* %113 to i8**
  %119 = load i8*, i8** %118, align 8
  %120 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %119) #14
  br label %121

121:                                              ; preds = %117, %111
  %122 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %113, i64 1
  %123 = icmp eq i64 %114, 0
  br i1 %123, label %124, label %111

124:                                              ; preds = %121, %22, %104
  %125 = load %"class.blink::Member.486"*, %"class.blink::Member.486"** %23, align 8
  %126 = load i32, i32* %8, align 4
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %125, i64 %127
  %129 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %128, i64 -1
  %130 = bitcast %"class.blink::Member.486"* %129 to i8*
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %130, i64 8) #14
  %131 = load i32, i32* %8, align 4
  %132 = add i32 %131, -1
  store i32 %132, i32* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink13CSSStyleSheet7addRuleERKN3WTF6StringES4_iRNS_14ExceptionStateE(%"class.blink::CSSStyleSheet"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::StringBuilder", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = bitcast %"class.WTF::StringBuilder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 48, i1 false)
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %13 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 1
  %14 = bitcast %union.anon.2436* %13 to i8*
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 2
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 3
  store i8 1, i8* %16, align 4
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 4
  store i8 0, i8* %17, align 1
  %18 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %22, label %26

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %23, align 8
  %24 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %25 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %24, i64* %25, align 8
  br label %33

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 1
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %32 = bitcast i8** %31 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %32, align 8
  br label %33

33:                                               ; preds = %22, %26
  %34 = phi i32 [ %29, %26 ], [ 0, %22 ]
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %34, i32* %35, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #14
  %36 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #14
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %38 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8** %39, align 8
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 3, i32* %40, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #14
  %41 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #14
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %45, label %49

45:                                               ; preds = %33
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %46, align 8
  %47 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %48 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %47, i64* %48, align 8
  br label %56

49:                                               ; preds = %33
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %50, align 8
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 1
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %55 = bitcast i8** %54 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %55, align 8
  br label %56

56:                                               ; preds = %45, %49
  %57 = phi i32 [ %52, %49 ], [ 0, %45 ]
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %57, i32* %58, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #14
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %66, label %65

65:                                               ; preds = %61
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %6, i8 zeroext 32) #14
  br label %66

66:                                               ; preds = %56, %65, %61
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %6, i8 zeroext 125) #14
  %67 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #14
  %68 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %6) #14
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"** %69, align 8
  %70 = call i32 @_ZN5blink13CSSStyleSheet10insertRuleERKN3WTF6StringEjRNS_14ExceptionStateE(%"class.blink::CSSStyleSheet"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %10, i32 %3, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #14
  br label %86

86:                                               ; preds = %66, %82, %85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #14
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %6) #14
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #14
  br label %102

102:                                              ; preds = %86, %98, %101
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #14
  ret i32 -1
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !3
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #14
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #14
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #14
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #14
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #14
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink13CSSStyleSheet7addRuleERKN3WTF6StringES4_RNS_14ExceptionStateE(%"class.blink::CSSStyleSheet"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %5, align 8
  %7 = tail call i32 @_ZNK5blink18StyleSheetContents9RuleCountEv(%"class.blink::StyleSheetContents"* %6) #14
  %8 = tail call i32 @_ZN5blink13CSSStyleSheet7addRuleERKN3WTF6StringES4_iRNS_14ExceptionStateE(%"class.blink::CSSStyleSheet"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2, i32 %7, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  ret i32 -1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSStyleSheet7replaceEPNS_11ScriptStateERKN3WTF6StringE(%"class.blink::ScriptPromise"* noalias sret, %"class.blink::CSSStyleSheet"*, %"class.blink::ScriptState"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %1, i64 0, i32 14, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %8 = icmp eq %"class.blink::Document"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #14
  store i32 35, i32* %5, align 4
  %11 = call %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA54_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %5, [54 x i8]* nonnull dereferenceable(54) @.str.13) #14
  call void @_ZN5blink13ScriptPromise22RejectWithDOMExceptionEPNS_11ScriptStateEPNS_12DOMExceptionE(%"class.blink::ScriptPromise"* sret %0, %"class.blink::ScriptState"* %2, %"class.blink::DOMException"* %11) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #14
  br label %52

12:                                               ; preds = %4
  tail call void @_ZN5blink13CSSStyleSheet7SetTextERKN3WTF6StringENS_14CSSImportRulesE(%"class.blink::CSSStyleSheet"* %1, %"class.WTF::String"* dereferenceable(8) %3, i32 1)
  %13 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %1, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.v8::Context"*, %"class.v8::Context"** %14, align 8
  %16 = icmp eq %"class.v8::Context"* %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %12
  %18 = bitcast %"class.blink::ScriptState"* %2 to %"class.v8::internal::Isolate"**
  %19 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %18, align 8
  %20 = bitcast %"class.v8::Context"* %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %19, i64 %21) #14
  %23 = bitcast i64* %22 to %"class.v8::Context"*
  br label %24

24:                                               ; preds = %17, %12
  %25 = phi %"class.v8::Context"* [ %23, %17 ], [ null, %12 ]
  %26 = tail call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %25) #14
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 0
  %28 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %27, align 8
  %29 = icmp eq %"class.blink::CSSStyleSheet"* %1, null
  br i1 %29, label %30, label %33, !prof !2

30:                                               ; preds = %24
  %31 = ptrtoint %"class.v8::Isolate"* %28 to i64
  %32 = add i64 %31, 176
  br label %49

33:                                               ; preds = %24
  %34 = tail call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %13, %"class.v8::Isolate"* %28) #14
  %35 = ptrtoint %"class.v8::Object"* %34 to i64
  %36 = icmp eq %"class.v8::Object"* %34, null
  br i1 %36, label %37, label %49

37:                                               ; preds = %33
  %38 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %26) #14
  %39 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %38) #14
  %40 = bitcast %"class.blink::CSSStyleSheet"* %1 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %41 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %40, align 8
  %42 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %41, i64 7
  %43 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %42, align 8
  %44 = tail call %"class.v8::Value"* %43(%"class.blink::ScriptWrappable"* nonnull %13, %"class.blink::ScriptState"* %39) #14
  %45 = icmp eq %"class.v8::Value"* %44, null
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @_ZN2v82V812ToLocalEmptyEv() #14
  br label %47

47:                                               ; preds = %46, %37
  %48 = ptrtoint %"class.v8::Value"* %44 to i64
  br label %49

49:                                               ; preds = %30, %33, %47
  %50 = phi i64 [ %32, %30 ], [ %48, %47 ], [ %35, %33 ]
  %51 = inttoptr i64 %50 to %"class.v8::Value"*
  tail call void @_ZN5blink13ScriptPromise4CastEPNS_11ScriptStateEN2v85LocalINS3_5ValueEEE(%"class.blink::ScriptPromise"* sret %0, %"class.blink::ScriptState"* %2, %"class.v8::Value"* %51) #14
  br label %52

52:                                               ; preds = %49, %9
  ret void
}

declare void @_ZN5blink13ScriptPromise22RejectWithDOMExceptionEPNS_11ScriptStateEPNS_12DOMExceptionE(%"class.blink::ScriptPromise"* sret, %"class.blink::ScriptState"*, %"class.blink::DOMException"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSStyleSheet7SetTextERKN3WTF6StringENS_14CSSImportRulesE(%"class.blink::CSSStyleSheet"*, %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 18, i32 0
  %7 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  %14 = bitcast %"class.WTF::Vector.502"* %6 to i8**
  br i1 %13, label %19, label %15

15:                                               ; preds = %10
  %16 = load i8*, i8** %14, align 8
  %17 = zext i32 %12 to i64
  %18 = shl nuw nsw i64 %17, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %16, i64 %18) #14
  store i32 0, i32* %11, align 4
  br label %19

19:                                               ; preds = %15, %10
  %20 = load i8*, i8** %14, align 8
  %21 = bitcast %"class.WTF::Vector.502"* %6 to i64*
  store atomic i64 0, i64* %21 monotonic, align 8
  store i32 0, i32* %7, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %20) #14
  br label %22

22:                                               ; preds = %3, %19
  tail call void @_ZN5blink13CSSStyleSheet15WillMutateRulesEv(%"class.blink::CSSStyleSheet"* %0) #14
  %23 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  %24 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %23, align 8
  tail call void @_ZN5blink18StyleSheetContents10ClearRulesEv(%"class.blink::StyleSheetContents"* %24) #14
  %25 = icmp eq i32 %2, 0
  %26 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %23, align 8
  %27 = tail call i32 @_ZN5blink18StyleSheetContents11ParseStringERKN3WTF6StringEb(%"class.blink::StyleSheetContents"* %26, %"class.WTF::String"* dereferenceable(8) %1, i1 zeroext %25) #14
  %28 = icmp eq i32 %27, 1
  %29 = icmp eq i32 %2, 1
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %79

31:                                               ; preds = %22, %56
  %32 = phi %"class.blink::CSSStyleSheet"* [ %59, %56 ], [ %0, %22 ]
  %33 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %32, i64 0, i32 12, i32 0, i32 0
  %34 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %33, align 8
  %35 = icmp eq %"class.blink::CSSRule"* %34, null
  br i1 %35, label %61, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %34, i64 0, i32 1
  %38 = load i8, i8* %37, align 8
  %39 = and i8 %38, 2
  %40 = icmp eq i8 %39, 0
  %41 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %34, i64 0, i32 2, i32 0, i32 0
  br i1 %40, label %56, label %42

42:                                               ; preds = %36, %47
  %43 = phi %"class.blink::ScriptWrappable"** [ %55, %47 ], [ %41, %36 ]
  %44 = phi %"class.blink::CSSRule"* [ %50, %47 ], [ %34, %36 ]
  %45 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %43, align 8
  %46 = icmp eq %"class.blink::ScriptWrappable"* %45, null
  br i1 %46, label %61, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %44, i64 0, i32 2, i32 0, i32 0
  %49 = bitcast %"class.blink::ScriptWrappable"** %48 to %"class.blink::CSSRule"**
  %50 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %50, i64 0, i32 1
  %52 = load i8, i8* %51, align 8
  %53 = and i8 %52, 2
  %54 = icmp eq i8 %53, 0
  %55 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %50, i64 0, i32 2, i32 0, i32 0
  br i1 %54, label %56, label %42

56:                                               ; preds = %47, %36
  %57 = phi %"class.blink::ScriptWrappable"** [ %41, %36 ], [ %55, %47 ]
  %58 = bitcast %"class.blink::ScriptWrappable"** %57 to %"class.blink::CSSStyleSheet"**
  %59 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %58, align 8
  %60 = icmp eq %"class.blink::CSSStyleSheet"* %59, null
  br i1 %60, label %61, label %31

61:                                               ; preds = %56, %31, %42
  %62 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %32, i64 0, i32 14, i32 0, i32 0
  %63 = load %"class.blink::Document"*, %"class.blink::Document"** %62, align 8
  %64 = icmp eq %"class.blink::Document"* %63, null
  br i1 %64, label %65, label %74

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %32, i64 0, i32 11, i32 0, i32 0
  %67 = load %"class.blink::Node"*, %"class.blink::Node"** %66, align 8
  %68 = icmp eq %"class.blink::Node"* %67, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %67, i64 0, i32 3, i32 0, i32 0
  %71 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %71, i64 0, i32 2, i32 0, i32 0
  %73 = load %"class.blink::Document"*, %"class.blink::Document"** %72, align 8
  br label %74

74:                                               ; preds = %61, %65, %69
  %75 = phi %"class.blink::Document"* [ %73, %69 ], [ null, %65 ], [ %63, %61 ]
  %76 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %76) #14
  store i32 1, i32* %4, align 4
  %77 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %77) #14
  store i32 2, i32* %5, align 4
  %78 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA121_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %5, [121 x i8]* nonnull dereferenceable(121) @.str.16) #14
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %75, %"class.blink::ConsoleMessage"* %78, i1 zeroext false) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %77) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %76) #14
  br label %79

79:                                               ; preds = %74, %22
  %80 = icmp eq %"class.blink::CSSStyleSheet"* %0, null
  br i1 %80, label %82, label %81

81:                                               ; preds = %79
  call void @_ZN5blink13CSSStyleSheet9DidMutateENS0_8MutationE(%"class.blink::CSSStyleSheet"* nonnull %0, i32 1) #14
  br label %82

82:                                               ; preds = %79, %81
  ret void
}

declare void @_ZN5blink13ScriptPromise4CastEPNS_11ScriptStateEN2v85LocalINS3_5ValueEEE(%"class.blink::ScriptPromise"* sret, %"class.blink::ScriptState"*, %"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSStyleSheet11replaceSyncERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::CSSStyleSheet"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 14, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 35, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.14, i64 0, i64 0)) #14
  br label %9

8:                                                ; preds = %3
  tail call void @_ZN5blink13CSSStyleSheet7SetTextERKN3WTF6StringENS_14CSSImportRulesE(%"class.blink::CSSStyleSheet"* %0, %"class.WTF::String"* dereferenceable(8) %1, i32 1)
  br label %9

9:                                                ; preds = %8, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink13CSSStyleSheet4hrefEv(%"class.blink::CSSStyleSheet"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %3, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #14
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #14
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %1, %7, %22
  ret %"class.WTF::StringImpl"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13CSSStyleSheet7BaseURLEv(%"class.blink::KURL"* noalias sret, %"class.blink::CSSStyleSheet"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %1, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %4, i64 0, i32 10, i32 0, i32 0
  %6 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %6, i64 0, i32 0
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %0, %"class.blink::KURL"* dereferenceable(112) %7) #14
  ret void
}

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13CSSStyleSheet9IsLoadingEv(%"class.blink::CSSStyleSheet"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK5blink18StyleSheetContents9IsLoadingEv(%"class.blink::StyleSheetContents"* %3) #14
  ret i1 %4
}

declare zeroext i1 @_ZNK5blink18StyleSheetContents9IsLoadingEv(%"class.blink::StyleSheetContents"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MediaList"* @_ZN5blink13CSSStyleSheet5mediaEv(%"class.blink::CSSStyleSheet"*) unnamed_addr #0 align 2 {
  %2 = alloca %class.scoped_refptr.485, align 8
  %3 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 8
  %4 = getelementptr inbounds %class.scoped_refptr.485, %class.scoped_refptr.485* %3, i64 0, i32 0
  %5 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %4, align 8
  %6 = icmp eq %"class.blink::MediaQuerySet"* %5, null
  br i1 %6, label %7, label %15

7:                                                ; preds = %1
  %8 = tail call noalias i8* @malloc(i64 24) #14
  %9 = bitcast i8* %8 to %"class.blink::MediaQuerySet"*
  tail call void @_ZN5blink13MediaQuerySetC1Ev(%"class.blink::MediaQuerySet"* %9) #14
  %10 = bitcast %class.scoped_refptr.485* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = bitcast %class.scoped_refptr.485* %3 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %class.scoped_refptr.485* %2 to i64*
  %14 = ptrtoint i8* %8 to i64
  store i64 %14, i64* %11, align 8
  store i64 %12, i64* %13, align 8
  call void @_ZN13scoped_refptrIN5blink13MediaQuerySetEED2Ev(%class.scoped_refptr.485* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  br label %15

15:                                               ; preds = %1, %7
  %16 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 17
  %17 = getelementptr inbounds %"class.blink::Member.497", %"class.blink::Member.497"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::MediaList"*, %"class.blink::MediaList"** %17, align 8
  %19 = icmp eq %"class.blink::MediaList"* %18, null
  br i1 %19, label %20, label %40

20:                                               ; preds = %15
  %21 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %4, align 8
  %22 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 40) #14
  %23 = bitcast i8* %22 to %"class.blink::MediaList"*
  %24 = icmp eq %"class.blink::MediaQuerySet"* %21, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %21, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %26) #14
  br label %27

27:                                               ; preds = %20, %25
  call void @_ZN5blink9MediaListC1E13scoped_refptrINS_13MediaQuerySetEEPNS_13CSSStyleSheetE(%"class.blink::MediaList"* %23, %"class.blink::MediaQuerySet"* %21, %"class.blink::CSSStyleSheet"* %0) #14
  %28 = getelementptr inbounds i8, i8* %22, i64 -4
  %29 = bitcast i8* %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = or i16 %30, 1
  store atomic i16 %31, i16* %29 release, align 2
  %32 = ptrtoint i8* %22 to i64
  %33 = bitcast %"class.blink::Member.497"* %16 to i64*
  store atomic i64 %32, i64* %33 monotonic, align 8
  %34 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %35 = icmp eq i32 %34, 0
  %36 = bitcast i8* %22 to %"class.blink::MediaList"*
  br i1 %35, label %40, label %37

37:                                               ; preds = %27
  %38 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #14
  %39 = load %"class.blink::MediaList"*, %"class.blink::MediaList"** %17, align 8
  br label %40

40:                                               ; preds = %15, %37, %27
  %41 = phi %"class.blink::MediaList"* [ %18, %15 ], [ %39, %37 ], [ %36, %27 ]
  ret %"class.blink::MediaList"* %41
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::CSSStyleSheet"* @_ZNK5blink13CSSStyleSheet16parentStyleSheetEv(%"class.blink::CSSStyleSheet"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %2, align 8
  %4 = icmp eq %"class.blink::CSSRule"* %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %3, i64 0, i32 1
  %7 = load i8, i8* %6, align 8
  %8 = and i8 %7, 2
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %3, i64 0, i32 2, i32 0, i32 0
  br i1 %9, label %25, label %11

11:                                               ; preds = %5, %16
  %12 = phi %"class.blink::ScriptWrappable"** [ %24, %16 ], [ %10, %5 ]
  %13 = phi %"class.blink::CSSRule"* [ %19, %16 ], [ %3, %5 ]
  %14 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %12, align 8
  %15 = icmp eq %"class.blink::ScriptWrappable"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %13, i64 0, i32 2, i32 0, i32 0
  %18 = bitcast %"class.blink::ScriptWrappable"** %17 to %"class.blink::CSSRule"**
  %19 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %19, i64 0, i32 1
  %21 = load i8, i8* %20, align 8
  %22 = and i8 %21, 2
  %23 = icmp eq i8 %22, 0
  %24 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %19, i64 0, i32 2, i32 0, i32 0
  br i1 %23, label %25, label %11

25:                                               ; preds = %16, %5
  %26 = phi %"class.blink::ScriptWrappable"** [ %10, %5 ], [ %24, %16 ]
  %27 = bitcast %"class.blink::ScriptWrappable"** %26 to %"class.blink::CSSStyleSheet"**
  %28 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %27, align 8
  br label %29

29:                                               ; preds = %11, %1, %25
  %30 = phi %"class.blink::CSSStyleSheet"* [ null, %1 ], [ %28, %25 ], [ null, %11 ]
  ret %"class.blink::CSSStyleSheet"* %30
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13CSSStyleSheet11SheetLoadedEv(%"class.blink::CSSStyleSheet"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 11, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = bitcast %"class.blink::Node"* %3 to i1 (%"class.blink::Node"*)***
  %5 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %5, i64 46
  %7 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::Node"* %3) #14
  %9 = zext i1 %8 to i32
  %10 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 4
  %11 = load i8, i8* %10, align 2, !range !3
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %9, %12
  br i1 %13, label %20, label %14

14:                                               ; preds = %1
  %15 = zext i1 %8 to i8
  store i8 %15, i8* %10, align 2
  %16 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %16, align 8
  br i1 %8, label %18, label %19

18:                                               ; preds = %14
  tail call void @_ZN5blink18StyleSheetContents19ClientLoadCompletedEPNS_13CSSStyleSheetE(%"class.blink::StyleSheetContents"* %17, %"class.blink::CSSStyleSheet"* %0) #14
  br label %20

19:                                               ; preds = %14
  tail call void @_ZN5blink18StyleSheetContents17ClientLoadStartedEPNS_13CSSStyleSheetE(%"class.blink::StyleSheetContents"* %17, %"class.blink::CSSStyleSheet"* %0) #14
  br label %20

20:                                               ; preds = %1, %18, %19
  %21 = load i8, i8* %10, align 2, !range !3
  %22 = icmp ne i8 %21, 0
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSStyleSheet16SetLoadCompletedEb(%"class.blink::CSSStyleSheet"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i32
  %4 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 4
  %5 = load i8, i8* %4, align 2, !range !3
  %6 = zext i8 %5 to i32
  %7 = icmp eq i32 %3, %6
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = zext i1 %1 to i8
  store i8 %9, i8* %4, align 2
  %10 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %10, align 8
  br i1 %1, label %12, label %13

12:                                               ; preds = %8
  tail call void @_ZN5blink18StyleSheetContents19ClientLoadCompletedEPNS_13CSSStyleSheetE(%"class.blink::StyleSheetContents"* %11, %"class.blink::CSSStyleSheet"* %0) #14
  br label %14

13:                                               ; preds = %8
  tail call void @_ZN5blink18StyleSheetContents17ClientLoadStartedEPNS_13CSSStyleSheetE(%"class.blink::StyleSheetContents"* %11, %"class.blink::CSSStyleSheet"* %0) #14
  br label %14

14:                                               ; preds = %2, %13, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSStyleSheet24StartLoadingDynamicSheetEv(%"class.blink::CSSStyleSheet"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 2, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  store i8 0, i8* %2, align 2
  %6 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %6, align 8
  tail call void @_ZN5blink18StyleSheetContents17ClientLoadStartedEPNS_13CSSStyleSheetE(%"class.blink::StyleSheetContents"* %7, %"class.blink::CSSStyleSheet"* %0) #14
  br label %8

8:                                                ; preds = %1, %5
  %9 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 11, i32 0, i32 0
  %10 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %11 = bitcast %"class.blink::Node"* %10 to void (%"class.blink::Node"*)***
  %12 = load void (%"class.blink::Node"*)**, void (%"class.blink::Node"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::Node"*)*, void (%"class.blink::Node"*)** %12, i64 48
  %14 = load void (%"class.blink::Node"*)*, void (%"class.blink::Node"*)** %13, align 8
  tail call void %14(%"class.blink::Node"* %10) #14
  ret void
}

declare void @_ZN5blink18StyleSheetContents19ClientLoadCompletedEPNS_13CSSStyleSheetE(%"class.blink::StyleSheetContents"*, %"class.blink::CSSStyleSheet"*) local_unnamed_addr #1

declare void @_ZN5blink18StyleSheetContents17ClientLoadStartedEPNS_13CSSStyleSheetE(%"class.blink::StyleSheetContents"*, %"class.blink::CSSStyleSheet"*) local_unnamed_addr #1

declare void @_ZN5blink18StyleSheetContents10ClearRulesEv(%"class.blink::StyleSheetContents"*) local_unnamed_addr #1

declare i32 @_ZN5blink18StyleSheetContents11ParseStringERKN3WTF6StringEb(%"class.blink::StyleSheetContents"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext) local_unnamed_addr #1

declare void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"*, %"class.blink::ConsoleMessage"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13CSSStyleSheet11IsAlternateEv(%"class.blink::CSSStyleSheet"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 11, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %84, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 12
  %10 = icmp eq i32 %9, 0
  %11 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #14
  br i1 %10, label %12, label %82

12:                                               ; preds = %6
  %13 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kRelAttrE, align 8
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 1, i32 3
  %15 = bitcast %"class.blink::Member.0"* %14 to %"class.blink::ElementData"**
  %16 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %15, align 8
  %17 = icmp eq %"class.blink::ElementData"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %16, i64 0, i32 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.blink::ElementData"* %16 to %"class.blink::UniqueElementData"*
  %25 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %16, i64 1, i32 1
  %26 = bitcast %"class.blink::Member.30"* %25 to %"class.blink::Attribute"**
  %27 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %24, i64 0, i32 2, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  br label %35

30:                                               ; preds = %18
  %31 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %16, i64 1
  %32 = bitcast %"class.blink::ElementData"* %31 to %"class.blink::Attribute"*
  %33 = lshr i32 %20, 1
  %34 = and i32 %33, 268435455
  br label %35

35:                                               ; preds = %30, %23
  %36 = phi %"class.blink::Attribute"* [ %32, %30 ], [ %27, %23 ]
  %37 = phi i32 [ %34, %30 ], [ %29, %23 ]
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 %38
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %68, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %13, i64 0, i32 0, i32 0
  %43 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %46

46:                                               ; preds = %61, %41
  %47 = phi %"class.blink::Attribute"* [ %36, %41 ], [ %62, %61 ]
  %48 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %48, align 8
  %50 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %43
  br i1 %50, label %64, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %53, %54
  br i1 %55, label %56, label %61

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %49, i64 0, i32 4, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %58, %59
  br i1 %60, label %64, label %61

61:                                               ; preds = %56, %51
  %62 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 1
  %63 = icmp eq %"class.blink::Attribute"* %62, %39
  br i1 %63, label %68, label %46

64:                                               ; preds = %56, %46
  %65 = icmp eq %"class.blink::Attribute"* %47, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 0, i32 1
  br label %70

68:                                               ; preds = %61, %64, %35, %12
  %69 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %70

70:                                               ; preds = %68, %66
  %71 = phi %"class.WTF::AtomicString"* [ %69, %68 ], [ %67, %66 ]
  %72 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %73 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0), i8** %74, align 8
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 9, i32* %75, align 8
  %76 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %71, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %82, label %79

79:                                               ; preds = %70
  %80 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %77, %"class.WTF::StringView"* nonnull dereferenceable(24) %2, i32 0) #14
  %81 = icmp ne i32 %80, -1
  br label %82

82:                                               ; preds = %79, %70, %6
  %83 = phi i1 [ false, %6 ], [ %81, %79 ], [ false, %70 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #14
  br label %88

84:                                               ; preds = %1
  %85 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 5
  %86 = load i8, i8* %85, align 1, !range !3
  %87 = icmp ne i8 %86, 0
  br label %88

88:                                               ; preds = %84, %82
  %89 = phi i1 [ %83, %82 ], [ %87, %84 ]
  ret i1 %89
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13CSSStyleSheet14CanBeActivatedERKN3WTF6StringE(%"class.blink::CSSStyleSheet"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 1, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %100

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 11, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %77, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 512
  %14 = icmp eq i32 %13, 0
  %15 = and i32 %12, 48
  %16 = icmp eq i32 %15, 0
  br i1 %14, label %44, label %17

17:                                               ; preds = %10
  br i1 %16, label %18, label %30

18:                                               ; preds = %17
  %19 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kStyleTagE, align 8
  %20 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 1, i32 2
  %23 = bitcast %"class.blink::Member"* %22 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %24 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %24, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %26, %28
  br i1 %29, label %100, label %45

30:                                               ; preds = %17
  %31 = icmp eq i32 %15, 32
  br i1 %31, label %32, label %59

32:                                               ; preds = %30
  %33 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names9kStyleTagE, align 8
  %34 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 1, i32 2
  %37 = bitcast %"class.blink::Member"* %36 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %40, %42
  br i1 %43, label %100, label %59

44:                                               ; preds = %10
  br i1 %16, label %45, label %59

45:                                               ; preds = %18, %44
  %46 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kLinkTagE, align 8
  %47 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 1, i32 2
  %50 = bitcast %"class.blink::Member"* %49 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %51 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %51, i64 0, i32 3, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %48, i64 0, i32 3, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %53, %55
  %57 = bitcast %"class.blink::Node"* %8 to %"class.blink::HTMLLinkElement"*
  %58 = select i1 %56, %"class.blink::HTMLLinkElement"* %57, %"class.blink::HTMLLinkElement"* null
  br label %59

59:                                               ; preds = %32, %30, %44, %45
  %60 = phi %"class.blink::HTMLLinkElement"* [ null, %44 ], [ %58, %45 ], [ null, %30 ], [ null, %32 ]
  %61 = bitcast %"class.blink::Node"* %8 to i32 (%"class.blink::Node"*)***
  %62 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %61, align 8
  %63 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %62, i64 30
  %64 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %63, align 8
  %65 = tail call i32 %64(%"class.blink::Node"* nonnull %8) #14
  %66 = icmp ne i32 %65, 7
  %67 = icmp ne %"class.blink::HTMLLinkElement"* %60, null
  %68 = and i1 %67, %66
  br i1 %68, label %69, label %77

69:                                               ; preds = %59
  %70 = tail call %"class.blink::LinkStyle"* @_ZNK5blink15HTMLLinkElement12GetLinkStyleEv(%"class.blink::HTMLLinkElement"* nonnull %60) #14
  %71 = icmp eq %"class.blink::LinkStyle"* %70, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %69
  %73 = tail call %"class.blink::LinkStyle"* @_ZNK5blink15HTMLLinkElement12GetLinkStyleEv(%"class.blink::HTMLLinkElement"* nonnull %60) #14
  %74 = getelementptr inbounds %"class.blink::LinkStyle", %"class.blink::LinkStyle"* %73, i64 0, i32 4
  %75 = load i32, i32* %74, align 8
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %89, label %77

77:                                               ; preds = %6, %69, %59, %72
  %78 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 7, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %89, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %89, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %79, %"class.WTF::StringImpl"* %87) #14
  br i1 %88, label %89, label %100

89:                                               ; preds = %85, %77, %81, %72
  %90 = tail call zeroext i1 @_ZNK5blink13CSSStyleSheet11IsAlternateEv(%"class.blink::CSSStyleSheet"* %0)
  br i1 %90, label %91, label %99

91:                                               ; preds = %89
  %92 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 7, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %100, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %100, label %99

99:                                               ; preds = %95, %89
  br label %100

100:                                              ; preds = %85, %2, %91, %99, %95, %18, %32
  %101 = phi i1 [ false, %2 ], [ true, %32 ], [ true, %18 ], [ true, %99 ], [ false, %85 ], [ false, %95 ], [ false, %91 ]
  ret i1 %101
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13CSSStyleSheet8disabledEv(%"class.blink::CSSStyleSheet"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 1, !range !3
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13CSSStyleSheet5TraceEPNS_7VisitorE(%"class.blink::CSSStyleSheet"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::TraceDescriptor", align 8
  %4 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 1
  %5 = bitcast %"class.blink::Member.63"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18StyleSheetContentsEE5TraceEPNS_7VisitorEPKv) #14
  br label %14

14:                                               ; preds = %2, %8
  %15 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 11
  %16 = bitcast %"class.blink::Member"* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #14
  br label %25

25:                                               ; preds = %14, %19
  %26 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 12
  %27 = bitcast %"class.blink::Member.486"* %26 to i64*
  %28 = load atomic i64, i64* %27 monotonic, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %25
  %31 = inttoptr i64 %28 to i8*
  %32 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, i64 5
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, align 8
  tail call void %35(%"class.blink::Visitor"* %1, i8* nonnull %31, i8* nonnull %31, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7CSSRuleEE5TraceEPNS_7VisitorEPKv) #14
  br label %36

36:                                               ; preds = %25, %30
  %37 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 17
  %38 = bitcast %"class.blink::Member.497"* %37 to i64*
  %39 = load atomic i64, i64* %38 monotonic, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %36
  %42 = inttoptr i64 %39 to i8*
  %43 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, i64 5
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %45, align 8
  tail call void %46(%"class.blink::Visitor"* %1, i8* nonnull %42, i8* nonnull %42, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9MediaListEE5TraceEPNS_7VisitorEPKv) #14
  br label %47

47:                                               ; preds = %36, %41
  %48 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 18
  %49 = bitcast %"class.blink::HeapVector.499"* %48 to i64*
  %50 = load atomic i64, i64* %49 monotonic, align 8
  %51 = icmp eq i64 %50, 0
  %52 = bitcast %"class.blink::HeapVector.499"* %48 to i8**
  %53 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %54 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %54, i64 11
  %56 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %55, align 8
  tail call void %56(%"class.blink::Visitor"* %1, i8** %52) #14
  br i1 %51, label %63, label %57

57:                                               ; preds = %47
  %58 = inttoptr i64 %50 to i8*
  %59 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %60, i64 5
  %62 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %61, align 8
  tail call void %62(%"class.blink::Visitor"* %1, i8* nonnull %58, i8* nonnull %58, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #14
  br label %63

63:                                               ; preds = %47, %57
  %64 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 19
  %65 = bitcast %"class.blink::Member.506"* %64 to i64*
  %66 = load atomic i64, i64* %65 monotonic, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %74, label %68

68:                                               ; preds = %63
  %69 = inttoptr i64 %66 to i8*
  %70 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %71 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, i64 5
  %73 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %72, align 8
  tail call void %73(%"class.blink::Visitor"* %1, i8* nonnull %69, i8* nonnull %69, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11CSSRuleListEE5TraceEPNS_7VisitorEPKv) #14
  br label %74

74:                                               ; preds = %63, %68
  %75 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 13
  %76 = bitcast %"class.blink::HeapHashSet.490"* %75 to i8*
  %77 = bitcast %"class.blink::HeapHashSet.490"* %75 to i64*
  %78 = load atomic i64, i64* %77 monotonic, align 8
  %79 = inttoptr i64 %78 to %"class.blink::WeakMember.496"*
  %80 = bitcast %"class.blink::HeapHashSet.490"* %75 to i8**
  %81 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %53, align 8
  %82 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %81, i64 11
  %83 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %82, align 8
  tail call void %83(%"class.blink::Visitor"* %1, i8** %80) #14
  %84 = inttoptr i64 %78 to i8*
  %85 = bitcast %"struct.blink::TraceDescriptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %85) #14
  %86 = bitcast %"struct.blink::TraceDescriptor"* %3 to %"class.blink::WeakMember.496"**
  store %"class.blink::WeakMember.496"* %79, %"class.blink::WeakMember.496"** %86, align 8
  %87 = getelementptr inbounds %"struct.blink::TraceDescriptor", %"struct.blink::TraceDescriptor"* %3, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %87, align 8
  %88 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %89 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %89, i64 10
  %91 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %90, align 8
  tail call void %91(%"class.blink::Visitor"* %1, i8* %84, i8** %80, i8* %84, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_9TreeScopeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, %"struct.blink::TraceDescriptor"* nonnull byval(%"struct.blink::TraceDescriptor") align 8 %3, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_9TreeScopeEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv, i8* %76) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #14
  %92 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 14
  %93 = bitcast %"class.blink::Member.8"* %92 to i64*
  %94 = load atomic i64, i64* %93 monotonic, align 8
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %102, label %96

96:                                               ; preds = %74
  %97 = inttoptr i64 %94 to i8*
  %98 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %99 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %99, i64 5
  %101 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %100, align 8
  tail call void %101(%"class.blink::Visitor"* %1, i8* nonnull %97, i8* nonnull %97, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv) #14
  br label %102

102:                                              ; preds = %74, %96
  %103 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %103, %"class.blink::Visitor"* %1) #14
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #1

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink13CSSStyleSheet18GetWrapperTypeInfoEv(%"class.blink::CSSStyleSheet"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink13CSSStyleSheet18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink13CSSStyleSheet5titleEv(%"class.blink::CSSStyleSheet"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #14
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !2

19:                                               ; preds = %10
  tail call void @llvm.trap() #14
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink13CSSStyleSheet4typeEv(%"class.blink::CSSStyleSheet"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i64 0, i64 0), i64 8) #14
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSRule"* @_ZNK5blink13CSSStyleSheet9ownerRuleEv(%"class.blink::CSSStyleSheet"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %2, align 8
  ret %"class.blink::CSSRule"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13CSSStyleSheet15IsCSSStyleSheetEv(%"class.blink::CSSStyleSheet"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare void @_ZN5blink13MediaQuerySetC1ERKS0_(%"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #11

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink13MediaQueryExpD1Ev(%"class.blink::MediaQueryExp"*) unnamed_addr #4

declare void @_ZN5blink18StyleSheetContentsC1ERKS0_(%"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"* dereferenceable(192)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_18StyleSheetContentsEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18StyleSheetContentsEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #14
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #14
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #14
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i64 0, i64 0), i8* %21, i8* %22) #14
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #14
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #14
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #14
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #14
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18StyleSheetContentsEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleSheetContents"*
  tail call void @_ZNK5blink18StyleSheetContents5TraceEPNS_7VisitorE(%"class.blink::StyleSheetContents"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_18StyleSheetContentsEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::StyleSheetContents"*
  tail call void @_ZN5blink18StyleSheetContentsD1Ev(%"class.blink::StyleSheetContents"* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_18StyleSheetContentsEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZNK5blink18StyleSheetContents5TraceEPNS_7VisitorE(%"class.blink::StyleSheetContents"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink18StyleSheetContentsD1Ev(%"class.blink::StyleSheetContents"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.368"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.368", %"class.WTF::HashTable.368"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.23, i64 0, i64 0)) #14
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #14
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 3
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #14
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #14
  %30 = bitcast i8* %29 to %"class.WTF::AtomicString"*
  %31 = call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.368"* %0, %"class.WTF::AtomicString"* %30, i32 %17, %"class.WTF::AtomicString"* null) #14
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.368"*, %"class.WTF::AtomicString"*, i32, %"class.WTF::AtomicString"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.WTF::AtomicString"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.368", %"class.WTF::HashTable.368"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.368", %"class.WTF::HashTable.368"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.368"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %9, align 8
  %17 = ptrtoint %"class.WTF::AtomicString"* %16 to i64
  br label %61

18:                                               ; preds = %157
  %19 = bitcast %"class.WTF::HashTable.368"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %158, %18 ]
  %23 = phi %"class.WTF::AtomicString"* [ null, %10 ], [ %161, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %159, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"class.WTF::AtomicString"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %57, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %55, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi i64 [ 0, %29 ], [ %53, %52 ]
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %25, i64 %32
  %34 = bitcast %"class.WTF::AtomicString"* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast i8* %35 to %"class.WTF::StringImpl"*
  %37 = ptrtoint i8* %35 to i64
  switch i64 %37, label %38 [
    i64 -1, label %52
    i64 0, label %52
  ]

38:                                               ; preds = %31
  %39 = getelementptr inbounds i8, i8* %35, i64 8
  %40 = bitcast i8* %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = bitcast i8* %35 to i32*
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %38
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %38
  %49 = phi i32 [ %47, %46 ], [ %45, %38 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #14
  br label %52

52:                                               ; preds = %51, %48, %31, %31
  %53 = add nuw nsw i64 %32, 1
  %54 = icmp eq i64 %53, %30
  br i1 %54, label %55, label %31

55:                                               ; preds = %52, %27
  %56 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %56) #14
  br label %57

57:                                               ; preds = %20, %55
  %58 = getelementptr inbounds %"class.WTF::HashTable.368", %"class.WTF::HashTable.368"* %0, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, -2147483648
  store i32 %60, i32* %58, align 8
  ret %"class.WTF::AtomicString"* %23

61:                                               ; preds = %13, %157
  %62 = phi i64 [ %17, %13 ], [ %158, %157 ]
  %63 = phi i32 [ %7, %13 ], [ %159, %157 ]
  %64 = phi %"class.WTF::AtomicString"* [ %16, %13 ], [ %160, %157 ]
  %65 = phi %"class.WTF::AtomicString"* [ null, %13 ], [ %161, %157 ]
  %66 = phi i32 [ 0, %13 ], [ %162, %157 ]
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %64, i64 %67
  %69 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = ptrtoint %"class.WTF::StringImpl"* %70 to i64
  switch i64 %71, label %72 [
    i64 -1, label %157
    i64 0, label %157
  ]

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = lshr i32 %74, 8
  %76 = and i32 %75, %14
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 %77
  %79 = ptrtoint %"class.WTF::AtomicString"* %78 to i64
  %80 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %78, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %99, label %83

83:                                               ; preds = %72
  %84 = xor i32 %75, -1
  %85 = lshr i32 %74, 31
  %86 = add nsw i32 %85, %84
  %87 = shl i32 %86, 12
  %88 = xor i32 %87, %86
  %89 = lshr i32 %88, 7
  %90 = xor i32 %89, %88
  %91 = shl i32 %90, 2
  %92 = xor i32 %91, %90
  %93 = lshr i32 %92, 20
  %94 = xor i32 %93, %92
  %95 = or i32 %94, 1
  %96 = zext i32 %95 to i64
  br label %105

97:                                               ; preds = %117
  %98 = ptrtoint %"class.WTF::AtomicString"* %123 to i64
  br label %99

99:                                               ; preds = %97, %72
  %100 = phi i64 [ %79, %72 ], [ %98, %97 ]
  %101 = phi %"class.WTF::AtomicString"* [ null, %72 ], [ %118, %97 ]
  %102 = icmp eq %"class.WTF::AtomicString"* %101, null
  %103 = ptrtoint %"class.WTF::AtomicString"* %101 to i64
  %104 = select i1 %102, i64 %100, i64 %103
  br label %128

105:                                              ; preds = %117, %83
  %106 = phi %"class.WTF::AtomicString"* [ null, %83 ], [ %118, %117 ]
  %107 = phi %"class.WTF::StringImpl"* [ %81, %83 ], [ %126, %117 ]
  %108 = phi i64 [ %79, %83 ], [ %124, %117 ]
  %109 = phi %"class.WTF::AtomicString"* [ %78, %83 ], [ %123, %117 ]
  %110 = phi i64 [ %77, %83 ], [ %122, %117 ]
  %111 = phi i64 [ 0, %83 ], [ %120, %117 ]
  %112 = bitcast %"class.WTF::AtomicString"* %109 to i8**
  %113 = load i8*, i8** %112, align 8
  %114 = icmp eq i8* %113, inttoptr (i64 -1 to i8*)
  br i1 %114, label %117, label %115

115:                                              ; preds = %105
  %116 = icmp eq %"class.WTF::StringImpl"* %107, %70
  br i1 %116, label %128, label %117

117:                                              ; preds = %115, %105
  %118 = phi %"class.WTF::AtomicString"* [ %106, %115 ], [ %109, %105 ]
  %119 = icmp eq i64 %111, 0
  %120 = select i1 %119, i64 %96, i64 %111
  %121 = add i64 %120, %110
  %122 = and i64 %121, %15
  %123 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 %122
  %124 = ptrtoint %"class.WTF::AtomicString"* %123 to i64
  %125 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %123, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %97, label %105

128:                                              ; preds = %115, %99
  %129 = phi i64 [ %104, %99 ], [ %108, %115 ]
  %130 = inttoptr i64 %129 to %"class.WTF::AtomicString"*
  %131 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %130, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #14
  br label %147

147:                                              ; preds = %128, %143, %146
  %148 = bitcast %"class.WTF::AtomicString"* %68 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = inttoptr i64 %129 to i64*
  store i64 %149, i64* %150, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %69, align 8
  %151 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %9, align 8
  %152 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %151, i64 %67
  %153 = icmp eq %"class.WTF::AtomicString"* %152, %3
  %154 = select i1 %153, %"class.WTF::AtomicString"* %130, %"class.WTF::AtomicString"* %65
  %155 = load i32, i32* %6, align 8
  %156 = ptrtoint %"class.WTF::AtomicString"* %151 to i64
  br label %157

157:                                              ; preds = %61, %61, %147
  %158 = phi i64 [ %62, %61 ], [ %156, %147 ], [ %62, %61 ]
  %159 = phi i32 [ %63, %61 ], [ %155, %147 ], [ %63, %61 ]
  %160 = phi %"class.WTF::AtomicString"* [ %64, %61 ], [ %151, %147 ], [ %64, %61 ]
  %161 = phi %"class.WTF::AtomicString"* [ %65, %61 ], [ %154, %147 ], [ %65, %61 ]
  %162 = add i32 %66, 1
  %163 = icmp eq i32 %162, %159
  br i1 %163, label %18, label %61
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.368"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.368", %"class.WTF::HashTable.368"* %0, i64 0, i32 0
  %5 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %4, align 8
  %6 = icmp eq %"class.WTF::AtomicString"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.368"* %0, %"class.WTF::AtomicString"* null)
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::AtomicString"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.368", %"class.WTF::HashTable.368"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 %22
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"class.WTF::StringImpl"* [ %25, %27 ], [ %60, %52 ]
  %43 = phi %"class.WTF::AtomicString"* [ %23, %27 ], [ %58, %52 ]
  %44 = phi %"class.WTF::AtomicString"* [ null, %27 ], [ %53, %52 ]
  %45 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %46 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %47 = bitcast %"class.WTF::AtomicString"* %43 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, inttoptr (i64 -1 to i8*)
  br i1 %49, label %52, label %50

50:                                               ; preds = %41
  %51 = icmp eq %"class.WTF::StringImpl"* %42, %17
  br i1 %51, label %125, label %52

52:                                               ; preds = %41, %50
  %53 = phi %"class.WTF::AtomicString"* [ %44, %50 ], [ %43, %41 ]
  %54 = icmp eq i64 %46, 0
  %55 = select i1 %54, i64 %40, i64 %46
  %56 = add i64 %55, %45
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 %57
  %59 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"class.WTF::AtomicString"* %53, null
  br i1 %63, label %72, label %64

64:                                               ; preds = %62
  %65 = bitcast %"class.WTF::AtomicString"* %53 to i64*
  store i64 0, i64* %65, align 8
  %66 = getelementptr inbounds %"class.WTF::HashTable.368", %"class.WTF::HashTable.368"* %0, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 2147483647
  %69 = and i32 %68, 2147483647
  %70 = and i32 %67, -2147483648
  %71 = or i32 %69, %70
  store i32 %71, i32* %66, align 8
  br label %72

72:                                               ; preds = %10, %62, %64
  %73 = phi %"class.WTF::AtomicString"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  %74 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %94

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i33
  %86 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #14
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !2

91:                                               ; preds = %82
  tail call void @llvm.trap() #14
  unreachable

92:                                               ; preds = %82
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %83, align 4
  br label %94

94:                                               ; preds = %92, %77, %72
  %95 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %96 = bitcast %"class.WTF::AtomicString"* %73 to i64*
  %97 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %73, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  store i64 %95, i64* %96, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #14
  br label %113

113:                                              ; preds = %94, %109, %112
  %114 = getelementptr inbounds %"class.WTF::HashTable.368", %"class.WTF::HashTable.368"* %0, i64 0, i32 2
  %115 = load i32, i32* %114, align 4
  %116 = add i32 %115, 1
  store i32 %116, i32* %114, align 4
  %117 = getelementptr inbounds %"class.WTF::HashTable.368", %"class.WTF::HashTable.368"* %0, i64 0, i32 3
  %118 = load i32, i32* %117, align 8
  %119 = add i32 %118, %116
  %120 = shl i32 %119, 1
  %121 = load i32, i32* %12, align 8
  %122 = icmp ult i32 %120, %121
  br i1 %122, label %125, label %123

123:                                              ; preds = %113
  %124 = tail call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.368"* %0, %"class.WTF::AtomicString"* %73)
  br label %125

125:                                              ; preds = %50, %113, %123
  %126 = phi i8 [ 1, %113 ], [ 1, %123 ], [ 0, %50 ]
  %127 = phi %"class.WTF::AtomicString"* [ %73, %113 ], [ %124, %123 ], [ %43, %50 ]
  %128 = insertvalue { %"class.WTF::AtomicString"*, i8 } undef, %"class.WTF::AtomicString"* %127, 0
  %129 = insertvalue { %"class.WTF::AtomicString"*, i8 } %128, i8 %126, 1
  ret { %"class.WTF::AtomicString"*, i8 } %129
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.368"*, %"class.WTF::AtomicString"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.368", %"class.WTF::HashTable.368"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.368", %"class.WTF::HashTable.368"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #14
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i8* %22, i8* %23) #14
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #14
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #14
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #14
  %36 = bitcast i8* %35 to %"class.WTF::AtomicString"*
  %37 = call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.368"* %0, %"class.WTF::AtomicString"* %36, i32 %32, %"class.WTF::AtomicString"* %1) #14
  ret %"class.WTF::AtomicString"* %37
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN5blink5probe23DidMutateStyleSheetImplEPNS_8DocumentEPNS_13CSSStyleSheetE(%"class.blink::Document"*, %"class.blink::CSSStyleSheet"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16CSSParserContext13IsOriginCleanEv(%"class.blink::CSSParserContext"*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #14
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !2

22:                                               ; preds = %15
  %23 = bitcast %union.anon.2436* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.2436* %16 to %"class.WTF::Vector.2442"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.2442"* %30, i16* nonnull dereferenceable(2) %3) #14
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #14
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !2

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.2437", %"class.WTF::Vector.2437"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.2437"* %41, i8* nonnull dereferenceable(1) %4) #14
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.2442"*, i16* dereferenceable(2)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2442", %"class.WTF::Vector.2442"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2442", %"class.WTF::Vector.2442"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2442"* %0, i32 %5) #14
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2442"* %0, i32 %5) #14
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2442"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2442", %"class.WTF::Vector.2442"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #14
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.25, i64 0, i64 0), i8* %15, i8* %16) #14
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.26, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #14
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #14
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2442", %"class.WTF::Vector.2442"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #14
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #14
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2442"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.2442", %"class.WTF::Vector.2442"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.2442"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2442"* %0, i32 %27) #14
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2442"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2442", %"class.WTF::Vector.2442"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2442", %"class.WTF::Vector.2442"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.2442"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.2442", %"class.WTF::Vector.2442"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.2442", %"class.WTF::Vector.2442"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.2442", %"class.WTF::Vector.2442"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.2442"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.2442", %"class.WTF::Vector.2442"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #14
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2443"* %19, i16* nonnull %6) #14
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #14
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #14
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.2442", %"class.WTF::Vector.2442"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !4

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.2442", %"class.WTF::Vector.2442"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #14
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.2442", %"class.WTF::Vector.2442"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.2442", %"class.WTF::Vector.2442"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2443"* %53, i16* %48) #14
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.2442"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.2442", %"class.WTF::Vector.2442"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.28, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.29, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2443"*, i16*) local_unnamed_addr #13 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #14
  ret void
}

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.2437"*, i8* dereferenceable(1)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2437", %"class.WTF::Vector.2437"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2437", %"class.WTF::Vector.2437"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2437"* %0, i32 %5) #14
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2437"* %0, i32 %5) #14
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2437"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2437", %"class.WTF::Vector.2437"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #14
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.25, i64 0, i64 0), i8* %15, i8* %16) #14
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.26, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #14
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #14
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2437", %"class.WTF::Vector.2437"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #14
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #14
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2437"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.2437", %"class.WTF::Vector.2437"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.2437"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2437"* %0, i32 %27) #14
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2437"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2437", %"class.WTF::Vector.2437"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2437", %"class.WTF::Vector.2437"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.2437"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.2437", %"class.WTF::Vector.2437"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.2437", %"class.WTF::Vector.2437"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.2437", %"class.WTF::Vector.2437"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.2437"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.2437", %"class.WTF::Vector.2437"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #14
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2438"* %18, i8* nonnull %6) #14
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #14
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #14
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.2437", %"class.WTF::Vector.2437"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !4

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.2437", %"class.WTF::Vector.2437"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #14
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.2437", %"class.WTF::Vector.2437"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !4

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.2437", %"class.WTF::Vector.2437"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2438"* %46, i8* %42) #14
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.2437"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.2437", %"class.WTF::Vector.2437"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.28, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.29, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #14
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2438"*, i8*) local_unnamed_addr #13 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #14
  ret void
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare void @_ZN5blink13MediaQuerySetC1Ev(%"class.blink::MediaQuerySet"*) unnamed_addr #1

declare i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #1

declare %"class.blink::LinkStyle"* @_ZNK5blink15HTMLLinkElement12GetLinkStyleEv(%"class.blink::HTMLLinkElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink10MediaQueryD1Ev(%"class.blink::MediaQuery"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"*
  %4 = bitcast i8* %1 to void (%"class.blink::Node"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)**, void (%"class.blink::Node"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Node"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

declare void @_ZN5blink16CSSParserContextC1ERKNS_8DocumentE(%"class.blink::CSSParserContext"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CSSParserContextEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSParserContext"*
  tail call void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv(i8*) #0 comdat align 2 {
  tail call void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 128
  %3 = bitcast i8* %2 to %"class.WTF::StringImpl"**
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #14
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds i8, i8* %0, i64 112
  %21 = bitcast i8* %20 to %"class.blink::DOMWrapperWorld"**
  %22 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %21, align 8
  %23 = icmp eq %"class.blink::DOMWrapperWorld"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #14
  %26 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %22) #14
  %30 = bitcast %"class.blink::DOMWrapperWorld"* %22 to i8*
  tail call void @free(i8* %30) #14
  br label %31

31:                                               ; preds = %19, %24, %29
  %32 = bitcast i8* %0 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %32) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #4

declare void @_ZN5blink18StyleSheetContentsC1EPKNS_16CSSParserContextERKN3WTF6StringEPNS_15StyleRuleImportE(%"class.blink::StyleSheetContents"*, %"class.blink::CSSParserContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::StyleRuleImport"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #14
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare void @_ZN5blink9MediaListC1E13scoped_refptrINS_13MediaQuerySetEEPNS_13CSSStyleSheetE(%"class.blink::MediaList"*, %"class.blink::MediaQuerySet"*, %"class.blink::CSSStyleSheet"*) unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZN5blink16CSSParserContextC1ERKNS_8DocumentERKNS_4KURLEbRKNS_8ReferrerERKN3WTF12TextEncodingENS0_15SelectorProfileENS_24ResourceFetchRestrictionE(%"class.blink::CSSParserContext"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::KURL"* dereferenceable(112), i1 zeroext, %"struct.blink::Referrer"* dereferenceable(16), %"class.WTF::TextEncoding"* dereferenceable(8), i8 zeroext, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.486"* @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.502"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.502", %"class.WTF::Vector.502"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.26, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.502", %"class.WTF::Vector.502"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.486"*, %"class.blink::Member.486"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %24, i64 %25
  ret %"class.blink::Member.486"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.502"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.502", %"class.WTF::Vector.502"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.502", %"class.WTF::Vector.502"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.486"*, %"class.blink::Member.486"** %8, align 8
  %10 = icmp eq %"class.blink::Member.486"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7CSSRuleEEEEEmm(i64 %11) #14
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #14
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.502"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #14
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.486"*, %"class.blink::Member.486"** %8, align 8
  %26 = icmp eq %"class.blink::Member.486"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.486"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #14
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #14
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #14
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.26, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.27, i64 0, i64 0)) #14
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #14
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.502"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.502"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.502"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.502", %"class.WTF::Vector.502"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.502"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.502", %"class.WTF::Vector.502"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #14
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #14
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7CSSRuleEEEEEmm(i64 %14) #14
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #14
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.502", %"class.WTF::Vector.502"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.486"*, %"class.blink::Member.486"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.502", %"class.WTF::Vector.502"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.486"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.486"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.502"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #14
  %33 = bitcast %"class.WTF::Vector.502"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #14
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #14
  %42 = bitcast %"class.WTF::Vector.502"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.502", %"class.WTF::Vector.502"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #14
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7CSSRuleEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.28, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.32, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.34, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_7CSSRuleEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.486"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.486", %"class.blink::Member.486"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.486"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7CSSRuleEE5TraceEPNS_7VisitorEPKv) #14
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7CSSRuleEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.2433"*, %"class.WTF::StringAppend.2434"* byval(%"class.WTF::StringAppend.2434") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.2434"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.2433"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2433", %"class.WTF::StringAppend.2433"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #14
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #14
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %3, %11, %26
  %29 = getelementptr inbounds %"class.WTF::StringAppend.2433", %"class.WTF::StringAppend.2433"* %0, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %1, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.2433", %"class.WTF::StringAppend.2433"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #14
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %43
  tail call void @llvm.trap() #14
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %36, %51
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %60 = add i32 %54, -1
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i32 [ %60, %58 ], [ %54, %53 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #14
  br label %65

65:                                               ; preds = %28, %61, %64
  br i1 %10, label %79, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #14
  br label %79

79:                                               ; preds = %65, %75, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend"*, %"class.WTF::StringAppend.2433"* byval(%"class.WTF::StringAppend.2433") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.2433"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2433", %"class.WTF::StringAppend.2433"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #14
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #14
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2433", %"class.WTF::StringAppend.2433"* %1, i64 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.2433", %"class.WTF::StringAppend.2433"* %1, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #14
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  tail call void @llvm.trap() #14
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %57

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  store i8* %2, i8** %56, align 8
  br label %70

57:                                               ; preds = %38, %53
  %58 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  store i8* %2, i8** %58, align 8
  %59 = load atomic i32, i32* %39 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #14
  br label %70

70:                                               ; preds = %55, %69, %66
  br i1 %10, label %84, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #14
  br label %84

84:                                               ; preds = %70, %80, %83
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2670", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2670"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2670", %"class.WTF::StringTypeAdapter.2670"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2670"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2670"* nonnull %4, i8* %14) #14
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2433"* %9) #14
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2433"* %9) #14
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #14
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.35, i64 0, i64 0), i8* %25, i8* %26) #14
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.36, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #14
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #14
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #14
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #14
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #14
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37, i64 0, i64 0), i8* %41, i8* %42) #14
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.36, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #14
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #14
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #14
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2672", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2670", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.2670"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.2670"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2670"* nonnull %4, i8* %9) #14
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2672"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2672", %"class.WTF::StringTypeAdapter.2672"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2672", %"class.WTF::StringTypeAdapter.2672"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #14
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.2672"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.2434"* %10, i8* %1) #14
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2672", %"class.WTF::StringTypeAdapter.2672"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2434"* %10) #14
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2673"* nonnull %30, i8* %33) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #14
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2433"* %5) #14
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2670"* nonnull %4, i8* %36) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2672", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2670", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.2670"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.2670"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2670"* nonnull %4, i8* %9) #14
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2672"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2672", %"class.WTF::StringTypeAdapter.2672"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2672", %"class.WTF::StringTypeAdapter.2672"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #14
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.2672"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.2434"* %10, i16* %1) #14
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2672", %"class.WTF::StringTypeAdapter.2672"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2434"* %10) #14
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2673"* nonnull %30, i16* %33) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #14
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2433"* %5) #14
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2670"* nonnull %4, i16* %36) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2670"*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2433"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2433", %"class.WTF::StringAppend.2433"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2433", %"class.WTF::StringAppend.2433"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2434"* %8) #14
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #14
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2434"* %8) #14
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #14
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.35, i64 0, i64 0), i8* %26, i8* %27) #14
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.36, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #14
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #14
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #14
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #14
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #14
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37, i64 0, i64 0), i8* %41, i8* %42) #14
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.36, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #14
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #14
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #14
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2434"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2670", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2670"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2670", %"class.WTF::StringTypeAdapter.2670"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2670"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2670"* nonnull %4, i8* %14) #14
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2435"* %9) #14
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2435"* %9) #14
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #14
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.35, i64 0, i64 0), i8* %25, i8* %26) #14
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.36, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #14
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #14
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #14
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #14
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #14
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37, i64 0, i64 0), i8* %41, i8* %42) #14
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.36, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #14
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #14
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #14
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2435"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2670", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.2670"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2670", %"class.WTF::StringTypeAdapter.2670"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.2435", %"class.WTF::StringAppend.2435"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.2670"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2670"* nonnull %4, i8* %13) #14
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2435", %"class.WTF::StringAppend.2435"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #14
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #14
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.35, i64 0, i64 0), i8* %30, i8* %31) #14
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.36, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #14
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #14
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #14
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #14
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #14
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37, i64 0, i64 0), i8* %45, i8* %46) #14
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.36, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #14
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #14
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #14
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2670"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2673"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.2434"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2670", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2672", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2670", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2670"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2670"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2670"* nonnull %5, i8* %10) #14
  %11 = bitcast %"class.WTF::StringTypeAdapter.2670"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2670", %"class.WTF::StringTypeAdapter.2670"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #14
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2670"* nonnull %3, i8* %14) #14
  %15 = bitcast %"class.WTF::StringTypeAdapter.2672"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2672", %"class.WTF::StringTypeAdapter.2672"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2672", %"class.WTF::StringTypeAdapter.2672"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #14
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2672"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2670"* nonnull %3, i8* %1) #14
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2672", %"class.WTF::StringTypeAdapter.2672"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2673"* nonnull %34, i8* %37) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #14
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2435"* %6) #14
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2670"* nonnull %5, i8* %40) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #14
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2670"*, i16*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2673"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.2434"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2670", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2672", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2670", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2670"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2670"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2670"* nonnull %5, i8* %10) #14
  %11 = bitcast %"class.WTF::StringTypeAdapter.2670"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2670", %"class.WTF::StringTypeAdapter.2670"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #14
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2670"* nonnull %3, i8* %14) #14
  %15 = bitcast %"class.WTF::StringTypeAdapter.2672"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2672", %"class.WTF::StringTypeAdapter.2672"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2672", %"class.WTF::StringTypeAdapter.2672"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.2434", %"class.WTF::StringAppend.2434"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #14
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2672"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2670"* nonnull %3, i16* %1) #14
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2672", %"class.WTF::StringTypeAdapter.2672"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2673"* nonnull %34, i16* %37) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #14
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2435"* %6) #14
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2670"* nonnull %5, i16* %40) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #14
  ret void
}

declare void @_ZN5blink16CSSParserContextC1EPKS0_PKNS_13CSSStyleSheetE(%"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"*, %"class.blink::CSSStyleSheet"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA54_KcEEEPS1_DpOT_(i32* dereferenceable(4), [54 x i8]* dereferenceable(54)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #14
  %6 = bitcast i8* %5 to %"class.blink::DOMException"*
  %7 = load i32, i32* %0, align 4
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  %9 = getelementptr inbounds [54 x i8], [54 x i8]* %1, i64 0, i64 0
  %10 = icmp eq [54 x i8]* %1, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = tail call i64 @strlen(i8* nonnull %9) #15
  br label %13

13:                                               ; preds = %2, %11
  %14 = phi i64 [ %12, %11 ], [ 0, %2 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %9, i64 %14) #14
  %15 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  call void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"* %6, i32 %7, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #14
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #14
  br label %32

32:                                               ; preds = %13, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #14
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #14
  br label %49

49:                                               ; preds = %32, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  %50 = getelementptr inbounds i8, i8* %5, i64 -4
  %51 = bitcast i8* %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = or i16 %52, 1
  store atomic i16 %53, i16* %51 release, align 2
  ret %"class.blink::DOMException"* %6
}

declare void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"*, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #14
  %5 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %6 = ptrtoint i64* %3 to i64
  %7 = sub i64 %5, %6
  %8 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %9 = icmp ult i64 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #14
  %10 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference"* %14 to %"class.v8::Object"**
  %16 = load %"class.v8::Object"*, %"class.v8::Object"** %15, align 8
  %17 = icmp eq %"class.v8::Object"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::Object"* %16 to i64*
  %20 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %21 = load i64, i64* %19, align 8
  %22 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %21) #14
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  br label %68

24:                                               ; preds = %2
  %25 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #14
  %26 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25) #14
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 2, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !3
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference"* %35 to %"class.v8::Object"**
  %37 = load %"class.v8::Object"*, %"class.v8::Object"** %36, align 8
  %38 = icmp eq %"class.v8::Object"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::Object"* %37 to i64*
  %41 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %42 = load i64, i64* %40, align 8
  %43 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %42) #14
  %44 = bitcast i64* %43 to %"class.v8::Object"*
  br label %68

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0
  %47 = getelementptr inbounds %"class.WTF::HashMap.111", %"class.WTF::HashMap.111"* %46, i64 0, i32 0
  %48 = call { %"struct.WTF::KeyValuePair.114"*, %"struct.WTF::KeyValuePair.114"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.112"* %47, %"class.blink::ScriptWrappable"* %0) #14
  %49 = extractvalue { %"struct.WTF::KeyValuePair.114"*, %"struct.WTF::KeyValuePair.114"* } %48, 0
  %50 = getelementptr inbounds %"class.WTF::HashMap.111", %"class.WTF::HashMap.111"* %46, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair.114"*, %"struct.WTF::KeyValuePair.114"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %51, i64 %54
  %56 = icmp eq %"struct.WTF::KeyValuePair.114"* %49, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %49, i64 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference"* %58 to %"class.v8::Object"**
  %60 = load %"class.v8::Object"*, %"class.v8::Object"** %59, align 8
  %61 = icmp eq %"class.v8::Object"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::Object"* %60 to i64*
  %64 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %63, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #14
  %67 = bitcast i64* %66 to %"class.v8::Object"*
  br label %68

68:                                               ; preds = %62, %57, %45, %39, %34, %18, %13
  %69 = phi %"class.v8::Object"* [ %23, %18 ], [ null, %13 ], [ %44, %39 ], [ null, %34 ], [ %67, %62 ], [ null, %57 ], [ null, %45 ]
  ret %"class.v8::Object"* %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.40, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.41, i64 0, i64 0)) #14
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #14
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.40, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.42, i64 0, i64 0)) #14
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #14
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.114"*, %"struct.WTF::KeyValuePair.114"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.112"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable.112", %"class.WTF::HashTable.112"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.114"*, %"struct.WTF::KeyValuePair.114"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.114"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable.112", %"class.WTF::HashTable.112"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair.114"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair.114"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.114", %"struct.WTF::KeyValuePair.114"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair.114"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair.114"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair.114"*, %"struct.WTF::KeyValuePair.114"* } undef, %"struct.WTF::KeyValuePair.114"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair.114"*, %"struct.WTF::KeyValuePair.114"* } %78, %"struct.WTF::KeyValuePair.114"* %77, 1
  ret { %"struct.WTF::KeyValuePair.114"*, %"struct.WTF::KeyValuePair.114"* } %79
}

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21StyleSheetCSSRuleListD0Ev(%"class.blink::StyleSheetCSSRuleList"*) unnamed_addr #7 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink21StyleSheetCSSRuleList5TraceEPNS_7VisitorE(%"class.blink::StyleSheetCSSRuleList"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleSheetCSSRuleList", %"class.blink::StyleSheetCSSRuleList"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.61"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv) #14
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::StyleSheetCSSRuleList", %"class.blink::StyleSheetCSSRuleList"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %14, %"class.blink::Visitor"* %1) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink11CSSRuleList18GetWrapperTypeInfoEv(%"class.blink::CSSRuleList"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11CSSRuleList18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21StyleSheetCSSRuleList6lengthEv(%"class.blink::StyleSheetCSSRuleList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleSheetCSSRuleList", %"class.blink::StyleSheetCSSRuleList"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %3, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %4, align 8
  %6 = tail call i32 @_ZNK5blink18StyleSheetContents9RuleCountEv(%"class.blink::StyleSheetContents"* %5) #14
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSRule"* @_ZNK5blink21StyleSheetCSSRuleList4itemEj(%"class.blink::StyleSheetCSSRuleList"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleSheetCSSRuleList", %"class.blink::StyleSheetCSSRuleList"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %3, align 8
  %5 = tail call %"class.blink::CSSRule"* @_ZN5blink13CSSStyleSheet4itemEj(%"class.blink::CSSStyleSheet"* %4, i32 %1)
  ret %"class.blink::CSSRule"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSStyleSheet"* @_ZNK5blink21StyleSheetCSSRuleList13GetStyleSheetEv(%"class.blink::StyleSheetCSSRuleList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleSheetCSSRuleList", %"class.blink::StyleSheetCSSRuleList"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %2, align 8
  ret %"class.blink::CSSStyleSheet"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15ScriptWrappableD2Ev(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSStyleSheet"*
  tail call void @_ZNK5blink13CSSStyleSheet5TraceEPNS_7VisitorE(%"class.blink::CSSStyleSheet"* %3, %"class.blink::Visitor"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA121_KcEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), [121 x i8]* dereferenceable(121)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #14
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  %10 = getelementptr inbounds [121 x i8], [121 x i8]* %2, i64 0, i64 0
  %11 = icmp eq [121 x i8]* %2, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = tail call i64 @strlen(i8* nonnull %10) #15
  br label %14

14:                                               ; preds = %3, %12
  %15 = phi i64 [ %13, %12 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %10, i64 %15) #14
  %16 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #14
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %16) #14
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #14
  br label %33

33:                                               ; preds = %14, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  %34 = getelementptr inbounds i8, i8* %5, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7CSSRuleEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSRule"*
  %4 = bitcast i8* %1 to void (%"class.blink::CSSRule"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CSSRule"*, %"class.blink::Visitor"*)**, void (%"class.blink::CSSRule"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CSSRule"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSRule"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::CSSRule"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSRule"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CSSRule"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9MediaListEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::MediaList"*
  tail call void @_ZNK5blink9MediaList5TraceEPNS_7VisitorE(%"class.blink::MediaList"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

declare void @_ZNK5blink9MediaList5TraceEPNS_7VisitorE(%"class.blink::MediaList"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11CSSRuleListEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_9TreeScopeEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WeakMember.496"**
  %4 = load %"class.blink::WeakMember.496"*, %"class.blink::WeakMember.496"** %3, align 8
  %5 = icmp eq %"class.blink::WeakMember.496"* %4, null
  br i1 %5, label %44, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %1, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::WeakMember.496", %"class.blink::WeakMember.496"* %4, i64 %10
  %12 = getelementptr inbounds %"class.blink::WeakMember.496", %"class.blink::WeakMember.496"* %11, i64 -1
  %13 = icmp ult %"class.blink::WeakMember.496"* %12, %4
  br i1 %13, label %44, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds i8, i8* %1, i64 16
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds i8, i8* %1, i64 12
  %18 = bitcast i8* %17 to i32*
  br label %19

19:                                               ; preds = %14, %40
  %20 = phi %"class.blink::WeakMember.496"* [ %12, %14 ], [ %41, %40 ]
  %21 = getelementptr inbounds %"class.blink::WeakMember.496", %"class.blink::WeakMember.496"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %21, align 8
  %23 = ptrtoint %"class.blink::TreeScope"* %22 to i64
  switch i64 %23, label %24 [
    i64 -1, label %40
    i64 0, label %40
  ]

24:                                               ; preds = %19
  %25 = tail call zeroext i1 @_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_9TreeScopeEEEbPKT_(%"class.blink::LivenessBroker"* %0, %"class.blink::TreeScope"* nonnull %22) #14
  br i1 %25, label %40, label %26

26:                                               ; preds = %24
  %27 = bitcast %"class.blink::WeakMember.496"* %20 to i64*
  store atomic i64 -1, i64* %27 monotonic, align 8
  %28 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #14
  br label %32

32:                                               ; preds = %26, %30
  %33 = load i32, i32* %16, align 8
  %34 = add i32 %33, 1
  %35 = and i32 %34, 2147483647
  %36 = and i32 %33, -2147483648
  %37 = or i32 %35, %36
  store i32 %37, i32* %16, align 8
  %38 = load i32, i32* %18, align 4
  %39 = add i32 %38, -1
  store i32 %39, i32* %18, align 4
  br label %40

40:                                               ; preds = %19, %19, %32, %24
  %41 = getelementptr inbounds %"class.blink::WeakMember.496", %"class.blink::WeakMember.496"* %20, i64 -1
  %42 = load %"class.blink::WeakMember.496"*, %"class.blink::WeakMember.496"** %3, align 8
  %43 = icmp ult %"class.blink::WeakMember.496"* %41, %42
  br i1 %43, label %44, label %19

44:                                               ; preds = %40, %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_9TreeScopeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink10WeakMemberINS3_9TreeScopeEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink10WeakMemberINS3_9TreeScopeEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WeakMember.496"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #14
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %174, %20
  ret void

33:                                               ; preds = %174, %30
  %34 = phi i64 [ 0, %30 ], [ %175, %174 ]
  %35 = getelementptr inbounds %"class.blink::WeakMember.496", %"class.blink::WeakMember.496"* %3, i64 %34
  %36 = bitcast %"class.blink::WeakMember.496"* %35 to i64*
  br i1 %28, label %37, label %104

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %174
    i64 0, label %174
  ]

39:                                               ; preds = %37
  %40 = inttoptr i64 %38 to i8*
  %41 = and i64 %38, -131072
  %42 = inttoptr i64 %41 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 4138
  %44 = load i8, i8* %43, align 2
  %45 = icmp eq i8 %44, 1
  br i1 %45, label %46, label %48

46:                                               ; preds = %39
  %47 = getelementptr inbounds i8, i8* %42, i64 4160
  br label %86

48:                                               ; preds = %39
  %49 = getelementptr inbounds i8, i8* %42, i64 4096
  %50 = bitcast i8* %49 to %"class.blink::NormalPage"*
  %51 = getelementptr inbounds i8, i8* %42, i64 4400
  %52 = bitcast i8* %51 to i8**
  %53 = bitcast i8* %51 to i64*
  %54 = load i64, i64* %53, align 16
  %55 = sub i64 %38, %54
  %56 = lshr i64 %55, 3
  %57 = lshr i64 %55, 6
  %58 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %50, i64 0, i32 2, i32 0, i32 1, i64 %57
  %59 = load atomic i8, i8* %58 acquire, align 1
  %60 = trunc i64 %56 to i32
  %61 = and i32 %60, 7
  %62 = shl i32 2, %61
  %63 = trunc i32 %62 to i8
  %64 = add i8 %63, -1
  %65 = and i8 %64, %59
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %48, %67
  %68 = phi i64 [ %69, %67 ], [ %57, %48 ]
  %69 = add i64 %68, -1
  %70 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %50, i64 0, i32 2, i32 0, i32 1, i64 %69
  %71 = load atomic i8, i8* %70 acquire, align 1
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %67, label %73

73:                                               ; preds = %67, %48
  %74 = phi i64 [ %57, %48 ], [ %69, %67 ]
  %75 = phi i8 [ %65, %48 ], [ %71, %67 ]
  %76 = zext i8 %75 to i32
  %77 = tail call i32 @llvm.ctlz.i32(i32 %76, i1 true) #14, !range !22
  %78 = add nsw i32 %77, -24
  %79 = shl i64 %74, 3
  %80 = or i64 %79, 7
  %81 = sext i32 %78 to i64
  %82 = sub i64 %80, %81
  %83 = shl i64 %82, 3
  %84 = load i8*, i8** %52, align 16
  %85 = getelementptr inbounds i8, i8* %84, i64 %83
  br label %86

86:                                               ; preds = %73, %46
  %87 = phi i8* [ %47, %46 ], [ %85, %73 ]
  %88 = getelementptr inbounds i8, i8* %87, i64 8
  %89 = getelementptr inbounds i8, i8* %87, i64 4
  %90 = bitcast i8* %89 to i16*
  %91 = load atomic i16, i16* %90 acquire, align 2
  %92 = lshr i16 %91, 2
  %93 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %94 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %93, i64 0, i32 0
  %95 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %94, align 8
  %96 = zext i16 %92 to i64
  %97 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %95, i64 %96
  %98 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %97, align 8
  %99 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %98, i64 0, i32 0
  %100 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %99, align 8
  %101 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %102 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %101, i64 5
  %103 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %102, align 8
  tail call void %103(%"class.blink::Visitor"* %0, i8* nonnull %40, i8* %88, void (%"class.blink::Visitor"*, i8*)* %100) #14
  br label %174

104:                                              ; preds = %33
  %105 = load i64, i64* %36, align 8
  switch i64 %105, label %106 [
    i64 -1, label %174
    i64 0, label %174
  ]

106:                                              ; preds = %104
  %107 = load atomic i64, i64* %36 monotonic, align 8
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %174, label %109

109:                                              ; preds = %106
  %110 = inttoptr i64 %107 to i8*
  %111 = and i64 %107, -131072
  %112 = inttoptr i64 %111 to i8*
  %113 = getelementptr inbounds i8, i8* %112, i64 4138
  %114 = load i8, i8* %113, align 2
  %115 = icmp eq i8 %114, 1
  br i1 %115, label %116, label %118

116:                                              ; preds = %109
  %117 = getelementptr inbounds i8, i8* %112, i64 4160
  br label %156

118:                                              ; preds = %109
  %119 = getelementptr inbounds i8, i8* %112, i64 4096
  %120 = bitcast i8* %119 to %"class.blink::NormalPage"*
  %121 = getelementptr inbounds i8, i8* %112, i64 4400
  %122 = bitcast i8* %121 to i8**
  %123 = bitcast i8* %121 to i64*
  %124 = load i64, i64* %123, align 16
  %125 = sub i64 %107, %124
  %126 = lshr i64 %125, 3
  %127 = lshr i64 %125, 6
  %128 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %120, i64 0, i32 2, i32 0, i32 1, i64 %127
  %129 = load atomic i8, i8* %128 acquire, align 1
  %130 = trunc i64 %126 to i32
  %131 = and i32 %130, 7
  %132 = shl i32 2, %131
  %133 = trunc i32 %132 to i8
  %134 = add i8 %133, -1
  %135 = and i8 %134, %129
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %137, label %143

137:                                              ; preds = %118, %137
  %138 = phi i64 [ %139, %137 ], [ %127, %118 ]
  %139 = add i64 %138, -1
  %140 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %120, i64 0, i32 2, i32 0, i32 1, i64 %139
  %141 = load atomic i8, i8* %140 acquire, align 1
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %137, label %143

143:                                              ; preds = %137, %118
  %144 = phi i64 [ %127, %118 ], [ %139, %137 ]
  %145 = phi i8 [ %135, %118 ], [ %141, %137 ]
  %146 = zext i8 %145 to i32
  %147 = tail call i32 @llvm.ctlz.i32(i32 %146, i1 true) #14, !range !22
  %148 = add nsw i32 %147, -24
  %149 = shl i64 %144, 3
  %150 = or i64 %149, 7
  %151 = sext i32 %148 to i64
  %152 = sub i64 %150, %151
  %153 = shl i64 %152, 3
  %154 = load i8*, i8** %122, align 16
  %155 = getelementptr inbounds i8, i8* %154, i64 %153
  br label %156

156:                                              ; preds = %143, %116
  %157 = phi i8* [ %117, %116 ], [ %155, %143 ]
  %158 = getelementptr inbounds i8, i8* %157, i64 8
  %159 = getelementptr inbounds i8, i8* %157, i64 4
  %160 = bitcast i8* %159 to i16*
  %161 = load atomic i16, i16* %160 acquire, align 2
  %162 = lshr i16 %161, 2
  %163 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %164 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %163, i64 0, i32 0
  %165 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %164, align 8
  %166 = zext i16 %162 to i64
  %167 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %165, i64 %166
  %168 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %167, align 8
  %169 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %168, i64 0, i32 0
  %170 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %169, align 8
  %171 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %172 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %171, i64 5
  %173 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %172, align 8
  tail call void %173(%"class.blink::Visitor"* %0, i8* nonnull %110, i8* %158, void (%"class.blink::Visitor"*, i8*)* %170) #14
  br label %174

174:                                              ; preds = %104, %104, %37, %37, %156, %106, %86
  %175 = add nuw nsw i64 %34, 1
  %176 = icmp eq i64 %175, %23
  br i1 %176, label %32, label %33
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_9TreeScopeEEEbPKT_(%"class.blink::LivenessBroker"*, %"class.blink::TreeScope"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::TreeScope"* %1, null
  br i1 %3, label %73, label %4

4:                                                ; preds = %2
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #14
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #14
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = icmp eq %"class.blink::ThreadState"* %14, null
  br i1 %15, label %73, label %16

16:                                               ; preds = %11
  %17 = ptrtoint %"class.blink::TreeScope"* %1 to i64
  %18 = and i64 %17, -131072
  %19 = inttoptr i64 %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 4138
  %21 = load i8, i8* %20, align 2
  %22 = icmp eq i8 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %16
  %24 = getelementptr inbounds i8, i8* %19, i64 4160
  br label %63

25:                                               ; preds = %16
  %26 = getelementptr inbounds i8, i8* %19, i64 4096
  %27 = bitcast i8* %26 to %"class.blink::NormalPage"*
  %28 = getelementptr inbounds i8, i8* %19, i64 4400
  %29 = bitcast i8* %28 to i8**
  %30 = bitcast i8* %28 to i64*
  %31 = load i64, i64* %30, align 16
  %32 = sub i64 %17, %31
  %33 = lshr i64 %32, 3
  %34 = lshr i64 %32, 6
  %35 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %27, i64 0, i32 2, i32 0, i32 1, i64 %34
  %36 = load atomic i8, i8* %35 acquire, align 1
  %37 = trunc i64 %33 to i32
  %38 = and i32 %37, 7
  %39 = shl i32 2, %38
  %40 = trunc i32 %39 to i8
  %41 = add i8 %40, -1
  %42 = and i8 %41, %36
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %25, %44
  %45 = phi i64 [ %46, %44 ], [ %34, %25 ]
  %46 = add i64 %45, -1
  %47 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %27, i64 0, i32 2, i32 0, i32 1, i64 %46
  %48 = load atomic i8, i8* %47 acquire, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %44, label %50

50:                                               ; preds = %44, %25
  %51 = phi i64 [ %34, %25 ], [ %46, %44 ]
  %52 = phi i8 [ %42, %25 ], [ %48, %44 ]
  %53 = zext i8 %52 to i32
  %54 = tail call i32 @llvm.ctlz.i32(i32 %53, i1 true) #14, !range !22
  %55 = add nsw i32 %54, -24
  %56 = shl i64 %51, 3
  %57 = or i64 %56, 7
  %58 = sext i32 %55 to i64
  %59 = sub i64 %57, %58
  %60 = shl i64 %59, 3
  %61 = load i8*, i8** %29, align 16
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  br label %63

63:                                               ; preds = %23, %50
  %64 = phi i8* [ %24, %23 ], [ %62, %50 ]
  %65 = getelementptr inbounds i8, i8* %64, i64 4
  %66 = bitcast i8* %65 to i16*
  %67 = load atomic i16, i16* %66 acquire, align 2
  %68 = getelementptr inbounds i8, i8* %64, i64 6
  %69 = bitcast i8* %68 to i16*
  %70 = load i16, i16* %69, align 2
  %71 = and i16 %70, 1
  %72 = icmp ne i16 %71, 0
  br label %73

73:                                               ; preds = %11, %2, %63
  %74 = phi i1 [ %72, %63 ], [ true, %2 ], [ true, %11 ]
  ret i1 %74
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Document"*
  %4 = bitcast i8* %1 to void (%"class.blink::Document"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)**, void (%"class.blink::Document"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Document"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!7 = distinct !{!7, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!10 = distinct !{!10, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!13 = distinct !{!13, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!16 = distinct !{!16, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!19 = distinct !{!19, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!20 = distinct !{!20, !21}
!21 = !{!"llvm.loop.unroll.disable"}
!22 = !{i32 24, i32 33}
