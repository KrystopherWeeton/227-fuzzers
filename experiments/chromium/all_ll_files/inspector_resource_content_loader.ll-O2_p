; ModuleID = '../../third_party/blink/renderer/core/inspector/inspector_resource_content_loader.cc'
source_filename = "../../third_party/blink/renderer/core/inspector/inspector_resource_content_loader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.15 }
%class.scoped_refptr.15 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.16" }
%"struct.std::__1::atomic.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl.19" }
%"struct.std::__1::__cxx_atomic_impl.19" = type { %"struct.std::__1::__cxx_atomic_base_impl.20" }
%"struct.std::__1::__cxx_atomic_base_impl.20" = type { i32 }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.689 }
%class.scoped_refptr.689 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.690", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.690" = type { %"class.base::RefCounted.691" }
%"class.base::RefCounted.691" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"struct.url::Component" = type { i32, i32 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"class.base::TimeDelta" = type { i64 }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.29 }
%union.anon.29 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%union.anon.53 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.54 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.398", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.49", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.54 }
%"class.WTF::RefCounted.398" = type { %"class.base::RefCounted.399" }
%"class.base::RefCounted.399" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.49" = type { %"class.absl::optional_internal::optional_data.50" }
%"class.absl::optional_internal::optional_data.50" = type { %"class.absl::optional_internal::optional_data_base.51" }
%"class.absl::optional_internal::optional_data_base.51" = type { %"class.absl::optional_internal::optional_data_dtor_base.52" }
%"class.absl::optional_internal::optional_data_dtor_base.52" = type { i8, %union.anon.53 }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.55" }
%"class.WTF::HashMap.55" = type { %"class.WTF::HashTable.56" }
%"class.WTF::HashTable.56" = type <{ %"struct.WTF::KeyValuePair.59"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.59" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.60 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.67, i8, %"class.url::Origin" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr.15 }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.61"*, %"class.std::__1::unique_ptr.61"*, %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.3070" }
%"class.std::__1::__compressed_pair.3070" = type { %"struct.std::__1::__compressed_pair_elem.3071" }
%"struct.std::__1::__compressed_pair_elem.3071" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.std::__1::unique_ptr.61"* }
%class.scoped_refptr.67 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.68", [4 x i8] }>
%"class.base::RefCountedThreadSafe.68" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.49" }
%"class.WTF::Vector.79" = type { %"class.WTF::VectorBuffer.80" }
%"class.WTF::VectorBuffer.80" = type { %"class.WTF::VectorBufferBase.81" }
%"class.WTF::VectorBufferBase.81" = type { %class.scoped_refptr.54*, i32, i32 }
%"class.WTF::Vector.41" = type { %"class.WTF::VectorBuffer.42" }
%"class.WTF::VectorBuffer.42" = type { %"class.WTF::VectorBufferBase.43" }
%"class.WTF::VectorBufferBase.43" = type { %"class.WTF::String"*, i32, i32 }
%union.anon.93 = type { %"class.base::TimeDelta" }
%union.anon.88 = type { %"class.WTF::String" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%union.anon.98 = type { %"class.base::UnguessableToken" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.104 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.3075", %"class.base::internal::flat_tree.3076" }
%"class.base::RefCountedThreadSafe.3075" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.3076" = type { %"class.std::__1::vector.3077" }
%"class.std::__1::vector.3077" = type { %"class.std::__1::__vector_base.3078" }
%"class.std::__1::__vector_base.3078" = type { i32*, i32*, %"class.std::__1::__compressed_pair.3079" }
%"class.std::__1::__compressed_pair.3079" = type { %"struct.std::__1::__compressed_pair_elem.3080" }
%"struct.std::__1::__compressed_pair_elem.3080" = type { i32* }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.2779, %"class.mojo::PendingRemote.3039" }
%class.scoped_refptr.2779 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.mojo::PendingRemote.3039" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::TextEncoding" = type { i8* }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.152" = type { %"class.WTF::HashTable.153" }
%"class.WTF::HashTable.153" = type <{ %"struct.std::__1::pair"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.156 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.157" }
%"class.base::RefCounted.157" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.162" }
%"class.WTF::HashMap.162" = type { %"class.WTF::HashTable.163" }
%"class.WTF::HashTable.163" = type <{ %"struct.WTF::KeyValuePair.165"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.165" = type { %"class.blink::WeakMember.166", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.166" = type { %"class.blink::MemberBase.167" }
%"class.blink::MemberBase.167" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.170", i32, [4 x i8], %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.308", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.319", %"class.std::__1::unique_ptr.325", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.337", %"class.std::__1::unique_ptr.343", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.350", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.235", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.288", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.206" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.206" = type { %"struct.std::__1::__atomic_base.207" }
%"struct.std::__1::__atomic_base.207" = type { %"struct.std::__1::__atomic_base.208" }
%"struct.std::__1::__atomic_base.208" = type { %"struct.std::__1::__cxx_atomic_impl.209" }
%"struct.std::__1::__cxx_atomic_impl.209" = type { %"struct.std::__1::__cxx_atomic_base_impl.210" }
%"struct.std::__1::__cxx_atomic_base_impl.210" = type { i64 }
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.blink::Worklist.217"* }
%"class.blink::Worklist.217" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.206" }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.blink::Worklist.224"* }
%"class.blink::Worklist.224" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.206" }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::Worklist.231"* }
%"class.blink::Worklist.231" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.206" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::Worklist.238"* }
%"class.blink::Worklist.238" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.206" }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::Worklist.245"* }
%"class.blink::Worklist.245" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.206" }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.blink::Worklist.252"* }
%"class.blink::Worklist.252" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.206" }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.blink::Worklist.259"* }
%"class.blink::Worklist.259" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.206" }
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.266", %"class.std::__1::__compressed_pair.275", %"class.std::__1::__compressed_pair.280", %"class.std::__1::__compressed_pair.282", [4 x i8] }>
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268", %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { i64 }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { float }
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.291", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.300" }
%"class.WTF::Vector.300" = type { %"class.WTF::VectorBuffer.301" }
%"class.WTF::VectorBuffer.301" = type { %"class.WTF::VectorBufferBase.302" }
%"class.WTF::VectorBufferBase.302" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.316" }
%"class.WTF::VectorBuffer.316" = type { %"class.WTF::VectorBufferBase.317" }
%"class.WTF::VectorBufferBase.317" = type { %"struct.std::__1::pair.318"*, i32, i32 }
%"struct.std::__1::pair.318" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.331" }
%"class.std::__1::unique_ptr.331" = type { %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.217"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.224"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.231"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.238"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.245"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.391", i64 }
%"class.std::__1::vector.391" = type { %"class.std::__1::__vector_base.392" }
%"class.std::__1::__vector_base.392" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.393" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.349 }
%class.scoped_refptr.349 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.350" = type { %"struct.std::__1::__atomic_base.351" }
%"struct.std::__1::__atomic_base.351" = type { %"struct.std::__1::__cxx_atomic_impl.352" }
%"struct.std::__1::__cxx_atomic_impl.352" = type { %"struct.std::__1::__cxx_atomic_base_impl.353" }
%"struct.std::__1::__cxx_atomic_base_impl.353" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.354 = type { %"class.base::RefCountedData.355"* }
%"class.base::RefCountedData.355" = type opaque
%class.scoped_refptr.356 = type { %"class.base::RefCountedData.357"* }
%"class.base::RefCountedData.357" = type opaque
%"struct.blink::FetchParameters::ResourceWidth" = type <{ float, i8, [3 x i8] }>
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"class.blink::InspectorResourceContentLoader" = type <{ %"class.WTF::HashMap", i8, i8, [6 x i8], %"class.blink::Member", %"class.blink::HeapHashSet", %"class.blink::HeapVector", i32, [4 x i8] }>
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::LocalFrame"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.5" }
%"class.WTF::HashTable.5" = type <{ %"class.blink::Member.7"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.7" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::InspectorResourceContentLoader::ResourceClient"* }
%"class.blink::InspectorResourceContentLoader::ResourceClient" = type { %"class.blink::RawResourceClient.base", %"class.blink::Member.383" }
%"class.blink::RawResourceClient.base" = type { %"class.blink::ResourceClient.base" }
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member.11", i8 }>
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.11" = type { %"class.blink::MemberBase.12" }
%"class.blink::MemberBase.12" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.46", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.146", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.359", %"class.blink::ResourceResponse", %class.scoped_refptr.361, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.22", i8, %"class.absl::optional.31", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.22" = type { %"class.absl::optional_internal::optional_data.23" }
%"class.absl::optional_internal::optional_data.23" = type { %"class.absl::optional_internal::optional_data_base.24" }
%"class.absl::optional_internal::optional_data_base.24" = type { %"class.absl::optional_internal::optional_data_dtor_base.25" }
%"class.absl::optional_internal::optional_data_dtor_base.25" = type { i8, [7 x i8], %union.anon.26 }
%union.anon.26 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.31" = type { %"class.absl::optional_internal::optional_data.32" }
%"class.absl::optional_internal::optional_data.32" = type { %"class.absl::optional_internal::optional_data_base.33" }
%"class.absl::optional_internal::optional_data_base.33" = type { %"class.absl::optional_internal::optional_data_dtor_base.34" }
%"class.absl::optional_internal::optional_data_dtor_base.34" = type { i8, %union.anon.35 }
%union.anon.35 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.36", %"class.WTF::Vector.41" }
%"class.WTF::Vector.36" = type { %"class.WTF::VectorBuffer.37" }
%"class.WTF::VectorBuffer.37" = type { %"class.WTF::VectorBufferBase.38" }
%"class.WTF::VectorBufferBase.38" = type { i32*, i32, i32 }
%"class.WTF::Vector.46" = type { %"class.WTF::VectorBuffer.47" }
%"class.WTF::VectorBuffer.47" = type { %"class.WTF::VectorBufferBase.48" }
%"class.WTF::VectorBufferBase.48" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.142" }
%"class.WTF::HashMap.142" = type { %"class.WTF::HashTable.143" }
%"class.WTF::HashTable.143" = type <{ %"struct.WTF::KeyValuePair.145"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.145" = type <{ %"class.blink::WeakMember.3084", i32, [4 x i8] }>
%"class.blink::WeakMember.3084" = type { %"class.blink::MemberBase.3085" }
%"class.blink::MemberBase.3085" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member.11", i8, [7 x i8] }>
%"class.blink::HeapHashSet.146" = type { %"class.WTF::HashSet.149" }
%"class.WTF::HashSet.149" = type { %"class.WTF::HashTable.150" }
%"class.WTF::HashTable.150" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.152", i8, i8, %class.scoped_refptr.156, %class.scoped_refptr.354, %class.scoped_refptr.356 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.105" }
%"class.base::time_internal::TimeBase.105" = type { i64 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.54, %class.scoped_refptr.54, %class.scoped_refptr.54, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.60, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.69", %"class.absl::optional.74", %"class.absl::optional.84", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.94", %"class.absl::optional.84", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.84", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.94", %"class.absl::optional.99", i8, %class.scoped_refptr.104 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.absl::optional.69" = type { %"class.absl::optional_internal::optional_data.70" }
%"class.absl::optional_internal::optional_data.70" = type { %"class.absl::optional_internal::optional_data_base.71" }
%"class.absl::optional_internal::optional_data_base.71" = type { %"class.absl::optional_internal::optional_data_dtor_base.72" }
%"class.absl::optional_internal::optional_data_dtor_base.72" = type { i8, %union.anon.73 }
%union.anon.73 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.74" = type { %"class.absl::optional_internal::optional_data.75" }
%"class.absl::optional_internal::optional_data.75" = type { %"class.absl::optional_internal::optional_data_base.76" }
%"class.absl::optional_internal::optional_data_base.76" = type { %"class.absl::optional_internal::optional_data_dtor_base.77" }
%"class.absl::optional_internal::optional_data_dtor_base.77" = type { i8, %union.anon.78 }
%union.anon.78 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.79", %"class.WTF::Vector.41", %"class.WTF::String" }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.89", %"class.absl::optional.89" }
%"class.absl::optional.89" = type { %"class.absl::optional_internal::optional_data.90" }
%"class.absl::optional_internal::optional_data.90" = type { %"class.absl::optional_internal::optional_data_base.91" }
%"class.absl::optional_internal::optional_data_base.91" = type { %"class.absl::optional_internal::optional_data_dtor_base.92" }
%"class.absl::optional_internal::optional_data_dtor_base.92" = type { i8, %union.anon.93 }
%"class.absl::optional.84" = type { %"class.absl::optional_internal::optional_data.85" }
%"class.absl::optional_internal::optional_data.85" = type { %"class.absl::optional_internal::optional_data_base.86" }
%"class.absl::optional_internal::optional_data_base.86" = type { %"class.absl::optional_internal::optional_data_dtor_base.87" }
%"class.absl::optional_internal::optional_data_dtor_base.87" = type { i8, %union.anon.88 }
%"class.absl::optional.94" = type { %"class.absl::optional_internal::optional_data.95" }
%"class.absl::optional_internal::optional_data.95" = type { %"class.absl::optional_internal::optional_data_base.96" }
%"class.absl::optional_internal::optional_data_base.96" = type { %"class.absl::optional_internal::optional_data_dtor_base.97" }
%"class.absl::optional_internal::optional_data_dtor_base.97" = type { i8, %union.anon.98 }
%"class.absl::optional.99" = type { %"class.absl::optional_internal::optional_data.100" }
%"class.absl::optional_internal::optional_data.100" = type { %"class.absl::optional_internal::optional_data_base.101" }
%"class.absl::optional_internal::optional_data_base.101" = type { %"class.absl::optional_internal::optional_data_dtor_base.102" }
%"class.absl::optional_internal::optional_data_dtor_base.102" = type { i8, %union.anon.103 }
%union.anon.103 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.blink::Member.359" = type { %"class.blink::MemberBase.360" }
%"class.blink::MemberBase.360" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.106", %class.scoped_refptr.121, %class.scoped_refptr.122, %"struct.blink::CacheControlHeader", %"class.absl::optional.89", %"class.absl::optional.123", %"class.absl::optional.123", %"class.absl::optional.123", i64, %"class.blink::KURL", %"class.WTF::Vector.128", %"class.WTF::String", %"class.WTF::Vector.41", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.94", %"class.WTF::Vector.41", %"class.blink::KURL", %"class.absl::optional.133" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.106" = type { %"class.absl::optional_internal::optional_data.107" }
%"class.absl::optional_internal::optional_data.107" = type { %"class.absl::optional_internal::optional_data_base.108" }
%"class.absl::optional_internal::optional_data_base.108" = type { %"class.absl::optional_internal::optional_data_dtor_base.109" }
%"class.absl::optional_internal::optional_data_dtor_base.109" = type { i8, %union.anon.110 }
%union.anon.110 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.41", %"class.WTF::String", i64, i64, %"class.WTF::Vector.111", %"class.WTF::Vector.116" }
%"class.WTF::Vector.111" = type { %"class.WTF::VectorBuffer.112" }
%"class.WTF::VectorBuffer.112" = type { %"class.WTF::VectorBufferBase.113" }
%"class.WTF::VectorBufferBase.113" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.116" = type { %"class.WTF::VectorBuffer.117" }
%"class.WTF::VectorBuffer.117" = type { %"class.WTF::VectorBufferBase.118" }
%"class.WTF::VectorBufferBase.118" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.121 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.122 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.123" = type { %"class.absl::optional_internal::optional_data.124" }
%"class.absl::optional_internal::optional_data.124" = type { %"class.absl::optional_internal::optional_data_base.125" }
%"class.absl::optional_internal::optional_data_base.125" = type { %"class.absl::optional_internal::optional_data_dtor_base.126" }
%"class.absl::optional_internal::optional_data_dtor_base.126" = type { i8, %union.anon.127 }
%union.anon.127 = type { %"class.base::Time" }
%"class.WTF::Vector.128" = type { %"class.WTF::VectorBuffer.129" }
%"class.WTF::VectorBuffer.129" = type { %"class.WTF::VectorBufferBase.130" }
%"class.WTF::VectorBufferBase.130" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.133" = type { %"class.absl::optional_internal::optional_data.134" }
%"class.absl::optional_internal::optional_data.134" = type { %"class.absl::optional_internal::optional_data_base.135" }
%"class.absl::optional_internal::optional_data_base.135" = type { %"class.absl::optional_internal::optional_data_dtor_base.136" }
%"class.absl::optional_internal::optional_data_dtor_base.136" = type { i8, %union.anon.137 }
%union.anon.137 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.361 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.362", i64, %"class.WTF::Vector.364", %"class.WTF::Vector.369" }
%"class.WTF::RefCounted.362" = type { %"class.base::RefCounted.363" }
%"class.base::RefCounted.363" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.364" = type { %"class.WTF::VectorBuffer.365" }
%"class.WTF::VectorBuffer.365" = type { %"class.WTF::VectorBufferBase.366" }
%"class.WTF::VectorBufferBase.366" = type { i8*, i32, i32 }
%"class.WTF::Vector.369" = type { %"class.WTF::VectorBuffer.370" }
%"class.WTF::VectorBuffer.370" = type { %"class.WTF::VectorBufferBase.371" }
%"class.WTF::VectorBufferBase.371" = type { %"class.std::__1::unique_ptr.372"*, i32, i32 }
%"class.std::__1::unique_ptr.372" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.375", %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"class.blink::Member.383" = type { %"class.blink::MemberBase.384" }
%"class.blink::MemberBase.384" = type { %"class.blink::InspectorResourceContentLoader"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.387" }
%"class.WTF::Vector.387" = type { %"class.WTF::VectorBuffer.388" }
%"class.WTF::VectorBuffer.388" = type { %"class.WTF::VectorBufferBase.389" }
%"class.WTF::VectorBufferBase.389" = type { %"class.blink::Member.11"*, i32, i32 }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.642", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.656", %"class.blink::FrameLoader", %"class.blink::Member.677", %"class.blink::Member.679", %"class.blink::Member.709", %"class.blink::Member.711", %"class.blink::Member.713", %"class.blink::Member.715", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.717", %class.scoped_refptr.937, %"class.blink::Member.938", %"class.blink::Member.940", %"class.blink::Member.956", %"class.blink::Member.958", %"class.blink::Member.960", %"class.blink::Member.962", %"class.blink::Member.964", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.968", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.974", %"class.std::__1::unique_ptr.975", %"class.absl::optional.94", i32, [4 x i8], %"class.std::__1::unique_ptr.981", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.989", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.994", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.999", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1002", %"class.blink::Member.1004", %"class.blink::Member.1006", %"class.blink::Member.1008", %"class.mojo::StructPtr", %"class.blink::Member.1018", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1020", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.404", %"class.blink::Member.406", %"class.blink::Member.408", i8, i32, i8, i32, %"class.blink::Member.611", %"class.blink::Member.431", %"class.blink::FrameLifecycle", %"class.blink::Member.402", %"class.blink::Member.402", %"class.blink::Member.402", %"class.blink::Member.402", %"class.blink::Member.402", %"class.blink::Member.402", %"class.blink::Member", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.621", i8, %"class.base::UnguessableToken", %"class.absl::optional.623", %"class.absl::optional.94", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.402", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.404" = type { %"class.blink::MemberBase.405" }
%"class.blink::MemberBase.405" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.2919", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.402", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.2933", %"class.blink::Member.2937", %"class.blink::Member.2939", %"class.blink::Member.2943", %"class.blink::Member.2945", %"class.blink::Member.2947", %"class.blink::Member.2949", %"class.blink::Member.2951", %"class.blink::HeapObserverSet.2953", %"class.blink::Member.2961", %"class.blink::Member.2963", %"class.blink::Member.2965", %"class.blink::Member.2967", %"class.blink::Member.2969", %"class.blink::Member.2971", %"class.blink::Member.2973", %"class.blink::Member.2975", %"class.blink::Member.2977", %"class.blink::Member.2979", %"class.blink::Member.2981", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.3006", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.3013", %"class.blink::Member.404", %"class.blink::Member.404", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.3020", %"class.std::__1::unique_ptr.3026", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.2919" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2920" }
%"class.blink::HeapHashMap.2920" = type { %"class.WTF::HashMap.2923" }
%"class.WTF::HashMap.2923" = type { %"class.WTF::HashTable.2924" }
%"class.WTF::HashTable.2924" = type <{ %"struct.WTF::KeyValuePair.2926"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2926" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.2927" }
%"class.std::__1::unique_ptr.2927" = type { %"class.std::__1::__compressed_pair.2928" }
%"class.std::__1::__compressed_pair.2928" = type { %"struct.std::__1::__compressed_pair_elem.2929" }
%"struct.std::__1::__compressed_pair_elem.2929" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.2933" = type { %"class.blink::MemberBase.2934" }
%"class.blink::MemberBase.2934" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.404", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::Member.2937" = type { %"class.blink::MemberBase.2938" }
%"class.blink::MemberBase.2938" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.2939" = type { %"class.blink::MemberBase.2940" }
%"class.blink::MemberBase.2940" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type { i32 (...)**, %"class.blink::WeakMember.1911", %"struct.blink::PhysicalOffset", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::WeakMember.1911" = type { %"class.blink::MemberBase.682" }
%"class.blink::MemberBase.682" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.681", %"class.blink::Member.683", %"class.blink::Member.681", %"class.blink::Member.681", %"class.blink::Member.685" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.683" = type { %"class.blink::MemberBase.684" }
%"class.blink::MemberBase.684" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1208", %"class.blink::Member.1193", %"class.blink::Member.683", %"class.blink::Member.1210", %"class.blink::Member.1210", %"class.blink::Member.1232", %"class.blink::Member.1234", %"class.blink::Member.1236", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.1241", %"class.blink::HeapVector.1243" }
%"class.blink::Member.1208" = type { %"class.blink::MemberBase.1209" }
%"class.blink::MemberBase.1209" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.681", %"class.blink::Member.681" }
%"class.blink::Member.1193" = type { %"class.blink::MemberBase.1194" }
%"class.blink::MemberBase.1194" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1501", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector", %"class.WTF::Vector", i8, i32, %"class.blink::Member.1509", %"class.blink::Member.1511", %"class.blink::Member.1513", %"class.blink::Member.1515", %"class.blink::Member.1517", %"class.blink::Member.1519", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1521", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1527", %"class.blink::Member.1529", %"class.blink::Member.1249", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1531", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.1225", %"class.blink::Member.679", %"class.blink::Member.1539", %"class.blink::Member.679", %"class.blink::Member.679", %"class.blink::Member.679", %"class.blink::UserActionElementSet", %"class.blink::Member.1548", double, double, i64, i64, %"class.blink::HeapHashSet.1550", %"class.blink::HeapHashSet.1557", i16, i8, %"class.blink::Member.1564", %"class.blink::Member.1566", %"class.blink::Member.1740", %"class.blink::Member.1742", %"class.blink::TextLinkColors", %"class.blink::Member.1744", i8, [7 x i8], %"class.blink::HeapHashMap.1746", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.679", %"class.WTF::Vector.1753", %"class.blink::Member.1758", %"class.blink::Member.1762", i8, %"class.blink::Member.679", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1764", %"class.blink::HeapVector.1766", %"class.std::__1::unique_ptr.1774", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1780", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1793", %"class.WTF::Vector.1795", i8, i8, %"class.std::__1::unique_ptr.1800", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.1225", %"class.blink::HeapVector.1806", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1814", i8, i32, %"class.blink::Member.1816", %"class.blink::Member.1818", %"class.blink::Member.1820", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1822", %"class.WTF::HashMap.1824", %"class.blink::Member.1829", %"class.blink::Member.1831", %"class.blink::Member.1833", %"class.blink::Member.1835", %"class.blink::Member.1193", %"class.blink::Member.1193", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1837", i8, i32, %"class.blink::Member.1844", %"class.blink::Member.1846", i32, %"class.blink::Member.1848", %"class.blink::Member.1850", %"class.blink::Member.1852", %"class.std::__1::unique_ptr.1854", i64, %"class.std::__1::unique_ptr.1860", i32, i32, %"class.blink::Member.1866", %"class.blink::Member.1868", %"class.blink::Member.1870", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1872", %"class.WTF::Vector.944", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1874", %"class.blink::Member.1881", %"class.std::__1::unique_ptr.1883", %"class.blink::Member.1889", i8, i8, %"class.WTF::String", %"class.blink::Member.1891", i8, [7 x i8], %"class.blink::HeapHashMap.1893", %"class.blink::HeapObserverSet", %"class.blink::Member.1907", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1909", i32, i8, i8, %"class.blink::WeakMember.1911", %"class.blink::Member.1912" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.1501" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1502" }
%"class.blink::HeapHashMap.1502" = type { %"class.WTF::HashMap.1505" }
%"class.WTF::HashMap.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"struct.WTF::KeyValuePair.1508"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1508" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1509" = type { %"class.blink::MemberBase.1510" }
%"class.blink::MemberBase.1510" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1511" = type { %"class.blink::MemberBase.1512" }
%"class.blink::MemberBase.1512" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.2072", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.2145", i32, i8, [3 x i8], %"class.blink::HeapVector.2147", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.2155", %"class.blink::Member.2157", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.2166", %"class.blink::Member.2222", %"class.blink::Member.2224", i8, [7 x i8] }>
%"class.blink::Supplementable.2072" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2073" }
%"class.blink::HeapHashMap.2073" = type { %"class.WTF::HashMap.2076" }
%"class.WTF::HashMap.2076" = type { %"class.WTF::HashTable.2077" }
%"class.WTF::HashTable.2077" = type <{ %"struct.WTF::KeyValuePair.2079"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2079" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.2088" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.2080" }
%"class.blink::HeapObserverSet.2080" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2081" }
%"class.blink::HeapHashSet.2081" = type { %"class.WTF::HashSet.2084" }
%"class.WTF::HashSet.2084" = type { %"class.WTF::HashTable.2085" }
%"class.WTF::HashTable.2085" = type <{ %"class.blink::WeakMember.2087"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2087" = type opaque
%"class.blink::Supplementable.2088" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2089" }
%"class.blink::HeapHashMap.2089" = type { %"class.WTF::HashMap.2092" }
%"class.WTF::HashMap.2092" = type { %"class.WTF::HashTable.2093" }
%"class.WTF::HashTable.2093" = type <{ %"struct.WTF::KeyValuePair.2095"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2095" = type { i8*, %"class.blink::Member.3086" }
%"class.blink::Member.3086" = type { %"class.blink::MemberBase.3087" }
%"class.blink::MemberBase.3087" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3088" }
%"class.blink::Member.3088" = type { %"class.blink::MemberBase.3089" }
%"class.blink::MemberBase.3089" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.2096, %"class.std::__1::unique_ptr.2097", %"class.std::__1::unique_ptr.2097", %"class.std::__1::unique_ptr.2124", %"class.std::__1::unique_ptr.2124", %"class.blink::Member.1511", i32, [4 x i8], %"class.WTF::HashSet.2141", i32, i32 }
%class.scoped_refptr.2096 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.2097" = type { %"class.std::__1::__compressed_pair.2098" }
%"class.std::__1::__compressed_pair.2098" = type { %"struct.std::__1::__compressed_pair_elem.2099" }
%"struct.std::__1::__compressed_pair_elem.2099" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.2100", %"class.std::__1::map.2111", %"class.std::__1::map.2120"* }
%"class.std::__1::map.2100" = type { %"class.std::__1::__tree.2101" }
%"class.std::__1::__tree.2101" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2102", %"class.std::__1::__compressed_pair.2106" }
%"class.std::__1::__compressed_pair.2102" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"class.std::__1::__compressed_pair.2106" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"class.std::__1::map.2111" = type { %"class.std::__1::__tree.2112" }
%"class.std::__1::__tree.2112" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2113", %"class.std::__1::__compressed_pair.2117" }
%"class.std::__1::__compressed_pair.2113" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"class.std::__1::__compressed_pair.2117" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"class.std::__1::map.2120" = type opaque
%"class.std::__1::unique_ptr.2124" = type { %"class.std::__1::__compressed_pair.2125" }
%"class.std::__1::__compressed_pair.2125" = type { %"struct.std::__1::__compressed_pair_elem.2126" }
%"struct.std::__1::__compressed_pair_elem.2126" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array.2127", %"class.base::flat_map.2128" }
%"struct.std::__1::array.2127" = type { [14 x %"class.blink::PolicyValue"] }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.base::flat_map.2128" = type { %"class.base::internal::flat_tree.2129" }
%"class.base::internal::flat_tree.2129" = type { %"class.std::__1::vector.2130" }
%"class.std::__1::vector.2130" = type { %"class.std::__1::__vector_base.2131" }
%"class.std::__1::__vector_base.2131" = type { %"struct.std::__1::pair.2132"*, %"struct.std::__1::pair.2132"*, %"class.std::__1::__compressed_pair.2133" }
%"struct.std::__1::pair.2132" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2133" = type { %"struct.std::__1::__compressed_pair_elem.2134" }
%"struct.std::__1::__compressed_pair_elem.2134" = type { %"struct.std::__1::pair.2132"* }
%"class.WTF::HashSet.2141" = type { %"class.WTF::HashTable.2142" }
%"class.WTF::HashTable.2142" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2145" = type { %"class.blink::MemberBase.2146" }
%"class.blink::MemberBase.2146" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.2147" = type { %"class.WTF::Vector.2150" }
%"class.WTF::Vector.2150" = type { %"class.WTF::VectorBuffer.2151" }
%"class.WTF::VectorBuffer.2151" = type { %"class.WTF::VectorBufferBase.2152" }
%"class.WTF::VectorBufferBase.2152" = type { %"class.blink::Member.2153"*, i32, i32 }
%"class.blink::Member.2153" = type opaque
%"class.blink::Member.2155" = type { %"class.blink::MemberBase.2156" }
%"class.blink::MemberBase.2156" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.2157" = type { %"class.blink::MemberBase.2158" }
%"class.blink::MemberBase.2158" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.2159", i32, i32 }
%"class.blink::HeapHashMap.2159" = type { %"class.WTF::HashMap.2162" }
%"class.WTF::HashMap.2162" = type { %"class.WTF::HashTable.2163" }
%"class.WTF::HashTable.2163" = type <{ %"struct.WTF::KeyValuePair.2165"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2165" = type opaque
%"class.std::__1::unique_ptr.2166" = type { %"class.std::__1::__compressed_pair.2167" }
%"class.std::__1::__compressed_pair.2167" = type { %"struct.std::__1::__compressed_pair_elem.2168" }
%"struct.std::__1::__compressed_pair_elem.2168" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr.2169", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr.2169" = type { %"class.std::__1::unique_ptr.2170" }
%"class.std::__1::unique_ptr.2170" = type { %"class.std::__1::__compressed_pair.2171" }
%"class.std::__1::__compressed_pair.2171" = type { %"struct.std::__1::__compressed_pair_elem.2172" }
%"struct.std::__1::__compressed_pair_elem.2172" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.2173" }
%"class.WTF::Vector.2173" = type { %"class.WTF::VectorBuffer.2174" }
%"class.WTF::VectorBuffer.2174" = type { %"class.WTF::VectorBufferBase.2175" }
%"class.WTF::VectorBufferBase.2175" = type { %"class.mojo::StructPtr.2176"*, i32, i32 }
%"class.mojo::StructPtr.2176" = type { %"class.std::__1::unique_ptr.2177" }
%"class.std::__1::unique_ptr.2177" = type { %"class.std::__1::__compressed_pair.2178" }
%"class.std::__1::__compressed_pair.2178" = type { %"struct.std::__1::__compressed_pair_elem.2179" }
%"struct.std::__1::__compressed_pair_elem.2179" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.2180", %"class.WTF::HashMap.2187", %"class.WTF::HashMap.2192", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.2197", i8, %"class.WTF::Vector.41", i32, %"class.mojo::StructPtr.2198", %"class.WTF::Vector.41" }
%"class.mojo::StructPtr.2180" = type { %"class.std::__1::unique_ptr.2181" }
%"class.std::__1::unique_ptr.2181" = type { %"class.std::__1::__compressed_pair.2182" }
%"class.std::__1::__compressed_pair.2182" = type { %"struct.std::__1::__compressed_pair_elem.2183" }
%"struct.std::__1::__compressed_pair_elem.2183" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.2187" = type { %"class.WTF::HashTable.2188" }
%"class.WTF::HashTable.2188" = type <{ %"struct.WTF::KeyValuePair.2191"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2191" = type opaque
%"class.WTF::HashMap.2192" = type { %"class.WTF::HashTable.2193" }
%"class.WTF::HashTable.2193" = type <{ %"struct.WTF::KeyValuePair.2196"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2196" = type opaque
%"class.mojo::InlinedStructPtr.2197" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.2198" = type { %"class.std::__1::unique_ptr.2199" }
%"class.std::__1::unique_ptr.2199" = type { %"class.std::__1::__compressed_pair.2200" }
%"class.std::__1::__compressed_pair.2200" = type { %"struct.std::__1::__compressed_pair_elem.2201" }
%"struct.std::__1::__compressed_pair_elem.2201" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.41", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2213" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.558", i32 }>
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.561", %"class.base::OnceCallback.562", %"class.absl::optional.89", %"class.absl::optional.563", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.570", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.578", %"class.std::__1::map.589", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.598", i8, %class.scoped_refptr.443, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.599" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback.561" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.562" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.563" = type { %"class.absl::optional_internal::optional_data.564" }
%"class.absl::optional_internal::optional_data.564" = type { %"class.absl::optional_internal::optional_data_base.565" }
%"class.absl::optional_internal::optional_data_base.565" = type { %"class.absl::optional_internal::optional_data_dtor_base.566" }
%"class.absl::optional_internal::optional_data_dtor_base.566" = type { i8, %union.anon.567 }
%union.anon.567 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.443, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.568" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.568" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.457 }
%class.scoped_refptr.457 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.458", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.458" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.459" }
%"struct.std::__1::atomic.459" = type { %"struct.std::__1::__atomic_base.460" }
%"struct.std::__1::__atomic_base.460" = type { %"struct.std::__1::__atomic_base.461" }
%"struct.std::__1::__atomic_base.461" = type { %"struct.std::__1::__cxx_atomic_impl.462" }
%"struct.std::__1::__cxx_atomic_impl.462" = type { %"struct.std::__1::__cxx_atomic_base_impl.463" }
%"struct.std::__1::__cxx_atomic_base_impl.463" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.521 }
%class.scoped_refptr.521 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2916", [4 x i8], %"class.base::RepeatingCallback.561", %class.scoped_refptr.443, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.16", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2916" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.569 }
%class.scoped_refptr.569 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.570" = type { %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.573", %class.scoped_refptr.574 }
%"class.base::RepeatingCallback.573" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.574 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.442", [4 x i8] }>
%"class.base::RefCountedThreadSafe.442" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.445", %"class.std::__1::unique_ptr.451", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.578" = type { %"class.std::__1::__tree.579" }
%"class.std::__1::__tree.579" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.580", %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"class.std::__1::map.589" = type { %"class.std::__1::__tree.590" }
%"class.std::__1::__tree.590" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.591", %"class.std::__1::__compressed_pair.595" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"class.base::OnceCallback.598" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.443 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.444" }>
%"class.base::RefCountedThreadSafe.444" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.599" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.2213" = type { %"class.std::__1::__compressed_pair.2214" }
%"class.std::__1::__compressed_pair.2214" = type { %"struct.std::__1::__compressed_pair_elem.2215" }
%"struct.std::__1::__compressed_pair_elem.2215" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.2222" = type { %"class.blink::MemberBase.2223" }
%"class.blink::MemberBase.2223" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.2224" = type { %"class.blink::MemberBase.2225" }
%"class.blink::MemberBase.2225" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.2157", i8, [7 x i8], %"class.WTF::Vector.2173", %"class.blink::HeapVector.2228", i8, [7 x i8], %"class.WTF::HashSet.2141", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.2228" = type { %"class.WTF::Vector.2231" }
%"class.WTF::Vector.2231" = type { %"class.WTF::VectorBuffer.2232" }
%"class.WTF::VectorBuffer.2232" = type { %"class.WTF::VectorBufferBase.2233" }
%"class.WTF::VectorBufferBase.2233" = type { %"class.blink::Member.2234"*, i32, i32 }
%"class.blink::Member.2234" = type opaque
%"class.blink::Member.1513" = type { %"class.blink::MemberBase.1514" }
%"class.blink::MemberBase.1514" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.1944", %"class.blink::Member.1945", %"class.blink::Member.1947", %"class.blink::Member.1949", %class.scoped_refptr.1536, %class.scoped_refptr.1536, %"class.blink::Member.1951", %"class.blink::Member.1953", %"class.blink::Member.1959", %"class.blink::Member.1963", %"class.blink::Member.2014", %"class.blink::HeapHashMap.2016", %"class.blink::HeapHashSet.2023", %"class.blink::HeapHashSet.2023", %"class.blink::HeapHashMap.2030", %"class.blink::HeapVector", %"class.blink::Member.2037", %"class.blink::HeapTaskRunnerTimer.2039", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.2041", %"class.WTF::Vector.2048", %"class.blink::HeapHashSet.2054", %"class.blink::HeapHashSet.2054", %"class.std::__1::unique_ptr.2060", %"class.base::WeakPtr.2008", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote.2066", %"class.blink::Member.2069", i8, i8, %"class.base::WeakPtrFactory.2071" }
%"class.blink::ThreadState::PrefinalizerRegistration.1944" = type { i8 }
%"class.blink::Member.1945" = type { %"class.blink::MemberBase.1946" }
%"class.blink::MemberBase.1946" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.1947" = type { %"class.blink::MemberBase.1948" }
%"class.blink::MemberBase.1948" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.1949" = type { %"class.blink::MemberBase.1950" }
%"class.blink::MemberBase.1950" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%class.scoped_refptr.1536 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::Member.1951" = type { %"class.blink::MemberBase.1952" }
%"class.blink::MemberBase.1952" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.1953" = type { %"class.blink::MemberBase.1954" }
%"class.blink::MemberBase.1954" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.1957" }
%"class.blink::Member.1957" = type { %"class.blink::MemberBase.1958" }
%"class.blink::MemberBase.1958" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.1959" = type { %"class.blink::MemberBase.1960" }
%"class.blink::MemberBase.1960" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.1963" = type { %"class.blink::MemberBase.1964" }
%"class.blink::MemberBase.1964" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.1967", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.1969", %"class.WTF::HashSet.1974", i8, [3 x i8], i32, %"class.blink::HeapHashMap.1978", %"class.std::__1::map.1985", %"class.std::__1::map.1996", %"class.std::__1::unique_ptr.2005", %"class.blink::Member.1953", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.2012", %"class.mojo::InlinedStructPtr.1014", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.1967" = type { %"class.blink::MemberBase.1968" }
%"class.blink::MemberBase.1968" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.1969" = type { %"class.WTF::HashTable.1970" }
%"class.WTF::HashTable.1970" = type <{ %"struct.WTF::KeyValuePair.1973"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1973" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.1974" = type { %"class.WTF::HashTable.1975" }
%"class.WTF::HashTable.1975" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1978" = type { %"class.WTF::HashMap.1981" }
%"class.WTF::HashMap.1981" = type { %"class.WTF::HashTable.1982" }
%"class.WTF::HashTable.1982" = type <{ %"struct.WTF::KeyValuePair.1984"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1984" = type opaque
%"class.std::__1::map.1985" = type { %"class.std::__1::__tree.1986" }
%"class.std::__1::__tree.1986" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1987", %"class.std::__1::__compressed_pair.1991" }
%"class.std::__1::__compressed_pair.1987" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"class.std::__1::__compressed_pair.1991" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"class.std::__1::map.1996" = type { %"class.std::__1::__tree.1997" }
%"class.std::__1::__tree.1997" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1998", %"class.std::__1::__compressed_pair.2002" }
%"class.std::__1::__compressed_pair.1998" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"class.std::__1::__compressed_pair.2002" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"class.std::__1::unique_ptr.2005" = type { %"class.std::__1::__compressed_pair.2006" }
%"class.std::__1::__compressed_pair.2006" = type { %"struct.std::__1::__compressed_pair_elem.2007" }
%"struct.std::__1::__compressed_pair_elem.2007" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.2008", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.2012" = type { %"class.blink::MemberBase.2013" }
%"class.blink::MemberBase.2013" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr.1014" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2014" = type { %"class.blink::MemberBase.2015" }
%"class.blink::MemberBase.2015" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.2016" = type { %"class.WTF::HashMap.2019" }
%"class.WTF::HashMap.2019" = type { %"class.WTF::HashTable.2020" }
%"class.WTF::HashTable.2020" = type <{ %"struct.WTF::KeyValuePair.2022"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2022" = type opaque
%"class.blink::HeapHashSet.2023" = type { %"class.WTF::HashSet.2026" }
%"class.WTF::HashSet.2026" = type { %"class.WTF::HashTable.2027" }
%"class.WTF::HashTable.2027" = type <{ %"class.blink::WeakMember.2029"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2029" = type { %"class.blink::MemberBase.12" }
%"class.blink::HeapHashMap.2030" = type { %"class.WTF::HashMap.2033" }
%"class.WTF::HashMap.2033" = type { %"class.WTF::HashTable.2034" }
%"class.WTF::HashTable.2034" = type <{ %"struct.WTF::KeyValuePair.2036"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2036" = type opaque
%"class.blink::Member.2037" = type { %"class.blink::MemberBase.2038" }
%"class.blink::MemberBase.2038" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer.2039" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2040", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1536, %"class.base::WeakPtrFactory.1537" }
%"class.base::WeakPtrFactory.1537" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.2040" = type { %"class.blink::MemberBase.1514" }
%"class.blink::HeapHashMap.2041" = type { %"class.WTF::HashMap.2044" }
%"class.WTF::HashMap.2044" = type { %"class.WTF::HashTable.2045" }
%"class.WTF::HashTable.2045" = type <{ %"struct.WTF::KeyValuePair.2047"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2047" = type opaque
%"class.WTF::Vector.2048" = type { %"class.WTF::VectorBuffer.2049" }
%"class.WTF::VectorBuffer.2049" = type { %"class.WTF::VectorBufferBase.2050" }
%"class.WTF::VectorBufferBase.2050" = type { %class.scoped_refptr.2051*, i32, i32 }
%class.scoped_refptr.2051 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.2054" = type { %"class.WTF::HashSet.2057" }
%"class.WTF::HashSet.2057" = type { %"class.WTF::HashTable.2058" }
%"class.WTF::HashTable.2058" = type <{ %"class.blink::Member.359"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2060" = type { %"class.std::__1::__compressed_pair.2061" }
%"class.std::__1::__compressed_pair.2061" = type { %"struct.std::__1::__compressed_pair_elem.2062" }
%"struct.std::__1::__compressed_pair_elem.2062" = type { %"class.WTF::HashSet.673"* }
%"class.WTF::HashSet.673" = type { %"class.WTF::HashTable.674" }
%"class.WTF::HashTable.674" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.base::WeakPtr.2008" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoRemote.2066" = type { %"class.blink::Member.2067" }
%"class.blink::Member.2067" = type { %"class.blink::MemberBase.2068" }
%"class.blink::MemberBase.2068" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.2069" = type { %"class.blink::MemberBase.2070" }
%"class.blink::MemberBase.2070" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.2071" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1515" = type { %"class.blink::MemberBase.1516" }
%"class.blink::MemberBase.1516" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1517" = type { %"class.blink::MemberBase.1518" }
%"class.blink::MemberBase.1518" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1519" = type { %"class.blink::MemberBase.1520" }
%"class.blink::MemberBase.1520" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1521" = type { %"class.std::__1::__compressed_pair.1522" }
%"class.std::__1::__compressed_pair.1522" = type { %"struct.std::__1::__compressed_pair_elem.1523" }
%"struct.std::__1::__compressed_pair_elem.1523" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1527" = type { %"class.blink::MemberBase.1528" }
%"class.blink::MemberBase.1528" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1529" = type { %"class.blink::MemberBase.1530" }
%"class.blink::MemberBase.1530" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.1249" = type { %"class.blink::MemberBase.1250" }
%"class.blink::MemberBase.1250" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.1251", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.1477, %"class.WTF::Vector.1368", %"class.WTF::Vector.1368", %"class.blink::Member.681", %"class.blink::Member.1478", %"class.blink::HeapHashSet.1482", %"class.blink::Member.1193", %"class.WTF::HashSet.1359", %"class.WTF::TextPosition", %"class.blink::Member.1489", %"class.blink::HeapVector.1491", %"class.blink::Member.1498" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.1251" = type { %"class.blink::MemberBase.1252" }
%"class.blink::MemberBase.1252" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type <{ %"class.blink::Member.1255", %"class.WTF::String", %"class.blink::HeapVector.1257", %"class.blink::HeapVector.1264", %"class.blink::HeapVector.1272", %"class.WTF::HashMap.1280", %"class.WTF::AtomicString", %"class.blink::WeakMember.1284", i8, [7 x i8], %"class.blink::Member.1286", %"class.blink::HeapHashSet.1292", %"class.blink::HeapHashSet.1292", %"class.blink::Member.1299", %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::Member.1255" = type { %"class.blink::MemberBase.1256" }
%"class.blink::MemberBase.1256" = type { %"class.blink::StyleRuleImport"* }
%"class.blink::StyleRuleImport" = type opaque
%"class.blink::HeapVector.1257" = type { %"class.WTF::Vector.1260" }
%"class.WTF::Vector.1260" = type { %"class.WTF::VectorBuffer.1261" }
%"class.WTF::VectorBuffer.1261" = type { %"class.WTF::VectorBufferBase.1262" }
%"class.WTF::VectorBufferBase.1262" = type { %"class.blink::Member.1255"*, i32, i32 }
%"class.blink::HeapVector.1264" = type { %"class.WTF::Vector.1267" }
%"class.WTF::Vector.1267" = type { %"class.WTF::VectorBuffer.1268" }
%"class.WTF::VectorBuffer.1268" = type { %"class.WTF::VectorBufferBase.1269" }
%"class.WTF::VectorBufferBase.1269" = type { %"class.blink::Member.1270"*, i32, i32 }
%"class.blink::Member.1270" = type opaque
%"class.blink::HeapVector.1272" = type { %"class.WTF::Vector.1275" }
%"class.WTF::Vector.1275" = type { %"class.WTF::VectorBuffer.1276" }
%"class.WTF::VectorBuffer.1276" = type { %"class.WTF::VectorBufferBase.1277" }
%"class.WTF::VectorBufferBase.1277" = type { %"class.blink::Member.1278"*, i32, i32 }
%"class.blink::Member.1278" = type opaque
%"class.WTF::HashMap.1280" = type { %"class.WTF::HashTable.1281" }
%"class.WTF::HashTable.1281" = type <{ %"struct.WTF::KeyValuePair.59"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1284" = type { %"class.blink::MemberBase.1285" }
%"class.blink::MemberBase.1285" = type { %"class.blink::CSSStyleSheetResource"* }
%"class.blink::CSSStyleSheetResource" = type { %"class.blink::TextResource", %"class.WTF::String", %"class.blink::Member.1251" }
%"class.blink::TextResource" = type { %"class.blink::Resource", %"class.std::__1::unique_ptr.2236" }
%"class.std::__1::unique_ptr.2236" = type { %"class.std::__1::__compressed_pair.2237" }
%"class.std::__1::__compressed_pair.2237" = type { %"struct.std::__1::__compressed_pair_elem.2238" }
%"struct.std::__1::__compressed_pair_elem.2238" = type { %"class.blink::TextResourceDecoder"* }
%"class.blink::TextResourceDecoder" = type { %"class.blink::TextResourceDecoderOptions", %"class.WTF::TextEncoding", %"class.std::__1::unique_ptr.2239", i32, %"class.WTF::Vector.364", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.2245" }
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.std::__1::unique_ptr.2239" = type { %"class.std::__1::__compressed_pair.2240" }
%"class.std::__1::__compressed_pair.2240" = type { %"struct.std::__1::__compressed_pair_elem.2241" }
%"struct.std::__1::__compressed_pair_elem.2241" = type { %"class.WTF::TextCodec"* }
%"class.WTF::TextCodec" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2245" = type { %"class.std::__1::__compressed_pair.2246" }
%"class.std::__1::__compressed_pair.2246" = type { %"struct.std::__1::__compressed_pair_elem.2247" }
%"struct.std::__1::__compressed_pair_elem.2247" = type { %"class.blink::HTMLMetaCharsetParser"* }
%"class.blink::HTMLMetaCharsetParser" = type opaque
%"class.blink::Member.1286" = type { %"class.blink::MemberBase.1287" }
%"class.blink::MemberBase.1287" = type { %"class.blink::CSSParserContext"* }
%"class.blink::CSSParserContext" = type <{ %"class.blink::KURL", %class.scoped_refptr.156, i8, i8, i8, [5 x i8], %"struct.blink::Referrer", i8, i8, i8, i8, i32, %"class.WTF::TextEncoding", %"class.blink::WeakMember.1290", i32, [4 x i8] }>
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::WeakMember.1290" = type { %"class.blink::MemberBase.1291" }
%"class.blink::MemberBase.1291" = type { %"class.blink::Document"* }
%"class.blink::HeapHashSet.1292" = type { %"class.WTF::HashSet.1295" }
%"class.WTF::HashSet.1295" = type { %"class.WTF::HashTable.1296" }
%"class.WTF::HashTable.1296" = type <{ %"class.blink::WeakMember.1298"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1298" = type { %"class.blink::MemberBase.1250" }
%"class.blink::Member.1299" = type { %"class.blink::MemberBase.1300" }
%"class.blink::MemberBase.1300" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1303", %"class.blink::HeapHashMap.1303", %"class.blink::HeapHashMap.1303", %"class.blink::HeapHashMap.1303", %"class.blink::HeapVector.1310", %"class.blink::HeapVector.1310", %"class.blink::HeapVector.1310", %"class.blink::HeapVector.1310", %"class.blink::HeapVector.1310", %"class.blink::HeapVector.1310", %"class.blink::HeapVector.1310", %"class.blink::HeapVector.1310", %"class.blink::HeapVector.1310", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1373", %"class.blink::HeapVector.1381", %"class.blink::HeapVector.1389", %"class.blink::HeapVector.1406", %"class.blink::HeapVector.1414", %"class.blink::HeapVector.1422", %"class.blink::HeapVector.1435", %"class.WTF::Vector.1442", i32, %"class.blink::Member.1466" }
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type { %"class.WTF::AtomicString", %"class.blink::Member.3095" }
%"class.blink::Member.3095" = type { %"class.blink::MemberBase.3096" }
%"class.blink::MemberBase.3096" = type { %"class.blink::HeapVector.1310"* }
%"class.blink::HeapVector.1310" = type { %"class.WTF::Vector.1313" }
%"class.WTF::Vector.1313" = type { %"class.WTF::VectorBuffer.1314" }
%"class.WTF::VectorBuffer.1314" = type { %"class.WTF::VectorBufferBase.1315" }
%"class.WTF::VectorBufferBase.1315" = type { %"class.blink::Member.1316"*, i32, i32 }
%"class.blink::Member.1316" = type { %"class.blink::MemberBase.1317" }
%"class.blink::MemberBase.1317" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1320", i64, [4 x i32] }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.698", %"class.blink::Member.1341" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.698" = type { %"class.blink::MemberBase.699" }
%"class.blink::MemberBase.699" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1341" = type { %"class.blink::MemberBase.1342" }
%"class.blink::MemberBase.1342" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1346", %"class.WTF::HashMap.1346", %"class.WTF::HashMap.1346", %"class.WTF::HashMap.1351", %class.scoped_refptr.1356, %class.scoped_refptr.1367, %class.scoped_refptr.1366, %"class.WTF::Vector.1368", %"class.WTF::Vector.1368", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1346" = type { %"class.WTF::HashTable.1347" }
%"class.WTF::HashTable.1347" = type <{ %"struct.WTF::KeyValuePair.1350"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1350" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3090 }
%class.scoped_refptr.3090 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1357", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1363", %"union.blink::InvalidationSet::Backing.1364", %"union.blink::InvalidationSet::Backing.1365", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1357" = type { %"class.base::RefCounted.1358" }
%"class.base::RefCounted.1358" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1363" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1364" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1365" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1351" = type { %"class.WTF::HashTable.1352" }
%"class.WTF::HashTable.1352" = type <{ %"struct.WTF::KeyValuePair.1355"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1355" = type opaque
%class.scoped_refptr.1356 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1366, %class.scoped_refptr.1366 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1357", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1363", %"union.blink::InvalidationSet::Backing.1364", %"union.blink::InvalidationSet::Backing.1365", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1367 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1366 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::HeapVector.1373" = type { %"class.WTF::Vector.1376" }
%"class.WTF::Vector.1376" = type { %"class.WTF::VectorBuffer.1377" }
%"class.WTF::VectorBuffer.1377" = type { %"class.WTF::VectorBufferBase.1378" }
%"class.WTF::VectorBufferBase.1378" = type { %"class.blink::Member.1379"*, i32, i32 }
%"class.blink::Member.1379" = type { %"class.blink::MemberBase.3091" }
%"class.blink::MemberBase.3091" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.698", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1381" = type { %"class.WTF::Vector.1384" }
%"class.WTF::Vector.1384" = type { %"class.WTF::VectorBuffer.1385" }
%"class.WTF::VectorBuffer.1385" = type { %"class.WTF::VectorBufferBase.1386" }
%"class.WTF::VectorBufferBase.1386" = type { %"class.blink::Member.1387"*, i32, i32 }
%"class.blink::Member.1387" = type { %"class.blink::MemberBase.3092" }
%"class.blink::MemberBase.3092" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.698" }
%"class.blink::HeapVector.1389" = type { %"class.WTF::Vector.1392" }
%"class.WTF::Vector.1392" = type { %"class.WTF::VectorBuffer.1393" }
%"class.WTF::VectorBuffer.1393" = type { %"class.WTF::VectorBufferBase.1394" }
%"class.WTF::VectorBufferBase.1394" = type { %"class.blink::Member.1395"*, i32, i32 }
%"class.blink::Member.1395" = type { %"class.blink::MemberBase.1396" }
%"class.blink::MemberBase.1396" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1397", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1397" = type { %"class.WTF::Vector.1400" }
%"class.WTF::Vector.1400" = type { %"class.WTF::VectorBuffer.1401" }
%"class.WTF::VectorBuffer.1401" = type { %"class.WTF::VectorBufferBase.1402" }
%"class.WTF::VectorBufferBase.1402" = type { %"class.blink::Member.1403"*, i32, i32 }
%"class.blink::Member.1403" = type opaque
%"class.blink::HeapVector.1406" = type { %"class.WTF::Vector.1409" }
%"class.WTF::Vector.1409" = type { %"class.WTF::VectorBuffer.1410" }
%"class.WTF::VectorBuffer.1410" = type { %"class.WTF::VectorBufferBase.1411" }
%"class.WTF::VectorBufferBase.1411" = type { %"class.blink::Member.1412"*, i32, i32 }
%"class.blink::Member.1412" = type { %"class.blink::MemberBase.3093" }
%"class.blink::MemberBase.3093" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.698" }
%"class.blink::HeapVector.1414" = type { %"class.WTF::Vector.1417" }
%"class.WTF::Vector.1417" = type { %"class.WTF::VectorBuffer.1418" }
%"class.WTF::VectorBuffer.1418" = type { %"class.WTF::VectorBufferBase.1419" }
%"class.WTF::VectorBufferBase.1419" = type { %"class.blink::Member.1420"*, i32, i32 }
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.3094" }
%"class.blink::MemberBase.3094" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1430", %"class.blink::Member.1430", %"class.blink::Member.1430", %"class.blink::Member.1430", %"class.blink::Member.1430", %"class.blink::Member.1430", %"class.blink::Member.1430", %"class.blink::Member.1430", %"class.blink::Member.1430", %"class.blink::Member.1430", i32, [4 x i8] }>
%"class.blink::Member.1430" = type { %"class.blink::MemberBase.1431" }
%"class.blink::MemberBase.1431" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapVector.1422" = type { %"class.WTF::Vector.1425" }
%"class.WTF::Vector.1425" = type { %"class.WTF::VectorBuffer.1426" }
%"class.WTF::VectorBuffer.1426" = type { %"class.WTF::VectorBufferBase.1427" }
%"class.WTF::VectorBufferBase.1427" = type { %"class.blink::Member.1428"*, i32, i32 }
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1430", %"class.blink::Member.1430", %"class.blink::Member.1430", %"class.blink::Member.1430", %"class.blink::Member.1430" }
%"class.blink::HeapVector.1435" = type { %"class.WTF::Vector.1438" }
%"class.WTF::Vector.1438" = type { %"class.WTF::VectorBuffer.1439" }
%"class.WTF::VectorBuffer.1439" = type { %"class.WTF::VectorBufferBase.1440" }
%"class.WTF::VectorBufferBase.1440" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1320", i32, i32 }
%"class.WTF::Vector.1442" = type { %"class.WTF::VectorBuffer.1443" }
%"class.WTF::VectorBuffer.1443" = type { %"class.WTF::VectorBufferBase.1444" }
%"class.WTF::VectorBufferBase.1444" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1445, i8, [7 x i8] }>
%class.scoped_refptr.1445 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.1446", %"class.WTF::Vector.1448" }
%"class.WTF::RefCounted.1446" = type { %"class.base::RefCounted.1447" }
%"class.base::RefCounted.1447" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1448" = type { %"class.WTF::VectorBuffer.1449" }
%"class.WTF::VectorBuffer.1449" = type { %"class.WTF::VectorBufferBase.1450" }
%"class.WTF::VectorBufferBase.1450" = type { %"class.std::__1::unique_ptr.1451"*, i32, i32 }
%"class.std::__1::unique_ptr.1451" = type { %"class.std::__1::__compressed_pair.1452" }
%"class.std::__1::__compressed_pair.1452" = type { %"struct.std::__1::__compressed_pair_elem.1453" }
%"struct.std::__1::__compressed_pair_elem.1453" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.1454", %"class.WTF::String" }
%"class.WTF::Vector.1454" = type { %"class.WTF::VectorBuffer.1455" }
%"class.WTF::VectorBuffer.1455" = type { %"class.WTF::VectorBufferBase.1456" }
%"class.WTF::VectorBufferBase.1456" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.blink::Member.1466" = type { %"class.blink::MemberBase.1467" }
%"class.blink::MemberBase.1467" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1470", %"class.blink::HeapHashMap.1470", %"class.blink::HeapHashMap.1470", %"class.blink::HeapHashMap.1470" }
%"class.blink::HeapHashMap.1470" = type { %"class.WTF::HashMap.1473" }
%"class.WTF::HashMap.1473" = type { %"class.WTF::HashTable.1474" }
%"class.WTF::HashTable.1474" = type <{ %"struct.WTF::KeyValuePair.1476"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1476" = type opaque
%class.scoped_refptr.1477 = type { %"class.blink::MediaQuerySet"* }
%"class.WTF::Vector.1368" = type { %"class.WTF::VectorBuffer.1369" }
%"class.WTF::VectorBuffer.1369" = type { %"class.WTF::VectorBufferBase.1370" }
%"class.WTF::VectorBufferBase.1370" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.1478" = type { %"class.blink::MemberBase.1479" }
%"class.blink::MemberBase.1479" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.1480" }
%"class.blink::Member.1480" = type { %"class.blink::MemberBase.1481" }
%"class.blink::MemberBase.1481" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.1482" = type { %"class.WTF::HashSet.1485" }
%"class.WTF::HashSet.1485" = type { %"class.WTF::HashTable.1486" }
%"class.WTF::HashTable.1486" = type <{ %"class.blink::WeakMember.1488"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1488" = type { %"class.blink::MemberBase.684" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1489" = type { %"class.blink::MemberBase.1490" }
%"class.blink::MemberBase.1490" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.1477, %"class.blink::Member.1249", %"class.blink::Member.1478" }
%"class.blink::HeapVector.1491" = type { %"class.WTF::Vector.1494" }
%"class.WTF::Vector.1494" = type { %"class.WTF::VectorBuffer.1495" }
%"class.WTF::VectorBuffer.1495" = type { %"class.WTF::VectorBufferBase.1496" }
%"class.WTF::VectorBufferBase.1496" = type { %"class.blink::Member.1478"*, i32, i32 }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.WTF::Vector.1531" = type { %"class.WTF::VectorBuffer.1532" }
%"class.WTF::VectorBuffer.1532" = type { %"class.WTF::VectorBufferBase.1533" }
%"class.WTF::VectorBufferBase.1533" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.156 }
%"class.blink::Member.1539" = type { %"class.blink::MemberBase.1540" }
%"class.blink::MemberBase.1540" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.1193", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.681", %"class.blink::Member.681", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1541" }
%"class.blink::HeapHashMap.1541" = type { %"class.WTF::HashMap.1544" }
%"class.WTF::HashMap.1544" = type { %"class.WTF::HashTable.1545" }
%"class.WTF::HashTable.1545" = type <{ %"struct.WTF::KeyValuePair.1547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1547" = type opaque
%"class.blink::Member.1548" = type { %"class.blink::MemberBase.1549" }
%"class.blink::MemberBase.1549" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1550" = type { %"class.WTF::HashSet.1553" }
%"class.WTF::HashSet.1553" = type { %"class.WTF::HashTable.1554" }
%"class.WTF::HashTable.1554" = type <{ %"class.blink::WeakMember.1556"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1556" = type opaque
%"class.blink::HeapHashSet.1557" = type { %"class.WTF::HashSet.1560" }
%"class.WTF::HashSet.1560" = type { %"class.WTF::HashTable.1561" }
%"class.WTF::HashTable.1561" = type <{ %"class.blink::WeakMember.1563"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1563" = type opaque
%"class.blink::Member.1564" = type { %"class.blink::MemberBase.1565" }
%"class.blink::MemberBase.1565" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1566" = type { %"class.blink::MemberBase.1567" }
%"class.blink::MemberBase.1567" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.1193", i32, i32, i32, %"class.blink::Member.1249", %"class.blink::Member.1570", %"class.blink::Member.1601", %"class.blink::HeapHashMap.1603", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1610", %"class.blink::HeapHashSet.1610", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1616", %"class.blink::Member.1630", %"class.blink::Member.1660", %"class.blink::Member.1662", %"class.blink::Member.1668", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1679", %"class.blink::Member.1685", %"class.blink::HeapHashMap.1687", %"class.blink::HeapHashMap.1694", %"class.std::__1::unique_ptr.1701", i32, %"class.blink::HeapVector.1707", %"class.blink::HeapVector.1707", %"class.blink::HeapVector.1582", %"class.blink::HeapHashSet.1292", %"class.blink::HeapHashMap.1715", %"class.blink::Member.1722", %"class.blink::HeapHashMap.1724", %class.scoped_refptr.1731, %class.scoped_refptr.1732, %"class.blink::Member.1430", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1733", %"class.blink::Member.679" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1570" = type { %"class.blink::MemberBase.1571" }
%"class.blink::MemberBase.1571" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.683", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1574", %"class.blink::HeapVector.1582", i8 }>
%"class.blink::HeapVector.1574" = type { %"class.WTF::Vector.1577" }
%"class.WTF::Vector.1577" = type { %"class.WTF::VectorBuffer.1578" }
%"class.WTF::VectorBuffer.1578" = type { %"class.WTF::VectorBufferBase.1579" }
%"class.WTF::VectorBufferBase.1579" = type { %"class.blink::Member.1580"*, i32, i32 }
%"class.blink::Member.1580" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet.1590" }
%"class.blink::HeapListHashSet.1590" = type { %"class.WTF::ListHashSet.base.1600", [7 x i8] }
%"class.WTF::ListHashSet.base.1600" = type <{ %"class.WTF::HashTable.1595", %"class.blink::Member.1597", %"class.blink::Member.1597", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1595" = type <{ %"class.blink::Member.1597"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1597" = type { %"class.blink::MemberBase.1598" }
%"class.blink::MemberBase.1598" = type { %"class.blink::HeapListHashSetNode.1599"* }
%"class.blink::HeapListHashSetNode.1599" = type { %"class.blink::Member.681", %"class.blink::Member.1597", %"class.blink::Member.1597" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1601" = type { %"class.blink::MemberBase.1602" }
%"class.blink::MemberBase.1602" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1603" = type { %"class.WTF::HashMap.1606" }
%"class.WTF::HashMap.1606" = type { %"class.WTF::HashTable.1607" }
%"class.WTF::HashTable.1607" = type <{ %"struct.WTF::KeyValuePair.1609"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1609" = type opaque
%"class.blink::HeapHashSet.1610" = type { %"class.WTF::HashSet.1613" }
%"class.WTF::HashSet.1613" = type { %"class.WTF::HashTable.1614" }
%"class.WTF::HashTable.1614" = type <{ %"class.blink::Member.683"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1616" = type { %"class.blink::MemberBase.1617" }
%"class.blink::MemberBase.1617" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1620", %"class.blink::Member.1622" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1620" = type { %"class.blink::MemberBase.1621" }
%"class.blink::MemberBase.1621" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type opaque
%"class.blink::Member.1622" = type { %"class.blink::MemberBase.1623" }
%"class.blink::MemberBase.1623" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1626", %"class.blink::Member.1628" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1626" = type { %"class.blink::MemberBase.1627" }
%"class.blink::MemberBase.1627" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1628" = type { %"class.blink::MemberBase.1629" }
%"class.blink::MemberBase.1629" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1927", %"class.blink::Member.1622", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp] }
%"class.blink::HeapVector.1927" = type { %"class.WTF::Vector.1930" }
%"class.WTF::Vector.1930" = type { %"class.WTF::VectorBuffer.1931" }
%"class.WTF::VectorBuffer.1931" = type { %"class.WTF::VectorBufferBase.1932" }
%"class.WTF::VectorBufferBase.1932" = type { %"class.blink::Member.1628"*, i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1934, i32, %"class.absl::optional.1935", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.1934 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1935" = type { %"class.absl::optional_internal::optional_data.1936" }
%"class.absl::optional_internal::optional_data.1936" = type { %"class.absl::optional_internal::optional_data_base.1937" }
%"class.absl::optional_internal::optional_data_base.1937" = type { %"class.absl::optional_internal::optional_data_dtor_base.1938" }
%"class.absl::optional_internal::optional_data_dtor_base.1938" = type { i8, %union.anon.1939 }
%union.anon.1939 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1630" = type { %"class.blink::MemberBase.1631" }
%"class.blink::MemberBase.1631" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.1193", %class.scoped_refptr.1641, %"class.blink::SelectorFilter", %"class.blink::Member.1601", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1634" }
%"class.blink::HeapHashMap.1634" = type { %"class.WTF::HashMap.1637" }
%"class.WTF::HashMap.1637" = type { %"class.WTF::HashTable.1638" }
%"class.WTF::HashTable.1638" = type <{ %"struct.WTF::KeyValuePair.1640"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1640" = type opaque
%class.scoped_refptr.1641 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1642", %"class.std::__1::unique_ptr.1654" }
%"class.blink::HeapVector.1642" = type { %"class.WTF::Vector.1645" }
%"class.WTF::Vector.1645" = type { %"class.WTF::VectorBuffer.1646" }
%"class.WTF::VectorBuffer.1646" = type { %"class.WTF::VectorBufferBase.1647" }
%"class.WTF::VectorBufferBase.1647" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.679", %"class.WTF::Vector.1648" }
%"class.WTF::Vector.1648" = type { %"class.WTF::VectorBuffer.1649" }
%"class.WTF::VectorBuffer.1649" = type { %"class.WTF::VectorBufferBase.1650", [16 x i8] }
%"class.WTF::VectorBufferBase.1650" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1654" = type { %"class.std::__1::__compressed_pair.1655" }
%"class.std::__1::__compressed_pair.1655" = type { %"struct.std::__1::__compressed_pair_elem.1656" }
%"struct.std::__1::__compressed_pair_elem.1656" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1660" = type { %"class.blink::MemberBase.1661" }
%"class.blink::MemberBase.1661" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1662" = type { %"class.blink::MemberBase.1663" }
%"class.blink::MemberBase.1663" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1666", i8, [7 x i8] }>
%"class.blink::Member.1666" = type { %"class.blink::MemberBase.1667" }
%"class.blink::MemberBase.1667" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1668" = type { %"class.blink::MemberBase.1669" }
%"class.blink::MemberBase.1669" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1299", i8, i8, [6 x i8] }>
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1672" }
%"class.blink::HeapHashMap.1672" = type { %"class.WTF::HashMap.1675" }
%"class.WTF::HashMap.1675" = type { %"class.WTF::HashTable.1676" }
%"class.WTF::HashTable.1676" = type <{ %"struct.WTF::KeyValuePair.1678"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1678" = type { %"class.blink::Member.1208", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.3166", %"class.WTF::Vector.3166" }
%"class.WTF::Vector.3166" = type { %"class.WTF::VectorBuffer.3167" }
%"class.WTF::VectorBuffer.3167" = type { %"class.WTF::VectorBufferBase.3168" }
%"class.WTF::VectorBufferBase.3168" = type { %class.scoped_refptr.3090*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.681", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1679" = type { %"class.WTF::HashSet.1682" }
%"class.WTF::HashSet.1682" = type { %"class.WTF::HashTable.1683" }
%"class.WTF::HashTable.1683" = type <{ %"class.blink::Member.679"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1685" = type { %"class.blink::MemberBase.1686" }
%"class.blink::MemberBase.1686" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1687" = type { %"class.WTF::HashMap.1690" }
%"class.WTF::HashMap.1690" = type { %"class.WTF::HashTable.1691" }
%"class.WTF::HashTable.1691" = type <{ %"struct.WTF::KeyValuePair.1693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1693" = type opaque
%"class.blink::HeapHashMap.1694" = type { %"class.WTF::HashMap.1697" }
%"class.WTF::HashMap.1697" = type { %"class.WTF::HashTable.1698" }
%"class.WTF::HashTable.1698" = type <{ %"struct.WTF::KeyValuePair.1700"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1700" = type opaque
%"class.std::__1::unique_ptr.1701" = type { %"class.std::__1::__compressed_pair.1702" }
%"class.std::__1::__compressed_pair.1702" = type { %"struct.std::__1::__compressed_pair_elem.1703" }
%"struct.std::__1::__compressed_pair_elem.1703" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1707" = type { %"class.WTF::Vector.1710" }
%"class.WTF::Vector.1710" = type { %"class.WTF::VectorBuffer.1711" }
%"class.WTF::VectorBuffer.1711" = type { %"class.WTF::VectorBufferBase.1712" }
%"class.WTF::VectorBufferBase.1712" = type { %"struct.std::__1::pair.1713"*, i32, i32 }
%"struct.std::__1::pair.1713" = type opaque
%"class.blink::HeapVector.1582" = type { %"class.WTF::Vector.1585" }
%"class.WTF::Vector.1585" = type { %"class.WTF::VectorBuffer.1586" }
%"class.WTF::VectorBuffer.1586" = type { %"class.WTF::VectorBufferBase.1587" }
%"class.WTF::VectorBufferBase.1587" = type { %"struct.std::__1::pair.1588"*, i32, i32 }
%"struct.std::__1::pair.1588" = type opaque
%"class.blink::HeapHashMap.1715" = type { %"class.WTF::HashMap.1718" }
%"class.WTF::HashMap.1718" = type { %"class.WTF::HashTable.1719" }
%"class.WTF::HashTable.1719" = type <{ %"struct.WTF::KeyValuePair.1721"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1721" = type { %"class.WTF::AtomicString", %"class.blink::Member.1395" }
%"class.blink::Member.1722" = type { %"class.blink::MemberBase.1723" }
%"class.blink::MemberBase.1723" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1724" = type { %"class.WTF::HashMap.1727" }
%"class.WTF::HashMap.1727" = type { %"class.WTF::HashTable.1728" }
%"class.WTF::HashTable.1728" = type <{ %"struct.WTF::KeyValuePair.1730"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1730" = type opaque
%class.scoped_refptr.1731 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.1732 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type opaque
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1733" = type { %"class.WTF::HashSet.1736" }
%"class.WTF::HashSet.1736" = type { %"class.WTF::HashTable.1737" }
%"class.WTF::HashTable.1737" = type <{ %"class.blink::Member.1739"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1739" = type opaque
%"class.blink::Member.1740" = type { %"class.blink::MemberBase.1741" }
%"class.blink::MemberBase.1741" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.683", %"class.blink::HeapVector.1243" }
%"class.blink::Member.1742" = type { %"class.blink::MemberBase.1743" }
%"class.blink::MemberBase.1743" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1744" = type { %"class.blink::MemberBase.1745" }
%"class.blink::MemberBase.1745" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1746" = type { %"class.WTF::HashMap.1749" }
%"class.WTF::HashMap.1749" = type { %"class.WTF::HashTable.1750" }
%"class.WTF::HashTable.1750" = type <{ %"struct.WTF::KeyValuePair.1752"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1752" = type opaque
%"class.WTF::Vector.1753" = type { %"class.WTF::VectorBuffer.1754" }
%"class.WTF::VectorBuffer.1754" = type { %"class.WTF::VectorBufferBase.1755" }
%"class.WTF::VectorBufferBase.1755" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1758" = type { %"class.blink::MemberBase.1759" }
%"class.blink::MemberBase.1759" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1762" = type { %"class.blink::MemberBase.1763" }
%"class.blink::MemberBase.1763" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1764" = type { %"class.blink::MemberBase.1765" }
%"class.blink::MemberBase.1765" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1766" = type { %"class.WTF::Vector.1769" }
%"class.WTF::Vector.1769" = type { %"class.WTF::VectorBuffer.1770" }
%"class.WTF::VectorBuffer.1770" = type { %"class.WTF::VectorBufferBase.1771" }
%"class.WTF::VectorBufferBase.1771" = type { %"class.blink::Member.1772"*, i32, i32 }
%"class.blink::Member.1772" = type opaque
%"class.std::__1::unique_ptr.1774" = type { %"class.std::__1::__compressed_pair.1775" }
%"class.std::__1::__compressed_pair.1775" = type { %"struct.std::__1::__compressed_pair_elem.1776" }
%"struct.std::__1::__compressed_pair_elem.1776" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1780" = type { %"class.WTF::HashSet.1783" }
%"class.WTF::HashSet.1783" = type { %"class.WTF::HashTable.1784" }
%"class.WTF::HashTable.1784" = type <{ %"class.blink::WeakMember.1786"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1786" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1787", i32, [4 x i8] }>
%"class.WTF::Vector.1787" = type { %"class.WTF::VectorBuffer.1788" }
%"class.WTF::VectorBuffer.1788" = type { %"class.WTF::VectorBufferBase.1789" }
%"class.WTF::VectorBufferBase.1789" = type { %"struct.std::__1::pair.1790"*, i32, i32 }
%"struct.std::__1::pair.1790" = type opaque
%"class.blink::Member.1793" = type { %"class.blink::MemberBase.1794" }
%"class.blink::MemberBase.1794" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1795" = type { %"class.WTF::VectorBuffer.1796" }
%"class.WTF::VectorBuffer.1796" = type { %"class.WTF::VectorBufferBase.1797" }
%"class.WTF::VectorBufferBase.1797" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1800" = type { %"class.std::__1::__compressed_pair.1801" }
%"class.std::__1::__compressed_pair.1801" = type { %"struct.std::__1::__compressed_pair_elem.1802" }
%"struct.std::__1::__compressed_pair_elem.1802" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1225" = type { %"class.WTF::Vector.1228" }
%"class.WTF::Vector.1228" = type { %"class.WTF::VectorBuffer.1229" }
%"class.WTF::VectorBuffer.1229" = type { %"class.WTF::VectorBufferBase.1230" }
%"class.WTF::VectorBufferBase.1230" = type { %"class.blink::Member.679"*, i32, i32 }
%"class.blink::HeapVector.1806" = type { %"class.WTF::Vector.1809" }
%"class.WTF::Vector.1809" = type { %"class.WTF::VectorBuffer.1810" }
%"class.WTF::VectorBuffer.1810" = type { %"class.WTF::VectorBufferBase.1811" }
%"class.WTF::VectorBufferBase.1811" = type { %"class.blink::Member.1812"*, i32, i32 }
%"class.blink::Member.1812" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.1193" }
%"class.blink::Member.1814" = type { %"class.blink::MemberBase.1815" }
%"class.blink::MemberBase.1815" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1816" = type { %"class.blink::MemberBase.1817" }
%"class.blink::MemberBase.1817" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1818" = type { %"class.blink::MemberBase.1819" }
%"class.blink::MemberBase.1819" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1820" = type { %"class.blink::MemberBase.1821" }
%"class.blink::MemberBase.1821" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1822" = type { %"class.blink::MemberBase.1823" }
%"class.blink::MemberBase.1823" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1824" = type { %"class.WTF::HashTable.1825" }
%"class.WTF::HashTable.1825" = type <{ %"struct.WTF::KeyValuePair.1828"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1828" = type opaque
%"class.blink::Member.1829" = type { %"class.blink::MemberBase.1830" }
%"class.blink::MemberBase.1830" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1831" = type { %"class.blink::MemberBase.1832" }
%"class.blink::MemberBase.1832" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1833" = type { %"class.blink::MemberBase.1834" }
%"class.blink::MemberBase.1834" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1835" = type { %"class.blink::MemberBase.1836" }
%"class.blink::MemberBase.1836" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1538", { i64, i64 } }
%"class.blink::WeakMember.1538" = type { %"class.blink::MemberBase.1194" }
%"class.blink::HeapHashSet.1837" = type { %"class.WTF::HashSet.1840" }
%"class.WTF::HashSet.1840" = type { %"class.WTF::HashTable.1841" }
%"class.WTF::HashTable.1841" = type <{ %"class.blink::Member.1843"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1843" = type opaque
%"class.blink::Member.1844" = type { %"class.blink::MemberBase.1845" }
%"class.blink::MemberBase.1845" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1846" = type { %"class.blink::MemberBase.1847" }
%"class.blink::MemberBase.1847" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1848" = type { %"class.blink::MemberBase.1849" }
%"class.blink::MemberBase.1849" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1850" = type { %"class.blink::MemberBase.1851" }
%"class.blink::MemberBase.1851" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1852" = type { %"class.blink::MemberBase.1853" }
%"class.blink::MemberBase.1853" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1854" = type { %"class.std::__1::__compressed_pair.1855" }
%"class.std::__1::__compressed_pair.1855" = type { %"struct.std::__1::__compressed_pair_elem.1856" }
%"struct.std::__1::__compressed_pair_elem.1856" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1860" = type { %"class.std::__1::__compressed_pair.1861" }
%"class.std::__1::__compressed_pair.1861" = type { %"struct.std::__1::__compressed_pair_elem.1862" }
%"struct.std::__1::__compressed_pair_elem.1862" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1866" = type { %"class.blink::MemberBase.1867" }
%"class.blink::MemberBase.1867" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1868" = type { %"class.blink::MemberBase.1869" }
%"class.blink::MemberBase.1869" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1870" = type { %"class.blink::MemberBase.1871" }
%"class.blink::MemberBase.1871" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1872" = type { %"class.blink::MemberBase.1873" }
%"class.blink::MemberBase.1873" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.944" = type { %"class.WTF::VectorBuffer.945" }
%"class.WTF::VectorBuffer.945" = type { %"class.WTF::VectorBufferBase.946" }
%"class.WTF::VectorBufferBase.946" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1874" = type { %"class.WTF::HashMap.1877" }
%"class.WTF::HashMap.1877" = type { %"class.WTF::HashTable.1878" }
%"class.WTF::HashTable.1878" = type <{ %"struct.WTF::KeyValuePair.1880"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1880" = type opaque
%"class.blink::Member.1881" = type { %"class.blink::MemberBase.1882" }
%"class.blink::MemberBase.1882" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1883" = type { %"class.std::__1::__compressed_pair.1884" }
%"class.std::__1::__compressed_pair.1884" = type { %"struct.std::__1::__compressed_pair_elem.1885" }
%"struct.std::__1::__compressed_pair_elem.1885" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1889" = type { %"class.blink::MemberBase.1890" }
%"class.blink::MemberBase.1890" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1891" = type { %"class.blink::MemberBase.1892" }
%"class.blink::MemberBase.1892" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1893" = type { %"class.WTF::HashMap.1896" }
%"class.WTF::HashMap.1896" = type { %"class.WTF::HashTable.1897" }
%"class.WTF::HashTable.1897" = type <{ %"struct.WTF::KeyValuePair.1899"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1899" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1900" }
%"class.blink::HeapHashSet.1900" = type { %"class.WTF::HashSet.1903" }
%"class.WTF::HashSet.1903" = type { %"class.WTF::HashTable.1904" }
%"class.WTF::HashTable.1904" = type <{ %"class.blink::WeakMember.1906"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1906" = type opaque
%"class.blink::Member.1907" = type { %"class.blink::MemberBase.1908" }
%"class.blink::MemberBase.1908" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1909" = type { %"class.blink::MemberBase.1910" }
%"class.blink::MemberBase.1910" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.1193", %"class.blink::HeapHashSet.1916", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1923", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1916" = type { %"class.WTF::HashSet.1919" }
%"class.WTF::HashSet.1919" = type { %"class.WTF::HashTable.1920" }
%"class.WTF::HashTable.1920" = type <{ %"class.blink::Member.1922"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1922" = type opaque
%"class.blink::HeapTaskRunnerTimer.1923" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1924", { i64, i64 } }
%"class.blink::WeakMember.1924" = type { %"class.blink::MemberBase.1910" }
%"class.blink::Member.1912" = type { %"class.blink::MemberBase.1913" }
%"class.blink::MemberBase.1913" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.1210" = type { %"class.blink::MemberBase.1211" }
%"class.blink::MemberBase.1211" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.1214" }
%"class.blink::HeapHashMap.1214" = type { %"class.WTF::HashMap.1217" }
%"class.WTF::HashMap.1217" = type { %"class.WTF::HashTable.1218" }
%"class.WTF::HashTable.1218" = type <{ %"struct.WTF::KeyValuePair.1220"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1220" = type { %"class.WTF::AtomicString", %"class.blink::Member.1221" }
%"class.blink::Member.1221" = type { %"class.blink::MemberBase.1222" }
%"class.blink::MemberBase.1222" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.679", i32, %"class.blink::HeapVector.1225" }
%"class.blink::Member.1232" = type { %"class.blink::MemberBase.1233" }
%"class.blink::MemberBase.1233" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.1234" = type { %"class.blink::MemberBase.1235" }
%"class.blink::MemberBase.1235" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.1236" = type { %"class.blink::MemberBase.1237" }
%"class.blink::MemberBase.1237" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.1238" }
%"class.blink::Member.1238" = type { %"class.blink::MemberBase.1239" }
%"class.blink::MemberBase.1239" = type { %"class.blink::HeapHashMap.1240"* }
%"class.blink::HeapHashMap.1240" = type opaque
%"class.blink::Member.1241" = type { %"class.blink::MemberBase.1242" }
%"class.blink::MemberBase.1242" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.1243" = type { %"class.WTF::Vector.1246" }
%"class.WTF::Vector.1246" = type { %"class.WTF::VectorBuffer.1247" }
%"class.WTF::VectorBuffer.1247" = type { %"class.WTF::VectorBufferBase.1248" }
%"class.WTF::VectorBufferBase.1248" = type { %"class.blink::Member.1249"*, i32, i32 }
%"class.blink::Member.681" = type { %"class.blink::MemberBase.682" }
%"class.blink::Member.685" = type { %"class.blink::MemberBase.686" }
%"class.blink::MemberBase.686" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::Member.2943" = type { %"class.blink::MemberBase.2944" }
%"class.blink::MemberBase.2944" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.2945" = type { %"class.blink::MemberBase.2946" }
%"class.blink::MemberBase.2946" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.2947" = type { %"class.blink::MemberBase.2948" }
%"class.blink::MemberBase.2948" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.2949" = type { %"class.blink::MemberBase.2950" }
%"class.blink::MemberBase.2950" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.2951" = type { %"class.blink::MemberBase.2952" }
%"class.blink::MemberBase.2952" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.2953" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2954" }
%"class.blink::HeapHashSet.2954" = type { %"class.WTF::HashSet.2957" }
%"class.WTF::HashSet.2957" = type { %"class.WTF::HashTable.2958" }
%"class.WTF::HashTable.2958" = type <{ %"class.blink::WeakMember.2960"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2960" = type opaque
%"class.blink::Member.2961" = type { %"class.blink::MemberBase.2962" }
%"class.blink::MemberBase.2962" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.2963" = type { %"class.blink::MemberBase.2964" }
%"class.blink::MemberBase.2964" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.2965" = type { %"class.blink::MemberBase.2966" }
%"class.blink::MemberBase.2966" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.2967" = type { %"class.blink::MemberBase.2968" }
%"class.blink::MemberBase.2968" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.2969" = type { %"class.blink::MemberBase.2970" }
%"class.blink::MemberBase.2970" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.2971" = type { %"class.blink::MemberBase.2972" }
%"class.blink::MemberBase.2972" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.2973" = type { %"class.blink::MemberBase.2974" }
%"class.blink::MemberBase.2974" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.2975" = type { %"class.blink::MemberBase.2976" }
%"class.blink::MemberBase.2976" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.2977" = type { %"class.blink::MemberBase.2978" }
%"class.blink::MemberBase.2978" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.2979" = type { %"class.blink::MemberBase.2980" }
%"class.blink::MemberBase.2980" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.2981" = type { %"class.blink::MemberBase.2982" }
%"class.blink::MemberBase.2982" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.2983" }
%"class.WTF::Deque.2983" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2986" }
%"class.WTF::VectorBuffer.2986" = type { %"class.WTF::VectorBufferBase.2987" }
%"class.WTF::VectorBufferBase.2987" = type { %"class.std::__1::unique_ptr.2988"*, i32, i32 }
%"class.std::__1::unique_ptr.2988" = type { %"class.std::__1::__compressed_pair.2989" }
%"class.std::__1::__compressed_pair.2989" = type { %"struct.std::__1::__compressed_pair_elem.2990" }
%"struct.std::__1::__compressed_pair_elem.2990" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.2994", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2994" = type { %"class.std::__1::__bitset.2995" }
%"class.std::__1::__bitset.2995" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.2996" }
%"class.absl::optional.2996" = type { %"class.absl::optional_internal::optional_data.2997" }
%"class.absl::optional_internal::optional_data.2997" = type { %"class.absl::optional_internal::optional_data_base.2998" }
%"class.absl::optional_internal::optional_data_base.2998" = type { %"class.absl::optional_internal::optional_data_dtor_base.2999" }
%"class.absl::optional_internal::optional_data_dtor_base.2999" = type { i8, %union.anon.3000 }
%union.anon.3000 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.3001", i64, %"class.absl::optional.89", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr.2619" }
%"class.blink::WebPrivatePtr.2619" = type { i8* }
%"class.absl::optional.3001" = type { %"class.absl::optional_internal::optional_data.3002" }
%"class.absl::optional_internal::optional_data.3002" = type { %"class.absl::optional_internal::optional_data_base.3003" }
%"class.absl::optional_internal::optional_data_base.3003" = type { %"class.absl::optional_internal::optional_data_dtor_base.3004" }
%"class.absl::optional_internal::optional_data_dtor_base.3004" = type { i8, %union.anon.3005 }
%union.anon.3005 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.3006" = type { %"class.std::__1::unique_ptr.3007" }
%"class.std::__1::unique_ptr.3007" = type { %"class.std::__1::__compressed_pair.3008" }
%"class.std::__1::__compressed_pair.3008" = type { %"struct.std::__1::__compressed_pair_elem.3009" }
%"struct.std::__1::__compressed_pair_elem.3009" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.3013" = type { %"class.WTF::HashSet.3016" }
%"class.WTF::HashSet.3016" = type { %"class.WTF::HashTable.3017" }
%"class.WTF::HashTable.3017" = type <{ %"class.blink::WeakMember.3019"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3019" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.2008" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.std::__1::unique_ptr.3020" = type { %"class.std::__1::__compressed_pair.3021" }
%"class.std::__1::__compressed_pair.3021" = type { %"struct.std::__1::__compressed_pair_elem.3022" }
%"struct.std::__1::__compressed_pair_elem.3022" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.3026" = type { %"class.std::__1::__compressed_pair.3027" }
%"class.std::__1::__compressed_pair.3027" = type { %"struct.std::__1::__compressed_pair_elem.3028" }
%"struct.std::__1::__compressed_pair_elem.3028" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::Member.406" = type { %"class.blink::MemberBase.407" }
%"class.blink::MemberBase.407" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.402", %"class.blink::Member.431", %"class.blink::Member.433", %"class.blink::Member.435", i8, %"class.WTF::Vector.437" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.424" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.412" }
%"class.blink::HeapVector.412" = type { %"class.WTF::Vector.415" }
%"class.WTF::Vector.415" = type { %"class.WTF::VectorBuffer.416" }
%"class.WTF::VectorBuffer.416" = type { %"class.WTF::VectorBufferBase.417", [32 x i8] }
%"class.WTF::VectorBufferBase.417" = type { %"struct.std::__1::pair.418"*, i32, i32 }
%"struct.std::__1::pair.418" = type { %"class.WTF::AtomicString", %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::HeapVector.421"* }
%"class.blink::HeapVector.421" = type opaque
%"class.std::__1::unique_ptr.424" = type { %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.WTF::Vector.427"* }
%"class.WTF::Vector.427" = type opaque
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.435" = type { %"class.blink::MemberBase.436" }
%"class.blink::MemberBase.436" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.437" = type { %"class.WTF::VectorBuffer.438" }
%"class.WTF::VectorBuffer.438" = type { %"class.WTF::VectorBufferBase.439" }
%"class.WTF::VectorBufferBase.439" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias.440" }
%"class.base::StrongAlias.440" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.603" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.441, %"class.std::__1::unique_ptr.558", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.443, i32 }>
%class.scoped_refptr.441 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.443, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.524", %"class.absl::optional.529", %"class.absl::optional.483", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.549", i8, [7 x i8], %class.scoped_refptr.443, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.442" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.443, %"class.std::__1::unique_ptr.464", %"class.absl::optional.473", %"struct.std::__1::atomic.350", i8, i8, i8, i8, i32, i32, %"class.absl::optional.483", %"class.std::__1::unique_ptr.488", i8, i64, %class.scoped_refptr.520, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.523" }
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.443, i8, %"class.mojo::ScopedHandleBase.467", %class.scoped_refptr.468, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.469" }
%"class.mojo::ScopedHandleBase.467" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.468 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.469" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.473" = type { %"class.absl::optional_internal::optional_data.474" }
%"class.absl::optional_internal::optional_data.474" = type { %"class.absl::optional_internal::optional_data_base.475" }
%"class.absl::optional_internal::optional_data_base.475" = type { %"class.absl::optional_internal::optional_data_dtor_base.476" }
%"class.absl::optional_internal::optional_data_dtor_base.476" = type { i8, %union.anon.477 }
%union.anon.477 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.478", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.478" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.491", i8, i64, %class.scoped_refptr.492, %class.scoped_refptr.515 }
%"class.base::RepeatingCallback.491" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.492 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.493", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.504", i8, [7 x i8] }>
%"class.base::RefCounted.493" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.494 }
%class.scoped_refptr.494 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.495" }
%"class.std::__1::__tree.495" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.496", %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"class.std::__1::map.504" = type { %"class.std::__1::__tree.505" }
%"class.std::__1::__tree.505" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.506", %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%class.scoped_refptr.515 = type { %"class.base::RefCountedData.516"* }
%"class.base::RefCountedData.516" = type opaque
%class.scoped_refptr.520 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.523" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.524" = type { %"class.absl::optional_internal::optional_data.525" }
%"class.absl::optional_internal::optional_data.525" = type { %"class.absl::optional_internal::optional_data_base.526" }
%"class.absl::optional_internal::optional_data_base.526" = type { %"class.absl::optional_internal::optional_data_dtor_base.527" }
%"class.absl::optional_internal::optional_data_dtor_base.527" = type { i8, %union.anon.528 }
%union.anon.528 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.529" = type { %"class.absl::optional_internal::optional_data.530" }
%"class.absl::optional_internal::optional_data.530" = type { %"class.absl::optional_internal::optional_data_base.531" }
%"class.absl::optional_internal::optional_data_base.531" = type { %"class.absl::optional_internal::optional_data_dtor_base.532" }
%"class.absl::optional_internal::optional_data_dtor_base.532" = type { i8, [7 x i8], %union.anon.533 }
%union.anon.533 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.483" = type { %"class.absl::optional_internal::optional_data.484" }
%"class.absl::optional_internal::optional_data.484" = type { %"class.absl::optional_internal::optional_data_base.485" }
%"class.absl::optional_internal::optional_data_base.485" = type { %"class.absl::optional_internal::optional_data_dtor_base.486" }
%"class.absl::optional_internal::optional_data_dtor_base.486" = type { i8, %union.anon.487 }
%union.anon.487 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.534 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.534 = type { %"class.std::__1::map.537" }
%"class.std::__1::map.537" = type { %"class.std::__1::__tree.538" }
%"class.std::__1::__tree.538" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.539", %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.548"*, i64 }
%"class.std::__1::unique_ptr.548" = type opaque
%"class.std::__1::map.549" = type { %"class.std::__1::__tree.550" }
%"class.std::__1::__tree.550" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.551", %"class.std::__1::__compressed_pair.555" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"class.std::__1::unique_ptr.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.605" }
%"struct.std::__1::__compressed_pair_elem.605" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.611" = type { %"class.blink::MemberBase.612" }
%"class.blink::MemberBase.612" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.402" = type { %"class.blink::MemberBase.403" }
%"class.blink::MemberBase.403" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.402", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.613" }
%"class.std::__1::vector.613" = type { %"class.std::__1::__vector_base.614" }
%"class.std::__1::__vector_base.614" = type { %"struct.std::__1::pair.615"*, %"struct.std::__1::pair.615"*, %"class.std::__1::__compressed_pair.616" }
%"struct.std::__1::pair.615" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::pair.615"* }
%"class.blink::Member.621" = type { %"class.blink::MemberBase.622" }
%"class.blink::MemberBase.622" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.623" = type { %"class.absl::optional_internal::optional_data.624" }
%"class.absl::optional_internal::optional_data.624" = type { %"class.absl::optional_internal::optional_data_base.625" }
%"class.absl::optional_internal::optional_data_base.625" = type { %"class.absl::optional_internal::optional_data_dtor_base.626" }
%"class.absl::optional_internal::optional_data_dtor_base.626" = type { i8, %union.anon.627 }
%union.anon.627 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.628" }
%"class.blink::HeapHashSet.628" = type { %"class.WTF::HashSet.631" }
%"class.WTF::HashSet.631" = type { %"class.WTF::HashTable.632" }
%"class.WTF::HashTable.632" = type <{ %"class.blink::WeakMember.634"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.634" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.635" }
%"class.blink::HeapHashMap.635" = type { %"class.WTF::HashMap.638" }
%"class.WTF::HashMap.638" = type { %"class.WTF::HashTable.639" }
%"class.WTF::HashTable.639" = type <{ %"struct.WTF::KeyValuePair.641"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.641" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.642" = type { %"class.std::__1::__compressed_pair.643" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.644" }
%"struct.std::__1::__compressed_pair_elem.644" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.645", %"class.base::WeakPtrFactory.650" }
%"class.WTF::HashMap.645" = type { %"class.WTF::HashTable.646" }
%"class.WTF::HashTable.646" = type <{ %"struct.WTF::KeyValuePair.649"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.649" = type opaque
%"class.base::WeakPtrFactory.650" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.654" }
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.3105" }
%"class.blink::WeakMember.3105" = type { %"class.blink::MemberBase.3106" }
%"class.blink::MemberBase.3106" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.561", %"class.base::RepeatingCallback.3107", i64, %"class.std::__1::map.3108", i8*, i64, %"class.base::WeakPtrFactory.3117" }
%"class.base::RepeatingCallback.3107" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3108" = type { %"class.std::__1::__tree.3109" }
%"class.std::__1::__tree.3109" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3110", %"class.std::__1::__compressed_pair.3114" }
%"class.std::__1::__compressed_pair.3110" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"class.std::__1::__compressed_pair.3114" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"class.base::WeakPtrFactory.3117" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.656" = type { %"class.WTF::HashSet.659" }
%"class.WTF::HashSet.659" = type { %"class.WTF::HashTable.660" }
%"class.WTF::HashTable.660" = type <{ %"class.blink::WeakMember.662"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.662" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member", %"class.blink::Member.663", %"class.blink::Member.665", %"class.std::__1::unique_ptr.667", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.673" }
%"class.blink::Member.663" = type { %"class.blink::MemberBase.664" }
%"class.blink::MemberBase.664" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.665" = type { %"class.blink::MemberBase.666" }
%"class.blink::MemberBase.666" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.128", %"class.blink::Member.2037", %"class.std::__1::unique_ptr.2616", %"class.std::__1::unique_ptr.2166", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.2779, %"class.WTF::AtomicString", i32, %"class.absl::optional.2669", %class.scoped_refptr.54, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.2634", i8, %"class.absl::optional.2641", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member", %"class.blink::Member.2780", %"class.blink::Member.1515", %"class.blink::Member.2853", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote.2855", %class.scoped_refptr.2096, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.2868", %"class.std::__1::unique_ptr.2646", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.2870", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.361, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.2051, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.2875", %"class.blink::Member.2890", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.2903", %"class.WTF::Vector.41", i8, i8, i8, %"class.blink::WebVector.2768", %"class.blink::WebVector.2768", %"class.mojo::Remote.2908" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2616" = type { %"class.std::__1::__compressed_pair.2617" }
%"class.std::__1::__compressed_pair.2617" = type { %"struct.std::__1::__compressed_pair_elem.2618" }
%"struct.std::__1::__compressed_pair_elem.2618" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector.2620", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.2634", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.2641", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.2646", %"class.base::UnguessableToken", %"class.blink::WebVector.2652", %"class.base::TickClock"*, %"class.blink::WebVector.2661", %"class.absl::optional.2669", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.2682", %"class.blink::WebVector.2674", i8, %"class.blink::WebVector.2701", i8, %"class.std::__1::unique_ptr.2709", %"class.blink::WebVector.2768", %"class.blink::WebVector.2768" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebVector.2620" = type { %"class.std::__1::vector.2621" }
%"class.std::__1::vector.2621" = type { %"class.std::__1::__vector_base.2622" }
%"class.std::__1::__vector_base.2622" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.2629" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.2629" = type { %"struct.std::__1::__compressed_pair_elem.2630" }
%"struct.std::__1::__compressed_pair_elem.2630" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.2623", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.2623" = type { %"class.std::__1::__compressed_pair.2624" }
%"class.std::__1::__compressed_pair.2624" = type { %"struct.std::__1::__compressed_pair_elem.2625" }
%"struct.std::__1::__compressed_pair_elem.2625" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.2640", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.2640" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.2652" = type { %"class.std::__1::vector.2653" }
%"class.std::__1::vector.2653" = type { %"class.std::__1::__vector_base.2654" }
%"class.std::__1::__vector_base.2654" = type { %"class.std::__1::unique_ptr.2655"*, %"class.std::__1::unique_ptr.2655"*, %"class.std::__1::__compressed_pair.2656" }
%"class.std::__1::unique_ptr.2655" = type opaque
%"class.std::__1::__compressed_pair.2656" = type { %"struct.std::__1::__compressed_pair_elem.2657" }
%"struct.std::__1::__compressed_pair_elem.2657" = type { %"class.std::__1::unique_ptr.2655"* }
%"class.blink::WebVector.2661" = type { %"class.std::__1::vector.2662" }
%"class.std::__1::vector.2662" = type { %"class.std::__1::__vector_base.2663" }
%"class.std::__1::__vector_base.2663" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2664" }
%"class.std::__1::__compressed_pair.2664" = type { %"struct.std::__1::__compressed_pair_elem.2665" }
%"struct.std::__1::__compressed_pair_elem.2665" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"class.absl::optional.2682" = type { %"class.absl::optional_internal::optional_data.2683" }
%"class.absl::optional_internal::optional_data.2683" = type { %"class.absl::optional_internal::optional_data_base.2684" }
%"class.absl::optional_internal::optional_data_base.2684" = type { %"class.absl::optional_internal::optional_data_dtor_base.2685" }
%"class.absl::optional_internal::optional_data_dtor_base.2685" = type { i8, [7 x i8], %union.anon.2686 }
%union.anon.2686 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector.2674" = type { %"class.std::__1::vector.2675" }
%"class.std::__1::vector.2675" = type { %"class.std::__1::__vector_base.2676" }
%"class.std::__1::__vector_base.2676" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.2677" }
%"class.std::__1::__compressed_pair.2677" = type { %"struct.std::__1::__compressed_pair_elem.2678" }
%"struct.std::__1::__compressed_pair_elem.2678" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.2701" = type { %"class.std::__1::vector.2702" }
%"class.std::__1::vector.2702" = type { %"class.std::__1::__vector_base.2703" }
%"class.std::__1::__vector_base.2703" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2704" }
%"class.std::__1::__compressed_pair.2704" = type { %"struct.std::__1::__compressed_pair_elem.2705" }
%"struct.std::__1::__compressed_pair_elem.2705" = type { i32* }
%"class.std::__1::unique_ptr.2709" = type { %"class.std::__1::__compressed_pair.2710" }
%"class.std::__1::__compressed_pair.2710" = type { %"struct.std::__1::__compressed_pair_elem.2711" }
%"struct.std::__1::__compressed_pair_elem.2711" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.2712" }
%"class.blink::WebVector.2712" = type { %"class.std::__1::vector.2713" }
%"class.std::__1::vector.2713" = type { %"class.std::__1::__vector_base.2714" }
%"class.std::__1::__vector_base.2714" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.2760" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.2715", %"class.blink::WebVector.2723", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector.2674", i32, [4 x i8], %"class.absl::optional.2755", %"class.blink::WebVector.2674" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.2715" = type { %"class.std::__1::vector.2716" }
%"class.std::__1::vector.2716" = type { %"class.std::__1::__vector_base.2717" }
%"class.std::__1::__vector_base.2717" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.2718" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.2718" = type { %"struct.std::__1::__compressed_pair_elem.2719" }
%"struct.std::__1::__compressed_pair_elem.2719" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.2723" = type { %"class.std::__1::vector.2724" }
%"class.std::__1::vector.2724" = type { %"class.std::__1::__vector_base.2725" }
%"class.std::__1::__vector_base.2725" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.2750" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.2726", %"class.blink::WebVector.2674", %"class.blink::WebVector.2734", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.2726" = type { %"class.std::__1::vector.2727" }
%"class.std::__1::vector.2727" = type { %"class.std::__1::__vector_base.2728" }
%"class.std::__1::__vector_base.2728" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.2729" }
%"class.std::__1::__compressed_pair.2729" = type { %"struct.std::__1::__compressed_pair_elem.2730" }
%"struct.std::__1::__compressed_pair_elem.2730" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.2734" = type { %"class.std::__1::vector.2735" }
%"class.std::__1::vector.2735" = type { %"class.std::__1::__vector_base.2736" }
%"class.std::__1::__vector_base.2736" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.2745" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.2737" }
%"class.blink::WebVector.2737" = type { %"class.std::__1::vector.2738" }
%"class.std::__1::vector.2738" = type { %"class.std::__1::__vector_base.2739" }
%"class.std::__1::__vector_base.2739" = type { i8*, i8*, %"class.std::__1::__compressed_pair.2740" }
%"class.std::__1::__compressed_pair.2740" = type { %"struct.std::__1::__compressed_pair_elem.2741" }
%"struct.std::__1::__compressed_pair_elem.2741" = type { i8* }
%"class.std::__1::__compressed_pair.2745" = type { %"struct.std::__1::__compressed_pair_elem.2746" }
%"struct.std::__1::__compressed_pair_elem.2746" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.2750" = type { %"struct.std::__1::__compressed_pair_elem.2751" }
%"struct.std::__1::__compressed_pair_elem.2751" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.2755" = type { %"class.absl::optional_internal::optional_data.2756" }
%"class.absl::optional_internal::optional_data.2756" = type { %"class.absl::optional_internal::optional_data_base.2757" }
%"class.absl::optional_internal::optional_data_base.2757" = type { %"class.absl::optional_internal::optional_data_dtor_base.2758" }
%"class.absl::optional_internal::optional_data_dtor_base.2758" = type { i8, [7 x i8], %union.anon.2759 }
%union.anon.2759 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector.2674", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.2760" = type { %"struct.std::__1::__compressed_pair_elem.2761" }
%"struct.std::__1::__compressed_pair_elem.2761" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%"class.absl::optional.2669" = type { %"class.absl::optional_internal::optional_data.2670" }
%"class.absl::optional_internal::optional_data.2670" = type { %"class.absl::optional_internal::optional_data_base.2671" }
%"class.absl::optional_internal::optional_data_base.2671" = type { %"class.absl::optional_internal::optional_data_dtor_base.2672" }
%"class.absl::optional_internal::optional_data_dtor_base.2672" = type { i8, %union.anon.2673 }
%union.anon.2673 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector.2674", %"class.blink::WebString", %"class.blink::WebVector.2674", %"class.blink::WebVector.2674" }
%"class.std::__1::unique_ptr.2634" = type { %"class.std::__1::__compressed_pair.2635" }
%"class.std::__1::__compressed_pair.2635" = type { %"struct.std::__1::__compressed_pair_elem.2636" }
%"struct.std::__1::__compressed_pair_elem.2636" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.2641" = type { %"class.absl::optional_internal::optional_data.2642" }
%"class.absl::optional_internal::optional_data.2642" = type { %"class.absl::optional_internal::optional_data_base.2643" }
%"class.absl::optional_internal::optional_data_base.2643" = type { %"class.absl::optional_internal::optional_data_dtor_base.2644" }
%"class.absl::optional_internal::optional_data_dtor_base.2644" = type { i8, %union.anon.2645 }
%union.anon.2645 = type { i32 }
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.2687", %"class.base::flat_map", i8, [7 x i8] }>
%"class.std::__1::vector.2687" = type { %"class.std::__1::__vector_base.2688" }
%"class.std::__1::__vector_base.2688" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.2696" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.2689", i8, i8, [6 x i8] }>
%"class.std::__1::vector.2689" = type { %"class.std::__1::__vector_base.2690" }
%"class.std::__1::__vector_base.2690" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.2691" }
%"class.std::__1::__compressed_pair.2691" = type { %"struct.std::__1::__compressed_pair_elem.2692" }
%"struct.std::__1::__compressed_pair_elem.2692" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.2696" = type { %"struct.std::__1::__compressed_pair_elem.2697" }
%"struct.std::__1::__compressed_pair_elem.2697" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.2780" = type { %"class.blink::MemberBase.2781" }
%"class.blink::MemberBase.2781" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.41", %"class.blink::Member.2784", %"class.absl::optional.2786", i64, i64, i32, %class.scoped_refptr.2791, %class.scoped_refptr.2779, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.2791 }
%"class.blink::Member.2784" = type { %"class.blink::MemberBase.2785" }
%"class.blink::MemberBase.2785" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional.2786" = type { %"class.absl::optional_internal::optional_data.2787" }
%"class.absl::optional_internal::optional_data.2787" = type { %"class.absl::optional_internal::optional_data_base.2788" }
%"class.absl::optional_internal::optional_data_base.2788" = type { %"class.absl::optional_internal::optional_data_dtor_base.2789" }
%"class.absl::optional_internal::optional_data_dtor_base.2789" = type { i8, %union.anon.2790 }
%union.anon.2790 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.gfx::PointF" = type { float, float }
%class.scoped_refptr.2791 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.2793", i64, %"class.WTF::Vector.2796", %"class.WTF::Vector.2801", %"class.WTF::Vector.2807", %"class.WTF::Vector.2825", %class.scoped_refptr.2096, %"class.WTF::HashMap.2831", %"class.WTF::Vector.2836", %"class.WTF::Vector.2796", %"class.WTF::Vector.2842", %"class.WTF::HashMap.2848", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.2792" }
%"class.base::RefCountedThreadSafe.2792" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.2793" = type { %"class.std::__1::__compressed_pair.2794" }
%"class.std::__1::__compressed_pair.2794" = type { %"struct.std::__1::__compressed_pair_elem.2741" }
%"class.WTF::Vector.2801" = type { %"class.WTF::VectorBuffer.2802" }
%"class.WTF::VectorBuffer.2802" = type { %"class.WTF::VectorBufferBase.2803", [8 x i8] }
%"class.WTF::VectorBufferBase.2803" = type { %class.scoped_refptr.2804*, i32, i32 }
%class.scoped_refptr.2804 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.2807" = type { %"class.WTF::VectorBuffer.2808" }
%"class.WTF::VectorBuffer.2808" = type { %"class.WTF::VectorBufferBase.2809" }
%"class.WTF::VectorBufferBase.2809" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.2811", %"class.std::__1::unique_ptr.2817" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.2810 }
%class.scoped_refptr.2810 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.2811" = type { %"class.std::__1::__compressed_pair.2812" }
%"class.std::__1::__compressed_pair.2812" = type { %"struct.std::__1::__compressed_pair_elem.2813" }
%"struct.std::__1::__compressed_pair_elem.2813" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2817" = type { %"class.std::__1::__compressed_pair.2818" }
%"class.std::__1::__compressed_pair.2818" = type { %"struct.std::__1::__compressed_pair_elem.2819" }
%"struct.std::__1::__compressed_pair_elem.2819" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.2825" = type { %"class.WTF::VectorBuffer.2826" }
%"class.WTF::VectorBuffer.2826" = type { %"class.WTF::VectorBufferBase.2827" }
%"class.WTF::VectorBufferBase.2827" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.2828", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.2828" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.2831" = type { %"class.WTF::HashTable.2832" }
%"class.WTF::HashTable.2832" = type <{ %"struct.WTF::KeyValuePair.2835"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2835" = type opaque
%"class.WTF::Vector.2836" = type { %"class.WTF::VectorBuffer.2837" }
%"class.WTF::VectorBuffer.2837" = type { %"class.WTF::VectorBufferBase.2838" }
%"class.WTF::VectorBufferBase.2838" = type { %"class.mojo::ScopedHandleBase.2839"*, i32, i32 }
%"class.mojo::ScopedHandleBase.2839" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.2796" = type { %"class.WTF::VectorBuffer.2797" }
%"class.WTF::VectorBuffer.2797" = type { %"class.WTF::VectorBufferBase.2798", [16 x i8] }
%"class.WTF::VectorBufferBase.2798" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.2842" = type { %"class.WTF::VectorBuffer.2843" }
%"class.WTF::VectorBuffer.2843" = type { %"class.WTF::VectorBufferBase.2844" }
%"class.WTF::VectorBufferBase.2844" = type { %"class.mojo::PendingRemote.2845"*, i32, i32 }
%"class.mojo::PendingRemote.2845" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::HashMap.2848" = type { %"class.WTF::HashTable.2849" }
%"class.WTF::HashTable.2849" = type <{ %"struct.WTF::KeyValuePair.2852"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2852" = type { i8**, %"class.std::__1::unique_ptr.3097" }
%"class.std::__1::unique_ptr.3097" = type { %"class.std::__1::__compressed_pair.3098" }
%"class.std::__1::__compressed_pair.3098" = type { %"struct.std::__1::__compressed_pair_elem.3099" }
%"struct.std::__1::__compressed_pair_elem.3099" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::Member.2853" = type { %"class.blink::MemberBase.2854" }
%"class.blink::MemberBase.2854" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"class.mojo::Remote.2855" = type { %"class.mojo::internal::InterfacePtrState.2856" }
%"class.mojo::internal::InterfacePtrState.2856" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2857" }
%"class.std::__1::unique_ptr.2857" = type { %"class.std::__1::__compressed_pair.2858" }
%"class.std::__1::__compressed_pair.2858" = type { %"struct.std::__1::__compressed_pair_elem.2859" }
%"struct.std::__1::__compressed_pair_elem.2859" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.89", %"class.absl::optional.89", %"class.absl::optional.89", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.2863", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.665" }
%"class.WTF::Vector.2863" = type { %"class.WTF::VectorBuffer.2864" }
%"class.WTF::VectorBuffer.2864" = type { %"class.WTF::VectorBufferBase.2865" }
%"class.WTF::VectorBufferBase.2865" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.blink::Member.2868" = type { %"class.blink::MemberBase.2869" }
%"class.blink::MemberBase.2869" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.2646" = type { %"class.std::__1::__compressed_pair.2647" }
%"class.std::__1::__compressed_pair.2647" = type { %"struct.std::__1::__compressed_pair_elem.2648" }
%"struct.std::__1::__compressed_pair_elem.2648" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map", %"class.base::flat_map.2128" }
%"class.WTF::Vector.2870" = type { %"class.WTF::VectorBuffer.2871" }
%"class.WTF::VectorBuffer.2871" = type { %"class.WTF::VectorBufferBase.2872" }
%"class.WTF::VectorBufferBase.2872" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%"class.blink::Member.2875" = type { %"class.blink::MemberBase.2876" }
%"class.blink::MemberBase.2876" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.2879", %"class.std::__1::unique_ptr.2884", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.2879" = type { %"class.WTF::HashTable.2880" }
%"class.WTF::HashTable.2880" = type <{ %"struct.WTF::KeyValuePair.2883"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2883" = type { %"class.WTF::Vector.3171", %class.scoped_refptr.3175 }
%"class.WTF::Vector.3171" = type { %"class.WTF::VectorBuffer.3172" }
%"class.WTF::VectorBuffer.3172" = type { %"class.WTF::VectorBufferBase.1062", [32 x i8] }
%"class.WTF::VectorBufferBase.1062" = type { i8*, i32, i32 }
%class.scoped_refptr.3175 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.3176", %"class.WTF::Vector.1060", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.3176" = type { %"class.base::RefCounted.3177" }
%"class.base::RefCounted.3177" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1060" = type { %"class.WTF::VectorBuffer.1061" }
%"class.WTF::VectorBuffer.1061" = type { %"class.WTF::VectorBufferBase.1062" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.3178", i64, %"class.absl::optional.3183" }
%"class.std::__1::unique_ptr.3178" = type { %"class.std::__1::__compressed_pair.3179" }
%"class.std::__1::__compressed_pair.3179" = type { %"struct.std::__1::__compressed_pair_elem.2741" }
%"class.absl::optional.3183" = type { %"class.absl::optional_internal::optional_data.3184" }
%"class.absl::optional_internal::optional_data.3184" = type { %"class.absl::optional_internal::optional_data_base.3185" }
%"class.absl::optional_internal::optional_data_base.3185" = type { %"class.absl::optional_internal::optional_data_dtor_base.3186" }
%"class.absl::optional_internal::optional_data_dtor_base.3186" = type { i8, %union.anon.3187 }
%union.anon.3187 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.3188", %"class.std::__1::unique_ptr.3189" }
%"class.mojo::ScopedHandleBase.3188" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.3189" = type { %"class.std::__1::__compressed_pair.3190" }
%"class.std::__1::__compressed_pair.3190" = type { %"struct.std::__1::__compressed_pair_elem.3191" }
%"struct.std::__1::__compressed_pair_elem.3191" = type { i8* }
%"class.std::__1::unique_ptr.2884" = type { %"class.std::__1::__compressed_pair.2885" }
%"class.std::__1::__compressed_pair.2885" = type { %"struct.std::__1::__compressed_pair_elem.2886" }
%"struct.std::__1::__compressed_pair_elem.2886" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.blink::Member.2890" = type { %"class.blink::MemberBase.2891" }
%"class.blink::MemberBase.2891" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.2896" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.2892", %"class.std::__1::bitset.2892", %"class.std::__1::bitset.2894" }
%"class.std::__1::bitset.2892" = type { %"class.std::__1::__bitset.2893" }
%"class.std::__1::__bitset.2893" = type { [11 x i64] }
%"class.std::__1::bitset.2894" = type { %"class.std::__1::__bitset.2895" }
%"class.std::__1::__bitset.2895" = type { [2 x i64] }
%"class.blink::HeapHashSet.2896" = type { %"class.WTF::HashSet.2899" }
%"class.WTF::HashSet.2899" = type { %"class.WTF::HashTable.2900" }
%"class.WTF::HashTable.2900" = type <{ %"class.blink::Member.2902"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2902" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.WTF::Vector.2903" = type { %"class.WTF::VectorBuffer.2904" }
%"class.WTF::VectorBuffer.2904" = type { %"class.WTF::VectorBufferBase.2905" }
%"class.WTF::VectorBufferBase.2905" = type { i32*, i32, i32 }
%"class.blink::WebVector.2768" = type { %"class.std::__1::vector.2769" }
%"class.std::__1::vector.2769" = type { %"class.std::__1::__vector_base.2770" }
%"class.std::__1::__vector_base.2770" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.2771" }
%"class.std::__1::__compressed_pair.2771" = type { %"struct.std::__1::__compressed_pair_elem.2772" }
%"struct.std::__1::__compressed_pair_elem.2772" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.2908" = type { %"class.mojo::internal::InterfacePtrState.2909" }
%"class.mojo::internal::InterfacePtrState.2909" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2910" }
%"class.std::__1::unique_ptr.2910" = type { %"class.std::__1::__compressed_pair.2911" }
%"class.std::__1::__compressed_pair.2911" = type { %"struct.std::__1::__compressed_pair_elem.2912" }
%"struct.std::__1::__compressed_pair_elem.2912" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::Member.677" = type { %"class.blink::MemberBase.678" }
%"class.blink::MemberBase.678" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2344", %"class.blink::Member", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2349", i8, i32, %"class.blink::Color", %"class.absl::optional.2351", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2356", %"class.blink::Member.2358", %"class.blink::Member.2358", %"class.std::__1::unique_ptr.2361", i32, [4 x i8], %"class.WTF::HashSet.2364", %"class.blink::Member.2371", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2373", %"class.blink::HeapHashSet.2380", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2388", i8, %"class.blink::Member.2394", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2406", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2420", i8, %"class.std::__1::unique_ptr.2426", %"class.std::__1::unique_ptr.2543", %"class.WTF::Vector.2549", i32, %class.scoped_refptr.2554, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2555", %"class.blink::Member.2557", %"class.blink::Member.2559", %"class.blink::HeapHashSet.2561", %"class.blink::HeapHashSet.2568", %"class.std::__1::unique_ptr.2575", %"class.std::__1::unique_ptr.2581", %"class.WTF::Vector" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2344" = type { %"class.WTF::HashTable.2345" }
%"class.WTF::HashTable.2345" = type <{ %class.scoped_refptr.2348*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2348 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2349" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2350", { i64, i64 } }
%"class.blink::WeakMember.2350" = type { %"class.blink::MemberBase.678" }
%"class.absl::optional.2351" = type { %"class.absl::optional_internal::optional_data.2352" }
%"class.absl::optional_internal::optional_data.2352" = type { %"class.absl::optional_internal::optional_data_base.2353" }
%"class.absl::optional_internal::optional_data_base.2353" = type { %"class.absl::optional_internal::optional_data_dtor_base.2354" }
%"class.absl::optional_internal::optional_data_dtor_base.2354" = type { i8, %union.anon.2355 }
%union.anon.2355 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2356" = type { %"class.blink::MemberBase.2357" }
%"class.blink::MemberBase.2357" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2358" = type { %"class.blink::MemberBase.2359" }
%"class.blink::MemberBase.2359" = type { %"class.blink::HeapHashSet.2360"* }
%"class.blink::HeapHashSet.2360" = type opaque
%"class.std::__1::unique_ptr.2361" = type { %"class.std::__1::__compressed_pair.2362" }
%"class.std::__1::__compressed_pair.2362" = type { %"struct.std::__1::__compressed_pair_elem.2363" }
%"struct.std::__1::__compressed_pair_elem.2363" = type { %"class.WTF::HashSet.2364"* }
%"class.WTF::HashSet.2364" = type { %"class.WTF::HashTable.2365" }
%"class.WTF::HashTable.2365" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.2371" = type { %"class.blink::MemberBase.2372" }
%"class.blink::MemberBase.2372" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2373" = type { %"class.WTF::HashSet.2376" }
%"class.WTF::HashSet.2376" = type { %"class.WTF::HashTable.2377" }
%"class.WTF::HashTable.2377" = type <{ %"class.blink::Member.2379"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2379" = type opaque
%"class.blink::HeapHashSet.2380" = type { %"class.WTF::HashSet.2383" }
%"class.WTF::HashSet.2383" = type { %"class.WTF::HashTable.2384" }
%"class.WTF::HashTable.2384" = type <{ %"class.blink::Member.2386"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2386" = type { %"class.blink::MemberBase.2387" }
%"class.blink::MemberBase.2387" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2610", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2612", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.679" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.2610" = type { %"class.blink::MemberBase.2611" }
%"class.blink::MemberBase.2611" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.2612" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2613", { i64, i64 } }
%"class.blink::WeakMember.2613" = type { %"class.blink::MemberBase.2387" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.2388" = type { %"class.std::__1::__compressed_pair.2389" }
%"class.std::__1::__compressed_pair.2389" = type { %"struct.std::__1::__compressed_pair_elem.2390" }
%"struct.std::__1::__compressed_pair_elem.2390" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2394" = type { %"class.blink::MemberBase.2395" }
%"class.blink::MemberBase.2395" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2398", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2398" = type { %"class.WTF::HashTable.2399" }
%"class.WTF::HashTable.2399" = type <{ %"struct.WTF::KeyValuePair.2401"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2401" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2402", i32, i32 }
%"class.WTF::Vector.2402" = type { %"class.WTF::VectorBuffer.2403" }
%"class.WTF::VectorBuffer.2403" = type { %"class.WTF::VectorBufferBase.2404" }
%"class.WTF::VectorBufferBase.2404" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2406" = type { %"class.WTF::LinkedHashSet.2409" }
%"class.WTF::LinkedHashSet.2409" = type { %"class.WTF::HashMap.2410", %"class.WTF::VectorBackedLinkedList.2414" }
%"class.WTF::HashMap.2410" = type { %"class.WTF::HashTable.2411" }
%"class.WTF::HashTable.2411" = type <{ %"struct.WTF::KeyValuePair.2413"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2413" = type opaque
%"class.WTF::VectorBackedLinkedList.2414" = type { %"class.WTF::Vector.2415", i32, i32 }
%"class.WTF::Vector.2415" = type { %"class.WTF::VectorBuffer.2416" }
%"class.WTF::VectorBuffer.2416" = type { %"class.WTF::VectorBufferBase.2417" }
%"class.WTF::VectorBufferBase.2417" = type { %"class.WTF::VectorBackedLinkedListNode.2418"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2418" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2420" = type { %"class.std::__1::__compressed_pair.2421" }
%"class.std::__1::__compressed_pair.2421" = type { %"struct.std::__1::__compressed_pair_elem.2422" }
%"struct.std::__1::__compressed_pair_elem.2422" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2426" = type { %"class.std::__1::__compressed_pair.2427" }
%"class.std::__1::__compressed_pair.2427" = type { %"struct.std::__1::__compressed_pair_elem.2428" }
%"struct.std::__1::__compressed_pair_elem.2428" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2429, %class.scoped_refptr.2429, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2520", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2525", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2429 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2430", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2437" }
%"class.WTF::RefCounted.2430" = type { %"class.base::RefCounted.2431" }
%"class.base::RefCounted.2431" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2432", i32, [4 x i8] }>
%"class.WTF::Vector.2432" = type { %"class.WTF::VectorBuffer.2433" }
%"class.WTF::VectorBuffer.2433" = type { %"class.WTF::VectorBufferBase.2434" }
%"class.WTF::VectorBufferBase.2434" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2437" = type { %"class.WTF::VectorBuffer.2438" }
%"class.WTF::VectorBuffer.2438" = type { %"class.WTF::VectorBufferBase.2439" }
%"class.WTF::VectorBufferBase.2439" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2443", %"class.std::__1::unique_ptr.2492", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.2440, %class.scoped_refptr.2441, %class.scoped_refptr.2442 }
%class.scoped_refptr.2440 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.2456", i8, i8, %class.scoped_refptr.2440, i32, i32 }
%"class.WTF::RefCounted.2456" = type { %"class.base::RefCounted.2457" }
%"class.base::RefCounted.2457" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2441 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2605" }
%"class.blink::PaintPropertyNode.2605" = type { %"class.WTF::RefCounted.2606", i8, i8, %class.scoped_refptr.2441, i32, i32 }
%"class.WTF::RefCounted.2606" = type { %"class.base::RefCounted.2607" }
%"class.base::RefCounted.2607" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2442 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2602" }
%"class.blink::PaintPropertyNode.2602" = type { %"class.WTF::RefCounted.2603", i8, i8, %class.scoped_refptr.2442, i32, i32 }
%"class.WTF::RefCounted.2603" = type { %"class.base::RefCounted.2604" }
%"class.base::RefCounted.2604" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2443" = type { %"class.std::__1::__compressed_pair.2444" }
%"class.std::__1::__compressed_pair.2444" = type { %"struct.std::__1::__compressed_pair_elem.2445" }
%"struct.std::__1::__compressed_pair_elem.2445" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2446", %"class.WTF::Vector.2451", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2446" = type { %"class.WTF::VectorBuffer.2447" }
%"class.WTF::VectorBuffer.2447" = type { %"class.WTF::VectorBufferBase.2448" }
%"class.WTF::VectorBufferBase.2448" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2451" = type { %"class.WTF::VectorBuffer.2452" }
%"class.WTF::VectorBuffer.2452" = type { %"class.WTF::VectorBufferBase.2453" }
%"class.WTF::VectorBufferBase.2453" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.2471" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.2464, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.2465", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.2458" }
%"class.std::__1::unique_ptr.2458" = type { %"class.std::__1::__compressed_pair.2459" }
%"class.std::__1::__compressed_pair.2459" = type { %"struct.std::__1::__compressed_pair_elem.2460" }
%"struct.std::__1::__compressed_pair_elem.2460" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.2464 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.2587", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.2587" = type { %"class.WTF::RefCounted.2588", i8, i8, %class.scoped_refptr.2464, i32, i32 }
%"class.WTF::RefCounted.2588" = type { %"class.base::RefCounted.2589" }
%"class.base::RefCounted.2589" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.2590" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.2590" = type { %"class.absl::optional_internal::optional_data.2591" }
%"class.absl::optional_internal::optional_data.2591" = type { %"class.absl::optional_internal::optional_data_base.2592" }
%"class.absl::optional_internal::optional_data_base.2592" = type { %"class.absl::optional_internal::optional_data_dtor_base.2593" }
%"class.absl::optional_internal::optional_data_dtor_base.2593" = type { i8, %union.anon.2594 }
%union.anon.2594 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.2595", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.2595" = type { %"class.std::__1::__vector_base.2596" }
%"class.std::__1::__vector_base.2596" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.2597" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.2597" = type { %"struct.std::__1::__compressed_pair_elem.2598" }
%"struct.std::__1::__compressed_pair_elem.2598" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.2465" = type { %"class.std::__1::__compressed_pair.2466" }
%"class.std::__1::__compressed_pair.2466" = type { %"struct.std::__1::__compressed_pair_elem.2467" }
%"struct.std::__1::__compressed_pair_elem.2467" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.2471" = type { %"class.std::__1::__compressed_pair.2472" }
%"class.std::__1::__compressed_pair.2472" = type { %"struct.std::__1::__compressed_pair_elem.2473" }
%"struct.std::__1::__compressed_pair_elem.2473" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.2474", %"class.std::__1::unique_ptr.2480", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2474" = type { %"class.std::__1::__compressed_pair.2475" }
%"class.std::__1::__compressed_pair.2475" = type { %"struct.std::__1::__compressed_pair_elem.2476" }
%"struct.std::__1::__compressed_pair_elem.2476" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2480" = type { %"class.std::__1::__compressed_pair.2481" }
%"class.std::__1::__compressed_pair.2481" = type { %"struct.std::__1::__compressed_pair_elem.2482" }
%"struct.std::__1::__compressed_pair_elem.2482" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2492" = type { %"class.std::__1::__compressed_pair.2493" }
%"class.std::__1::__compressed_pair.2493" = type { %"struct.std::__1::__compressed_pair_elem.2494" }
%"struct.std::__1::__compressed_pair_elem.2494" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2495", %"class.absl::optional.2495" }
%"class.absl::optional.2495" = type { %"class.absl::optional_internal::optional_data.2496" }
%"class.absl::optional_internal::optional_data.2496" = type { %"class.absl::optional_internal::optional_data_base.2497" }
%"class.absl::optional_internal::optional_data_base.2497" = type { %"class.absl::optional_internal::optional_data_dtor_base.2498" }
%"class.absl::optional_internal::optional_data_dtor_base.2498" = type { i8, [3 x i8], %union.anon.2499 }
%union.anon.2499 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2437"*, %"class.absl::optional.2505", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2505" = type { %"class.absl::optional_internal::optional_data.2506" }
%"class.absl::optional_internal::optional_data.2506" = type { %"class.absl::optional_internal::optional_data_base.2507" }
%"class.absl::optional_internal::optional_data_base.2507" = type { %"class.absl::optional_internal::optional_data_dtor_base.2508" }
%"class.absl::optional_internal::optional_data_dtor_base.2508" = type { i8, %union.anon.2509 }
%union.anon.2509 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2510", %"class.WTF::Vector.2515" }
%"class.WTF::Vector.2510" = type { %"class.WTF::VectorBuffer.2511" }
%"class.WTF::VectorBuffer.2511" = type { %"class.WTF::VectorBufferBase.2512", [128 x i8] }
%"class.WTF::VectorBufferBase.2512" = type { i32*, i32, i32 }
%"class.WTF::Vector.2515" = type { %"class.WTF::VectorBuffer.2516" }
%"class.WTF::VectorBuffer.2516" = type { %"class.WTF::VectorBufferBase.2517", [128 x i8] }
%"class.WTF::VectorBufferBase.2517" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2520" = type { %"class.WTF::VectorBuffer.2521" }
%"class.WTF::VectorBuffer.2521" = type { %"class.WTF::VectorBufferBase.2522" }
%"class.WTF::VectorBufferBase.2522" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2525" = type { %"class.WTF::HashTable.2526" }
%"class.WTF::HashTable.2526" = type <{ %"struct.WTF::KeyValuePair.2529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2529" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2530", %"class.WTF::Vector.2535" }
%"class.WTF::HashMap.2530" = type { %"class.WTF::HashTable.2531" }
%"class.WTF::HashTable.2531" = type <{ %"struct.WTF::KeyValuePair.2534"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2534" = type opaque
%"class.WTF::Vector.2535" = type { %"class.WTF::VectorBuffer.2536" }
%"class.WTF::VectorBuffer.2536" = type { %"class.WTF::VectorBufferBase.2537" }
%"class.WTF::VectorBufferBase.2537" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2543" = type { %"class.std::__1::__compressed_pair.2544" }
%"class.std::__1::__compressed_pair.2544" = type { %"struct.std::__1::__compressed_pair_elem.2545" }
%"struct.std::__1::__compressed_pair_elem.2545" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2549" = type { %"class.WTF::VectorBuffer.2550" }
%"class.WTF::VectorBuffer.2550" = type { %"class.WTF::VectorBufferBase.2551" }
%"class.WTF::VectorBufferBase.2551" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2554 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2555" = type { %"class.blink::MemberBase.2556" }
%"class.blink::MemberBase.2556" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2557" = type { %"class.blink::MemberBase.2558" }
%"class.blink::MemberBase.2558" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2559" = type { %"class.blink::MemberBase.2560" }
%"class.blink::MemberBase.2560" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2561" = type { %"class.WTF::HashSet.2564" }
%"class.WTF::HashSet.2564" = type { %"class.WTF::HashTable.2565" }
%"class.WTF::HashTable.2565" = type <{ %"class.blink::WeakMember.2567"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2567" = type opaque
%"class.blink::HeapHashSet.2568" = type { %"class.WTF::HashSet.2571" }
%"class.WTF::HashSet.2571" = type { %"class.WTF::HashTable.2572" }
%"class.WTF::HashTable.2572" = type <{ %"class.blink::WeakMember.2574"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2574" = type opaque
%"class.std::__1::unique_ptr.2575" = type { %"class.std::__1::__compressed_pair.2576" }
%"class.std::__1::__compressed_pair.2576" = type { %"struct.std::__1::__compressed_pair_elem.2577" }
%"struct.std::__1::__compressed_pair_elem.2577" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2581" = type { %"class.std::__1::__compressed_pair.2582" }
%"class.std::__1::__compressed_pair.2582" = type { %"struct.std::__1::__compressed_pair_elem.2583" }
%"struct.std::__1::__compressed_pair_elem.2583" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.123", i32, i32, i32, i8, [3 x i8] }>
%"class.blink::Member.679" = type { %"class.blink::MemberBase.680" }
%"class.blink::MemberBase.680" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.692" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.692" = type { %"class.blink::MemberBase.693" }
%"class.blink::MemberBase.693" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.696", %"class.blink::Member.698", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.696" = type { %"class.WTF::SingleThreadedBitField.697" }
%"class.WTF::SingleThreadedBitField.697" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.702 }
%class.scoped_refptr.702 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.703", %"class.WTF::AtomicString", %"class.WTF::Vector.705" }
%"class.WTF::RefCounted.703" = type { %"class.base::RefCounted.704" }
%"class.base::RefCounted.704" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.705" = type { %"class.WTF::VectorBuffer.706" }
%"class.WTF::VectorBuffer.706" = type { %"class.WTF::VectorBufferBase.113", [32 x i8] }
%"class.blink::Member.709" = type { %"class.blink::MemberBase.710" }
%"class.blink::MemberBase.710" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.711" = type { %"class.blink::MemberBase.712" }
%"class.blink::MemberBase.712" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.713" = type { %"class.blink::MemberBase.714" }
%"class.blink::MemberBase.714" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.715" = type { %"class.blink::MemberBase.716" }
%"class.blink::MemberBase.716" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.717" = type { %"class.blink::MemberBase.718" }
%"class.blink::MemberBase.718" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.728", %"class.blink::HeapListHashSet.739", %"class.blink::HeapListHashSet.750", %"class.blink::HeapListHashSet.761", %"class.blink::HeapListHashSet.772", %"class.blink::HeapListHashSet.783", %"class.blink::HeapListHashSet.794", %"class.blink::HeapListHashSet.805", %"class.blink::HeapListHashSet.816", %"class.blink::HeapListHashSet.827", %"class.blink::HeapListHashSet.838", %"class.blink::HeapListHashSet.849", %"class.blink::HeapListHashSet.860", %"class.blink::HeapListHashSet.871", %"class.blink::HeapListHashSet.882", %"class.blink::HeapListHashSet.893", %"class.blink::HeapListHashSet.904", %"class.blink::HeapListHashSet.915", %"class.blink::HeapListHashSet.926" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.724", %"class.blink::Member.726", %"class.blink::Member.726", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.724" = type <{ %"class.blink::Member.726"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.726" = type { %"class.blink::MemberBase.727" }
%"class.blink::MemberBase.727" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.940", %"class.blink::Member.726", %"class.blink::Member.726" }
%"class.blink::HeapListHashSet.728" = type { %"class.WTF::ListHashSet.base.738", [7 x i8] }
%"class.WTF::ListHashSet.base.738" = type <{ %"class.WTF::HashTable.733", %"class.blink::Member.735", %"class.blink::Member.735", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.733" = type <{ %"class.blink::Member.735"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.735" = type { %"class.blink::MemberBase.736" }
%"class.blink::MemberBase.736" = type { %"class.blink::HeapListHashSetNode.737"* }
%"class.blink::HeapListHashSetNode.737" = type { %"class.blink::Member.2338", %"class.blink::Member.735", %"class.blink::Member.735" }
%"class.blink::Member.2338" = type { %"class.blink::MemberBase.2339" }
%"class.blink::MemberBase.2339" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.739" = type { %"class.WTF::ListHashSet.base.749", [7 x i8] }
%"class.WTF::ListHashSet.base.749" = type <{ %"class.WTF::HashTable.744", %"class.blink::Member.746", %"class.blink::Member.746", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.744" = type <{ %"class.blink::Member.746"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.746" = type { %"class.blink::MemberBase.747" }
%"class.blink::MemberBase.747" = type { %"class.blink::HeapListHashSetNode.748"* }
%"class.blink::HeapListHashSetNode.748" = type { %"class.blink::Member.2334", %"class.blink::Member.746", %"class.blink::Member.746" }
%"class.blink::Member.2334" = type { %"class.blink::MemberBase.2335" }
%"class.blink::MemberBase.2335" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.750" = type { %"class.WTF::ListHashSet.base.760", [7 x i8] }
%"class.WTF::ListHashSet.base.760" = type <{ %"class.WTF::HashTable.755", %"class.blink::Member.757", %"class.blink::Member.757", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.755" = type <{ %"class.blink::Member.757"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.757" = type { %"class.blink::MemberBase.758" }
%"class.blink::MemberBase.758" = type { %"class.blink::HeapListHashSetNode.759"* }
%"class.blink::HeapListHashSetNode.759" = type { %"class.blink::Member.2330", %"class.blink::Member.757", %"class.blink::Member.757" }
%"class.blink::Member.2330" = type { %"class.blink::MemberBase.2331" }
%"class.blink::MemberBase.2331" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.761" = type { %"class.WTF::ListHashSet.base.771", [7 x i8] }
%"class.WTF::ListHashSet.base.771" = type <{ %"class.WTF::HashTable.766", %"class.blink::Member.768", %"class.blink::Member.768", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.766" = type <{ %"class.blink::Member.768"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.768" = type { %"class.blink::MemberBase.769" }
%"class.blink::MemberBase.769" = type { %"class.blink::HeapListHashSetNode.770"* }
%"class.blink::HeapListHashSetNode.770" = type { %"class.blink::Member.2326", %"class.blink::Member.768", %"class.blink::Member.768" }
%"class.blink::Member.2326" = type { %"class.blink::MemberBase.2327" }
%"class.blink::MemberBase.2327" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.772" = type { %"class.WTF::ListHashSet.base.782", [7 x i8] }
%"class.WTF::ListHashSet.base.782" = type <{ %"class.WTF::HashTable.777", %"class.blink::Member.779", %"class.blink::Member.779", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.777" = type <{ %"class.blink::Member.779"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.779" = type { %"class.blink::MemberBase.780" }
%"class.blink::MemberBase.780" = type { %"class.blink::HeapListHashSetNode.781"* }
%"class.blink::HeapListHashSetNode.781" = type { %"class.blink::Member.2256", %"class.blink::Member.779", %"class.blink::Member.779" }
%"class.blink::Member.2256" = type { %"class.blink::MemberBase.2257" }
%"class.blink::MemberBase.2257" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type { %"class.blink::InspectorBaseAgent.2258", %"struct.blink::InspectorDOMAgent::DOMListener", %"class.blink::InspectorStyleSheetBase::Listener", %"class.blink::Member.1137", %"class.blink::Member.1076", %"class.blink::Member.1107", %"class.blink::Member.383", %"class.blink::Member.2265", %"class.blink::HeapHashMap.2267", %"class.blink::HeapHashMap.2274", %"class.blink::HeapHashMap.2281", %"class.blink::HeapHashMap.2288", %"class.blink::HeapHashSet.2295", %"class.blink::HeapHashMap.2301", %"class.WTF::HashMap.2308", %"class.WTF::HashMap.2308", %"class.blink::Member.1601", %"class.blink::Member.1249", i32, [4 x i8], %"class.blink::InspectorAgentState::SimpleField", i8, [7 x i8], %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.WTF::HashMap.2313", %"class.std::__1::unique_ptr.2318", %"class.WTF::HashSet.1184" }
%"class.blink::InspectorBaseAgent.2258" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::CSS::Backend", %"class.blink::Member.717", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.2259" }
%"class.blink::InspectorAgent" = type { i32 (...)** }
%"class.blink::protocol::CSS::Backend" = type { i32 (...)** }
%"class.blink::InspectorAgentState" = type { %"class.WTF::String", %"class.WTF::Vector.1043" }
%"class.WTF::Vector.1043" = type { %"class.WTF::VectorBuffer.1044" }
%"class.WTF::VectorBuffer.1044" = type { %"class.WTF::VectorBufferBase.1045" }
%"class.WTF::VectorBufferBase.1045" = type { %"class.blink::InspectorAgentState::Field"**, i32, i32 }
%"class.blink::InspectorAgentState::Field" = type { i32 (...)**, %"class.WTF::String", %"class.blink::InspectorSessionState"* }
%"class.blink::InspectorSessionState" = type { %"class.mojo::StructPtr.1046", %"class.mojo::StructPtr.1046" }
%"class.mojo::StructPtr.1046" = type { %"class.std::__1::unique_ptr.1047" }
%"class.std::__1::unique_ptr.1047" = type { %"class.std::__1::__compressed_pair.1048" }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.1049" }
%"struct.std::__1::__compressed_pair_elem.1049" = type { %"class.blink::mojom::blink::DevToolsSessionState"* }
%"class.blink::mojom::blink::DevToolsSessionState" = type { %"class.WTF::HashMap.1050" }
%"class.WTF::HashMap.1050" = type { %"class.WTF::HashTable.1051" }
%"class.WTF::HashTable.1051" = type <{ %"struct.WTF::KeyValuePair.1054"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1054" = type { %"class.WTF::String", %"class.absl::optional.1055" }
%"class.absl::optional.1055" = type { %"class.absl::optional_internal::optional_data.1056" }
%"class.absl::optional_internal::optional_data.1056" = type { %"class.absl::optional_internal::optional_data_base.1057" }
%"class.absl::optional_internal::optional_data_base.1057" = type { %"class.absl::optional_internal::optional_data_dtor_base.1058" }
%"class.absl::optional_internal::optional_data_dtor_base.1058" = type { i8, %union.anon.1059 }
%union.anon.1059 = type { %"class.WTF::Vector.1060" }
%"class.std::__1::unique_ptr.2259" = type { %"class.std::__1::__compressed_pair.2260" }
%"class.std::__1::__compressed_pair.2260" = type { %"struct.std::__1::__compressed_pair_elem.2261" }
%"struct.std::__1::__compressed_pair_elem.2261" = type { %"class.blink::protocol::CSS::Frontend"* }
%"class.blink::protocol::CSS::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.crdtp::FrontendChannel" = type { i32 (...)** }
%"struct.blink::InspectorDOMAgent::DOMListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::InspectorStyleSheetBase::Listener" = type { i32 (...)** }
%"class.blink::Member.1137" = type { %"class.blink::MemberBase.1138" }
%"class.blink::MemberBase.1138" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type { %"class.blink::InspectorBaseAgent.1139", %"class.v8::Isolate"*, %"class.blink::Member.1076", %"class.v8_inspector::V8InspectorSession"*, %"class.blink::HeapHashSet.1146", %"class.blink::Member.1153", %"class.blink::HeapVector.1156", %"class.blink::HeapHashMap.1163", %"class.blink::HeapHashMap.1170", %"class.blink::HeapHashMap.1177", %"class.WTF::HashSet.1184", %"class.WTF::HashSet.1184", %"class.WTF::HashMap.1188", i32, %"class.blink::Member.1193", %"class.blink::HeapHashMap.1195", %"class.blink::Member.1202", %"class.blink::Member.1204", %"class.blink::Member.1206", i8, [7 x i8], %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField" }
%"class.blink::InspectorBaseAgent.1139" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::DOM::Backend", %"class.blink::Member.717", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.1140" }
%"class.blink::protocol::DOM::Backend" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1140" = type { %"class.std::__1::__compressed_pair.1141" }
%"class.std::__1::__compressed_pair.1141" = type { %"struct.std::__1::__compressed_pair_elem.1142" }
%"struct.std::__1::__compressed_pair_elem.1142" = type { %"class.blink::protocol::DOM::Frontend"* }
%"class.blink::protocol::DOM::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.v8_inspector::V8InspectorSession" = type { i32 (...)** }
%"class.blink::HeapHashSet.1146" = type { %"class.WTF::HashSet.1149" }
%"class.WTF::HashSet.1149" = type { %"class.WTF::HashTable.1150" }
%"class.WTF::HashTable.1150" = type <{ %"class.blink::Member.1152"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1152" = type opaque
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::HeapHashMap.1155"* }
%"class.blink::HeapHashMap.1155" = type opaque
%"class.blink::HeapVector.1156" = type { %"class.WTF::Vector.1159" }
%"class.WTF::Vector.1159" = type { %"class.WTF::VectorBuffer.1160" }
%"class.WTF::VectorBuffer.1160" = type { %"class.WTF::VectorBufferBase.1161" }
%"class.WTF::VectorBufferBase.1161" = type { %"class.blink::Member.1153"*, i32, i32 }
%"class.blink::HeapHashMap.1163" = type { %"class.WTF::HashMap.1166" }
%"class.WTF::HashMap.1166" = type { %"class.WTF::HashTable.1167" }
%"class.WTF::HashTable.1167" = type <{ %"struct.WTF::KeyValuePair.1169"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1169" = type opaque
%"class.blink::HeapHashMap.1170" = type { %"class.WTF::HashMap.1173" }
%"class.WTF::HashMap.1173" = type { %"class.WTF::HashTable.1174" }
%"class.WTF::HashTable.1174" = type <{ %"struct.WTF::KeyValuePair.1176"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1176" = type opaque
%"class.blink::HeapHashMap.1177" = type { %"class.WTF::HashMap.1180" }
%"class.WTF::HashMap.1180" = type { %"class.WTF::HashTable.1181" }
%"class.WTF::HashTable.1181" = type <{ %"struct.WTF::KeyValuePair.1183"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1183" = type opaque
%"class.WTF::HashMap.1188" = type { %"class.WTF::HashTable.1189" }
%"class.WTF::HashTable.1189" = type <{ %"struct.WTF::KeyValuePair.1192"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1192" = type opaque
%"class.blink::HeapHashMap.1195" = type { %"class.WTF::HashMap.1198" }
%"class.WTF::HashMap.1198" = type { %"class.WTF::HashTable.1199" }
%"class.WTF::HashTable.1199" = type <{ %"struct.WTF::KeyValuePair.1201"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1201" = type opaque
%"class.blink::Member.1202" = type { %"class.blink::MemberBase.1203" }
%"class.blink::MemberBase.1203" = type { %"class.blink::InspectorRevalidateDOMTask"* }
%"class.blink::InspectorRevalidateDOMTask" = type opaque
%"class.blink::Member.1204" = type { %"class.blink::MemberBase.1205" }
%"class.blink::MemberBase.1205" = type { %"class.blink::InspectorHistory"* }
%"class.blink::InspectorHistory" = type opaque
%"class.blink::Member.1206" = type { %"class.blink::MemberBase.1207" }
%"class.blink::MemberBase.1207" = type { %"class.blink::DOMEditor"* }
%"class.blink::DOMEditor" = type opaque
%"class.blink::Member.1076" = type { %"class.blink::MemberBase.1077" }
%"class.blink::MemberBase.1077" = type { %"class.blink::InspectedFrames"* }
%"class.blink::InspectedFrames" = type { i32 (...)**, %"class.blink::Member" }
%"class.blink::Member.1107" = type { %"class.blink::MemberBase.1108" }
%"class.blink::MemberBase.1108" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::Member.2265" = type { %"class.blink::MemberBase.2266" }
%"class.blink::MemberBase.2266" = type { %"class.blink::InspectorResourceContainer"* }
%"class.blink::InspectorResourceContainer" = type opaque
%"class.blink::HeapHashMap.2267" = type { %"class.WTF::HashMap.2270" }
%"class.WTF::HashMap.2270" = type { %"class.WTF::HashTable.2271" }
%"class.WTF::HashTable.2271" = type <{ %"struct.WTF::KeyValuePair.2273"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2273" = type opaque
%"class.blink::HeapHashMap.2274" = type { %"class.WTF::HashMap.2277" }
%"class.WTF::HashMap.2277" = type { %"class.WTF::HashTable.2278" }
%"class.WTF::HashTable.2278" = type <{ %"struct.WTF::KeyValuePair.2280"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2280" = type opaque
%"class.blink::HeapHashMap.2281" = type { %"class.WTF::HashMap.2284" }
%"class.WTF::HashMap.2284" = type { %"class.WTF::HashTable.2285" }
%"class.WTF::HashTable.2285" = type <{ %"struct.WTF::KeyValuePair.2287"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2287" = type opaque
%"class.blink::HeapHashMap.2288" = type { %"class.WTF::HashMap.2291" }
%"class.WTF::HashMap.2291" = type { %"class.WTF::HashTable.2292" }
%"class.WTF::HashTable.2292" = type <{ %"struct.WTF::KeyValuePair.2294"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2294" = type opaque
%"class.blink::HeapHashSet.2295" = type { %"class.WTF::HashSet.2298" }
%"class.WTF::HashSet.2298" = type { %"class.WTF::HashTable.2299" }
%"class.WTF::HashTable.2299" = type <{ %"class.blink::Member.1193"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.2301" = type { %"class.WTF::HashMap.2304" }
%"class.WTF::HashMap.2304" = type { %"class.WTF::HashTable.2305" }
%"class.WTF::HashTable.2305" = type <{ %"struct.WTF::KeyValuePair.2307"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2307" = type opaque
%"class.WTF::HashMap.2308" = type { %"class.WTF::HashTable.2309" }
%"class.WTF::HashTable.2309" = type <{ %"struct.WTF::KeyValuePair.2312"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2312" = type opaque
%"class.blink::InspectorAgentState::SimpleField" = type <{ %"class.blink::InspectorAgentState::Field", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.2313" = type { %"class.WTF::HashTable.2314" }
%"class.WTF::HashTable.2314" = type <{ %"struct.WTF::KeyValuePair.2317"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2317" = type opaque
%"class.std::__1::unique_ptr.2318" = type { %"class.std::__1::__compressed_pair.2319" }
%"class.std::__1::__compressed_pair.2319" = type { %"struct.std::__1::__compressed_pair_elem.2320" }
%"struct.std::__1::__compressed_pair_elem.2320" = type { %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* }
%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback" = type { i32 (...)** }
%"class.WTF::HashSet.1184" = type { %"class.WTF::HashTable.1185" }
%"class.WTF::HashTable.1185" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapListHashSet.783" = type { %"class.WTF::ListHashSet.base.793", [7 x i8] }
%"class.WTF::ListHashSet.base.793" = type <{ %"class.WTF::HashTable.788", %"class.blink::Member.790", %"class.blink::Member.790", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.788" = type <{ %"class.blink::Member.790"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.790" = type { %"class.blink::MemberBase.791" }
%"class.blink::MemberBase.791" = type { %"class.blink::HeapListHashSetNode.792"* }
%"class.blink::HeapListHashSetNode.792" = type { %"class.blink::Member.1137", %"class.blink::Member.790", %"class.blink::Member.790" }
%"class.blink::HeapListHashSet.794" = type { %"class.WTF::ListHashSet.base.804", [7 x i8] }
%"class.WTF::ListHashSet.base.804" = type <{ %"class.WTF::HashTable.799", %"class.blink::Member.801", %"class.blink::Member.801", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.799" = type <{ %"class.blink::Member.801"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.801" = type { %"class.blink::MemberBase.802" }
%"class.blink::MemberBase.802" = type { %"class.blink::HeapListHashSetNode.803"* }
%"class.blink::HeapListHashSetNode.803" = type { %"class.blink::Member.1133", %"class.blink::Member.801", %"class.blink::Member.801" }
%"class.blink::Member.1133" = type { %"class.blink::MemberBase.1134" }
%"class.blink::MemberBase.1134" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.805" = type { %"class.WTF::ListHashSet.base.815", [7 x i8] }
%"class.WTF::ListHashSet.base.815" = type <{ %"class.WTF::HashTable.810", %"class.blink::Member.812", %"class.blink::Member.812", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.810" = type <{ %"class.blink::Member.812"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::HeapListHashSetNode.814"* }
%"class.blink::HeapListHashSetNode.814" = type { %"class.blink::Member.1129", %"class.blink::Member.812", %"class.blink::Member.812" }
%"class.blink::Member.1129" = type { %"class.blink::MemberBase.1130" }
%"class.blink::MemberBase.1130" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.816" = type { %"class.WTF::ListHashSet.base.826", [7 x i8] }
%"class.WTF::ListHashSet.base.826" = type <{ %"class.WTF::HashTable.821", %"class.blink::Member.823", %"class.blink::Member.823", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.821" = type <{ %"class.blink::Member.823"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.823" = type { %"class.blink::MemberBase.824" }
%"class.blink::MemberBase.824" = type { %"class.blink::HeapListHashSetNode.825"* }
%"class.blink::HeapListHashSetNode.825" = type { %"class.blink::Member.1125", %"class.blink::Member.823", %"class.blink::Member.823" }
%"class.blink::Member.1125" = type { %"class.blink::MemberBase.1126" }
%"class.blink::MemberBase.1126" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.827" = type { %"class.WTF::ListHashSet.base.837", [7 x i8] }
%"class.WTF::ListHashSet.base.837" = type <{ %"class.WTF::HashTable.832", %"class.blink::Member.834", %"class.blink::Member.834", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.832" = type <{ %"class.blink::Member.834"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.834" = type { %"class.blink::MemberBase.835" }
%"class.blink::MemberBase.835" = type { %"class.blink::HeapListHashSetNode.836"* }
%"class.blink::HeapListHashSetNode.836" = type { %"class.blink::Member.958", %"class.blink::Member.834", %"class.blink::Member.834" }
%"class.blink::HeapListHashSet.838" = type { %"class.WTF::ListHashSet.base.848", [7 x i8] }
%"class.WTF::ListHashSet.base.848" = type <{ %"class.WTF::HashTable.843", %"class.blink::Member.845", %"class.blink::Member.845", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.843" = type <{ %"class.blink::Member.845"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.845" = type { %"class.blink::MemberBase.846" }
%"class.blink::MemberBase.846" = type { %"class.blink::HeapListHashSetNode.847"* }
%"class.blink::HeapListHashSetNode.847" = type { %"class.blink::Member.1119", %"class.blink::Member.845", %"class.blink::Member.845" }
%"class.blink::Member.1119" = type { %"class.blink::MemberBase.1120" }
%"class.blink::MemberBase.1120" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.849" = type { %"class.WTF::ListHashSet.base.859", [7 x i8] }
%"class.WTF::ListHashSet.base.859" = type <{ %"class.WTF::HashTable.854", %"class.blink::Member.856", %"class.blink::Member.856", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.854" = type <{ %"class.blink::Member.856"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.856" = type { %"class.blink::MemberBase.857" }
%"class.blink::MemberBase.857" = type { %"class.blink::HeapListHashSetNode.858"* }
%"class.blink::HeapListHashSetNode.858" = type { %"class.blink::Member.1115", %"class.blink::Member.856", %"class.blink::Member.856" }
%"class.blink::Member.1115" = type { %"class.blink::MemberBase.1116" }
%"class.blink::MemberBase.1116" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.860" = type { %"class.WTF::ListHashSet.base.870", [7 x i8] }
%"class.WTF::ListHashSet.base.870" = type <{ %"class.WTF::HashTable.865", %"class.blink::Member.867", %"class.blink::Member.867", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.865" = type <{ %"class.blink::Member.867"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.867" = type { %"class.blink::MemberBase.868" }
%"class.blink::MemberBase.868" = type { %"class.blink::HeapListHashSetNode.869"* }
%"class.blink::HeapListHashSetNode.869" = type { %"class.blink::Member.1111", %"class.blink::Member.867", %"class.blink::Member.867" }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.871" = type { %"class.WTF::ListHashSet.base.881", [7 x i8] }
%"class.WTF::ListHashSet.base.881" = type <{ %"class.WTF::HashTable.876", %"class.blink::Member.878", %"class.blink::Member.878", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.876" = type <{ %"class.blink::Member.878"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.878" = type { %"class.blink::MemberBase.879" }
%"class.blink::MemberBase.879" = type { %"class.blink::HeapListHashSetNode.880"* }
%"class.blink::HeapListHashSetNode.880" = type { %"class.blink::Member.1107", %"class.blink::Member.878", %"class.blink::Member.878" }
%"class.blink::HeapListHashSet.882" = type { %"class.WTF::ListHashSet.base.892", [7 x i8] }
%"class.WTF::ListHashSet.base.892" = type <{ %"class.WTF::HashTable.887", %"class.blink::Member.889", %"class.blink::Member.889", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.887" = type <{ %"class.blink::Member.889"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.889" = type { %"class.blink::MemberBase.890" }
%"class.blink::MemberBase.890" = type { %"class.blink::HeapListHashSetNode.891"* }
%"class.blink::HeapListHashSetNode.891" = type { %"class.blink::Member.1039", %"class.blink::Member.889", %"class.blink::Member.889" }
%"class.blink::Member.1039" = type { %"class.blink::MemberBase.1040" }
%"class.blink::MemberBase.1040" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type { %"class.blink::InspectorBaseAgent", %"class.blink::Member.1076", %"class.WTF::HashMap.1080", %"class.WTF::HashMap.1085", %"class.blink::HeapHashMap.1090", %"class.v8_inspector::V8InspectorSession"*, %"class.blink::InspectorPageAgent::Client"*, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.383", i8, i32, %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField.1102", %"class.blink::InspectorAgentState::SimpleField.1103", %"class.blink::InspectorAgentState::SimpleField.1103", %"class.blink::InspectorAgentState::SimpleField.1103", %"class.blink::InspectorAgentState::SimpleField.1103", %"class.blink::InspectorAgentState::SimpleField.1103", %"class.blink::InspectorAgentState::SimpleField.1103", %"class.blink::InspectorAgentState::SimpleField.1103", %"class.blink::InspectorAgentState::SimpleField.1104", %"class.blink::InspectorAgentState::SimpleField.1104", %"class.blink::InspectorAgentState::SimpleField" }
%"class.blink::InspectorBaseAgent" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::Page::Backend", %"class.blink::Member.717", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.1070" }
%"class.blink::protocol::Page::Backend" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1070" = type { %"class.std::__1::__compressed_pair.1071" }
%"class.std::__1::__compressed_pair.1071" = type { %"struct.std::__1::__compressed_pair_elem.1072" }
%"struct.std::__1::__compressed_pair_elem.1072" = type { %"class.blink::protocol::Page::Frontend"* }
%"class.blink::protocol::Page::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.WTF::HashMap.1080" = type { %"class.WTF::HashTable.1081" }
%"class.WTF::HashTable.1081" = type <{ %"struct.WTF::KeyValuePair.1084"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1084" = type opaque
%"class.WTF::HashMap.1085" = type { %"class.WTF::HashTable.1086" }
%"class.WTF::HashTable.1086" = type <{ %"struct.WTF::KeyValuePair.1089"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1089" = type opaque
%"class.blink::HeapHashMap.1090" = type { %"class.WTF::HashMap.1093" }
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1096"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1096" = type opaque
%"class.blink::InspectorPageAgent::Client" = type { i32 (...)** }
%"class.blink::InspectorAgentState::MapField" = type { %"class.blink::InspectorAgentState::Field", %"class.WTF::String", %"class.WTF::HashMap.1097" }
%"class.WTF::HashMap.1097" = type { %"class.WTF::HashTable.1098" }
%"class.WTF::HashTable.1098" = type <{ %"struct.WTF::KeyValuePair.1101"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1101" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::InspectorAgentState::MapField.1102" = type { %"class.blink::InspectorAgentState::Field", i8, [7 x i8], %"class.WTF::HashMap.1085" }
%"class.blink::InspectorAgentState::SimpleField.1103" = type { %"class.blink::InspectorAgentState::Field", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::InspectorAgentState::SimpleField.1104" = type { %"class.blink::InspectorAgentState::Field", i32, i32 }
%"class.blink::HeapListHashSet.893" = type { %"class.WTF::ListHashSet.base.903", [7 x i8] }
%"class.WTF::ListHashSet.base.903" = type <{ %"class.WTF::HashTable.898", %"class.blink::Member.900", %"class.blink::Member.900", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.898" = type <{ %"class.blink::Member.900"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.900" = type { %"class.blink::MemberBase.901" }
%"class.blink::MemberBase.901" = type { %"class.blink::HeapListHashSetNode.902"* }
%"class.blink::HeapListHashSetNode.902" = type { %"class.blink::Member.1035", %"class.blink::Member.900", %"class.blink::Member.900" }
%"class.blink::Member.1035" = type { %"class.blink::MemberBase.1036" }
%"class.blink::MemberBase.1036" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.904" = type { %"class.WTF::ListHashSet.base.914", [7 x i8] }
%"class.WTF::ListHashSet.base.914" = type <{ %"class.WTF::HashTable.909", %"class.blink::Member.911", %"class.blink::Member.911", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.909" = type <{ %"class.blink::Member.911"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.911" = type { %"class.blink::MemberBase.912" }
%"class.blink::MemberBase.912" = type { %"class.blink::HeapListHashSetNode.913"* }
%"class.blink::HeapListHashSetNode.913" = type { %"class.blink::Member.1031", %"class.blink::Member.911", %"class.blink::Member.911" }
%"class.blink::Member.1031" = type { %"class.blink::MemberBase.1032" }
%"class.blink::MemberBase.1032" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.915" = type { %"class.WTF::ListHashSet.base.925", [7 x i8] }
%"class.WTF::ListHashSet.base.925" = type <{ %"class.WTF::HashTable.920", %"class.blink::Member.922", %"class.blink::Member.922", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.920" = type <{ %"class.blink::Member.922"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.922" = type { %"class.blink::MemberBase.923" }
%"class.blink::MemberBase.923" = type { %"class.blink::HeapListHashSetNode.924"* }
%"class.blink::HeapListHashSetNode.924" = type { %"class.blink::Member.960", %"class.blink::Member.922", %"class.blink::Member.922" }
%"class.blink::HeapListHashSet.926" = type { %"class.WTF::ListHashSet.base.936", [7 x i8] }
%"class.WTF::ListHashSet.base.936" = type <{ %"class.WTF::HashTable.931", %"class.blink::Member.933", %"class.blink::Member.933", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.931" = type <{ %"class.blink::Member.933"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.933" = type { %"class.blink::MemberBase.934" }
%"class.blink::MemberBase.934" = type { %"class.blink::HeapListHashSetNode.935"* }
%"class.blink::HeapListHashSetNode.935" = type { %"class.blink::Member.938", %"class.blink::Member.933", %"class.blink::Member.933" }
%class.scoped_refptr.937 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.938" = type { %"class.blink::MemberBase.939" }
%"class.blink::MemberBase.939" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.940" = type { %"class.blink::MemberBase.941" }
%"class.blink::MemberBase.941" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member", %"class.WTF::Vector.944", i32, [4 x i8], %"class.blink::HeapHashMap.949", i32, i8, [3 x i8] }>
%"class.blink::HeapHashMap.949" = type { %"class.WTF::HashMap.952" }
%"class.WTF::HashMap.952" = type { %"class.WTF::HashTable.953" }
%"class.WTF::HashTable.953" = type <{ %"struct.WTF::KeyValuePair.955"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.955" = type opaque
%"class.blink::Member.956" = type { %"class.blink::MemberBase.957" }
%"class.blink::MemberBase.957" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.958" = type { %"class.blink::MemberBase.959" }
%"class.blink::MemberBase.959" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.960" = type { %"class.blink::MemberBase.961" }
%"class.blink::MemberBase.961" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.962" = type { %"class.blink::MemberBase.963" }
%"class.blink::MemberBase.963" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.964" = type { %"class.blink::MemberBase.965" }
%"class.blink::MemberBase.965" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.966" }
%"class.blink::Member.966" = type { %"class.blink::MemberBase.967" }
%"class.blink::MemberBase.967" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3120" }
%"class.mojo::Remote.3120" = type { %"class.mojo::internal::InterfacePtrState.3121" }
%"class.mojo::internal::InterfacePtrState.3121" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3122" }
%"class.std::__1::unique_ptr.3122" = type { %"class.std::__1::__compressed_pair.3123" }
%"class.std::__1::__compressed_pair.3123" = type { %"struct.std::__1::__compressed_pair_elem.3124" }
%"struct.std::__1::__compressed_pair_elem.3124" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.968" = type { %"class.std::__1::__compressed_pair.969" }
%"class.std::__1::__compressed_pair.969" = type { %"struct.std::__1::__compressed_pair_elem.970" }
%"struct.std::__1::__compressed_pair_elem.970" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.base::RepeatingCallback.974" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.975" = type { %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.981" = type { %"class.std::__1::__compressed_pair.982" }
%"class.std::__1::__compressed_pair.982" = type { %"struct.std::__1::__compressed_pair_elem.983" }
%"struct.std::__1::__compressed_pair_elem.983" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.987" }
%"class.blink::Member.987" = type { %"class.blink::MemberBase.988" }
%"class.blink::MemberBase.988" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3130" }
%"class.mojo::AssociatedRemote.3130" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3131" }
%"class.mojo::internal::AssociatedInterfacePtrState.3131" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3132" }
%"class.std::__1::unique_ptr.3132" = type { %"class.std::__1::__compressed_pair.3133" }
%"class.std::__1::__compressed_pair.3133" = type { %"struct.std::__1::__compressed_pair_elem.3134" }
%"struct.std::__1::__compressed_pair_elem.3134" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.989" = type { %"class.blink::Member.990" }
%"class.blink::Member.990" = type { %"class.blink::MemberBase.991" }
%"class.blink::MemberBase.991" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3140" }
%"class.mojo::AssociatedRemote.3140" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3141" }
%"class.mojo::internal::AssociatedInterfacePtrState.3141" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3142" }
%"class.std::__1::unique_ptr.3142" = type { %"class.std::__1::__compressed_pair.3143" }
%"class.std::__1::__compressed_pair.3143" = type { %"struct.std::__1::__compressed_pair_elem.3144" }
%"struct.std::__1::__compressed_pair_elem.3144" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.992" }
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3150", %"class.blink::Member", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3150" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3151" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.558" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3151" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.994" = type { %"class.blink::Member.995" }
%"class.blink::Member.995" = type { %"class.blink::MemberBase.996" }
%"class.blink::MemberBase.996" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3154", %"class.blink::Member", %"class.mojo::AssociatedReceiver.3155" }
%"class.blink::ThreadState::PrefinalizerRegistration.3154" = type { i8 }
%"class.mojo::AssociatedReceiver.3155" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3156" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3156" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.997" }
%"class.blink::Member.997" = type { %"class.blink::MemberBase.998" }
%"class.blink::MemberBase.998" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3159", %"class.blink::Member", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3159" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.441, %"class.std::__1::unique_ptr.558", %"class.base::WeakPtrFactory.3160" }
%"class.base::WeakPtrFactory.3160" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.999" = type { %"class.blink::Member.1000" }
%"class.blink::Member.1000" = type { %"class.blink::MemberBase.1001" }
%"class.blink::MemberBase.1001" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3163", %"class.blink::Member", %"class.mojo::AssociatedReceiver.3164" }
%"class.blink::ThreadState::PrefinalizerRegistration.3163" = type { i8 }
%"class.mojo::AssociatedReceiver.3164" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3165" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3165" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1002" = type { %"class.blink::MemberBase.1003" }
%"class.blink::MemberBase.1003" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1004" = type { %"class.blink::MemberBase.1005" }
%"class.blink::MemberBase.1005" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1006" = type { %"class.blink::MemberBase.1007" }
%"class.blink::MemberBase.1007" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1008" = type { %"class.blink::MemberBase.1009" }
%"class.blink::MemberBase.1009" = type { %"class.blink::HeapHashMap.1010"* }
%"class.blink::HeapHashMap.1010" = type opaque
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1011" }
%"class.std::__1::unique_ptr.1011" = type { %"class.std::__1::__compressed_pair.1012" }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.1013" }
%"struct.std::__1::__compressed_pair_elem.1013" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr.1014" }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.blink::Member.1018" = type { %"class.blink::MemberBase.1019" }
%"class.blink::MemberBase.1019" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1020" = type { %"class.absl::optional_internal::optional_data.1021" }
%"class.absl::optional_internal::optional_data.1021" = type { %"class.absl::optional_internal::optional_data_base.1022" }
%"class.absl::optional_internal::optional_data_base.1022" = type { %"class.absl::optional_internal::optional_data_dtor_base.1023" }
%"class.absl::optional_internal::optional_data_dtor_base.1023" = type { i8, %union.anon.1024 }
%union.anon.1024 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::HeapVector.3032" = type { %"class.WTF::Vector.3035" }
%"class.WTF::Vector.3035" = type { %"class.WTF::VectorBuffer.3036" }
%"class.WTF::VectorBuffer.3036" = type { %"class.WTF::VectorBufferBase.3037" }
%"class.WTF::VectorBufferBase.3037" = type { %"class.blink::Member.1193"*, i32, i32 }
%"class.blink::InspectedFrames::Iterator" = type { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* }
%"class.blink::ResourceRequest" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceRequestBody" }
%"class.blink::FetchParameters" = type <{ %"class.blink::ResourceRequest", %"class.blink::TextResourceDecoderOptions", %"struct.blink::ResourceLoaderOptions", i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>
%"class.blink::RawResource" = type <{ %"class.blink::Resource", %class.scoped_refptr.3040, %"class.blink::Member.3044", i8, [7 x i8] }>
%class.scoped_refptr.3040 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted.3041", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote.3043", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted.3041" = type { %"class.base::RefCountedThreadSafe.3042" }
%"class.base::RefCountedThreadSafe.3042" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote.3043" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.blink::Member.3044" = type { %"class.blink::MemberBase.3045" }
%"class.blink::MemberBase.3045" = type { %"class.blink::BufferingBytesConsumer"* }
%"class.blink::BufferingBytesConsumer" = type opaque
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::RawResourceClient" = type { %"class.blink::ResourceClient.base", [7 x i8] }
%"class.blink::HTMLLinkElement" = type <{ %"class.blink::HTMLElement", %"class.blink::LinkLoaderClient", %"class.blink::Member.3047", %"class.blink::Member.3053", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.blink::Member.3055", %"class.WTF::Vector.3057", %"class.blink::Member.3062", %"class.blink::LinkRelAttribute", %"class.blink::Member.3055", %"class.WTF::HashSet.3064", %"class.blink::Member.3055", %"class.WTF::HashSet.3064", i8, [7 x i8] }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::LinkLoaderClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.3047" = type { %"class.blink::MemberBase.3048" }
%"class.blink::MemberBase.3048" = type { %"class.blink::LinkResource"* }
%"class.blink::LinkResource" = type { i32 (...)**, %"class.blink::Member.3051" }
%"class.blink::Member.3051" = type { %"class.blink::MemberBase.3052" }
%"class.blink::MemberBase.3052" = type { %"class.blink::HTMLLinkElement"* }
%"class.blink::Member.3053" = type { %"class.blink::MemberBase.3054" }
%"class.blink::MemberBase.3054" = type { %"class.blink::LinkLoader"* }
%"class.blink::LinkLoader" = type opaque
%"class.WTF::Vector.3057" = type { %"class.WTF::VectorBuffer.3058" }
%"class.WTF::VectorBuffer.3058" = type { %"class.WTF::VectorBufferBase.3059" }
%"class.WTF::VectorBufferBase.3059" = type { %"class.gfx::Size"*, i32, i32 }
%"class.blink::Member.3062" = type { %"class.blink::MemberBase.3063" }
%"class.blink::MemberBase.3063" = type { %"class.blink::RelList"* }
%"class.blink::RelList" = type { %"class.blink::DOMTokenList.base", [7 x i8] }
%"class.blink::DOMTokenList.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::SpaceSplitString", %"class.blink::Member.679", %"class.blink::QualifiedName", i8 }>
%"class.blink::LinkRelAttribute" = type <{ i32, i16, [2 x i8] }>
%"class.blink::Member.3055" = type { %"class.blink::MemberBase.3056" }
%"class.blink::MemberBase.3056" = type { %"class.blink::DOMTokenList"* }
%"class.blink::DOMTokenList" = type <{ %"class.blink::ScriptWrappable", %"class.blink::SpaceSplitString", %"class.blink::Member.679", %"class.blink::QualifiedName", i8, [7 x i8] }>
%"class.WTF::HashSet.3064" = type { %"class.WTF::HashTable.3065" }
%"class.WTF::HashTable.3065" = type <{ %"class.blink::KURL"*, i32, i32, i32, [4 x i8] }>
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.698", %"class.WTF::Vector.3198" }
%"class.WTF::Vector.3198" = type { %"class.WTF::VectorBuffer.3199" }
%"class.WTF::VectorBuffer.3199" = type { %"class.WTF::VectorBufferBase.3200", [64 x i8] }
%"class.WTF::VectorBufferBase.3200" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::BytesConsumer" = type opaque
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.3209", %"class.blink::FreeList", %"class.WTF::Vector.3214" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array.3208" }
%"struct.std::__1::array.3208" = type { [256 x i8] }
%"class.WTF::Vector.3209" = type { %"class.WTF::VectorBuffer.3210" }
%"class.WTF::VectorBuffer.3210" = type { %"class.WTF::VectorBufferBase.3211" }
%"class.WTF::VectorBufferBase.3211" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.WTF::Vector.3214" = type { %"class.WTF::VectorBuffer.3215" }
%"class.WTF::VectorBuffer.3215" = type { %"class.WTF::VectorBufferBase.3216" }
%"class.WTF::VectorBufferBase.3216" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.blink::HeapVectorBacking.3260" = type { i8 }
%"class.blink::HeapHashTableBacking" = type { i8 }

$_ZN3WTF22EqualIgnoringASCIICaseILm16EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN5blink10TraceTraitINS_10LocalFrameEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15InspectedFramesEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_15InspectedFramesEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8DocumentEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8DocumentEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8DocumentEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8DocumentEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_30InspectorResourceContentLoader14ResourceClientEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_30InspectorResourceContentLoader14ResourceClientEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_30InspectorResourceContentLoader14ResourceClientEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_30InspectorResourceContentLoader14ResourceClientEE7GetNameEPKv = comdat any

$_ZNK5blink30InspectorResourceContentLoader14ResourceClient5TraceEPNS_7VisitorE = comdat any

$_ZN5blink10TraceTraitINS_30InspectorResourceContentLoaderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink14ResourceClientD2Ev = comdat any

$_ZN5blink30InspectorResourceContentLoader14ResourceClientD0Ev = comdat any

$_ZN5blink14ResourceClient12DataReceivedEPNS_8ResourceEPKcm = comdat any

$_ZN5blink30InspectorResourceContentLoader14ResourceClient14NotifyFinishedEPNS_8ResourceE = comdat any

$_ZNK5blink14ResourceClient20IsFontResourceClientEv = comdat any

$_ZNK5blink17RawResourceClient19IsRawResourceClientEv = comdat any

$_ZNK5blink30InspectorResourceContentLoader14ResourceClient9DebugNameEv = comdat any

$_ZN5blink17RawResourceClient8DataSentEPNS_8ResourceEmm = comdat any

$_ZN5blink17RawResourceClient20ResponseBodyReceivedEPNS_8ResourceERNS_13BytesConsumerE = comdat any

$_ZN5blink17RawResourceClient16ResponseReceivedEPNS_8ResourceERKNS_16ResourceResponseE = comdat any

$_ZN5blink17RawResourceClient22CachedMetadataReceivedEPNS_8ResourceEN9mojo_base9BigBufferE = comdat any

$_ZN5blink17RawResourceClient16RedirectReceivedEPNS_8ResourceERKNS_15ResourceRequestERKNS_16ResourceResponseE = comdat any

$_ZN5blink17RawResourceClient15RedirectBlockedEv = comdat any

$_ZN5blink17RawResourceClient14DataDownloadedEPNS_8ResourceEm = comdat any

$_ZN5blink11ThreadState24PrefinalizerRegistrationINS_14ResourceClientEEC2EPS2_ = comdat any

$_ZN5blink14ResourceClient18InvokePreFinalizerERKNS_14LivenessBrokerEPv = comdat any

$_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm = comdat any

$_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_14ResourceClientEEEbPKT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_11RawResourceEEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8ResourceEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_8ResourceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_30InspectorResourceContentLoader14ResourceClientEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS4_RSG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_30InspectorResourceContentLoader14ResourceClientEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_30InspectorResourceContentLoader14ResourceClientEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE12ExpandBufferEjPS5_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_30InspectorResourceContentLoader14ResourceClientEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_30InspectorResourceContentLoader14ResourceClientEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_30InspectorResourceContentLoader14ResourceClientEEES6_NS1_17IdentityExtractorENS1_10MemberHashIS5_EENS1_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEE14AllocateObjectISE_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_30InspectorResourceContentLoader14ResourceClientEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_30InspectorResourceContentLoader14ResourceClientEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_RS1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_21CSSStyleSheetResourceEEEvOT_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNS_6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSE_IS8_EEEESF_S7_E6insertINS_17HashMapTranslatorISH_SC_S7_EERiS8_EENS_18HashTableAddResultISI_S9_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNS_6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSE_IS8_EEEESF_S7_E6ExpandEPS9_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNS_6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSE_IS8_EEEESF_S7_E8RehashToEPS9_jSJ_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNS_6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSE_IS8_EEEESF_S7_E8ReinsertEOS9_ = comdat any

$_ZN3WTF6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4base12OnceCallbackIFvvEEEEEmm = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNS_6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSE_IS8_EEEESF_S7_E5eraseEPKS9_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_30InspectorResourceContentLoader14ResourceClientEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE5eraseEPKS5_ = comdat any

$_ZZN5blink11GCInfoTraitINS_15InspectedFramesEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15InspectedFramesEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_30InspectorResourceContentLoader14ResourceClientEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_30InspectorResourceContentLoader14ResourceClientEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink30InspectorResourceContentLoader14ResourceClientE = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_30InspectorResourceContentLoader14ResourceClientEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_30InspectorResourceContentLoader14ResourceClientEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink26fetch_initiator_type_names9kInternalE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names16kCrossoriginAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str = private unnamed_addr constant [16 x i8] c"use-credentials\00", align 1
@__const._ZN5blink30InspectorResourceContentLoader5StartEv.manifest_params = private unnamed_addr constant <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.53 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.54, %class.scoped_refptr.54, %class.scoped_refptr.54, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.60, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.79", %"class.WTF::Vector.41", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.88 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.93 } } } }, { { { { i8, [7 x i8], %union.anon.93 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.98 } } } }, { { { { i8, [7 x i8], %union.anon.88 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.88 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.98 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.104 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.152", i8, i8, [6 x i8], %class.scoped_refptr.156, %class.scoped_refptr.354, %class.scoped_refptr.356 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }> <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.53 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.54, %class.scoped_refptr.54, %class.scoped_refptr.54, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.60, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.79", %"class.WTF::Vector.41", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.88 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.93 } } } }, { { { { i8, [7 x i8], %union.anon.93 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.98 } } } }, { { { { i8, [7 x i8], %union.anon.88 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.88 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.98 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.104 }, %"class.blink::ResourceRequestBody" } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.53 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.54, %class.scoped_refptr.54, %class.scoped_refptr.54, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.60, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.79", %"class.WTF::Vector.41", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.88 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.93 } } } }, { { { { i8, [7 x i8], %union.anon.93 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.98 } } } }, { { { { i8, [7 x i8], %union.anon.88 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.88 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.98 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.104 } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr.15 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr.15 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, %"class.base::TimeDelta" { i64 -6148914691236517206 }, <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.53 } } } } } }, i8, [7 x i8] }> <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.53 } } } } } } { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.53 } } } } } { %"class.url::SchemeHostPort" <{ %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.27" { %"struct.std::__1::__compressed_pair_elem.28" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.29 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.27" { %"struct.std::__1::__compressed_pair_elem.28" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.29 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i16 -21846, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, { { { { i8, [7 x i8], %union.anon.53 } } } } { { { { i8, [7 x i8], %union.anon.53 } } } { { { i8, [7 x i8], %union.anon.53 } } { { i8, [7 x i8], %union.anon.53 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.53 { %"class.url::Origin::Nonce" { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, %class.scoped_refptr.54 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %class.scoped_refptr.54 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %class.scoped_refptr.54 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr.15 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %"class.blink::HTTPHeaderMap" { %"class.WTF::HashMap.55" { %"class.WTF::HashTable.56" <{ %"struct.WTF::KeyValuePair.59"* inttoptr (i64 -6148914691236517206 to %"struct.WTF::KeyValuePair.59"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> } }, i16 -21846, [2 x i8] c"\AA\AA", i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, %class.scoped_refptr.60 { %"class.blink::WebURLRequestExtraData"* inttoptr (i64 -6148914691236517206 to %"class.blink::WebURLRequestExtraData"*) }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, %"class.WTF::String" { %class.scoped_refptr.15 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr.15 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } } { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr.15 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr.15 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr.15 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr.15 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.79", %"class.WTF::Vector.41", %"class.WTF::String" } } } } } } { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.79", %"class.WTF::Vector.41", %"class.WTF::String" } } } } } { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.79", %"class.WTF::Vector.41", %"class.WTF::String" } } } } { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.79", %"class.WTF::Vector.41", %"class.WTF::String" } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.79", %"class.WTF::Vector.41", %"class.WTF::String" } } { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.79", %"class.WTF::Vector.41", %"class.WTF::String" } { i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.WTF::Vector.79" { %"class.WTF::VectorBuffer.80" { %"class.WTF::VectorBufferBase.81" { %class.scoped_refptr.54* inttoptr (i64 -6148914691236517206 to %class.scoped_refptr.54*), i32 -1431655766, i32 -1431655766 } } }, %"class.WTF::Vector.41" { %"class.WTF::VectorBuffer.42" { %"class.WTF::VectorBufferBase.43" { %"class.WTF::String"* inttoptr (i64 -6148914691236517206 to %"class.WTF::String"*), i32 -1431655766, i32 -1431655766 } } }, %"class.WTF::String" { %class.scoped_refptr.15 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } } }, { { { { i8, [7 x i8], %union.anon.88 } } } } { { { { i8, [7 x i8], %union.anon.88 } } } { { { i8, [7 x i8], %union.anon.88 } } { { i8, [7 x i8], %union.anon.88 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.88 { %"class.WTF::String" { %class.scoped_refptr.15 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.93 } } } }, { { { { i8, [7 x i8], %union.anon.93 } } } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.93 } } } } { { { { i8, [7 x i8], %union.anon.93 } } } { { { i8, [7 x i8], %union.anon.93 } } { { i8, [7 x i8], %union.anon.93 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.93 { %"class.base::TimeDelta" { i64 -6148914691236517206 } } } } } }, { { { { i8, [7 x i8], %union.anon.93 } } } } { { { { i8, [7 x i8], %union.anon.93 } } } { { { i8, [7 x i8], %union.anon.93 } } { { i8, [7 x i8], %union.anon.93 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.93 { %"class.base::TimeDelta" { i64 -6148914691236517206 } } } } } } }, i8 -86, i8 -86, i8 -86, i8 -86, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.98 } } } } { { { { i8, [7 x i8], %union.anon.98 } } } { { { i8, [7 x i8], %union.anon.98 } } { { i8, [7 x i8], %union.anon.98 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.98 { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } }, { { { { i8, [7 x i8], %union.anon.88 } } } } { { { { i8, [7 x i8], %union.anon.88 } } } { { { i8, [7 x i8], %union.anon.88 } } { { i8, [7 x i8], %union.anon.88 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.88 { %"class.WTF::String" { %class.scoped_refptr.15 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, %"class.WTF::String" { %class.scoped_refptr.15 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr.15 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr.15 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { { { { i8, [7 x i8], %union.anon.88 } } } } { { { { i8, [7 x i8], %union.anon.88 } } } { { { i8, [7 x i8], %union.anon.88 } } { { i8, [7 x i8], %union.anon.88 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.88 { %"class.WTF::String" { %class.scoped_refptr.15 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, i64 -6148914691236517206, %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } }, i64 -6148914691236517206, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, [2 x i8] c"\AA\AA", { { { { i8, [7 x i8], %union.anon.98 } } } } { { { { i8, [7 x i8], %union.anon.98 } } } { { { i8, [7 x i8], %union.anon.98 } } { { i8, [7 x i8], %union.anon.98 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.98 { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } } { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr.15 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr.15 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } }, %"class.mojo::PendingRemote" { %"struct.mojo::internal::PendingRemoteState" { %"class.mojo::ScopedHandleBase" { %"class.mojo::MessagePipeHandle" { %"class.mojo::Handle" { i32 -1431655766 } } }, i32 -1431655766 } } } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %class.scoped_refptr.104 { %"class.base::RefCountedData"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData"*) } }, %"class.blink::ResourceRequestBody" { %class.scoped_refptr.2779 { %"class.blink::EncodedFormData"* inttoptr (i64 -6148914691236517206 to %"class.blink::EncodedFormData"*) }, %"class.mojo::PendingRemote.3039" { %"struct.mojo::internal::PendingRemoteState" { %"class.mojo::ScopedHandleBase" { %"class.mojo::MessagePipeHandle" { %"class.mojo::Handle" { i32 -1431655766 } } }, i32 -1431655766 } } } }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }> <{ i32 -1431655766, i32 -1431655766, %"class.WTF::TextEncoding" { i8* inttoptr (i64 -6148914691236517206 to i8*) }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", i8* inttoptr (i64 -6148914691236517206 to i8*), { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr.15 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr.15 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, [3 x i8] c"\AA\AA\AA", [5 x i8] c"\AA\AA\AA\AA\AA" }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.152", i8, i8, [6 x i8], %class.scoped_refptr.156, %class.scoped_refptr.354, %class.scoped_refptr.356 } { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" } { %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr.15 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %"class.WTF::TextPosition" { %"class.WTF::OrdinalNumber" { i32 -1431655766 }, %"class.WTF::OrdinalNumber" { i32 -1431655766 } }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr.15 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i8 -86, i8 -86, %"class.base::StrongAlias" { i8 -86 }, [5 x i8] c"\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr.15 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::HashSet.152" { %"class.WTF::HashTable.153" <{ %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %class.scoped_refptr.156 { %"class.blink::DOMWrapperWorld"* inttoptr (i64 -6148914691236517206 to %"class.blink::DOMWrapperWorld"*) }, %class.scoped_refptr.354 { %"class.base::RefCountedData.355"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData.355"*) }, %class.scoped_refptr.356 { %"class.base::RefCountedData.357"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData.357"*) } }, i32 -1431655766, i32 -1431655766, %"struct.blink::FetchParameters::ResourceWidth" <{ float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA" }>, %"class.blink::ClientHintsPreferences" { %"struct.blink::WebEnabledClientHints" { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, i8 -86, [5 x i8] c"\AA\AA\AA\AA\AA" }>, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15InspectedFramesEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::InspectedFrames]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15InspectedFramesEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15InspectedFramesEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15InspectedFramesEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.4 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.5 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.7 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.8 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.10 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8DocumentEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [157 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Document>, WTF::VectorTraits<blink::Member<blink::Document> > >]\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.12 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink30InspectorResourceContentLoader14ResourceClientEEEPKcv = private unnamed_addr constant [101 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::InspectorResourceContentLoader::ResourceClient]\00", align 1
@_ZZN5blink11GCInfoTraitINS_30InspectorResourceContentLoader14ResourceClientEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_30InspectorResourceContentLoader14ResourceClientEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_30InspectorResourceContentLoader14ResourceClientEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_30InspectorResourceContentLoader14ResourceClientEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_30InspectorResourceContentLoader14ResourceClientEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink30InspectorResourceContentLoader14ResourceClientE = linkonce_odr hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorResourceContentLoader::ResourceClient"*, %"class.blink::Visitor"*)* @_ZNK5blink30InspectorResourceContentLoader14ResourceClient5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ResourceClient"*)* @_ZN5blink14ResourceClientD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorResourceContentLoader::ResourceClient"*)* @_ZN5blink30InspectorResourceContentLoader14ResourceClientD0Ev to i8*), i8* bitcast (void (%"class.blink::ResourceClient"*, %"class.blink::Resource"*, i8*, i64)* @_ZN5blink14ResourceClient12DataReceivedEPNS_8ResourceEPKcm to i8*), i8* bitcast (void (%"class.blink::InspectorResourceContentLoader::ResourceClient"*, %"class.blink::Resource"*)* @_ZN5blink30InspectorResourceContentLoader14ResourceClient14NotifyFinishedEPNS_8ResourceE to i8*), i8* bitcast (i1 (%"class.blink::ResourceClient"*)* @_ZNK5blink14ResourceClient20IsFontResourceClientEv to i8*), i8* bitcast (i1 (%"class.blink::RawResourceClient"*)* @_ZNK5blink17RawResourceClient19IsRawResourceClientEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InspectorResourceContentLoader::ResourceClient"*)* @_ZNK5blink30InspectorResourceContentLoader14ResourceClient9DebugNameEv to i8*), i8* bitcast (void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, i64, i64)* @_ZN5blink17RawResourceClient8DataSentEPNS_8ResourceEmm to i8*), i8* bitcast (void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::BytesConsumer"*)* @_ZN5blink17RawResourceClient20ResponseBodyReceivedEPNS_8ResourceERNS_13BytesConsumerE to i8*), i8* bitcast (void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceResponse"*)* @_ZN5blink17RawResourceClient16ResponseReceivedEPNS_8ResourceERKNS_16ResourceResponseE to i8*), i8* bitcast (void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.mojo_base::BigBuffer"*)* @_ZN5blink17RawResourceClient22CachedMetadataReceivedEPNS_8ResourceEN9mojo_base9BigBufferE to i8*), i8* bitcast (i1 (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceRequest"*, %"class.blink::ResourceResponse"*)* @_ZN5blink17RawResourceClient16RedirectReceivedEPNS_8ResourceERKNS_15ResourceRequestERKNS_16ResourceResponseE to i8*), i8* bitcast (void (%"class.blink::RawResourceClient"*)* @_ZN5blink17RawResourceClient15RedirectBlockedEv to i8*), i8* bitcast (void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, i64)* @_ZN5blink17RawResourceClient14DataDownloadedEPNS_8ResourceEm to i8*), i8* bitcast (void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::BlobDataHandle"*)* @_ZN5blink17RawResourceClient17DidDownloadToBlobEPNS_8ResourceE13scoped_refptrINS_14BlobDataHandleEE to i8*)] }, comdat, align 8
@_ZTVN5blink14ResourceClientE = external unnamed_addr constant { [10 x i8*] }, align 8
@.str.13 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEEEEPKcv = private unnamed_addr constant [119 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>]\00", align 1
@.str.14 = private unnamed_addr constant [47 x i8] c"InspectorResourceContentLoader::ResourceClient\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8ResourceEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [157 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Resource>, WTF::VectorTraits<blink::Member<blink::Resource> > >]\00", align 1
@.str.15 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_30InspectorResourceContentLoader14ResourceClientEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_30InspectorResourceContentLoader14ResourceClientEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_30InspectorResourceContentLoader14ResourceClientEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_30InspectorResourceContentLoader14ResourceClientEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_30InspectorResourceContentLoader14ResourceClientEEES7_NS_17IdentityExtractorENS_10MemberHashIS6_EENS_10HashTraitsIS7_EESC_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [526 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::InspectorResourceContentLoader::ResourceClient>, blink::Member<blink::InspectorResourceContentLoader::ResourceClient>, WTF::IdentityExtractor, WTF::MemberHash<blink::InspectorResourceContentLoader::ResourceClient>, WTF::HashTraits<blink::Member<blink::InspectorResourceContentLoader::ResourceClient> >, WTF::HashTraits<blink::Member<blink::InspectorResourceContentLoader::ResourceClient> >, blink::HeapAllocator> >]\00", align 1
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiNS_6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEEEEEEEPKcv = private unnamed_addr constant [141 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<int, WTF::Vector<base::OnceCallback<void ()>, 0, WTF::PartitionAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4base12OnceCallbackIFvvEEEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = base::OnceCallback<void ()>]\00", align 1

@_ZN5blink30InspectorResourceContentLoaderC1EPNS_10LocalFrameE = hidden unnamed_addr alias void (%"class.blink::InspectorResourceContentLoader"*, %"class.blink::LocalFrame"*), void (%"class.blink::InspectorResourceContentLoader"*, %"class.blink::LocalFrame"*)* @_ZN5blink30InspectorResourceContentLoaderC2EPNS_10LocalFrameE
@_ZN5blink30InspectorResourceContentLoaderD1Ev = hidden unnamed_addr alias void (%"class.blink::InspectorResourceContentLoader"*), void (%"class.blink::InspectorResourceContentLoader"*)* @_ZN5blink30InspectorResourceContentLoaderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30InspectorResourceContentLoaderC2EPNS_10LocalFrameE(%"class.blink::InspectorResourceContentLoader"* nocapture, %"class.blink::LocalFrame"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::InspectorResourceContentLoader"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 20, i1 false) #10
  %4 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 1
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.blink::LocalFrame"* %1, %"class.blink::LocalFrame"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 5
  %8 = bitcast %"class.blink::HeapHashSet"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 20, i1 false) #10
  %9 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 6
  %10 = bitcast %"class.blink::HeapVector"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30InspectorResourceContentLoader5StartEv(%"class.blink::InspectorResourceContentLoader"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::HeapVector.3032", align 8
  %3 = alloca %"class.blink::InspectedFrames::Iterator", align 8
  %4 = alloca %"class.blink::InspectedFrames::Iterator", align 8
  %5 = alloca %"class.blink::Document"*, align 8
  %6 = alloca %"class.WTF::HashSet.673", align 8
  %7 = alloca %"class.blink::ResourceRequest", align 8
  %8 = alloca %"class.blink::ResourceRequest", align 8
  %9 = alloca %"class.blink::ResourceRequest", align 8
  %10 = alloca %"struct.blink::ResourceLoaderOptions", align 8
  %11 = alloca %"class.blink::FetchParameters", align 8
  %12 = alloca %"class.blink::ResourceRequest", align 8
  %13 = alloca %"class.blink::InspectorResourceContentLoader::ResourceClient"*, align 8
  %14 = alloca %"class.blink::RawResource"*, align 8
  %15 = alloca %"class.blink::HeapVector.1243", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.blink::KURL", align 8
  %18 = alloca %"class.blink::ResourceRequest", align 8
  %19 = alloca %"struct.blink::ResourceLoaderOptions", align 8
  %20 = alloca %"class.blink::FetchParameters", align 8
  %21 = alloca %"class.blink::ResourceRequest", align 8
  %22 = alloca %"class.blink::InspectorResourceContentLoader::ResourceClient"*, align 8
  %23 = alloca %"class.blink::CSSStyleSheetResource"*, align 8
  %24 = alloca %"class.blink::KURL", align 8
  %25 = alloca %"class.blink::KURL", align 8
  %26 = alloca %"class.WTF::StringView", align 8
  %27 = alloca %"class.blink::ResourceRequest", align 8
  %28 = alloca %"struct.blink::ResourceLoaderOptions", align 8
  %29 = alloca %"class.blink::FetchParameters", align 8
  %30 = alloca %"class.blink::ResourceRequest", align 8
  %31 = alloca %"class.blink::InspectorResourceContentLoader::ResourceClient"*, align 8
  %32 = alloca %"class.blink::RawResource"*, align 8
  %33 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 2
  store i8 1, i8* %33, align 1
  %34 = bitcast %"class.blink::HeapVector.3032"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #10
  %35 = getelementptr inbounds %"class.blink::HeapVector.3032", %"class.blink::HeapVector.3032"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.blink::HeapVector.3032", %"class.blink::HeapVector.3032"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.blink::HeapVector.3032", %"class.blink::HeapVector.3032"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 16, i1 false) #10
  %38 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15InspectedFramesEEEPhm(i64 16) #10
  %39 = bitcast i8* %38 to %"class.blink::InspectedFrames"*
  %40 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 4, i32 0, i32 0
  %41 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %40, align 8
  tail call void @_ZN5blink15InspectedFramesC1EPNS_10LocalFrameE(%"class.blink::InspectedFrames"* %39, %"class.blink::LocalFrame"* %41) #10
  %42 = getelementptr inbounds i8, i8* %38, i64 -4
  %43 = bitcast i8* %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = or i16 %44, 1
  store atomic i16 %45, i16* %43 release, align 2
  %46 = bitcast %"class.blink::InspectedFrames::Iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #10
  %47 = getelementptr inbounds %"class.blink::InspectedFrames::Iterator", %"class.blink::InspectedFrames::Iterator"* %3, i64 0, i32 0
  %48 = getelementptr inbounds %"class.blink::InspectedFrames::Iterator", %"class.blink::InspectedFrames::Iterator"* %3, i64 0, i32 1
  %49 = tail call { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } @_ZN5blink15InspectedFrames5beginEv(%"class.blink::InspectedFrames"* %39) #10
  %50 = extractvalue { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } %49, 0
  store %"class.blink::LocalFrame"* %50, %"class.blink::LocalFrame"** %47, align 8
  %51 = extractvalue { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } %49, 1
  store %"class.blink::LocalFrame"* %51, %"class.blink::LocalFrame"** %48, align 8
  %52 = bitcast %"class.blink::InspectedFrames::Iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #10
  %53 = getelementptr inbounds %"class.blink::InspectedFrames::Iterator", %"class.blink::InspectedFrames::Iterator"* %4, i64 0, i32 0
  %54 = getelementptr inbounds %"class.blink::InspectedFrames::Iterator", %"class.blink::InspectedFrames::Iterator"* %4, i64 0, i32 1
  %55 = tail call { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } @_ZN5blink15InspectedFrames3endEv(%"class.blink::InspectedFrames"* %39) #10
  %56 = extractvalue { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } %55, 0
  store %"class.blink::LocalFrame"* %56, %"class.blink::LocalFrame"** %53, align 8
  %57 = extractvalue { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } %55, 1
  store %"class.blink::LocalFrame"* %57, %"class.blink::LocalFrame"** %54, align 8
  %58 = call zeroext i1 @_ZN5blink15InspectedFrames8IteratorneERKS1_(%"class.blink::InspectedFrames::Iterator"* nonnull %3, %"class.blink::InspectedFrames::Iterator"* nonnull dereferenceable(16) %4) #10
  br i1 %58, label %59, label %62

59:                                               ; preds = %1
  %60 = bitcast %"class.blink::Document"** %5 to i8*
  %61 = getelementptr inbounds %"class.blink::HeapVector.3032", %"class.blink::HeapVector.3032"* %2, i64 0, i32 0
  br label %133

62:                                               ; preds = %160, %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #10
  %63 = load %"class.blink::Member.1193"*, %"class.blink::Member.1193"** %35, align 8
  %64 = load i32, i32* %37, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"class.blink::Member.1193", %"class.blink::Member.1193"* %63, i64 %65
  %67 = icmp eq i32 %64, 0
  br i1 %67, label %163, label %68

68:                                               ; preds = %62
  %69 = bitcast %"class.WTF::HashSet.673"* %6 to i8*
  %70 = getelementptr inbounds %"class.WTF::HashSet.673", %"class.WTF::HashSet.673"* %6, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.WTF::HashSet.673", %"class.WTF::HashSet.673"* %6, i64 0, i32 0, i32 1
  %72 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %7, i64 0, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %8, i64 0, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %9, i64 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %7, i64 0, i32 0
  %76 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %7, i64 0, i32 0, i32 15
  %77 = getelementptr inbounds %"class.WTF::HashSet.673", %"class.WTF::HashSet.673"* %6, i64 0, i32 0
  %78 = bitcast %"struct.blink::ResourceLoaderOptions"* %10 to i8*
  %79 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink26fetch_initiator_type_names9kInternalE, align 8
  %80 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %79, i64 0, i32 0, i32 0, i32 0
  %81 = bitcast %"struct.blink::ResourceLoaderOptions"* %10 to i64*
  %82 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %84 = bitcast %"class.blink::InspectorResourceContentLoader::ResourceClient"** %13 to i8*
  %85 = ptrtoint %"class.blink::InspectorResourceContentLoader"* %0 to i64
  %86 = bitcast %"class.blink::InspectorResourceContentLoader::ResourceClient"** %13 to i8**
  %87 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 6, i32 0
  %88 = bitcast %"class.blink::RawResource"** %14 to i8*
  %89 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2
  %90 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %91 = getelementptr inbounds %"class.WTF::Vector.387", %"class.WTF::Vector.387"* %87, i64 0, i32 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 5, i32 0, i32 0
  %93 = bitcast %"class.blink::HeapVector.1243"* %15 to i8*
  %94 = getelementptr inbounds %"class.blink::HeapVector.1243", %"class.blink::HeapVector.1243"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %95 = getelementptr inbounds %"class.blink::HeapVector.1243", %"class.blink::HeapVector.1243"* %15, i64 0, i32 0, i32 0, i32 0, i32 2
  %96 = bitcast %"class.WTF::String"* %16 to i8*
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %98 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %17, i64 0, i32 0
  %99 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %18, i64 0, i32 0, i32 0, i32 0
  %100 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %18, i64 0, i32 0, i32 15
  %101 = bitcast %"struct.blink::ResourceLoaderOptions"* %19 to i8*
  %102 = bitcast %"struct.blink::ResourceLoaderOptions"* %19 to i64*
  %103 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = bitcast %"class.blink::InspectorResourceContentLoader::ResourceClient"** %22 to i8*
  %106 = bitcast %"class.blink::InspectorResourceContentLoader::ResourceClient"** %22 to i8**
  %107 = bitcast %"class.blink::CSSStyleSheetResource"** %23 to i8*
  %108 = bitcast %"class.blink::InspectorResourceContentLoader::ResourceClient"** %22 to %"class.blink::ResourceClient"**
  %109 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %24, i64 0, i32 0
  %110 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %25, i64 0, i32 0
  %111 = bitcast %"class.WTF::StringView"* %26 to i8*
  %112 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kCrossoriginAttrE, align 8
  %113 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %112, i64 0, i32 0, i32 0
  %114 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %115 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 0
  %116 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 1
  %117 = bitcast i8** %116 to %"class.WTF::StringImpl"**
  %118 = bitcast %"class.WTF::StringView"* %26 to i64*
  %119 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 2
  %120 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %27, i64 0, i32 0, i32 0, i32 0
  %121 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %27, i64 0, i32 0, i32 17
  %122 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %27, i64 0, i32 0, i32 19
  %123 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %27, i64 0, i32 0, i32 15
  %124 = bitcast %"struct.blink::ResourceLoaderOptions"* %28 to i8*
  %125 = bitcast %"struct.blink::ResourceLoaderOptions"* %28 to i64*
  %126 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  %128 = bitcast %"class.blink::InspectorResourceContentLoader::ResourceClient"** %31 to i8*
  %129 = bitcast %"class.blink::InspectorResourceContentLoader::ResourceClient"** %31 to i8**
  %130 = bitcast %"class.blink::RawResource"** %32 to i8*
  %131 = bitcast %"class.blink::InspectorResourceContentLoader::ResourceClient"** %31 to %"class.blink::ResourceClient"**
  %132 = bitcast %"class.WTF::HashSet.673"* %6 to i8*
  br label %165

133:                                              ; preds = %59, %160
  %134 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %48, align 8
  %135 = call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %134) #10
  %136 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %135, i64 0, i32 6
  %137 = load i8, i8* %136, align 4, !range !2
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %139, label %160

139:                                              ; preds = %133
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #10
  %140 = call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %134) #10
  store %"class.blink::Document"* %140, %"class.blink::Document"** %5, align 8
  %141 = load i32, i32* %37, align 4
  %142 = load i32, i32* %36, align 8
  %143 = icmp eq i32 %141, %142
  br i1 %143, label %158, label %144, !prof !3

144:                                              ; preds = %139
  %145 = ptrtoint %"class.blink::Document"* %140 to i64
  %146 = load %"class.blink::Member.1193"*, %"class.blink::Member.1193"** %35, align 8
  %147 = zext i32 %141 to i64
  %148 = getelementptr inbounds %"class.blink::Member.1193", %"class.blink::Member.1193"* %146, i64 %147
  %149 = bitcast %"class.blink::Member.1193"* %148 to i64*
  store atomic i64 %145, i64* %149 monotonic, align 8
  %150 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %155, label %152

152:                                              ; preds = %144
  %153 = bitcast %"class.blink::Document"* %140 to i8*
  %154 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %153) #10
  br label %155

155:                                              ; preds = %152, %144
  %156 = load i32, i32* %37, align 4
  %157 = add i32 %156, 1
  store i32 %157, i32* %37, align 4
  br label %159

158:                                              ; preds = %139
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8DocumentEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.3035"* nonnull %61, %"class.blink::Document"** nonnull dereferenceable(8) %5) #10
  br label %159

159:                                              ; preds = %155, %158
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #10
  br label %160

160:                                              ; preds = %133, %159
  %161 = call dereferenceable(16) %"class.blink::InspectedFrames::Iterator"* @_ZN5blink15InspectedFrames8IteratorppEv(%"class.blink::InspectedFrames::Iterator"* nonnull %3) #10
  %162 = call zeroext i1 @_ZN5blink15InspectedFrames8IteratorneERKS1_(%"class.blink::InspectedFrames::Iterator"* nonnull %3, %"class.blink::InspectedFrames::Iterator"* nonnull dereferenceable(16) %4) #10
  br i1 %162, label %133, label %62

163:                                              ; preds = %702, %62
  %164 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 1
  store i8 1, i8* %164, align 8
  call void @_ZN5blink30InspectorResourceContentLoader9CheckDoneEv(%"class.blink::InspectorResourceContentLoader"* %0)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #10
  ret void

165:                                              ; preds = %68, %702
  %166 = phi %"class.blink::Member.1193"* [ %63, %68 ], [ %703, %702 ]
  %167 = getelementptr inbounds %"class.blink::Member.1193", %"class.blink::Member.1193"* %166, i64 0, i32 0, i32 0
  %168 = load %"class.blink::Document"*, %"class.blink::Document"** %167, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %132, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 20, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 1032, i8* nonnull %72) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 1032, i1 false)
  call void @_ZN5blink15ResourceRequestC1Ev(%"class.blink::ResourceRequest"* nonnull %7) #10
  %169 = call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* %168) #10
  %170 = icmp eq %"class.blink::DocumentLoader"* %169, null
  br i1 %170, label %178, label %171

171:                                              ; preds = %165
  %172 = call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* %168) #10
  %173 = getelementptr inbounds %"class.blink::DocumentLoader", %"class.blink::DocumentLoader"* %172, i64 0, i32 22, i32 0, i32 0
  %174 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %173, align 8
  %175 = icmp eq %"class.blink::HistoryItem"* %174, null
  br i1 %175, label %178, label %176

176:                                              ; preds = %171
  call void @llvm.lifetime.start.p0i8(i64 1032, i8* nonnull %73) #10
  call void @_ZN5blink11HistoryItem23GenerateResourceRequestENS_5mojom14FetchCacheModeE(%"class.blink::ResourceRequest"* nonnull sret %8, %"class.blink::HistoryItem"* nonnull %174, i32 5) #10
  %177 = call dereferenceable(1032) %"class.blink::ResourceRequest"* @_ZN5blink15ResourceRequestaSEOS0_(%"class.blink::ResourceRequest"* nonnull %7, %"class.blink::ResourceRequest"* nonnull dereferenceable(1032) %8) #10
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 1032, i8* nonnull %73) #10
  br label %181

178:                                              ; preds = %165, %171
  call void @llvm.lifetime.start.p0i8(i64 1032, i8* nonnull %74) #10
  %179 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %168, i64 0, i32 19
  call void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"* nonnull %9, %"class.blink::KURL"* dereferenceable(112) %179) #10
  %180 = call dereferenceable(1032) %"class.blink::ResourceRequest"* @_ZN5blink15ResourceRequestaSEOS0_(%"class.blink::ResourceRequest"* nonnull %7, %"class.blink::ResourceRequest"* nonnull dereferenceable(1032) %9) #10
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 1032, i8* nonnull %74) #10
  call void @_ZN5blink19ResourceRequestHead12SetCacheModeENS_5mojom14FetchCacheModeE(%"class.blink::ResourceRequestHead"* nonnull %75, i32 5) #10
  br label %181

181:                                              ; preds = %178, %176
  store i32 16, i32* %76, align 8
  %182 = call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* %168) #10
  %183 = icmp eq %"class.blink::DocumentLoader"* %182, null
  br i1 %183, label %200, label %184

184:                                              ; preds = %181
  %185 = getelementptr inbounds %"class.blink::DocumentLoader", %"class.blink::DocumentLoader"* %182, i64 0, i32 27, i32 24
  %186 = load i8, i8* %185, align 1, !range !2
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %188, label %199

188:                                              ; preds = %184
  %189 = getelementptr inbounds %"class.blink::DocumentLoader", %"class.blink::DocumentLoader"* %182, i64 0, i32 40, i32 0, i32 0, i32 0
  %190 = load %"class.blink::WebServiceWorkerNetworkProvider"*, %"class.blink::WebServiceWorkerNetworkProvider"** %189, align 8
  %191 = icmp eq %"class.blink::WebServiceWorkerNetworkProvider"* %190, null
  br i1 %191, label %200, label %192

192:                                              ; preds = %188
  %193 = bitcast %"class.blink::WebServiceWorkerNetworkProvider"* %190 to i64 (%"class.blink::WebServiceWorkerNetworkProvider"*)***
  %194 = load i64 (%"class.blink::WebServiceWorkerNetworkProvider"*)**, i64 (%"class.blink::WebServiceWorkerNetworkProvider"*)*** %193, align 8
  %195 = getelementptr inbounds i64 (%"class.blink::WebServiceWorkerNetworkProvider"*)*, i64 (%"class.blink::WebServiceWorkerNetworkProvider"*)** %194, i64 5
  %196 = load i64 (%"class.blink::WebServiceWorkerNetworkProvider"*)*, i64 (%"class.blink::WebServiceWorkerNetworkProvider"*)** %195, align 8
  %197 = call i64 %196(%"class.blink::WebServiceWorkerNetworkProvider"* nonnull %190) #10
  %198 = icmp sgt i64 %197, -1
  br i1 %198, label %199, label %200

199:                                              ; preds = %184, %192
  call void @_ZN5blink19ResourceRequestHead12SetCacheModeENS_5mojom14FetchCacheModeE(%"class.blink::ResourceRequestHead"* nonnull %75, i32 0) #10
  br label %200

200:                                              ; preds = %188, %181, %199, %192
  %201 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %168, i64 0, i32 14, i32 0, i32 0
  %202 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %201, align 8
  %203 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %168) #10
  %204 = call %"class.blink::DOMWrapperWorld"* @_ZNK5blink16ExecutionContext15GetCurrentWorldEv(%"class.blink::ExecutionContext"* %203) #10
  %205 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* nonnull %75) #10
  %206 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* %205) #10
  br i1 %206, label %207, label %292

207:                                              ; preds = %200
  %208 = call zeroext i1 @_ZNK5blink4KURL15IsAboutBlankURLEv(%"class.blink::KURL"* %205) #10
  br i1 %208, label %292, label %209

209:                                              ; preds = %207
  %210 = call zeroext i1 @_ZNK5blink4KURL16IsAboutSrcdocURLEv(%"class.blink::KURL"* %205) #10
  br i1 %210, label %292, label %211

211:                                              ; preds = %209
  %212 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* nonnull %75) #10
  %213 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %212, i64 0, i32 4
  %214 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.674"* nonnull %77, %"class.WTF::String"* dereferenceable(8) %213, %"class.WTF::String"* dereferenceable(8) %213) #10
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %78) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 -86, i64 112, i1 false)
  %215 = icmp eq %"class.blink::DOMWrapperWorld"* %204, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %211
  %217 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %204, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %217) #10
  br label %218

218:                                              ; preds = %211, %216
  call void @_ZN5blink21ResourceLoaderOptionsC1E13scoped_refptrIKNS_15DOMWrapperWorldEE(%"struct.blink::ResourceLoaderOptions"* nonnull %10, %"class.blink::DOMWrapperWorld"* %204) #10
  %219 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %220 = icmp eq %"class.WTF::StringImpl"* %219, null
  br i1 %220, label %238, label %221

221:                                              ; preds = %218
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %219, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = load atomic i32, i32* %222 monotonic, align 4
  %224 = and i32 %223, 2
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %238

226:                                              ; preds = %221
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %219, i64 0, i32 0
  %228 = load i32, i32* %227, align 4
  %229 = zext i32 %228 to i33
  %230 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %229, i33 1) #10
  %231 = extractvalue { i33, i1 } %230, 1
  %232 = extractvalue { i33, i1 } %230, 0
  %233 = icmp slt i33 %232, 0
  %234 = or i1 %231, %233
  br i1 %234, label %235, label %236, !prof !3

235:                                              ; preds = %226
  call void @llvm.trap() #10
  unreachable

236:                                              ; preds = %226
  %237 = trunc i33 %232 to i32
  store i32 %237, i32* %227, align 4
  br label %238

238:                                              ; preds = %236, %221, %218
  %239 = ptrtoint %"class.WTF::StringImpl"* %219 to i64
  %240 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  store i64 %239, i64* %81, align 8
  %241 = icmp eq %"class.WTF::StringImpl"* %240, null
  br i1 %241, label %255, label %242

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = load atomic i32, i32* %243 monotonic, align 4
  %245 = and i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 0
  %248 = load i32, i32* %247, align 4
  br i1 %246, label %249, label %251

249:                                              ; preds = %242
  %250 = add i32 %248, -1
  store i32 %250, i32* %247, align 4
  br label %251

251:                                              ; preds = %249, %242
  %252 = phi i32 [ %250, %249 ], [ %248, %242 ]
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %255

254:                                              ; preds = %251
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %240) #10
  br label %255

255:                                              ; preds = %238, %251, %254
  call void @llvm.lifetime.start.p0i8(i64 1344, i8* nonnull %83) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %83, i8* align 8 getelementptr inbounds (<{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.53 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.54, %class.scoped_refptr.54, %class.scoped_refptr.54, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.60, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.79", %"class.WTF::Vector.41", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.88 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.93 } } } }, { { { { i8, [7 x i8], %union.anon.93 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.98 } } } }, { { { { i8, [7 x i8], %union.anon.88 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.88 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.98 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.104 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.152", i8, i8, [6 x i8], %class.scoped_refptr.156, %class.scoped_refptr.354, %class.scoped_refptr.356 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>, <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.53 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.54, %class.scoped_refptr.54, %class.scoped_refptr.54, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.60, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.79", %"class.WTF::Vector.41", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.88 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.93 } } } }, { { { { i8, [7 x i8], %union.anon.93 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.98 } } } }, { { { { i8, [7 x i8], %union.anon.88 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.88 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.98 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.104 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.152", i8, i8, [6 x i8], %class.scoped_refptr.156, %class.scoped_refptr.354, %class.scoped_refptr.356 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>* @__const._ZN5blink30InspectorResourceContentLoader5StartEv.manifest_params, i64 0, i32 0, i32 0, i32 0, i32 0), i64 1344, i1 false)
  call void @_ZN5blink15ResourceRequestC1EOS0_(%"class.blink::ResourceRequest"* nonnull %12, %"class.blink::ResourceRequest"* nonnull dereferenceable(1032) %7) #10
  call void @_ZN5blink15FetchParametersC1ENS_15ResourceRequestERKNS_21ResourceLoaderOptionsE(%"class.blink::FetchParameters"* nonnull %11, %"class.blink::ResourceRequest"* nonnull %12, %"struct.blink::ResourceLoaderOptions"* nonnull dereferenceable(112) %10) #10
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %12) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #10
  store %"class.blink::InspectorResourceContentLoader::ResourceClient"* inttoptr (i64 -6148914691236517206 to %"class.blink::InspectorResourceContentLoader::ResourceClient"*), %"class.blink::InspectorResourceContentLoader::ResourceClient"** %13, align 8
  %256 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_30InspectorResourceContentLoader14ResourceClientEEEPhm(i64 40) #10
  %257 = bitcast i8* %256 to %"class.blink::ResourceClient"*
  %258 = bitcast i8* %256 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink14ResourceClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %258, align 8
  %259 = getelementptr inbounds i8, i8* %256, i64 8
  %260 = bitcast i8* %259 to %"class.blink::ThreadState::PrefinalizerRegistration"*
  call void @_ZN5blink11ThreadState24PrefinalizerRegistrationINS_14ResourceClientEEC2EPS2_(%"class.blink::ThreadState::PrefinalizerRegistration"* %260, %"class.blink::ResourceClient"* %257) #10
  %261 = getelementptr inbounds i8, i8* %256, i64 16
  %262 = bitcast i8* %261 to %"class.blink::Resource"**
  store %"class.blink::Resource"* null, %"class.blink::Resource"** %262, align 8
  %263 = getelementptr inbounds i8, i8* %256, i64 24
  store i8 0, i8* %263, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink30InspectorResourceContentLoader14ResourceClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %258, align 8
  %264 = getelementptr inbounds i8, i8* %256, i64 32
  %265 = bitcast i8* %264 to i64*
  store i64 %85, i64* %265, align 8
  %266 = getelementptr inbounds i8, i8* %256, i64 -4
  %267 = bitcast i8* %266 to i16*
  %268 = load atomic i16, i16* %267 monotonic, align 2
  %269 = or i16 %268, 1
  store atomic i16 %269, i16* %267 release, align 2
  store i8* %256, i8** %86, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #10
  %270 = bitcast i8* %256 to %"class.blink::RawResourceClient"*
  %271 = call %"class.blink::RawResource"* @_ZN5blink11RawResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_17RawResourceClientE(%"class.blink::FetchParameters"* nonnull dereferenceable(1344) %11, %"class.blink::ResourceFetcher"* %202, %"class.blink::RawResourceClient"* %270) #10
  store %"class.blink::RawResource"* %271, %"class.blink::RawResource"** %14, align 8
  %272 = load i32, i32* %89, align 4
  %273 = load i32, i32* %90, align 8
  %274 = icmp eq i32 %272, %273
  br i1 %274, label %289, label %275, !prof !3

275:                                              ; preds = %255
  %276 = ptrtoint %"class.blink::RawResource"* %271 to i64
  %277 = load %"class.blink::Member.11"*, %"class.blink::Member.11"** %91, align 8
  %278 = zext i32 %272 to i64
  %279 = getelementptr inbounds %"class.blink::Member.11", %"class.blink::Member.11"* %277, i64 %278
  %280 = bitcast %"class.blink::Member.11"* %279 to i64*
  store atomic i64 %276, i64* %280 monotonic, align 8
  %281 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %286, label %283

283:                                              ; preds = %275
  %284 = bitcast %"class.blink::RawResource"* %271 to i8*
  %285 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %284) #10
  br label %286

286:                                              ; preds = %283, %275
  %287 = load i32, i32* %89, align 4
  %288 = add i32 %287, 1
  store i32 %288, i32* %89, align 4
  br label %290

289:                                              ; preds = %255
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_11RawResourceEEEvOT_(%"class.WTF::Vector.387"* %87, %"class.blink::RawResource"** nonnull dereferenceable(8) %14) #10
  br label %290

290:                                              ; preds = %286, %289
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #10
  %291 = call { %"class.blink::Member.7"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_30InspectorResourceContentLoader14ResourceClientEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS4_RSG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_(%"class.WTF::HashTable.5"* %92, %"class.blink::InspectorResourceContentLoader::ResourceClient"** nonnull dereferenceable(8) %13, %"class.blink::InspectorResourceContentLoader::ResourceClient"** nonnull dereferenceable(8) %13) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #10
  call void @_ZN5blink15FetchParametersD1Ev(%"class.blink::FetchParameters"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 1344, i8* nonnull %83) #10
  call void @_ZN5blink21ResourceLoaderOptionsD1Ev(%"struct.blink::ResourceLoaderOptions"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %78) #10
  br label %292

292:                                              ; preds = %200, %207, %290, %209
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 0, i64 16, i1 false) #10
  call void @_ZN5blink17InspectorCSSAgent29CollectAllDocumentStyleSheetsEPNS_8DocumentERNS_10HeapVectorINS_6MemberINS_13CSSStyleSheetEEELj0EEE(%"class.blink::Document"* %168, %"class.blink::HeapVector.1243"* nonnull dereferenceable(16) %15) #10
  %293 = load %"class.blink::Member.1249"*, %"class.blink::Member.1249"** %94, align 8
  %294 = load i32, i32* %95, align 4
  %295 = zext i32 %294 to i64
  %296 = getelementptr inbounds %"class.blink::Member.1249", %"class.blink::Member.1249"* %293, i64 %295
  %297 = icmp eq i32 %294, 0
  br i1 %297, label %301, label %298

298:                                              ; preds = %292
  %299 = icmp eq %"class.blink::DOMWrapperWorld"* %204, null
  %300 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %204, i64 0, i32 0, i32 0, i32 0
  br label %304

301:                                              ; preds = %497, %292
  %302 = call %"class.blink::HTMLLinkElement"* @_ZNK5blink8Document12LinkManifestEv(%"class.blink::Document"* %168) #10
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %109) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 -86, i64 112, i1 false)
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %24) #10
  %303 = icmp eq %"class.blink::HTMLLinkElement"* %302, null
  br i1 %303, label %502, label %500

304:                                              ; preds = %298, %497
  %305 = phi %"class.blink::Member.1249"* [ %293, %298 ], [ %498, %497 ]
  %306 = getelementptr inbounds %"class.blink::Member.1249", %"class.blink::Member.1249"* %305, i64 0, i32 0, i32 0
  %307 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %306, align 8
  %308 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %307, i64 0, i32 2
  %309 = load i8, i8* %308, align 8, !range !2
  %310 = icmp eq i8 %309, 0
  br i1 %310, label %311, label %497

311:                                              ; preds = %304
  %312 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %307, i64 0, i32 1, i32 0, i32 0
  %313 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %312, align 8
  %314 = call zeroext i1 @_ZNK5blink18StyleSheetContents13LoadCompletedEv(%"class.blink::StyleSheetContents"* %313) #10
  br i1 %314, label %315, label %497

315:                                              ; preds = %311
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #10
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %97, align 8
  %316 = call %"class.WTF::StringImpl"* @_ZNK5blink13CSSStyleSheet4hrefEv(%"class.blink::CSSStyleSheet"* %307) #10
  store %"class.WTF::StringImpl"* %316, %"class.WTF::StringImpl"** %97, align 8
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %98) #10
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %17, %"class.WTF::String"* nonnull dereferenceable(8) %16) #10
  %317 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %17) #10
  br i1 %317, label %318, label %381

318:                                              ; preds = %315
  %319 = call zeroext i1 @_ZNK5blink4KURL15IsAboutBlankURLEv(%"class.blink::KURL"* nonnull %17) #10
  br i1 %319, label %381, label %320

320:                                              ; preds = %318
  %321 = call zeroext i1 @_ZNK5blink4KURL16IsAboutSrcdocURLEv(%"class.blink::KURL"* nonnull %17) #10
  br i1 %321, label %381, label %322

322:                                              ; preds = %320
  %323 = load %"class.WTF::String"*, %"class.WTF::String"** %70, align 8
  %324 = icmp eq %"class.WTF::String"* %323, null
  br i1 %324, label %378, label %325

325:                                              ; preds = %322
  %326 = load i32, i32* %71, align 8
  %327 = add i32 %326, -1
  %328 = zext i32 %327 to i64
  %329 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %330 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %331 = load atomic i32, i32* %330 monotonic, align 4
  %332 = lshr i32 %331, 8
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %334, label %336

334:                                              ; preds = %325
  %335 = call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %329) #10
  br label %336

336:                                              ; preds = %334, %325
  %337 = phi i32 [ %335, %334 ], [ %332, %325 ]
  %338 = and i32 %337, %327
  %339 = zext i32 %338 to i64
  %340 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %323, i64 %339
  %341 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %340, i64 0, i32 0, i32 0
  %342 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %341, align 8
  %343 = icmp eq %"class.WTF::StringImpl"* %342, null
  br i1 %343, label %378, label %344

344:                                              ; preds = %336
  %345 = xor i32 %337, -1
  %346 = lshr i32 %337, 23
  %347 = add i32 %346, %345
  %348 = shl i32 %347, 12
  %349 = xor i32 %348, %347
  %350 = lshr i32 %349, 7
  %351 = xor i32 %350, %349
  %352 = shl i32 %351, 2
  %353 = xor i32 %352, %351
  %354 = lshr i32 %353, 20
  %355 = xor i32 %354, %353
  %356 = or i32 %355, 1
  %357 = zext i32 %356 to i64
  br label %358

358:                                              ; preds = %369, %344
  %359 = phi %"class.WTF::StringImpl"* [ %342, %344 ], [ %376, %369 ]
  %360 = phi %"class.WTF::String"* [ %340, %344 ], [ %374, %369 ]
  %361 = phi i64 [ %339, %344 ], [ %373, %369 ]
  %362 = phi i64 [ 0, %344 ], [ %371, %369 ]
  %363 = bitcast %"class.WTF::String"* %360 to i8**
  %364 = load i8*, i8** %363, align 8
  %365 = icmp eq i8* %364, inttoptr (i64 -1 to i8*)
  br i1 %365, label %369, label %366

366:                                              ; preds = %358
  %367 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %368 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %359, %"class.WTF::StringImpl"* %367) #10
  br i1 %368, label %378, label %369

369:                                              ; preds = %366, %358
  %370 = icmp eq i64 %362, 0
  %371 = select i1 %370, i64 %357, i64 %362
  %372 = add i64 %371, %361
  %373 = and i64 %372, %328
  %374 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %323, i64 %373
  %375 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %374, i64 0, i32 0, i32 0
  %376 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %375, align 8
  %377 = icmp eq %"class.WTF::StringImpl"* %376, null
  br i1 %377, label %378, label %358

378:                                              ; preds = %366, %369, %322, %336
  %379 = phi %"class.WTF::String"* [ null, %322 ], [ null, %336 ], [ null, %369 ], [ %360, %366 ]
  %380 = icmp eq %"class.WTF::String"* %379, null
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %98) #10
  br i1 %380, label %382, label %480

381:                                              ; preds = %315, %318, %320
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %98) #10
  br label %480

382:                                              ; preds = %378
  %383 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_RS1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.674"* nonnull %77, %"class.WTF::String"* nonnull dereferenceable(8) %16, %"class.WTF::String"* nonnull dereferenceable(8) %16) #10
  call void @llvm.lifetime.start.p0i8(i64 1032, i8* nonnull %99) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 -86, i64 1032, i1 false)
  call void @_ZN5blink15ResourceRequestC1ERKN3WTF6StringE(%"class.blink::ResourceRequest"* nonnull %18, %"class.WTF::String"* nonnull dereferenceable(8) %16) #10
  store i32 16, i32* %100, align 8
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %101) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 -86, i64 112, i1 false)
  br i1 %299, label %385, label %384

384:                                              ; preds = %382
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %300) #10
  br label %385

385:                                              ; preds = %382, %384
  call void @_ZN5blink21ResourceLoaderOptionsC1E13scoped_refptrIKNS_15DOMWrapperWorldEE(%"struct.blink::ResourceLoaderOptions"* nonnull %19, %"class.blink::DOMWrapperWorld"* %204) #10
  %386 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %387 = icmp eq %"class.WTF::StringImpl"* %386, null
  br i1 %387, label %405, label %388

388:                                              ; preds = %385
  %389 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %386, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %390 = load atomic i32, i32* %389 monotonic, align 4
  %391 = and i32 %390, 2
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %393, label %405

393:                                              ; preds = %388
  %394 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %386, i64 0, i32 0
  %395 = load i32, i32* %394, align 4
  %396 = zext i32 %395 to i33
  %397 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %396, i33 1) #10
  %398 = extractvalue { i33, i1 } %397, 1
  %399 = extractvalue { i33, i1 } %397, 0
  %400 = icmp slt i33 %399, 0
  %401 = or i1 %398, %400
  br i1 %401, label %402, label %403, !prof !3

402:                                              ; preds = %393
  call void @llvm.trap() #10
  unreachable

403:                                              ; preds = %393
  %404 = trunc i33 %399 to i32
  store i32 %404, i32* %394, align 4
  br label %405

405:                                              ; preds = %403, %388, %385
  %406 = ptrtoint %"class.WTF::StringImpl"* %386 to i64
  %407 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  store i64 %406, i64* %102, align 8
  %408 = icmp eq %"class.WTF::StringImpl"* %407, null
  br i1 %408, label %422, label %409

409:                                              ; preds = %405
  %410 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %407, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %411 = load atomic i32, i32* %410 monotonic, align 4
  %412 = and i32 %411, 2
  %413 = icmp eq i32 %412, 0
  %414 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %407, i64 0, i32 0
  %415 = load i32, i32* %414, align 4
  br i1 %413, label %416, label %418

416:                                              ; preds = %409
  %417 = add i32 %415, -1
  store i32 %417, i32* %414, align 4
  br label %418

418:                                              ; preds = %416, %409
  %419 = phi i32 [ %417, %416 ], [ %415, %409 ]
  %420 = icmp eq i32 %419, 0
  br i1 %420, label %421, label %422

421:                                              ; preds = %418
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %407) #10
  br label %422

422:                                              ; preds = %405, %418, %421
  call void @llvm.lifetime.start.p0i8(i64 1344, i8* nonnull %104) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %104, i8* align 8 getelementptr inbounds (<{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.53 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.54, %class.scoped_refptr.54, %class.scoped_refptr.54, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.60, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.79", %"class.WTF::Vector.41", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.88 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.93 } } } }, { { { { i8, [7 x i8], %union.anon.93 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.98 } } } }, { { { { i8, [7 x i8], %union.anon.88 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.88 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.98 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.104 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.152", i8, i8, [6 x i8], %class.scoped_refptr.156, %class.scoped_refptr.354, %class.scoped_refptr.356 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>, <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.53 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.54, %class.scoped_refptr.54, %class.scoped_refptr.54, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.60, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.79", %"class.WTF::Vector.41", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.88 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.93 } } } }, { { { { i8, [7 x i8], %union.anon.93 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.98 } } } }, { { { { i8, [7 x i8], %union.anon.88 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.88 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.98 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.104 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.152", i8, i8, [6 x i8], %class.scoped_refptr.156, %class.scoped_refptr.354, %class.scoped_refptr.356 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>* @__const._ZN5blink30InspectorResourceContentLoader5StartEv.manifest_params, i64 0, i32 0, i32 0, i32 0, i32 0), i64 1344, i1 false)
  call void @_ZN5blink15ResourceRequestC1EOS0_(%"class.blink::ResourceRequest"* nonnull %21, %"class.blink::ResourceRequest"* nonnull dereferenceable(1032) %18) #10
  call void @_ZN5blink15FetchParametersC1ENS_15ResourceRequestERKNS_21ResourceLoaderOptionsE(%"class.blink::FetchParameters"* nonnull %20, %"class.blink::ResourceRequest"* nonnull %21, %"struct.blink::ResourceLoaderOptions"* nonnull dereferenceable(112) %19) #10
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %21) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #10
  store %"class.blink::InspectorResourceContentLoader::ResourceClient"* inttoptr (i64 -6148914691236517206 to %"class.blink::InspectorResourceContentLoader::ResourceClient"*), %"class.blink::InspectorResourceContentLoader::ResourceClient"** %22, align 8
  %423 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_30InspectorResourceContentLoader14ResourceClientEEEPhm(i64 40) #10
  %424 = bitcast i8* %423 to %"class.blink::ResourceClient"*
  %425 = bitcast i8* %423 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink14ResourceClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %425, align 8
  %426 = getelementptr inbounds i8, i8* %423, i64 8
  %427 = bitcast i8* %426 to %"class.blink::ThreadState::PrefinalizerRegistration"*
  call void @_ZN5blink11ThreadState24PrefinalizerRegistrationINS_14ResourceClientEEC2EPS2_(%"class.blink::ThreadState::PrefinalizerRegistration"* %427, %"class.blink::ResourceClient"* %424) #10
  %428 = getelementptr inbounds i8, i8* %423, i64 16
  %429 = bitcast i8* %428 to %"class.blink::Resource"**
  store %"class.blink::Resource"* null, %"class.blink::Resource"** %429, align 8
  %430 = getelementptr inbounds i8, i8* %423, i64 24
  store i8 0, i8* %430, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink30InspectorResourceContentLoader14ResourceClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %425, align 8
  %431 = getelementptr inbounds i8, i8* %423, i64 32
  %432 = bitcast i8* %431 to i64*
  store i64 %85, i64* %432, align 8
  %433 = getelementptr inbounds i8, i8* %423, i64 -4
  %434 = bitcast i8* %433 to i16*
  %435 = load atomic i16, i16* %434 monotonic, align 2
  %436 = or i16 %435, 1
  store atomic i16 %436, i16* %434 release, align 2
  store i8* %423, i8** %106, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #10
  %437 = call %"class.blink::CSSStyleSheetResource"* @_ZN5blink21CSSStyleSheetResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_14ResourceClientE(%"class.blink::FetchParameters"* nonnull dereferenceable(1344) %20, %"class.blink::ResourceFetcher"* %202, %"class.blink::ResourceClient"* %424) #10
  store %"class.blink::CSSStyleSheetResource"* %437, %"class.blink::CSSStyleSheetResource"** %23, align 8
  %438 = load i32, i32* %89, align 4
  %439 = load i32, i32* %90, align 8
  %440 = icmp eq i32 %438, %439
  br i1 %440, label %455, label %441, !prof !3

441:                                              ; preds = %422
  %442 = ptrtoint %"class.blink::CSSStyleSheetResource"* %437 to i64
  %443 = load %"class.blink::Member.11"*, %"class.blink::Member.11"** %91, align 8
  %444 = zext i32 %438 to i64
  %445 = getelementptr inbounds %"class.blink::Member.11", %"class.blink::Member.11"* %443, i64 %444
  %446 = bitcast %"class.blink::Member.11"* %445 to i64*
  store atomic i64 %442, i64* %446 monotonic, align 8
  %447 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %448 = icmp eq i32 %447, 0
  br i1 %448, label %452, label %449

449:                                              ; preds = %441
  %450 = bitcast %"class.blink::CSSStyleSheetResource"* %437 to i8*
  %451 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %450) #10
  br label %452

452:                                              ; preds = %449, %441
  %453 = load i32, i32* %89, align 4
  %454 = add i32 %453, 1
  store i32 %454, i32* %89, align 4
  br label %456

455:                                              ; preds = %422
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_21CSSStyleSheetResourceEEEvOT_(%"class.WTF::Vector.387"* %87, %"class.blink::CSSStyleSheetResource"** nonnull dereferenceable(8) %23) #10
  br label %456

456:                                              ; preds = %452, %455
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #10
  %457 = load %"class.blink::ResourceClient"*, %"class.blink::ResourceClient"** %108, align 8
  %458 = getelementptr inbounds %"class.blink::ResourceClient", %"class.blink::ResourceClient"* %457, i64 0, i32 3, i32 0, i32 0
  %459 = load %"class.blink::Resource"*, %"class.blink::Resource"** %458, align 8
  %460 = icmp eq %"class.blink::Resource"* %459, null
  br i1 %460, label %463, label %461

461:                                              ; preds = %456
  %462 = call { %"class.blink::Member.7"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_30InspectorResourceContentLoader14ResourceClientEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS4_RSG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_(%"class.WTF::HashTable.5"* %92, %"class.blink::InspectorResourceContentLoader::ResourceClient"** nonnull dereferenceable(8) %22, %"class.blink::InspectorResourceContentLoader::ResourceClient"** nonnull dereferenceable(8) %22) #10
  br label %463

463:                                              ; preds = %456, %461
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #10
  call void @_ZN5blink15FetchParametersD1Ev(%"class.blink::FetchParameters"* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 1344, i8* nonnull %104) #10
  call void @_ZN5blink21ResourceLoaderOptionsD1Ev(%"struct.blink::ResourceLoaderOptions"* nonnull %19) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %101) #10
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %18) #10
  call void @llvm.lifetime.end.p0i8(i64 1032, i8* nonnull %99) #10
  %464 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %465 = icmp eq %"class.WTF::StringImpl"* %464, null
  br i1 %465, label %479, label %466

466:                                              ; preds = %463
  %467 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %464, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %468 = load atomic i32, i32* %467 monotonic, align 4
  %469 = and i32 %468, 2
  %470 = icmp eq i32 %469, 0
  %471 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %464, i64 0, i32 0
  %472 = load i32, i32* %471, align 4
  br i1 %470, label %473, label %475

473:                                              ; preds = %466
  %474 = add i32 %472, -1
  store i32 %474, i32* %471, align 4
  br label %475

475:                                              ; preds = %473, %466
  %476 = phi i32 [ %474, %473 ], [ %472, %466 ]
  %477 = icmp eq i32 %476, 0
  br i1 %477, label %478, label %479

478:                                              ; preds = %475
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %464) #10
  br label %479

479:                                              ; preds = %463, %475, %478
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #10
  br label %497

480:                                              ; preds = %378, %381
  %481 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %482 = icmp eq %"class.WTF::StringImpl"* %481, null
  br i1 %482, label %496, label %483

483:                                              ; preds = %480
  %484 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %481, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %485 = load atomic i32, i32* %484 monotonic, align 4
  %486 = and i32 %485, 2
  %487 = icmp eq i32 %486, 0
  %488 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %481, i64 0, i32 0
  %489 = load i32, i32* %488, align 4
  br i1 %487, label %490, label %492

490:                                              ; preds = %483
  %491 = add i32 %489, -1
  store i32 %491, i32* %488, align 4
  br label %492

492:                                              ; preds = %490, %483
  %493 = phi i32 [ %491, %490 ], [ %489, %483 ]
  %494 = icmp eq i32 %493, 0
  br i1 %494, label %495, label %496

495:                                              ; preds = %492
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %481) #10
  br label %496

496:                                              ; preds = %480, %492, %495
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #10
  br label %497

497:                                              ; preds = %304, %496, %311, %479
  %498 = getelementptr inbounds %"class.blink::Member.1249", %"class.blink::Member.1249"* %305, i64 1
  %499 = icmp eq %"class.blink::Member.1249"* %498, %296
  br i1 %499, label %301, label %304

500:                                              ; preds = %301
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %110) #10
  call void @_ZNK5blink15HTMLLinkElement4HrefEv(%"class.blink::KURL"* nonnull sret %25, %"class.blink::HTMLLinkElement"* nonnull %302) #10
  %501 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* nonnull %24, %"class.blink::KURL"* nonnull dereferenceable(112) %25) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %25) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %110) #10
  br label %502

502:                                              ; preds = %301, %500
  %503 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %24) #10
  br i1 %503, label %504, label %659

504:                                              ; preds = %502
  %505 = call zeroext i1 @_ZNK5blink4KURL15IsAboutBlankURLEv(%"class.blink::KURL"* nonnull %24) #10
  br i1 %505, label %659, label %506

506:                                              ; preds = %504
  %507 = call zeroext i1 @_ZNK5blink4KURL16IsAboutSrcdocURLEv(%"class.blink::KURL"* nonnull %24) #10
  br i1 %507, label %659, label %508

508:                                              ; preds = %506
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %111) #10
  %509 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %302, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %510 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %509, align 8
  %511 = icmp eq %"class.blink::ElementData"* %510, null
  br i1 %511, label %561, label %512

512:                                              ; preds = %508
  %513 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %510, i64 0, i32 0, i32 0, i32 0
  %514 = load i32, i32* %513, align 4
  %515 = and i32 %514, 1
  %516 = icmp eq i32 %515, 0
  br i1 %516, label %524, label %517

517:                                              ; preds = %512
  %518 = bitcast %"class.blink::ElementData"* %510 to %"class.blink::UniqueElementData"*
  %519 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %510, i64 1, i32 1
  %520 = bitcast %"class.blink::Member.698"* %519 to %"class.blink::Attribute"**
  %521 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %520, align 8
  %522 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %518, i64 0, i32 2, i32 0, i32 0, i32 2
  %523 = load i32, i32* %522, align 4
  br label %529

524:                                              ; preds = %512
  %525 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %510, i64 1
  %526 = bitcast %"class.blink::ElementData"* %525 to %"class.blink::Attribute"*
  %527 = lshr i32 %514, 1
  %528 = and i32 %527, 268435455
  br label %529

529:                                              ; preds = %524, %517
  %530 = phi %"class.blink::Attribute"* [ %526, %524 ], [ %521, %517 ]
  %531 = phi i32 [ %528, %524 ], [ %523, %517 ]
  %532 = zext i32 %531 to i64
  %533 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %530, i64 %532
  %534 = icmp eq i32 %531, 0
  br i1 %534, label %561, label %535

535:                                              ; preds = %529
  %536 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %113, align 8
  %537 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %536, i64 0, i32 3, i32 0, i32 0, i32 0
  %538 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %536, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %539

539:                                              ; preds = %554, %535
  %540 = phi %"class.blink::Attribute"* [ %530, %535 ], [ %555, %554 ]
  %541 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %540, i64 0, i32 0, i32 0, i32 0
  %542 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %541, align 8
  %543 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %542, %536
  br i1 %543, label %557, label %544

544:                                              ; preds = %539
  %545 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %542, i64 0, i32 3, i32 0, i32 0, i32 0
  %546 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %545, align 8
  %547 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %537, align 8
  %548 = icmp eq %"class.WTF::StringImpl"* %546, %547
  br i1 %548, label %549, label %554

549:                                              ; preds = %544
  %550 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %542, i64 0, i32 4, i32 0, i32 0, i32 0
  %551 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %550, align 8
  %552 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %538, align 8
  %553 = icmp eq %"class.WTF::StringImpl"* %551, %552
  br i1 %553, label %557, label %554

554:                                              ; preds = %549, %544
  %555 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %540, i64 1
  %556 = icmp eq %"class.blink::Attribute"* %555, %533
  br i1 %556, label %561, label %539

557:                                              ; preds = %549, %539
  %558 = icmp eq %"class.blink::Attribute"* %540, null
  %559 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %540, i64 0, i32 1
  %560 = select i1 %558, %"class.WTF::AtomicString"* %114, %"class.WTF::AtomicString"* %559
  br label %561

561:                                              ; preds = %554, %557, %508, %529
  %562 = phi %"class.WTF::AtomicString"* [ %114, %529 ], [ %114, %508 ], [ %560, %557 ], [ %114, %554 ]
  %563 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %562, i64 0, i32 0, i32 0, i32 0
  %564 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %563, align 8
  %565 = icmp eq %"class.WTF::StringImpl"* %564, null
  br i1 %565, label %566, label %568

566:                                              ; preds = %561
  store i8* null, i8** %116, align 8
  %567 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %567, i64* %118, align 8
  br label %572

568:                                              ; preds = %561
  store %"class.WTF::StringImpl"* %564, %"class.WTF::StringImpl"** %115, align 8
  %569 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %564, i64 0, i32 1
  %570 = load i32, i32* %569, align 4
  %571 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %564, i64 1
  store %"class.WTF::StringImpl"* %571, %"class.WTF::StringImpl"** %117, align 8
  br label %572

572:                                              ; preds = %566, %568
  %573 = phi i32 [ %570, %568 ], [ 0, %566 ]
  store i32 %573, i32* %119, align 8
  %574 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm16EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %26, [16 x i8]* nonnull dereferenceable(16) @.str)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %111) #10
  call void @llvm.lifetime.start.p0i8(i64 1032, i8* nonnull %120) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %120, i8 -86, i64 1032, i1 false)
  call void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"* nonnull %27, %"class.blink::KURL"* nonnull dereferenceable(112) %24) #10
  store i32 2, i32* %121, align 8
  %575 = select i1 %574, i32 2, i32 0
  store i32 %575, i32* %122, align 8
  store i32 18, i32* %123, align 8
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %124) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 -86, i64 112, i1 false)
  %576 = icmp eq %"class.blink::DOMWrapperWorld"* %204, null
  br i1 %576, label %579, label %577

577:                                              ; preds = %572
  %578 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %204, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %578) #10
  br label %579

579:                                              ; preds = %572, %577
  call void @_ZN5blink21ResourceLoaderOptionsC1E13scoped_refptrIKNS_15DOMWrapperWorldEE(%"struct.blink::ResourceLoaderOptions"* nonnull %28, %"class.blink::DOMWrapperWorld"* %204) #10
  %580 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %581 = icmp eq %"class.WTF::StringImpl"* %580, null
  br i1 %581, label %599, label %582

582:                                              ; preds = %579
  %583 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %580, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %584 = load atomic i32, i32* %583 monotonic, align 4
  %585 = and i32 %584, 2
  %586 = icmp eq i32 %585, 0
  br i1 %586, label %587, label %599

587:                                              ; preds = %582
  %588 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %580, i64 0, i32 0
  %589 = load i32, i32* %588, align 4
  %590 = zext i32 %589 to i33
  %591 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %590, i33 1) #10
  %592 = extractvalue { i33, i1 } %591, 1
  %593 = extractvalue { i33, i1 } %591, 0
  %594 = icmp slt i33 %593, 0
  %595 = or i1 %592, %594
  br i1 %595, label %596, label %597, !prof !3

596:                                              ; preds = %587
  call void @llvm.trap() #10
  unreachable

597:                                              ; preds = %587
  %598 = trunc i33 %593 to i32
  store i32 %598, i32* %588, align 4
  br label %599

599:                                              ; preds = %597, %582, %579
  %600 = ptrtoint %"class.WTF::StringImpl"* %580 to i64
  %601 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  store i64 %600, i64* %125, align 8
  %602 = icmp eq %"class.WTF::StringImpl"* %601, null
  br i1 %602, label %616, label %603

603:                                              ; preds = %599
  %604 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %601, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %605 = load atomic i32, i32* %604 monotonic, align 4
  %606 = and i32 %605, 2
  %607 = icmp eq i32 %606, 0
  %608 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %601, i64 0, i32 0
  %609 = load i32, i32* %608, align 4
  br i1 %607, label %610, label %612

610:                                              ; preds = %603
  %611 = add i32 %609, -1
  store i32 %611, i32* %608, align 4
  br label %612

612:                                              ; preds = %610, %603
  %613 = phi i32 [ %611, %610 ], [ %609, %603 ]
  %614 = icmp eq i32 %613, 0
  br i1 %614, label %615, label %616

615:                                              ; preds = %612
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %601) #10
  br label %616

616:                                              ; preds = %599, %612, %615
  call void @llvm.lifetime.start.p0i8(i64 1344, i8* nonnull %127) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %127, i8* align 8 getelementptr inbounds (<{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.53 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.54, %class.scoped_refptr.54, %class.scoped_refptr.54, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.60, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.79", %"class.WTF::Vector.41", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.88 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.93 } } } }, { { { { i8, [7 x i8], %union.anon.93 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.98 } } } }, { { { { i8, [7 x i8], %union.anon.88 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.88 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.98 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.104 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.152", i8, i8, [6 x i8], %class.scoped_refptr.156, %class.scoped_refptr.354, %class.scoped_refptr.356 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>, <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.53 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.54, %class.scoped_refptr.54, %class.scoped_refptr.54, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.60, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.79", %"class.WTF::Vector.41", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.88 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.93 } } } }, { { { { i8, [7 x i8], %union.anon.93 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.98 } } } }, { { { { i8, [7 x i8], %union.anon.88 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.88 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.98 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.104 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.152", i8, i8, [6 x i8], %class.scoped_refptr.156, %class.scoped_refptr.354, %class.scoped_refptr.356 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>* @__const._ZN5blink30InspectorResourceContentLoader5StartEv.manifest_params, i64 0, i32 0, i32 0, i32 0, i32 0), i64 1344, i1 false)
  call void @_ZN5blink15ResourceRequestC1EOS0_(%"class.blink::ResourceRequest"* nonnull %30, %"class.blink::ResourceRequest"* nonnull dereferenceable(1032) %27) #10
  call void @_ZN5blink15FetchParametersC1ENS_15ResourceRequestERKNS_21ResourceLoaderOptionsE(%"class.blink::FetchParameters"* nonnull %29, %"class.blink::ResourceRequest"* nonnull %30, %"struct.blink::ResourceLoaderOptions"* nonnull dereferenceable(112) %28) #10
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %30) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #10
  store %"class.blink::InspectorResourceContentLoader::ResourceClient"* inttoptr (i64 -6148914691236517206 to %"class.blink::InspectorResourceContentLoader::ResourceClient"*), %"class.blink::InspectorResourceContentLoader::ResourceClient"** %31, align 8
  %617 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_30InspectorResourceContentLoader14ResourceClientEEEPhm(i64 40) #10
  %618 = bitcast i8* %617 to %"class.blink::ResourceClient"*
  %619 = bitcast i8* %617 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink14ResourceClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %619, align 8
  %620 = getelementptr inbounds i8, i8* %617, i64 8
  %621 = bitcast i8* %620 to %"class.blink::ThreadState::PrefinalizerRegistration"*
  call void @_ZN5blink11ThreadState24PrefinalizerRegistrationINS_14ResourceClientEEC2EPS2_(%"class.blink::ThreadState::PrefinalizerRegistration"* %621, %"class.blink::ResourceClient"* %618) #10
  %622 = getelementptr inbounds i8, i8* %617, i64 16
  %623 = bitcast i8* %622 to %"class.blink::Resource"**
  store %"class.blink::Resource"* null, %"class.blink::Resource"** %623, align 8
  %624 = getelementptr inbounds i8, i8* %617, i64 24
  store i8 0, i8* %624, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink30InspectorResourceContentLoader14ResourceClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %619, align 8
  %625 = getelementptr inbounds i8, i8* %617, i64 32
  %626 = bitcast i8* %625 to i64*
  store i64 %85, i64* %626, align 8
  %627 = getelementptr inbounds i8, i8* %617, i64 -4
  %628 = bitcast i8* %627 to i16*
  %629 = load atomic i16, i16* %628 monotonic, align 2
  %630 = or i16 %629, 1
  store atomic i16 %630, i16* %628 release, align 2
  store i8* %617, i8** %129, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #10
  %631 = bitcast i8* %617 to %"class.blink::RawResourceClient"*
  %632 = call %"class.blink::RawResource"* @_ZN5blink11RawResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_17RawResourceClientE(%"class.blink::FetchParameters"* nonnull dereferenceable(1344) %29, %"class.blink::ResourceFetcher"* %202, %"class.blink::RawResourceClient"* %631) #10
  store %"class.blink::RawResource"* %632, %"class.blink::RawResource"** %32, align 8
  %633 = load i32, i32* %89, align 4
  %634 = load i32, i32* %90, align 8
  %635 = icmp eq i32 %633, %634
  br i1 %635, label %650, label %636, !prof !3

636:                                              ; preds = %616
  %637 = ptrtoint %"class.blink::RawResource"* %632 to i64
  %638 = load %"class.blink::Member.11"*, %"class.blink::Member.11"** %91, align 8
  %639 = zext i32 %633 to i64
  %640 = getelementptr inbounds %"class.blink::Member.11", %"class.blink::Member.11"* %638, i64 %639
  %641 = bitcast %"class.blink::Member.11"* %640 to i64*
  store atomic i64 %637, i64* %641 monotonic, align 8
  %642 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %643 = icmp eq i32 %642, 0
  br i1 %643, label %647, label %644

644:                                              ; preds = %636
  %645 = bitcast %"class.blink::RawResource"* %632 to i8*
  %646 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %645) #10
  br label %647

647:                                              ; preds = %644, %636
  %648 = load i32, i32* %89, align 4
  %649 = add i32 %648, 1
  store i32 %649, i32* %89, align 4
  br label %651

650:                                              ; preds = %616
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_11RawResourceEEEvOT_(%"class.WTF::Vector.387"* %87, %"class.blink::RawResource"** nonnull dereferenceable(8) %32) #10
  br label %651

651:                                              ; preds = %647, %650
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #10
  %652 = load %"class.blink::ResourceClient"*, %"class.blink::ResourceClient"** %131, align 8
  %653 = getelementptr inbounds %"class.blink::ResourceClient", %"class.blink::ResourceClient"* %652, i64 0, i32 3, i32 0, i32 0
  %654 = load %"class.blink::Resource"*, %"class.blink::Resource"** %653, align 8
  %655 = icmp eq %"class.blink::Resource"* %654, null
  br i1 %655, label %658, label %656

656:                                              ; preds = %651
  %657 = call { %"class.blink::Member.7"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_30InspectorResourceContentLoader14ResourceClientEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS4_RSG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_(%"class.WTF::HashTable.5"* %92, %"class.blink::InspectorResourceContentLoader::ResourceClient"** nonnull dereferenceable(8) %31, %"class.blink::InspectorResourceContentLoader::ResourceClient"** nonnull dereferenceable(8) %31) #10
  br label %658

658:                                              ; preds = %651, %656
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #10
  call void @_ZN5blink15FetchParametersD1Ev(%"class.blink::FetchParameters"* nonnull %29) #10
  call void @llvm.lifetime.end.p0i8(i64 1344, i8* nonnull %127) #10
  call void @_ZN5blink21ResourceLoaderOptionsD1Ev(%"struct.blink::ResourceLoaderOptions"* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %124) #10
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %27) #10
  call void @llvm.lifetime.end.p0i8(i64 1032, i8* nonnull %120) #10
  br label %659

659:                                              ; preds = %502, %504, %658, %506
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %24) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %109) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #10
  %660 = icmp eq %"class.blink::DOMWrapperWorld"* %204, null
  br i1 %660, label %668, label %661

661:                                              ; preds = %659
  %662 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %204, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %662) #10
  %663 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %204, i64 0, i32 0, i32 0, i32 0, i32 0
  %664 = load i32, i32* %663, align 4
  %665 = icmp eq i32 %664, 0
  br i1 %665, label %666, label %668

666:                                              ; preds = %661
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %204) #10
  %667 = bitcast %"class.blink::DOMWrapperWorld"* %204 to i8*
  call void @free(i8* %667) #10
  br label %668

668:                                              ; preds = %659, %661, %666
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 1032, i8* nonnull %72) #10
  %669 = load %"class.WTF::String"*, %"class.WTF::String"** %70, align 8
  %670 = icmp eq %"class.WTF::String"* %669, null
  br i1 %670, label %702, label %671, !prof !4

671:                                              ; preds = %668
  %672 = load i32, i32* %71, align 8
  %673 = icmp eq i32 %672, 0
  br i1 %673, label %700, label %674

674:                                              ; preds = %671
  %675 = zext i32 %672 to i64
  br label %676

676:                                              ; preds = %697, %674
  %677 = phi i64 [ 0, %674 ], [ %698, %697 ]
  %678 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %669, i64 %677
  %679 = bitcast %"class.WTF::String"* %678 to i8**
  %680 = load i8*, i8** %679, align 8
  %681 = bitcast i8* %680 to %"class.WTF::StringImpl"*
  %682 = ptrtoint i8* %680 to i64
  switch i64 %682, label %683 [
    i64 -1, label %697
    i64 0, label %697
  ]

683:                                              ; preds = %676
  %684 = getelementptr inbounds i8, i8* %680, i64 8
  %685 = bitcast i8* %684 to i32*
  %686 = load atomic i32, i32* %685 monotonic, align 4
  %687 = and i32 %686, 2
  %688 = icmp eq i32 %687, 0
  %689 = bitcast i8* %680 to i32*
  %690 = load i32, i32* %689, align 4
  br i1 %688, label %691, label %693

691:                                              ; preds = %683
  %692 = add i32 %690, -1
  store i32 %692, i32* %689, align 4
  br label %693

693:                                              ; preds = %691, %683
  %694 = phi i32 [ %692, %691 ], [ %690, %683 ]
  %695 = icmp eq i32 %694, 0
  br i1 %695, label %696, label %697

696:                                              ; preds = %693
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %681) #10
  br label %697

697:                                              ; preds = %696, %693, %676, %676
  %698 = add nuw nsw i64 %677, 1
  %699 = icmp eq i64 %698, %675
  br i1 %699, label %700, label %676

700:                                              ; preds = %697, %671
  %701 = bitcast %"class.WTF::String"* %669 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %701) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %70, align 8
  br label %702

702:                                              ; preds = %668, %700
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #10
  %703 = getelementptr inbounds %"class.blink::Member.1193", %"class.blink::Member.1193"* %166, i64 1
  %704 = icmp eq %"class.blink::Member.1193"* %703, %66
  br i1 %704, label %163, label %165
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } @_ZN5blink15InspectedFrames5beginEv(%"class.blink::InspectedFrames"*) local_unnamed_addr #2

declare { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } @_ZN5blink15InspectedFrames3endEv(%"class.blink::InspectedFrames"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink15InspectedFrames8IteratorneERKS1_(%"class.blink::InspectedFrames::Iterator"*, %"class.blink::InspectedFrames::Iterator"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(16) %"class.blink::InspectedFrames::Iterator"* @_ZN5blink15InspectedFrames8IteratorppEv(%"class.blink::InspectedFrames::Iterator"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink15ResourceRequestC1Ev(%"class.blink::ResourceRequest"*) unnamed_addr #2

declare %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"*) local_unnamed_addr #2

declare void @_ZN5blink11HistoryItem23GenerateResourceRequestENS_5mojom14FetchCacheModeE(%"class.blink::ResourceRequest"* sret, %"class.blink::HistoryItem"*, i32) local_unnamed_addr #2

declare dereferenceable(1032) %"class.blink::ResourceRequest"* @_ZN5blink15ResourceRequestaSEOS0_(%"class.blink::ResourceRequest"*, %"class.blink::ResourceRequest"* dereferenceable(1032)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"*) unnamed_addr #3

declare void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

declare void @_ZN5blink19ResourceRequestHead12SetCacheModeENS_5mojom14FetchCacheModeE(%"class.blink::ResourceRequestHead"*, i32) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #2

declare %"class.blink::DOMWrapperWorld"* @_ZNK5blink16ExecutionContext15GetCurrentWorldEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"*) local_unnamed_addr #2

declare void @_ZN5blink21ResourceLoaderOptionsC1E13scoped_refptrIKNS_15DOMWrapperWorldEE(%"struct.blink::ResourceLoaderOptions"*, %"class.blink::DOMWrapperWorld"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5blink15ResourceRequestC1EOS0_(%"class.blink::ResourceRequest"*, %"class.blink::ResourceRequest"* dereferenceable(1032)) unnamed_addr #2

declare void @_ZN5blink15FetchParametersC1ENS_15ResourceRequestERKNS_21ResourceLoaderOptionsE(%"class.blink::FetchParameters"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"* dereferenceable(112)) unnamed_addr #2

declare %"class.blink::RawResource"* @_ZN5blink11RawResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_17RawResourceClientE(%"class.blink::FetchParameters"* dereferenceable(1344), %"class.blink::ResourceFetcher"*, %"class.blink::RawResourceClient"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15FetchParametersD1Ev(%"class.blink::FetchParameters"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink21ResourceLoaderOptionsD1Ev(%"struct.blink::ResourceLoaderOptions"*) unnamed_addr #3

declare void @_ZN5blink17InspectorCSSAgent29CollectAllDocumentStyleSheetsEPNS_8DocumentERNS_10HeapVectorINS_6MemberINS_13CSSStyleSheetEEELj0EEE(%"class.blink::Document"*, %"class.blink::HeapVector.1243"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink18StyleSheetContents13LoadCompletedEv(%"class.blink::StyleSheetContents"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink13CSSStyleSheet4hrefEv(%"class.blink::CSSStyleSheet"*) unnamed_addr #2

declare void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

declare void @_ZN5blink15ResourceRequestC1ERKN3WTF6StringE(%"class.blink::ResourceRequest"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare %"class.blink::CSSStyleSheetResource"* @_ZN5blink21CSSStyleSheetResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_14ResourceClientE(%"class.blink::FetchParameters"* dereferenceable(1344), %"class.blink::ResourceFetcher"*, %"class.blink::ResourceClient"*) local_unnamed_addr #2

declare %"class.blink::HTMLLinkElement"* @_ZNK5blink8Document12LinkManifestEv(%"class.blink::Document"*) local_unnamed_addr #2

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #2

declare void @_ZNK5blink15HTMLLinkElement4HrefEv(%"class.blink::KURL"* sret, %"class.blink::HTMLLinkElement"*) local_unnamed_addr #2

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm16EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [16 x i8]* dereferenceable(16)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 15
  br i1 %5, label %6, label %65

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %65

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %67, label %65

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  br label %47

45:                                               ; preds = %47
  %46 = icmp eq i64 %64, 15
  br i1 %46, label %65, label %249

47:                                               ; preds = %265, %42
  %48 = phi i64 [ 0, %42 ], [ %266, %265 ]
  %49 = getelementptr inbounds i16, i16* %44, i64 %48
  %50 = load i16, i16* %49, align 2
  %51 = add i16 %50, -65
  %52 = icmp ult i16 %51, 26
  %53 = zext i1 %52 to i16
  %54 = shl nuw nsw i16 %53, 5
  %55 = or i16 %54, %50
  %56 = zext i16 %55 to i32
  %57 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 %48
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i64
  %60 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = sext i8 %61 to i32
  %63 = icmp eq i32 %56, %62
  %64 = or i64 %48, 1
  br i1 %63, label %45, label %65

65:                                               ; preds = %47, %45, %249, %14, %28, %67, %81, %95, %109, %123, %137, %151, %165, %179, %193, %207, %221, %2
  %66 = phi i1 [ false, %2 ], [ false, %14 ], [ false, %28 ], [ false, %67 ], [ false, %81 ], [ false, %95 ], [ false, %109 ], [ false, %123 ], [ false, %137 ], [ false, %151 ], [ false, %165 ], [ false, %179 ], [ false, %193 ], [ false, %207 ], [ false, %221 ], [ false, %47 ], [ true, %45 ], [ false, %249 ]
  ret i1 %66

67:                                               ; preds = %28
  %68 = getelementptr inbounds i8, i8* %15, i64 2
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 2
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i64
  %77 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %76
  %78 = load i8, i8* %77, align 1
  %79 = sext i8 %78 to i32
  %80 = icmp eq i32 %73, %79
  br i1 %80, label %81, label %65

81:                                               ; preds = %67
  %82 = getelementptr inbounds i8, i8* %15, i64 3
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i64
  %85 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 3
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i64
  %91 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %90
  %92 = load i8, i8* %91, align 1
  %93 = sext i8 %92 to i32
  %94 = icmp eq i32 %87, %93
  br i1 %94, label %95, label %65

95:                                               ; preds = %81
  %96 = getelementptr inbounds i8, i8* %15, i64 4
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i64
  %99 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 4
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %65

109:                                              ; preds = %95
  %110 = getelementptr inbounds i8, i8* %15, i64 5
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 5
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %115, %121
  br i1 %122, label %123, label %65

123:                                              ; preds = %109
  %124 = getelementptr inbounds i8, i8* %15, i64 6
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 6
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i32
  %136 = icmp eq i32 %129, %135
  br i1 %136, label %137, label %65

137:                                              ; preds = %123
  %138 = getelementptr inbounds i8, i8* %15, i64 7
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i64
  %141 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %140
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 7
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i64
  %147 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %146
  %148 = load i8, i8* %147, align 1
  %149 = sext i8 %148 to i32
  %150 = icmp eq i32 %143, %149
  br i1 %150, label %151, label %65

151:                                              ; preds = %137
  %152 = getelementptr inbounds i8, i8* %15, i64 8
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i64
  %155 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %154
  %156 = load i8, i8* %155, align 1
  %157 = zext i8 %156 to i32
  %158 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 8
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i64
  %161 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = sext i8 %162 to i32
  %164 = icmp eq i32 %157, %163
  br i1 %164, label %165, label %65

165:                                              ; preds = %151
  %166 = getelementptr inbounds i8, i8* %15, i64 9
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i32
  %172 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 9
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i64
  %175 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %174
  %176 = load i8, i8* %175, align 1
  %177 = sext i8 %176 to i32
  %178 = icmp eq i32 %171, %177
  br i1 %178, label %179, label %65

179:                                              ; preds = %165
  %180 = getelementptr inbounds i8, i8* %15, i64 10
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i64
  %183 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = zext i8 %184 to i32
  %186 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 10
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i64
  %189 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %188
  %190 = load i8, i8* %189, align 1
  %191 = sext i8 %190 to i32
  %192 = icmp eq i32 %185, %191
  br i1 %192, label %193, label %65

193:                                              ; preds = %179
  %194 = getelementptr inbounds i8, i8* %15, i64 11
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i64
  %197 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = zext i8 %198 to i32
  %200 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 11
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i64
  %203 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %202
  %204 = load i8, i8* %203, align 1
  %205 = sext i8 %204 to i32
  %206 = icmp eq i32 %199, %205
  br i1 %206, label %207, label %65

207:                                              ; preds = %193
  %208 = getelementptr inbounds i8, i8* %15, i64 12
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i64
  %211 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %210
  %212 = load i8, i8* %211, align 1
  %213 = zext i8 %212 to i32
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 12
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i64
  %217 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %216
  %218 = load i8, i8* %217, align 1
  %219 = sext i8 %218 to i32
  %220 = icmp eq i32 %213, %219
  br i1 %220, label %221, label %65

221:                                              ; preds = %207
  %222 = getelementptr inbounds i8, i8* %15, i64 13
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i64
  %225 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %224
  %226 = load i8, i8* %225, align 1
  %227 = zext i8 %226 to i32
  %228 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 13
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i64
  %231 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %230
  %232 = load i8, i8* %231, align 1
  %233 = sext i8 %232 to i32
  %234 = icmp eq i32 %227, %233
  br i1 %234, label %235, label %65

235:                                              ; preds = %221
  %236 = getelementptr inbounds i8, i8* %15, i64 14
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i64
  %239 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = zext i8 %240 to i32
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 14
  %243 = load i8, i8* %242, align 1
  %244 = zext i8 %243 to i64
  %245 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %244
  %246 = load i8, i8* %245, align 1
  %247 = sext i8 %246 to i32
  %248 = icmp eq i32 %241, %247
  ret i1 %248

249:                                              ; preds = %45
  %250 = getelementptr inbounds i16, i16* %44, i64 %64
  %251 = load i16, i16* %250, align 2
  %252 = add i16 %251, -65
  %253 = icmp ult i16 %252, 26
  %254 = zext i1 %253 to i16
  %255 = shl nuw nsw i16 %254, 5
  %256 = or i16 %255, %251
  %257 = zext i16 %256 to i32
  %258 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 %64
  %259 = load i8, i8* %258, align 1
  %260 = zext i8 %259 to i64
  %261 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %260
  %262 = load i8, i8* %261, align 1
  %263 = sext i8 %262 to i32
  %264 = icmp eq i32 %257, %263
  br i1 %264, label %265, label %65

265:                                              ; preds = %249
  %266 = add nuw nsw i64 %48, 2
  br label %47
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30InspectorResourceContentLoader9CheckDoneEv(%"class.blink::InspectorResourceContentLoader"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %113, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %113

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::InspectorResourceContentLoader"* %0 to i64*
  %12 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 0, i32 0, i32 0
  %13 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %12, align 8
  store atomic i64 0, i64* %11 monotonic, align 8
  %14 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  store i32 0, i32* %14, align 4
  %16 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  store i32 0, i32* %16, align 4
  %18 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 0, i32 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, -2147483648
  store i32 %20, i32* %18, align 8
  %21 = icmp eq i32 %17, 0
  %22 = zext i32 %15 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %22
  br i1 %21, label %42, label %24

24:                                               ; preds = %10
  %25 = icmp eq i32 %15, 0
  br i1 %25, label %35, label %26

26:                                               ; preds = %24, %32
  %27 = phi %"struct.WTF::KeyValuePair"* [ %33, %32 ], [ %13, %24 ]
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = add i32 %29, 1
  %31 = icmp ult i32 %30, 2
  br i1 %31, label %32, label %35

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %27, i64 1
  %34 = icmp eq %"struct.WTF::KeyValuePair"* %33, %23
  br i1 %34, label %42, label %26

35:                                               ; preds = %26, %24
  %36 = phi %"struct.WTF::KeyValuePair"* [ %13, %24 ], [ %27, %26 ]
  %37 = icmp eq %"struct.WTF::KeyValuePair"* %36, %23
  br i1 %37, label %42, label %38

38:                                               ; preds = %35
  %39 = bitcast %"class.base::OnceCallback"* %2 to i8*
  %40 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %41 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  br label %79

42:                                               ; preds = %32, %88, %100, %97, %10, %35
  %43 = icmp eq %"struct.WTF::KeyValuePair"* %13, null
  br i1 %43, label %113, label %44, !prof !4

44:                                               ; preds = %42
  %45 = icmp eq i32 %15, 0
  br i1 %45, label %77, label %46

46:                                               ; preds = %44, %74
  %47 = phi i64 [ %75, %74 ], [ 0, %44 ]
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %47, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %74, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %47, i32 1
  %53 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %53, align 8
  %55 = icmp eq %"class.base::OnceCallback"* %54, null
  br i1 %55, label %74, label %56, !prof !4

56:                                               ; preds = %51
  %57 = bitcast %"class.base::OnceCallback"* %54 to i8*
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %47, i32 1, i32 0, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %72, label %61, !prof !3

61:                                               ; preds = %56
  %62 = zext i32 %59 to i64
  %63 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %54, i64 %62
  br label %64

64:                                               ; preds = %64, %61
  %65 = phi %"class.base::OnceCallback"* [ %67, %64 ], [ %54, %61 ]
  %66 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %65, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %66) #10
  %67 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %65, i64 1
  %68 = icmp eq %"class.base::OnceCallback"* %67, %63
  br i1 %68, label %69, label %64

69:                                               ; preds = %64
  store i32 0, i32* %58, align 4
  %70 = bitcast %"class.WTF::Vector"* %52 to i8**
  %71 = load i8*, i8** %70, align 8
  br label %72

72:                                               ; preds = %69, %56
  %73 = phi i8* [ %71, %69 ], [ %57, %56 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %73) #10
  store %"class.base::OnceCallback"* null, %"class.base::OnceCallback"** %53, align 8
  br label %74

74:                                               ; preds = %72, %51, %46
  %75 = add nuw nsw i64 %47, 1
  %76 = icmp eq i64 %75, %22
  br i1 %76, label %77, label %46

77:                                               ; preds = %74, %44
  %78 = bitcast %"struct.WTF::KeyValuePair"* %13 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %78) #10
  br label %113

79:                                               ; preds = %38, %100
  %80 = phi %"struct.WTF::KeyValuePair"* [ %36, %38 ], [ %92, %100 ]
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %80, i64 0, i32 1, i32 0, i32 0, i32 0
  %82 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %81, align 8
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %80, i64 0, i32 1, i32 0, i32 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %82, i64 %85
  %87 = icmp eq i32 %84, 0
  br i1 %87, label %88, label %102

88:                                               ; preds = %102, %79
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %80, i64 1
  %90 = icmp eq %"struct.WTF::KeyValuePair"* %89, %23
  br i1 %90, label %42, label %91

91:                                               ; preds = %88, %97
  %92 = phi %"struct.WTF::KeyValuePair"* [ %98, %97 ], [ %89, %88 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %92, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, 1
  %96 = icmp ult i32 %95, 2
  br i1 %96, label %97, label %100

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %92, i64 1
  %99 = icmp eq %"struct.WTF::KeyValuePair"* %98, %23
  br i1 %99, label %42, label %91

100:                                              ; preds = %91
  %101 = icmp eq %"struct.WTF::KeyValuePair"* %92, %23
  br i1 %101, label %42, label %79

102:                                              ; preds = %79, %102
  %103 = phi %"class.base::OnceCallback"* [ %111, %102 ], [ %82, %79 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  %104 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %103, i64 0, i32 0, i32 0, i32 0
  %105 = bitcast %"class.base::OnceCallback"* %103 to i64*
  %106 = load i64, i64* %105, align 8
  store i64 %106, i64* %40, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %104, align 8
  %107 = inttoptr i64 %106 to %"class.base::internal::BindStateBase"*
  %108 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %107, i64 0, i32 1
  %109 = bitcast void ()** %108 to void (%"class.base::internal::BindStateBase"*)**
  %110 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %109, align 8
  call void %110(%"class.base::internal::BindStateBase"* %107) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  %111 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %103, i64 1
  %112 = icmp eq %"class.base::OnceCallback"* %111, %86
  br i1 %112, label %88, label %102

113:                                              ; preds = %1, %77, %42, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN5blink30InspectorResourceContentLoader14CreateClientIdEv(%"class.blink::InspectorResourceContentLoader"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 8
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30InspectorResourceContentLoader28EnsureResourcesContentLoadedEiN4base12OnceCallbackIFvvEEE(%"class.blink::InspectorResourceContentLoader"*, i32, %"class.base::OnceCallback"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.WTF::Vector", align 8
  store i32 %1, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 2
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  tail call void @_ZN5blink30InspectorResourceContentLoader5StartEv(%"class.blink::InspectorResourceContentLoader"* %0)
  br label %10

10:                                               ; preds = %3, %9
  %11 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #10
  %12 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 0, i32 0
  %13 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNS_6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSE_IS8_EEEESF_S7_E6insertINS_17HashMapTranslatorISH_SC_S7_EERiS8_EENS_18HashTableAddResultISI_S9_EEOT0_OT1_(%"class.WTF::HashTable"* %12, i32* nonnull dereferenceable(4) %4, %"class.WTF::Vector"* nonnull dereferenceable(16) %5) #10
  %14 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %13, 0
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 0, i32 1, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 0, i32 1, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %32, label %21, !prof !3

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %15, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %22, align 8
  %24 = zext i32 %17 to i64
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %23, i64 %24
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.base::OnceCallback"* %25 to i64*
  store i64 %28, i64* %29, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %26, align 8
  %30 = load i32, i32* %16, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %16, align 4
  br label %33

32:                                               ; preds = %10
  call void @_ZN3WTF6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector"* %15, %"class.base::OnceCallback"* dereferenceable(8) %2) #10
  br label %33

33:                                               ; preds = %21, %32
  %34 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %34, align 8
  %36 = icmp eq %"class.base::OnceCallback"* %35, null
  br i1 %36, label %55, label %37, !prof !4

37:                                               ; preds = %33
  %38 = bitcast %"class.base::OnceCallback"* %35 to i8*
  %39 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %53, label %42, !prof !3

42:                                               ; preds = %37
  %43 = zext i32 %40 to i64
  %44 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %35, i64 %43
  br label %45

45:                                               ; preds = %45, %42
  %46 = phi %"class.base::OnceCallback"* [ %48, %45 ], [ %35, %42 ]
  %47 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %46, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %47) #10
  %48 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %46, i64 1
  %49 = icmp eq %"class.base::OnceCallback"* %48, %44
  br i1 %49, label %50, label %45

50:                                               ; preds = %45
  store i32 0, i32* %39, align 4
  %51 = bitcast %"class.WTF::Vector"* %5 to i8**
  %52 = load i8*, i8** %51, align 8
  br label %53

53:                                               ; preds = %50, %37
  %54 = phi i8* [ %52, %50 ], [ %38, %37 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %54) #10
  store %"class.base::OnceCallback"* null, %"class.base::OnceCallback"** %34, align 8
  br label %55

55:                                               ; preds = %33, %53
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #10
  call void @_ZN5blink30InspectorResourceContentLoader9CheckDoneEv(%"class.blink::InspectorResourceContentLoader"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30InspectorResourceContentLoader6CancelEi(%"class.blink::InspectorResourceContentLoader"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  %6 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %63, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = shl i32 %1, 15
  %12 = xor i32 %11, -1
  %13 = add i32 %12, %1
  %14 = lshr i32 %13, 10
  %15 = xor i32 %14, %13
  %16 = mul i32 %15, 9
  %17 = lshr i32 %16, 6
  %18 = xor i32 %17, %16
  %19 = shl i32 %18, 11
  %20 = xor i32 %19, -1
  %21 = add i32 %18, %20
  %22 = lshr i32 %21, 16
  %23 = xor i32 %22, %21
  %24 = and i32 %9, %23
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %25
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, %1
  br i1 %29, label %58, label %30

30:                                               ; preds = %8
  %31 = xor i32 %23, -1
  %32 = lshr i32 %21, 23
  %33 = add i32 %32, %31
  %34 = shl i32 %33, 12
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 7
  %37 = xor i32 %36, %35
  %38 = shl i32 %37, 2
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 20
  %41 = xor i32 %40, %39
  %42 = or i32 %41, 1
  %43 = zext i32 %42 to i64
  br label %44

44:                                               ; preds = %49, %30
  %45 = phi i32 [ %28, %30 ], [ %56, %49 ]
  %46 = phi i64 [ %25, %30 ], [ %53, %49 ]
  %47 = phi i64 [ 0, %30 ], [ %51, %49 ]
  %48 = icmp eq i32 %45, 0
  br i1 %48, label %63, label %49

49:                                               ; preds = %44
  %50 = icmp eq i64 %47, 0
  %51 = select i1 %50, i64 %43, i64 %47
  %52 = add i64 %51, %46
  %53 = and i64 %52, %10
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %53
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %54, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, %1
  br i1 %57, label %58, label %44

58:                                               ; preds = %49, %8
  %59 = phi %"struct.WTF::KeyValuePair"* [ %26, %8 ], [ %54, %49 ]
  %60 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %58
  %62 = zext i32 %7 to i64
  br label %66

63:                                               ; preds = %44, %58, %2
  %64 = zext i32 %7 to i64
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %64
  br label %66

66:                                               ; preds = %63, %61
  %67 = phi i64 [ %62, %61 ], [ %64, %63 ]
  %68 = phi %"struct.WTF::KeyValuePair"* [ %59, %61 ], [ %65, %63 ]
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %67
  %70 = icmp eq %"struct.WTF::KeyValuePair"* %69, %68
  br i1 %70, label %73, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNS_6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSE_IS8_EEEESF_S7_E5eraseEPKS9_(%"class.WTF::HashTable"* %72, %"struct.WTF::KeyValuePair"* %68) #10
  br label %73

73:                                               ; preds = %66, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30InspectorResourceContentLoaderD2Ev(%"class.blink::InspectorResourceContentLoader"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair"* %3, null
  br i1 %4, label %44, label %5, !prof !4

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %42, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %39, %9
  %12 = phi i64 [ 0, %9 ], [ %40, %39 ]
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %12, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %39, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %12, i32 1
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %18, align 8
  %20 = icmp eq %"class.base::OnceCallback"* %19, null
  br i1 %20, label %39, label %21, !prof !4

21:                                               ; preds = %16
  %22 = bitcast %"class.base::OnceCallback"* %19 to i8*
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %12, i32 1, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %37, label %26, !prof !3

26:                                               ; preds = %21
  %27 = zext i32 %24 to i64
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %19, i64 %27
  br label %29

29:                                               ; preds = %29, %26
  %30 = phi %"class.base::OnceCallback"* [ %32, %29 ], [ %19, %26 ]
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %30, i64 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %31) #10
  %32 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %30, i64 1
  %33 = icmp eq %"class.base::OnceCallback"* %32, %28
  br i1 %33, label %34, label %29

34:                                               ; preds = %29
  store i32 0, i32* %23, align 4
  %35 = bitcast %"class.WTF::Vector"* %17 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %21
  %38 = phi i8* [ %36, %34 ], [ %22, %21 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %38) #10
  store %"class.base::OnceCallback"* null, %"class.base::OnceCallback"** %18, align 8
  br label %39

39:                                               ; preds = %37, %16, %11
  %40 = add nuw nsw i64 %12, 1
  %41 = icmp eq i64 %40, %10
  br i1 %41, label %42, label %11

42:                                               ; preds = %39, %5
  %43 = bitcast %"struct.WTF::KeyValuePair"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %43) #10
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %2, align 8
  br label %44

44:                                               ; preds = %1, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink30InspectorResourceContentLoader5TraceEPNS_7VisitorE(%"class.blink::InspectorResourceContentLoader"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 4
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10LocalFrameEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 5
  %15 = bitcast %"class.blink::HeapHashSet"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = bitcast %"class.blink::HeapHashSet"* %14 to i8**
  %18 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %19 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %19, i64 11
  %21 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %20, align 8
  tail call void %21(%"class.blink::Visitor"* %1, i8** %17) #10
  %22 = icmp eq i64 %16, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %13
  %24 = inttoptr i64 %16 to i8*
  %25 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %1, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_30InspectorResourceContentLoader14ResourceClientEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #10
  br label %29

29:                                               ; preds = %13, %23
  %30 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 6
  %31 = bitcast %"class.blink::HeapVector"* %30 to i64*
  %32 = load atomic i64, i64* %31 monotonic, align 8
  %33 = icmp eq i64 %32, 0
  %34 = bitcast %"class.blink::HeapVector"* %30 to i8**
  %35 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %18, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %35, i64 11
  %37 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %1, i8** %34) #10
  br i1 %33, label %44, label %38

38:                                               ; preds = %29
  %39 = inttoptr i64 %32 to i8*
  %40 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %41 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, i64 5
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, align 8
  tail call void %43(%"class.blink::Visitor"* %1, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %44

44:                                               ; preds = %29, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30InspectorResourceContentLoader26DidCommitLoadForLocalFrameEPNS_10LocalFrameE(%"class.blink::InspectorResourceContentLoader"* nocapture, %"class.blink::LocalFrame"* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %3, align 8
  %5 = icmp eq %"class.blink::LocalFrame"* %4, %1
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @_ZN5blink30InspectorResourceContentLoader4StopEv(%"class.blink::InspectorResourceContentLoader"* %0)
  br label %7

7:                                                ; preds = %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30InspectorResourceContentLoader4StopEv(%"class.blink::InspectorResourceContentLoader"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 5, i32 0
  %3 = bitcast %"class.WTF::HashSet"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  store atomic i64 0, i64* %3 monotonic, align 8
  %5 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #10
  br label %9

9:                                                ; preds = %7, %1
  %10 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = inttoptr i64 %4 to i8*
  %14 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %13) #10
  br label %15

15:                                               ; preds = %9, %12
  %16 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  store i32 0, i32* %16, align 4
  %18 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  store i32 0, i32* %18, align 4
  %20 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 5, i32 0, i32 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, -2147483648
  store i32 %22, i32* %20, align 8
  %23 = icmp eq i32 %19, 0
  %24 = inttoptr i64 %4 to %"class.blink::Member.7"*
  %25 = zext i32 %17 to i64
  %26 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %24, i64 %25
  br i1 %23, label %39, label %27

27:                                               ; preds = %15
  %28 = icmp eq i32 %17, 0
  br i1 %28, label %36, label %29

29:                                               ; preds = %27, %33
  %30 = phi %"class.blink::Member.7"* [ %34, %33 ], [ %24, %27 ]
  %31 = bitcast %"class.blink::Member.7"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  switch i64 %32, label %36 [
    i64 -1, label %33
    i64 0, label %33
  ]

33:                                               ; preds = %29, %29
  %34 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %30, i64 1
  %35 = icmp eq %"class.blink::Member.7"* %34, %26
  br i1 %35, label %39, label %29

36:                                               ; preds = %29, %27
  %37 = phi %"class.blink::Member.7"* [ %24, %27 ], [ %30, %29 ]
  %38 = icmp eq %"class.blink::Member.7"* %37, %26
  br i1 %38, label %39, label %59

39:                                               ; preds = %33, %59, %74, %71, %15, %36
  %40 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 6, i32 0
  %41 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %56, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  %48 = bitcast %"class.WTF::Vector.387"* %40 to i8**
  br i1 %47, label %53, label %49

49:                                               ; preds = %44
  %50 = load i8*, i8** %48, align 8
  %51 = zext i32 %46 to i64
  %52 = shl nuw nsw i64 %51, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %50, i64 %52) #10
  store i32 0, i32* %45, align 4
  br label %53

53:                                               ; preds = %49, %44
  %54 = load i8*, i8** %48, align 8
  %55 = bitcast %"class.WTF::Vector.387"* %40 to i64*
  store atomic i64 0, i64* %55 monotonic, align 8
  store i32 0, i32* %41, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %54) #10
  br label %56

56:                                               ; preds = %39, %53
  tail call void @_ZN5blink30InspectorResourceContentLoader9CheckDoneEv(%"class.blink::InspectorResourceContentLoader"* %0)
  %57 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 1
  store i8 0, i8* %57, align 8
  %58 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 2
  store i8 0, i8* %58, align 1
  ret void

59:                                               ; preds = %36, %74
  %60 = phi %"class.blink::Member.7"* [ %68, %74 ], [ %37, %36 ]
  %61 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.blink::InspectorResourceContentLoader::ResourceClient"*, %"class.blink::InspectorResourceContentLoader::ResourceClient"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader::ResourceClient", %"class.blink::InspectorResourceContentLoader::ResourceClient"* %62, i64 0, i32 1
  %64 = bitcast %"class.blink::Member.383"* %63 to i64*
  store atomic i64 0, i64* %64 monotonic, align 8
  %65 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %60, i64 1
  %66 = icmp eq %"class.blink::Member.7"* %65, %26
  br i1 %66, label %39, label %67

67:                                               ; preds = %59, %71
  %68 = phi %"class.blink::Member.7"* [ %72, %71 ], [ %65, %59 ]
  %69 = bitcast %"class.blink::Member.7"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  switch i64 %70, label %74 [
    i64 -1, label %71
    i64 0, label %71
  ]

71:                                               ; preds = %67, %67
  %72 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %68, i64 1
  %73 = icmp eq %"class.blink::Member.7"* %72, %26
  br i1 %73, label %39, label %67

74:                                               ; preds = %67
  %75 = icmp eq %"class.blink::Member.7"* %68, %26
  br i1 %75, label %39, label %59
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Resource"* @_ZN5blink30InspectorResourceContentLoader14ResourceForURLERKNS_4KURLE(%"class.blink::InspectorResourceContentLoader"* nocapture readonly, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Member.11"*, %"class.blink::Member.11"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.blink::Member.11", %"class.blink::Member.11"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %23, label %12

10:                                               ; preds = %12
  %11 = icmp eq %"class.blink::Member.11"* %19, %8
  br i1 %11, label %23, label %12

12:                                               ; preds = %2, %10
  %13 = phi %"class.blink::Member.11"* [ %19, %10 ], [ %4, %2 ]
  %14 = getelementptr inbounds %"class.blink::Member.11", %"class.blink::Member.11"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.blink::Resource"*, %"class.blink::Resource"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %15, i64 0, i32 26
  %17 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %16) #10
  %18 = tail call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %17, %"class.blink::KURL"* dereferenceable(112) %1) #10
  %19 = getelementptr inbounds %"class.blink::Member.11", %"class.blink::Member.11"* %13, i64 1
  br i1 %18, label %20, label %10

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.blink::Member.11", %"class.blink::Member.11"* %13, i64 0, i32 0, i32 0
  %22 = load %"class.blink::Resource"*, %"class.blink::Resource"** %21, align 8
  br label %23

23:                                               ; preds = %10, %2, %20
  %24 = phi %"class.blink::Resource"* [ %22, %20 ], [ null, %2 ], [ null, %10 ]
  ret %"class.blink::Resource"* %24
}

declare zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30InspectorResourceContentLoader7DisposeEv(%"class.blink::InspectorResourceContentLoader"* nocapture) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink30InspectorResourceContentLoader4StopEv(%"class.blink::InspectorResourceContentLoader"* %0)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink30InspectorResourceContentLoader11HasFinishedEv(%"class.blink::InspectorResourceContentLoader"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30InspectorResourceContentLoader16ResourceFinishedEPNS0_14ResourceClientE(%"class.blink::InspectorResourceContentLoader"*, %"class.blink::InspectorResourceContentLoader::ResourceClient"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 5, i32 0
  %4 = ptrtoint %"class.blink::InspectorResourceContentLoader::ResourceClient"* %1 to i64
  %5 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0, i32 0
  %6 = load %"class.blink::Member.7"*, %"class.blink::Member.7"** %5, align 8
  %7 = icmp eq %"class.blink::Member.7"* %6, null
  %8 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader", %"class.blink::InspectorResourceContentLoader"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  br i1 %7, label %71, label %10

10:                                               ; preds = %2
  %11 = add i32 %9, -1
  %12 = zext i32 %11 to i64
  %13 = shl i64 %4, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %14, %4
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %11, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %6, i64 %33
  %35 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.blink::InspectorResourceContentLoader::ResourceClient"*, %"class.blink::InspectorResourceContentLoader::ResourceClient"** %35, align 8
  %37 = icmp eq %"class.blink::InspectorResourceContentLoader::ResourceClient"* %36, %1
  br i1 %37, label %66, label %38

38:                                               ; preds = %10
  %39 = xor i32 %31, -1
  %40 = lshr i32 %31, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %57, %38
  %53 = phi %"class.blink::InspectorResourceContentLoader::ResourceClient"* [ %36, %38 ], [ %64, %57 ]
  %54 = phi i64 [ %33, %38 ], [ %61, %57 ]
  %55 = phi i64 [ 0, %38 ], [ %59, %57 ]
  %56 = icmp eq %"class.blink::InspectorResourceContentLoader::ResourceClient"* %53, null
  br i1 %56, label %71, label %57

57:                                               ; preds = %52
  %58 = icmp eq i64 %55, 0
  %59 = select i1 %58, i64 %51, i64 %55
  %60 = add i64 %59, %54
  %61 = and i64 %60, %12
  %62 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %6, i64 %61
  %63 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %62, i64 0, i32 0, i32 0
  %64 = load %"class.blink::InspectorResourceContentLoader::ResourceClient"*, %"class.blink::InspectorResourceContentLoader::ResourceClient"** %63, align 8
  %65 = icmp eq %"class.blink::InspectorResourceContentLoader::ResourceClient"* %64, %1
  br i1 %65, label %66, label %52

66:                                               ; preds = %57, %10
  %67 = phi %"class.blink::Member.7"* [ %34, %10 ], [ %62, %57 ]
  %68 = icmp eq %"class.blink::Member.7"* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %66
  %70 = zext i32 %9 to i64
  br label %74

71:                                               ; preds = %52, %66, %2
  %72 = zext i32 %9 to i64
  %73 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %6, i64 %72
  br label %74

74:                                               ; preds = %71, %69
  %75 = phi i64 [ %70, %69 ], [ %72, %71 ]
  %76 = phi %"class.blink::Member.7"* [ %67, %69 ], [ %73, %71 ]
  %77 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %6, i64 %75
  %78 = icmp eq %"class.blink::Member.7"* %77, %76
  br i1 %78, label %81, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0
  tail call void @_ZN3WTF9HashTableIN5blink6MemberINS1_30InspectorResourceContentLoader14ResourceClientEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE5eraseEPKS5_(%"class.WTF::HashTable.5"* %80, %"class.blink::Member.7"* %76) #10
  br label %81

81:                                               ; preds = %74, %79
  tail call void @_ZN5blink30InspectorResourceContentLoader9CheckDoneEv(%"class.blink::InspectorResourceContentLoader"* %0)
  ret void
}

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL15IsAboutBlankURLEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL16IsAboutSrcdocURLEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10LocalFrameEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::LocalFrame"*
  tail call void @_ZNK5blink10LocalFrame5TraceEPNS_7VisitorE(%"class.blink::LocalFrame"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink10LocalFrame5TraceEPNS_7VisitorE(%"class.blink::LocalFrame"*, %"class.blink::Visitor"*) unnamed_addr #2

declare void @_ZN5blink15InspectedFramesC1EPNS_10LocalFrameE(%"class.blink::InspectedFrames"*, %"class.blink::LocalFrame"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15InspectedFramesEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15InspectedFramesEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15InspectedFramesEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.16"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15InspectedFramesEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.16"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15InspectedFramesEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectedFrames"*
  tail call void @_ZNK5blink15InspectedFrames5TraceEPNS_7VisitorE(%"class.blink::InspectedFrames"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15InspectedFramesEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.16"*) local_unnamed_addr #2

declare void @_ZNK5blink15InspectedFrames5TraceEPNS_7VisitorE(%"class.blink::InspectedFrames"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8DocumentEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.3035"*, %"class.blink::Document"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3035", %"class.WTF::Vector.3035"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3035", %"class.WTF::Vector.3035"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8DocumentEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3035"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.3035", %"class.WTF::Vector.3035"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.1193"*, %"class.blink::Member.1193"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.1193", %"class.blink::Member.1193"* %16, i64 %18
  %20 = bitcast %"class.blink::Document"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.1193"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8DocumentEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3035"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.3035", %"class.WTF::Vector.3035"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.3035", %"class.WTF::Vector.3035"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.1193"*, %"class.blink::Member.1193"** %8, align 8
  %10 = icmp eq %"class.blink::Member.1193"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8DocumentEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.3035"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.1193"*, %"class.blink::Member.1193"** %8, align 8
  %26 = icmp eq %"class.blink::Member.1193"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.1193"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8DocumentEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3035"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8DocumentEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3035"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.3035"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.3035", %"class.WTF::Vector.3035"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.3035"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.3035", %"class.WTF::Vector.3035"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8DocumentEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.3035", %"class.WTF::Vector.3035"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.1193"*, %"class.blink::Member.1193"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.3035", %"class.WTF::Vector.3035"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.1193"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.1193"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.3035"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.3035"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.3035"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.3035", %"class.WTF::Vector.3035"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8DocumentEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.10, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.16"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.16"*)) #10
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([157 x i8], [157 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8DocumentEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #10
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking"* %30
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.1193"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.1193", %"class.blink::Member.1193"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.1193"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Document"*
  %4 = bitcast i8* %1 to void (%"class.blink::Document"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)**, void (%"class.blink::Document"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Document"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.674"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.674", %"class.WTF::HashTable.674"* %0, i64 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.674"* %0, %"class.WTF::String"* null)
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::String"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.674", %"class.WTF::HashTable.674"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #10
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %27
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"class.WTF::StringImpl"* [ %30, %32 ], [ %66, %58 ]
  %48 = phi %"class.WTF::String"* [ %28, %32 ], [ %64, %58 ]
  %49 = phi %"class.WTF::String"* [ null, %32 ], [ %59, %58 ]
  %50 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %51 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %52 = bitcast %"class.WTF::String"* %48 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %58, label %55

55:                                               ; preds = %46
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %47, %"class.WTF::StringImpl"* %56) #10
  br i1 %57, label %131, label %58

58:                                               ; preds = %46, %55
  %59 = phi %"class.WTF::String"* [ %49, %55 ], [ %48, %46 ]
  %60 = icmp eq i64 %51, 0
  %61 = select i1 %60, i64 %45, i64 %51
  %62 = add i64 %61, %50
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %63
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"class.WTF::String"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"class.WTF::String"* %59 to i64*
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %"class.WTF::HashTable.674", %"class.WTF::HashTable.674"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"class.WTF::String"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #10
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !3

97:                                               ; preds = %88
  tail call void @llvm.trap() #10
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %98, %83, %78
  %101 = ptrtoint %"class.WTF::StringImpl"* %81 to i64
  %102 = bitcast %"class.WTF::String"* %79 to i64*
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  store i64 %101, i64* %102, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #10
  br label %119

119:                                              ; preds = %100, %115, %118
  %120 = getelementptr inbounds %"class.WTF::HashTable.674", %"class.WTF::HashTable.674"* %0, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %120, align 4
  %123 = getelementptr inbounds %"class.WTF::HashTable.674", %"class.WTF::HashTable.674"* %0, i64 0, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, %122
  %126 = shl i32 %125, 1
  %127 = load i32, i32* %12, align 8
  %128 = icmp ult i32 %126, %127
  br i1 %128, label %131, label %129

129:                                              ; preds = %119
  %130 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.674"* %0, %"class.WTF::String"* %79)
  br label %131

131:                                              ; preds = %55, %119, %129
  %132 = phi i8 [ 1, %119 ], [ 1, %129 ], [ 0, %55 ]
  %133 = phi %"class.WTF::String"* [ %79, %119 ], [ %130, %129 ], [ %48, %55 ]
  %134 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %133, 0
  %135 = insertvalue { %"class.WTF::String"*, i8 } %134, i8 %132, 1
  ret { %"class.WTF::String"*, i8 } %135
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.674"*, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.674", %"class.WTF::HashTable.674"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.674", %"class.WTF::HashTable.674"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"class.WTF::String"*
  %37 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.674"* %0, %"class.WTF::String"* %36, i32 %32, %"class.WTF::String"* %1) #10
  ret %"class.WTF::String"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.674"*, %"class.WTF::String"*, i32, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.674", align 8
  %6 = bitcast %"class.WTF::HashTable.674"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable.674", %"class.WTF::HashTable.674"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.674", %"class.WTF::HashTable.674"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.674", %"class.WTF::HashTable.674"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.674", %"class.WTF::HashTable.674"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.674"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.WTF::String"* %1, %"class.WTF::String"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.674", %"class.WTF::HashTable.674"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.674", %"class.WTF::HashTable.674"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"class.WTF::String"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.674"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.674"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %23 = ptrtoint %"class.WTF::String"* %22 to i64
  br label %71

24:                                               ; preds = %110
  %25 = bitcast %"class.WTF::HashTable.674"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.674"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %111, %24 ]
  %33 = phi %"class.WTF::String"* [ null, %16 ], [ %114, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %112, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"class.WTF::String"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %42
  %44 = bitcast %"class.WTF::String"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #10
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #10
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.674", %"class.WTF::HashTable.674"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"class.WTF::String"* %33

71:                                               ; preds = %21, %110
  %72 = phi i64 [ %111, %110 ], [ %23, %21 ]
  %73 = phi i32 [ %112, %110 ], [ %13, %21 ]
  %74 = phi %"class.WTF::String"* [ %113, %110 ], [ %22, %21 ]
  %75 = phi %"class.WTF::String"* [ %114, %110 ], [ null, %21 ]
  %76 = phi i32 [ %115, %110 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 %77
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  %80 = bitcast %"class.WTF::String"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %110
    i64 0, label %110
  ]

82:                                               ; preds = %71
  %83 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.674"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %78) #10
  %84 = extractvalue { %"class.WTF::String"*, i8 } %83, 0
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #10
  br label %101

101:                                              ; preds = %82, %97, %100
  %102 = load i64, i64* %80, align 8
  %103 = bitcast %"class.WTF::String"* %84 to i64*
  store i64 %102, i64* %103, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %104 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 %77
  %106 = icmp eq %"class.WTF::String"* %105, %3
  %107 = select i1 %106, %"class.WTF::String"* %84, %"class.WTF::String"* %75
  %108 = load i32, i32* %12, align 8
  %109 = ptrtoint %"class.WTF::String"* %104 to i64
  br label %110

110:                                              ; preds = %71, %71, %101
  %111 = phi i64 [ %72, %71 ], [ %109, %101 ], [ %72, %71 ]
  %112 = phi i32 [ %73, %71 ], [ %108, %101 ], [ %73, %71 ]
  %113 = phi %"class.WTF::String"* [ %74, %71 ], [ %104, %101 ], [ %74, %71 ]
  %114 = phi %"class.WTF::String"* [ %75, %71 ], [ %107, %101 ], [ %75, %71 ]
  %115 = add i32 %76, 1
  %116 = icmp eq i32 %115, %112
  br i1 %116, label %24, label %71
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.674"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.674", %"class.WTF::HashTable.674"* %0, i64 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.674", %"class.WTF::HashTable.674"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #10
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %20
  %22 = ptrtoint %"class.WTF::String"* %21 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"class.WTF::String"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"class.WTF::String"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"class.WTF::String"* %44, null
  %46 = ptrtoint %"class.WTF::String"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"class.WTF::String"* [ null, %26 ], [ %62, %61 ]
  %50 = phi %"class.WTF::StringImpl"* [ %24, %26 ], [ %70, %61 ]
  %51 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %52 = phi %"class.WTF::String"* [ %21, %26 ], [ %67, %61 ]
  %53 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %54 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %55 = bitcast %"class.WTF::String"* %52 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %61, label %58

58:                                               ; preds = %48
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %50, %"class.WTF::StringImpl"* %59) #10
  br i1 %60, label %72, label %61

61:                                               ; preds = %58, %48
  %62 = phi %"class.WTF::String"* [ %49, %58 ], [ %52, %48 ]
  %63 = icmp eq i64 %54, 0
  %64 = select i1 %63, i64 %39, i64 %54
  %65 = add i64 %64, %53
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %66
  %68 = ptrtoint %"class.WTF::String"* %67 to i64
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %67, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %58, %42
  %73 = phi i64 [ %47, %42 ], [ %51, %58 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %58 ]
  %75 = inttoptr i64 %73 to %"class.WTF::String"*
  %76 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %75, 0
  %77 = insertvalue { %"class.WTF::String"*, i8 } %76, i8 %74, 1
  ret { %"class.WTF::String"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_30InspectorResourceContentLoader14ResourceClientEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_30InspectorResourceContentLoader14ResourceClientEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_30InspectorResourceContentLoader14ResourceClientEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.16"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_30InspectorResourceContentLoader14ResourceClientEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.16"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink30InspectorResourceContentLoader14ResourceClientEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_30InspectorResourceContentLoader14ResourceClientEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 32
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_30InspectorResourceContentLoaderEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %7
  %14 = bitcast i8* %1 to %"class.blink::ResourceClient"*
  tail call void @_ZNK5blink14ResourceClient5TraceEPNS_7VisitorE(%"class.blink::ResourceClient"* %14, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_30InspectorResourceContentLoader14ResourceClientEE8FinalizeEPv(i8*) #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_30InspectorResourceContentLoader14ResourceClientEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink30InspectorResourceContentLoader14ResourceClient5TraceEPNS_7VisitorE(%"class.blink::InspectorResourceContentLoader::ResourceClient"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader::ResourceClient", %"class.blink::InspectorResourceContentLoader::ResourceClient"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.383"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_30InspectorResourceContentLoaderEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %7
  %14 = bitcast %"class.blink::InspectorResourceContentLoader::ResourceClient"* %0 to %"class.blink::ResourceClient"*
  tail call void @_ZNK5blink14ResourceClient5TraceEPNS_7VisitorE(%"class.blink::ResourceClient"* %14, %"class.blink::Visitor"* %1) #10
  ret void
}

declare void @_ZNK5blink14ResourceClient5TraceEPNS_7VisitorE(%"class.blink::ResourceClient"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_30InspectorResourceContentLoaderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 32
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10LocalFrameEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %7, %2
  %14 = getelementptr inbounds i8, i8* %1, i64 40
  %15 = bitcast i8* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = bitcast i8* %14 to i8**
  %18 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %19 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %19, i64 11
  %21 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %20, align 8
  tail call void %21(%"class.blink::Visitor"* %0, i8** %17) #10
  %22 = icmp eq i64 %16, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %13
  %24 = inttoptr i64 %16 to i8*
  %25 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %0, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_30InspectorResourceContentLoader14ResourceClientEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #10
  br label %29

29:                                               ; preds = %23, %13
  %30 = getelementptr inbounds i8, i8* %1, i64 64
  %31 = bitcast i8* %30 to i64*
  %32 = load atomic i64, i64* %31 monotonic, align 8
  %33 = icmp eq i64 %32, 0
  %34 = bitcast i8* %30 to i8**
  %35 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %18, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %35, i64 11
  %37 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8** %34) #10
  br i1 %33, label %44, label %38

38:                                               ; preds = %29
  %39 = inttoptr i64 %32 to i8*
  %40 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %41 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, i64 5
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, align 8
  tail call void %43(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %44

44:                                               ; preds = %29, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14ResourceClientD2Ev(%"class.blink::ResourceClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30InspectorResourceContentLoader14ResourceClientD0Ev(%"class.blink::InspectorResourceContentLoader::ResourceClient"*) unnamed_addr #4 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14ResourceClient12DataReceivedEPNS_8ResourceEPKcm(%"class.blink::ResourceClient"*, %"class.blink::Resource"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30InspectorResourceContentLoader14ResourceClient14NotifyFinishedEPNS_8ResourceE(%"class.blink::InspectorResourceContentLoader::ResourceClient"*, %"class.blink::Resource"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorResourceContentLoader::ResourceClient", %"class.blink::InspectorResourceContentLoader::ResourceClient"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::InspectorResourceContentLoader"*, %"class.blink::InspectorResourceContentLoader"** %3, align 8
  %5 = icmp eq %"class.blink::InspectorResourceContentLoader"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN5blink30InspectorResourceContentLoader16ResourceFinishedEPNS0_14ResourceClientE(%"class.blink::InspectorResourceContentLoader"* nonnull %4, %"class.blink::InspectorResourceContentLoader::ResourceClient"* %0)
  br label %7

7:                                                ; preds = %2, %6
  %8 = bitcast %"class.blink::InspectorResourceContentLoader::ResourceClient"* %0 to %"class.blink::ResourceClient"*
  tail call void @_ZN5blink14ResourceClient11SetResourceEPNS_8ResourceEPN4base22SingleThreadTaskRunnerE(%"class.blink::ResourceClient"* %8, %"class.blink::Resource"* null, %"class.base::SingleThreadTaskRunner"* null) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14ResourceClient20IsFontResourceClientEv(%"class.blink::ResourceClient"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17RawResourceClient19IsRawResourceClientEv(%"class.blink::RawResourceClient"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink30InspectorResourceContentLoader14ResourceClient9DebugNameEv(%"class.blink::InspectorResourceContentLoader::ResourceClient"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.14, i64 0, i64 0), i64 46) #10
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17RawResourceClient8DataSentEPNS_8ResourceEmm(%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, i64, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17RawResourceClient20ResponseBodyReceivedEPNS_8ResourceERNS_13BytesConsumerE(%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::BytesConsumer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17RawResourceClient16ResponseReceivedEPNS_8ResourceERKNS_16ResourceResponseE(%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceResponse"* dereferenceable(1072)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17RawResourceClient22CachedMetadataReceivedEPNS_8ResourceEN9mojo_base9BigBufferE(%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.mojo_base::BigBuffer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink17RawResourceClient16RedirectReceivedEPNS_8ResourceERKNS_15ResourceRequestERKNS_16ResourceResponseE(%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceRequest"* dereferenceable(1032), %"class.blink::ResourceResponse"* dereferenceable(1072)) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17RawResourceClient15RedirectBlockedEv(%"class.blink::RawResourceClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17RawResourceClient14DataDownloadedEPNS_8ResourceEm(%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink17RawResourceClient17DidDownloadToBlobEPNS_8ResourceE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::BlobDataHandle"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11ThreadState24PrefinalizerRegistrationINS_14ResourceClientEEC2EPS2_(%"class.blink::ThreadState::PrefinalizerRegistration"*, %"class.blink::ResourceClient"*) unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ResourceClient"* %1 to i64
  %4 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %5 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %4, i64 0, i32 1
  %6 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %5) #10
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %10, !prof !3

8:                                                ; preds = %2
  %9 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %5, i8* %9) #10
  br label %10

10:                                               ; preds = %2, %8
  %11 = phi i8* [ %9, %8 ], [ %6, %2 ]
  %12 = bitcast i8* %11 to %"class.blink::ThreadState"**
  %13 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 2
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %23, label %20

20:                                               ; preds = %10
  %21 = add i32 %19, 1
  %22 = icmp eq i32 %21, %16
  br i1 %22, label %32, label %34

23:                                               ; preds = %10
  %24 = icmp eq i32 %19, 0
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  br i1 %24, label %30, label %27

27:                                               ; preds = %23
  %28 = add i32 %26, -1
  %29 = icmp eq i32 %19, %28
  br i1 %29, label %32, label %34

30:                                               ; preds = %23
  %31 = icmp eq i32 %26, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %30, %27, %20
  tail call void @_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"* %14) #10
  %33 = load i32, i32* %18, align 4
  br label %34

34:                                               ; preds = %20, %27, %30, %32
  %35 = phi i32 [ %19, %20 ], [ %19, %27 ], [ 0, %30 ], [ %33, %32 ]
  %36 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::pair.318"*, %"struct.std::__1::pair.318"** %36, align 8
  %38 = zext i32 %35 to i64
  %39 = getelementptr inbounds %"struct.std::__1::pair.318", %"struct.std::__1::pair.318"* %37, i64 %38
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = add i32 %41, -1
  %43 = icmp eq i32 %35, %42
  %44 = add i32 %35, 1
  %45 = select i1 %43, i32 0, i32 %44
  store i32 %45, i32* %18, align 4
  %46 = bitcast %"struct.std::__1::pair.318"* %39 to i64*
  store i64 %3, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.std::__1::pair.318", %"struct.std::__1::pair.318"* %37, i64 %38, i32 1
  store i1 (%"class.blink::LivenessBroker"*, i8*)* @_ZN5blink14ResourceClient18InvokePreFinalizerERKNS_14LivenessBrokerEPv, i1 (%"class.blink::LivenessBroker"*, i8*)** %47, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink14ResourceClient18InvokePreFinalizerERKNS_14LivenessBrokerEPv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ResourceClient"*
  %4 = tail call zeroext i1 @_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_14ResourceClientEEEbPKT_(%"class.blink::LivenessBroker"* %0, %"class.blink::ResourceClient"* %3)
  br i1 %4, label %6, label %5

5:                                                ; preds = %2
  tail call void @_ZN5blink14ResourceClient11SetResourceEPNS_8ResourceEPN4base22SingleThreadTaskRunnerE(%"class.blink::ResourceClient"* %3, %"class.blink::Resource"* null, %"class.base::SingleThreadTaskRunner"* null) #10
  br label %6

6:                                                ; preds = %2, %5
  %7 = phi i1 [ true, %5 ], [ false, %2 ]
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair.318"*, %"struct.std::__1::pair.318"** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64 %11) #10
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64 %11) #10
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEEEEPKcv, i64 0, i64 0)) #10
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Deque"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 4
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %2, align 8
  %19 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %20, %22
  %24 = bitcast i8* %14 to %"struct.std::__1::pair.318"*
  br i1 %23, label %40, label %25

25:                                               ; preds = %1
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds %"struct.std::__1::pair.318", %"struct.std::__1::pair.318"* %5, i64 %26
  %28 = getelementptr inbounds %"struct.std::__1::pair.318", %"struct.std::__1::pair.318"* %24, i64 %26
  %29 = icmp ne %"struct.std::__1::pair.318"* %28, null
  %30 = icmp ne %"struct.std::__1::pair.318"* %27, null
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %73, !prof !4

32:                                               ; preds = %25
  %33 = zext i32 %22 to i64
  %34 = getelementptr inbounds %"struct.std::__1::pair.318", %"struct.std::__1::pair.318"* %5, i64 %33
  %35 = bitcast %"struct.std::__1::pair.318"* %27 to i8*
  %36 = ptrtoint %"struct.std::__1::pair.318"* %34 to i64
  %37 = ptrtoint %"struct.std::__1::pair.318"* %27 to i64
  %38 = sub i64 %36, %37
  %39 = bitcast %"struct.std::__1::pair.318"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %35, i64 %38, i1 false) #10
  br label %73

40:                                               ; preds = %1
  %41 = icmp ne i8* %14, null
  %42 = icmp ne %"struct.std::__1::pair.318"* %5, null
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %51, !prof !4

44:                                               ; preds = %40
  %45 = zext i32 %22 to i64
  %46 = bitcast %"struct.std::__1::pair.318"* %5 to i8*
  %47 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %46, i64 %47, i1 false) #10
  %48 = load i32, i32* %2, align 8
  %49 = load i32, i32* %19, align 8
  %50 = load %"struct.std::__1::pair.318"*, %"struct.std::__1::pair.318"** %4, align 8
  br label %51

51:                                               ; preds = %40, %44
  %52 = phi %"struct.std::__1::pair.318"* [ %24, %40 ], [ %50, %44 ]
  %53 = phi i32 [ %20, %40 ], [ %49, %44 ]
  %54 = phi i32 [ %18, %40 ], [ %48, %44 ]
  %55 = sub i32 %53, %3
  %56 = add i32 %55, %54
  %57 = zext i32 %53 to i64
  %58 = getelementptr inbounds %"struct.std::__1::pair.318", %"struct.std::__1::pair.318"* %5, i64 %57
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds %"struct.std::__1::pair.318", %"struct.std::__1::pair.318"* %52, i64 %59
  %61 = icmp ne %"struct.std::__1::pair.318"* %60, null
  %62 = icmp ne %"struct.std::__1::pair.318"* %58, null
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %72, !prof !4

64:                                               ; preds = %51
  %65 = zext i32 %3 to i64
  %66 = getelementptr inbounds %"struct.std::__1::pair.318", %"struct.std::__1::pair.318"* %5, i64 %65
  %67 = bitcast %"struct.std::__1::pair.318"* %58 to i8*
  %68 = ptrtoint %"struct.std::__1::pair.318"* %66 to i64
  %69 = ptrtoint %"struct.std::__1::pair.318"* %58 to i64
  %70 = sub i64 %68, %69
  %71 = bitcast %"struct.std::__1::pair.318"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* nonnull align 8 %67, i64 %70, i1 false) #10
  br label %72

72:                                               ; preds = %51, %64
  store i32 %56, i32* %19, align 8
  br label %73

73:                                               ; preds = %32, %25, %72
  %74 = bitcast %"struct.std::__1::pair.318"* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.13, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_14ResourceClientEEEbPKT_(%"class.blink::LivenessBroker"*, %"class.blink::ResourceClient"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::ResourceClient"* %1, null
  br i1 %3, label %73, label %4

4:                                                ; preds = %2
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #10
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #10
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = icmp eq %"class.blink::ThreadState"* %14, null
  br i1 %15, label %73, label %16

16:                                               ; preds = %11
  %17 = ptrtoint %"class.blink::ResourceClient"* %1 to i64
  %18 = and i64 %17, -131072
  %19 = inttoptr i64 %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 4138
  %21 = load i8, i8* %20, align 2
  %22 = icmp eq i8 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %16
  %24 = getelementptr inbounds i8, i8* %19, i64 4160
  br label %63

25:                                               ; preds = %16
  %26 = getelementptr inbounds i8, i8* %19, i64 4096
  %27 = bitcast i8* %26 to %"class.blink::NormalPage"*
  %28 = getelementptr inbounds i8, i8* %19, i64 4400
  %29 = bitcast i8* %28 to i8**
  %30 = bitcast i8* %28 to i64*
  %31 = load i64, i64* %30, align 16
  %32 = sub i64 %17, %31
  %33 = lshr i64 %32, 3
  %34 = lshr i64 %32, 6
  %35 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %27, i64 0, i32 2, i32 0, i32 1, i64 %34
  %36 = load atomic i8, i8* %35 acquire, align 1
  %37 = trunc i64 %33 to i32
  %38 = and i32 %37, 7
  %39 = shl i32 2, %38
  %40 = trunc i32 %39 to i8
  %41 = add i8 %40, -1
  %42 = and i8 %41, %36
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %25, %44
  %45 = phi i64 [ %46, %44 ], [ %34, %25 ]
  %46 = add i64 %45, -1
  %47 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %27, i64 0, i32 2, i32 0, i32 1, i64 %46
  %48 = load atomic i8, i8* %47 acquire, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %44, label %50

50:                                               ; preds = %44, %25
  %51 = phi i64 [ %34, %25 ], [ %46, %44 ]
  %52 = phi i8 [ %42, %25 ], [ %48, %44 ]
  %53 = zext i8 %52 to i32
  %54 = tail call i32 @llvm.ctlz.i32(i32 %53, i1 true) #10, !range !5
  %55 = add nsw i32 %54, -24
  %56 = shl i64 %51, 3
  %57 = or i64 %56, 7
  %58 = sext i32 %55 to i64
  %59 = sub i64 %57, %58
  %60 = shl i64 %59, 3
  %61 = load i8*, i8** %29, align 16
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  br label %63

63:                                               ; preds = %23, %50
  %64 = phi i8* [ %24, %23 ], [ %62, %50 ]
  %65 = getelementptr inbounds i8, i8* %64, i64 4
  %66 = bitcast i8* %65 to i16*
  %67 = load atomic i16, i16* %66 acquire, align 2
  %68 = getelementptr inbounds i8, i8* %64, i64 6
  %69 = bitcast i8* %68 to i16*
  %70 = load i16, i16* %69, align 2
  %71 = and i16 %70, 1
  %72 = icmp ne i16 %71, 0
  br label %73

73:                                               ; preds = %11, %2, %63
  %74 = phi i1 [ %72, %63 ], [ true, %2 ], [ true, %11 ]
  ret i1 %74
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #7

declare void @_ZN5blink14ResourceClient11SetResourceEPNS_8ResourceEPN4base22SingleThreadTaskRunnerE(%"class.blink::ResourceClient"*, %"class.blink::Resource"*, %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_11RawResourceEEEvOT_(%"class.WTF::Vector.387"*, %"class.blink::RawResource"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.387", %"class.WTF::Vector.387"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.387", %"class.WTF::Vector.387"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.387"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.387", %"class.WTF::Vector.387"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.11"*, %"class.blink::Member.11"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.11", %"class.blink::Member.11"* %16, i64 %18
  %20 = bitcast %"class.blink::RawResource"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.11"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.387"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.387", %"class.WTF::Vector.387"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.387", %"class.WTF::Vector.387"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.11"*, %"class.blink::Member.11"** %8, align 8
  %10 = icmp eq %"class.blink::Member.11"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8ResourceEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.3260"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking.3260"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.387"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.3260", %"class.blink::HeapVectorBacking.3260"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.11"*, %"class.blink::Member.11"** %8, align 8
  %26 = icmp eq %"class.blink::Member.11"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.11"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.387"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.387"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.387"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.387", %"class.WTF::Vector.387"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.387"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.387", %"class.WTF::Vector.387"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8ResourceEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.3260"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking.3260"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.387", %"class.WTF::Vector.387"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.11"*, %"class.blink::Member.11"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.387", %"class.WTF::Vector.387"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.3260"* %17, null
  %23 = icmp ne %"class.blink::Member.11"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.11"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.387"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.3260", %"class.blink::HeapVectorBacking.3260"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.387"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.387"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.387", %"class.WTF::Vector.387"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.3260", %"class.blink::HeapVectorBacking.3260"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8ResourceEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.3260"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.10, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.3260"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.3260"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.16"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.16"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([157 x i8], [157 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8ResourceEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.11"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.11", %"class.blink::Member.11"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.11"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8ResourceEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8ResourceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Resource"*
  %4 = bitcast i8* %1 to void (%"class.blink::Resource"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Resource"*, %"class.blink::Visitor"*)**, void (%"class.blink::Resource"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::Resource"*, %"class.blink::Visitor"*)*, void (%"class.blink::Resource"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::Resource"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.7"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_30InspectorResourceContentLoader14ResourceClientEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS4_RSG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_(%"class.WTF::HashTable.5"*, %"class.blink::InspectorResourceContentLoader::ResourceClient"** dereferenceable(8), %"class.blink::InspectorResourceContentLoader::ResourceClient"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.7"*, %"class.blink::Member.7"** %4, align 8
  %6 = icmp eq %"class.blink::Member.7"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.7"* @_ZN3WTF9HashTableIN5blink6MemberINS1_30InspectorResourceContentLoader14ResourceClientEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.5"* %0, %"class.blink::Member.7"* null)
  %9 = load %"class.blink::Member.7"*, %"class.blink::Member.7"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.7"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::InspectorResourceContentLoader::ResourceClient"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::InspectorResourceContentLoader::ResourceClient"*, %"class.blink::InspectorResourceContentLoader::ResourceClient"** %40, align 8
  %42 = icmp eq %"class.blink::InspectorResourceContentLoader::ResourceClient"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::InspectorResourceContentLoader::ResourceClient"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::InspectorResourceContentLoader::ResourceClient"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.7"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.7"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::InspectorResourceContentLoader::ResourceClient"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::InspectorResourceContentLoader::ResourceClient"* %59, inttoptr (i64 -1 to %"class.blink::InspectorResourceContentLoader::ResourceClient"*)
  %67 = select i1 %66, %"class.blink::Member.7"* %60, %"class.blink::Member.7"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::InspectorResourceContentLoader::ResourceClient"*, %"class.blink::InspectorResourceContentLoader::ResourceClient"** %73, align 8
  %75 = icmp eq %"class.blink::InspectorResourceContentLoader::ResourceClient"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.7"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.7"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #10
  %80 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.7"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::InspectorResourceContentLoader::ResourceClient"*, %"class.blink::InspectorResourceContentLoader::ResourceClient"** %2, align 8
  %89 = ptrtoint %"class.blink::InspectorResourceContentLoader::ResourceClient"* %88 to i64
  %90 = bitcast %"class.blink::Member.7"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::InspectorResourceContentLoader::ResourceClient"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #10
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.7"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #10
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.7"* @_ZN3WTF9HashTableIN5blink6MemberINS1_30InspectorResourceContentLoader14ResourceClientEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.5"* %0, %"class.blink::Member.7"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.7"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.7"*, i8 } undef, %"class.blink::Member.7"* %117, 0
  %119 = insertvalue { %"class.blink::Member.7"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.7"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.7"* @_ZN3WTF9HashTableIN5blink6MemberINS1_30InspectorResourceContentLoader14ResourceClientEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.5"*, %"class.blink::Member.7"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #10
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %23, i8* %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #10
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member.7"* @_ZN3WTF9HashTableIN5blink6MemberINS1_30InspectorResourceContentLoader14ResourceClientEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE12ExpandBufferEjPS5_Rb(%"class.WTF::HashTable.5"* %0, i32 %35, %"class.blink::Member.7"* %1, i8* nonnull dereferenceable(1) %4) #10
  %37 = load i8, i8* %4, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_30InspectorResourceContentLoader14ResourceClientEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #10
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::Member.7"*
  %44 = call %"class.blink::Member.7"* @_ZN3WTF9HashTableIN5blink6MemberINS1_30InspectorResourceContentLoader14ResourceClientEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.5"* %0, %"class.blink::Member.7"* %43, i32 %40, %"class.blink::Member.7"* %1) #10
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member.7"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member.7"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.7"* @_ZN3WTF9HashTableIN5blink6MemberINS1_30InspectorResourceContentLoader14ResourceClientEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE12ExpandBufferEjPS5_Rb(%"class.WTF::HashTable.5"*, i32, %"class.blink::Member.7"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #10
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #10
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0)) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member.7"*, %"class.blink::Member.7"** %31, align 8
  %33 = icmp eq %"class.blink::Member.7"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member.7"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #10
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member.7"*, %"class.blink::Member.7"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_30InspectorResourceContentLoader14ResourceClientEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #10
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::Member.7"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member.7"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member.7"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member.7"*, %"class.blink::Member.7"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member.7"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member.7"* %61, %"class.blink::Member.7"* %55
  %63 = bitcast %"class.blink::Member.7"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member.7"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member.7"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.5"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #10
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member.7"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member.7"* @_ZN3WTF9HashTableIN5blink6MemberINS1_30InspectorResourceContentLoader14ResourceClientEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.5"* %0, %"class.blink::Member.7"* %42, i32 %1, %"class.blink::Member.7"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member.7"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member.7"*, %"class.blink::Member.7"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member.7"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member.7"* %87, %"class.blink::Member.7"* %82
  %89 = bitcast %"class.blink::Member.7"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member.7"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member.7"*, %"class.blink::Member.7"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member.7"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member.7"* %99, %"class.blink::Member.7"* %88
  %101 = bitcast %"class.blink::Member.7"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member.7"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member.7"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member.7"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.7"* @_ZN3WTF9HashTableIN5blink6MemberINS1_30InspectorResourceContentLoader14ResourceClientEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.5"*, %"class.blink::Member.7"*, i32, %"class.blink::Member.7"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member.7"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member.7"*, %"class.blink::Member.7"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member.7"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member.7"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #10
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member.7"*, %"class.blink::Member.7"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.5"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member.7"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #10
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member.7"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member.7"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #10
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member.7"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member.7"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member.7"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %39, i64 %42
  %44 = bitcast %"class.blink::Member.7"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member.7"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::InspectorResourceContentLoader::ResourceClient"*, %"class.blink::InspectorResourceContentLoader::ResourceClient"** %70, align 8
  %72 = icmp eq %"class.blink::InspectorResourceContentLoader::ResourceClient"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::InspectorResourceContentLoader::ResourceClient"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member.7"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member.7"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member.7"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member.7"* %93, null
  %95 = ptrtoint %"class.blink::Member.7"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::InspectorResourceContentLoader::ResourceClient"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::InspectorResourceContentLoader::ResourceClient"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::InspectorResourceContentLoader::ResourceClient"* %99, inttoptr (i64 -1 to %"class.blink::InspectorResourceContentLoader::ResourceClient"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member.7"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::InspectorResourceContentLoader::ResourceClient"*, %"class.blink::InspectorResourceContentLoader::ResourceClient"** %113, align 8
  %115 = icmp eq %"class.blink::InspectorResourceContentLoader::ResourceClient"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member.7"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member.7"*, %"class.blink::Member.7"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member.7"* %121, %3
  %123 = select i1 %122, %"class.blink::Member.7"* %118, %"class.blink::Member.7"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member.7"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member.7"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_30InspectorResourceContentLoader14ResourceClientEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.15, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_30InspectorResourceContentLoader14ResourceClientEEES6_NS1_17IdentityExtractorENS1_10MemberHashIS5_EENS1_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEE14AllocateObjectISE_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_30InspectorResourceContentLoader14ResourceClientEEES6_NS1_17IdentityExtractorENS1_10MemberHashIS5_EENS1_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEE14AllocateObjectISE_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_30InspectorResourceContentLoader14ResourceClientEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_30InspectorResourceContentLoader14ResourceClientEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.16"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_30InspectorResourceContentLoader14ResourceClientEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.16"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([526 x i8], [526 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_30InspectorResourceContentLoader14ResourceClientEEES7_NS_17IdentityExtractorENS_10MemberHashIS6_EENS_10HashTraitsIS7_EESC_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_30InspectorResourceContentLoader14ResourceClientEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.7"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #10
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member.7", %"class.blink::Member.7"* %3, i64 %33
  %35 = bitcast %"class.blink::Member.7"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_30InspectorResourceContentLoader14ResourceClientEE5TraceEPNS_7VisitorEPKv) #10
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_30InspectorResourceContentLoader14ResourceClientEE5TraceEPNS_7VisitorEPKv) #10
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_30InspectorResourceContentLoader14ResourceClientEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_RS1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.674"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.674", %"class.WTF::HashTable.674"* %0, i64 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.674"* %0, %"class.WTF::String"* null)
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::String"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.674", %"class.WTF::HashTable.674"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #10
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %27
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"class.WTF::StringImpl"* [ %30, %32 ], [ %66, %58 ]
  %48 = phi %"class.WTF::String"* [ %28, %32 ], [ %64, %58 ]
  %49 = phi %"class.WTF::String"* [ null, %32 ], [ %59, %58 ]
  %50 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %51 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %52 = bitcast %"class.WTF::String"* %48 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %58, label %55

55:                                               ; preds = %46
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %47, %"class.WTF::StringImpl"* %56) #10
  br i1 %57, label %131, label %58

58:                                               ; preds = %46, %55
  %59 = phi %"class.WTF::String"* [ %49, %55 ], [ %48, %46 ]
  %60 = icmp eq i64 %51, 0
  %61 = select i1 %60, i64 %45, i64 %51
  %62 = add i64 %61, %50
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %63
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"class.WTF::String"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"class.WTF::String"* %59 to i64*
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %"class.WTF::HashTable.674", %"class.WTF::HashTable.674"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"class.WTF::String"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #10
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !3

97:                                               ; preds = %88
  tail call void @llvm.trap() #10
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %98, %83, %78
  %101 = ptrtoint %"class.WTF::StringImpl"* %81 to i64
  %102 = bitcast %"class.WTF::String"* %79 to i64*
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  store i64 %101, i64* %102, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #10
  br label %119

119:                                              ; preds = %100, %115, %118
  %120 = getelementptr inbounds %"class.WTF::HashTable.674", %"class.WTF::HashTable.674"* %0, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %120, align 4
  %123 = getelementptr inbounds %"class.WTF::HashTable.674", %"class.WTF::HashTable.674"* %0, i64 0, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, %122
  %126 = shl i32 %125, 1
  %127 = load i32, i32* %12, align 8
  %128 = icmp ult i32 %126, %127
  br i1 %128, label %131, label %129

129:                                              ; preds = %119
  %130 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.674"* %0, %"class.WTF::String"* %79)
  br label %131

131:                                              ; preds = %55, %119, %129
  %132 = phi i8 [ 1, %119 ], [ 1, %129 ], [ 0, %55 ]
  %133 = phi %"class.WTF::String"* [ %79, %119 ], [ %130, %129 ], [ %48, %55 ]
  %134 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %133, 0
  %135 = insertvalue { %"class.WTF::String"*, i8 } %134, i8 %132, 1
  ret { %"class.WTF::String"*, i8 } %135
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_21CSSStyleSheetResourceEEEvOT_(%"class.WTF::Vector.387"*, %"class.blink::CSSStyleSheetResource"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.387", %"class.WTF::Vector.387"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.387", %"class.WTF::Vector.387"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.387"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.387", %"class.WTF::Vector.387"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.11"*, %"class.blink::Member.11"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.11", %"class.blink::Member.11"* %16, i64 %18
  %20 = bitcast %"class.blink::CSSStyleSheetResource"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.11"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNS_6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSE_IS8_EEEESF_S7_E6insertINS_17HashMapTranslatorISH_SC_S7_EERiS8_EENS_18HashTableAddResultISI_S9_EEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNS_6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSE_IS8_EEEESF_S7_E6ExpandEPS9_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %83, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %111, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair"* %52, %"struct.WTF::KeyValuePair"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 1, i32 0, i32 0, i32 1
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 1, i32 0, i32 0, i32 2
  %75 = bitcast %"class.WTF::Vector"* %72 to i64*
  store atomic i64 0, i64* %75 monotonic, align 8
  store i32 0, i32* %73, align 4
  store i32 0, i32* %74, align 4
  %76 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %77 = load i32, i32* %76, align 8
  %78 = add i32 %77, 2147483647
  %79 = and i32 %78, 2147483647
  %80 = and i32 %77, -2147483648
  %81 = or i32 %79, %80
  store i32 %81, i32* %76, align 8
  %82 = load i32, i32* %1, align 4
  br label %83

83:                                               ; preds = %10, %68, %70
  %84 = phi i32 [ %82, %70 ], [ %16, %68 ], [ %16, %10 ]
  %85 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %85, i64 0, i32 0
  store i32 %84, i32* %86, align 8
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %85, i64 0, i32 1
  %88 = bitcast %"class.WTF::Vector"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.WTF::Vector"* %87 to i64*
  %91 = load i64, i64* %90, align 8
  store atomic i64 %91, i64* %88 monotonic, align 8
  store atomic i64 %89, i64* %90 monotonic, align 8
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %85, i64 0, i32 1, i32 0, i32 0, i32 1
  %93 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 1
  %94 = load i32, i32* %92, align 4
  %95 = load i32, i32* %93, align 4
  store i32 %95, i32* %92, align 4
  store i32 %94, i32* %93, align 4
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %85, i64 0, i32 1, i32 0, i32 0, i32 2
  %97 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 2
  %98 = load i32, i32* %96, align 4
  %99 = load i32, i32* %97, align 4
  store i32 %99, i32* %96, align 4
  store i32 %98, i32* %97, align 4
  %100 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = add i32 %101, 1
  store i32 %102, i32* %100, align 4
  %103 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %104 = load i32, i32* %103, align 8
  %105 = add i32 %104, %102
  %106 = shl i32 %105, 1
  %107 = load i32, i32* %12, align 8
  %108 = icmp ult i32 %106, %107
  br i1 %108, label %111, label %109

109:                                              ; preds = %83
  %110 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNS_6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSE_IS8_EEEESF_S7_E6ExpandEPS9_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %85)
  br label %111

111:                                              ; preds = %50, %83, %109
  %112 = phi i8 [ 1, %83 ], [ 1, %109 ], [ 0, %50 ]
  %113 = phi %"struct.WTF::KeyValuePair"* [ %85, %83 ], [ %110, %109 ], [ %52, %50 ]
  %114 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %113, 0
  %115 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %114, i8 %112, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %115
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNS_6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSE_IS8_EEEESF_S7_E6ExpandEPS9_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([141 x i8], [141 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiNS_6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEEEEEEEPKcv, i64 0, i64 0)) #10
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %69, label %38

38:                                               ; preds = %31
  %39 = and i64 %33, 1
  %40 = icmp eq i32 %32, 1
  br i1 %40, label %60, label %41

41:                                               ; preds = %38
  %42 = sub nsw i64 %33, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %57, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %58, %43 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %44, i32 0
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %44, i32 1
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %44, i32 1, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %44, i32 1, i32 0, i32 0, i32 2
  %50 = bitcast %"class.WTF::Vector"* %47 to i64*
  store atomic i64 0, i64* %50 monotonic, align 8
  store i32 0, i32* %48, align 4
  store i32 0, i32* %49, align 4
  %51 = or i64 %44, 1
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %51, i32 0
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %51, i32 1
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %51, i32 1, i32 0, i32 0, i32 1
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %51, i32 1, i32 0, i32 0, i32 2
  %56 = bitcast %"class.WTF::Vector"* %53 to i64*
  store atomic i64 0, i64* %56 monotonic, align 8
  store i32 0, i32* %54, align 4
  store i32 0, i32* %55, align 4
  %57 = add nuw nsw i64 %44, 2
  %58 = add i64 %45, -2
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %43

60:                                               ; preds = %43, %38
  %61 = phi i64 [ 0, %38 ], [ %57, %43 ]
  %62 = icmp eq i64 %39, 0
  br i1 %62, label %69, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %61, i32 0
  store i32 0, i32* %64, align 8
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %61, i32 1
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %61, i32 1, i32 0, i32 0, i32 1
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %61, i32 1, i32 0, i32 0, i32 2
  %68 = bitcast %"class.WTF::Vector"* %65 to i64*
  store atomic i64 0, i64* %68 monotonic, align 8
  store i32 0, i32* %66, align 4
  store i32 0, i32* %67, align 4
  br label %69

69:                                               ; preds = %63, %60, %31
  %70 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNS_6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSE_IS8_EEEESF_S7_E8RehashToEPS9_jSJ_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #10
  ret %"struct.WTF::KeyValuePair"* %70
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNS_6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSE_IS8_EEEESF_S7_E8RehashToEPS9_jSJ_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %78

24:                                               ; preds = %98
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %99, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %102, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %100, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %74, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %72, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %69, %39
  %42 = phi i64 [ 0, %39 ], [ %70, %69 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, -1
  br i1 %45, label %69, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 1
  %48 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %48, align 8
  %50 = icmp eq %"class.base::OnceCallback"* %49, null
  br i1 %50, label %69, label %51, !prof !4

51:                                               ; preds = %46
  %52 = bitcast %"class.base::OnceCallback"* %49 to i8*
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 1, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %67, label %56, !prof !3

56:                                               ; preds = %51
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %49, i64 %57
  br label %59

59:                                               ; preds = %59, %56
  %60 = phi %"class.base::OnceCallback"* [ %62, %59 ], [ %49, %56 ]
  %61 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %60, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %61) #10
  %62 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %60, i64 1
  %63 = icmp eq %"class.base::OnceCallback"* %62, %58
  br i1 %63, label %64, label %59

64:                                               ; preds = %59
  store i32 0, i32* %53, align 4
  %65 = bitcast %"class.WTF::Vector"* %47 to i8**
  %66 = load i8*, i8** %65, align 8
  br label %67

67:                                               ; preds = %64, %51
  %68 = phi i8* [ %66, %64 ], [ %52, %51 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %68) #10
  store %"class.base::OnceCallback"* null, %"class.base::OnceCallback"** %48, align 8
  br label %69

69:                                               ; preds = %67, %46, %41
  %70 = add nuw nsw i64 %42, 1
  %71 = icmp eq i64 %70, %40
  br i1 %71, label %72, label %41

72:                                               ; preds = %69, %37
  %73 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %73) #10
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %74

74:                                               ; preds = %28, %72
  %75 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = and i32 %76, -2147483648
  store i32 %77, i32* %75, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"struct.WTF::KeyValuePair"* %33

78:                                               ; preds = %21, %98
  %79 = phi i64 [ %99, %98 ], [ %23, %21 ]
  %80 = phi i32 [ %100, %98 ], [ %13, %21 ]
  %81 = phi %"struct.WTF::KeyValuePair"* [ %101, %98 ], [ %22, %21 ]
  %82 = phi %"struct.WTF::KeyValuePair"* [ %102, %98 ], [ null, %21 ]
  %83 = phi i32 [ %103, %98 ], [ 0, %21 ]
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 %84
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %85, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = add i32 %87, 1
  %89 = icmp ult i32 %88, 2
  br i1 %89, label %98, label %90

90:                                               ; preds = %78
  %91 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNS_6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSE_IS8_EEEESF_S7_E8ReinsertEOS9_(%"class.WTF::HashTable"* nonnull %5, %"struct.WTF::KeyValuePair"* dereferenceable(24) %85)
  %92 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %92, i64 %84
  %94 = icmp eq %"struct.WTF::KeyValuePair"* %93, %3
  %95 = select i1 %94, %"struct.WTF::KeyValuePair"* %91, %"struct.WTF::KeyValuePair"* %82
  %96 = load i32, i32* %12, align 8
  %97 = ptrtoint %"struct.WTF::KeyValuePair"* %92 to i64
  br label %98

98:                                               ; preds = %78, %90
  %99 = phi i64 [ %79, %78 ], [ %97, %90 ]
  %100 = phi i32 [ %80, %78 ], [ %96, %90 ]
  %101 = phi %"struct.WTF::KeyValuePair"* [ %81, %78 ], [ %92, %90 ]
  %102 = phi %"struct.WTF::KeyValuePair"* [ %82, %78 ], [ %95, %90 ]
  %103 = add i32 %83, 1
  %104 = icmp eq i32 %103, %100
  br i1 %104, label %24, label %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNS_6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSE_IS8_EEEESF_S7_E8ReinsertEOS9_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -1
  %9 = zext i32 %8 to i64
  %10 = load i32, i32* %3, align 4
  %11 = shl i32 %10, 15
  %12 = xor i32 %11, -1
  %13 = add i32 %10, %12
  %14 = lshr i32 %13, 10
  %15 = xor i32 %14, %13
  %16 = mul i32 %15, 9
  %17 = lshr i32 %16, 6
  %18 = xor i32 %17, %16
  %19 = shl i32 %18, 11
  %20 = xor i32 %19, -1
  %21 = add i32 %18, %20
  %22 = lshr i32 %21, 16
  %23 = xor i32 %22, %21
  %24 = and i32 %23, %8
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %25
  %27 = ptrtoint %"struct.WTF::KeyValuePair"* %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %48, label %31

31:                                               ; preds = %2
  %32 = xor i32 %23, -1
  %33 = lshr i32 %21, 23
  %34 = add i32 %33, %32
  %35 = shl i32 %34, 12
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 7
  %38 = xor i32 %37, %36
  %39 = shl i32 %38, 2
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 20
  %42 = xor i32 %41, %40
  %43 = or i32 %42, 1
  %44 = zext i32 %43 to i64
  br label %54

45:                                               ; preds = %61
  %46 = ptrtoint %"struct.WTF::KeyValuePair"* %68 to i64
  %47 = inttoptr i64 %63 to %"struct.WTF::KeyValuePair"*
  br label %48

48:                                               ; preds = %45, %2
  %49 = phi i64 [ %46, %45 ], [ %27, %2 ]
  %50 = phi %"struct.WTF::KeyValuePair"* [ %47, %45 ], [ null, %2 ]
  %51 = icmp eq %"struct.WTF::KeyValuePair"* %50, null
  %52 = ptrtoint %"struct.WTF::KeyValuePair"* %50 to i64
  %53 = select i1 %51, i64 %49, i64 %52
  br label %73

54:                                               ; preds = %61, %31
  %55 = phi i64 [ 0, %31 ], [ %63, %61 ]
  %56 = phi i32 [ %29, %31 ], [ %71, %61 ]
  %57 = phi i64 [ %27, %31 ], [ %69, %61 ]
  %58 = phi i64 [ %25, %31 ], [ %67, %61 ]
  %59 = phi i64 [ 0, %31 ], [ %65, %61 ]
  %60 = icmp eq i32 %56, %10
  br i1 %60, label %73, label %61

61:                                               ; preds = %54
  %62 = icmp eq i32 %56, -1
  %63 = select i1 %62, i64 %57, i64 %55
  %64 = icmp eq i64 %59, 0
  %65 = select i1 %64, i64 %44, i64 %59
  %66 = add i64 %65, %58
  %67 = and i64 %66, %9
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %67
  %69 = ptrtoint %"struct.WTF::KeyValuePair"* %68 to i64
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %45, label %54

73:                                               ; preds = %54, %48
  %74 = phi i64 [ %53, %48 ], [ %57, %54 ]
  %75 = inttoptr i64 %74 to %"struct.WTF::KeyValuePair"*
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 1
  %77 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %76, i64 0, i32 0, i32 0, i32 0
  %78 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %77, align 8
  %79 = icmp eq %"class.base::OnceCallback"* %78, null
  br i1 %79, label %99, label %80, !prof !4

80:                                               ; preds = %73
  %81 = bitcast %"class.base::OnceCallback"* %78 to i8*
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 1, i32 0, i32 0, i32 2
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %96, label %85, !prof !3

85:                                               ; preds = %80
  %86 = zext i32 %83 to i64
  %87 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %78, i64 %86
  br label %88

88:                                               ; preds = %88, %85
  %89 = phi %"class.base::OnceCallback"* [ %91, %88 ], [ %78, %85 ]
  %90 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %89, i64 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %90) #10
  %91 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %89, i64 1
  %92 = icmp eq %"class.base::OnceCallback"* %91, %87
  br i1 %92, label %93, label %88

93:                                               ; preds = %88
  store i32 0, i32* %82, align 4
  %94 = bitcast %"class.WTF::Vector"* %76 to i8**
  %95 = load i8*, i8** %94, align 8
  br label %96

96:                                               ; preds = %93, %80
  %97 = phi i8* [ %95, %93 ], [ %81, %80 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %97) #10
  store %"class.base::OnceCallback"* null, %"class.base::OnceCallback"** %77, align 8
  %98 = load i32, i32* %3, align 8
  br label %99

99:                                               ; preds = %73, %96
  %100 = phi i32 [ %10, %73 ], [ %98, %96 ]
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0
  store i32 %100, i32* %101, align 8
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 1, i32 0, i32 0, i32 1
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 1, i32 0, i32 0, i32 2
  %105 = bitcast %"class.WTF::Vector"* %102 to i64*
  %106 = bitcast %"class.WTF::Vector"* %76 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 16, i1 false) #10
  %107 = load i64, i64* %105, align 8
  %108 = bitcast %"class.WTF::Vector"* %76 to i64*
  store atomic i64 0, i64* %105 monotonic, align 8
  store atomic i64 %107, i64* %108 monotonic, align 8
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %110 = load i32, i32* %103, align 4
  %111 = load i32, i32* %109, align 4
  store i32 %111, i32* %103, align 4
  store i32 %110, i32* %109, align 4
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %113 = load i32, i32* %104, align 4
  %114 = load i32, i32* %112, align 4
  store i32 %114, i32* %104, align 4
  store i32 %113, i32* %112, align 4
  ret %"struct.WTF::KeyValuePair"* %75
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector"*, %"class.base::OnceCallback"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %6, align 8
  %8 = icmp ugt %"class.base::OnceCallback"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 %10
  %12 = icmp ugt %"class.base::OnceCallback"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"class.base::OnceCallback"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4base12OnceCallbackIFvvEEEEEmm(i64 %27) #10
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4base12OnceCallbackIFvvEEEEEPKcv, i64 0, i64 0)) #10
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.base::OnceCallback"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %22) #10
  %36 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.base::OnceCallback"* %1 to i64
  %39 = ptrtoint %"class.base::OnceCallback"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !4

52:                                               ; preds = %37
  %53 = icmp eq %"class.base::OnceCallback"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4base12OnceCallbackIFvvEEEEEmm(i64 %55) #10
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4base12OnceCallbackIFvvEEEEEPKcv, i64 0, i64 0)) #10
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.base::OnceCallback"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %50) #10
  %64 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.base::OnceCallback"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.base::OnceCallback"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.base::OnceCallback"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %69, i64 %72
  %74 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %70, i64 0, i32 0, i32 0, i32 0
  %75 = bitcast %"class.base::OnceCallback"* %70 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.base::OnceCallback"* %73 to i64*
  store i64 %76, i64* %77, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %74, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %27

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %25, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"class.base::OnceCallback"* [ %23, %14 ], [ %6, %4 ]
  %16 = phi %"class.base::OnceCallback"* [ %22, %14 ], [ null, %4 ]
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %15, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.base::OnceCallback"* %15 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.base::OnceCallback"* %16 to i64*
  store i64 %19, i64* %20, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %17, align 8
  %21 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %15, i64 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %21) #10
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %16, i64 1
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %15, i64 1
  %24 = icmp eq %"class.base::OnceCallback"* %23, %10
  br i1 %24, label %25, label %14

25:                                               ; preds = %14, %4
  %26 = bitcast %"class.base::OnceCallback"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %26) #10
  br label %63

27:                                               ; preds = %2
  %28 = zext i32 %1 to i64
  %29 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4base12OnceCallbackIFvvEEEEEmm(i64 %28) #10
  %30 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %29, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4base12OnceCallbackIFvvEEEEEPKcv, i64 0, i64 0)) #10
  %31 = lshr i64 %29, 3
  %32 = ptrtoint i8* %30 to i64
  %33 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %33, align 8
  %35 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %34, i64 %37
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %27
  %41 = bitcast %"class.base::OnceCallback"* %34 to i8*
  br label %58

42:                                               ; preds = %27
  %43 = bitcast i8* %30 to %"class.base::OnceCallback"*
  br label %44

44:                                               ; preds = %42, %44
  %45 = phi %"class.base::OnceCallback"* [ %53, %44 ], [ %34, %42 ]
  %46 = phi %"class.base::OnceCallback"* [ %52, %44 ], [ %43, %42 ]
  %47 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %45, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.base::OnceCallback"* %45 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.base::OnceCallback"* %46 to i64*
  store i64 %49, i64* %50, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %47, align 8
  %51 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %45, i64 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %51) #10
  %52 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %46, i64 1
  %53 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %45, i64 1
  %54 = icmp eq %"class.base::OnceCallback"* %53, %38
  br i1 %54, label %55, label %44

55:                                               ; preds = %44
  %56 = bitcast %"class.WTF::Vector"* %0 to i8**
  %57 = load i8*, i8** %56, align 8
  br label %58

58:                                               ; preds = %40, %55
  %59 = phi i8* [ %57, %55 ], [ %41, %40 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %59) #10
  %60 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %32, i64* %60 monotonic, align 8
  %61 = trunc i64 %31 to i32
  %62 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %61, i32* %62, align 8
  br label %63

63:                                               ; preds = %58, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4base12OnceCallbackIFvvEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.13, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNS_6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSE_IS8_EEEESF_S7_E5eraseEPKS9_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %4, align 8
  %6 = icmp eq %"class.base::OnceCallback"* %5, null
  br i1 %6, label %25, label %7, !prof !4

7:                                                ; preds = %2
  %8 = bitcast %"class.base::OnceCallback"* %5 to i8*
  %9 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %23, label %12, !prof !3

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 %13
  br label %15

15:                                               ; preds = %15, %12
  %16 = phi %"class.base::OnceCallback"* [ %18, %15 ], [ %5, %12 ]
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %16, i64 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %17) #10
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %16, i64 1
  %19 = icmp eq %"class.base::OnceCallback"* %18, %14
  br i1 %19, label %20, label %15

20:                                               ; preds = %15
  store i32 0, i32* %9, align 4
  %21 = bitcast %"class.WTF::Vector"* %3 to i8**
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %20, %7
  %24 = phi i8* [ %22, %20 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %24) #10
  store %"class.base::OnceCallback"* null, %"class.base::OnceCallback"** %4, align 8
  br label %25

25:                                               ; preds = %2, %23
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0
  store i32 -1, i32* %26, align 4
  %27 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %28 = load i32, i32* %27, align 8
  %29 = add i32 %28, 1
  %30 = and i32 %29, 2147483647
  %31 = and i32 %28, -2147483648
  %32 = or i32 %30, %31
  store i32 %32, i32* %27, align 8
  %33 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = add i32 %34, -1
  store i32 %35, i32* %33, align 4
  %36 = mul i32 %35, 6
  %37 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp ult i32 %36, %38
  %40 = icmp ugt i32 %38, 8
  %41 = and i1 %39, %40
  br i1 %41, label %42, label %82

42:                                               ; preds = %25
  %43 = lshr i32 %38, 1
  %44 = zext i32 %43 to i64
  %45 = mul nuw nsw i64 %44, 24
  %46 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %45, i8* getelementptr inbounds ([141 x i8], [141 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiNS_6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEEEEEEEPKcv, i64 0, i64 0)) #10
  %47 = bitcast i8* %46 to %"struct.WTF::KeyValuePair"*
  %48 = icmp eq i32 %43, 0
  br i1 %48, label %80, label %49

49:                                               ; preds = %42
  %50 = and i64 %44, 1
  %51 = icmp eq i32 %43, 1
  br i1 %51, label %71, label %52

52:                                               ; preds = %49
  %53 = sub nsw i64 %44, %50
  br label %54

54:                                               ; preds = %54, %52
  %55 = phi i64 [ 0, %52 ], [ %68, %54 ]
  %56 = phi i64 [ %53, %52 ], [ %69, %54 ]
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 %55, i32 0
  store i32 0, i32* %57, align 8
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 %55, i32 1
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 %55, i32 1, i32 0, i32 0, i32 1
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 %55, i32 1, i32 0, i32 0, i32 2
  %61 = bitcast %"class.WTF::Vector"* %58 to i64*
  store atomic i64 0, i64* %61 monotonic, align 8
  store i32 0, i32* %59, align 4
  store i32 0, i32* %60, align 4
  %62 = or i64 %55, 1
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 %62, i32 0
  store i32 0, i32* %63, align 8
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 %62, i32 1
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 %62, i32 1, i32 0, i32 0, i32 1
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 %62, i32 1, i32 0, i32 0, i32 2
  %67 = bitcast %"class.WTF::Vector"* %64 to i64*
  store atomic i64 0, i64* %67 monotonic, align 8
  store i32 0, i32* %65, align 4
  store i32 0, i32* %66, align 4
  %68 = add nuw nsw i64 %55, 2
  %69 = add i64 %56, -2
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %54

71:                                               ; preds = %54, %49
  %72 = phi i64 [ 0, %49 ], [ %68, %54 ]
  %73 = icmp eq i64 %50, 0
  br i1 %73, label %80, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 %72, i32 0
  store i32 0, i32* %75, align 8
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 %72, i32 1
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 %72, i32 1, i32 0, i32 0, i32 1
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 %72, i32 1, i32 0, i32 0, i32 2
  %79 = bitcast %"class.WTF::Vector"* %76 to i64*
  store atomic i64 0, i64* %79 monotonic, align 8
  store i32 0, i32* %77, align 4
  store i32 0, i32* %78, align 4
  br label %80

80:                                               ; preds = %74, %71, %42
  %81 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNS_6VectorIN4base12OnceCallbackIFvvEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSE_IS8_EEEESF_S7_E8RehashToEPS9_jSJ_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %47, i32 %43, %"struct.WTF::KeyValuePair"* null) #10
  br label %82

82:                                               ; preds = %80, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberINS1_30InspectorResourceContentLoader14ResourceClientEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE5eraseEPKS5_(%"class.WTF::HashTable.5"*, %"class.blink::Member.7"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::Member.7"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, 1
  %7 = and i32 %6, 2147483647
  %8 = and i32 %5, -2147483648
  %9 = or i32 %7, %8
  store i32 %9, i32* %4, align 8
  %10 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, -1
  store i32 %12, i32* %10, align 4
  %13 = mul i32 %12, 6
  %14 = getelementptr inbounds %"class.WTF::HashTable.5", %"class.WTF::HashTable.5"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %13, %15
  %17 = icmp ugt i32 %15, 8
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %48

19:                                               ; preds = %2
  %20 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %21 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %20, i64 0, i32 1
  %22 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %21) #10
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %26, !prof !3

24:                                               ; preds = %19
  %25 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %21, i8* %25) #10
  br label %26

26:                                               ; preds = %24, %19
  %27 = phi i8* [ %25, %24 ], [ %22, %19 ]
  %28 = bitcast i8* %27 to %"class.blink::ThreadState"**
  %29 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 6
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 16
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %48, label %37

37:                                               ; preds = %26, %33
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 13
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %48

41:                                               ; preds = %37
  %42 = load i32, i32* %14, align 8
  %43 = lshr i32 %42, 1
  %44 = zext i32 %43 to i64
  %45 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_30InspectorResourceContentLoader14ResourceClientEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm(i64 %44) #10
  %46 = bitcast %"class.blink::HeapHashTableBacking"* %45 to %"class.blink::Member.7"*
  %47 = tail call %"class.blink::Member.7"* @_ZN3WTF9HashTableIN5blink6MemberINS1_30InspectorResourceContentLoader14ResourceClientEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.5"* %0, %"class.blink::Member.7"* %46, i32 %43, %"class.blink::Member.7"* null) #10
  br label %48

48:                                               ; preds = %33, %2, %41, %37
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{i32 24, i32 33}
