; ModuleID = '../../third_party/dawn/src/dawn_native/XlibXcbFunctions.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/XlibXcbFunctions.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.dawn_native::XlibXcbFunctions" = type { %struct.xcb_connection_t* (%struct._XDisplay*)*, %class.DynamicLib }
%struct.xcb_connection_t = type opaque
%struct._XDisplay = type opaque
%class.DynamicLib = type { i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [16 x i8] c"libX11-xcb.so.1\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"XGetXCBConnection\00", align 1

@_ZN11dawn_native16XlibXcbFunctionsC1Ev = hidden unnamed_addr alias void (%"class.dawn_native::XlibXcbFunctions"*), void (%"class.dawn_native::XlibXcbFunctions"*)* @_ZN11dawn_native16XlibXcbFunctionsC2Ev
@_ZN11dawn_native16XlibXcbFunctionsD1Ev = hidden unnamed_addr alias void (%"class.dawn_native::XlibXcbFunctions"*), void (%"class.dawn_native::XlibXcbFunctions"*)* @_ZN11dawn_native16XlibXcbFunctionsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native16XlibXcbFunctionsC2Ev(%"class.dawn_native::XlibXcbFunctions"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.dawn_native::XlibXcbFunctions", %"class.dawn_native::XlibXcbFunctions"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %6 = bitcast %"class.dawn_native::XlibXcbFunctions"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #6
  %7 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 15, i8* %8, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i64 15, i1 false) #6
  %9 = getelementptr inbounds i8, i8* %5, i64 15
  store i8 0, i8* %9, align 1
  %10 = call zeroext i1 @_ZN10DynamicLib4OpenERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_(%class.DynamicLib* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, %"class.std::__1::basic_string"* null) #6
  br i1 %10, label %11, label %25

11:                                               ; preds = %1
  %12 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #6
  %13 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  store i8 17, i8* %14, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 1 getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i64 17, i1 false) #6
  %15 = getelementptr inbounds i8, i8* %12, i64 17
  store i8 0, i8* %15, align 1
  %16 = call i8* @_ZNK10DynamicLib7GetProcERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_(%class.DynamicLib* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, %"class.std::__1::basic_string"* null) #6
  %17 = bitcast %"class.dawn_native::XlibXcbFunctions"* %0 to i8**
  store i8* %16, i8** %17, align 8
  %18 = icmp eq i8* %16, null
  %19 = load i8, i8* %14, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %23) #7
  br label %24

24:                                               ; preds = %11, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #6
  br label %25

25:                                               ; preds = %1, %24
  %26 = phi i1 [ %18, %24 ], [ true, %1 ]
  %27 = load i8, i8* %8, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #7
  br label %32

32:                                               ; preds = %25, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #6
  br i1 %26, label %33, label %34

33:                                               ; preds = %32
  call void @_ZN10DynamicLib5CloseEv(%class.DynamicLib* %4) #6
  br label %34

34:                                               ; preds = %33, %32
  ret void
}

declare zeroext i1 @_ZN10DynamicLib4OpenERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_(%class.DynamicLib*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN10DynamicLib5CloseEv(%class.DynamicLib*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native16XlibXcbFunctionsD2Ev(%"class.dawn_native::XlibXcbFunctions"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::XlibXcbFunctions", %"class.dawn_native::XlibXcbFunctions"* %0, i64 0, i32 1
  tail call void @_ZN10DynamicLibD1Ev(%class.DynamicLib* %2) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN10DynamicLibD1Ev(%class.DynamicLib*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK11dawn_native16XlibXcbFunctions8IsLoadedEv(%"class.dawn_native::XlibXcbFunctions"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::XlibXcbFunctions", %"class.dawn_native::XlibXcbFunctions"* %0, i64 0, i32 0
  %3 = load %struct.xcb_connection_t* (%struct._XDisplay*)*, %struct.xcb_connection_t* (%struct._XDisplay*)** %2, align 8
  %4 = icmp ne %struct.xcb_connection_t* (%struct._XDisplay*)* %3, null
  ret i1 %4
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i8* @_ZNK10DynamicLib7GetProcERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_(%class.DynamicLib*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
