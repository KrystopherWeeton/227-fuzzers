; ModuleID = '../../third_party/libwebp/src/utils/filters_utils.c'
source_filename = "../../third_party/libwebp/src/utils/filters_utils.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @WebPEstimateBestFilter(i8* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %5 = alloca [4 x [16 x i32]], align 16
  %6 = bitcast [4 x [16 x i32]]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %6) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 0, i64 256, i1 false)
  %7 = add nsw i32 %2, -1
  %8 = icmp sgt i32 %7, 2
  br i1 %8, label %9, label %84

9:                                                ; preds = %4
  %10 = add nsw i32 %1, -1
  %11 = icmp sgt i32 %10, 2
  %12 = sext i32 %1 to i64
  %13 = sext i32 %10 to i64
  %14 = sext i32 %3 to i64
  %15 = sext i32 %7 to i64
  br label %16

16:                                               ; preds = %9, %81
  %17 = phi i64 [ 2, %9 ], [ %82, %81 ]
  %18 = mul nsw i64 %17, %14
  %19 = getelementptr inbounds i8, i8* %0, i64 %18
  br i1 %11, label %20, label %81

20:                                               ; preds = %16
  %21 = load i8, i8* %19, align 1
  %22 = zext i8 %21 to i32
  br label %23

23:                                               ; preds = %20, %23
  %24 = phi i64 [ 2, %20 ], [ %79, %23 ]
  %25 = phi i32 [ %22, %20 ], [ %78, %23 ]
  %26 = getelementptr inbounds i8, i8* %19, i64 %24
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = sub nsw i32 %28, %25
  %30 = icmp slt i32 %29, 0
  %31 = sub nsw i32 0, %29
  %32 = select i1 %30, i32 %31, i32 %29
  %33 = lshr i32 %32, 4
  %34 = add nsw i64 %24, -1
  %35 = getelementptr inbounds i8, i8* %19, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = sub nsw i32 %28, %37
  %39 = icmp slt i32 %38, 0
  %40 = sub nsw i32 0, %38
  %41 = select i1 %39, i32 %40, i32 %38
  %42 = lshr i32 %41, 4
  %43 = sub nsw i64 %24, %12
  %44 = getelementptr inbounds i8, i8* %19, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = sub nsw i32 %28, %46
  %48 = icmp slt i32 %47, 0
  %49 = sub nsw i32 0, %47
  %50 = select i1 %48, i32 %49, i32 %47
  %51 = lshr i32 %50, 4
  %52 = add nsw i64 %43, -1
  %53 = getelementptr inbounds i8, i8* %19, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = add nuw nsw i32 %46, %37
  %56 = zext i8 %54 to i32
  %57 = sub nsw i32 %55, %56
  %58 = icmp ult i32 %57, 256
  %59 = icmp slt i32 %57, 0
  %60 = select i1 %59, i32 0, i32 255
  %61 = select i1 %58, i32 %57, i32 %60
  %62 = sub nsw i32 %28, %61
  %63 = icmp slt i32 %62, 0
  %64 = sub nsw i32 0, %62
  %65 = select i1 %63, i32 %64, i32 %62
  %66 = lshr i32 %65, 4
  %67 = zext i32 %33 to i64
  %68 = getelementptr inbounds [4 x [16 x i32]], [4 x [16 x i32]]* %5, i64 0, i64 0, i64 %67
  store i32 1, i32* %68, align 4
  %69 = zext i32 %42 to i64
  %70 = getelementptr inbounds [4 x [16 x i32]], [4 x [16 x i32]]* %5, i64 0, i64 1, i64 %69
  store i32 1, i32* %70, align 4
  %71 = zext i32 %51 to i64
  %72 = getelementptr inbounds [4 x [16 x i32]], [4 x [16 x i32]]* %5, i64 0, i64 2, i64 %71
  store i32 1, i32* %72, align 4
  %73 = zext i32 %66 to i64
  %74 = getelementptr inbounds [4 x [16 x i32]], [4 x [16 x i32]]* %5, i64 0, i64 3, i64 %73
  store i32 1, i32* %74, align 4
  %75 = mul nsw i32 %25, 3
  %76 = add i32 %75, 2
  %77 = add i32 %76, %28
  %78 = ashr i32 %77, 2
  %79 = add nuw nsw i64 %24, 2
  %80 = icmp slt i64 %79, %13
  br i1 %80, label %23, label %81

81:                                               ; preds = %23, %16
  %82 = add nuw nsw i64 %17, 2
  %83 = icmp slt i64 %82, %15
  br i1 %83, label %16, label %84

84:                                               ; preds = %81, %4
  br label %85

85:                                               ; preds = %84, %85
  %86 = phi i64 [ %167, %85 ], [ 0, %84 ]
  %87 = phi i32 [ %166, %85 ], [ 2147483647, %84 ]
  %88 = phi i32 [ %165, %85 ], [ 0, %84 ]
  %89 = getelementptr inbounds [4 x [16 x i32]], [4 x [16 x i32]]* %5, i64 0, i64 %86, i64 1
  %90 = load i32, i32* %89, align 4
  %91 = icmp sgt i32 %90, 0
  %92 = zext i1 %91 to i32
  %93 = getelementptr inbounds [4 x [16 x i32]], [4 x [16 x i32]]* %5, i64 0, i64 %86, i64 2
  %94 = load i32, i32* %93, align 8
  %95 = icmp sgt i32 %94, 0
  %96 = select i1 %95, i32 2, i32 0
  %97 = or i32 %96, %92
  %98 = getelementptr inbounds [4 x [16 x i32]], [4 x [16 x i32]]* %5, i64 0, i64 %86, i64 3
  %99 = load i32, i32* %98, align 4
  %100 = icmp sgt i32 %99, 0
  %101 = select i1 %100, i32 3, i32 0
  %102 = add nuw nsw i32 %101, %97
  %103 = getelementptr inbounds [4 x [16 x i32]], [4 x [16 x i32]]* %5, i64 0, i64 %86, i64 4
  %104 = load i32, i32* %103, align 16
  %105 = icmp sgt i32 %104, 0
  %106 = select i1 %105, i32 4, i32 0
  %107 = add nuw nsw i32 %106, %102
  %108 = getelementptr inbounds [4 x [16 x i32]], [4 x [16 x i32]]* %5, i64 0, i64 %86, i64 5
  %109 = load i32, i32* %108, align 4
  %110 = icmp sgt i32 %109, 0
  %111 = select i1 %110, i32 5, i32 0
  %112 = add nuw nsw i32 %111, %107
  %113 = getelementptr inbounds [4 x [16 x i32]], [4 x [16 x i32]]* %5, i64 0, i64 %86, i64 6
  %114 = load i32, i32* %113, align 8
  %115 = icmp sgt i32 %114, 0
  %116 = select i1 %115, i32 6, i32 0
  %117 = add nuw nsw i32 %116, %112
  %118 = getelementptr inbounds [4 x [16 x i32]], [4 x [16 x i32]]* %5, i64 0, i64 %86, i64 7
  %119 = load i32, i32* %118, align 4
  %120 = icmp sgt i32 %119, 0
  %121 = select i1 %120, i32 7, i32 0
  %122 = add nuw nsw i32 %121, %117
  %123 = getelementptr inbounds [4 x [16 x i32]], [4 x [16 x i32]]* %5, i64 0, i64 %86, i64 8
  %124 = load i32, i32* %123, align 16
  %125 = icmp sgt i32 %124, 0
  %126 = select i1 %125, i32 8, i32 0
  %127 = add nuw nsw i32 %126, %122
  %128 = getelementptr inbounds [4 x [16 x i32]], [4 x [16 x i32]]* %5, i64 0, i64 %86, i64 9
  %129 = load i32, i32* %128, align 4
  %130 = icmp sgt i32 %129, 0
  %131 = select i1 %130, i32 9, i32 0
  %132 = add nuw nsw i32 %131, %127
  %133 = getelementptr inbounds [4 x [16 x i32]], [4 x [16 x i32]]* %5, i64 0, i64 %86, i64 10
  %134 = load i32, i32* %133, align 8
  %135 = icmp sgt i32 %134, 0
  %136 = select i1 %135, i32 10, i32 0
  %137 = add nuw nsw i32 %136, %132
  %138 = getelementptr inbounds [4 x [16 x i32]], [4 x [16 x i32]]* %5, i64 0, i64 %86, i64 11
  %139 = load i32, i32* %138, align 4
  %140 = icmp sgt i32 %139, 0
  %141 = select i1 %140, i32 11, i32 0
  %142 = add nuw nsw i32 %141, %137
  %143 = getelementptr inbounds [4 x [16 x i32]], [4 x [16 x i32]]* %5, i64 0, i64 %86, i64 12
  %144 = load i32, i32* %143, align 16
  %145 = icmp sgt i32 %144, 0
  %146 = select i1 %145, i32 12, i32 0
  %147 = add nuw nsw i32 %146, %142
  %148 = getelementptr inbounds [4 x [16 x i32]], [4 x [16 x i32]]* %5, i64 0, i64 %86, i64 13
  %149 = load i32, i32* %148, align 4
  %150 = icmp sgt i32 %149, 0
  %151 = select i1 %150, i32 13, i32 0
  %152 = add nuw nsw i32 %151, %147
  %153 = getelementptr inbounds [4 x [16 x i32]], [4 x [16 x i32]]* %5, i64 0, i64 %86, i64 14
  %154 = load i32, i32* %153, align 8
  %155 = icmp sgt i32 %154, 0
  %156 = select i1 %155, i32 14, i32 0
  %157 = add nuw nsw i32 %156, %152
  %158 = getelementptr inbounds [4 x [16 x i32]], [4 x [16 x i32]]* %5, i64 0, i64 %86, i64 15
  %159 = load i32, i32* %158, align 4
  %160 = icmp sgt i32 %159, 0
  %161 = select i1 %160, i32 15, i32 0
  %162 = add nuw nsw i32 %161, %157
  %163 = icmp slt i32 %162, %87
  %164 = trunc i64 %86 to i32
  %165 = select i1 %163, i32 %164, i32 %88
  %166 = select i1 %163, i32 %162, i32 %87
  %167 = add nuw nsw i64 %86, 1
  %168 = icmp eq i64 %167, 4
  br i1 %168, label %169, label %85

169:                                              ; preds = %85
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %6) #2
  ret i32 %165
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
