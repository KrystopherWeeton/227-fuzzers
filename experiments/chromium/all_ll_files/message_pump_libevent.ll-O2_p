; ModuleID = '../../base/message_loop/message_pump_libevent.cc'
source_filename = "../../base/message_loop/message_pump_libevent.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::MessagePumpLibevent::FdWatchController" = type { %"class.base::WatchableIOMessagePumpPosix::FdWatchControllerInterface", %"class.std::__1::unique_ptr", %"class.base::MessagePumpLibevent"*, %"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i8* }
%"class.base::WatchableIOMessagePumpPosix::FdWatchControllerInterface" = type { i32 (...)**, %"class.base::Location" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.event* }
%struct.event = type { %struct.anon, %struct.anon.0, %struct.anon.1, i32, %struct.event_base*, i32, i16, i16, i16*, %struct.timeval, i32, void (i32, i16, i8*)*, i8*, i32, i32 }
%struct.anon = type { %struct.event*, %struct.event** }
%struct.anon.0 = type { %struct.event*, %struct.event** }
%struct.anon.1 = type { %struct.event*, %struct.event** }
%struct.event_base = type opaque
%struct.timeval = type { i64, i64 }
%"class.base::MessagePumpLibevent" = type <{ %"class.base::MessagePump", %"struct.base::MessagePumpLibevent::RunState"*, i8, [7 x i8], %struct.event_base*, i32, i32, %struct.event*, %"class.base::ThreadChecker", [7 x i8] }>
%"class.base::MessagePump" = type { i32 (...)** }
%"struct.base::MessagePumpLibevent::RunState" = type <{ %"class.base::MessagePump::Delegate"*, i8, [7 x i8] }>
%"class.base::MessagePump::Delegate" = type { i32 (...)** }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::WatchableIOMessagePumpPosix::FdWatcher" = type { i32 (...)** }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.7", i64, i64 }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.18" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i64 }
%"class.base::trace_event::AllocationContextTracker" = type <{ %"class.std::__1::vector.23", i8*, %"class.std::__1::vector.30", i32, [4 x i8] }>
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"struct.base::trace_event::StackFrame"*, %"struct.base::trace_event::StackFrame"*, %"class.std::__1::__compressed_pair.25" }
%"struct.base::trace_event::StackFrame" = type { i32, i8* }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.base::trace_event::StackFrame"* }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { i8**, i8**, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { i8** }

$_ZN20trace_event_internal13AddTraceEventIRiEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_ = comdat any

@_ZTVN4base19MessagePumpLibevent17FdWatchControllerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::MessagePumpLibevent::FdWatchController"*)* @_ZN4base19MessagePumpLibevent17FdWatchControllerD2Ev to i8*), i8* bitcast (void (%"class.base::MessagePumpLibevent::FdWatchController"*)* @_ZN4base19MessagePumpLibevent17FdWatchControllerD0Ev to i8*), i8* bitcast (i1 (%"class.base::MessagePumpLibevent::FdWatchController"*)* @_ZN4base19MessagePumpLibevent17FdWatchController26StopWatchingFileDescriptorEv to i8*)] }, align 8
@.str = private unnamed_addr constant [49 x i8] c"../../base/message_loop/message_pump_libevent.cc\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"StopWatchingFileDescriptor()\00", align 1
@_ZTVN4base19MessagePumpLibeventE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::MessagePumpLibevent"*)* @_ZN4base19MessagePumpLibeventD2Ev to i8*), i8* bitcast (void (%"class.base::MessagePumpLibevent"*)* @_ZN4base19MessagePumpLibeventD0Ev to i8*), i8* bitcast (void (%"class.base::MessagePumpLibevent"*, %"class.base::MessagePump::Delegate"*)* @_ZN4base19MessagePumpLibevent3RunEPNS_11MessagePump8DelegateE to i8*), i8* bitcast (void (%"class.base::MessagePumpLibevent"*)* @_ZN4base19MessagePumpLibevent4QuitEv to i8*), i8* bitcast (void (%"class.base::MessagePumpLibevent"*)* @_ZN4base19MessagePumpLibevent12ScheduleWorkEv to i8*), i8* bitcast (void (%"class.base::MessagePumpLibevent"*, %"class.base::TimeTicks"*)* @_ZN4base19MessagePumpLibevent19ScheduleDelayedWorkERKNS_9TimeTicksE to i8*), i8* bitcast (void (%"class.base::MessagePump"*, i32)* @_ZN4base11MessagePump13SetTimerSlackENS_10TimerSlackE to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.2 = private unnamed_addr constant [41 x i8] c"MessagePumpLibevent::WatchFileDescriptor\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"fd\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"OnLibevent\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"MessagePumpLibevent::OnLibeventNotification\00", align 1
@_ZN4base11trace_event24AllocationContextTracker13capture_mode_E = external local_unnamed_addr global %"struct.std::__1::atomic", align 4

@_ZN4base19MessagePumpLibevent17FdWatchControllerC1ERKNS_8LocationE = hidden unnamed_addr alias void (%"class.base::MessagePumpLibevent::FdWatchController"*, %"class.base::Location"*), void (%"class.base::MessagePumpLibevent::FdWatchController"*, %"class.base::Location"*)* @_ZN4base19MessagePumpLibevent17FdWatchControllerC2ERKNS_8LocationE
@_ZN4base19MessagePumpLibevent17FdWatchControllerD1Ev = hidden unnamed_addr alias void (%"class.base::MessagePumpLibevent::FdWatchController"*), void (%"class.base::MessagePumpLibevent::FdWatchController"*)* @_ZN4base19MessagePumpLibevent17FdWatchControllerD2Ev
@_ZN4base19MessagePumpLibeventC1Ev = hidden unnamed_addr alias void (%"class.base::MessagePumpLibevent"*), void (%"class.base::MessagePumpLibevent"*)* @_ZN4base19MessagePumpLibeventC2Ev
@_ZN4base19MessagePumpLibeventD1Ev = hidden unnamed_addr alias void (%"class.base::MessagePumpLibevent"*), void (%"class.base::MessagePumpLibevent"*)* @_ZN4base19MessagePumpLibeventD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19MessagePumpLibevent17FdWatchControllerC2ERKNS_8LocationE(%"class.base::MessagePumpLibevent::FdWatchController"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::MessagePumpLibevent::FdWatchController", %"class.base::MessagePumpLibevent::FdWatchController"* %0, i64 0, i32 0
  tail call void @_ZN4base27WatchableIOMessagePumpPosix26FdWatchControllerInterfaceC2ERKNS_8LocationE(%"class.base::WatchableIOMessagePumpPosix::FdWatchControllerInterface"* %3, %"class.base::Location"* dereferenceable(32) %1) #11
  %4 = getelementptr inbounds %"class.base::MessagePumpLibevent::FdWatchController", %"class.base::MessagePumpLibevent::FdWatchController"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base19MessagePumpLibevent17FdWatchControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.base::MessagePumpLibevent::FdWatchController", %"class.base::MessagePumpLibevent::FdWatchController"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false)
  ret void
}

declare void @_ZN4base27WatchableIOMessagePumpPosix26FdWatchControllerInterfaceC2ERKNS_8LocationE(%"class.base::WatchableIOMessagePumpPosix::FdWatchControllerInterface"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19MessagePumpLibevent17FdWatchControllerD2Ev(%"class.base::MessagePumpLibevent::FdWatchController"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::MessagePumpLibevent::FdWatchController", %"class.base::MessagePumpLibevent::FdWatchController"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base19MessagePumpLibevent17FdWatchControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.base::MessagePumpLibevent::FdWatchController", %"class.base::MessagePumpLibevent::FdWatchController"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %struct.event*, %struct.event** %4, align 8
  %6 = icmp eq %struct.event* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %1
  store %struct.event* null, %struct.event** %4, align 8
  %8 = tail call i32 @event_del(%struct.event* nonnull %5) #11
  %9 = getelementptr inbounds %"class.base::MessagePumpLibevent::FdWatchController", %"class.base::MessagePumpLibevent::FdWatchController"* %0, i64 0, i32 2
  %10 = icmp eq i32 %8, 0
  %11 = bitcast %struct.event* %5 to i8*
  %12 = bitcast %"class.base::MessagePumpLibevent"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  tail call void @_ZdlPv(i8* %11) #12
  br i1 %10, label %16, label %13

13:                                               ; preds = %7
  %14 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 47, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0)) #11
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  br label %16

16:                                               ; preds = %1, %13, %7
  %17 = getelementptr inbounds %"class.base::MessagePumpLibevent::FdWatchController", %"class.base::MessagePumpLibevent::FdWatchController"* %0, i64 0, i32 4
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  store i8 1, i8* %18, align 1
  br label %21

21:                                               ; preds = %16, %20
  %22 = load %struct.event*, %struct.event** %4, align 8
  store %struct.event* null, %struct.event** %4, align 8
  %23 = icmp eq %struct.event* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %21
  %25 = bitcast %struct.event* %22 to i8*
  call void @_ZdlPv(i8* %25) #12
  br label %26

26:                                               ; preds = %21, %24
  %27 = getelementptr inbounds %"class.base::MessagePumpLibevent::FdWatchController", %"class.base::MessagePumpLibevent::FdWatchController"* %0, i64 0, i32 0
  call void @_ZN4base27WatchableIOMessagePumpPosix26FdWatchControllerInterfaceD2Ev(%"class.base::WatchableIOMessagePumpPosix::FdWatchControllerInterface"* %27) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZN4base27WatchableIOMessagePumpPosix26FdWatchControllerInterfaceD2Ev(%"class.base::WatchableIOMessagePumpPosix::FdWatchControllerInterface"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19MessagePumpLibevent17FdWatchControllerD0Ev(%"class.base::MessagePumpLibevent::FdWatchController"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4base19MessagePumpLibevent17FdWatchControllerD2Ev(%"class.base::MessagePumpLibevent::FdWatchController"* %0) #11
  %2 = bitcast %"class.base::MessagePumpLibevent::FdWatchController"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base19MessagePumpLibevent17FdWatchController26StopWatchingFileDescriptorEv(%"class.base::MessagePumpLibevent::FdWatchController"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::MessagePumpLibevent::FdWatchController", %"class.base::MessagePumpLibevent::FdWatchController"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %struct.event*, %struct.event** %2, align 8
  store %struct.event* null, %struct.event** %2, align 8
  %4 = icmp eq %struct.event* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = tail call i32 @event_del(%struct.event* nonnull %3) #11
  %7 = getelementptr inbounds %"class.base::MessagePumpLibevent::FdWatchController", %"class.base::MessagePumpLibevent::FdWatchController"* %0, i64 0, i32 2
  %8 = icmp eq i32 %6, 0
  %9 = bitcast %struct.event* %3 to i8*
  %10 = bitcast %"class.base::MessagePumpLibevent"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false)
  tail call void @_ZdlPv(i8* %9) #12
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i1 [ %8, %5 ], [ true, %1 ]
  ret i1 %12
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.event* @_ZN4base19MessagePumpLibevent17FdWatchController12ReleaseEventEv(%"class.base::MessagePumpLibevent::FdWatchController"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.base::MessagePumpLibevent::FdWatchController", %"class.base::MessagePumpLibevent::FdWatchController"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %struct.event*, %struct.event** %2, align 8
  store %struct.event* null, %struct.event** %2, align 8
  ret %struct.event* %3
}

declare i32 @event_del(%struct.event*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19MessagePumpLibevent17FdWatchController4InitENSt3__110unique_ptrI5eventNS2_14default_deleteIS4_EEEE(%"class.base::MessagePumpLibevent::FdWatchController"* nocapture, %struct.event*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %struct.event* %1 to i64
  %4 = getelementptr inbounds %"class.base::MessagePumpLibevent::FdWatchController", %"class.base::MessagePumpLibevent::FdWatchController"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %struct.event*, %struct.event** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %struct.event* %6, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = bitcast %struct.event* %6 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19MessagePumpLibevent17FdWatchController28OnFileCanReadWithoutBlockingEiPS0_(%"class.base::MessagePumpLibevent::FdWatchController"* nocapture readonly, i32, %"class.base::MessagePumpLibevent"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::MessagePumpLibevent::FdWatchController", %"class.base::MessagePumpLibevent::FdWatchController"* %0, i64 0, i32 3
  %5 = load %"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, %"class.base::WatchableIOMessagePumpPosix::FdWatcher"** %4, align 8
  %6 = icmp eq %"class.base::WatchableIOMessagePumpPosix::FdWatcher"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.base::WatchableIOMessagePumpPosix::FdWatcher"* %5 to void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)***
  %9 = load void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)**, void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)*** %8, align 8
  %10 = load void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)*, void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)** %9, align 8
  tail call void %10(%"class.base::WatchableIOMessagePumpPosix::FdWatcher"* nonnull %5, i32 %1) #11
  br label %11

11:                                               ; preds = %3, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19MessagePumpLibevent17FdWatchController29OnFileCanWriteWithoutBlockingEiPS0_(%"class.base::MessagePumpLibevent::FdWatchController"* nocapture readonly, i32, %"class.base::MessagePumpLibevent"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::MessagePumpLibevent::FdWatchController", %"class.base::MessagePumpLibevent::FdWatchController"* %0, i64 0, i32 3
  %5 = load %"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, %"class.base::WatchableIOMessagePumpPosix::FdWatcher"** %4, align 8
  %6 = bitcast %"class.base::WatchableIOMessagePumpPosix::FdWatcher"* %5 to void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)***
  %7 = load void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)**, void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)*, void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)** %7, i64 1
  %9 = load void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)*, void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)** %8, align 8
  tail call void %9(%"class.base::WatchableIOMessagePumpPosix::FdWatcher"* %5, i32 %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19MessagePumpLibeventC2Ev(%"class.base::MessagePumpLibevent"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::MessagePumpLibevent", %"class.base::MessagePumpLibevent"* %0, i64 0, i32 0
  tail call void @_ZN4base11MessagePumpC2Ev(%"class.base::MessagePump"* %2) #11
  %3 = getelementptr inbounds %"class.base::MessagePumpLibevent", %"class.base::MessagePumpLibevent"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4base19MessagePumpLibeventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.base::MessagePumpLibevent", %"class.base::MessagePumpLibevent"* %0, i64 0, i32 1
  store %"struct.base::MessagePumpLibevent::RunState"* null, %"struct.base::MessagePumpLibevent::RunState"** %4, align 8
  %5 = getelementptr inbounds %"class.base::MessagePumpLibevent", %"class.base::MessagePumpLibevent"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.base::MessagePumpLibevent", %"class.base::MessagePumpLibevent"* %0, i64 0, i32 4
  %7 = tail call %struct.event_base* @event_base_new() #11
  store %struct.event_base* %7, %struct.event_base** %6, align 8
  %8 = getelementptr inbounds %"class.base::MessagePumpLibevent", %"class.base::MessagePumpLibevent"* %0, i64 0, i32 5
  store i32 -1, i32* %8, align 8
  %9 = getelementptr inbounds %"class.base::MessagePumpLibevent", %"class.base::MessagePumpLibevent"* %0, i64 0, i32 6
  store i32 -1, i32* %9, align 4
  %10 = getelementptr inbounds %"class.base::MessagePumpLibevent", %"class.base::MessagePumpLibevent"* %0, i64 0, i32 7
  store %struct.event* null, %struct.event** %10, align 8
  %11 = tail call zeroext i1 @_ZN4base19MessagePumpLibevent4InitEv(%"class.base::MessagePumpLibevent"* %0)
  ret void
}

declare void @_ZN4base11MessagePumpC2Ev(%"class.base::MessagePump"*) unnamed_addr #1

declare %struct.event_base* @event_base_new() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base19MessagePumpLibevent4InitEv(%"class.base::MessagePumpLibevent"*) local_unnamed_addr #0 align 2 {
  %2 = alloca [2 x i32], align 4
  %3 = bitcast [2 x i32]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #11
  %4 = getelementptr inbounds [2 x i32], [2 x i32]* %2, i64 0, i64 0
  store i32 -1431655766, i32* %4, align 4
  %5 = getelementptr inbounds [2 x i32], [2 x i32]* %2, i64 0, i64 1
  store i32 -1431655766, i32* %5, align 4
  %6 = call zeroext i1 @_ZN4base26CreateLocalNonBlockingPipeEPi(i32* nonnull %4) #11
  br i1 %6, label %7, label %24

7:                                                ; preds = %1
  %8 = load i32, i32* %4, align 4
  %9 = getelementptr inbounds %"class.base::MessagePumpLibevent", %"class.base::MessagePumpLibevent"* %0, i64 0, i32 6
  store i32 %8, i32* %9, align 4
  %10 = load i32, i32* %5, align 4
  %11 = getelementptr inbounds %"class.base::MessagePumpLibevent", %"class.base::MessagePumpLibevent"* %0, i64 0, i32 5
  store i32 %10, i32* %11, align 8
  %12 = call i8* @_Znwm(i64 128) #12
  %13 = bitcast i8* %12 to %struct.event*
  %14 = getelementptr inbounds %"class.base::MessagePumpLibevent", %"class.base::MessagePumpLibevent"* %0, i64 0, i32 7
  %15 = bitcast %struct.event** %14 to i8**
  store i8* %12, i8** %15, align 8
  %16 = bitcast %"class.base::MessagePumpLibevent"* %0 to i8*
  call void @event_set(%struct.event* nonnull %13, i32 %8, i16 signext 18, void (i32, i16, i8*)* nonnull @_ZN4base19MessagePumpLibevent8OnWakeupEisPv, i8* %16) #11
  %17 = getelementptr inbounds %"class.base::MessagePumpLibevent", %"class.base::MessagePumpLibevent"* %0, i64 0, i32 4
  %18 = load %struct.event_base*, %struct.event_base** %17, align 8
  %19 = load %struct.event*, %struct.event** %14, align 8
  %20 = call i32 @event_base_set(%struct.event_base* %18, %struct.event* %19) #11
  %21 = load %struct.event*, %struct.event** %14, align 8
  %22 = call i32 @event_add(%struct.event* %21, %struct.timeval* null) #11
  %23 = icmp eq i32 %22, 0
  br label %24

24:                                               ; preds = %7, %1
  %25 = phi i1 [ false, %1 ], [ %23, %7 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #11
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19MessagePumpLibeventD2Ev(%"class.base::MessagePumpLibevent"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::MessagePumpLibevent", %"class.base::MessagePumpLibevent"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4base19MessagePumpLibeventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::MessagePumpLibevent", %"class.base::MessagePumpLibevent"* %0, i64 0, i32 7
  %4 = load %struct.event*, %struct.event** %3, align 8
  %5 = tail call i32 @event_del(%struct.event* %4) #11
  %6 = load %struct.event*, %struct.event** %3, align 8
  %7 = icmp eq %struct.event* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast %struct.event* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %8, %1
  %11 = getelementptr inbounds %"class.base::MessagePumpLibevent", %"class.base::MessagePumpLibevent"* %0, i64 0, i32 5
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, -1
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  %15 = tail call i32 @close(i32 %12) #11
  br label %16

16:                                               ; preds = %14, %10
  %17 = getelementptr inbounds %"class.base::MessagePumpLibevent", %"class.base::MessagePumpLibevent"* %0, i64 0, i32 6
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, -1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = tail call i32 @close(i32 %18) #11
  br label %22

22:                                               ; preds = %20, %16
  %23 = getelementptr inbounds %"class.base::MessagePumpLibevent", %"class.base::MessagePumpLibevent"* %0, i64 0, i32 4
  %24 = load %struct.event_base*, %struct.event_base** %23, align 8
  tail call void @event_base_free(%struct.event_base* %24) #11
  %25 = getelementptr inbounds %"class.base::MessagePumpLibevent", %"class.base::MessagePumpLibevent"* %0, i64 0, i32 0
  tail call void @_ZN4base11MessagePumpD2Ev(%"class.base::MessagePump"* %25) #11
  ret void
}

declare i32 @close(i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #6

declare void @event_base_free(%struct.event_base*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base11MessagePumpD2Ev(%"class.base::MessagePump"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19MessagePumpLibeventD0Ev(%"class.base::MessagePumpLibevent"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4base19MessagePumpLibeventD2Ev(%"class.base::MessagePumpLibevent"* %0) #11
  %2 = bitcast %"class.base::MessagePumpLibevent"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base19MessagePumpLibevent19WatchFileDescriptorEibiPNS0_17FdWatchControllerEPNS_27WatchableIOMessagePumpPosix9FdWatcherE(%"class.base::MessagePumpLibevent"*, i32, i1 zeroext, i32, %"class.base::MessagePumpLibevent::FdWatchController"*, %"class.base::WatchableIOMessagePumpPosix::FdWatcher"*) local_unnamed_addr #0 align 2 {
  %7 = alloca i32, align 4
  store i32 %1, i32* %7, align 4
  %8 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 128, i32 0), align 16
  %9 = and i8 %8, 25
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %16, label %11, !prof !2

11:                                               ; preds = %6
  %12 = ptrtoint %"class.base::MessagePumpLibevent::FdWatchController"* %4 to i64
  %13 = sext i32 %1 to i64
  %14 = xor i64 %12, %13
  %15 = call i64 @_ZN20trace_event_internal13AddTraceEventIRiEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 128, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i32 258, i64 %14, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* nonnull dereferenceable(4) %7)
  br label %16

16:                                               ; preds = %6, %11
  %17 = phi i8* [ null, %6 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 128, i32 0), %11 ]
  %18 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %6 ], [ getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0), %11 ]
  %19 = phi i64 [ -6148914691236517206, %6 ], [ %15, %11 ]
  %20 = select i1 %2, i32 16, i32 0
  %21 = shl i32 %3, 1
  %22 = and i32 %21, 2
  %23 = or i32 %22, %20
  %24 = and i32 %21, 4
  %25 = or i32 %23, %24
  %26 = getelementptr inbounds %"class.base::MessagePumpLibevent::FdWatchController", %"class.base::MessagePumpLibevent::FdWatchController"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %27 = load %struct.event*, %struct.event** %26, align 8
  store %struct.event* null, %struct.event** %26, align 8
  %28 = ptrtoint %struct.event* %27 to i64
  %29 = icmp eq %struct.event* %27, null
  br i1 %29, label %30, label %34

30:                                               ; preds = %16
  %31 = call i8* @_Znwm(i64 128) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %31, i8 0, i64 128, i1 false) #11
  %32 = ptrtoint i8* %31 to i64
  %33 = load i32, i32* %7, align 4
  br label %45

34:                                               ; preds = %16
  %35 = getelementptr inbounds %struct.event, %struct.event* %27, i64 0, i32 6
  %36 = load i16, i16* %35, align 4
  %37 = and i16 %36, 22
  %38 = zext i16 %37 to i32
  %39 = or i32 %25, %38
  %40 = call i32 @event_del(%struct.event* nonnull %27) #11
  %41 = getelementptr inbounds %struct.event, %struct.event* %27, i64 0, i32 5
  %42 = load i32, i32* %41, align 8
  %43 = load i32, i32* %7, align 4
  %44 = icmp eq i32 %42, %43
  br i1 %44, label %45, label %70

45:                                               ; preds = %34, %30
  %46 = phi i32 [ %42, %34 ], [ %33, %30 ]
  %47 = phi i64 [ %28, %34 ], [ %32, %30 ]
  %48 = phi i32 [ %39, %34 ], [ %25, %30 ]
  %49 = inttoptr i64 %47 to %struct.event*
  %50 = trunc i32 %48 to i16
  %51 = bitcast %"class.base::MessagePumpLibevent::FdWatchController"* %4 to i8*
  call void @event_set(%struct.event* %49, i32 %46, i16 signext %50, void (i32, i16, i8*)* nonnull @_ZN4base19MessagePumpLibevent22OnLibeventNotificationEisPv, i8* %51) #11
  %52 = getelementptr inbounds %"class.base::MessagePumpLibevent", %"class.base::MessagePumpLibevent"* %0, i64 0, i32 4
  %53 = load %struct.event_base*, %struct.event_base** %52, align 8
  %54 = call i32 @event_base_set(%struct.event_base* %53, %struct.event* %49) #11
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %70

56:                                               ; preds = %45
  %57 = call i32 @event_add(%struct.event* %49, %struct.timeval* null) #11
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %70

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.base::MessagePumpLibevent::FdWatchController", %"class.base::MessagePumpLibevent::FdWatchController"* %4, i64 0, i32 1
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %struct.event*, %struct.event** %61, align 8
  %63 = bitcast %"class.std::__1::unique_ptr"* %60 to i64*
  store i64 %47, i64* %63, align 8
  %64 = icmp eq %struct.event* %62, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %59
  %66 = bitcast %struct.event* %62 to i8*
  call void @_ZdlPv(i8* %66) #12
  br label %67

67:                                               ; preds = %65, %59
  %68 = getelementptr inbounds %"class.base::MessagePumpLibevent::FdWatchController", %"class.base::MessagePumpLibevent::FdWatchController"* %4, i64 0, i32 3
  store %"class.base::WatchableIOMessagePumpPosix::FdWatcher"* %5, %"class.base::WatchableIOMessagePumpPosix::FdWatcher"** %68, align 8
  %69 = getelementptr inbounds %"class.base::MessagePumpLibevent::FdWatchController", %"class.base::MessagePumpLibevent::FdWatchController"* %4, i64 0, i32 2
  store %"class.base::MessagePumpLibevent"* %0, %"class.base::MessagePumpLibevent"** %69, align 8
  br label %75

70:                                               ; preds = %56, %45, %34
  %71 = phi i64 [ %47, %56 ], [ %47, %45 ], [ %28, %34 ]
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %70
  %74 = inttoptr i64 %71 to i8*
  call void @_ZdlPv(i8* %74) #12
  br label %75

75:                                               ; preds = %67, %70, %73
  %76 = phi i1 [ true, %67 ], [ false, %70 ], [ false, %73 ]
  %77 = icmp eq i8* %17, null
  br i1 %77, label %82, label %78

78:                                               ; preds = %75
  %79 = load i8, i8* %17, align 1
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %82, label %81

81:                                               ; preds = %78
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %17, i8* %18, i64 %19) #11
  br label %82

82:                                               ; preds = %75, %78, %81
  ret i1 %76
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIRiEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i32* dereferenceable(4)) local_unnamed_addr #7 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #11
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 3, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = load i32, i32* %8, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0, i32 0
  store i64 %20, i64* %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #11
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #11
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #11
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #11
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #11
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #12
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  ret i64 %22
}

declare void @event_set(%struct.event*, i32, i16 signext, void (i32, i16, i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19MessagePumpLibevent22OnLibeventNotificationEisPv(i32, i16 signext, i8*) #0 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  store i32 %0, i32* %5, align 4
  %7 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 127, i32 0), align 16
  %8 = and i8 %7, 25
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %16, label %10, !prof !2

10:                                               ; preds = %3
  %11 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %12 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %14 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %14, i64* %13, align 8
  %15 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 127, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %11, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  br label %16

16:                                               ; preds = %3, %10
  %17 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 127, i32 0), %10 ]
  %18 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), %10 ]
  %19 = phi i64 [ -6148914691236517206, %3 ], [ %15, %10 ]
  %20 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 128, i32 0), align 16
  %21 = and i8 %20, 25
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %29, label %23, !prof !2

23:                                               ; preds = %16
  %24 = ptrtoint i8* %2 to i64
  %25 = load i32, i32* %5, align 4
  %26 = sext i32 %25 to i64
  %27 = xor i64 %26, %24
  %28 = call i64 @_ZN20trace_event_internal13AddTraceEventIRiEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 128, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* null, i64 0, i32 386, i64 %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* nonnull dereferenceable(4) %5)
  br label %29

29:                                               ; preds = %16, %23
  %30 = phi i8* [ null, %16 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 128, i32 0), %23 ]
  %31 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %16 ], [ getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), %23 ]
  %32 = phi i64 [ -6148914691236517206, %16 ], [ %28, %23 ]
  %33 = getelementptr inbounds i8, i8* %2, i64 16
  %34 = bitcast i8* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %29
  %39 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %43, label %41, !prof !2

41:                                               ; preds = %38
  %42 = call %"class.base::trace_event::AllocationContextTracker"* @_ZN4base11trace_event24AllocationContextTracker27GetInstanceForCurrentThreadEv() #11
  call void @_ZN4base11trace_event24AllocationContextTracker22PushCurrentTaskContextEPKc(%"class.base::trace_event::AllocationContextTracker"* %42, i8* %35) #11
  br label %43

43:                                               ; preds = %29, %38, %41
  %44 = getelementptr inbounds i8, i8* %2, i64 48
  %45 = bitcast i8* %44 to %"class.base::MessagePumpLibevent"**
  %46 = load %"class.base::MessagePumpLibevent"*, %"class.base::MessagePumpLibevent"** %45, align 8
  %47 = getelementptr inbounds %"class.base::MessagePumpLibevent", %"class.base::MessagePumpLibevent"* %46, i64 0, i32 2
  store i8 1, i8* %47, align 8
  %48 = getelementptr inbounds %"class.base::MessagePumpLibevent", %"class.base::MessagePumpLibevent"* %46, i64 0, i32 1
  %49 = load %"struct.base::MessagePumpLibevent::RunState"*, %"struct.base::MessagePumpLibevent::RunState"** %48, align 8
  %50 = icmp eq %"struct.base::MessagePumpLibevent::RunState"* %49, null
  br i1 %50, label %58, label %51

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"struct.base::MessagePumpLibevent::RunState", %"struct.base::MessagePumpLibevent::RunState"* %49, i64 0, i32 0
  %53 = load %"class.base::MessagePump::Delegate"*, %"class.base::MessagePump::Delegate"** %52, align 8
  %54 = bitcast %"class.base::MessagePump::Delegate"* %53 to void (%"class.base::MessagePump::Delegate"*)***
  %55 = load void (%"class.base::MessagePump::Delegate"*)**, void (%"class.base::MessagePump::Delegate"*)*** %54, align 8, !noalias !3
  %56 = getelementptr inbounds void (%"class.base::MessagePump::Delegate"*)*, void (%"class.base::MessagePump::Delegate"*)** %55, i64 5
  %57 = load void (%"class.base::MessagePump::Delegate"*)*, void (%"class.base::MessagePump::Delegate"*)** %56, align 8, !noalias !3
  call void %57(%"class.base::MessagePump::Delegate"* %53) #11, !noalias !3
  br label %58

58:                                               ; preds = %43, %51
  %59 = phi %"class.base::MessagePump::Delegate"* [ null, %43 ], [ %53, %51 ]
  %60 = sext i16 %1 to i32
  %61 = and i32 %60, 6
  %62 = icmp eq i32 %61, 6
  br i1 %62, label %63, label %88

63:                                               ; preds = %58
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #11
  store i8 0, i8* %6, align 1
  %64 = getelementptr inbounds i8, i8* %2, i64 64
  %65 = bitcast i8* %64 to i8**
  store i8* %6, i8** %65, align 8
  %66 = load i32, i32* %5, align 4
  %67 = getelementptr inbounds i8, i8* %2, i64 56
  %68 = bitcast i8* %67 to %"class.base::WatchableIOMessagePumpPosix::FdWatcher"**
  %69 = load %"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, %"class.base::WatchableIOMessagePumpPosix::FdWatcher"** %68, align 8
  %70 = bitcast %"class.base::WatchableIOMessagePumpPosix::FdWatcher"* %69 to void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)***
  %71 = load void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)**, void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)*, void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)** %71, i64 1
  %73 = load void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)*, void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)** %72, align 8
  call void %73(%"class.base::WatchableIOMessagePumpPosix::FdWatcher"* %69, i32 %66) #11
  %74 = load i8, i8* %6, align 1, !range !6
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %87

76:                                               ; preds = %63
  %77 = load %"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, %"class.base::WatchableIOMessagePumpPosix::FdWatcher"** %68, align 8
  %78 = icmp eq %"class.base::WatchableIOMessagePumpPosix::FdWatcher"* %77, null
  br i1 %78, label %86, label %79

79:                                               ; preds = %76
  %80 = load i32, i32* %5, align 4
  %81 = bitcast %"class.base::WatchableIOMessagePumpPosix::FdWatcher"* %77 to void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)***
  %82 = load void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)**, void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)*** %81, align 8
  %83 = load void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)*, void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)** %82, align 8
  call void %83(%"class.base::WatchableIOMessagePumpPosix::FdWatcher"* nonnull %77, i32 %80) #11
  %84 = load i8, i8* %6, align 1
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %76, %79
  store i8* null, i8** %65, align 8
  br label %87

87:                                               ; preds = %63, %79, %86
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #11
  br label %113

88:                                               ; preds = %58
  %89 = and i32 %60, 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %100, label %91

91:                                               ; preds = %88
  %92 = load i32, i32* %5, align 4
  %93 = getelementptr inbounds i8, i8* %2, i64 56
  %94 = bitcast i8* %93 to %"class.base::WatchableIOMessagePumpPosix::FdWatcher"**
  %95 = load %"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, %"class.base::WatchableIOMessagePumpPosix::FdWatcher"** %94, align 8
  %96 = bitcast %"class.base::WatchableIOMessagePumpPosix::FdWatcher"* %95 to void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)***
  %97 = load void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)**, void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)*, void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)** %97, i64 1
  %99 = load void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)*, void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)** %98, align 8
  call void %99(%"class.base::WatchableIOMessagePumpPosix::FdWatcher"* %95, i32 %92) #11
  br label %113

100:                                              ; preds = %88
  %101 = and i32 %60, 2
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %113, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds i8, i8* %2, i64 56
  %105 = bitcast i8* %104 to %"class.base::WatchableIOMessagePumpPosix::FdWatcher"**
  %106 = load %"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, %"class.base::WatchableIOMessagePumpPosix::FdWatcher"** %105, align 8
  %107 = icmp eq %"class.base::WatchableIOMessagePumpPosix::FdWatcher"* %106, null
  br i1 %107, label %113, label %108

108:                                              ; preds = %103
  %109 = load i32, i32* %5, align 4
  %110 = bitcast %"class.base::WatchableIOMessagePumpPosix::FdWatcher"* %106 to void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)***
  %111 = load void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)**, void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)*** %110, align 8
  %112 = load void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)*, void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i32)** %111, align 8
  call void %112(%"class.base::WatchableIOMessagePumpPosix::FdWatcher"* nonnull %106, i32 %109) #11
  br label %113

113:                                              ; preds = %108, %103, %100, %91, %87
  %114 = icmp eq %"class.base::MessagePump::Delegate"* %59, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %113
  %116 = bitcast %"class.base::MessagePump::Delegate"* %59 to void (%"class.base::MessagePump::Delegate"*)***
  %117 = load void (%"class.base::MessagePump::Delegate"*)**, void (%"class.base::MessagePump::Delegate"*)*** %116, align 8
  %118 = getelementptr inbounds void (%"class.base::MessagePump::Delegate"*)*, void (%"class.base::MessagePump::Delegate"*)** %117, i64 6
  %119 = load void (%"class.base::MessagePump::Delegate"*)*, void (%"class.base::MessagePump::Delegate"*)** %118, align 8
  call void %119(%"class.base::MessagePump::Delegate"* nonnull %59) #11
  br label %120

120:                                              ; preds = %113, %115
  %121 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %128, label %123

123:                                              ; preds = %120
  %124 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %128, label %126, !prof !2

126:                                              ; preds = %123
  %127 = call %"class.base::trace_event::AllocationContextTracker"* @_ZN4base11trace_event24AllocationContextTracker27GetInstanceForCurrentThreadEv() #11
  call void @_ZN4base11trace_event24AllocationContextTracker21PopCurrentTaskContextEPKc(%"class.base::trace_event::AllocationContextTracker"* %127, i8* %35) #11
  br label %128

128:                                              ; preds = %120, %123, %126
  %129 = icmp eq i8* %30, null
  br i1 %129, label %134, label %130

130:                                              ; preds = %128
  %131 = load i8, i8* %30, align 1
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %134, label %133

133:                                              ; preds = %130
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %30, i8* %31, i64 %32) #11
  br label %134

134:                                              ; preds = %128, %130, %133
  %135 = icmp eq i8* %17, null
  br i1 %135, label %140, label %136

136:                                              ; preds = %134
  %137 = load i8, i8* %17, align 1
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %140, label %139

139:                                              ; preds = %136
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %17, i8* %18, i64 %19) #11
  br label %140

140:                                              ; preds = %134, %136, %139
  ret void
}

declare i32 @event_base_set(%struct.event_base*, %struct.event*) local_unnamed_addr #1

declare i32 @event_add(%struct.event*, %struct.timeval*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19MessagePumpLibevent3RunEPNS_11MessagePump8DelegateE(%"class.base::MessagePumpLibevent"*, %"class.base::MessagePump::Delegate"*) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.base::MessagePumpLibevent::RunState", align 8
  %4 = alloca %struct.timeval, align 8
  %5 = bitcast %"struct.base::MessagePumpLibevent::RunState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"struct.base::MessagePumpLibevent::RunState", %"struct.base::MessagePumpLibevent::RunState"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.base::MessagePumpLibevent::RunState", %"struct.base::MessagePumpLibevent::RunState"* %3, i64 0, i32 1
  %8 = bitcast %"struct.base::MessagePumpLibevent::RunState"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  store %"class.base::MessagePump::Delegate"* %1, %"class.base::MessagePump::Delegate"** %6, align 8
  store i8 0, i8* %7, align 8
  %9 = getelementptr inbounds %"class.base::MessagePumpLibevent", %"class.base::MessagePumpLibevent"* %0, i64 0, i32 1
  %10 = ptrtoint %"struct.base::MessagePumpLibevent::RunState"* %3 to i64
  %11 = bitcast %"struct.base::MessagePumpLibevent::RunState"** %9 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %10, i64* %11, align 8
  %13 = call i8* @_Znwm(i64 128) #12
  %14 = bitcast i8* %13 to %struct.event*
  %15 = bitcast %"class.base::MessagePump::Delegate"* %1 to { i64, i64 } (%"class.base::MessagePump::Delegate"*)***
  %16 = bitcast %"class.base::MessagePump::Delegate"* %1 to void (%"class.base::MessagePump::Delegate"*)***
  %17 = getelementptr inbounds %"class.base::MessagePumpLibevent", %"class.base::MessagePumpLibevent"* %0, i64 0, i32 4
  %18 = icmp eq %"class.base::MessagePump::Delegate"* %1, null
  %19 = getelementptr inbounds %"class.base::MessagePumpLibevent", %"class.base::MessagePumpLibevent"* %0, i64 0, i32 2
  %20 = bitcast %"class.base::MessagePump::Delegate"* %1 to i1 (%"class.base::MessagePump::Delegate"*)***
  %21 = bitcast %struct.timeval* %4 to i8*
  %22 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 0
  %23 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 1
  %24 = bitcast %struct.event_base** %17 to i8**
  br label %25

25:                                               ; preds = %93, %2
  %26 = load { i64, i64 } (%"class.base::MessagePump::Delegate"*)**, { i64, i64 } (%"class.base::MessagePump::Delegate"*)*** %15, align 8
  %27 = getelementptr inbounds { i64, i64 } (%"class.base::MessagePump::Delegate"*)*, { i64, i64 } (%"class.base::MessagePump::Delegate"*)** %26, i64 2
  %28 = load { i64, i64 } (%"class.base::MessagePump::Delegate"*)*, { i64, i64 } (%"class.base::MessagePump::Delegate"*)** %27, align 8
  %29 = call { i64, i64 } %28(%"class.base::MessagePump::Delegate"* %1) #11
  %30 = extractvalue { i64, i64 } %29, 0
  %31 = extractvalue { i64, i64 } %29, 1
  %32 = icmp eq i64 %30, 0
  %33 = load i8, i8* %7, align 8, !range !6
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %96

35:                                               ; preds = %25
  %36 = load void (%"class.base::MessagePump::Delegate"*)**, void (%"class.base::MessagePump::Delegate"*)*** %16, align 8, !noalias !7
  %37 = getelementptr inbounds void (%"class.base::MessagePump::Delegate"*)*, void (%"class.base::MessagePump::Delegate"*)** %36, i64 5
  %38 = load void (%"class.base::MessagePump::Delegate"*)*, void (%"class.base::MessagePump::Delegate"*)** %37, align 8, !noalias !7
  call void %38(%"class.base::MessagePump::Delegate"* %1) #11, !noalias !7
  %39 = load %struct.event_base*, %struct.event_base** %17, align 8
  %40 = call i32 @event_base_loop(%struct.event_base* %39, i32 2) #11
  br i1 %18, label %45, label %41

41:                                               ; preds = %35
  %42 = load void (%"class.base::MessagePump::Delegate"*)**, void (%"class.base::MessagePump::Delegate"*)*** %16, align 8
  %43 = getelementptr inbounds void (%"class.base::MessagePump::Delegate"*)*, void (%"class.base::MessagePump::Delegate"*)** %42, i64 6
  %44 = load void (%"class.base::MessagePump::Delegate"*)*, void (%"class.base::MessagePump::Delegate"*)** %43, align 8
  call void %44(%"class.base::MessagePump::Delegate"* nonnull %1) #11
  br label %45

45:                                               ; preds = %35, %41
  br i1 %32, label %46, label %49

46:                                               ; preds = %45
  store i8 0, i8* %19, align 8
  %47 = load i8, i8* %7, align 8, !range !6
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %93, label %96

49:                                               ; preds = %45
  %50 = load i8, i8* %19, align 8, !range !6
  store i8 0, i8* %19, align 8
  %51 = load i8, i8* %7, align 8, !range !6
  %52 = icmp eq i8 %51, 0
  %53 = or i8 %50, %51
  %54 = icmp eq i8 %53, 0
  %55 = select i1 %52, i32 3, i32 2
  br i1 %54, label %56, label %93

56:                                               ; preds = %49
  %57 = load i1 (%"class.base::MessagePump::Delegate"*)**, i1 (%"class.base::MessagePump::Delegate"*)*** %20, align 8
  %58 = getelementptr inbounds i1 (%"class.base::MessagePump::Delegate"*)*, i1 (%"class.base::MessagePump::Delegate"*)** %57, i64 3
  %59 = load i1 (%"class.base::MessagePump::Delegate"*)*, i1 (%"class.base::MessagePump::Delegate"*)** %58, align 8
  %60 = call zeroext i1 %59(%"class.base::MessagePump::Delegate"* %1) #11
  %61 = load i8, i8* %7, align 8, !range !6
  %62 = icmp ne i8 %61, 0
  %63 = or i1 %60, %62
  %64 = select i1 %62, i32 2, i32 3
  br i1 %63, label %93, label %65

65:                                               ; preds = %56
  %66 = icmp eq i64 %30, 9223372036854775807
  br i1 %66, label %84, label %67

67:                                               ; preds = %65
  %68 = sub nsw i64 %30, %31
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #11
  %69 = add i64 %68, -9223372036854775807
  %70 = icmp ult i64 %69, 2
  %71 = sdiv i64 %68, 1000000
  %72 = select i1 %70, i64 %68, i64 %71
  store i64 %72, i64* %22, align 8
  %73 = srem i64 %68, 1000000
  store i64 %73, i64* %23, align 8
  %74 = load i8*, i8** %24, align 8
  call void @event_set(%struct.event* nonnull %14, i32 -1, i16 signext 0, void (i32, i16, i8*)* nonnull @_ZN4baseL14timer_callbackEisPv, i8* %74) #11
  %75 = load %struct.event_base*, %struct.event_base** %17, align 8
  %76 = call i32 @event_base_set(%struct.event_base* %75, %struct.event* nonnull %14) #11
  %77 = call i32 @event_add(%struct.event* nonnull %14, %struct.timeval* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #11
  %78 = load void (%"class.base::MessagePump::Delegate"*)**, void (%"class.base::MessagePump::Delegate"*)*** %16, align 8
  %79 = getelementptr inbounds void (%"class.base::MessagePump::Delegate"*)*, void (%"class.base::MessagePump::Delegate"*)** %78, i64 4
  %80 = load void (%"class.base::MessagePump::Delegate"*)*, void (%"class.base::MessagePump::Delegate"*)** %79, align 8
  call void %80(%"class.base::MessagePump::Delegate"* %1) #11
  %81 = load %struct.event_base*, %struct.event_base** %17, align 8
  %82 = call i32 @event_base_loop(%struct.event_base* %81, i32 1) #11
  %83 = call i32 @event_del(%struct.event* nonnull %14) #11
  br label %90

84:                                               ; preds = %65
  %85 = load void (%"class.base::MessagePump::Delegate"*)**, void (%"class.base::MessagePump::Delegate"*)*** %16, align 8
  %86 = getelementptr inbounds void (%"class.base::MessagePump::Delegate"*)*, void (%"class.base::MessagePump::Delegate"*)** %85, i64 4
  %87 = load void (%"class.base::MessagePump::Delegate"*)*, void (%"class.base::MessagePump::Delegate"*)** %86, align 8
  call void %87(%"class.base::MessagePump::Delegate"* %1) #11
  %88 = load %struct.event_base*, %struct.event_base** %17, align 8
  %89 = call i32 @event_base_loop(%struct.event_base* %88, i32 1) #11
  br label %90

90:                                               ; preds = %84, %67
  %91 = load i8, i8* %7, align 8, !range !6
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %46, %49, %90, %56
  %94 = phi i32 [ %55, %49 ], [ %64, %56 ], [ 0, %90 ], [ 3, %46 ]
  %95 = icmp eq i32 %94, 2
  br i1 %95, label %96, label %25

96:                                               ; preds = %46, %90, %25, %93
  call void @_ZdlPv(i8* nonnull %13) #12
  %97 = icmp eq %"struct.base::MessagePumpLibevent::RunState"** %9, null
  br i1 %97, label %99, label %98

98:                                               ; preds = %96
  store i64 %12, i64* %11, align 8
  br label %99

99:                                               ; preds = %96, %98
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare i32 @event_base_loop(%struct.event_base*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4baseL14timer_callbackEisPv(i32, i16 signext, i8*) #0 {
  %4 = bitcast i8* %2 to %struct.event_base*
  %5 = tail call i32 @event_base_loopbreak(%struct.event_base* %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19MessagePumpLibevent4QuitEv(%"class.base::MessagePumpLibevent"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::MessagePumpLibevent", %"class.base::MessagePumpLibevent"* %0, i64 0, i32 1
  %3 = load %"struct.base::MessagePumpLibevent::RunState"*, %"struct.base::MessagePumpLibevent::RunState"** %2, align 8
  %4 = getelementptr inbounds %"struct.base::MessagePumpLibevent::RunState", %"struct.base::MessagePumpLibevent::RunState"* %3, i64 0, i32 1
  store i8 1, i8* %4, align 8
  %5 = bitcast %"class.base::MessagePumpLibevent"* %0 to void (%"class.base::MessagePumpLibevent"*)***
  %6 = load void (%"class.base::MessagePumpLibevent"*)**, void (%"class.base::MessagePumpLibevent"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.base::MessagePumpLibevent"*)*, void (%"class.base::MessagePumpLibevent"*)** %6, i64 4
  %8 = load void (%"class.base::MessagePumpLibevent"*)*, void (%"class.base::MessagePumpLibevent"*)** %7, align 8
  tail call void %8(%"class.base::MessagePumpLibevent"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19MessagePumpLibevent12ScheduleWorkEv(%"class.base::MessagePumpLibevent"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #11
  store i8 0, i8* %2, align 1
  %3 = getelementptr inbounds %"class.base::MessagePumpLibevent", %"class.base::MessagePumpLibevent"* %0, i64 0, i32 5
  br label %4

4:                                                ; preds = %8, %1
  %5 = load i32, i32* %3, align 8
  %6 = call i64 @write(i32 %5, i8* nonnull %2, i64 1) #11
  %7 = icmp eq i64 %6, -1
  br i1 %7, label %8, label %12

8:                                                ; preds = %4
  %9 = tail call i32* @__errno_location() #13
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 4
  br i1 %11, label %4, label %12

12:                                               ; preds = %4, %8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #11
  ret void
}

; Function Attrs: nofree
declare i64 @write(i32, i8* nocapture readonly, i64) local_unnamed_addr #9

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base19MessagePumpLibevent19ScheduleDelayedWorkERKNS_9TimeTicksE(%"class.base::MessagePumpLibevent"* nocapture, %"class.base::TimeTicks"* nocapture dereferenceable(8)) unnamed_addr #10 align 2 {
  ret void
}

declare zeroext i1 @_ZN4base26CreateLocalNonBlockingPipeEPi(i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19MessagePumpLibevent8OnWakeupEisPv(i32, i16 signext, i8* nocapture) #0 align 2 {
  %4 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  br label %5

5:                                                ; preds = %8, %3
  %6 = call i64 @read(i32 %0, i8* nonnull %4, i64 1) #11
  %7 = icmp eq i64 %6, -1
  br i1 %7, label %8, label %12

8:                                                ; preds = %5
  %9 = tail call i32* @__errno_location() #13
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 4
  br i1 %11, label %5, label %12

12:                                               ; preds = %5, %8
  %13 = getelementptr inbounds i8, i8* %2, i64 16
  store i8 1, i8* %13, align 8
  %14 = getelementptr inbounds i8, i8* %2, i64 24
  %15 = bitcast i8* %14 to %struct.event_base**
  %16 = load %struct.event_base*, %struct.event_base** %15, align 8
  %17 = tail call i32 @event_base_loopbreak(%struct.event_base* %16) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  ret void
}

; Function Attrs: nofree
declare i64 @read(i32, i8* nocapture, i64) local_unnamed_addr #9

declare i32 @event_base_loopbreak(%struct.event_base*) local_unnamed_addr #1

declare void @_ZN4base11MessagePump13SetTimerSlackENS_10TimerSlackE(%"class.base::MessagePump"*, i32) unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare %"class.base::trace_event::AllocationContextTracker"* @_ZN4base11trace_event24AllocationContextTracker27GetInstanceForCurrentThreadEv() local_unnamed_addr #1

declare void @_ZN4base11trace_event24AllocationContextTracker22PushCurrentTaskContextEPKc(%"class.base::trace_event::AllocationContextTracker"*, i8*) local_unnamed_addr #1

declare void @_ZN4base11trace_event24AllocationContextTracker21PopCurrentTaskContextEPKc(%"class.base::trace_event::AllocationContextTracker"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4base11MessagePump8Delegate13BeginWorkItemEv: argument 0"}
!5 = distinct !{!5, !"_ZN4base11MessagePump8Delegate13BeginWorkItemEv"}
!6 = !{i8 0, i8 2}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN4base11MessagePump8Delegate13BeginWorkItemEv: argument 0"}
!9 = distinct !{!9, !"_ZN4base11MessagePump8Delegate13BeginWorkItemEv"}
