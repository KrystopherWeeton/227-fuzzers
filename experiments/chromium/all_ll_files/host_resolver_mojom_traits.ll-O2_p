; ModuleID = '../../services/network/public/cpp/host_resolver_mojom_traits.cc'
source_filename = "../../services/network/public/cpp/host_resolver_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::DnsConfigOverrides" = type <{ %"class.absl::optional.0", %"class.absl::optional.6", %"class.absl::optional.24", [2 x i8], %"class.absl::optional.29", [4 x i8], %"class.absl::optional.34", %"class.absl::optional.29", %"class.absl::optional.29", %"class.absl::optional.24", %"class.absl::optional.24", [4 x i8], %"class.absl::optional.39", %"class.absl::optional", %"class.absl::optional.24", [6 x i8], %"class.absl::optional.6", i8, [7 x i8] }>
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*, %"class.std::__1::__compressed_pair" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::IPEndPoint"* }
%"class.absl::optional.34" = type { %"class.absl::optional_internal::optional_data.35" }
%"class.absl::optional_internal::optional_data.35" = type { %"class.absl::optional_internal::optional_data_base.36" }
%"class.absl::optional_internal::optional_data_base.36" = type { %"class.absl::optional_internal::optional_data_dtor_base.37" }
%"class.absl::optional_internal::optional_data_dtor_base.37" = type { i8, %union.anon.38 }
%union.anon.38 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.29" = type { %"class.absl::optional_internal::optional_data.30" }
%"class.absl::optional_internal::optional_data.30" = type { %"class.absl::optional_internal::optional_data_base.31" }
%"class.absl::optional_internal::optional_data_base.31" = type { %"class.absl::optional_internal::optional_data_dtor_base.32" }
%"class.absl::optional_internal::optional_data_dtor_base.32" = type { i8, %union.anon.33 }
%union.anon.33 = type { i32 }
%"class.absl::optional.39" = type { %"class.absl::optional_internal::optional_data.40" }
%"class.absl::optional_internal::optional_data.40" = type { %"class.absl::optional_internal::optional_data_base.41" }
%"class.absl::optional_internal::optional_data_base.41" = type { %"class.absl::optional_internal::optional_data_dtor_base.42" }
%"class.absl::optional_internal::optional_data_dtor_base.42" = type { i8, %union.anon.43 }
%union.anon.43 = type { %"class.std::__1::vector.44" }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"*, %"class.std::__1::__compressed_pair.46" }
%"struct.net::DnsOverHttpsServerConfig" = type <{ %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.15 }
%union.anon.15 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.net::DnsOverHttpsServerConfig"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.absl::optional.24" = type { %"class.absl::optional_internal::optional_data.25" }
%"class.absl::optional_internal::optional_data.25" = type { %"class.absl::optional_internal::optional_data_base.26" }
%"class.absl::optional_internal::optional_data_base.26" = type { %"class.absl::optional_internal::optional_data_dtor_base.27" }
%"class.absl::optional_internal::optional_data_dtor_base.27" = type { i8, %union.anon.28 }
%union.anon.28 = type { i8 }
%"class.absl::optional.6" = type { %"class.absl::optional_internal::optional_data.7" }
%"class.absl::optional_internal::optional_data.7" = type { %"class.absl::optional_internal::optional_data_base.8" }
%"class.absl::optional_internal::optional_data_base.8" = type { %"class.absl::optional_internal::optional_data_dtor_base.9" }
%"class.absl::optional_internal::optional_data_dtor_base.9" = type { i8, %union.anon.10 }
%union.anon.10 = type { %"class.std::__1::vector.11" }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::basic_string"* }
%"class.absl::optional.51" = type { %"class.absl::optional_internal::optional_data.52" }
%"class.absl::optional_internal::optional_data.52" = type { %"class.absl::optional_internal::optional_data_base.53" }
%"class.absl::optional_internal::optional_data_base.53" = type { %"class.absl::optional_internal::optional_data_dtor_base.54" }
%"class.absl::optional_internal::optional_data_dtor_base.54" = type { i8, %union.anon.55 }
%union.anon.55 = type { %"class.std::__1::vector.56" }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"*, %"class.std::__1::__compressed_pair.58" }
%"class.mojo::InlinedStructPtr" = type { %"class.network::mojom::DnsOverHttpsServer", i32, [4 x i8] }
%"class.network::mojom::DnsOverHttpsServer" = type <{ %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.mojo::InlinedStructPtr"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.network::mojom::internal::DnsConfigOverrides_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer.63", i32, i8, i8, [2 x i8], %"struct.mojo::internal::Pointer.64", i32, i32, i32, i32, %"struct.mojo::internal::Pointer.65", i32, [4 x i8], %"struct.mojo::internal::Pointer.63" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"struct.mojo::internal::Pointer.64" = type { i64 }
%"struct.mojo::internal::Pointer.65" = type { i64 }
%"struct.mojo::internal::Pointer.63" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector.66", %"class.std::__1::vector.74", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector.66" = type { %"class.std::__1::__vector_base.67" }
%"class.std::__1::__vector_base.67" = type { %"class.mojo::ScopedHandleBase.68"*, %"class.mojo::ScopedHandleBase.68"*, %"class.std::__1::__compressed_pair.69" }
%"class.mojo::ScopedHandleBase.68" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.mojo::ScopedHandleBase.68"* }
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.76" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.81 }
%class.scoped_refptr.81 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.85, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.87", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.82" }
%"struct.std::__1::__atomic_base.82" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.83 }
%class.scoped_refptr.83 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.84", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.84" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.85 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.86" }>
%"class.base::RefCountedThreadSafe.86" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.87" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__atomic_base.89" }
%"struct.std::__1::__atomic_base.89" = type { %"struct.std::__1::__cxx_atomic_impl.90" }
%"struct.std::__1::__cxx_atomic_impl.90" = type { %"struct.std::__1::__cxx_atomic_base_impl.91" }
%"struct.std::__1::__cxx_atomic_base_impl.91" = type { i32 }
%"class.mojo::internal::Array_Data.103" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }
%"class.mojo::internal::Array_Data.100" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.network::mojom::DnsConfigOverridesDataView" = type { %"class.network::mojom::internal::DnsConfigOverrides_Data"*, %"class.mojo::Message"* }
%"class.mojo_base::mojom::internal::TimeDelta_Data" = type { %"struct.mojo::internal::StructHeader", i64 }
%"class.mojo::internal::Array_Data" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.network::mojom::internal::DnsOverHttpsServer_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.92", i8, [7 x i8] }
%"struct.mojo::internal::Pointer.92" = type { i64 }
%"class.network::mojom::internal::ResolveErrorInfo_Data" = type { %"struct.mojo::internal::StructHeader", i32, i8, [3 x i8] }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.network::mojom::internal::IPEndPoint_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.101", i16, [6 x i8] }
%"struct.mojo::internal::Pointer.101" = type { i64 }

$_ZNSt3__16vectorIN3net24DnsOverHttpsServerConfigENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJNS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEEbEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN4mojo16InlinedStructPtrIN7network5mojom18DnsOverHttpsServerEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__14swapIN7network5mojom18DnsOverHttpsServerEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_ = comdat any

$_ZN4mojo8internal11DeserializeINS_13ArrayDataViewIN7network5mojom18IPEndPointDataViewEEERPNS0_10Array_DataINS0_7PointerINS4_8internal15IPEndPoint_DataEEEEEN4absl8optionalINSt3__16vectorIN3net10IPEndPointENSH_9allocatorISK_EEEEEEJRPNS_7MessageEELPv0EEEbOT0_PT1_DpOT2_ = comdat any

$_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN7network5mojom18IPEndPointDataViewEEENSt3__16vectorIN3net10IPEndPointENS7_9allocatorISA_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISD_EESD_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal15IPEndPoint_DataEEEEEPSD_PNS_7MessageE = comdat any

$_ZN4mojo8internal11DeserializeINS_13ArrayDataViewINS_14StringDataViewEEERPNS0_10Array_DataINS0_7PointerINS5_IcEEEEEEN4absl8optionalINSt3__16vectorINSE_12basic_stringIcNSE_11char_traitsIcEENSE_9allocatorIcEEEENSJ_ISL_EEEEEEJRPNS_7MessageEELPv0EEEbOT0_PT1_DpOT2_ = comdat any

$_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewINS_14StringDataViewEEENSt3__16vectorINS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENSA_ISC_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISE_EESE_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINSK_IcEEEEEEPSE_PNS_7MessageE = comdat any

@switch.table._ZN4mojo12StructTraitsIN7network5mojom26DnsConfigOverridesDataViewEN3net18DnsConfigOverridesEE4ReadES3_PS5_ = private unnamed_addr constant [4 x i64] [i64 0, i64 1, i64 1, i64 1], align 8
@switch.table._ZN4mojo12StructTraitsIN7network5mojom26DnsConfigOverridesDataViewEN3net18DnsConfigOverridesEE4ReadES3_PS5_.2 = private unnamed_addr constant [4 x i64] [i64 0, i64 0, i64 4294967296, i64 8589934592], align 8
@switch.table._ZN4mojo10EnumTraitsIN7network5mojom12DnsQueryTypeEN3net12DnsQueryTypeEE7ToMojomES5_ = private unnamed_addr constant [8 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 0, i32 6], align 4
@switch.table._ZN4mojo10EnumTraitsIN7network5mojom12DnsQueryTypeEN3net12DnsQueryTypeEE9FromMojomES3_PS5_ = private unnamed_addr constant [7 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 7], align 4

; Function Attrs: nounwind readnone ssp uwtable
define hidden i64 @_ZN4mojo25FromOptionalSecureDnsModeEN7network5mojom21OptionalSecureDnsModeE(i32) local_unnamed_addr #0 {
  %2 = sext i32 %0 to i64
  %3 = getelementptr inbounds [4 x i64], [4 x i64]* @switch.table._ZN4mojo12StructTraitsIN7network5mojom26DnsConfigOverridesDataViewEN3net18DnsConfigOverridesEE4ReadES3_PS5_, i64 0, i64 %2
  %4 = load i64, i64* %3, align 8
  %5 = sext i32 %0 to i64
  %6 = getelementptr inbounds [4 x i64], [4 x i64]* @switch.table._ZN4mojo12StructTraitsIN7network5mojom26DnsConfigOverridesDataViewEN3net18DnsConfigOverridesEE4ReadES3_PS5_.2, i64 0, i64 %5
  %7 = load i64, i64* %6, align 8
  %8 = or i64 %7, %4
  ret i64 %8
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN4mojo12StructTraitsIN7network5mojom26DnsConfigOverridesDataViewEN3net18DnsConfigOverridesEE26append_to_multi_label_nameERKS5_(%"struct.net::DnsConfigOverrides"* nocapture readonly dereferenceable(208)) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 2
  %3 = bitcast %"class.absl::optional.24"* %2 to i16*
  %4 = load i16, i16* %3, align 8
  %5 = trunc i16 %4 to i8
  %6 = icmp eq i8 %5, 0
  %7 = icmp ult i16 %4, 256
  %8 = select i1 %7, i32 2, i32 1
  %9 = select i1 %6, i32 0, i32 %8
  ret i32 %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN4mojo12StructTraitsIN7network5mojom26DnsConfigOverridesDataViewEN3net18DnsConfigOverridesEE6rotateERKS5_(%"struct.net::DnsConfigOverrides"* nocapture readonly dereferenceable(208)) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 9
  %3 = bitcast %"class.absl::optional.24"* %2 to i16*
  %4 = load i16, i16* %3, align 8
  %5 = trunc i16 %4 to i8
  %6 = icmp eq i8 %5, 0
  %7 = icmp ult i16 %4, 256
  %8 = select i1 %7, i32 2, i32 1
  %9 = select i1 %6, i32 0, i32 %8
  ret i32 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN4mojo12StructTraitsIN7network5mojom26DnsConfigOverridesDataViewEN3net18DnsConfigOverridesEE14use_local_ipv6ERKS5_(%"struct.net::DnsConfigOverrides"* nocapture readonly dereferenceable(208)) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 10
  %3 = bitcast %"class.absl::optional.24"* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = trunc i16 %4 to i8
  %6 = icmp eq i8 %5, 0
  %7 = icmp ult i16 %4, 256
  %8 = select i1 %7, i32 2, i32 1
  %9 = select i1 %6, i32 0, i32 %8
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo12StructTraitsIN7network5mojom26DnsConfigOverridesDataViewEN3net18DnsConfigOverridesEE22dns_over_https_serversERKS5_(%"class.absl::optional.51"* noalias nocapture sret, %"struct.net::DnsConfigOverrides"* nocapture readonly dereferenceable(208)) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.std::__1::vector.56", align 16
  %4 = alloca %"struct.net::DnsOverHttpsServerConfig", align 8
  %5 = alloca %"class.mojo::InlinedStructPtr", align 8
  %6 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.absl::optional.51", %"class.absl::optional.51"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.absl::optional.51", %"class.absl::optional.51"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %union.anon.55* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #14
  br label %83

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::vector.56"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #14
  %15 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %3, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 0, i64 24, i1 false) #14
  %17 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %17, align 8
  %19 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %20 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %19, align 8
  %21 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %18, %20
  br i1 %21, label %39, label %22

22:                                               ; preds = %13
  %23 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %4 to i8*
  %24 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %4, i64 0, i32 0
  %25 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %4, i64 0, i32 1
  %27 = bitcast %"class.mojo::InlinedStructPtr"* %5 to i8*
  %28 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %5, i64 0, i32 0
  %29 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %5, i64 0, i32 1
  %30 = bitcast %"class.mojo::InlinedStructPtr"** %15 to i64*
  %31 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %4 to i8*
  br label %47

34:                                               ; preds = %80
  %35 = bitcast %"class.std::__1::vector.56"* %3 to <2 x i64>*
  %36 = load <2 x i64>, <2 x i64>* %35, align 16, !noalias !3
  %37 = bitcast %"class.mojo::InlinedStructPtr"** %16 to i64*
  %38 = load i64, i64* %37, align 16, !noalias !3
  br label %39

39:                                               ; preds = %34, %13
  %40 = phi i64 [ %38, %34 ], [ 0, %13 ]
  %41 = phi <2 x i64> [ %36, %34 ], [ zeroinitializer, %13 ]
  %42 = getelementptr inbounds %"class.absl::optional.51", %"class.absl::optional.51"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %42, align 8, !alias.scope !3
  %43 = getelementptr inbounds %"class.absl::optional.51", %"class.absl::optional.51"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %44 = bitcast %"class.std::__1::vector.56"* %43 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %44, align 8, !alias.scope !3
  %45 = getelementptr inbounds %"class.absl::optional.51", %"class.absl::optional.51"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %46 = bitcast %"class.mojo::InlinedStructPtr"** %45 to i64*
  store i64 %40, i64* %46, align 8, !alias.scope !3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #14
  br label %83

47:                                               ; preds = %22, %80
  %48 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %18, %22 ], [ %81, %80 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #14
  %49 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 32, i1 false)
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %47
  %54 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 8 %54, i64 24, i1 false) #14
  br label %60

55:                                               ; preds = %47
  %56 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %24, i8* %57, i64 %59) #14
  br label %60

60:                                               ; preds = %53, %55
  %61 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %48, i64 0, i32 1
  %62 = load i8, i8* %61, align 8, !range !2
  store i8 %62, i8* %26, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %27) #14
  %63 = icmp ne i8 %62, 0
  call void @_ZN7network5mojom18DnsOverHttpsServerC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEb(%"class.network::mojom::DnsOverHttpsServer"* nonnull %28, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %24, i1 zeroext %63) #14
  store i32 1, i32* %29, align 8, !alias.scope !6
  %64 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %15, align 8
  %65 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %16, align 16
  %66 = icmp ult %"class.mojo::InlinedStructPtr"* %64, %65
  br i1 %66, label %67, label %74

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %64, i64 0, i32 0
  call void @_ZN7network5mojom18DnsOverHttpsServerC1Ev(%"class.network::mojom::DnsOverHttpsServer"* %68) #14
  %69 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %64, i64 0, i32 1
  store i32 0, i32* %69, align 8
  call void @_ZN7network5mojom18DnsOverHttpsServerD1Ev(%"class.network::mojom::DnsOverHttpsServer"* %68) #14
  call void @_ZN7network5mojom18DnsOverHttpsServerC1Ev(%"class.network::mojom::DnsOverHttpsServer"* %68) #14
  call void @_ZNSt3__14swapIN7network5mojom18DnsOverHttpsServerEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"class.network::mojom::DnsOverHttpsServer"* dereferenceable(32) %68, %"class.network::mojom::DnsOverHttpsServer"* nonnull dereferenceable(32) %28) #14
  %70 = load i32, i32* %69, align 4
  %71 = load i32, i32* %29, align 8
  store i32 %71, i32* %69, align 4
  store i32 %70, i32* %29, align 8
  %72 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %64, i64 1
  %73 = ptrtoint %"class.mojo::InlinedStructPtr"* %72 to i64
  store i64 %73, i64* %30, align 8
  br label %75

74:                                               ; preds = %60
  call void @_ZNSt3__16vectorIN4mojo16InlinedStructPtrIN7network5mojom18DnsOverHttpsServerEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.56"* nonnull %3, %"class.mojo::InlinedStructPtr"* nonnull dereferenceable(40) %5) #14
  br label %75

75:                                               ; preds = %67, %74
  call void @_ZN7network5mojom18DnsOverHttpsServerD1Ev(%"class.network::mojom::DnsOverHttpsServer"* nonnull %28) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %27) #14
  %76 = load i8, i8* %32, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %75
  %79 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %79) #15
  br label %80

80:                                               ; preds = %75, %78
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #14
  %81 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %48, i64 1
  %82 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %81, %20
  br i1 %82, label %34, label %47

83:                                               ; preds = %39, %9
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN4mojo12StructTraitsIN7network5mojom26DnsConfigOverridesDataViewEN3net18DnsConfigOverridesEE15secure_dns_modeERKS5_(%"struct.net::DnsConfigOverrides"* nocapture readonly dereferenceable(208)) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 13
  %3 = bitcast %"class.absl::optional"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %4 to i8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = lshr i64 %4, 32
  %9 = trunc i64 %8 to i32
  %10 = add i32 %9, 1
  ret i32 %10

11:                                               ; preds = %1
  ret i32 0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN4mojo12StructTraitsIN7network5mojom26DnsConfigOverridesDataViewEN3net18DnsConfigOverridesEE28allow_dns_over_https_upgradeERKS5_(%"struct.net::DnsConfigOverrides"* nocapture readonly dereferenceable(208)) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 14
  %3 = bitcast %"class.absl::optional.24"* %2 to i16*
  %4 = load i16, i16* %3, align 8
  %5 = trunc i16 %4 to i8
  %6 = icmp eq i8 %5, 0
  %7 = icmp ult i16 %4, 256
  %8 = select i1 %7, i32 2, i32 1
  %9 = select i1 %6, i32 0, i32 %8
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN7network5mojom26DnsConfigOverridesDataViewEN3net18DnsConfigOverridesEE4ReadES3_PS5_(%"class.network::mojom::internal::DnsConfigOverrides_Data"*, %"class.mojo::Message"*, %"struct.net::DnsConfigOverrides"*) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.mojo::internal::Array_Data.103"*, align 8
  %7 = alloca %"class.mojo::internal::Array_Data.103"*, align 8
  %8 = alloca %"class.mojo::internal::Array_Data.100"*, align 8
  %9 = alloca %"class.network::mojom::DnsConfigOverridesDataView", align 8
  %10 = getelementptr inbounds %"class.network::mojom::DnsConfigOverridesDataView", %"class.network::mojom::DnsConfigOverridesDataView"* %9, i64 0, i32 0
  store %"class.network::mojom::internal::DnsConfigOverrides_Data"* %0, %"class.network::mojom::internal::DnsConfigOverrides_Data"** %10, align 8
  %11 = getelementptr inbounds %"class.network::mojom::DnsConfigOverridesDataView", %"class.network::mojom::DnsConfigOverridesDataView"* %9, i64 0, i32 1
  store %"class.mojo::Message"* %1, %"class.mojo::Message"** %11, align 8
  %12 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %2, i64 0, i32 0
  %13 = bitcast %"class.mojo::internal::Array_Data.100"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.network::mojom::internal::DnsConfigOverrides_Data", %"class.network::mojom::internal::DnsConfigOverrides_Data"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %14, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  %18 = bitcast %"struct.mojo::internal::Pointer"* %14 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 %16
  %20 = bitcast i8* %19 to %"class.mojo::internal::Array_Data.100"*
  %21 = select i1 %17, %"class.mojo::internal::Array_Data.100"* null, %"class.mojo::internal::Array_Data.100"* %20
  store %"class.mojo::internal::Array_Data.100"* %21, %"class.mojo::internal::Array_Data.100"** %8, align 8
  %22 = call zeroext i1 @_ZN4mojo8internal11DeserializeINS_13ArrayDataViewIN7network5mojom18IPEndPointDataViewEEERPNS0_10Array_DataINS0_7PointerINS4_8internal15IPEndPoint_DataEEEEEN4absl8optionalINSt3__16vectorIN3net10IPEndPointENSH_9allocatorISK_EEEEEEJRPNS_7MessageEELPv0EEEbOT0_PT1_DpOT2_(%"class.mojo::internal::Array_Data.100"** nonnull dereferenceable(8) %8, %"class.absl::optional.0"* %12, %"class.mojo::Message"** dereferenceable(8) %11) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #14
  br i1 %22, label %23, label %319

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %2, i64 0, i32 1
  %25 = bitcast %"class.mojo::internal::Array_Data.103"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #14
  %26 = load %"class.network::mojom::internal::DnsConfigOverrides_Data"*, %"class.network::mojom::internal::DnsConfigOverrides_Data"** %10, align 8
  %27 = getelementptr inbounds %"class.network::mojom::internal::DnsConfigOverrides_Data", %"class.network::mojom::internal::DnsConfigOverrides_Data"* %26, i64 0, i32 2
  %28 = getelementptr inbounds %"struct.mojo::internal::Pointer.63", %"struct.mojo::internal::Pointer.63"* %27, i64 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  %31 = bitcast %"struct.mojo::internal::Pointer.63"* %27 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 %29
  %33 = bitcast i8* %32 to %"class.mojo::internal::Array_Data.103"*
  %34 = select i1 %30, %"class.mojo::internal::Array_Data.103"* null, %"class.mojo::internal::Array_Data.103"* %33
  store %"class.mojo::internal::Array_Data.103"* %34, %"class.mojo::internal::Array_Data.103"** %7, align 8
  %35 = call zeroext i1 @_ZN4mojo8internal11DeserializeINS_13ArrayDataViewINS_14StringDataViewEEERPNS0_10Array_DataINS0_7PointerINS5_IcEEEEEEN4absl8optionalINSt3__16vectorINSE_12basic_stringIcNSE_11char_traitsIcEENSE_9allocatorIcEEEENSJ_ISL_EEEEEEJRPNS_7MessageEELPv0EEEbOT0_PT1_DpOT2_(%"class.mojo::internal::Array_Data.103"** nonnull dereferenceable(8) %7, %"class.absl::optional.6"* %24, %"class.mojo::Message"** dereferenceable(8) %11) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #14
  br i1 %35, label %36, label %319

36:                                               ; preds = %23
  %37 = load %"class.network::mojom::internal::DnsConfigOverrides_Data"*, %"class.network::mojom::internal::DnsConfigOverrides_Data"** %10, align 8
  %38 = getelementptr inbounds %"class.network::mojom::internal::DnsConfigOverrides_Data", %"class.network::mojom::internal::DnsConfigOverrides_Data"* %37, i64 0, i32 3
  %39 = load i32, i32* %38, align 1
  %40 = zext i32 %39 to i48
  %41 = shl nuw nsw i48 %40, 4
  %42 = lshr i48 4295032832, %41
  %43 = zext i32 %39 to i48
  %44 = shl nuw nsw i48 %43, 4
  %45 = lshr i48 16777216, %44
  %46 = or i48 %45, %42
  %47 = trunc i48 %46 to i16
  %48 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %2, i64 0, i32 2
  %49 = bitcast %"class.absl::optional.24"* %48 to i16*
  store i16 %47, i16* %49, align 8
  %50 = getelementptr inbounds %"class.network::mojom::internal::DnsConfigOverrides_Data", %"class.network::mojom::internal::DnsConfigOverrides_Data"* %37, i64 0, i32 4
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, -1
  br i1 %52, label %319, label %53

53:                                               ; preds = %36
  %54 = icmp sgt i8 %51, -1
  br i1 %54, label %55, label %63

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %57 = load i8, i8* %56, align 4, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %55
  store i8 1, i8* %56, align 4
  br label %60

60:                                               ; preds = %55, %59
  %61 = sext i8 %51 to i32
  %62 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %61, i32* %62, align 4
  br label %63

63:                                               ; preds = %60, %53
  %64 = getelementptr inbounds %"class.network::mojom::internal::DnsConfigOverrides_Data", %"class.network::mojom::internal::DnsConfigOverrides_Data"* %37, i64 0, i32 7
  %65 = getelementptr inbounds %"struct.mojo::internal::Pointer.64", %"struct.mojo::internal::Pointer.64"* %64, i64 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = icmp eq i64 %66, 0
  %68 = bitcast %"struct.mojo::internal::Pointer.64"* %64 to i8*
  %69 = getelementptr inbounds i8, i8* %68, i64 %66
  %70 = bitcast i8* %69 to %"class.mojo_base::mojom::internal::TimeDelta_Data"*
  %71 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  br i1 %67, label %72, label %73

72:                                               ; preds = %63
  store i8 0, i8* %71, align 8
  br label %83

73:                                               ; preds = %63
  %74 = load i8, i8* %71, align 8, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %77, align 8
  store i8 1, i8* %71, align 8
  br label %78

78:                                               ; preds = %73, %76
  %79 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %80 = call zeroext i1 @_ZN4mojo12StructTraitsIN9mojo_base5mojom17TimeDeltaDataViewEN4base9TimeDeltaEE4ReadES3_PS5_(%"class.mojo_base::mojom::internal::TimeDelta_Data"* nonnull %70, %"class.base::TimeDelta"* %79) #14
  br i1 %80, label %81, label %319

81:                                               ; preds = %78
  %82 = load %"class.network::mojom::internal::DnsConfigOverrides_Data"*, %"class.network::mojom::internal::DnsConfigOverrides_Data"** %10, align 8
  br label %83

83:                                               ; preds = %81, %72
  %84 = phi %"class.network::mojom::internal::DnsConfigOverrides_Data"* [ %82, %81 ], [ %37, %72 ]
  %85 = getelementptr inbounds %"class.network::mojom::internal::DnsConfigOverrides_Data", %"class.network::mojom::internal::DnsConfigOverrides_Data"* %84, i64 0, i32 8
  %86 = load i32, i32* %85, align 1
  %87 = icmp slt i32 %86, -1
  br i1 %87, label %319, label %88

88:                                               ; preds = %83
  %89 = icmp sgt i32 %86, -1
  br i1 %89, label %90, label %96

90:                                               ; preds = %88
  %91 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %2, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %92 = bitcast i8* %91 to i64*
  %93 = zext i32 %86 to i64
  %94 = shl nuw i64 %93, 32
  %95 = or i64 %94, 1
  store i64 %95, i64* %92, align 8
  br label %96

96:                                               ; preds = %90, %88
  %97 = getelementptr inbounds %"class.network::mojom::internal::DnsConfigOverrides_Data", %"class.network::mojom::internal::DnsConfigOverrides_Data"* %84, i64 0, i32 9
  %98 = load i32, i32* %97, align 1
  %99 = zext i32 %98 to i48
  %100 = shl nuw nsw i48 %99, 4
  %101 = lshr i48 4295032832, %100
  %102 = zext i32 %98 to i48
  %103 = shl nuw nsw i48 %102, 4
  %104 = lshr i48 16777216, %103
  %105 = or i48 %104, %101
  %106 = trunc i48 %105 to i16
  %107 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %2, i64 0, i32 9
  %108 = bitcast %"class.absl::optional.24"* %107 to i16*
  store i16 %106, i16* %108, align 8
  %109 = getelementptr inbounds %"class.network::mojom::internal::DnsConfigOverrides_Data", %"class.network::mojom::internal::DnsConfigOverrides_Data"* %84, i64 0, i32 10
  %110 = load i32, i32* %109, align 1
  %111 = zext i32 %110 to i48
  %112 = shl nuw nsw i48 %111, 4
  %113 = lshr i48 4295032832, %112
  %114 = zext i32 %110 to i48
  %115 = shl nuw nsw i48 %114, 4
  %116 = lshr i48 16777216, %115
  %117 = or i48 %116, %113
  %118 = trunc i48 %117 to i16
  %119 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %2, i64 0, i32 10
  %120 = bitcast %"class.absl::optional.24"* %119 to i16*
  store i16 %118, i16* %120, align 2
  %121 = getelementptr inbounds %"class.network::mojom::internal::DnsConfigOverrides_Data", %"class.network::mojom::internal::DnsConfigOverrides_Data"* %84, i64 0, i32 12
  %122 = getelementptr inbounds %"struct.mojo::internal::Pointer.65", %"struct.mojo::internal::Pointer.65"* %121, i64 0, i32 0
  %123 = load i64, i64* %122, align 8
  %124 = icmp eq i64 %123, 0
  %125 = bitcast %"struct.mojo::internal::Pointer.65"* %121 to i8*
  %126 = getelementptr inbounds i8, i8* %125, i64 %123
  %127 = icmp eq i8* %126, null
  %128 = or i1 %124, %127
  %129 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %2, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %130 = load i8, i8* %129, align 8, !range !2
  %131 = icmp eq i8 %130, 0
  br i1 %128, label %132, label %161

132:                                              ; preds = %96
  br i1 %131, label %277, label %133

133:                                              ; preds = %132
  %134 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %2, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %135 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %134, i64 0, i32 0, i32 0
  %136 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %135, align 8
  %137 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %136, null
  br i1 %137, label %160, label %138

138:                                              ; preds = %133
  %139 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %136 to i8*
  %140 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %2, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %141 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %140, align 8
  %142 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %141, %136
  br i1 %142, label %158, label %143

143:                                              ; preds = %138, %153
  %144 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %145, %153 ], [ %141, %138 ]
  %145 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %144, i64 -1
  %146 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %145 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %146, i64 0, i32 1, i32 0
  %148 = load i8, i8* %147, align 1
  %149 = icmp slt i8 %148, 0
  br i1 %149, label %150, label %153

150:                                              ; preds = %143
  %151 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %145, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load i8*, i8** %151, align 8
  call void @_ZdlPv(i8* %152) #15
  br label %153

153:                                              ; preds = %150, %143
  %154 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %145, %136
  br i1 %154, label %155, label %143

155:                                              ; preds = %153
  %156 = bitcast %"class.std::__1::vector.44"* %134 to i8**
  %157 = load i8*, i8** %156, align 8
  br label %158

158:                                              ; preds = %155, %138
  %159 = phi i8* [ %157, %155 ], [ %139, %138 ]
  store %"struct.net::DnsOverHttpsServerConfig"* %136, %"struct.net::DnsOverHttpsServerConfig"** %140, align 8
  call void @_ZdlPv(i8* %159) #15
  br label %160

160:                                              ; preds = %158, %133
  store i8 0, i8* %129, align 8
  br label %277

161:                                              ; preds = %96
  br i1 %131, label %190, label %162

162:                                              ; preds = %161
  %163 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %2, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %164 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %163, i64 0, i32 0, i32 0
  %165 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %164, align 8
  %166 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %165, null
  br i1 %166, label %189, label %167

167:                                              ; preds = %162
  %168 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %165 to i8*
  %169 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %2, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %170 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %169, align 8
  %171 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %170, %165
  br i1 %171, label %187, label %172

172:                                              ; preds = %167, %182
  %173 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %174, %182 ], [ %170, %167 ]
  %174 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %173, i64 -1
  %175 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %174 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %176 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %175, i64 0, i32 1, i32 0
  %177 = load i8, i8* %176, align 1
  %178 = icmp slt i8 %177, 0
  br i1 %178, label %179, label %182

179:                                              ; preds = %172
  %180 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %174, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load i8*, i8** %180, align 8
  call void @_ZdlPv(i8* %181) #15
  br label %182

182:                                              ; preds = %179, %172
  %183 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %174, %165
  br i1 %183, label %184, label %172

184:                                              ; preds = %182
  %185 = bitcast %"class.std::__1::vector.44"* %163 to i8**
  %186 = load i8*, i8** %185, align 8
  br label %187

187:                                              ; preds = %184, %167
  %188 = phi i8* [ %186, %184 ], [ %168, %167 ]
  store %"struct.net::DnsOverHttpsServerConfig"* %165, %"struct.net::DnsOverHttpsServerConfig"** %169, align 8
  call void @_ZdlPv(i8* %188) #15
  br label %189

189:                                              ; preds = %187, %162
  store i8 0, i8* %129, align 8
  br label %190

190:                                              ; preds = %189, %161
  %191 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %2, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %192 = bitcast %"class.std::__1::vector.44"* %191 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 0, i64 24, i1 false) #14
  store i8 1, i8* %129, align 8
  %193 = getelementptr inbounds i8, i8* %126, i64 4
  %194 = bitcast i8* %193 to i32*
  %195 = load i32, i32* %194, align 1
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %277, label %197

197:                                              ; preds = %190
  %198 = getelementptr inbounds i8, i8* %126, i64 8
  %199 = bitcast i8* %198 to %"class.mojo::internal::Array_Data"*
  %200 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %203 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %204 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %203, i64 0, i32 1, i32 0
  %205 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %2, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %206 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %2, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %207 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %205 to i64*
  br label %208

208:                                              ; preds = %272, %197
  %209 = phi i64 [ 0, %197 ], [ %273, %272 ]
  %210 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %199, i64 %209
  %211 = bitcast %"class.mojo::internal::Array_Data"* %210 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = icmp eq i64 %212, 0
  %214 = bitcast %"class.mojo::internal::Array_Data"* %210 to i8*
  %215 = getelementptr inbounds i8, i8* %214, i64 %212
  %216 = bitcast i8* %215 to %"class.network::mojom::internal::DnsOverHttpsServer_Data"*
  %217 = select i1 %213, %"class.network::mojom::internal::DnsOverHttpsServer_Data"* null, %"class.network::mojom::internal::DnsOverHttpsServer_Data"* %216
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %200) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %200, i8 0, i64 24, i1 false) #14
  %218 = getelementptr inbounds %"class.network::mojom::internal::DnsOverHttpsServer_Data", %"class.network::mojom::internal::DnsOverHttpsServer_Data"* %217, i64 0, i32 1
  %219 = getelementptr inbounds %"struct.mojo::internal::Pointer.92", %"struct.mojo::internal::Pointer.92"* %218, i64 0, i32 0
  %220 = load i64, i64* %219, align 8
  %221 = icmp eq i64 %220, 0
  %222 = bitcast %"struct.mojo::internal::Pointer.92"* %218 to i8*
  %223 = getelementptr inbounds i8, i8* %222, i64 %220
  br i1 %221, label %251, label %224

224:                                              ; preds = %208
  %225 = getelementptr inbounds i8, i8* %223, i64 8
  %226 = getelementptr inbounds i8, i8* %223, i64 4
  %227 = bitcast i8* %226 to i32*
  %228 = load i32, i32* %227, align 1
  %229 = zext i32 %228 to i64
  %230 = call i1 @llvm.is.constant.i64(i64 %229) #14
  %231 = icmp ult i32 %228, 23
  %232 = and i1 %231, %230
  br i1 %232, label %233, label %239

233:                                              ; preds = %224
  %234 = trunc i32 %228 to i8
  store i8 %234, i8* %204, align 1
  %235 = icmp eq i32 %228, 0
  br i1 %235, label %237, label %236

236:                                              ; preds = %233
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %200, i8* align 1 %225, i64 %229, i1 false) #14
  br label %237

237:                                              ; preds = %236, %233
  %238 = getelementptr inbounds i8, i8* %200, i64 %229
  store i8 0, i8* %238, align 1
  br label %241

239:                                              ; preds = %224
  %240 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %225, i64 %229) #14
  br label %241

241:                                              ; preds = %239, %237
  %242 = load i8, i8* %204, align 1
  %243 = icmp slt i8 %242, 0
  %244 = load i8*, i8** %201, align 8
  %245 = select i1 %243, i8* %244, i8* %200
  %246 = load i64, i64* %202, align 8
  %247 = zext i8 %242 to i64
  %248 = select i1 %243, i64 %246, i64 %247
  %249 = call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %245, i64 %248) #14
  br i1 %249, label %251, label %250

250:                                              ; preds = %241
  call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #14
  br label %251

251:                                              ; preds = %250, %241, %208
  %252 = load i8, i8* %129, align 8, !range !2
  %253 = icmp eq i8 %252, 0
  br i1 %253, label %254, label %255

254:                                              ; preds = %251
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #16
  unreachable

255:                                              ; preds = %251
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #14
  %256 = getelementptr inbounds %"class.network::mojom::internal::DnsOverHttpsServer_Data", %"class.network::mojom::internal::DnsOverHttpsServer_Data"* %217, i64 0, i32 2
  %257 = load i8, i8* %256, align 1
  %258 = and i8 %257, 1
  store i8 %258, i8* %5, align 1
  %259 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %205, align 8
  %260 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %206, align 8
  %261 = icmp ult %"struct.net::DnsOverHttpsServerConfig"* %259, %260
  br i1 %261, label %262, label %266

262:                                              ; preds = %255
  %263 = icmp ne i8 %258, 0
  call void @_ZN3net24DnsOverHttpsServerConfigC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb(%"struct.net::DnsOverHttpsServerConfig"* %259, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i1 zeroext %263) #14
  %264 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %259, i64 1
  %265 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %264 to i64
  store i64 %265, i64* %207, align 8
  br label %267

266:                                              ; preds = %255
  call void @_ZNSt3__16vectorIN3net24DnsOverHttpsServerConfigENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJNS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEEbEEEvDpOT_(%"class.std::__1::vector.44"* %191, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i8* nonnull dereferenceable(1) %5) #14
  br label %267

267:                                              ; preds = %266, %262
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #14
  %268 = load i8, i8* %204, align 1
  %269 = icmp slt i8 %268, 0
  br i1 %269, label %270, label %272

270:                                              ; preds = %267
  %271 = load i8*, i8** %201, align 8
  call void @_ZdlPv(i8* %271) #15
  br label %272

272:                                              ; preds = %270, %267
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %200) #14
  %273 = add nuw nsw i64 %209, 1
  %274 = load i32, i32* %194, align 1
  %275 = zext i32 %274 to i64
  %276 = icmp ult i64 %273, %275
  br i1 %276, label %208, label %277

277:                                              ; preds = %272, %190, %160, %132
  %278 = load %"class.network::mojom::internal::DnsConfigOverrides_Data"*, %"class.network::mojom::internal::DnsConfigOverrides_Data"** %10, align 8
  %279 = getelementptr inbounds %"class.network::mojom::internal::DnsConfigOverrides_Data", %"class.network::mojom::internal::DnsConfigOverrides_Data"* %278, i64 0, i32 11
  %280 = load i32, i32* %279, align 1
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds [4 x i64], [4 x i64]* @switch.table._ZN4mojo12StructTraitsIN7network5mojom26DnsConfigOverridesDataViewEN3net18DnsConfigOverridesEE4ReadES3_PS5_, i64 0, i64 %281
  %283 = load i64, i64* %282, align 8
  %284 = sext i32 %280 to i64
  %285 = getelementptr inbounds [4 x i64], [4 x i64]* @switch.table._ZN4mojo12StructTraitsIN7network5mojom26DnsConfigOverridesDataViewEN3net18DnsConfigOverridesEE4ReadES3_PS5_.2, i64 0, i64 %284
  %286 = load i64, i64* %285, align 8
  %287 = or i64 %286, %283
  %288 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %2, i64 0, i32 13
  %289 = bitcast %"class.absl::optional"* %288 to i64*
  store i64 %287, i64* %289, align 8
  %290 = getelementptr inbounds %"class.network::mojom::internal::DnsConfigOverrides_Data", %"class.network::mojom::internal::DnsConfigOverrides_Data"* %278, i64 0, i32 13
  %291 = load i32, i32* %290, align 1
  %292 = zext i32 %291 to i48
  %293 = shl nuw nsw i48 %292, 4
  %294 = lshr i48 4295032832, %293
  %295 = zext i32 %291 to i48
  %296 = shl nuw nsw i48 %295, 4
  %297 = lshr i48 16777216, %296
  %298 = or i48 %297, %294
  %299 = trunc i48 %298 to i16
  %300 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %2, i64 0, i32 14
  %301 = bitcast %"class.absl::optional.24"* %300 to i16*
  store i16 %299, i16* %301, align 8
  %302 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %2, i64 0, i32 16
  %303 = bitcast %"class.mojo::internal::Array_Data.103"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %303) #14
  %304 = getelementptr inbounds %"class.network::mojom::internal::DnsConfigOverrides_Data", %"class.network::mojom::internal::DnsConfigOverrides_Data"* %278, i64 0, i32 15
  %305 = getelementptr inbounds %"struct.mojo::internal::Pointer.63", %"struct.mojo::internal::Pointer.63"* %304, i64 0, i32 0
  %306 = load i64, i64* %305, align 8
  %307 = icmp eq i64 %306, 0
  %308 = bitcast %"struct.mojo::internal::Pointer.63"* %304 to i8*
  %309 = getelementptr inbounds i8, i8* %308, i64 %306
  %310 = bitcast i8* %309 to %"class.mojo::internal::Array_Data.103"*
  %311 = select i1 %307, %"class.mojo::internal::Array_Data.103"* null, %"class.mojo::internal::Array_Data.103"* %310
  store %"class.mojo::internal::Array_Data.103"* %311, %"class.mojo::internal::Array_Data.103"** %6, align 8
  %312 = call zeroext i1 @_ZN4mojo8internal11DeserializeINS_13ArrayDataViewINS_14StringDataViewEEERPNS0_10Array_DataINS0_7PointerINS5_IcEEEEEEN4absl8optionalINSt3__16vectorINSE_12basic_stringIcNSE_11char_traitsIcEENSE_9allocatorIcEEEENSJ_ISL_EEEEEEJRPNS_7MessageEELPv0EEEbOT0_PT1_DpOT2_(%"class.mojo::internal::Array_Data.103"** nonnull dereferenceable(8) %6, %"class.absl::optional.6"* %302, %"class.mojo::Message"** dereferenceable(8) %11) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %303) #14
  br i1 %312, label %313, label %319

313:                                              ; preds = %277
  %314 = load %"class.network::mojom::internal::DnsConfigOverrides_Data"*, %"class.network::mojom::internal::DnsConfigOverrides_Data"** %10, align 8
  %315 = getelementptr inbounds %"class.network::mojom::internal::DnsConfigOverrides_Data", %"class.network::mojom::internal::DnsConfigOverrides_Data"* %314, i64 0, i32 5
  %316 = load i8, i8* %315, align 1
  %317 = and i8 %316, 1
  %318 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %2, i64 0, i32 17
  store i8 %317, i8* %318, align 8
  br label %319

319:                                              ; preds = %313, %277, %83, %78, %36, %23, %3
  %320 = phi i1 [ false, %3 ], [ false, %23 ], [ false, %36 ], [ false, %78 ], [ false, %83 ], [ true, %313 ], [ false, %277 ]
  ret i1 %320
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4mojo10EnumTraitsIN7network5mojom12DnsQueryTypeEN3net12DnsQueryTypeEE7ToMojomES5_(i32) local_unnamed_addr #4 align 2 {
  %2 = sext i32 %0 to i64
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table._ZN4mojo10EnumTraitsIN7network5mojom12DnsQueryTypeEN3net12DnsQueryTypeEE7ToMojomES5_, i64 0, i64 %2
  %4 = load i32, i32* %3, align 4
  ret i32 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4mojo10EnumTraitsIN7network5mojom12DnsQueryTypeEN3net12DnsQueryTypeEE9FromMojomES3_PS5_(i32, i32* nocapture) local_unnamed_addr #5 align 2 {
  %3 = sext i32 %0 to i64
  %4 = getelementptr inbounds [7 x i32], [7 x i32]* @switch.table._ZN4mojo10EnumTraitsIN7network5mojom12DnsQueryTypeEN3net12DnsQueryTypeEE9FromMojomES3_PS5_, i64 0, i64 %3
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %1, align 4
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4mojo10EnumTraitsIN7network5mojom28ResolveHostParameters_SourceEN3net18HostResolverSourceEE7ToMojomES5_(i32) local_unnamed_addr #4 align 2 {
  ret i32 %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4mojo10EnumTraitsIN7network5mojom28ResolveHostParameters_SourceEN3net18HostResolverSourceEE9FromMojomES3_PS5_(i32, i32* nocapture) local_unnamed_addr #5 align 2 {
  store i32 %0, i32* %1, align 4
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4mojo10EnumTraitsIN7network5mojom27MdnsListenClient_UpdateTypeEN3net12HostResolver12MdnsListener8Delegate10UpdateTypeEE7ToMojomES8_(i32) local_unnamed_addr #4 align 2 {
  ret i32 %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4mojo10EnumTraitsIN7network5mojom27MdnsListenClient_UpdateTypeEN3net12HostResolver12MdnsListener8Delegate10UpdateTypeEE9FromMojomES3_PS8_(i32, i32* nocapture) local_unnamed_addr #5 align 2 {
  store i32 %0, i32* %1, align 4
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4mojo10EnumTraitsIN7network5mojom13SecureDnsModeEN3net13SecureDnsModeEE7ToMojomES5_(i32) local_unnamed_addr #4 align 2 {
  ret i32 %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4mojo10EnumTraitsIN7network5mojom13SecureDnsModeEN3net13SecureDnsModeEE9FromMojomES3_PS5_(i32, i32* nocapture) local_unnamed_addr #5 align 2 {
  store i32 %0, i32* %1, align 4
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4mojo10EnumTraitsIN7network5mojom15SecureDnsPolicyEN3net15SecureDnsPolicyEE7ToMojomES5_(i32) local_unnamed_addr #4 align 2 {
  %2 = icmp ne i32 %0, 0
  %3 = zext i1 %2 to i32
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4mojo10EnumTraitsIN7network5mojom15SecureDnsPolicyEN3net15SecureDnsPolicyEE9FromMojomES3_PS5_(i32, i32* nocapture) local_unnamed_addr #5 align 2 {
  %3 = icmp ne i32 %0, 0
  %4 = zext i1 %3 to i32
  store i32 %4, i32* %1, align 4
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN7network5mojom24ResolveErrorInfoDataViewEN3net16ResolveErrorInfoEE4ReadES3_PS5_(%"class.network::mojom::internal::ResolveErrorInfo_Data"*, %"struct.net::ResolveErrorInfo"*) local_unnamed_addr #3 align 2 {
  %3 = alloca %"struct.net::ResolveErrorInfo", align 4
  %4 = getelementptr inbounds %"class.network::mojom::internal::ResolveErrorInfo_Data", %"class.network::mojom::internal::ResolveErrorInfo_Data"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.network::mojom::internal::ResolveErrorInfo_Data", %"class.network::mojom::internal::ResolveErrorInfo_Data"* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 1
  %9 = and i8 %8, 1
  br i1 %6, label %10, label %12

10:                                               ; preds = %2
  %11 = icmp eq i8 %9, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %2, %10
  %13 = phi i8 [ 0, %10 ], [ %9, %2 ]
  %14 = bitcast %"struct.net::ResolveErrorInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #14
  %15 = icmp ne i8 %13, 0
  call void @_ZN3net16ResolveErrorInfoC1Eib(%"struct.net::ResolveErrorInfo"* nonnull %3, i32 %5, i1 zeroext %15) #14
  %16 = call dereferenceable(8) %"struct.net::ResolveErrorInfo"* @_ZN3net16ResolveErrorInfoaSEOS0_(%"struct.net::ResolveErrorInfo"* %1, %"struct.net::ResolveErrorInfo"* nonnull dereferenceable(8) %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #14
  br label %17

17:                                               ; preds = %10, %12
  %18 = phi i1 [ true, %12 ], [ false, %10 ]
  ret i1 %18
}

declare void @_ZN3net16ResolveErrorInfoC1Eib(%"struct.net::ResolveErrorInfo"*, i32, i1 zeroext) unnamed_addr #6

declare dereferenceable(8) %"struct.net::ResolveErrorInfo"* @_ZN3net16ResolveErrorInfoaSEOS0_(%"struct.net::ResolveErrorInfo"*, %"struct.net::ResolveErrorInfo"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN7network5mojom18DnsOverHttpsServerD1Ev(%"class.network::mojom::DnsOverHttpsServer"*) unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() local_unnamed_addr #6

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #10

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net24DnsOverHttpsServerConfigENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJNS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEEbEEEvDpOT_(%"class.std::__1::vector.44"*, %"class.std::__1::basic_string"* dereferenceable(24), i8* dereferenceable(1)) local_unnamed_addr #11 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.44"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 5
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 576460752303423487
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.44"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #16
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = ashr exact i64 %19, 5
  %21 = icmp ult i64 %20, 288230376151711743
  br i1 %21, label %22, label %30

22:                                               ; preds = %15
  %23 = ashr exact i64 %19, 4
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = icmp ugt i64 %25, 576460752303423487
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  tail call void @abort() #16
  unreachable

30:                                               ; preds = %15, %27
  %31 = phi i64 [ %25, %27 ], [ 576460752303423487, %15 ]
  %32 = shl i64 %31, 5
  %33 = tail call i8* @_Znwm(i64 %32) #15
  %34 = bitcast i8* %33 to %"struct.net::DnsOverHttpsServerConfig"*
  br label %35

35:                                               ; preds = %22, %30
  %36 = phi i64 [ %31, %30 ], [ 0, %22 ]
  %37 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %34, %30 ], [ null, %22 ]
  %38 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %37, i64 %10
  %39 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %37, i64 %36
  %40 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %39 to i64
  %41 = load i8, i8* %2, align 1, !range !2
  %42 = icmp ne i8 %41, 0
  tail call void @_ZN3net24DnsOverHttpsServerConfigC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb(%"struct.net::DnsOverHttpsServerConfig"* %38, %"class.std::__1::basic_string"* dereferenceable(24) %1, i1 zeroext %42) #14
  %43 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %38, i64 1
  %44 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %0, i64 0, i32 0, i32 0
  %46 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %45, align 8
  %47 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %46 to i64
  %48 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %4, align 8
  %49 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %48, %46
  br i1 %49, label %91, label %50

50:                                               ; preds = %35
  %51 = getelementptr %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %48, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = ptrtoint i8** %51 to i64
  %53 = sub i64 %52, %47
  %54 = and i64 %53, 32
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %64

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %38, i64 -1
  %58 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %48, i64 -1
  %59 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %57 to i8*
  %60 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 24, i1 false) #14
  %61 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %38, i64 -1, i32 1
  %62 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %48, i64 -1, i32 1
  %63 = load i8, i8* %62, align 8, !range !2
  store i8 %63, i8* %61, align 8
  br label %64

64:                                               ; preds = %56, %50
  %65 = phi %"struct.net::DnsOverHttpsServerConfig"* [ undef, %50 ], [ %57, %56 ]
  %66 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %38, %50 ], [ %57, %56 ]
  %67 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %48, %50 ], [ %58, %56 ]
  %68 = icmp ult i64 %53, 32
  br i1 %68, label %87, label %69

69:                                               ; preds = %64, %69
  %70 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %79, %69 ], [ %66, %64 ]
  %71 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %80, %69 ], [ %67, %64 ]
  %72 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %70, i64 -1
  %73 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %71, i64 -1
  %74 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %72 to i8*
  %75 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #14
  %76 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %70, i64 -1, i32 1
  %77 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %71, i64 -1, i32 1
  %78 = load i8, i8* %77, align 8, !range !2
  store i8 %78, i8* %76, align 8
  %79 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %70, i64 -2
  %80 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %71, i64 -2
  %81 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %79 to i8*
  %82 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 24, i1 false) #14
  %83 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %70, i64 -2, i32 1
  %84 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %71, i64 -2, i32 1
  %85 = load i8, i8* %84, align 8, !range !2
  store i8 %85, i8* %83, align 8
  %86 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %80, %46
  br i1 %86, label %87, label %69

87:                                               ; preds = %69, %64
  %88 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %65, %64 ], [ %79, %69 ]
  %89 = load i64, i64* %7, align 8
  %90 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %4, align 8
  br label %91

91:                                               ; preds = %35, %87
  %92 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %90, %87 ], [ %46, %35 ]
  %93 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %88, %87 ], [ %38, %35 ]
  %94 = phi i64 [ %89, %87 ], [ %47, %35 ]
  %95 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %93 to i64
  store i64 %95, i64* %7, align 8
  store i64 %44, i64* %5, align 8
  store i64 %40, i64* %17, align 8
  %96 = inttoptr i64 %94 to %"struct.net::DnsOverHttpsServerConfig"*
  %97 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %92, %96
  br i1 %97, label %110, label %98

98:                                               ; preds = %91, %108
  %99 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %100, %108 ], [ %92, %91 ]
  %100 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %99, i64 -1
  %101 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %100 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %98
  %106 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  tail call void @_ZdlPv(i8* %107) #15
  br label %108

108:                                              ; preds = %105, %98
  %109 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %100, %96
  br i1 %109, label %110, label %98

110:                                              ; preds = %108, %91
  %111 = icmp eq i64 %94, 0
  br i1 %111, label %114, label %112

112:                                              ; preds = %110
  %113 = inttoptr i64 %94 to i8*
  tail call void @_ZdlPv(i8* %113) #15
  br label %114

114:                                              ; preds = %110, %112
  ret void
}

declare void @_ZN3net24DnsOverHttpsServerConfigC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb(%"struct.net::DnsOverHttpsServerConfig"*, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

declare void @_ZN7network5mojom18DnsOverHttpsServerC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEb(%"class.network::mojom::DnsOverHttpsServer"*, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4mojo16InlinedStructPtrIN7network5mojom18DnsOverHttpsServerEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.56"*, %"class.mojo::InlinedStructPtr"* dereferenceable(40)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.mojo::InlinedStructPtr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.56"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 40
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 461168601842738790
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.56"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.mojo::InlinedStructPtr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 40
  %20 = icmp ult i64 %19, 230584300921369395
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 461168601842738790, %14 ]
  %28 = mul i64 %27, 40
  %29 = tail call i8* @_Znwm(i64 %28) #15
  %30 = bitcast i8* %29 to %"class.mojo::InlinedStructPtr"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.mojo::InlinedStructPtr"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %33, i64 %9
  %35 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %33, i64 %32
  %36 = ptrtoint %"class.mojo::InlinedStructPtr"* %35 to i64
  %37 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %34, i64 0, i32 0
  tail call void @_ZN7network5mojom18DnsOverHttpsServerC1Ev(%"class.network::mojom::DnsOverHttpsServer"* %37) #14
  %38 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %33, i64 %9, i32 1
  store i32 0, i32* %38, align 8
  tail call void @_ZN7network5mojom18DnsOverHttpsServerD1Ev(%"class.network::mojom::DnsOverHttpsServer"* %37) #14
  tail call void @_ZN7network5mojom18DnsOverHttpsServerC1Ev(%"class.network::mojom::DnsOverHttpsServer"* %37) #14
  %39 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %1, i64 0, i32 0
  tail call void @_ZNSt3__14swapIN7network5mojom18DnsOverHttpsServerEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"class.network::mojom::DnsOverHttpsServer"* dereferenceable(32) %37, %"class.network::mojom::DnsOverHttpsServer"* dereferenceable(32) %39) #14
  %40 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %1, i64 0, i32 1
  %41 = load i32, i32* %38, align 4
  %42 = load i32, i32* %40, align 4
  store i32 %42, i32* %38, align 4
  store i32 %41, i32* %40, align 4
  %43 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %34, i64 1
  %44 = ptrtoint %"class.mojo::InlinedStructPtr"* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 0
  %46 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %45, align 8
  %47 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %3, align 8
  %48 = icmp eq %"class.mojo::InlinedStructPtr"* %47, %46
  br i1 %48, label %49, label %51

49:                                               ; preds = %31
  %50 = ptrtoint %"class.mojo::InlinedStructPtr"* %46 to i64
  br label %66

51:                                               ; preds = %31, %51
  %52 = phi %"class.mojo::InlinedStructPtr"* [ %61, %51 ], [ %34, %31 ]
  %53 = phi %"class.mojo::InlinedStructPtr"* [ %54, %51 ], [ %47, %31 ]
  %54 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %53, i64 -1
  %55 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %52, i64 -1, i32 0
  tail call void @_ZN7network5mojom18DnsOverHttpsServerC1Ev(%"class.network::mojom::DnsOverHttpsServer"* %55) #14
  %56 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %52, i64 -1, i32 1
  store i32 0, i32* %56, align 8
  tail call void @_ZN7network5mojom18DnsOverHttpsServerD1Ev(%"class.network::mojom::DnsOverHttpsServer"* %55) #14
  tail call void @_ZN7network5mojom18DnsOverHttpsServerC1Ev(%"class.network::mojom::DnsOverHttpsServer"* %55) #14
  %57 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %54, i64 0, i32 0
  tail call void @_ZNSt3__14swapIN7network5mojom18DnsOverHttpsServerEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"class.network::mojom::DnsOverHttpsServer"* dereferenceable(32) %55, %"class.network::mojom::DnsOverHttpsServer"* dereferenceable(32) %57) #14
  %58 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %53, i64 -1, i32 1
  %59 = load i32, i32* %56, align 4
  %60 = load i32, i32* %58, align 4
  store i32 %60, i32* %56, align 4
  store i32 %59, i32* %58, align 4
  %61 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %52, i64 -1
  %62 = icmp eq %"class.mojo::InlinedStructPtr"* %54, %46
  br i1 %62, label %63, label %51

63:                                               ; preds = %51
  %64 = load i64, i64* %6, align 8
  %65 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %3, align 8
  br label %66

66:                                               ; preds = %49, %63
  %67 = phi %"class.mojo::InlinedStructPtr"* [ %46, %49 ], [ %65, %63 ]
  %68 = phi %"class.mojo::InlinedStructPtr"* [ %34, %49 ], [ %61, %63 ]
  %69 = phi i64 [ %50, %49 ], [ %64, %63 ]
  %70 = ptrtoint %"class.mojo::InlinedStructPtr"* %68 to i64
  store i64 %70, i64* %6, align 8
  store i64 %44, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %71 = inttoptr i64 %69 to %"class.mojo::InlinedStructPtr"*
  %72 = icmp eq %"class.mojo::InlinedStructPtr"* %67, %71
  br i1 %72, label %78, label %73

73:                                               ; preds = %66, %73
  %74 = phi %"class.mojo::InlinedStructPtr"* [ %75, %73 ], [ %67, %66 ]
  %75 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %74, i64 -1
  %76 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %75, i64 0, i32 0
  tail call void @_ZN7network5mojom18DnsOverHttpsServerD1Ev(%"class.network::mojom::DnsOverHttpsServer"* %76) #14
  %77 = icmp eq %"class.mojo::InlinedStructPtr"* %75, %71
  br i1 %77, label %78, label %73

78:                                               ; preds = %73, %66
  %79 = icmp eq i64 %69, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = inttoptr i64 %69 to i8*
  tail call void @_ZdlPv(i8* %81) #15
  br label %82

82:                                               ; preds = %78, %80
  ret void
}

declare void @_ZN7network5mojom18DnsOverHttpsServerC1Ev(%"class.network::mojom::DnsOverHttpsServer"*) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14swapIN7network5mojom18DnsOverHttpsServerEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"class.network::mojom::DnsOverHttpsServer"* dereferenceable(32), %"class.network::mojom::DnsOverHttpsServer"* dereferenceable(32)) local_unnamed_addr #11 comdat {
  %3 = alloca %"class.network::mojom::DnsOverHttpsServer", align 8
  %4 = bitcast %"class.network::mojom::DnsOverHttpsServer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #14
  %5 = getelementptr inbounds %"class.network::mojom::DnsOverHttpsServer", %"class.network::mojom::DnsOverHttpsServer"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.network::mojom::DnsOverHttpsServer", %"class.network::mojom::DnsOverHttpsServer"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.network::mojom::DnsOverHttpsServer", %"class.network::mojom::DnsOverHttpsServer"* %3, i64 0, i32 1
  %8 = bitcast %"class.network::mojom::DnsOverHttpsServer"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = bitcast %"class.network::mojom::DnsOverHttpsServer"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %11 = load i8, i8* %9, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.network::mojom::DnsOverHttpsServer"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %14, i64 24, i1 false) #14
  br label %21

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.network::mojom::DnsOverHttpsServer", %"class.network::mojom::DnsOverHttpsServer"* %3, i64 0, i32 0
  %17 = getelementptr inbounds %"class.network::mojom::DnsOverHttpsServer", %"class.network::mojom::DnsOverHttpsServer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.network::mojom::DnsOverHttpsServer", %"class.network::mojom::DnsOverHttpsServer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %16, i8* %18, i64 %20) #14
  br label %21

21:                                               ; preds = %13, %15
  %22 = getelementptr inbounds %"class.network::mojom::DnsOverHttpsServer", %"class.network::mojom::DnsOverHttpsServer"* %0, i64 0, i32 1
  %23 = load i8, i8* %22, align 8, !range !2
  store i8 %23, i8* %7, align 8
  %24 = getelementptr inbounds %"class.network::mojom::DnsOverHttpsServer", %"class.network::mojom::DnsOverHttpsServer"* %0, i64 0, i32 0
  %25 = icmp eq %"class.network::mojom::DnsOverHttpsServer"* %0, %1
  br i1 %25, label %53, label %26

26:                                               ; preds = %21
  %27 = load i8, i8* %9, align 1
  %28 = icmp slt i8 %27, 0
  %29 = bitcast %"class.network::mojom::DnsOverHttpsServer"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %28, label %43, label %33

33:                                               ; preds = %26
  br i1 %32, label %37, label %34

34:                                               ; preds = %33
  %35 = bitcast %"class.network::mojom::DnsOverHttpsServer"* %0 to i8*
  %36 = bitcast %"class.network::mojom::DnsOverHttpsServer"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false) #14
  br label %53

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.network::mojom::DnsOverHttpsServer", %"class.network::mojom::DnsOverHttpsServer"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"class.network::mojom::DnsOverHttpsServer", %"class.network::mojom::DnsOverHttpsServer"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %24, i8* %39, i64 %41) #14
  br label %53

43:                                               ; preds = %26
  %44 = getelementptr inbounds %"class.network::mojom::DnsOverHttpsServer", %"class.network::mojom::DnsOverHttpsServer"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %"class.network::mojom::DnsOverHttpsServer", %"class.network::mojom::DnsOverHttpsServer"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.network::mojom::DnsOverHttpsServer"* %1 to i8*
  %49 = zext i8 %31 to i64
  %50 = select i1 %32, i8* %45, i8* %48
  %51 = select i1 %32, i64 %47, i64 %49
  %52 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %24, i8* %50, i64 %51) #14
  br label %53

53:                                               ; preds = %21, %34, %37, %43
  %54 = getelementptr inbounds %"class.network::mojom::DnsOverHttpsServer", %"class.network::mojom::DnsOverHttpsServer"* %1, i64 0, i32 1
  %55 = load i8, i8* %54, align 8, !range !2
  store i8 %55, i8* %22, align 8
  %56 = getelementptr inbounds %"class.network::mojom::DnsOverHttpsServer", %"class.network::mojom::DnsOverHttpsServer"* %1, i64 0, i32 0
  %57 = icmp eq %"class.network::mojom::DnsOverHttpsServer"* %3, %1
  br i1 %57, label %81, label %58

58:                                               ; preds = %53
  %59 = bitcast %"class.network::mojom::DnsOverHttpsServer"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  %63 = bitcast %"class.network::mojom::DnsOverHttpsServer"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %62, label %74, label %67

67:                                               ; preds = %58
  br i1 %66, label %70, label %68

68:                                               ; preds = %67
  %69 = bitcast %"class.network::mojom::DnsOverHttpsServer"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* nonnull align 8 %4, i64 24, i1 false) #14
  br label %81

70:                                               ; preds = %67
  %71 = load i8*, i8** %5, align 8
  %72 = load i64, i64* %6, align 8
  %73 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %56, i8* %71, i64 %72) #14
  br label %81

74:                                               ; preds = %58
  %75 = load i8*, i8** %5, align 8
  %76 = load i64, i64* %6, align 8
  %77 = zext i8 %65 to i64
  %78 = select i1 %66, i8* %75, i8* %4
  %79 = select i1 %66, i64 %76, i64 %77
  %80 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %56, i8* %78, i64 %79) #14
  br label %81

81:                                               ; preds = %53, %68, %70, %74
  %82 = load i8, i8* %7, align 8, !range !2
  store i8 %82, i8* %54, align 8
  call void @_ZN7network5mojom18DnsOverHttpsServerD1Ev(%"class.network::mojom::DnsOverHttpsServer"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #14
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #6

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal11DeserializeINS_13ArrayDataViewIN7network5mojom18IPEndPointDataViewEEERPNS0_10Array_DataINS0_7PointerINS4_8internal15IPEndPoint_DataEEEEEN4absl8optionalINSt3__16vectorIN3net10IPEndPointENSH_9allocatorISK_EEEEEEJRPNS_7MessageEELPv0EEEbOT0_PT1_DpOT2_(%"class.mojo::internal::Array_Data.100"** dereferenceable(8), %"class.absl::optional.0"*, %"class.mojo::Message"** dereferenceable(8)) local_unnamed_addr #3 comdat {
  %4 = load %"class.mojo::internal::Array_Data.100"*, %"class.mojo::internal::Array_Data.100"** %0, align 8
  %5 = icmp eq %"class.mojo::internal::Array_Data.100"* %4, null
  %6 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %5, label %9, label %28

9:                                                ; preds = %3
  br i1 %8, label %51, label %10

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %11, align 8
  %13 = icmp eq %"class.net::IPEndPoint"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %16 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %15, align 8
  %17 = icmp eq %"class.net::IPEndPoint"* %16, %12
  br i1 %17, label %24, label %18

18:                                               ; preds = %14, %18
  %19 = phi %"class.net::IPEndPoint"* [ %20, %18 ], [ %16, %14 ]
  %20 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %19, i64 -1
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %20) #14
  %21 = icmp eq %"class.net::IPEndPoint"* %20, %12
  br i1 %21, label %22, label %18

22:                                               ; preds = %18
  %23 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %11, align 8
  br label %24

24:                                               ; preds = %22, %14
  %25 = phi %"class.net::IPEndPoint"* [ %23, %22 ], [ %12, %14 ]
  store %"class.net::IPEndPoint"* %12, %"class.net::IPEndPoint"** %15, align 8
  %26 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %26) #15
  br label %27

27:                                               ; preds = %24, %10
  store i8 0, i8* %6, align 8
  br label %51

28:                                               ; preds = %3
  %29 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %8, label %30, label %46

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::vector"* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #14
  store i8 1, i8* %6, align 8
  %32 = load %"class.mojo::internal::Array_Data.100"*, %"class.mojo::internal::Array_Data.100"** %0, align 8
  %33 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %34 = icmp eq %"class.mojo::internal::Array_Data.100"* %32, null
  br i1 %34, label %35, label %46

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %33, i64 0, i32 0, i32 0
  %37 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %36, align 8
  %38 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %39 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %38, align 8
  %40 = icmp eq %"class.net::IPEndPoint"* %39, %37
  br i1 %40, label %45, label %41

41:                                               ; preds = %35, %41
  %42 = phi %"class.net::IPEndPoint"* [ %43, %41 ], [ %39, %35 ]
  %43 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %42, i64 -1
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %43) #14
  %44 = icmp eq %"class.net::IPEndPoint"* %43, %37
  br i1 %44, label %45, label %41

45:                                               ; preds = %41, %35
  store %"class.net::IPEndPoint"* %37, %"class.net::IPEndPoint"** %38, align 8
  br label %51

46:                                               ; preds = %28, %30
  %47 = phi %"class.std::__1::vector"* [ %33, %30 ], [ %29, %28 ]
  %48 = phi %"class.mojo::internal::Array_Data.100"* [ %32, %30 ], [ %4, %28 ]
  %49 = load %"class.mojo::Message"*, %"class.mojo::Message"** %2, align 8
  %50 = tail call zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN7network5mojom18IPEndPointDataViewEEENSt3__16vectorIN3net10IPEndPointENS7_9allocatorISA_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISD_EESD_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal15IPEndPoint_DataEEEEEPSD_PNS_7MessageE(%"class.mojo::internal::Array_Data.100"* nonnull %48, %"class.std::__1::vector"* %47, %"class.mojo::Message"* %49) #14
  br label %51

51:                                               ; preds = %46, %45, %27, %9
  %52 = phi i1 [ true, %9 ], [ true, %27 ], [ %50, %46 ], [ true, %45 ]
  ret i1 %52
}

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN7network5mojom18IPEndPointDataViewEEENSt3__16vectorIN3net10IPEndPointENS7_9allocatorISA_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISD_EESD_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal15IPEndPoint_DataEEEEEPSD_PNS_7MessageE(%"class.mojo::internal::Array_Data.100"*, %"class.std::__1::vector"*, %"class.mojo::Message"*) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::Array_Data.100", %"class.mojo::internal::Array_Data.100"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 1
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.net::IPEndPoint"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 20
  %14 = icmp eq i64 %13, %6
  br i1 %14, label %49, label %15

15:                                               ; preds = %3
  %16 = icmp eq i32 %5, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %15
  %18 = mul nuw nsw i64 %6, 20
  %19 = tail call i8* @_Znwm(i64 %18) #15
  %20 = bitcast i8* %19 to %"class.net::IPEndPoint"*
  %21 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %20, i64 %6
  %22 = ptrtoint i8* %19 to i64
  br label %23

23:                                               ; preds = %23, %17
  %24 = phi %"class.net::IPEndPoint"* [ %25, %23 ], [ %20, %17 ]
  tail call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* %24) #14
  %25 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %24, i64 1
  %26 = icmp eq %"class.net::IPEndPoint"* %25, %21
  br i1 %26, label %27, label %23

27:                                               ; preds = %23
  %28 = ptrtoint %"class.net::IPEndPoint"* %21 to i64
  %29 = load i64, i64* %10, align 8
  %30 = load i64, i64* %8, align 8
  br label %31

31:                                               ; preds = %15, %27
  %32 = phi i64 [ %28, %27 ], [ 0, %15 ]
  %33 = phi i64 [ %30, %27 ], [ %9, %15 ]
  %34 = phi i64 [ %22, %27 ], [ 0, %15 ]
  %35 = phi i64 [ %29, %27 ], [ %11, %15 ]
  store i64 %34, i64* %10, align 8
  store i64 %32, i64* %8, align 8
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast %"class.net::IPEndPoint"** %36 to i64*
  store i64 %32, i64* %37, align 8
  %38 = inttoptr i64 %35 to %"class.net::IPEndPoint"*
  %39 = icmp eq i64 %35, 0
  %40 = inttoptr i64 %33 to %"class.net::IPEndPoint"*
  br i1 %39, label %49, label %41

41:                                               ; preds = %31
  %42 = icmp eq %"class.net::IPEndPoint"* %40, %38
  br i1 %42, label %47, label %43

43:                                               ; preds = %41, %43
  %44 = phi %"class.net::IPEndPoint"* [ %45, %43 ], [ %40, %41 ]
  %45 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %44, i64 -1
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %45) #14
  %46 = icmp eq %"class.net::IPEndPoint"* %45, %38
  br i1 %46, label %47, label %43

47:                                               ; preds = %43, %41
  %48 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %48) #15
  br label %49

49:                                               ; preds = %3, %47, %31
  %50 = load i32, i32* %4, align 1
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %78, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.mojo::internal::Array_Data.100", %"class.mojo::internal::Array_Data.100"* %0, i64 1
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  br label %55

55:                                               ; preds = %52, %74
  %56 = phi i32 [ %50, %52 ], [ %75, %74 ]
  %57 = phi i64 [ 0, %52 ], [ %64, %74 ]
  %58 = getelementptr inbounds %"class.mojo::internal::Array_Data.100", %"class.mojo::internal::Array_Data.100"* %53, i64 %57
  %59 = bitcast %"class.mojo::internal::Array_Data.100"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, 0
  %62 = bitcast %"class.mojo::internal::Array_Data.100"* %58 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 %60
  %64 = add nuw nsw i64 %57, 1
  %65 = icmp eq i8* %63, null
  %66 = or i1 %61, %65
  br i1 %66, label %74, label %67

67:                                               ; preds = %55
  %68 = bitcast i8* %63 to %"class.network::mojom::internal::IPEndPoint_Data"*
  %69 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %54, align 8
  %70 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %69, i64 %57
  %71 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN7network5mojom18IPEndPointDataViewEN3net10IPEndPointEE4ReadES3_PS5_(%"class.network::mojom::internal::IPEndPoint_Data"* nonnull %68, %"class.mojo::Message"* %2, %"class.net::IPEndPoint"* %70) #14
  br i1 %71, label %72, label %78

72:                                               ; preds = %67
  %73 = load i32, i32* %4, align 1
  br label %74

74:                                               ; preds = %72, %55
  %75 = phi i32 [ %73, %72 ], [ %56, %55 ]
  %76 = zext i32 %75 to i64
  %77 = icmp ult i64 %64, %76
  br i1 %77, label %55, label %78

78:                                               ; preds = %74, %67, %49
  %79 = phi i1 [ true, %49 ], [ false, %67 ], [ true, %74 ]
  ret i1 %79
}

declare void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"*) unnamed_addr #6

declare zeroext i1 @_ZN4mojo12StructTraitsIN7network5mojom18IPEndPointDataViewEN3net10IPEndPointEE4ReadES3_PS5_(%"class.network::mojom::internal::IPEndPoint_Data"*, %"class.mojo::Message"*, %"class.net::IPEndPoint"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal11DeserializeINS_13ArrayDataViewINS_14StringDataViewEEERPNS0_10Array_DataINS0_7PointerINS5_IcEEEEEEN4absl8optionalINSt3__16vectorINSE_12basic_stringIcNSE_11char_traitsIcEENSE_9allocatorIcEEEENSJ_ISL_EEEEEEJRPNS_7MessageEELPv0EEEbOT0_PT1_DpOT2_(%"class.mojo::internal::Array_Data.103"** dereferenceable(8), %"class.absl::optional.6"*, %"class.mojo::Message"** dereferenceable(8)) local_unnamed_addr #3 comdat {
  %4 = load %"class.mojo::internal::Array_Data.103"*, %"class.mojo::internal::Array_Data.103"** %0, align 8
  %5 = icmp eq %"class.mojo::internal::Array_Data.103"* %4, null
  %6 = getelementptr inbounds %"class.absl::optional.6", %"class.absl::optional.6"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %5, label %9, label %38

9:                                                ; preds = %3
  br i1 %8, label %69, label %10

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"class.absl::optional.6", %"class.absl::optional.6"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %14 = icmp eq %"class.std::__1::basic_string"* %13, null
  br i1 %14, label %37, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %17 = getelementptr inbounds %"class.absl::optional.6", %"class.absl::optional.6"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %18 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %17, align 8
  %19 = icmp eq %"class.std::__1::basic_string"* %18, %13
  br i1 %19, label %35, label %20

20:                                               ; preds = %15, %30
  %21 = phi %"class.std::__1::basic_string"* [ %22, %30 ], [ %18, %15 ]
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 -1
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %29) #15
  br label %30

30:                                               ; preds = %27, %20
  %31 = icmp eq %"class.std::__1::basic_string"* %22, %13
  br i1 %31, label %32, label %20

32:                                               ; preds = %30
  %33 = bitcast %"class.std::__1::vector.11"* %11 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %15
  %36 = phi i8* [ %34, %32 ], [ %16, %15 ]
  store %"class.std::__1::basic_string"* %13, %"class.std::__1::basic_string"** %17, align 8
  tail call void @_ZdlPv(i8* %36) #15
  br label %37

37:                                               ; preds = %35, %10
  store i8 0, i8* %6, align 8
  br label %69

38:                                               ; preds = %3
  %39 = getelementptr inbounds %"class.absl::optional.6", %"class.absl::optional.6"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %8, label %40, label %64

40:                                               ; preds = %38
  %41 = bitcast %"class.std::__1::vector.11"* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #14
  store i8 1, i8* %6, align 8
  %42 = load %"class.mojo::internal::Array_Data.103"*, %"class.mojo::internal::Array_Data.103"** %0, align 8
  %43 = getelementptr inbounds %"class.absl::optional.6", %"class.absl::optional.6"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %44 = icmp eq %"class.mojo::internal::Array_Data.103"* %42, null
  br i1 %44, label %45, label %64

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %43, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %46, align 8
  %48 = getelementptr inbounds %"class.absl::optional.6", %"class.absl::optional.6"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %49 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %48, align 8
  %50 = icmp eq %"class.std::__1::basic_string"* %49, %47
  br i1 %50, label %63, label %51

51:                                               ; preds = %45, %61
  %52 = phi %"class.std::__1::basic_string"* [ %53, %61 ], [ %49, %45 ]
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 -1
  %54 = bitcast %"class.std::__1::basic_string"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  tail call void @_ZdlPv(i8* %60) #15
  br label %61

61:                                               ; preds = %58, %51
  %62 = icmp eq %"class.std::__1::basic_string"* %53, %47
  br i1 %62, label %63, label %51

63:                                               ; preds = %61, %45
  store %"class.std::__1::basic_string"* %47, %"class.std::__1::basic_string"** %48, align 8
  br label %69

64:                                               ; preds = %38, %40
  %65 = phi %"class.std::__1::vector.11"* [ %43, %40 ], [ %39, %38 ]
  %66 = phi %"class.mojo::internal::Array_Data.103"* [ %42, %40 ], [ %4, %38 ]
  %67 = load %"class.mojo::Message"*, %"class.mojo::Message"** %2, align 8
  %68 = tail call zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewINS_14StringDataViewEEENSt3__16vectorINS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENSA_ISC_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISE_EESE_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINSK_IcEEEEEEPSE_PNS_7MessageE(%"class.mojo::internal::Array_Data.103"* nonnull %66, %"class.std::__1::vector.11"* %65, %"class.mojo::Message"* %67) #14
  br label %69

69:                                               ; preds = %64, %63, %37, %9
  %70 = phi i1 [ true, %9 ], [ true, %37 ], [ %68, %64 ], [ true, %63 ]
  ret i1 %70
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewINS_14StringDataViewEEENSt3__16vectorINS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENSA_ISC_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISE_EESE_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINSK_IcEEEEEEPSE_PNS_7MessageE(%"class.mojo::internal::Array_Data.103"*, %"class.std::__1::vector.11"*, %"class.mojo::Message"*) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::Array_Data.103", %"class.mojo::internal::Array_Data.103"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 1
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.11"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 24
  %14 = icmp eq i64 %13, %6
  br i1 %14, label %55, label %15

15:                                               ; preds = %3
  %16 = icmp eq i32 %5, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %15
  %18 = mul nuw nsw i64 %6, 24
  %19 = tail call i8* @_Znwm(i64 %18) #15
  %20 = bitcast i8* %19 to %"class.std::__1::basic_string"*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 %6
  %22 = ptrtoint i8* %19 to i64
  %23 = add nsw i64 %6, -1
  %24 = getelementptr %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 %23, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = ptrtoint i8** %24 to i64
  %26 = sub i64 %25, %22
  %27 = urem i64 %26, 24
  %28 = add i64 %26, 24
  %29 = sub i64 %28, %27
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 %29, i1 false) #14
  %30 = ptrtoint %"class.std::__1::basic_string"* %21 to i64
  br label %31

31:                                               ; preds = %15, %17
  %32 = phi i64 [ %30, %17 ], [ 0, %15 ]
  %33 = phi i64 [ %22, %17 ], [ 0, %15 ]
  store i64 %33, i64* %10, align 8
  store i64 %32, i64* %8, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %35 = bitcast %"class.std::__1::basic_string"** %34 to i64*
  store i64 %32, i64* %35, align 8
  %36 = inttoptr i64 %11 to %"class.std::__1::basic_string"*
  %37 = icmp eq i64 %11, 0
  %38 = inttoptr i64 %9 to %"class.std::__1::basic_string"*
  br i1 %37, label %55, label %39

39:                                               ; preds = %31
  %40 = icmp eq %"class.std::__1::basic_string"* %38, %36
  br i1 %40, label %53, label %41

41:                                               ; preds = %39, %51
  %42 = phi %"class.std::__1::basic_string"* [ %43, %51 ], [ %38, %39 ]
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 -1
  %44 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  tail call void @_ZdlPv(i8* %50) #15
  br label %51

51:                                               ; preds = %48, %41
  %52 = icmp eq %"class.std::__1::basic_string"* %43, %36
  br i1 %52, label %53, label %41

53:                                               ; preds = %51, %39
  %54 = inttoptr i64 %11 to i8*
  tail call void @_ZdlPv(i8* %54) #15
  br label %55

55:                                               ; preds = %3, %53, %31
  %56 = load i32, i32* %4, align 1
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %123, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.mojo::internal::Array_Data.103", %"class.mojo::internal::Array_Data.103"* %0, i64 1
  %60 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %1, i64 0, i32 0, i32 0
  br label %61

61:                                               ; preds = %58, %119
  %62 = phi i64 [ 0, %58 ], [ %69, %119 ]
  %63 = getelementptr inbounds %"class.mojo::internal::Array_Data.103", %"class.mojo::internal::Array_Data.103"* %59, i64 %62
  %64 = bitcast %"class.mojo::internal::Array_Data.103"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %65, 0
  %67 = bitcast %"class.mojo::internal::Array_Data.103"* %63 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 %65
  %69 = add nuw nsw i64 %62, 1
  %70 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %60, align 8
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 %62
  %72 = icmp eq i8* %68, null
  %73 = or i1 %66, %72
  br i1 %73, label %119, label %74

74:                                               ; preds = %61
  %75 = getelementptr inbounds i8, i8* %68, i64 8
  %76 = getelementptr inbounds i8, i8* %68, i64 4
  %77 = bitcast i8* %76 to i32*
  %78 = load i32, i32* %77, align 1
  %79 = zext i32 %78 to i64
  %80 = tail call i1 @llvm.is.constant.i64(i64 %79) #14
  %81 = icmp ult i32 %78, 23
  %82 = and i1 %81, %80
  br i1 %82, label %83, label %101

83:                                               ; preds = %74
  %84 = bitcast %"class.std::__1::basic_string"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %92

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 %62, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %79, i64* %89, align 8
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  br label %95

92:                                               ; preds = %83
  %93 = trunc i32 %78 to i8
  store i8 %93, i8* %85, align 1
  %94 = bitcast %"class.std::__1::basic_string"* %71 to i8*
  br label %95

95:                                               ; preds = %92, %88
  %96 = phi i8* [ %91, %88 ], [ %94, %92 ]
  %97 = icmp eq i32 %78, 0
  br i1 %97, label %99, label %98

98:                                               ; preds = %95
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %96, i8* align 1 %75, i64 %79, i1 false) #14
  br label %99

99:                                               ; preds = %98, %95
  %100 = getelementptr inbounds i8, i8* %96, i64 %79
  store i8 0, i8* %100, align 1
  br label %104

101:                                              ; preds = %74
  %102 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %71, i8* %75, i64 %79) #14
  %103 = bitcast %"class.std::__1::basic_string"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %104

104:                                              ; preds = %101, %99
  %105 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %103, %101 ], [ %84, %99 ]
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  %107 = load i8, i8* %106, align 1
  %108 = icmp slt i8 %107, 0
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  %111 = bitcast %"class.std::__1::basic_string"* %71 to i8*
  %112 = select i1 %108, i8* %110, i8* %111
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 %62, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = zext i8 %107 to i64
  %116 = select i1 %108, i64 %114, i64 %115
  %117 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %112, i64 %116) #14
  br i1 %117, label %119, label %118

118:                                              ; preds = %104
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #14
  br label %119

119:                                              ; preds = %118, %104, %61
  %120 = load i32, i32* %4, align 1
  %121 = zext i32 %120 to i64
  %122 = icmp ult i64 %69, %121
  br i1 %122, label %61, label %123

123:                                              ; preds = %119, %55
  ret i1 true
}

declare zeroext i1 @_ZN4mojo12StructTraitsIN9mojo_base5mojom17TimeDeltaDataViewEN4base9TimeDeltaEE4ReadES3_PS5_(%"class.mojo_base::mojom::internal::TimeDelta_Data"*, %"class.base::TimeDelta"*) local_unnamed_addr #6

attributes #0 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4absl13make_optionalINSt3__16vectorIN4mojo16InlinedStructPtrIN7network5mojom18DnsOverHttpsServerEEENS1_9allocatorIS8_EEEEEENS_8optionalINS1_5decayIT_E4typeEEEOSE_: argument 0"}
!5 = distinct !{!5, !"_ZN4absl13make_optionalINSt3__16vectorIN4mojo16InlinedStructPtrIN7network5mojom18DnsOverHttpsServerEEENS1_9allocatorIS8_EEEEEENS_8optionalINS1_5decayIT_E4typeEEEOSE_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN7network5mojom18DnsOverHttpsServer3NewIJRNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERbEEEN4mojo16InlinedStructPtrIS1_EEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZN7network5mojom18DnsOverHttpsServer3NewIJRNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERbEEEN4mojo16InlinedStructPtrIS1_EEDpOT_"}
