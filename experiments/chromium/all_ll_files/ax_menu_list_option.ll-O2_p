; ModuleID = '../../third_party/blink/renderer/modules/accessibility/ax_menu_list_option.cc'
source_filename = "../../third_party/blink/renderer/modules/accessibility/ax_menu_list_option.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr.111 }
%class.scoped_refptr.111 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.104" }
%"struct.std::__1::__atomic_base.104" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.200" }
%"struct.std::__1::atomic.200" = type { %"struct.std::__1::__atomic_base.201" }
%"struct.std::__1::__atomic_base.201" = type { %"struct.std::__1::__atomic_base.202" }
%"struct.std::__1::__atomic_base.202" = type { %"struct.std::__1::__cxx_atomic_impl.203" }
%"struct.std::__1::__cxx_atomic_impl.203" = type { %"struct.std::__1::__cxx_atomic_base_impl.204" }
%"struct.std::__1::__cxx_atomic_base_impl.204" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.253", i32, [4 x i8], %"class.std::__1::unique_ptr.389", %"class.std::__1::unique_ptr.389", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.399", %"class.std::__1::unique_ptr.405", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.417", %"class.std::__1::unique_ptr.423", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.430", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.268", %"class.std::__1::unique_ptr.274", %"class.std::__1::unique_ptr.280", %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.297", %"class.std::__1::unique_ptr.304", %"class.std::__1::unique_ptr.304", %"class.std::__1::unique_ptr.311", %"class.std::__1::unique_ptr.318", %"class.std::__1::unique_ptr.325", %"class.std::__1::unique_ptr.325", %"class.std::__1::unique_ptr.332", %"class.std::__1::unique_ptr.339", %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.369", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.289" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.289" = type { %"struct.std::__1::__atomic_base.290" }
%"struct.std::__1::__atomic_base.290" = type { %"struct.std::__1::__atomic_base.291" }
%"struct.std::__1::__atomic_base.291" = type { %"struct.std::__1::__cxx_atomic_impl.292" }
%"struct.std::__1::__cxx_atomic_impl.292" = type { %"struct.std::__1::__cxx_atomic_base_impl.293" }
%"struct.std::__1::__cxx_atomic_base_impl.293" = type { i64 }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.blink::Worklist.300"* }
%"class.blink::Worklist.300" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.289" }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.blink::Worklist.307"* }
%"class.blink::Worklist.307" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.289" }
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.blink::Worklist.314"* }
%"class.blink::Worklist.314" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.289" }
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.blink::Worklist.321"* }
%"class.blink::Worklist.321" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.289" }
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.blink::Worklist.328"* }
%"class.blink::Worklist.328" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.289" }
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.blink::Worklist.335"* }
%"class.blink::Worklist.335" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.289" }
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"class.blink::Worklist.342"* }
%"class.blink::Worklist.342" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.289" }
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.349", %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.361", %"class.std::__1::__compressed_pair.363", [4 x i8] }>
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351", %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { i64 }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { float }
%"class.std::__1::unique_ptr.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.372", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.372" = type { %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.381" }
%"class.WTF::Vector.381" = type { %"class.WTF::VectorBuffer.382" }
%"class.WTF::VectorBuffer.382" = type { %"class.WTF::VectorBufferBase.383" }
%"class.WTF::VectorBufferBase.383" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.389" = type { %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.411" }
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.300"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.307"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.314"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.321"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.328"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.661" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.417" = type { %"class.std::__1::__compressed_pair.418" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"struct.std::__1::__compressed_pair_elem.419" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.429 }
%class.scoped_refptr.429 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.430" = type { %"struct.std::__1::__atomic_base.431" }
%"struct.std::__1::__atomic_base.431" = type { %"struct.std::__1::__cxx_atomic_impl.432" }
%"struct.std::__1::__cxx_atomic_impl.432" = type { %"struct.std::__1::__cxx_atomic_base_impl.433" }
%"struct.std::__1::__cxx_atomic_base_impl.433" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AXMenuListOption" = type { %"class.blink::AXNodeObject" }
%"class.blink::AXNodeObject" = type { %"class.blink::AXObject", i32, i32, %"class.blink::Member.82" }
%"class.blink::AXObject" = type { i32 (...)**, i32, %"class.blink::Member", %"class.blink::HeapVector", i8, i32, %"class.blink::LayoutRect", i32, i32, i8, %"class.blink::Member", i32, i32, %"class.blink::FloatRect", %"class.blink::Member.2" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::AXObject"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::AXObjectCacheImpl"* }
%"class.blink::Member.82" = type { %"class.blink::MemberBase.71" }
%"class.blink::MemberBase.71" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.82", %"class.blink::Member.85", %"class.blink::Member.82", %"class.blink::Member.82", %"class.blink::Member.87" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.85" = type { %"class.blink::MemberBase.86" }
%"class.blink::MemberBase.86" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.91", %"class.blink::Member.6", %"class.blink::Member.85", %"class.blink::Member.93", %"class.blink::Member.93", %"class.blink::Member.135", %"class.blink::Member.137", %"class.blink::Member.139", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.144", %"class.blink::HeapVector.146" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.91" = type { %"class.blink::MemberBase.92" }
%"class.blink::MemberBase.92" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.82", %"class.blink::Member.82" }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.196", %"class.WTF::Vector.196", i8, i32, %"class.blink::Member.207", %"class.blink::Member.209", %"class.blink::Member.211", %"class.blink::Member.213", %"class.blink::Member.215", %"class.blink::Member.217", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.225", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.231", %"class.blink::Member.233", %"class.blink::Member.152", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.236", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.128", %"class.blink::Member.109", %"class.blink::Member.445", %"class.blink::Member.109", %"class.blink::Member.109", %"class.blink::Member.109", %"class.blink::UserActionElementSet", %"class.blink::Member.454", double, double, i64, i64, %"class.blink::HeapHashSet.456", %"class.blink::HeapHashSet.463", i16, i8, %"class.blink::Member.470", %"class.blink::Member.472", %"class.blink::Member.474", %"class.blink::Member.476", %"class.blink::TextLinkColors", %"class.blink::Member.478", i8, [7 x i8], %"class.blink::HeapHashMap.480", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.109", %"class.WTF::Vector.487", %"class.blink::Member.492", %"class.blink::Member.494", i8, %"class.blink::Member.109", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.496", %"class.blink::HeapVector.498", %"class.std::__1::unique_ptr.506", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.512", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.525", %"class.WTF::Vector.527", i8, i8, %"class.std::__1::unique_ptr.532", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.128", %"class.blink::HeapVector.538", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.546", i8, i32, %"class.blink::Member.548", %"class.blink::Member.550", %"class.blink::Member.552", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.554", %"class.WTF::HashMap.556", %"class.blink::Member.561", %"class.blink::Member.563", %"class.blink::Member.565", %"class.blink::Member.567", %"class.blink::Member.6", %"class.blink::Member.6", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.569", i8, i32, %"class.blink::Member.576", %"class.blink::Member.578", i32, %"class.blink::Member.580", %"class.blink::Member.582", %"class.blink::Member.584", %"class.std::__1::unique_ptr.586", i64, %"class.std::__1::unique_ptr.592", i32, i32, %"class.blink::Member.598", %"class.blink::Member.600", %"class.blink::Member.602", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.604", %"class.WTF::Vector.606", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.611", %"class.blink::Member.618", %"class.std::__1::unique_ptr.620", %"class.blink::Member.626", i8, i8, %"class.WTF::String", %"class.blink::Member.628", i8, [7 x i8], %"class.blink::HeapHashMap.630", %"class.blink::HeapObserverSet", %"class.blink::Member.644", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.646", i32, i8, i8, %"class.blink::WeakMember.70", %"class.blink::Member.648" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.189" }
%"class.blink::HeapHashMap.189" = type { %"class.WTF::HashMap.192" }
%"class.WTF::HashMap.192" = type { %"class.WTF::HashTable.193" }
%"class.WTF::HashTable.193" = type <{ %"struct.WTF::KeyValuePair.195"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.195" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.196" = type { %"class.WTF::VectorBuffer.197" }
%"class.WTF::VectorBuffer.197" = type { %"class.WTF::VectorBufferBase.198" }
%"class.WTF::VectorBufferBase.198" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.199 }
%class.scoped_refptr.199 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.200" }
%"class.blink::Member.207" = type { %"class.blink::MemberBase.208" }
%"class.blink::MemberBase.208" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.209" = type { %"class.blink::MemberBase.210" }
%"class.blink::MemberBase.210" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.666", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.707", i32, i8, [3 x i8], %"class.blink::HeapVector.709", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.717", %"class.blink::Member.719", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.728", %"class.blink::Member.734", %"class.blink::Member.736", i8, [7 x i8] }>
%"class.blink::Supplementable.666" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.667" }
%"class.blink::HeapHashMap.667" = type { %"class.WTF::HashMap.670" }
%"class.WTF::HashMap.670" = type { %"class.WTF::HashTable.671" }
%"class.WTF::HashTable.671" = type <{ %"struct.WTF::KeyValuePair.673"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.673" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.682" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.674" }
%"class.blink::HeapObserverSet.674" = type { i32, [4 x i8], %"class.blink::HeapHashSet.675" }
%"class.blink::HeapHashSet.675" = type { %"class.WTF::HashSet.678" }
%"class.WTF::HashSet.678" = type { %"class.WTF::HashTable.679" }
%"class.WTF::HashTable.679" = type <{ %"class.blink::WeakMember.681"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.681" = type opaque
%"class.blink::Supplementable.682" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.683" }
%"class.blink::HeapHashMap.683" = type { %"class.WTF::HashMap.686" }
%"class.WTF::HashMap.686" = type { %"class.WTF::HashTable.687" }
%"class.WTF::HashTable.687" = type <{ %"struct.WTF::KeyValuePair.689"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.689" = type { i8*, %"class.blink::Member.937" }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.939" }
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.690, %"class.std::__1::unique_ptr.691", %"class.std::__1::unique_ptr.691", %"class.std::__1::unique_ptr.697", %"class.std::__1::unique_ptr.697", %"class.blink::Member.209", i32, [4 x i8], %"class.WTF::HashSet.703", i32, i32 }
%class.scoped_refptr.690 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.691" = type { %"class.std::__1::__compressed_pair.692" }
%"class.std::__1::__compressed_pair.692" = type { %"struct.std::__1::__compressed_pair_elem.693" }
%"struct.std::__1::__compressed_pair_elem.693" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.697" = type { %"class.std::__1::__compressed_pair.698" }
%"class.std::__1::__compressed_pair.698" = type { %"struct.std::__1::__compressed_pair_elem.699" }
%"struct.std::__1::__compressed_pair_elem.699" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.703" = type { %"class.WTF::HashTable.704" }
%"class.WTF::HashTable.704" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.707" = type { %"class.blink::MemberBase.708" }
%"class.blink::MemberBase.708" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.709" = type { %"class.WTF::Vector.712" }
%"class.WTF::Vector.712" = type { %"class.WTF::VectorBuffer.713" }
%"class.WTF::VectorBuffer.713" = type { %"class.WTF::VectorBufferBase.714" }
%"class.WTF::VectorBufferBase.714" = type { %"class.blink::Member.715"*, i32, i32 }
%"class.blink::Member.715" = type opaque
%"class.blink::Member.717" = type { %"class.blink::MemberBase.718" }
%"class.blink::MemberBase.718" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.719" = type { %"class.blink::MemberBase.720" }
%"class.blink::MemberBase.720" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.721", i32, i32 }
%"class.blink::HeapHashMap.721" = type { %"class.WTF::HashMap.724" }
%"class.WTF::HashMap.724" = type { %"class.WTF::HashTable.725" }
%"class.WTF::HashTable.725" = type <{ %"struct.WTF::KeyValuePair.727"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.727" = type opaque
%"class.std::__1::unique_ptr.728" = type { %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.730" }
%"struct.std::__1::__compressed_pair_elem.730" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.734" = type { %"class.blink::MemberBase.735" }
%"class.blink::MemberBase.735" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.736" = type { %"class.blink::MemberBase.737" }
%"class.blink::MemberBase.737" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.211" = type { %"class.blink::MemberBase.212" }
%"class.blink::MemberBase.212" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.213" = type { %"class.blink::MemberBase.214" }
%"class.blink::MemberBase.214" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.215" = type { %"class.blink::MemberBase.216" }
%"class.blink::MemberBase.216" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.217" = type { %"class.blink::MemberBase.218" }
%"class.blink::MemberBase.218" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.219" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::KURL"* }
%"class.blink::Member.231" = type { %"class.blink::MemberBase.232" }
%"class.blink::MemberBase.232" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.233" = type { %"class.blink::MemberBase.234" }
%"class.blink::MemberBase.234" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.152" = type { %"class.blink::MemberBase.153" }
%"class.blink::MemberBase.153" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.154", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.156, %"class.WTF::Vector.157", %"class.WTF::Vector.157", %"class.blink::Member.82", %"class.blink::Member.162", %"class.blink::HeapHashSet.166", %"class.blink::Member.6", %"class.WTF::HashSet.173", %"class.WTF::TextPosition", %"class.blink::Member.177", %"class.blink::HeapVector.179", %"class.blink::Member.186" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.154" = type { %"class.blink::MemberBase.155" }
%"class.blink::MemberBase.155" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.156 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.157" = type { %"class.WTF::VectorBuffer.158" }
%"class.WTF::VectorBuffer.158" = type { %"class.WTF::VectorBufferBase.159" }
%"class.WTF::VectorBufferBase.159" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.162" = type { %"class.blink::MemberBase.163" }
%"class.blink::MemberBase.163" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.164" }
%"class.blink::Member.164" = type { %"class.blink::MemberBase.165" }
%"class.blink::MemberBase.165" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.166" = type { %"class.WTF::HashSet.169" }
%"class.WTF::HashSet.169" = type { %"class.WTF::HashTable.170" }
%"class.WTF::HashTable.170" = type <{ %"class.blink::WeakMember.172"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.172" = type { %"class.blink::MemberBase.86" }
%"class.WTF::HashSet.173" = type { %"class.WTF::HashTable.174" }
%"class.WTF::HashTable.174" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.177" = type { %"class.blink::MemberBase.178" }
%"class.blink::MemberBase.178" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.179" = type { %"class.WTF::Vector.182" }
%"class.WTF::Vector.182" = type { %"class.WTF::VectorBuffer.183" }
%"class.WTF::VectorBuffer.183" = type { %"class.WTF::VectorBufferBase.184" }
%"class.WTF::VectorBufferBase.184" = type { %"class.blink::Member.162"*, i32, i32 }
%"class.blink::Member.186" = type { %"class.blink::MemberBase.187" }
%"class.blink::MemberBase.187" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.235 }
%class.scoped_refptr.235 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.236" = type { %"class.WTF::VectorBuffer.237" }
%"class.WTF::VectorBuffer.237" = type { %"class.WTF::VectorBufferBase.238" }
%"class.WTF::VectorBufferBase.238" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.239 }
%class.scoped_refptr.239 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.240", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.240" = type { %"class.base::RefCounted.241" }
%"class.base::RefCounted.241" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.244" }
%"class.blink::HeapHashMap.244" = type { %"class.WTF::HashMap.247" }
%"class.WTF::HashMap.247" = type { %"class.WTF::HashTable.248" }
%"class.WTF::HashTable.248" = type <{ %"struct.WTF::KeyValuePair.250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.250" = type { %"class.blink::WeakMember.251", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.251" = type { %"class.blink::MemberBase.252" }
%"class.blink::MemberBase.252" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.445" = type { %"class.blink::MemberBase.446" }
%"class.blink::MemberBase.446" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.6", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.82", %"class.blink::Member.82", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.447" }
%"class.blink::HeapHashMap.447" = type { %"class.WTF::HashMap.450" }
%"class.WTF::HashMap.450" = type { %"class.WTF::HashTable.451" }
%"class.WTF::HashTable.451" = type <{ %"struct.WTF::KeyValuePair.453"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.453" = type opaque
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.456" = type { %"class.WTF::HashSet.459" }
%"class.WTF::HashSet.459" = type { %"class.WTF::HashTable.460" }
%"class.WTF::HashTable.460" = type <{ %"class.blink::WeakMember.462"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.462" = type opaque
%"class.blink::HeapHashSet.463" = type { %"class.WTF::HashSet.466" }
%"class.WTF::HashSet.466" = type { %"class.WTF::HashTable.467" }
%"class.WTF::HashTable.467" = type <{ %"class.blink::WeakMember.469"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.469" = type opaque
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.474" = type { %"class.blink::MemberBase.475" }
%"class.blink::MemberBase.475" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.85", %"class.blink::HeapVector.146" }
%"class.blink::Member.476" = type { %"class.blink::MemberBase.477" }
%"class.blink::MemberBase.477" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.480" = type { %"class.WTF::HashMap.483" }
%"class.WTF::HashMap.483" = type { %"class.WTF::HashTable.484" }
%"class.WTF::HashTable.484" = type <{ %"struct.WTF::KeyValuePair.486"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.486" = type opaque
%"class.WTF::Vector.487" = type { %"class.WTF::VectorBuffer.488" }
%"class.WTF::VectorBuffer.488" = type { %"class.WTF::VectorBufferBase.489" }
%"class.WTF::VectorBufferBase.489" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.109" = type { %"class.blink::MemberBase.110" }
%"class.blink::MemberBase.110" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.112" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.112" = type { %"class.blink::MemberBase.113" }
%"class.blink::MemberBase.113" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.116", %"class.blink::Member.118", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.116" = type { %"class.WTF::SingleThreadedBitField.117" }
%"class.WTF::SingleThreadedBitField.117" = type { i32 }
%"class.blink::Member.118" = type { %"class.blink::MemberBase.119" }
%"class.blink::MemberBase.119" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.120 }
%class.scoped_refptr.120 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.121", %"class.WTF::AtomicString", %"class.WTF::Vector.123" }
%"class.WTF::RefCounted.121" = type { %"class.base::RefCounted.122" }
%"class.base::RefCounted.122" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.123" = type { %"class.WTF::VectorBuffer.124" }
%"class.WTF::VectorBuffer.124" = type { %"class.WTF::VectorBufferBase.125", [32 x i8] }
%"class.WTF::VectorBufferBase.125" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.496" = type { %"class.blink::MemberBase.497" }
%"class.blink::MemberBase.497" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.498" = type { %"class.WTF::Vector.501" }
%"class.WTF::Vector.501" = type { %"class.WTF::VectorBuffer.502" }
%"class.WTF::VectorBuffer.502" = type { %"class.WTF::VectorBufferBase.503" }
%"class.WTF::VectorBufferBase.503" = type { %"class.blink::Member.504"*, i32, i32 }
%"class.blink::Member.504" = type opaque
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.512" = type { %"class.WTF::HashSet.515" }
%"class.WTF::HashSet.515" = type { %"class.WTF::HashTable.516" }
%"class.WTF::HashTable.516" = type <{ %"class.blink::WeakMember.518"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.518" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.519", i32, [4 x i8] }>
%"class.WTF::Vector.519" = type { %"class.WTF::VectorBuffer.520" }
%"class.WTF::VectorBuffer.520" = type { %"class.WTF::VectorBufferBase.521" }
%"class.WTF::VectorBufferBase.521" = type { %"struct.std::__1::pair.522"*, i32, i32 }
%"struct.std::__1::pair.522" = type opaque
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.527" = type { %"class.WTF::VectorBuffer.528" }
%"class.WTF::VectorBuffer.528" = type { %"class.WTF::VectorBufferBase.529" }
%"class.WTF::VectorBufferBase.529" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.532" = type { %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"struct.std::__1::__compressed_pair_elem.534" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.128" = type { %"class.WTF::Vector.131" }
%"class.WTF::Vector.131" = type { %"class.WTF::VectorBuffer.132" }
%"class.WTF::VectorBuffer.132" = type { %"class.WTF::VectorBufferBase.133" }
%"class.WTF::VectorBufferBase.133" = type { %"class.blink::Member.109"*, i32, i32 }
%"class.blink::HeapVector.538" = type { %"class.WTF::Vector.541" }
%"class.WTF::Vector.541" = type { %"class.WTF::VectorBuffer.542" }
%"class.WTF::VectorBuffer.542" = type { %"class.WTF::VectorBufferBase.543" }
%"class.WTF::VectorBufferBase.543" = type { %"class.blink::Member.544"*, i32, i32 }
%"class.blink::Member.544" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.6" }
%"class.blink::Member.546" = type { %"class.blink::MemberBase.547" }
%"class.blink::MemberBase.547" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.548" = type { %"class.blink::MemberBase.549" }
%"class.blink::MemberBase.549" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.550" = type { %"class.blink::MemberBase.551" }
%"class.blink::MemberBase.551" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.552" = type { %"class.blink::MemberBase.553" }
%"class.blink::MemberBase.553" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.554" = type { %"class.blink::MemberBase.555" }
%"class.blink::MemberBase.555" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type opaque
%"class.blink::Member.561" = type { %"class.blink::MemberBase.562" }
%"class.blink::MemberBase.562" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.563" = type { %"class.blink::MemberBase.564" }
%"class.blink::MemberBase.564" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.565" = type { %"class.blink::MemberBase.566" }
%"class.blink::MemberBase.566" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.567" = type { %"class.blink::MemberBase.568" }
%"class.blink::MemberBase.568" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.55", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.436, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.436 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.437" }>
%"class.base::RefCountedThreadSafe.437" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.438 }
%class.scoped_refptr.438 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.439", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.439" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.440" }
%"struct.std::__1::atomic.440" = type { %"struct.std::__1::__atomic_base.441" }
%"struct.std::__1::__atomic_base.441" = type { %"struct.std::__1::__atomic_base.442" }
%"struct.std::__1::__atomic_base.442" = type { %"struct.std::__1::__cxx_atomic_impl.443" }
%"struct.std::__1::__cxx_atomic_impl.443" = type { %"struct.std::__1::__cxx_atomic_base_impl.444" }
%"struct.std::__1::__cxx_atomic_base_impl.444" = type { i8 }
%"class.blink::WeakMember.55" = type { %"class.blink::MemberBase.7" }
%"class.blink::HeapHashSet.569" = type { %"class.WTF::HashSet.572" }
%"class.WTF::HashSet.572" = type { %"class.WTF::HashTable.573" }
%"class.WTF::HashTable.573" = type <{ %"class.blink::Member.575"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.575" = type opaque
%"class.blink::Member.576" = type { %"class.blink::MemberBase.577" }
%"class.blink::MemberBase.577" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.578" = type { %"class.blink::MemberBase.579" }
%"class.blink::MemberBase.579" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.580" = type { %"class.blink::MemberBase.581" }
%"class.blink::MemberBase.581" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.582" = type { %"class.blink::MemberBase.583" }
%"class.blink::MemberBase.583" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.584" = type { %"class.blink::MemberBase.585" }
%"class.blink::MemberBase.585" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.586" = type { %"class.std::__1::__compressed_pair.587" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.588" }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.598" = type { %"class.blink::MemberBase.599" }
%"class.blink::MemberBase.599" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.600" = type { %"class.blink::MemberBase.601" }
%"class.blink::MemberBase.601" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.602" = type { %"class.blink::MemberBase.603" }
%"class.blink::MemberBase.603" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.604" = type { %"class.blink::MemberBase.605" }
%"class.blink::MemberBase.605" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.606" = type { %"class.WTF::VectorBuffer.607" }
%"class.WTF::VectorBuffer.607" = type { %"class.WTF::VectorBufferBase.608" }
%"class.WTF::VectorBufferBase.608" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.611" = type { %"class.WTF::HashMap.614" }
%"class.WTF::HashMap.614" = type { %"class.WTF::HashTable.615" }
%"class.WTF::HashTable.615" = type <{ %"struct.WTF::KeyValuePair.617"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.617" = type opaque
%"class.blink::Member.618" = type { %"class.blink::MemberBase.619" }
%"class.blink::MemberBase.619" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.620" = type { %"class.std::__1::__compressed_pair.621" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.622" }
%"struct.std::__1::__compressed_pair_elem.622" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.626" = type { %"class.blink::MemberBase.627" }
%"class.blink::MemberBase.627" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.628" = type { %"class.blink::MemberBase.629" }
%"class.blink::MemberBase.629" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.630" = type { %"class.WTF::HashMap.633" }
%"class.WTF::HashMap.633" = type { %"class.WTF::HashTable.634" }
%"class.WTF::HashTable.634" = type <{ %"struct.WTF::KeyValuePair.636"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.636" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.637" }
%"class.blink::HeapHashSet.637" = type { %"class.WTF::HashSet.640" }
%"class.WTF::HashSet.640" = type { %"class.WTF::HashTable.641" }
%"class.WTF::HashTable.641" = type <{ %"class.blink::WeakMember.643"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.643" = type opaque
%"class.blink::Member.644" = type { %"class.blink::MemberBase.645" }
%"class.blink::MemberBase.645" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.646" = type { %"class.blink::MemberBase.647" }
%"class.blink::MemberBase.647" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.6", %"class.blink::HeapHashSet.652", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.659", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.652" = type { %"class.WTF::HashSet.655" }
%"class.WTF::HashSet.655" = type { %"class.WTF::HashTable.656" }
%"class.WTF::HashTable.656" = type <{ %"class.blink::Member.658"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.658" = type opaque
%"class.blink::HeapTaskRunnerTimer.659" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.660", { i64, i64 } }
%"class.blink::WeakMember.660" = type { %"class.blink::MemberBase.647" }
%"class.blink::WeakMember.70" = type { %"class.blink::MemberBase.71" }
%"class.blink::Member.648" = type { %"class.blink::MemberBase.649" }
%"class.blink::MemberBase.649" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.93" = type { %"class.blink::MemberBase.94" }
%"class.blink::MemberBase.94" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.97" }
%"class.blink::HeapHashMap.97" = type { %"class.WTF::HashMap.100" }
%"class.WTF::HashMap.100" = type { %"class.WTF::HashTable.101" }
%"class.WTF::HashTable.101" = type <{ %"struct.WTF::KeyValuePair.103"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.103" = type { %"class.WTF::AtomicString", %"class.blink::Member.105" }
%"class.blink::Member.105" = type { %"class.blink::MemberBase.106" }
%"class.blink::MemberBase.106" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.109", i32, %"class.blink::HeapVector.128" }
%"class.blink::Member.135" = type { %"class.blink::MemberBase.136" }
%"class.blink::MemberBase.136" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.137" = type { %"class.blink::MemberBase.138" }
%"class.blink::MemberBase.138" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.139" = type { %"class.blink::MemberBase.140" }
%"class.blink::MemberBase.140" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.141" }
%"class.blink::Member.141" = type { %"class.blink::MemberBase.142" }
%"class.blink::MemberBase.142" = type { %"class.blink::HeapHashMap.143"* }
%"class.blink::HeapHashMap.143" = type opaque
%"class.blink::Member.144" = type { %"class.blink::MemberBase.145" }
%"class.blink::MemberBase.145" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.146" = type { %"class.WTF::Vector.149" }
%"class.WTF::Vector.149" = type { %"class.WTF::VectorBuffer.150" }
%"class.WTF::VectorBuffer.150" = type { %"class.WTF::VectorBufferBase.151" }
%"class.WTF::VectorBufferBase.151" = type { %"class.blink::Member.152"*, i32, i32 }
%"class.blink::Member.87" = type { %"class.blink::MemberBase.88" }
%"class.blink::MemberBase.88" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::HTMLOptionElement" = type <{ %"class.blink::HTMLElement", %"class.blink::Member.738", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Member.738" = type { %"class.blink::MemberBase.739" }
%"class.blink::MemberBase.739" = type { %"class.blink::OptionTextObserver"* }
%"class.blink::OptionTextObserver" = type opaque
%"class.blink::AXObjectCacheImpl" = type { %"class.blink::AXObjectCacheBase", %"class.blink::mojom::blink::PermissionObserver", %"class.blink::Member.6", %"class.ui::AXMode", [4 x i8], %"class.blink::HeapHashMap", %"class.blink::HeapHashMap.11", %"class.WTF::HashMap.18", %"class.blink::HeapHashMap.22", %"class.WTF::HashMap.29", i32, [4 x i8], %"class.WTF::HashSet", i32, %"class.blink::WeakMember", %"class.std::__1::unique_ptr", %"class.blink::HeapVector.38", i32, %"class.blink::HeapMojoRemote", %"class.blink::HeapMojoReceiver", %"class.blink::HeapHashSet", %"class.blink::HeapVector.56", %"class.blink::HeapHashSet.64", i32, i8, [3 x i8], %"class.WTF::HashMap.72", %"class.WTF::HashSet", %"class.WTF::HashSet", i32, i32, %"class.WTF::HashCountedSet", i8, [7 x i8], %"class.WTF::HashSet" }
%"class.blink::AXObjectCacheBase" = type { %"class.blink::AXObjectCache" }
%"class.blink::mojom::blink::PermissionObserver" = type { i32 (...)** }
%"class.ui::AXMode" = type { i32 }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, %"class.blink::Member" }
%"class.blink::HeapHashMap.11" = type { %"class.WTF::HashMap.14" }
%"class.WTF::HashMap.14" = type { %"class.WTF::HashTable.15" }
%"class.WTF::HashTable.15" = type <{ %"struct.WTF::KeyValuePair.17"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.17" = type opaque
%"class.WTF::HashMap.18" = type { %"class.WTF::HashTable.19" }
%"class.WTF::HashTable.19" = type <{ %"struct.WTF::KeyValuePair.21"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.21" = type opaque
%"class.blink::HeapHashMap.22" = type { %"class.WTF::HashMap.25" }
%"class.WTF::HashMap.25" = type { %"class.WTF::HashTable.26" }
%"class.WTF::HashTable.26" = type <{ %"struct.WTF::KeyValuePair.28"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.28" = type opaque
%"class.WTF::HashMap.29" = type { %"class.WTF::HashTable.30" }
%"class.WTF::HashTable.30" = type <{ %"struct.WTF::KeyValuePair.33"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.33" = type opaque
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::AXRelationCache"* }
%"class.blink::AXRelationCache" = type opaque
%"class.blink::HeapVector.38" = type { %"class.WTF::Vector.41" }
%"class.WTF::Vector.41" = type { %"class.WTF::VectorBuffer.42" }
%"class.WTF::VectorBuffer.42" = type { %"class.WTF::VectorBufferBase.43" }
%"class.WTF::VectorBufferBase.43" = type { %"class.blink::Member.44"*, i32, i32 }
%"class.blink::Member.44" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.46" }
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::PermissionService, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::PermissionService, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.48" }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::PermissionObserver, blink::AXObjectCacheImpl, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::PermissionObserver, blink::AXObjectCacheImpl, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.52" }
%"class.WTF::HashSet.52" = type { %"class.WTF::HashTable.53" }
%"class.WTF::HashTable.53" = type <{ %"class.blink::WeakMember.55"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapVector.56" = type { %"class.WTF::Vector.59" }
%"class.WTF::Vector.59" = type { %"class.WTF::VectorBuffer.60" }
%"class.WTF::VectorBuffer.60" = type { %"class.WTF::VectorBufferBase.61" }
%"class.WTF::VectorBufferBase.61" = type { %"class.blink::Member.62"*, i32, i32 }
%"class.blink::Member.62" = type opaque
%"class.blink::HeapHashSet.64" = type { %"class.WTF::HashSet.67" }
%"class.WTF::HashSet.67" = type { %"class.WTF::HashTable.68" }
%"class.WTF::HashTable.68" = type <{ %"class.blink::WeakMember.70"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.72" = type { %"class.WTF::HashTable.73" }
%"class.WTF::HashTable.73" = type <{ %"struct.WTF::KeyValuePair.76"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.76" = type opaque
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.77" }
%"class.WTF::HashMap.77" = type { %"class.WTF::HashTable.78" }
%"class.WTF::HashTable.78" = type <{ %"struct.WTF::KeyValuePair.81"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.81" = type { %"class.blink::BlinkAXEventIntent", i32, [4 x i8] }
%"class.blink::BlinkAXEventIntent" = type <{ i32 (...)**, %"struct.ui::AXEventIntent", i8, i8, [6 x i8] }>
%"struct.ui::AXEventIntent" = type { i32 (...)**, i32, i32, i32, i32 }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.34" }
%"class.WTF::HashTable.34" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::HTMLSelectElement" = type <{ %"class.blink::HTMLFormControlElementWithState.base", [2 x i8], %"class.blink::TypeAheadDataSource", %"class.blink::HeapVector.746", %"class.blink::TypeAhead", i32, [4 x i8], %"class.blink::Member.765", %"class.blink::Member.765", i8, i8, i8, i8, [4 x i8], %"class.blink::Member.767", i32, [4 x i8] }>
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.740", %"class.blink::Member.742", %"class.blink::Member.744", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.740" = type { %"class.blink::MemberBase.741" }
%"class.blink::MemberBase.741" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.742" = type { %"class.blink::MemberBase.743" }
%"class.blink::MemberBase.743" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.744" = type { %"class.blink::MemberBase.745" }
%"class.blink::MemberBase.745" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::TypeAheadDataSource" = type { i32 (...)** }
%"class.blink::HeapVector.746" = type { %"class.WTF::Vector.749" }
%"class.WTF::Vector.749" = type { %"class.WTF::VectorBuffer.750" }
%"class.WTF::VectorBuffer.750" = type { %"class.WTF::VectorBufferBase.751" }
%"class.WTF::VectorBufferBase.751" = type { %"class.blink::Member.752"*, i32, i32 }
%"class.blink::Member.752" = type opaque
%"class.blink::TypeAhead" = type { %"class.blink::TypeAheadDataSource"*, %"class.absl::optional", i16, [6 x i8], %"class.WTF::StringBuilder" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeTicks" }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.754, i32, i8, i8, [2 x i8] }>
%union.anon.754 = type { %"class.WTF::Vector.755" }
%"class.WTF::Vector.755" = type { %"class.WTF::VectorBuffer.756" }
%"class.WTF::VectorBuffer.756" = type { %"class.WTF::VectorBufferBase.757", [16 x i8] }
%"class.WTF::VectorBufferBase.757" = type { i8*, i32, i32 }
%"class.blink::Member.765" = type { %"class.blink::MemberBase.766" }
%"class.blink::MemberBase.766" = type { %"class.blink::HTMLOptionElement"* }
%"class.blink::Member.767" = type { %"class.blink::MemberBase.768" }
%"class.blink::MemberBase.768" = type { %"class.blink::SelectType"* }
%"class.blink::SelectType" = type opaque
%"class.blink::AXMenuList" = type { %"class.blink::AXLayoutObject" }
%"class.blink::AXLayoutObject" = type { %"class.blink::AXNodeObject", %"class.blink::LayoutObject"* }
%"class.blink::LayoutObject" = type opaque
%"class.blink::HeapVector.769" = type opaque
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.118", %"class.WTF::Vector.941" }
%"class.WTF::Vector.941" = type { %"class.WTF::VectorBuffer.942" }
%"class.WTF::VectorBuffer.942" = type { %"class.WTF::VectorBufferBase.943", [64 x i8] }
%"class.WTF::VectorBufferBase.943" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.blink::HeapHashSet.770" = type opaque
%"class.blink::HeapVector.771" = type { %"class.WTF::Vector.774" }
%"class.WTF::Vector.774" = type { %"class.WTF::VectorBuffer.775" }
%"class.WTF::VectorBuffer.775" = type { %"class.WTF::VectorBufferBase.776" }
%"class.WTF::VectorBufferBase.776" = type { %"class.blink::Member.777"*, i32, i32 }
%"class.blink::Member.777" = type { %"class.blink::MemberBase.934" }
%"class.blink::MemberBase.934" = type { %"class.blink::NameSourceRelatedObject"* }
%"class.blink::NameSourceRelatedObject" = type { %"class.blink::WeakMember", %"class.WTF::String" }
%"class.blink::HeapVector.779" = type { %"class.WTF::Vector.782" }
%"class.WTF::Vector.782" = type { %"class.WTF::VectorBuffer.783" }
%"class.WTF::VectorBuffer.783" = type { %"class.WTF::VectorBufferBase.784" }
%"class.WTF::VectorBufferBase.784" = type { %"class.blink::NameSource"*, i32, i32 }
%"class.blink::NameSource" = type { %"class.WTF::String", i8, i8, i32, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString", i32, %"class.blink::HeapVector.771" }
%"class.blink::AccessibleNode" = type { %"class.blink::EventTargetWithInlineData", %"class.WTF::Vector.807", %"class.WTF::Vector.813", %"class.WTF::Vector.819", %"class.WTF::Vector.825", %"class.WTF::Vector.831", %"class.blink::HeapVector.837", %"class.blink::HeapVector.845", %"class.blink::Member.109", %"class.blink::Member.6", %"class.blink::HeapVector.853", %"class.blink::Member.859" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.800" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.788" }
%"class.blink::HeapVector.788" = type { %"class.WTF::Vector.791" }
%"class.WTF::Vector.791" = type { %"class.WTF::VectorBuffer.792" }
%"class.WTF::VectorBuffer.792" = type { %"class.WTF::VectorBufferBase.793", [32 x i8] }
%"class.WTF::VectorBufferBase.793" = type { %"struct.std::__1::pair.794"*, i32, i32 }
%"struct.std::__1::pair.794" = type { %"class.WTF::AtomicString", %"class.blink::Member.795" }
%"class.blink::Member.795" = type { %"class.blink::MemberBase.796" }
%"class.blink::MemberBase.796" = type { %"class.blink::HeapVector.797"* }
%"class.blink::HeapVector.797" = type opaque
%"class.std::__1::unique_ptr.800" = type { %"class.std::__1::__compressed_pair.801" }
%"class.std::__1::__compressed_pair.801" = type { %"struct.std::__1::__compressed_pair_elem.802" }
%"struct.std::__1::__compressed_pair_elem.802" = type { %"class.WTF::Vector.803"* }
%"class.WTF::Vector.803" = type opaque
%"class.WTF::Vector.807" = type { %"class.WTF::VectorBuffer.808" }
%"class.WTF::VectorBuffer.808" = type { %"class.WTF::VectorBufferBase.809" }
%"class.WTF::VectorBufferBase.809" = type { %"struct.std::__1::pair.810"*, i32, i32 }
%"struct.std::__1::pair.810" = type opaque
%"class.WTF::Vector.813" = type { %"class.WTF::VectorBuffer.814" }
%"class.WTF::VectorBuffer.814" = type { %"class.WTF::VectorBufferBase.815" }
%"class.WTF::VectorBufferBase.815" = type { %"struct.std::__1::pair.816"*, i32, i32 }
%"struct.std::__1::pair.816" = type opaque
%"class.WTF::Vector.819" = type { %"class.WTF::VectorBuffer.820" }
%"class.WTF::VectorBuffer.820" = type { %"class.WTF::VectorBufferBase.821" }
%"class.WTF::VectorBufferBase.821" = type { %"struct.std::__1::pair.822"*, i32, i32 }
%"struct.std::__1::pair.822" = type opaque
%"class.WTF::Vector.825" = type { %"class.WTF::VectorBuffer.826" }
%"class.WTF::VectorBuffer.826" = type { %"class.WTF::VectorBufferBase.827" }
%"class.WTF::VectorBufferBase.827" = type { %"struct.std::__1::pair.828"*, i32, i32 }
%"struct.std::__1::pair.828" = type opaque
%"class.WTF::Vector.831" = type { %"class.WTF::VectorBuffer.832" }
%"class.WTF::VectorBuffer.832" = type { %"class.WTF::VectorBufferBase.833" }
%"class.WTF::VectorBufferBase.833" = type { %"struct.std::__1::pair.834"*, i32, i32 }
%"struct.std::__1::pair.834" = type opaque
%"class.blink::HeapVector.837" = type { %"class.WTF::Vector.840" }
%"class.WTF::Vector.840" = type { %"class.WTF::VectorBuffer.841" }
%"class.WTF::VectorBuffer.841" = type { %"class.WTF::VectorBufferBase.842" }
%"class.WTF::VectorBufferBase.842" = type { %"struct.std::__1::pair.843"*, i32, i32 }
%"struct.std::__1::pair.843" = type opaque
%"class.blink::HeapVector.845" = type { %"class.WTF::Vector.848" }
%"class.WTF::Vector.848" = type { %"class.WTF::VectorBuffer.849" }
%"class.WTF::VectorBuffer.849" = type { %"class.WTF::VectorBufferBase.850" }
%"class.WTF::VectorBufferBase.850" = type { %"struct.std::__1::pair.851"*, i32, i32 }
%"struct.std::__1::pair.851" = type opaque
%"class.blink::HeapVector.853" = type { %"class.WTF::Vector.856" }
%"class.WTF::Vector.856" = type { %"class.WTF::VectorBuffer.857" }
%"class.WTF::VectorBuffer.857" = type { %"class.WTF::VectorBufferBase.858" }
%"class.WTF::VectorBufferBase.858" = type { %"class.blink::Member.859"*, i32, i32 }
%"class.blink::Member.859" = type { %"class.blink::MemberBase.860" }
%"class.blink::MemberBase.860" = type { %"class.blink::AccessibleNode"* }
%"class.blink::HeapVector.862" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.WTF::Vector.863" = type opaque
%"class.WTF::Vector.864" = type opaque
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::ScrollableArea" = type opaque
%"struct.ui::AXNodeData" = type { i32 (...)**, i32, i32, i32, i64, %"class.std::__1::vector.865", %"class.std::__1::vector.873", %"class.std::__1::vector.881", %"class.std::__1::vector.889", %"class.std::__1::vector.897", %"class.std::__1::vector.905", %"class.std::__1::vector.913", %"class.std::__1::vector.921", %"struct.ui::AXRelativeBounds" }
%"class.std::__1::vector.865" = type { %"class.std::__1::__vector_base.866" }
%"class.std::__1::__vector_base.866" = type { %"struct.std::__1::pair.867"*, %"struct.std::__1::pair.867"*, %"class.std::__1::__compressed_pair.868" }
%"struct.std::__1::pair.867" = type opaque
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.869" }
%"struct.std::__1::__compressed_pair_elem.869" = type { %"struct.std::__1::pair.867"* }
%"class.std::__1::vector.873" = type { %"class.std::__1::__vector_base.874" }
%"class.std::__1::__vector_base.874" = type { %"struct.std::__1::pair.875"*, %"struct.std::__1::pair.875"*, %"class.std::__1::__compressed_pair.876" }
%"struct.std::__1::pair.875" = type opaque
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"struct.std::__1::pair.875"* }
%"class.std::__1::vector.881" = type { %"class.std::__1::__vector_base.882" }
%"class.std::__1::__vector_base.882" = type { %"struct.std::__1::pair.883"*, %"struct.std::__1::pair.883"*, %"class.std::__1::__compressed_pair.884" }
%"struct.std::__1::pair.883" = type opaque
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"struct.std::__1::pair.883"* }
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { %"struct.std::__1::pair.891"*, %"struct.std::__1::pair.891"*, %"class.std::__1::__compressed_pair.892" }
%"struct.std::__1::pair.891" = type opaque
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"struct.std::__1::pair.891"* }
%"class.std::__1::vector.897" = type { %"class.std::__1::__vector_base.898" }
%"class.std::__1::__vector_base.898" = type { %"struct.std::__1::pair.899"*, %"struct.std::__1::pair.899"*, %"class.std::__1::__compressed_pair.900" }
%"struct.std::__1::pair.899" = type opaque
%"class.std::__1::__compressed_pair.900" = type { %"struct.std::__1::__compressed_pair_elem.901" }
%"struct.std::__1::__compressed_pair_elem.901" = type { %"struct.std::__1::pair.899"* }
%"class.std::__1::vector.905" = type { %"class.std::__1::__vector_base.906" }
%"class.std::__1::__vector_base.906" = type { %"struct.std::__1::pair.907"*, %"struct.std::__1::pair.907"*, %"class.std::__1::__compressed_pair.908" }
%"struct.std::__1::pair.907" = type opaque
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.909" }
%"struct.std::__1::__compressed_pair_elem.909" = type { %"struct.std::__1::pair.907"* }
%"class.std::__1::vector.913" = type { %"class.std::__1::__vector_base.914" }
%"class.std::__1::__vector_base.914" = type { %"struct.std::__1::pair.915"*, %"struct.std::__1::pair.915"*, %"class.std::__1::__compressed_pair.916" }
%"struct.std::__1::pair.915" = type opaque
%"class.std::__1::__compressed_pair.916" = type { %"struct.std::__1::__compressed_pair_elem.917" }
%"struct.std::__1::__compressed_pair_elem.917" = type { %"struct.std::__1::pair.915"* }
%"class.std::__1::vector.921" = type { %"class.std::__1::__vector_base.922" }
%"class.std::__1::__vector_base.922" = type { i32*, i32*, %"class.std::__1::__compressed_pair.923" }
%"class.std::__1::__compressed_pair.923" = type { %"struct.std::__1::__compressed_pair_elem.924" }
%"struct.std::__1::__compressed_pair_elem.924" = type { i32* }
%"struct.ui::AXRelativeBounds" = type { i32 (...)**, i32, %"class.gfx::RectF", %"class.std::__1::unique_ptr.928" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::unique_ptr.928" = type { %"class.std::__1::__compressed_pair.929" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.930" }
%"struct.std::__1::__compressed_pair_elem.930" = type { %"class.gfx::Transform"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.962" }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.963" }
%"struct.std::__1::__compressed_pair_elem.963" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.964 }
%union.anon.964 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapVectorBacking.972" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink16AXMenuListOptionD0Ev = comdat any

$_ZNK5blink16AXMenuListOption16IsMenuListOptionEv = comdat any

$_ZNK5blink8AXObject12GetListStyleEv = comdat any

$_ZNK5blink8AXObject20AccessibilityHitTestERKNS_8IntPointE = comdat any

$_ZNK5blink16AXMenuListOption15CanHaveChildrenEv = comdat any

$_ZNK5blink8AXObject11IsDataTableEv = comdat any

$_ZNK5blink8AXObject16GetSortDirectionEv = comdat any

$_ZNK5blink8AXObject12HeaderObjectEv = comdat any

$_ZNK5blink8AXObject29GetScrollableAreaIfScrollableEv = comdat any

$_ZN5blink8AXObject26HandleAutofillStateChangedENS_18WebAXAutofillStateE = comdat any

$_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_ = comdat any

$_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_ = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_23NameSourceRelatedObjectEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink7Visitor14HandleWeakCellINS_8AXObjectEEEvRKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_10NameSourceEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv = comdat any

$_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE8FinalizeEv = comdat any

$_ZN3WTF20VectorTypeOperationsIN5blink10NameSourceENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b = comdat any

$_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink16AXMenuListOptionE = hidden unnamed_addr constant { [166 x i8*] } { [166 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObjectD2Ev to i8*), i8* bitcast (void (%"class.blink::AXMenuListOption"*)* @_ZN5blink16AXMenuListOptionD0Ev to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"class.blink::Visitor"*)* @_ZNK5blink12AXNodeObject5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"class.blink::AXObject"*)* @_ZN5blink12AXNodeObject4InitEPNS_8AXObjectE to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject6DetachEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)* @_ZNK5blink8AXObject29GetAOMPropertyOrARIAAttributeENS_17AOMStringPropertyE to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, i32, i8*)* @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_18AOMBooleanPropertyERb to i8*), i8* bitcast (%"class.blink::AccessibleNode"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject17GetAccessibleNodeEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject14IsImageMapLinkEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject14IsAXNodeObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16IsAXLayoutObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject17IsAXInlineTextBoxEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject6IsListEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11IsAXListBoxEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject17IsAXListBoxOptionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10IsMenuListEv to i8*), i8* bitcast (i1 (%"class.blink::AXMenuListOption"*)* @_ZNK5blink16AXMenuListOption16IsMenuListOptionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15IsMenuListPopupEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12IsMockObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject19IsProgressIndicatorEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject14IsAXRadioInputEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject8IsSliderEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject19IsValidationMessageEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15IsVirtualObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject9IsControlEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject9IsDefaultEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject10IsFieldsetEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject12IsInputImageEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject13IsNativeImageEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject18IsNativeSpinButtonEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject14IsNativeSliderEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject12IsSpinButtonEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject19IsAutofillAvailableEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject11IsClickableEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject10IsExpandedEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject9IsFocusedEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject9IsGrabbedEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject9IsHoveredEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject20IsLineBreakingObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8IsLinkedEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject8IsLoadedEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject7IsModalEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject17IsMultiSelectableEv to i8*), i8* bitcast (i1 (%"class.blink::AXMenuListOption"*)* @_ZNK5blink16AXMenuListOption11IsOffScreenEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject10IsRequiredEv to i8*), i8* bitcast (i32 (%"class.blink::AXMenuListOption"*)* @_ZNK5blink16AXMenuListOption10IsSelectedEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject19IsSelectedFromFocusEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject22IsSelectedOptionActiveEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject19IsNotUserSelectableEv to i8*), i8* bitcast (i1 (%"class.blink::AXMenuListOption"*)* @_ZNK5blink16AXMenuListOption9IsVisibleEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject9IsVisitedEv to i8*), i8* bitcast (i1 (%"class.blink::AXMenuListOption"*, %"class.blink::HeapVector.769"*)* @_ZNK5blink16AXMenuListOption29ComputeAccessibilityIsIgnoredEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*, %"class.blink::HeapVector.769"*)* @_ZNK5blink8AXObject22DefaultObjectInclusionEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, i32*, %"class.blink::HeapVector"*)* @_ZNK5blink12AXNodeObject7GetNameERN2ax5mojom8NameFromEPNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, i32, i32*, %"class.blink::HeapVector"*)* @_ZNK5blink12AXNodeObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, i32, i32*, %"class.blink::HeapVector.862"*, %"class.blink::HeapVector.771"*)* @_ZNK5blink12AXNodeObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_17DescriptionSourceELj0EEEPNS6_INS_6MemberINS_23NameSourceRelatedObjectEEELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, i32)* @_ZNK5blink12AXNodeObject11PlaceholderEN2ax5mojom8NameFromE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, i32)* @_ZNK5blink12AXNodeObject5TitleEN2ax5mojom8NameFromE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXMenuListOption"*, i1, i1, %"class.blink::HeapHashSet.770"*, i32*, %"class.blink::HeapVector.771"*, %"class.blink::HeapVector.779"*)* @_ZNK5blink16AXMenuListOption15TextAlternativeEbbRNS_11HeapHashSetINS_6MemberIKNS_8AXObjectEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEERN2ax5mojom8NameFromEPNS_10HeapVectorINS2_INS_23NameSourceRelatedObjectEEELj0EEEPNSH_INS_10NameSourceELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.770"*, i1)* @_ZNK5blink12AXNodeObject19TextFromDescendantsERNS_11HeapHashSetINS_6MemberIKNS_8AXObjectEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEb to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject9AccessKeyEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject15BackgroundColorEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject8GetColorEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject10ColorValueEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject24CanvasHasFallbackContentEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject18ComputedFontFamilyEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject26FontFamilyForSerializationEv to i8*), i8* bitcast (float (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject8FontSizeEv to i8*), i8* bitcast (float (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject10FontWeightEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject12HeadingLevelEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject17HierarchicalLevelEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::IntSize"*)* @_ZNK5blink12AXNodeObject12ImageDataUrlERKNS_7IntSizeE to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject16InPageLinkTargetEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject11OrientationEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12GetListStyleEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject12GetTextAlignEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject16GetTextDirectionEv to i8*), i8* bitcast (float (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject13GetTextIndentEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject15GetTextPositionEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, i32*, i32*, i32*, i32*)* @_ZNK5blink12AXNodeObject34GetTextStyleAndTextDecorationStyleEPiPN2ax5mojom19TextDecorationStyleES5_S5_ to i8*), i8* bitcast (void (%"class.blink::HeapVector"*, %"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject19RadioButtonsInGroupEv to i8*), i8* bitcast (void (%"class.blink::KURL"*, %"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject3UrlEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject12ChooserPopupEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject28LoadInlineTextBoxesRecursiveEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10NextOnLineEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject14PreviousOnLineEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.WTF::Vector.863"*)* @_ZNK5blink8AXObject20TextCharacterOffsetsERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.WTF::Vector.863"*, %"class.WTF::Vector.863"*)* @_ZNK5blink8AXObject17GetWordBoundariesERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEES5_ to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10TextLengthEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*, i32)* @_ZNK5blink12AXNodeObject29TextOffsetInFormattingContextEi to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*, i32)* @_ZNK5blink8AXObject21TextOffsetInContainerEi to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject19GetAriaCurrentStateEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject15GetInvalidStateEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject16AriaInvalidValueEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*, float*)* @_ZNK5blink12AXNodeObject13ValueForRangeEPf to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*, float*)* @_ZNK5blink12AXNodeObject16MaxValueForRangeEPf to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*, float*)* @_ZNK5blink12AXNodeObject16MinValueForRangeEPf to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*, float*)* @_ZNK5blink12AXNodeObject17StepValueForRangeEPf to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject18GetValueForControlEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject46SlowGetValueForControlIncludingContentEditableEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject11RestrictionEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject26DetermineAccessibilityRoleEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject17AriaRoleAttributeEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject16ActiveDescendantEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject12AutoCompleteEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"class.blink::HeapVector"*)* @_ZNK5blink12AXNodeObject16AriaOwnsElementsERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"class.blink::HeapVector"*)* @_ZNK5blink12AXNodeObject23AriaDescribedbyElementsERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject12ErrorMessageEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject8HasPopupEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject14IsEditableRootEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject30HasContentEditableAttributeSetEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject20SupportsARIADraggingEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"class.WTF::Vector.864"*)* @_ZNK5blink12AXNodeObject11DropeffectsERN3WTF6VectorIN2ax5mojom10DropeffectELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject8PosInSetEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject7SetSizeEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16LiveRegionStatusEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject18LiveRegionRelevantEv to i8*), i8* bitcast (void (%"class.blink::AXMenuListOption"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)* @_ZNK5blink16AXMenuListOption17GetRelativeBoundsEPPNS_8AXObjectERNS_9FloatRectER10SkMatrix44Pb to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*, %"class.blink::IntPoint"*)* @_ZNK5blink8AXObject20AccessibilityHitTestERKNS_8IntPointE to i8*), i8* bitcast (i1 (%"class.blink::AXMenuListOption"*)* @_ZNK5blink16AXMenuListOption15CanHaveChildrenEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject13ClearChildrenEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"class.blink::HeapVector"*)* @_ZNK5blink12AXNodeObject15SelectedOptionsERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE to i8*), i8* bitcast (double (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject24EstimatedLoadingProgressEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12RootScrollerEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject7GetNodeEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15GetLayoutObjectEv to i8*), i8* bitcast (%"class.blink::Document"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject11GetDocumentEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject13AnchorElementEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::AXMenuListOption"*)* @_ZNK5blink16AXMenuListOption13ActionElementEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject8LanguageEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)* @_ZNK5blink12AXNodeObject12HasAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)* @_ZNK5blink12AXNodeObject12GetAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11IsDataTableEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11ColumnCountEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8RowCountEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.blink::HeapVector"*)* @_ZNK5blink8AXObject13ColumnHeadersERNS_10HeapVectorINS_6MemberIS0_EELj0EEE to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.blink::HeapVector"*)* @_ZNK5blink8AXObject10RowHeadersERNS_10HeapVectorINS_6MemberIS0_EELj0EEE to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*, i32, i32)* @_ZNK5blink8AXObject19CellForColumnAndRowEjj to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11ColumnIndexEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8RowIndexEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10ColumnSpanEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject7RowSpanEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16GetSortDirectionEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12HeaderObjectEv to i8*), i8* bitcast (%"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject29GetScrollableAreaIfScrollableEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject35InternalSetAccessibilityFocusActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject37InternalClearAccessibilityFocusActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject23OnNativeDecrementActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXMenuListOption"*)* @_ZN5blink16AXMenuListOption19OnNativeClickActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject19OnNativeFocusActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject23OnNativeIncrementActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXMenuListOption"*, i1)* @_ZN5blink16AXMenuListOption25OnNativeSetSelectedActionEb to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject55OnNativeSetSequentialFocusNavigationStartingPointActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*, %"class.WTF::String"*)* @_ZN5blink12AXNodeObject22OnNativeSetValueActionERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject15ChildrenChangedEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject29HandleActiveDescendantChangedEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, i32)* @_ZN5blink8AXObject26HandleAutofillStateChangedENS_18WebAXAutofillStateE to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject25HandleAriaExpandedChangedEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject16SelectionChangedEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject22NativeRoleIgnoringAriaEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject11AddChildrenEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"struct.ui::AXNodeData"*)* @_ZNK5blink12AXNodeObject25SerializeMarkerAttributesEPN2ui10AXNodeDataE to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject26RoleFromLayoutObjectOrNodeEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject17IsTabItemSelectedEv to i8*)] }, align 8
@_ZN5blink10html_names11kHiddenAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink11g_null_nameE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kOptionTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.5 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.8 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.9 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

@_ZN5blink16AXMenuListOptionC1EPNS_17HTMLOptionElementERNS_17AXObjectCacheImplE = hidden unnamed_addr alias void (%"class.blink::AXMenuListOption"*, %"class.blink::HTMLOptionElement"*, %"class.blink::AXObjectCacheImpl"*), void (%"class.blink::AXMenuListOption"*, %"class.blink::HTMLOptionElement"*, %"class.blink::AXObjectCacheImpl"*)* @_ZN5blink16AXMenuListOptionC2EPNS_17HTMLOptionElementERNS_17AXObjectCacheImplE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16AXMenuListOptionC2EPNS_17HTMLOptionElementERNS_17AXObjectCacheImplE(%"class.blink::AXMenuListOption"*, %"class.blink::HTMLOptionElement"*, %"class.blink::AXObjectCacheImpl"* dereferenceable(456)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::AXMenuListOption", %"class.blink::AXMenuListOption"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::HTMLOptionElement", %"class.blink::HTMLOptionElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink12AXNodeObjectC2EPNS_4NodeERNS_17AXObjectCacheImplE(%"class.blink::AXNodeObject"* %4, %"class.blink::Node"* %5, %"class.blink::AXObjectCacheImpl"* dereferenceable(456) %2) #7
  %6 = getelementptr inbounds %"class.blink::AXMenuListOption", %"class.blink::AXMenuListOption"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [166 x i8*] }, { [166 x i8*] }* @_ZTVN5blink16AXMenuListOptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  ret void
}

declare void @_ZN5blink12AXNodeObjectC2EPNS_4NodeERNS_17AXObjectCacheImplE(%"class.blink::AXNodeObject"*, %"class.blink::Node"*, %"class.blink::AXObjectCacheImpl"* dereferenceable(456)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink16AXMenuListOption13ActionElementEv(%"class.blink::AXMenuListOption"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXMenuListOption", %"class.blink::AXMenuListOption"* %0, i64 0, i32 0, i32 0
  %3 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %2) #7
  ret %"class.blink::Element"* %3
}

declare %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZN5blink16AXMenuListOption27ComputeParentAXMenuPopupForERNS_17AXObjectCacheImplEPNS_17HTMLOptionElementE(%"class.blink::AXObjectCacheImpl"* dereferenceable(456), %"class.blink::HTMLOptionElement"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::HTMLSelectElement"* @_ZNK5blink17HTMLOptionElement18OwnerSelectElementEv(%"class.blink::HTMLOptionElement"* %1) #7
  %4 = icmp eq %"class.blink::HTMLSelectElement"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %3, i64 0, i32 9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %24, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %0, %"class.blink::Node"* %10) #7
  %12 = icmp eq %"class.blink::AXObject"* %11, null
  br i1 %12, label %22, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::AXObject"* %11 to i1 (%"class.blink::AXObject"*)***
  %15 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %15, i64 15
  %17 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.blink::AXObject"* nonnull %11) #7
  br i1 %18, label %19, label %22

19:                                               ; preds = %13
  %20 = bitcast %"class.blink::AXObject"* %11 to %"class.blink::AXMenuList"*
  %21 = tail call %"class.blink::AXObject"* @_ZN5blink10AXMenuList25GetOrCreateMockPopupChildEv(%"class.blink::AXMenuList"* nonnull %20) #7
  br label %24

22:                                               ; preds = %13, %9
  %23 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %0, %"class.blink::Node"* %10) #7
  br label %24

24:                                               ; preds = %5, %19, %2, %22
  %25 = phi %"class.blink::AXObject"* [ %23, %22 ], [ %21, %19 ], [ null, %2 ], [ null, %5 ]
  ret %"class.blink::AXObject"* %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::HTMLSelectElement"* @_ZNK5blink17HTMLOptionElement18OwnerSelectElementEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #1

declare %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::AXObject"* @_ZN5blink10AXMenuList25GetOrCreateMockPopupChildEv(%"class.blink::AXMenuList"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16AXMenuListOption9IsVisibleEv(%"class.blink::AXMenuListOption"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXMenuListOption", %"class.blink::AXMenuListOption"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %2, align 8
  %4 = icmp eq %"class.blink::AXObject"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::AXObject"* %3 to i1 (%"class.blink::AXObject"*)***
  %7 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %7, i64 43
  %9 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::AXObject"* nonnull %3) #7
  br i1 %10, label %11, label %14

11:                                               ; preds = %5
  %12 = tail call i32 @_ZNK5blink16AXMenuListOption10IsSelectedEv(%"class.blink::AXMenuListOption"* %0)
  %13 = icmp eq i32 %12, 2
  br label %14

14:                                               ; preds = %1, %5, %11
  %15 = phi i1 [ false, %1 ], [ true, %5 ], [ %13, %11 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink16AXMenuListOption10IsSelectedEv(%"class.blink::AXMenuListOption"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXMenuListOption", %"class.blink::AXMenuListOption"* %0, i64 0, i32 0
  %3 = tail call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %2) #7
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %35, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::AXMenuListOption", %"class.blink::AXMenuListOption"* %0, i64 0, i32 0, i32 0
  %7 = tail call zeroext i1 @_ZNK5blink8AXObject23CanSetSelectedAttributeEv(%"class.blink::AXObject"* %6) #7
  br i1 %7, label %8, label %35

8:                                                ; preds = %5
  %9 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %6) #7
  %10 = icmp eq %"class.blink::AXObject"* %9, null
  br i1 %10, label %35, label %11

11:                                               ; preds = %8
  %12 = bitcast %"class.blink::AXObject"* %9 to i1 (%"class.blink::AXObject"*)***
  %13 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %13, i64 17
  %15 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::AXObject"* nonnull %9) #7
  br i1 %16, label %17, label %35

17:                                               ; preds = %11
  %18 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %12, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %18, i64 43
  %20 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.blink::AXObject"* nonnull %9) #7
  br i1 %21, label %30, label %22

22:                                               ; preds = %17
  %23 = bitcast %"class.blink::AXObject"* %9 to %"class.blink::AXObject"* (%"class.blink::AXObject"*)***
  %24 = load %"class.blink::AXObject"* (%"class.blink::AXObject"*)**, %"class.blink::AXObject"* (%"class.blink::AXObject"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.blink::AXObject"* (%"class.blink::AXObject"*)*, %"class.blink::AXObject"* (%"class.blink::AXObject"*)** %24, i64 103
  %26 = load %"class.blink::AXObject"* (%"class.blink::AXObject"*)*, %"class.blink::AXObject"* (%"class.blink::AXObject"*)** %25, align 8
  %27 = tail call %"class.blink::AXObject"* %26(%"class.blink::AXObject"* nonnull %9) #7
  %28 = icmp eq %"class.blink::AXObject"* %27, %6
  %29 = select i1 %28, i32 2, i32 1
  br label %35

30:                                               ; preds = %17
  %31 = tail call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %2) #7
  %32 = bitcast %"class.blink::Node"* %31 to %"class.blink::HTMLOptionElement"*
  %33 = tail call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* %32) #7
  %34 = select i1 %33, i32 2, i32 1
  br label %35

35:                                               ; preds = %22, %30, %8, %11, %5, %1
  %36 = phi i32 [ 0, %1 ], [ 0, %5 ], [ %34, %30 ], [ %29, %22 ], [ 0, %8 ], [ 0, %11 ]
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16AXMenuListOption11IsOffScreenEv(%"class.blink::AXMenuListOption"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXMenuListOption", %"class.blink::AXMenuListOption"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %2, align 8
  %4 = icmp eq %"class.blink::AXObject"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::AXObject"* %3 to i1 (%"class.blink::AXObject"*)***
  %7 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %7, i64 43
  %9 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::AXObject"* nonnull %3) #7
  br i1 %10, label %11, label %14

11:                                               ; preds = %5
  %12 = tail call i32 @_ZNK5blink16AXMenuListOption10IsSelectedEv(%"class.blink::AXMenuListOption"* %0) #7
  %13 = icmp ne i32 %12, 2
  br label %14

14:                                               ; preds = %1, %5, %11
  %15 = phi i1 [ true, %1 ], [ false, %5 ], [ %13, %11 ]
  ret i1 %15
}

declare %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject23CanSetSelectedAttributeEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16AXMenuListOption19OnNativeClickActionEv(%"class.blink::AXMenuListOption"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXMenuListOption", %"class.blink::AXMenuListOption"* %0, i64 0, i32 0
  %3 = tail call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %2) #7
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::AXMenuListOption", %"class.blink::AXMenuListOption"* %0, i64 0, i32 0, i32 0
  %7 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %6) #7
  %8 = icmp eq %"class.blink::AXObject"* %7, null
  br i1 %8, label %27, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::AXObject"* %7 to i1 (%"class.blink::AXObject"*)***
  %11 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %11, i64 17
  %13 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::AXObject"* nonnull %7) #7
  br i1 %14, label %15, label %27

15:                                               ; preds = %9
  %16 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %6) #7
  %17 = bitcast %"class.blink::Element"* %16 to void (%"class.blink::Element"*, i32)***
  %18 = load void (%"class.blink::Element"*, i32)**, void (%"class.blink::Element"*, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::Element"*, i32)*, void (%"class.blink::Element"*, i32)** %18, i64 92
  %20 = load void (%"class.blink::Element"*, i32)*, void (%"class.blink::Element"*, i32)** %19, align 8
  tail call void %20(%"class.blink::Element"* %16, i32 2) #7
  %21 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %6) #7
  %22 = bitcast %"class.blink::AXObject"* %21 to i1 (%"class.blink::AXObject"*)***
  %23 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %23, i64 148
  %25 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.blink::AXObject"* %21) #7
  br label %29

27:                                               ; preds = %5, %9
  %28 = tail call zeroext i1 @_ZN5blink8AXObject19OnNativeClickActionEv(%"class.blink::AXObject"* %6) #7
  br label %29

29:                                               ; preds = %1, %27, %15
  %30 = phi i1 [ %26, %15 ], [ %28, %27 ], [ false, %1 ]
  ret i1 %30
}

declare zeroext i1 @_ZN5blink8AXObject19OnNativeClickActionEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16AXMenuListOption25OnNativeSetSelectedActionEb(%"class.blink::AXMenuListOption"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AXMenuListOption", %"class.blink::AXMenuListOption"* %0, i64 0, i32 0, i32 0
  %4 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %3) #7
  %5 = icmp eq %"class.blink::Element"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZNK5blink8AXObject23CanSetSelectedAttributeEv(%"class.blink::AXObject"* %3) #7
  br i1 %7, label %8, label %11

8:                                                ; preds = %6
  %9 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %3) #7
  %10 = bitcast %"class.blink::Element"* %9 to %"class.blink::HTMLOptionElement"*
  tail call void @_ZN5blink17HTMLOptionElement11SetSelectedEb(%"class.blink::HTMLOptionElement"* %10, i1 zeroext %1) #7
  br label %11

11:                                               ; preds = %6, %2, %8
  %12 = phi i1 [ true, %8 ], [ false, %2 ], [ false, %6 ]
  ret i1 %12
}

declare void @_ZN5blink17HTMLOptionElement11SetSelectedEb(%"class.blink::HTMLOptionElement"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16AXMenuListOption29ComputeAccessibilityIsIgnoredEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXMenuListOption"*, %"class.blink::HeapVector.769"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AXMenuListOption", %"class.blink::AXMenuListOption"* %0, i64 0, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #7
  br i1 %4, label %86, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::AXMenuListOption", %"class.blink::AXMenuListOption"* %0, i64 0, i32 0
  %7 = tail call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %6) #7
  %8 = icmp eq %"class.blink::Node"* %7, null
  br i1 %8, label %28, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 48
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %28

14:                                               ; preds = %9
  %15 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %16 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 1, i32 2
  %19 = bitcast %"class.blink::Member.82"* %18 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %20 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %17, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %22, %24
  %26 = bitcast %"class.blink::Node"* %7 to %"class.blink::HTMLOptionElement"*
  %27 = select i1 %25, %"class.blink::HTMLOptionElement"* %26, %"class.blink::HTMLOptionElement"* null
  br label %28

28:                                               ; preds = %5, %9, %14
  %29 = phi %"class.blink::HTMLOptionElement"* [ %27, %14 ], [ null, %9 ], [ null, %5 ]
  %30 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHiddenAttrE, align 8
  %31 = getelementptr inbounds %"class.blink::HTMLOptionElement", %"class.blink::HTMLOptionElement"* %29, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %31, align 8
  %33 = icmp eq %"class.blink::ElementData"* %32, null
  br i1 %33, label %84, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %32, i64 0, i32 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.blink::ElementData"* %32 to %"class.blink::UniqueElementData"*
  %41 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %32, i64 1, i32 1
  %42 = bitcast %"class.blink::Member.118"* %41 to %"class.blink::Attribute"**
  %43 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %40, i64 0, i32 2, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  br label %51

46:                                               ; preds = %34
  %47 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %32, i64 1
  %48 = bitcast %"class.blink::ElementData"* %47 to %"class.blink::Attribute"*
  %49 = lshr i32 %36, 1
  %50 = and i32 %49, 268435455
  br label %51

51:                                               ; preds = %46, %39
  %52 = phi %"class.blink::Attribute"* [ %48, %46 ], [ %43, %39 ]
  %53 = phi i32 [ %50, %46 ], [ %45, %39 ]
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %52, i64 %54
  %56 = icmp eq i32 %53, 0
  br i1 %56, label %84, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %30, i64 0, i32 0, i32 0
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %62

62:                                               ; preds = %78, %57
  %63 = phi %"class.blink::Attribute"* [ %52, %57 ], [ %79, %78 ]
  %64 = phi i32 [ 0, %57 ], [ %80, %78 ]
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %59
  br i1 %67, label %82, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 3, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %70, %71
  br i1 %72, label %73, label %78

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 4, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %75, %76
  br i1 %77, label %82, label %78

78:                                               ; preds = %73, %68
  %79 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 1
  %80 = add i32 %64, 1
  %81 = icmp eq %"class.blink::Attribute"* %79, %55
  br i1 %81, label %84, label %62

82:                                               ; preds = %62, %73
  %83 = icmp eq i32 %64, -1
  br i1 %83, label %84, label %86

84:                                               ; preds = %78, %82, %51, %28
  %85 = tail call zeroext i1 @_ZNK5blink8AXObject31AccessibilityIsIgnoredByDefaultEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXObject"* %3, %"class.blink::HeapVector.769"* %1) #7
  br label %86

86:                                               ; preds = %82, %2, %84
  %87 = phi i1 [ %85, %84 ], [ true, %2 ], [ true, %82 ]
  ret i1 %87
}

declare zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject31AccessibilityIsIgnoredByDefaultEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector.769"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16AXMenuListOption17GetRelativeBoundsEPPNS_8AXObjectERNS_9FloatRectER10SkMatrix44Pb(%"class.blink::AXMenuListOption"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"* dereferenceable(16), %class.SkMatrix44* dereferenceable(68), i8*) unnamed_addr #0 align 2 {
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %1, align 8
  %6 = bitcast %"class.blink::FloatRect"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 16, i1 false)
  tail call void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44* %3) #7
  %7 = getelementptr inbounds %"class.blink::AXMenuListOption", %"class.blink::AXMenuListOption"* %0, i64 0, i32 0
  %8 = tail call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %7) #7
  %9 = bitcast %"class.blink::Node"* %8 to %"class.blink::HTMLOptionElement"*
  %10 = tail call %"class.blink::HTMLSelectElement"* @_ZNK5blink17HTMLOptionElement18OwnerSelectElementEv(%"class.blink::HTMLOptionElement"* %9) #7
  %11 = getelementptr inbounds %"class.blink::AXMenuListOption", %"class.blink::AXMenuListOption"* %0, i64 0, i32 0, i32 0, i32 14, i32 0, i32 0
  %12 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %12, %"class.blink::Node"* %13) #7
  %15 = icmp eq %"class.blink::AXObject"* %14, null
  br i1 %15, label %28, label %16

16:                                               ; preds = %5
  %17 = bitcast %"class.blink::AXObject"* %14 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %18 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %18, i64 125
  %20 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %19, align 8
  %21 = tail call %"class.blink::LayoutObject"* %20(%"class.blink::AXObject"* nonnull %14) #7
  %22 = icmp eq %"class.blink::LayoutObject"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.blink::AXObject"* %14 to void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)***
  %25 = load void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)**, void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)*, void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)** %25, i64 117
  %27 = load void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)*, void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)** %26, align 8
  tail call void %27(%"class.blink::AXObject"* nonnull %14, %"class.blink::AXObject"** %1, %"class.blink::FloatRect"* dereferenceable(16) %2, %class.SkMatrix44* dereferenceable(68) %3, i8* %4) #7
  br label %28

28:                                               ; preds = %23, %16, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink16AXMenuListOption15TextAlternativeEbbRNS_11HeapHashSetINS_6MemberIKNS_8AXObjectEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEERN2ax5mojom8NameFromEPNS_10HeapVectorINS2_INS_23NameSourceRelatedObjectEEELj0EEEPNSH_INS_10NameSourceELj0EEE(%"class.blink::AXMenuListOption"*, i1 zeroext, i1 zeroext, %"class.blink::HeapHashSet.770"*, i32* dereferenceable(4), %"class.blink::HeapVector.771"*, %"class.blink::HeapVector.779"*) unnamed_addr #0 align 2 {
  %8 = alloca i8, align 1
  %9 = alloca %"class.blink::NameSource", align 8
  %10 = getelementptr inbounds %"class.blink::AXMenuListOption", %"class.blink::AXMenuListOption"* %0, i64 0, i32 0
  %11 = tail call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %10) #7
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %151, label %13

13:                                               ; preds = %7
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #7
  store i8 0, i8* %8, align 1
  %14 = getelementptr inbounds %"class.blink::AXMenuListOption", %"class.blink::AXMenuListOption"* %0, i64 0, i32 0, i32 0
  %15 = call %"class.WTF::StringImpl"* @_ZNK5blink8AXObject19AriaTextAlternativeEbbRNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEERN2ax5mojom8NameFromEPNS_10HeapVectorINS2_INS_23NameSourceRelatedObjectEEELj0EEEPNSG_INS_10NameSourceELj0EEEPb(%"class.blink::AXObject"* %14, i1 zeroext %1, i1 zeroext %2, %"class.blink::HeapHashSet.770"* %3, i32* dereferenceable(4) %4, %"class.blink::HeapVector.771"* %5, %"class.blink::HeapVector.779"* %6, i8* nonnull %8) #7
  %16 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %17 = load i8, i8* %8, align 1, !range !2
  %18 = icmp eq i8 %17, 0
  %19 = icmp ne %"class.blink::HeapVector.779"* %6, null
  %20 = or i1 %19, %18
  br i1 %20, label %21, label %149

21:                                               ; preds = %13
  store i32 5, i32* %4, align 4
  %22 = call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %10) #7
  %23 = bitcast %"class.blink::Node"* %22 to %"class.blink::HTMLOptionElement"*
  %24 = call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement12DisplayLabelEv(%"class.blink::HTMLOptionElement"* %23) #7
  %25 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %26 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #7
  br label %40

40:                                               ; preds = %39, %36, %21
  br i1 %19, label %41, label %149

41:                                               ; preds = %40
  %42 = getelementptr inbounds %"class.blink::HeapVector.779", %"class.blink::HeapVector.779"* %6, i64 0, i32 0
  %43 = bitcast %"class.blink::NameSource"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %43) #7
  %44 = load i8, i8* %8, align 1, !range !2
  %45 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %45, align 8
  %46 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %9, i64 0, i32 1
  store i8 %44, i8* %46, align 8
  %47 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %9, i64 0, i32 2
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %9, i64 0, i32 3
  store i32 1, i32* %48, align 4
  %49 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %9, i64 0, i32 4
  %50 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE to i64*), align 8
  %51 = bitcast %"class.blink::QualifiedName"** %49 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %9, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %52, align 8
  %53 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %9, i64 0, i32 6
  store i32 -1, i32* %53, align 8
  %54 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %9, i64 0, i32 7
  %55 = bitcast %"class.blink::HeapVector.771"* %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false) #7
  %56 = getelementptr inbounds %"class.blink::HeapVector.779", %"class.blink::HeapVector.779"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.blink::HeapVector.779", %"class.blink::HeapVector.779"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %57, %59
  br i1 %60, label %70, label %61, !prof !3

61:                                               ; preds = %41
  %62 = getelementptr inbounds %"class.blink::HeapVector.779", %"class.blink::HeapVector.779"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %62, align 8
  %64 = zext i32 %57 to i64
  %65 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %63, i64 %64
  %66 = bitcast %"class.blink::NameSource"* %65 to i8*
  %67 = call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %66, %"class.blink::NameSource"* nonnull dereferenceable(56) %9) #7
  %68 = load i32, i32* %56, align 4
  %69 = add i32 %68, 1
  store i32 %69, i32* %56, align 4
  br label %71

70:                                               ; preds = %41
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.782"* %42, %"class.blink::NameSource"* nonnull dereferenceable(56) %9) #7
  br label %71

71:                                               ; preds = %61, %70
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #7
  br label %87

87:                                               ; preds = %86, %83, %71
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #7
  br label %103

103:                                              ; preds = %87, %99, %102
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %43) #7
  %104 = load i32, i32* %4, align 4
  %105 = load i32, i32* %56, align 4
  %106 = add i32 %105, -1
  %107 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.782"* %42, i32 %106) #7
  %108 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %107, i64 0, i32 3
  store i32 %104, i32* %108, align 4
  %109 = load i32, i32* %56, align 4
  %110 = add i32 %109, -1
  %111 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.782"* %42, i32 %110) #7
  %112 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %112, label %130, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %130

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = zext i32 %120 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #7
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !3

127:                                              ; preds = %118
  call void @llvm.trap() #7
  unreachable

128:                                              ; preds = %118
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %119, align 4
  br label %130

130:                                              ; preds = %128, %113, %103
  %131 = bitcast %"class.blink::NameSource"* %111 to i64*
  %132 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %111, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  store i64 %25, i64* %131, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #7
  br label %148

148:                                              ; preds = %130, %144, %147
  store i8 1, i8* %8, align 1
  br label %149

149:                                              ; preds = %13, %148, %40
  %150 = phi i64 [ %16, %13 ], [ %25, %148 ], [ %25, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #7
  br label %151

151:                                              ; preds = %7, %149
  %152 = phi i64 [ %150, %149 ], [ 0, %7 ]
  %153 = inttoptr i64 %152 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %153
}

declare %"class.WTF::StringImpl"* @_ZNK5blink8AXObject19AriaTextAlternativeEbbRNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEERN2ax5mojom8NameFromEPNS_10HeapVectorINS2_INS_23NameSourceRelatedObjectEEELj0EEEPNSG_INS_10NameSourceELj0EEEPb(%"class.blink::AXObject"*, i1 zeroext, i1 zeroext, %"class.blink::HeapHashSet.770"*, i32* dereferenceable(4), %"class.blink::HeapVector.771"*, %"class.blink::HeapVector.779"*, i8*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement12DisplayLabelEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink12AXNodeObjectD2Ev(%"class.blink::AXNodeObject"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16AXMenuListOptionD0Ev(%"class.blink::AXMenuListOption"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::AXMenuListOption", %"class.blink::AXMenuListOption"* %0, i64 0, i32 0
  tail call void @_ZN5blink12AXNodeObjectD2Ev(%"class.blink::AXNodeObject"* %2) #7
  ret void
}

declare void @_ZNK5blink12AXNodeObject5TraceEPNS_7VisitorE(%"class.blink::AXNodeObject"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZN5blink12AXNodeObject4InitEPNS_8AXObjectE(%"class.blink::AXNodeObject"*, %"class.blink::AXObject"*) unnamed_addr #1

declare void @_ZN5blink12AXNodeObject6DetachEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject29GetAOMPropertyOrARIAAttributeENS_17AOMStringPropertyE(%"class.blink::AXObject"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_18AOMBooleanPropertyERb(%"class.blink::AXObject"*, i32, i8* dereferenceable(1)) unnamed_addr #1

declare %"class.blink::AccessibleNode"* @_ZNK5blink8AXObject17GetAccessibleNodeEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject14IsImageMapLinkEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject14IsAXNodeObjectEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject16IsAXLayoutObjectEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject17IsAXInlineTextBoxEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject6IsListEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject11IsAXListBoxEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject17IsAXListBoxOptionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject10IsMenuListEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16AXMenuListOption16IsMenuListOptionEv(%"class.blink::AXMenuListOption"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare zeroext i1 @_ZNK5blink8AXObject15IsMenuListPopupEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject12IsMockObjectEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject19IsProgressIndicatorEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject14IsAXRadioInputEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject8IsSliderEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject19IsValidationMessageEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject15IsVirtualObjectEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject9IsControlEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject9IsDefaultEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject10IsFieldsetEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject12IsInputImageEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject13IsNativeImageEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject18IsNativeSpinButtonEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject14IsNativeSliderEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject12IsSpinButtonEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject19IsAutofillAvailableEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject11IsClickableEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject10IsExpandedEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject9IsFocusedEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject9IsGrabbedEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject9IsHoveredEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject20IsLineBreakingObjectEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject8IsLinkedEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject8IsLoadedEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject7IsModalEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject17IsMultiSelectableEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject10IsRequiredEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject19IsSelectedFromFocusEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject22IsSelectedOptionActiveEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject19IsNotUserSelectableEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject9IsVisitedEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject22DefaultObjectInclusionEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector.769"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject7GetNameERN2ax5mojom8NameFromEPNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXNodeObject"*, i32* dereferenceable(4), %"class.blink::HeapVector"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXNodeObject"*, i32, i32* dereferenceable(4), %"class.blink::HeapVector"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_17DescriptionSourceELj0EEEPNS6_INS_6MemberINS_23NameSourceRelatedObjectEEELj0EEE(%"class.blink::AXNodeObject"*, i32, i32* dereferenceable(4), %"class.blink::HeapVector.862"*, %"class.blink::HeapVector.771"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject11PlaceholderEN2ax5mojom8NameFromE(%"class.blink::AXNodeObject"*, i32) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject5TitleEN2ax5mojom8NameFromE(%"class.blink::AXNodeObject"*, i32) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject19TextFromDescendantsERNS_11HeapHashSetINS_6MemberIKNS_8AXObjectEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEb(%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.770"*, i1 zeroext) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink12AXNodeObject9AccessKeyEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject15BackgroundColorEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject8GetColorEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject10ColorValueEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject24CanvasHasFallbackContentEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink12AXNodeObject18ComputedFontFamilyEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject26FontFamilyForSerializationEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare float @_ZNK5blink12AXNodeObject8FontSizeEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare float @_ZNK5blink12AXNodeObject10FontWeightEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject12HeadingLevelEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject17HierarchicalLevelEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject12ImageDataUrlERKNS_7IntSizeE(%"class.blink::AXNodeObject"*, %"class.blink::IntSize"* dereferenceable(8)) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink12AXNodeObject16InPageLinkTargetEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject11OrientationEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject12GetListStyleEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare i32 @_ZNK5blink12AXNodeObject12GetTextAlignEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject16GetTextDirectionEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare float @_ZNK5blink12AXNodeObject13GetTextIndentEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject15GetTextPositionEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZNK5blink12AXNodeObject34GetTextStyleAndTextDecorationStyleEPiPN2ax5mojom19TextDecorationStyleES5_S5_(%"class.blink::AXNodeObject"*, i32*, i32*, i32*, i32*) unnamed_addr #1

declare void @_ZNK5blink12AXNodeObject19RadioButtonsInGroupEv(%"class.blink::HeapVector"* sret, %"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZNK5blink12AXNodeObject3UrlEv(%"class.blink::KURL"* sret, %"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink12AXNodeObject12ChooserPopupEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZN5blink12AXNodeObject28LoadInlineTextBoxesRecursiveEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject10NextOnLineEv(%"class.blink::AXObject"*) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject14PreviousOnLineEv(%"class.blink::AXObject"*) unnamed_addr #1

declare void @_ZNK5blink8AXObject20TextCharacterOffsetsERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE(%"class.blink::AXObject"*, %"class.WTF::Vector.863"*) unnamed_addr #1

declare void @_ZNK5blink8AXObject17GetWordBoundariesERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEES5_(%"class.blink::AXObject"*, %"class.WTF::Vector.863"*, %"class.WTF::Vector.863"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject10TextLengthEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject29TextOffsetInFormattingContextEi(%"class.blink::AXNodeObject"*, i32) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject21TextOffsetInContainerEi(%"class.blink::AXObject"*, i32) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject19GetAriaCurrentStateEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject15GetInvalidStateEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject16AriaInvalidValueEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject13ValueForRangeEPf(%"class.blink::AXNodeObject"*, float*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject16MaxValueForRangeEPf(%"class.blink::AXNodeObject"*, float*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject16MinValueForRangeEPf(%"class.blink::AXNodeObject"*, float*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject17StepValueForRangeEPf(%"class.blink::AXNodeObject"*, float*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject18GetValueForControlEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject46SlowGetValueForControlIncludingContentEditableEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject11RestrictionEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZN5blink12AXNodeObject26DetermineAccessibilityRoleEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject17AriaRoleAttributeEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZN5blink12AXNodeObject16ActiveDescendantEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject12AutoCompleteEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZNK5blink12AXNodeObject16AriaOwnsElementsERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXNodeObject"*, %"class.blink::HeapVector"* dereferenceable(16)) unnamed_addr #1

declare void @_ZNK5blink12AXNodeObject23AriaDescribedbyElementsERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXNodeObject"*, %"class.blink::HeapVector"* dereferenceable(16)) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink12AXNodeObject12ErrorMessageEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject8HasPopupEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject14IsEditableRootEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject30HasContentEditableAttributeSetEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject20SupportsARIADraggingEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZNK5blink12AXNodeObject11DropeffectsERN3WTF6VectorIN2ax5mojom10DropeffectELj0ENS1_18PartitionAllocatorEEE(%"class.blink::AXNodeObject"*, %"class.WTF::Vector.864"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject8PosInSetEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject7SetSizeEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject16LiveRegionStatusEv(%"class.blink::AXObject"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject18LiveRegionRelevantEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject20AccessibilityHitTestERKNS_8IntPointE(%"class.blink::AXObject"*, %"class.blink::IntPoint"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::AXObject"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16AXMenuListOption15CanHaveChildrenEv(%"class.blink::AXMenuListOption"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink8AXObject13ClearChildrenEv(%"class.blink::AXObject"*) unnamed_addr #1

declare void @_ZNK5blink12AXNodeObject15SelectedOptionsERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXNodeObject"*, %"class.blink::HeapVector"* dereferenceable(16)) unnamed_addr #1

declare double @_ZNK5blink12AXNodeObject24EstimatedLoadingProgressEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject12RootScrollerEv(%"class.blink::AXObject"*) unnamed_addr #1

declare %"class.blink::LayoutObject"* @_ZNK5blink8AXObject15GetLayoutObjectEv(%"class.blink::AXObject"*) unnamed_addr #1

declare %"class.blink::Document"* @_ZNK5blink12AXNodeObject11GetDocumentEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.blink::Element"* @_ZNK5blink12AXNodeObject13AnchorElementEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject8LanguageEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject12HasAttributeERKNS_13QualifiedNameE(%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink12AXNodeObject12GetAttributeERKNS_13QualifiedNameE(%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8AXObject11IsDataTableEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink8AXObject11ColumnCountEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject8RowCountEv(%"class.blink::AXObject"*) unnamed_addr #1

declare void @_ZNK5blink8AXObject13ColumnHeadersERNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector"* dereferenceable(16)) unnamed_addr #1

declare void @_ZNK5blink8AXObject10RowHeadersERNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector"* dereferenceable(16)) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject19CellForColumnAndRowEjj(%"class.blink::AXObject"*, i32, i32) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject11ColumnIndexEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject8RowIndexEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject10ColumnSpanEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject7RowSpanEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject16GetSortDirectionEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject12HeaderObjectEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::AXObject"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScrollableArea"* @_ZNK5blink8AXObject29GetScrollableAreaIfScrollableEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::ScrollableArea"* null
}

declare zeroext i1 @_ZN5blink8AXObject35InternalSetAccessibilityFocusActionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink8AXObject37InternalClearAccessibilityFocusActionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12AXNodeObject23OnNativeDecrementActionEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12AXNodeObject19OnNativeFocusActionEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12AXNodeObject23OnNativeIncrementActionEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12AXNodeObject55OnNativeSetSequentialFocusNavigationStartingPointActionEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12AXNodeObject22OnNativeSetValueActionERKN3WTF6StringE(%"class.blink::AXNodeObject"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink12AXNodeObject15ChildrenChangedEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZN5blink12AXNodeObject29HandleActiveDescendantChangedEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8AXObject26HandleAutofillStateChangedENS_18WebAXAutofillStateE(%"class.blink::AXObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12AXNodeObject25HandleAriaExpandedChangedEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZN5blink12AXNodeObject16SelectionChangedEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject22NativeRoleIgnoringAriaEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZN5blink12AXNodeObject11AddChildrenEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZNK5blink12AXNodeObject25SerializeMarkerAttributesEPN2ui10AXNodeDataE(%"class.blink::AXNodeObject"*, %"struct.ui::AXNodeData"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject26RoleFromLayoutObjectOrNodeEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject17IsTabItemSelectedEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8*, %"class.blink::NameSource"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"class.blink::NameSource"*
  %4 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.blink::NameSource"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast i8* %0 to i64*
  store i64 %6, i64* %7, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %4, align 8
  %8 = getelementptr inbounds i8, i8* %0, i64 8
  %9 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false) #7
  %10 = getelementptr inbounds i8, i8* %0, i64 24
  %11 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 5
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.WTF::AtomicString"* %11 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast i8* %10 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %16 = getelementptr inbounds i8, i8* %0, i64 32
  %17 = bitcast i8* %16 to i32*
  %18 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 6
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %17, align 8
  %20 = getelementptr inbounds i8, i8* %0, i64 40
  %21 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 7
  %22 = getelementptr inbounds i8, i8* %0, i64 48
  %23 = bitcast i8* %22 to i32*
  %24 = getelementptr inbounds i8, i8* %0, i64 52
  %25 = bitcast i8* %24 to i32*
  %26 = bitcast %"class.blink::HeapVector.771"* %21 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #7
  %27 = load i64, i64* %26, align 8
  %28 = bitcast i8* %20 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %23, align 4
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %23, align 4
  store i32 %30, i32* %29, align 4
  %32 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %33 = load i32, i32* %25, align 4
  %34 = load i32, i32* %32, align 4
  store i32 %34, i32* %25, align 4
  store i32 %33, i32* %32, align 4
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %2
  %38 = bitcast i8* %20 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %39) #7
  br label %41

41:                                               ; preds = %37, %2
  %42 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %41
  %45 = bitcast %"class.blink::HeapVector.771"* %21 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %46) #7
  br label %48

48:                                               ; preds = %41, %44
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %75, label %51

51:                                               ; preds = %48
  %52 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %53 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %52, i64 0, i32 1
  %54 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %53) #7
  %55 = icmp eq i8* %54, null
  br i1 %55, label %56, label %58, !prof !3

56:                                               ; preds = %51
  %57 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %53, i8* %57) #7
  br label %58

58:                                               ; preds = %56, %51
  %59 = phi i8* [ %57, %56 ], [ %54, %51 ]
  %60 = bitcast i8* %59 to %"class.blink::ThreadState"**
  %61 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %61, i64 0, i32 9
  %63 = load i8, i8* %62, align 1, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %75, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %61, i64 0, i32 13
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, 1
  store i64 %68, i64* %66, align 8
  %69 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %61, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %70 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %70, i64 0, i32 0, i32 0
  %72 = bitcast i8* %20 to %"class.WTF::Vector.774"*
  tail call void @_ZNK3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector.774"* %72, %"class.blink::Visitor"* %71) #7
  %73 = load i64, i64* %66, align 8
  %74 = add i64 %73, -1
  store i64 %74, i64* %66, align 8
  br label %75

75:                                               ; preds = %48, %58, %65
  ret %"class.blink::NameSource"* %3
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.782"*, %"class.blink::NameSource"* dereferenceable(56)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.782", %"class.WTF::Vector.782"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.782", %"class.WTF::Vector.782"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %6, align 8
  %8 = icmp ugt %"class.blink::NameSource"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 %10
  %12 = icmp ugt %"class.blink::NameSource"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.782", %"class.WTF::Vector.782"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.782"* %0, i32 %22) #7
  %23 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::NameSource"* %1 to i64
  %26 = ptrtoint %"class.blink::NameSource"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = sdiv exact i64 %27, 56
  %29 = getelementptr inbounds %"class.WTF::Vector.782", %"class.WTF::Vector.782"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.782"* %0, i32 %37) #7
  %38 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::NameSource"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::NameSource"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %41, i64 %44
  %46 = bitcast %"class.blink::NameSource"* %45 to i8*
  %47 = tail call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %46, %"class.blink::NameSource"* dereferenceable(56) %42)
  %48 = load i32, i32* %3, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector.774"*, %"class.blink::Visitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.WTF::Vector.774"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast %"class.WTF::Vector.774"* %0 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #7
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %1, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #7
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.777"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.777", %"class.blink::Member.777"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.777"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23NameSourceRelatedObjectEE5TraceEPNS_7VisitorEPKv) #7
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23NameSourceRelatedObjectEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %9, i64 6
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* %1, i8* %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_8AXObjectEEEvRKNS_14LivenessBrokerEPKv) #7
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor14HandleWeakCellINS_8AXObjectEEEvRKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AXObject"**
  %4 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %3, align 8
  %5 = ptrtoint %"class.blink::AXObject"* %4 to i64
  switch i64 %5, label %6 [
    i64 0, label %27
    i64 -1, label %27
  ]

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #7
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #7
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %4, i64 -1, i32 14
  %20 = bitcast %"class.blink::Member.2"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast i8* %1 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  br label %27

27:                                               ; preds = %18, %2, %2, %13, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AXObject"*
  %4 = bitcast i8* %1 to void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)**, void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)*, void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)*, void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::AXObject"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.782"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.782", %"class.WTF::Vector.782"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.782", %"class.WTF::Vector.782"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %8, align 8
  %10 = icmp eq %"class.blink::NameSource"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_10NameSourceEEEmm(i64 %11) #7
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = udiv i64 %12, 56
  %15 = tail call %"class.blink::HeapVectorBacking.972"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %14) #7
  %16 = ptrtoint %"class.blink::HeapVectorBacking.972"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.782"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.972", %"class.blink::HeapVectorBacking.972"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #7
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %8, align 8
  %26 = icmp eq %"class.blink::NameSource"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::NameSource"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #7
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = udiv i64 %12, 56
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #7
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #7
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #7
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #7
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.782"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.782"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %15

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.782", %"class.WTF::Vector.782"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.782", %"class.WTF::Vector.782"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.782"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.782", %"class.WTF::Vector.782"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF20VectorTypeOperationsIN5blink10NameSourceENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::NameSource"* %6, %"class.blink::NameSource"* %10, %"class.blink::NameSource"* null, i1 zeroext true)
  %13 = bitcast %"class.blink::NameSource"* %6 to i8*
  %14 = mul nuw nsw i64 %9, 56
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %13, i64 %14) #7
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %13) #7
  br label %42

15:                                               ; preds = %2
  %16 = zext i32 %1 to i64
  %17 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_10NameSourceEEEmm(i64 %16) #7
  %18 = udiv i64 %17, 56
  %19 = tail call %"class.blink::HeapVectorBacking.972"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %18) #7
  %20 = bitcast %"class.blink::HeapVectorBacking.972"* %19 to %"class.blink::NameSource"*
  %21 = ptrtoint %"class.blink::HeapVectorBacking.972"* %19 to i64
  %22 = getelementptr inbounds %"class.WTF::Vector.782", %"class.WTF::Vector.782"* %0, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %22, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector.782", %"class.WTF::Vector.782"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %23, i64 %26
  tail call void @_ZN3WTF20VectorTypeOperationsIN5blink10NameSourceENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::NameSource"* %23, %"class.blink::NameSource"* %27, %"class.blink::NameSource"* %20, i1 zeroext false)
  %28 = bitcast %"class.WTF::Vector.782"* %0 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = load i32, i32* %24, align 4
  %31 = zext i32 %30 to i64
  %32 = mul nuw nsw i64 %31, 56
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %29, i64 %32) #7
  %33 = load i8*, i8** %28, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %33) #7
  %34 = bitcast %"class.WTF::Vector.782"* %0 to i64*
  store atomic i64 %21, i64* %34 monotonic, align 8
  %35 = trunc i64 %18 to i32
  %36 = getelementptr inbounds %"class.WTF::Vector.782", %"class.WTF::Vector.782"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %35, i32* %36, align 8
  %37 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %15
  %40 = getelementptr inbounds %"class.blink::HeapVectorBacking.972", %"class.blink::HeapVectorBacking.972"* %19, i64 0, i32 0
  %41 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %40) #7
  br label %42

42:                                               ; preds = %39, %15, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_10NameSourceEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2396745
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2396745) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.3, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = mul i64 %0, 56
  ret i64 %20
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.972"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.5, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = mul i64 %0, 56
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.972"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.972"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 4
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #7
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #7
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #7
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #7
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %34, i8* %35) #7
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #7
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #7
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #7
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #7
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !3

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #7
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #7
  br i1 %28, label %73, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"class.blink::NameSource"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !3

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = udiv i64 %49, 56
  %51 = icmp ugt i64 %49, 55
  br i1 %51, label %52, label %73

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %54 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %55

55:                                               ; preds = %70, %52
  %56 = phi i64 [ 0, %52 ], [ %71, %70 ]
  %57 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %30, i64 %56, i32 7
  %58 = bitcast %"class.blink::HeapVector.771"* %57 to i64*
  %59 = load atomic i64, i64* %58 monotonic, align 8
  %60 = icmp eq i64 %59, 0
  %61 = bitcast %"class.blink::HeapVector.771"* %57 to i8**
  %62 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %53, align 8
  %63 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %62, i64 11
  %64 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %63, align 8
  tail call void %64(%"class.blink::Visitor"* %0, i8** %61) #7
  br i1 %60, label %70, label %65

65:                                               ; preds = %55
  %66 = inttoptr i64 %59 to i8*
  %67 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %54, align 8
  %68 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %67, i64 5
  %69 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %68, align 8
  tail call void %69(%"class.blink::Visitor"* %0, i8* nonnull %66, i8* nonnull %66, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #7
  br label %70

70:                                               ; preds = %65, %55
  %71 = add nuw nsw i64 %56, 1
  %72 = icmp ult i64 %71, %50
  br i1 %72, label %55, label %73

73:                                               ; preds = %70, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::HeapVectorBacking.972"*
  tail call void @_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE8FinalizeEv(%"class.blink::HeapVectorBacking.972"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE8FinalizeEv(%"class.blink::HeapVectorBacking.972"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapVectorBacking.972", %"class.blink::HeapVectorBacking.972"* %0, i64 -8, i32 0
  %3 = getelementptr inbounds i8, i8* %2, i64 6
  %4 = bitcast i8* %3 to i16*
  %5 = load i16, i16* %4, align 2
  %6 = lshr i16 %5, 2
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %8, label %15, !prof !3

8:                                                ; preds = %1
  %9 = ptrtoint i8* %2 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %6 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %8, %15
  %19 = phi i64 [ %14, %8 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = udiv i64 %20, 56
  %22 = getelementptr inbounds i8, i8* %2, i64 8
  %23 = bitcast i8* %22 to %"class.blink::NameSource"*
  %24 = icmp ugt i64 %20, 55
  br i1 %24, label %26, label %25

25:                                               ; preds = %62, %18
  ret void

26:                                               ; preds = %18, %62
  %27 = phi i64 [ %64, %62 ], [ 0, %18 ]
  %28 = phi i32 [ %63, %62 ], [ 0, %18 ]
  %29 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %23, i64 %27, i32 5, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #7
  br label %45

45:                                               ; preds = %44, %41, %26
  %46 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %23, i64 %27, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #7
  br label %62

62:                                               ; preds = %45, %58, %61
  %63 = add i32 %28, 1
  %64 = zext i32 %63 to i64
  %65 = icmp ugt i64 %21, %64
  br i1 %65, label %26, label %25
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF20VectorTypeOperationsIN5blink10NameSourceENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::NameSource"*, %"class.blink::NameSource"*, %"class.blink::NameSource"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq %"class.blink::NameSource"* %0, %1
  br i1 %5, label %116, label %6

6:                                                ; preds = %4, %112
  %7 = phi %"class.blink::NameSource"* [ %114, %112 ], [ %0, %4 ]
  %8 = phi %"class.blink::NameSource"* [ %113, %112 ], [ %2, %4 ]
  %9 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.blink::NameSource"* %7 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.blink::NameSource"* %8 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %13 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 1
  %14 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 16, i1 false) #7
  %15 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 5
  %16 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 5
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.WTF::AtomicString"* %16 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::AtomicString"* %15 to i64*
  store i64 %19, i64* %20, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %21 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 6
  %22 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 6
  %23 = load i32, i32* %22, align 8
  store i32 %23, i32* %21, align 8
  %24 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 7
  %25 = bitcast %"class.blink::HeapVector.771"* %24 to i8*
  %26 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 7
  %27 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %29 = bitcast %"class.blink::HeapVector.771"* %26 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #7
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::HeapVector.771"* %24 to i64*
  store atomic i64 0, i64* %29 monotonic, align 8
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %33 = load i32, i32* %27, align 4
  %34 = load i32, i32* %32, align 4
  store i32 %34, i32* %27, align 4
  store i32 %33, i32* %32, align 4
  %35 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %36 = load i32, i32* %28, align 4
  %37 = load i32, i32* %35, align 4
  store i32 %37, i32* %28, align 4
  store i32 %36, i32* %35, align 4
  %38 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %6
  %41 = bitcast %"class.blink::HeapVector.771"* %24 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #7
  br label %44

44:                                               ; preds = %40, %6
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %44
  %48 = bitcast %"class.blink::HeapVector.771"* %26 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %49) #7
  br label %51

51:                                               ; preds = %44, %47
  br i1 %3, label %52, label %79

52:                                               ; preds = %51
  %53 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %79, label %55

55:                                               ; preds = %52
  %56 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %57 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %56, i64 0, i32 1
  %58 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %57) #7
  %59 = icmp eq i8* %58, null
  br i1 %59, label %60, label %62, !prof !3

60:                                               ; preds = %55
  %61 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %57, i8* %61) #7
  br label %62

62:                                               ; preds = %60, %55
  %63 = phi i8* [ %61, %60 ], [ %58, %55 ]
  %64 = bitcast i8* %63 to %"class.blink::ThreadState"**
  %65 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %65, i64 0, i32 9
  %67 = load i8, i8* %66, align 1, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %79, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %65, i64 0, i32 13
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %70, align 8
  %73 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %65, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %74 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %74, i64 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 7, i32 0
  tail call void @_ZNK3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector.774"* %76, %"class.blink::Visitor"* %75) #7
  %77 = load i64, i64* %70, align 8
  %78 = add i64 %77, -1
  store i64 %78, i64* %70, align 8
  br label %79

79:                                               ; preds = %69, %62, %52, %51
  %80 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 5, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #7
  br label %96

96:                                               ; preds = %95, %92, %79
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #7
  br label %112

112:                                              ; preds = %96, %108, %111
  %113 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 1
  %114 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 1
  %115 = icmp eq %"class.blink::NameSource"* %114, %1
  br i1 %115, label %116, label %6

116:                                              ; preds = %112, %4
  ret void
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.782"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.782", %"class.WTF::Vector.782"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.782", %"class.WTF::Vector.782"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %24, i64 %25
  ret %"class.blink::NameSource"* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
