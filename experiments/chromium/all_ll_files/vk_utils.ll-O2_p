; ModuleID = '../../third_party/angle/src/libANGLE/renderer/vulkan/vk_utils.cpp'
source_filename = "../../third_party/angle/src/libANGLE/renderer/vulkan/vk_utils.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%struct.VkDevice_T = type opaque
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%struct.VkDeviceMemory_T = type opaque
%struct.VkSemaphore_T = type opaque
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkEvent_T = type opaque
%struct.VkFence_T = type opaque
%struct.VkBuffer_T = type opaque
%struct.VkBufferView_T = type opaque
%struct.VkImage_T = type opaque
%struct.VkImageView_T = type opaque
%struct.VkShaderModule_T = type opaque
%struct.VkPipelineLayout_T = type opaque
%struct.VkRenderPass_T = type opaque
%struct.VkPipeline_T = type opaque
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkSampler_T = type opaque
%struct.VkDescriptorPool_T = type opaque
%struct.VkFramebuffer_T = type opaque
%struct.VkCommandPool_T = type opaque
%struct.VkQueryPool_T = type opaque
%"struct.angle::Color" = type { float, float, float, float }
%"class.angle::PackedEnumMap.1315" = type { %"struct.std::__1::array.1316" }
%"struct.std::__1::array.1316" = type { [6 x i32] }
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%"class.rx::vk::Context" = type { i32 (...)**, %"class.rx::RendererVk"* }
%"class.rx::RendererVk" = type { %"class.egl::Display"*, i8, [7 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"struct.angle::FeaturesVk", %struct.VkInstance_T*, i8, i8, i8, i32, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkDebugReportCallbackEXT_T*, %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceLineRasterizationFeaturesEXT, %struct.VkPhysicalDeviceProvokingVertexFeaturesEXT, %struct.VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT, %struct.VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT, %struct.VkPhysicalDeviceTransformFeedbackFeaturesEXT, %struct.VkPhysicalDeviceIndexTypeUint8FeaturesEXT, %struct.VkPhysicalDeviceSubgroupProperties, %struct.VkPhysicalDeviceDeviceMemoryReportFeaturesEXT, %struct.VkDeviceDeviceMemoryReportCreateInfoEXT, %struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT, %struct.VkPhysicalDeviceShaderFloat16Int8Features, %struct.VkPhysicalDeviceDepthStencilResolveProperties, %struct.VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT, %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceCustomBorderColorFeaturesEXT, %struct.VkExternalFenceProperties, %struct.VkExternalSemaphoreProperties, %struct.VkPhysicalDeviceSamplerYcbcrConversionFeatures, %"class.std::__1::vector.680", %"class.angle::PackedEnumMap.687", i32, i32, i64, i64, i32, %struct.VkDevice_T*, %"class.rx::SerialFactoryBase.689", i8, %"class.std::__1::mutex", %"class.std::__1::vector.691", %"class.rx::vk::MemoryProperties", %"class.rx::vk::FormatTable", %"class.std::__1::mutex", %"class.rx::vk::PipelineCache", i32, i8, i8, %"class.angle::PackedEnumMap.706", %"class.std::__1::basic_string", i32, %"class.rx::DebugAnnotatorVk", i32, %"class.rx::vk::CommandPool", %"class.std::__1::deque.709", %"class.std::__1::mutex", %"class.rx::vk::CommandQueue", %"class.std::__1::mutex", %"class.std::__1::vector.753", %"class.rx::vk::CommandProcessor", %"class.rx::vk::Allocator", %"class.rx::SamplerCache", %"class.rx::SamplerYcbcrConversionCache", %"class.rx::vk::ActiveHandleCounter", %"class.rx::vk::ResourceSerialFactory", %"class.rx::vk::MemoryReport", %"class.angle::PackedEnumMap.980", i32, %"class.std::__1::shared_ptr.982" }
%"class.egl::Display" = type opaque
%"struct.gl::Caps" = type <{ float, float, i32, [4 x i8], i64, i32, i32, i32, i32, float, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap.30", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i32* }
%"struct.gl::TypePrecision" = type { %"struct.std::__1::array.28", i32 }
%"struct.std::__1::array.28" = type { [2 x i32] }
%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array.29" }
%"struct.std::__1::array.29" = type { [6 x i32] }
%"class.angle::PackedEnumMap.30" = type { %"struct.std::__1::array.31" }
%"struct.std::__1::array.31" = type { [6 x i64] }
%"struct.std::__1::array.32" = type { [3 x i32] }
%"class.gl::TextureCapsMap" = type { %"class.angle::PackedEnumMap.33" }
%"class.angle::PackedEnumMap.33" = type { %"struct.std::__1::array.34" }
%"struct.std::__1::array.34" = type { [227 x %"struct.gl::TextureCaps"] }
%"struct.gl::TextureCaps" = type { i8, i8, i8, i8, i8, %"class.std::__1::set.35" }
%"class.std::__1::set.35" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.angle::FeaturesVk" = type { %"struct.angle::FeatureSetBase", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.std::__1::array.679", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature" }
%"struct.angle::FeatureSetBase" = type { %"class.std::__1::map.668" }
%"class.std::__1::map.668" = type { %"class.std::__1::__tree.669" }
%"class.std::__1::__tree.669" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.674" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.674" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::array.679" = type { [4 x %"struct.angle::Feature"] }
%"struct.angle::Feature" = type { i8*, i32, i8*, i8*, i8, i8* }
%struct.VkInstance_T = type opaque
%struct.VkDebugUtilsMessengerEXT_T = type opaque
%struct.VkDebugReportCallbackEXT_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceLineRasterizationFeaturesEXT = type { i32, i8*, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceProvokingVertexFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceTransformFeedbackFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceIndexTypeUint8FeaturesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceSubgroupProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDeviceMemoryReportFeaturesEXT = type { i32, i8*, i32 }
%struct.VkDeviceDeviceMemoryReportCreateInfoEXT = type { i32, i8*, i32, void (%struct.VkDeviceMemoryReportCallbackDataEXT*, i8*)*, i8* }
%struct.VkDeviceMemoryReportCallbackDataEXT = type { i32, i8*, i32, i32, i64, i64, i32, i64, i32 }
%struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT = type { i32, i8*, i64 }
%struct.VkPhysicalDeviceShaderFloat16Int8Features = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceDepthStencilResolveProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceCustomBorderColorFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkExternalFenceProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalSemaphoreProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceSamplerYcbcrConversionFeatures = type { i32, i8*, i32 }
%"class.std::__1::vector.680" = type { %"class.std::__1::__vector_base.681" }
%"class.std::__1::__vector_base.681" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.682" }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %struct.VkQueueFamilyProperties* }
%"class.angle::PackedEnumMap.687" = type { %"struct.std::__1::array.688" }
%"struct.std::__1::array.688" = type { [3 x i8] }
%"class.rx::SerialFactoryBase.689" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.690" }
%"struct.std::__1::__atomic_base.690" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::vector.691" = type { %"class.std::__1::__vector_base.692" }
%"class.std::__1::__vector_base.692" = type { %"class.rx::vk::SharedGarbage"*, %"class.rx::vk::SharedGarbage"*, %"class.std::__1::__compressed_pair.700" }
%"class.rx::vk::SharedGarbage" = type { %"class.rx::vk::SharedResourceUse", %"class.std::__1::vector.693" }
%"class.rx::vk::SharedResourceUse" = type { %"struct.rx::vk::ResourceUse"* }
%"struct.rx::vk::ResourceUse" = type { i32, %"class.rx::Serial" }
%"class.rx::Serial" = type { i64 }
%"class.std::__1::vector.693" = type { %"class.std::__1::__vector_base.694" }
%"class.std::__1::__vector_base.694" = type { %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"*, %"class.std::__1::__compressed_pair.695" }
%"class.rx::vk::GarbageObject" = type { i32, %"struct.rx::vk::GarbageHandle_T"* }
%"struct.rx::vk::GarbageHandle_T" = type opaque
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.rx::vk::GarbageObject"* }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.rx::vk::SharedGarbage"* }
%"class.rx::vk::MemoryProperties" = type { %struct.VkPhysicalDeviceMemoryProperties }
%"class.rx::vk::FormatTable" = type { [8 x i8], %"struct.std::__1::array.705" }
%"struct.std::__1::array.705" = type { [227 x %"struct.rx::vk::Format"] }
%"struct.rx::vk::Format" = type <{ i32, i32, i32, i32, i32, [4 x i8], void (i64, i64, i64, i8*, i64, i64)*, { void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, i8 } (i32)*, void (i8*, i64, i64, i8*)*, void (i8*, i64, i64, i8*)*, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.rx::vk::PipelineCache" = type { %"class.rx::vk::WrappedObject" }
%"class.rx::vk::WrappedObject" = type { %struct.VkPipelineCache_T* }
%struct.VkPipelineCache_T = type opaque
%"class.angle::PackedEnumMap.706" = type { %"struct.std::__1::array.707" }
%"struct.std::__1::array.707" = type { [227 x %struct.VkFormatProperties] }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.rx::DebugAnnotatorVk" = type { %"class.angle::LoggingAnnotator" }
%"class.angle::LoggingAnnotator" = type { %"class.gl::DebugAnnotator" }
%"class.gl::DebugAnnotator" = type { i32 (...)** }
%"class.rx::vk::CommandPool" = type { %"class.rx::vk::WrappedObject.708" }
%"class.rx::vk::WrappedObject.708" = type { %struct.VkCommandPool_T* }
%"class.std::__1::deque.709" = type { %"class.std::__1::__deque_base.710" }
%"class.std::__1::__deque_base.710" = type { %"struct.std::__1::__split_buffer.711", i64, %"class.std::__1::__compressed_pair.718" }
%"struct.std::__1::__split_buffer.711" = type { %"struct.rx::RendererVk::PendingOneOffCommands"**, %"struct.rx::RendererVk::PendingOneOffCommands"**, %"struct.rx::RendererVk::PendingOneOffCommands"**, %"class.std::__1::__compressed_pair.713" }
%"struct.rx::RendererVk::PendingOneOffCommands" = type { %"class.rx::Serial", %"class.rx::vk::priv::CommandBuffer" }
%"class.rx::vk::priv::CommandBuffer" = type { %"class.rx::vk::WrappedObject.712" }
%"class.rx::vk::WrappedObject.712" = type { %struct.VkCommandBuffer_T* }
%struct.VkCommandBuffer_T = type opaque
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.714" }
%"struct.std::__1::__compressed_pair_elem.714" = type { %"struct.rx::RendererVk::PendingOneOffCommands"** }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.rx::vk::CommandQueue" = type { %"class.rx::vk::CommandQueueInterface", %"class.std::__1::vector.722", %"class.std::__1::vector.729", %"class.rx::vk::priv::CommandBuffer", %"class.rx::vk::PersistentCommandPool", %"class.rx::SerialFactoryBase.689", %"class.rx::Serial", %"class.rx::Serial", %"class.rx::Serial", %"class.angle::PackedEnumMap.743", %"class.rx::vk::FenceRecycler" }
%"class.rx::vk::CommandQueueInterface" = type { i32 (...)** }
%"class.std::__1::vector.722" = type { %"class.std::__1::__vector_base.723" }
%"class.std::__1::__vector_base.723" = type { %"class.rx::vk::ObjectAndSerial"*, %"class.rx::vk::ObjectAndSerial"*, %"class.std::__1::__compressed_pair.724" }
%"class.rx::vk::ObjectAndSerial" = type opaque
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.rx::vk::ObjectAndSerial"* }
%"class.std::__1::vector.729" = type { %"class.std::__1::__vector_base.730" }
%"class.std::__1::__vector_base.730" = type { %"struct.rx::vk::CommandBatch"*, %"struct.rx::vk::CommandBatch"*, %"class.std::__1::__compressed_pair.731" }
%"struct.rx::vk::CommandBatch" = type { [8 x i8], %"class.rx::vk::priv::CommandBuffer", %"class.rx::vk::CommandPool", %"class.rx::vk::Shared", %"class.rx::Serial" }
%"class.rx::vk::Shared" = type { %"class.rx::vk::RefCounted"* }
%"class.rx::vk::RefCounted" = type { i32, %"class.rx::vk::Fence" }
%"class.rx::vk::Fence" = type { %"class.rx::vk::WrappedObject.747" }
%"class.rx::vk::WrappedObject.747" = type { %struct.VkFence_T* }
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.732" }
%"struct.std::__1::__compressed_pair_elem.732" = type { %"struct.rx::vk::CommandBatch"* }
%"class.rx::vk::PersistentCommandPool" = type { %"class.std::__1::vector.736", %"class.rx::vk::CommandPool" }
%"class.std::__1::vector.736" = type { %"class.std::__1::__vector_base.737" }
%"class.std::__1::__vector_base.737" = type { %"class.rx::vk::priv::CommandBuffer"*, %"class.rx::vk::priv::CommandBuffer"*, %"class.std::__1::__compressed_pair.738" }
%"class.std::__1::__compressed_pair.738" = type { %"struct.std::__1::__compressed_pair_elem.739" }
%"struct.std::__1::__compressed_pair_elem.739" = type { %"class.rx::vk::priv::CommandBuffer"* }
%"class.angle::PackedEnumMap.743" = type { %"struct.std::__1::array.744" }
%"struct.std::__1::array.744" = type { [3 x %struct.VkQueue_T*] }
%struct.VkQueue_T = type opaque
%"class.rx::vk::FenceRecycler" = type { %"class.std::__1::mutex", %"class.rx::vk::Recycler" }
%"class.rx::vk::Recycler" = type { %"class.std::__1::vector.745" }
%"class.std::__1::vector.745" = type { %"class.std::__1::__vector_base.746" }
%"class.std::__1::__vector_base.746" = type { %"class.rx::vk::Fence"*, %"class.rx::vk::Fence"*, %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"class.rx::vk::Fence"* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.753" = type { %"class.std::__1::__vector_base.754" }
%"class.std::__1::__vector_base.754" = type { %"class.rx::vk::CommandBufferHelper"**, %"class.rx::vk::CommandBufferHelper"**, %"class.std::__1::__compressed_pair.828" }
%"class.rx::vk::CommandBufferHelper" = type { [8 x i8], %"class.angle::PoolAllocator", %"class.angle::PackedEnumMap.762", %"class.angle::BitSetT.771", %"class.rx::vk::priv::SecondaryCommandBuffer", i32, %"class.rx::vk::RenderPassDesc", %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::Framebuffer", %"struct.gl::Rectangle", %"class.rx::vk::PackedClearValuesArray", i8, %"struct.std::__1::array.783", i32, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, %"struct.gl::Rectangle", %"struct.gl::Rectangle", %"class.rx::vk::PackedAttachmentIndex", %"class.angle::FastIntegerMap", %"class.angle::FastIntegerSet", %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"*, %"class.gl::LevelIndexWrapper", i32, i32, %"class.rx::vk::PackedAttachmentIndex", %"class.rx::vk::PackedImageAttachmentArray", %"class.rx::vk::PackedImageAttachmentArray", %"class.rx::vk::ImageHelper"* }
%"class.angle::PoolAllocator" = type <{ i64, i64, i64, i64, i64, %"struct.angle::PoolAllocator::Header"*, %"struct.angle::PoolAllocator::Header"*, %"class.std::__1::vector.755", i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.angle::PoolAllocator::Header" = type { %"struct.angle::PoolAllocator::Header"*, i64 }
%"class.std::__1::vector.755" = type { %"class.std::__1::__vector_base.756" }
%"class.std::__1::__vector_base.756" = type { %"struct.angle::PoolAllocator::AllocState"*, %"struct.angle::PoolAllocator::AllocState"*, %"class.std::__1::__compressed_pair.757" }
%"struct.angle::PoolAllocator::AllocState" = type { i64, %"struct.angle::PoolAllocator::Header"* }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"struct.angle::PoolAllocator::AllocState"* }
%"class.angle::PackedEnumMap.762" = type { %"struct.std::__1::array.763" }
%"struct.std::__1::array.763" = type { [14 x %"class.rx::vk::PipelineBarrier"] }
%"class.rx::vk::PipelineBarrier" = type { i32, i32, i32, i32, %"class.std::__1::vector.764" }
%"class.std::__1::vector.764" = type { %"class.std::__1::__vector_base.765" }
%"class.std::__1::__vector_base.765" = type { %struct.VkImageMemoryBarrier*, %struct.VkImageMemoryBarrier*, %"class.std::__1::__compressed_pair.766" }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %struct.VkImageMemoryBarrier* }
%"class.angle::BitSetT.771" = type { i16 }
%"class.rx::vk::priv::SecondaryCommandBuffer" = type { i8, %"class.std::__1::vector.772", %"class.angle::PoolAllocator"*, i8*, i64 }
%"class.std::__1::vector.772" = type { %"class.std::__1::__vector_base.773" }
%"class.std::__1::__vector_base.773" = type { %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"**, %"class.std::__1::__compressed_pair.774" }
%"struct.rx::vk::priv::CommandHeader" = type { i16, i16 }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"struct.rx::vk::priv::CommandHeader"** }
%"class.rx::vk::RenderPassDesc" = type { i8, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", %"struct.std::__1::array.779" }
%"class.angle::BitSetT.147" = type { i8 }
%"struct.std::__1::array.779" = type { [9 x i8] }
%"class.rx::vk::AttachmentOpsArray" = type { %"struct.std::__1::array.780" }
%"struct.std::__1::array.780" = type { [10 x %"struct.rx::vk::PackedAttachmentOpsDesc"] }
%"struct.rx::vk::PackedAttachmentOpsDesc" = type { i32 }
%"class.rx::vk::Framebuffer" = type { %"class.rx::vk::WrappedObject.781" }
%"class.rx::vk::WrappedObject.781" = type { %struct.VkFramebuffer_T* }
%"class.rx::vk::PackedClearValuesArray" = type { %"struct.std::__1::array.782" }
%"struct.std::__1::array.782" = type { [10 x %union.VkClearValue] }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%"struct.std::__1::array.783" = type { [4 x %struct.VkBuffer_T*] }
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"class.angle::FastIntegerMap" = type { %"class.angle::FastIntegerSet", %"class.std::__1::vector.791" }
%"class.std::__1::vector.791" = type { %"class.std::__1::__vector_base.792" }
%"class.std::__1::__vector_base.792" = type { i32*, i32*, %"class.std::__1::__compressed_pair.793" }
%"class.std::__1::__compressed_pair.793" = type { %"struct.std::__1::__compressed_pair_elem.794" }
%"struct.std::__1::__compressed_pair_elem.794" = type { i32* }
%"class.angle::FastIntegerSet" = type { %"class.std::__1::vector.784" }
%"class.std::__1::vector.784" = type { %"class.std::__1::__vector_base.785" }
%"class.std::__1::__vector_base.785" = type { %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*, %"class.std::__1::__compressed_pair.786" }
%"class.angle::BitSetT.168" = type { i64 }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"class.angle::BitSetT.168"* }
%"class.gl::LevelIndexWrapper" = type { i32 }
%"class.rx::vk::PackedAttachmentIndex" = type { i32 }
%"class.rx::vk::PackedImageAttachmentArray" = type { %"struct.std::__1::array.827" }
%"struct.std::__1::array.827" = type { [10 x %"class.rx::vk::ImageHelper"*] }
%"class.rx::vk::ImageHelper" = type <{ %"class.rx::vk::Resource", %"class.angle::Subject", %"class.rx::vk::Image", %"class.rx::vk::DeviceMemory", i32, i32, i32, i32, %struct.VkExtent3D, i8, [3 x i8], %"struct.rx::vk::Format"*, i32, %"class.rx::vk::ImageSerial", i32, i32, i32, i32, %"class.angle::BitSetT.800", [6 x i8], %"class.rx::vk::BindingPointer", i64, %"class.gl::LevelIndexWrapper", i32, i32, [4 x i8], %"class.rx::vk::DynamicBuffer", %"class.std::__1::vector.817", %struct.Optional.825, %"struct.std::__1::array.826", %"struct.std::__1::array.826", [4 x i8] }>
%"class.rx::vk::Resource" = type { i32 (...)**, %"class.rx::vk::SharedResourceUse" }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"class.rx::vk::Image" = type { %"class.rx::vk::WrappedObject.798" }
%"class.rx::vk::WrappedObject.798" = type { %struct.VkImage_T* }
%"class.rx::vk::DeviceMemory" = type { %"class.rx::vk::WrappedObject.799" }
%"class.rx::vk::WrappedObject.799" = type { %struct.VkDeviceMemory_T* }
%"class.rx::vk::ImageSerial" = type { i32 }
%"class.angle::BitSetT.800" = type { i16 }
%"class.rx::vk::BindingPointer" = type { %"class.rx::vk::RefCounted.801"* }
%"class.rx::vk::RefCounted.801" = type opaque
%"class.rx::vk::DynamicBuffer" = type { i32, i8, i32, i64, %"class.std::__1::unique_ptr.802", i32, i32, i64, i64, i32, %"class.std::__1::vector.810", %"class.std::__1::vector.810" }
%"class.std::__1::unique_ptr.802" = type { %"class.std::__1::__compressed_pair.803" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.rx::vk::BufferHelper"* }
%"class.rx::vk::BufferHelper" = type { %"class.rx::vk::Resource", %"class.rx::vk::Buffer", %"class.rx::vk::BufferMemory", i32, i64, i32, i32, i32, i32, i32, %"class.rx::vk::BufferSerial" }
%"class.rx::vk::Buffer" = type { %"class.rx::vk::WrappedObject.805" }
%"class.rx::vk::WrappedObject.805" = type { %struct.VkBuffer_T* }
%"class.rx::vk::BufferMemory" = type { [8 x i8], %"class.rx::vk::Allocation", %"class.rx::vk::DeviceMemory", i8*, i8* }
%"class.rx::vk::Allocation" = type { %"class.rx::vk::WrappedObject.806" }
%"class.rx::vk::WrappedObject.806" = type { %struct.VmaAllocation_T* }
%struct.VmaAllocation_T = type opaque
%"class.rx::vk::BufferSerial" = type { i32 }
%"class.std::__1::vector.810" = type { %"class.std::__1::__vector_base.811" }
%"class.std::__1::__vector_base.811" = type { %"class.std::__1::unique_ptr.802"*, %"class.std::__1::unique_ptr.802"*, %"class.std::__1::__compressed_pair.812" }
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.813" = type { %"class.std::__1::unique_ptr.802"* }
%"class.std::__1::vector.817" = type { %"class.std::__1::__vector_base.818" }
%"class.std::__1::__vector_base.818" = type { %"class.std::__1::vector.819"*, %"class.std::__1::vector.819"*, %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::vector.819" = type opaque
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"class.std::__1::vector.819"* }
%struct.Optional.825 = type { i8, %"struct.rx::vk::ImageHelper::ClearUpdate" }
%"struct.rx::vk::ImageHelper::ClearUpdate" = type { i32, %union.VkClearValue, i32, i32, i32 }
%"struct.std::__1::array.826" = type { [16 x %"class.angle::BitSetT.147"] }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.829" }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"class.rx::vk::CommandBufferHelper"** }
%"class.rx::vk::CommandProcessor" = type { %"class.rx::vk::Context", %"class.rx::vk::CommandQueueInterface", %"class.std::__1::queue", %"class.std::__1::mutex", %"class.std::__1::condition_variable", %"class.std::__1::condition_variable", i8, %"class.rx::vk::CommandPool", %"class.rx::vk::CommandQueue", %"class.std::__1::mutex", %"class.std::__1::mutex", %"class.std::__1::queue.865", %"class.std::__1::mutex", %"class.std::__1::condition_variable", %"class.std::__1::map.878", %"class.std::__1::thread" }
%"class.std::__1::queue" = type { %"class.std::__1::deque.833" }
%"class.std::__1::deque.833" = type { %"class.std::__1::__deque_base.834" }
%"class.std::__1::__deque_base.834" = type { %"struct.std::__1::__split_buffer.835", i64, %"class.std::__1::__compressed_pair.857" }
%"struct.std::__1::__split_buffer.835" = type { %"class.rx::vk::CommandProcessorTask"**, %"class.rx::vk::CommandProcessorTask"**, %"class.rx::vk::CommandProcessorTask"**, %"class.std::__1::__compressed_pair.852" }
%"class.rx::vk::CommandProcessorTask" = type <{ i32, [4 x i8], %"class.rx::vk::RenderPass"*, %"class.rx::vk::CommandBufferHelper"*, %"class.std::__1::vector.837", %"class.std::__1::vector", %"class.rx::vk::Semaphore"*, %"class.std::__1::vector.693", %"class.rx::Serial", %struct.VkPresentInfoKHR, %struct.VkSwapchainKHR_T*, %struct.VkSemaphore_T*, i32, [4 x i8], %struct.VkPresentRegionKHR, %struct.VkPresentRegionsKHR, %"class.std::__1::vector.845", %struct.VkCommandBuffer_T*, %"class.rx::vk::Fence"*, i8, [7 x i8] }>
%"class.rx::vk::RenderPass" = type { %"class.rx::vk::WrappedObject.836" }
%"class.rx::vk::WrappedObject.836" = type { %struct.VkRenderPass_T* }
%"class.std::__1::vector.837" = type { %"class.std::__1::__vector_base.838" }
%"class.std::__1::__vector_base.838" = type { %struct.VkSemaphore_T**, %struct.VkSemaphore_T**, %"class.std::__1::__compressed_pair.839" }
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %struct.VkSemaphore_T** }
%"class.rx::vk::Semaphore" = type { %"class.rx::vk::WrappedObject.844" }
%"class.rx::vk::WrappedObject.844" = type { %struct.VkSemaphore_T* }
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%struct.VkSwapchainKHR_T = type opaque
%struct.VkPresentRegionKHR = type { i32, %struct.VkRectLayerKHR* }
%struct.VkRectLayerKHR = type { %struct.VkOffset2D, %struct.VkExtent2D, i32 }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkPresentRegionsKHR = type { i32, i8*, i32, %struct.VkPresentRegionKHR* }
%"class.std::__1::vector.845" = type { %"class.std::__1::__vector_base.846" }
%"class.std::__1::__vector_base.846" = type { %struct.VkRectLayerKHR*, %struct.VkRectLayerKHR*, %"class.std::__1::__compressed_pair.847" }
%"class.std::__1::__compressed_pair.847" = type { %"struct.std::__1::__compressed_pair_elem.848" }
%"struct.std::__1::__compressed_pair_elem.848" = type { %struct.VkRectLayerKHR* }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"class.rx::vk::CommandProcessorTask"** }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::queue.865" = type { %"class.std::__1::deque.866" }
%"class.std::__1::deque.866" = type { %"class.std::__1::__deque_base.867" }
%"class.std::__1::__deque_base.867" = type { %"struct.std::__1::__split_buffer.868", i64, %"class.std::__1::__compressed_pair.874" }
%"struct.std::__1::__split_buffer.868" = type { %"struct.rx::vk::Error"**, %"struct.rx::vk::Error"**, %"struct.rx::vk::Error"**, %"class.std::__1::__compressed_pair.869" }
%"struct.rx::vk::Error" = type { i32, i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.870" }
%"struct.std::__1::__compressed_pair_elem.870" = type { %"struct.rx::vk::Error"** }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.861, %union.anon.863, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.861 = type { i64 }
%union.anon.863 = type { i64 }
%"class.std::__1::map.878" = type { %"class.std::__1::__tree.879" }
%"class.std::__1::__tree.879" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.880", %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::thread" = type { i64 }
%"class.rx::vk::Allocator" = type { %"class.rx::vk::WrappedObject.889" }
%"class.rx::vk::WrappedObject.889" = type { %struct.VmaAllocator_T* }
%struct.VmaAllocator_T = type opaque
%"class.rx::SamplerCache" = type { %"class.rx::HasCacheStats", %"class.std::__1::unordered_map.890" }
%"class.rx::HasCacheStats" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.rx::CacheStats" = type { i64, i64 }
%"class.std::__1::unordered_map.890" = type { %"class.std::__1::__hash_table.891" }
%"class.std::__1::__hash_table.891" = type <{ %"class.std::__1::unique_ptr.892", %"class.std::__1::__compressed_pair.902", %"class.std::__1::__compressed_pair.907", %"class.std::__1::__compressed_pair.911", [4 x i8] }>
%"class.std::__1::unique_ptr.892" = type { %"class.std::__1::__compressed_pair.893" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894", %"struct.std::__1::__compressed_pair_elem.896" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"struct.std::__1::__hash_node_base.895"** }
%"struct.std::__1::__hash_node_base.895" = type { %"struct.std::__1::__hash_node_base.895"* }
%"struct.std::__1::__compressed_pair_elem.896" = type { %"class.std::__1::__bucket_list_deallocator.897" }
%"class.std::__1::__bucket_list_deallocator.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { %"struct.std::__1::__hash_node_base.895" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.664" = type { float }
%"class.rx::SamplerYcbcrConversionCache" = type { %"class.rx::HasCacheStats.917", %"class.std::__1::unordered_map.918" }
%"class.rx::HasCacheStats.917" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.918" = type { %"class.std::__1::__hash_table.919" }
%"class.std::__1::__hash_table.919" = type <{ %"class.std::__1::unique_ptr.920", %"class.std::__1::__compressed_pair.930", %"class.std::__1::__compressed_pair.935", %"class.std::__1::__compressed_pair.939", [4 x i8] }>
%"class.std::__1::unique_ptr.920" = type { %"class.std::__1::__compressed_pair.921" }
%"class.std::__1::__compressed_pair.921" = type { %"struct.std::__1::__compressed_pair_elem.922", %"struct.std::__1::__compressed_pair_elem.924" }
%"struct.std::__1::__compressed_pair_elem.922" = type { %"struct.std::__1::__hash_node_base.923"** }
%"struct.std::__1::__hash_node_base.923" = type { %"struct.std::__1::__hash_node_base.923"* }
%"struct.std::__1::__compressed_pair_elem.924" = type { %"class.std::__1::__bucket_list_deallocator.925" }
%"class.std::__1::__bucket_list_deallocator.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.std::__1::__hash_node_base.923" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"class.rx::vk::ActiveHandleCounter" = type { %"class.angle::PackedEnumMap.945", %"class.angle::PackedEnumMap.945" }
%"class.angle::PackedEnumMap.945" = type { %"struct.std::__1::array.946" }
%"struct.std::__1::array.946" = type { [24 x i32] }
%"class.rx::vk::ResourceSerialFactory" = type { %"struct.std::__1::atomic.947" }
%"struct.std::__1::atomic.947" = type { %"struct.std::__1::__atomic_base.948" }
%"struct.std::__1::__atomic_base.948" = type { %"struct.std::__1::__atomic_base.949" }
%"struct.std::__1::__atomic_base.949" = type { %"struct.std::__1::__cxx_atomic_impl.950" }
%"struct.std::__1::__cxx_atomic_impl.950" = type { %"struct.std::__1::__cxx_atomic_base_impl.951" }
%"struct.std::__1::__cxx_atomic_base_impl.951" = type { i32 }
%"class.rx::vk::MemoryReport" = type { %"class.std::__1::mutex", i64, i64, %"class.absl::flat_hash_map.952", i64, i64, %"class.absl::flat_hash_map.967" }
%"class.absl::flat_hash_map.952" = type { %"class.absl::container_internal::raw_hash_map.953" }
%"class.absl::container_internal::raw_hash_map.953" = type { %"class.absl::container_internal::raw_hash_set.954" }
%"class.absl::container_internal::raw_hash_set.954" = type { i8*, %"union.absl::container_internal::map_slot_type.955"*, i64, i64, %"class.absl::container_internal::CompressedTuple.956" }
%"union.absl::container_internal::map_slot_type.955" = type opaque
%"class.absl::container_internal::CompressedTuple.956" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.957" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.957" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.absl::flat_hash_map.967" = type { %"class.absl::container_internal::raw_hash_map.968" }
%"class.absl::container_internal::raw_hash_map.968" = type { %"class.absl::container_internal::raw_hash_set.969" }
%"class.absl::container_internal::raw_hash_set.969" = type { i8*, %"union.absl::container_internal::map_slot_type.970"*, i64, i64, %"class.absl::container_internal::CompressedTuple.971" }
%"union.absl::container_internal::map_slot_type.970" = type opaque
%"class.absl::container_internal::CompressedTuple.971" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.972" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.972" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.angle::PackedEnumMap.980" = type { %"struct.std::__1::array.981" }
%"struct.std::__1::array.981" = type { [12 x %"class.rx::CacheStats"] }
%"class.std::__1::shared_ptr.982" = type { %"class.rx::WaitableCompressEvent"*, %"class.std::__1::__shared_weak_count"* }
%"class.rx::WaitableCompressEvent" = type { i32 (...)**, %"class.std::__1::shared_ptr.983" }
%"class.std::__1::shared_ptr.983" = type { %"class.angle::WaitableEvent"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WaitableEvent" = type { i32 (...)**, %"class.std::__1::shared_ptr.608" }
%"class.std::__1::shared_ptr.608" = type { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WorkerThreadPool" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.rx::vk::StagingBuffer" = type { [8 x i8], %"class.rx::vk::Buffer", %"class.rx::vk::Allocation", i64 }
%"class.rx::vk::ClearValuesArray" = type { %"struct.std::__1::array.782", %"class.angle::BitSetT.1314" }
%"class.angle::BitSetT.1314" = type { i64 }
%"class.egl::Error" = type { i32, i32, %"class.std::__1::unique_ptr.984" }
%"class.std::__1::unique_ptr.984" = type { %"class.std::__1::__compressed_pair.985" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.std::__1::basic_string"* }
%"class.rx::DisplayVk" = type { %"class.rx::DisplayImpl", %"class.rx::vk::Context", %"class.angle::ScratchBuffer", %"struct.rx::vk::Error" }
%"class.rx::DisplayImpl" = type { %"class.rx::EGLImplFactory", %"class.angle::Subject", %"struct.egl::DisplayState"*, i8, %"struct.egl::DisplayExtensions", i8, %"struct.egl::Caps", %"class.egl::BlobCache"* }
%"class.rx::EGLImplFactory" = type { i32 (...)** }
%"struct.egl::DisplayState" = type opaque
%"struct.egl::DisplayExtensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.egl::Caps" = type { i8, i8 }
%"class.egl::BlobCache" = type { %"class.std::__1::mutex", %"class.angle::SizedMRUCache", void (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)* }
%"class.angle::SizedMRUCache" = type { i64, i64, %"class.angle::base::HashingMRUCache" }
%"class.angle::base::HashingMRUCache" = type { %"class.angle::base::MRUCacheBase" }
%"class.angle::base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::unordered_map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.644" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.648", %"class.std::__1::__compressed_pair.656", %"class.std::__1::__compressed_pair.661", %"class.std::__1::__compressed_pair.663", [4 x i8] }>
%"class.std::__1::unique_ptr.648" = type { %"class.std::__1::__compressed_pair.649" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.650", %"struct.std::__1::__compressed_pair_elem.651" }
%"struct.std::__1::__compressed_pair_elem.650" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.651" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.657" }
%"struct.std::__1::__compressed_pair_elem.657" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"class.angle::ScratchBuffer" = type { i32, i32, %"class.angle::MemoryBuffer" }
%"class.angle::MemoryBuffer" = type { i64, i8* }
%"class.std::__1::vector.989" = type { %"class.std::__1::__vector_base.990" }
%"class.std::__1::__vector_base.990" = type { %struct.VkLayerProperties*, %struct.VkLayerProperties*, %"class.std::__1::__compressed_pair.991" }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.std::__1::__compressed_pair.991" = type { %"struct.std::__1::__compressed_pair_elem.992" }
%"struct.std::__1::__compressed_pair_elem.992" = type { %struct.VkLayerProperties* }
%"class.angle::FixedVector.996" = type { %"struct.std::__1::array.997", i64 }
%"struct.std::__1::array.997" = type { [20 x i8*] }
%"class.gl::LogMessage" = type { i8*, i8*, i32, i32, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.angle::Format" = type { i32, i32, i32, void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, void (i8*, i8*)*, void (i8*, i8*)*, %"class.rx::FastCopyFunctionMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32 }
%"class.rx::FastCopyFunctionMap" = type { i64, %"struct.rx::FastCopyFunctionMap::Entry"* }
%"struct.rx::FastCopyFunctionMap::Entry" = type { i32, void (i8*, i8*)* }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%"class.rx::ContextVk" = type { %"class.rx::ContextImpl", %"class.rx::vk::Context", %"class.rx::MultisampleTextureInitializer", %"struct.std::__1::array.998", %"struct.std::__1::array.999", %"class.rx::vk::priv::SecondaryCommandBuffer"*, %"class.rx::vk::PipelineHelper"*, %"class.rx::vk::ObjectAndSerial.1009"*, i8, %"class.rx::WindowSurfaceVk"*, i32, i32, %"class.std::__1::unique_ptr.1010", %"class.angle::BitSetT.1002", %"class.angle::PackedEnumMap.1016", %"class.angle::PackedEnumMap.1033", %"class.angle::PackedEnumMap.1050", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.rx::VertexArrayVk"*, %"class.rx::FramebufferVk"*, %"class.rx::ProgramVk"*, %"class.rx::ProgramPipelineVk"*, %"class.rx::ProgramExecutableVk"*, i8*, i64, i64, %"class.angle::PackedEnumMap.1061", i32, i32, %union.VkClearValue, %union.VkClearValue, i64, %"class.rx::IncompleteTextureSet", i8, i8, i8, i8, i8, %"class.angle::PackedEnumMap.1065", %"struct.std::__1::array.1079", %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc", %"struct.std::__1::array.1084", %"class.angle::BitSetT.166", %"struct.std::__1::array.1085", %"class.rx::vk::CommandPool", %"class.std::__1::vector.693", %"class.rx::RenderPassCache", %"class.rx::vk::CommandBufferHelper"*, %"class.rx::vk::CommandBufferHelper"*, %"class.angle::FastUnorderedSet", %"class.rx::vk::ShaderLibrary", %"class.rx::UtilsVk", i8, [7 x i8], %"class.rx::vk::DynamicQueryPool", %"class.std::__1::vector.1197", %"class.std::__1::vector.1205", i8, i8, i8, %"class.std::__1::vector.837", %"class.std::__1::vector", %"struct.rx::ContextVk::GpuClockSyncInfo", i64, %"struct.rx::vk::PerfCounters", %"struct.rx::ContextVkPerfCounters", %"struct.rx::ContextVkPerfCounters", %"class.angle::BitSetT.168", %"class.rx::vk::ResourceUseList", i8, %"class.std::__1::vector.1220", %"class.std::__1::vector.1227", %"class.std::__1::vector.1234", %"class.rx::ShareGroupVk"*, %"class.rx::vk::BufferHelper", %"class.rx::vk::DynamicBuffer", %"class.rx::vk::DynamicBuffer", %"class.std::__1::vector.125", %"class.std::__1::vector.125" }
%"class.rx::ContextImpl" = type { %"class.rx::GLImplFactory", %"class.gl::State"*, %"class.gl::MemoryProgramCache"*, %"class.gl::ErrorSet"* }
%"class.rx::GLImplFactory" = type { i32 (...)**, %"class.rx::SerialFactoryBase" }
%"class.rx::SerialFactoryBase" = type { i64 }
%"class.gl::State" = type <{ %"struct.gl::ContextID", i32, i32, %"struct.gl::Version", [4 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"class.egl::ShareGroup"*, %"class.gl::BufferManager"*, %"class.gl::ShaderProgramManager"*, %"class.gl::TextureManager"*, %"class.gl::RenderbufferManager"*, %"class.gl::SamplerManager"*, %"class.gl::SyncManager"*, %"class.gl::FramebufferManager"*, %"class.gl::ProgramPipelineManager"*, %"class.gl::MemoryObjectManager"*, %"class.gl::SemaphoreManager"*, i32, i32, %"struct.angle::Color", float, i32, %"struct.gl::RasterizerState", i8, [3 x i8], %"struct.gl::Rectangle", %"struct.gl::BlendState", [4 x i8], %"class.gl::BlendStateExt", %"struct.angle::Color", i8, i8, [2 x i8], float, i8, i8, [2 x i8], i32, %"struct.std::__1::array.373", i8, [3 x i8], float, %"struct.gl::DepthStencilState", i32, i32, float, i32, i32, i32, i8, i8, [2 x i8], %"struct.gl::Rectangle", float, float, i32, i32, %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"*, %"class.gl::BindingPointer.374", %"class.gl::Program"*, %"class.gl::BindingPointer.376", %"class.gl::ProgramExecutable"*, i8, [7 x i8], %"class.std::__1::vector.378", %"class.gl::VertexArray"*, %"class.angle::BitSetT.148", i64, %"class.angle::PackedEnumMap.406", %"class.gl::ActiveTexturesCache", %"class.std::__1::vector.337", %"class.angle::BitSetArray", %"class.std::__1::vector.418", %"class.std::__1::vector.427", %"class.angle::PackedEnumMap.434", %"class.angle::PackedEnumMap.438", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.angle::BitSetArray.447", %"class.angle::BitSetT.448", %"class.angle::BitSetT.168", %"class.gl::BindingPointer.449", %"struct.gl::PixelUnpackState", %"struct.gl::PixelPackState", i8, [3 x i8], %"class.gl::Debug", i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, %"class.angle::BitSetT.476", i32, %"class.gl::GLES1State", %"class.angle::BitSetT.168", %"class.angle::BitSetT.535", [4 x i8], %"class.angle::BitSetT.536", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.gl::MockOverlay"*, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i8, [5 x i8] }>
%"struct.gl::ContextID" = type { i32 }
%"struct.gl::Version" = type { i32, i32 }
%"class.egl::ShareGroup" = type opaque
%"class.gl::BufferManager" = type { %"class.gl::TypedResourceManager" }
%"class.gl::TypedResourceManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap" }
%"class.gl::ResourceManagerBase" = type { i32 (...)**, %"class.gl::HandleAllocator", i64 }
%"class.gl::HandleAllocator" = type <{ i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.45", %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"*, %"class.std::__1::__compressed_pair.47" }
%"struct.gl::HandleAllocator::HandleRange" = type { i32, i32 }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.gl::HandleAllocator::HandleRange"* }
%"class.gl::ResourceMap" = type { i64, %"class.gl::Buffer"**, %"class.absl::flat_hash_map" }
%"class.gl::Buffer" = type { %"class.gl::RefCountObject.base.53", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.angle::Subject", %"class.gl::BufferState", %"class.rx::BufferImpl"*, %"class.angle::ObserverBinding", %"class.gl::IndexRangeCache" }
%"class.gl::RefCountObject.base.53" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::BufferID" }>
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"struct.gl::BufferID" = type { i32 }
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.gl::BufferState" = type <{ %"class.std::__1::basic_string", i8, [7 x i8], i64, i32, i32, i8, [7 x i8], i8*, i64, i64, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.rx::BufferImpl" = type { %"class.angle::Subject", %"class.gl::BufferState"* }
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.gl::IndexRangeCache" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.54" }
%"class.std::__1::__tree.54" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type { %"struct.std::__1::pair.1318" }
%"struct.std::__1::pair.1318" = type { i32, %"class.gl::Buffer"* }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ShaderProgramManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.122" }
%"class.gl::ResourceMap.69" = type { i64, %"class.gl::Shader"**, %"class.absl::flat_hash_map.113" }
%"class.gl::Shader" = type { %"class.gl::LabeledObject", %"class.gl::ShaderState", %"class.std::__1::unique_ptr.85", %"struct.gl::Limitations", %"struct.gl::ShaderProgramID", i8, i32, i8, %"class.std::__1::basic_string", %"class.gl::BindingPointer", %"class.std::__1::unique_ptr.107", %"class.std::__1::basic_string", %"class.gl::ShaderProgramManager"*, i32, i32 }
%"class.gl::ShaderState" = type <{ %"class.std::__1::basic_string", i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", [4 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.77", %"class.std::__1::vector.77", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", i8, [3 x i8], %"class.angle::BitSetT", i32, %struct.Optional, %struct.Optional, %struct.Optional.84, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.79" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.70" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.sh::InterfaceBlock"* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.72" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", i8, i8, %"class.std::__1::vector.70", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.sh::ShaderVariable"* }
%"class.angle::BitSetT" = type { i32 }
%struct.Optional = type { i8, i8 }
%struct.Optional.84 = type { i8, i32 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.rx::ShaderImpl"* }
%"class.rx::ShaderImpl" = type opaque
%"struct.gl::ShaderProgramID" = type { i32 }
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer.91" }
%"class.angle::BindingPointer.91" = type { i32 (...)**, %"class.gl::Compiler"* }
%"class.gl::Compiler" = type { %"class.angle::RefCountObject", %"class.std::__1::unique_ptr.92", i32, i32, %struct.ShBuiltInResources, %"class.angle::PackedEnumMap.98" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.rx::CompilerImpl"* }
%"class.rx::CompilerImpl" = type opaque
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.98" = type { %"struct.std::__1::array.99" }
%"struct.std::__1::array.99" = type { [6 x %"class.std::__1::vector.100"] }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.gl::ShCompilerInstance"*, %"class.gl::ShCompilerInstance"*, %"class.std::__1::__compressed_pair.102" }
%"class.gl::ShCompilerInstance" = type <{ i8*, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.gl::ShCompilerInstance"* }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.gl::Shader::CompilingState"* }
%"struct.gl::Shader::CompilingState" = type opaque
%"class.absl::flat_hash_map.113" = type { %"class.absl::container_internal::raw_hash_map.114" }
%"class.absl::container_internal::raw_hash_map.114" = type { %"class.absl::container_internal::raw_hash_set.115" }
%"class.absl::container_internal::raw_hash_set.115" = type { i8*, %"union.absl::container_internal::map_slot_type.116"*, i64, i64, %"class.absl::container_internal::CompressedTuple.117" }
%"union.absl::container_internal::map_slot_type.116" = type opaque
%"class.absl::container_internal::CompressedTuple.117" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.122" = type { i64, %"class.gl::Program"**, %"class.absl::flat_hash_map.241" }
%"class.absl::flat_hash_map.241" = type { %"class.absl::container_internal::raw_hash_map.242" }
%"class.absl::container_internal::raw_hash_map.242" = type { %"class.absl::container_internal::raw_hash_set.243" }
%"class.absl::container_internal::raw_hash_set.243" = type { i8*, %"union.absl::container_internal::map_slot_type.244"*, i64, i64, %"class.absl::container_internal::CompressedTuple.245" }
%"union.absl::container_internal::map_slot_type.244" = type { %"struct.std::__1::pair.1320" }
%"struct.std::__1::pair.1320" = type { i32, %"class.gl::Program"* }
%"class.absl::container_internal::CompressedTuple.245" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::TextureManager" = type { %"class.gl::TypedResourceManager.250" }
%"class.gl::TypedResourceManager.250" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.251" }
%"class.gl::ResourceMap.251" = type { i64, %"class.gl::Texture"**, %"class.absl::flat_hash_map.270" }
%"class.gl::Texture" = type <{ %"class.gl::RefCountObject.base.253", [4 x i8], %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::TextureState", %"class.angle::BitSetT.266", %"class.rx::TextureImpl"*, %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::basic_string", %"class.egl::Surface"*, %"class.egl::Stream"*, %"class.angle::FastVector.268", %"struct.gl::Texture::SamplerCompletenessCache", [4 x i8] }>
%"class.gl::RefCountObject.base.253" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TextureID" }>
%"struct.gl::TextureID" = type { i32 }
%"class.egl::ImageSibling" = type { %"class.gl::FramebufferAttachmentObject", %"class.std::__1::set", %"class.angle::BindingPointer" }
%"class.gl::FramebufferAttachmentObject" = type { %"class.angle::Subject", %"class.angle::ObserverInterface" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.egl::Image"* }
%"class.egl::Image" = type <{ %"class.angle::RefCountObject.4", %"class.egl::LabeledObject", %"struct.egl::ImageState", %"class.rx::ImageImpl"*, i8, [7 x i8] }>
%"class.angle::RefCountObject.4" = type { i32 (...)**, i64 }
%"class.egl::LabeledObject" = type { i32 (...)** }
%"struct.egl::ImageState" = type { i8*, i32, %"class.gl::ImageIndex", %"class.egl::ImageSibling"*, %"class.std::__1::set.5", %"struct.gl::Format", i8, %"struct.gl::Extents", i64, i32, i32 }
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.std::__1::set.5" = type { %"class.std::__1::__tree.6" }
%"class.std::__1::__tree.6" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Format" = type { %"struct.gl::InternalFormat"* }
%"struct.gl::InternalFormat" = type { i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)* }
%"struct.gl::Extents" = type { i32, i32, i32 }
%"class.rx::ImageImpl" = type opaque
%"class.gl::TextureState" = type <{ i8, [3 x i8], %"struct.gl::SwizzleState", %"class.gl::SamplerState", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.std::__1::vector.257", %"struct.gl::Rectangle", i32, [4 x i8], %"class.gl::OffsetBindingPointer", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.gl::SwizzleState" = type { i32, i32, i32, i32 }
%"class.gl::SamplerState" = type { i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, %"struct.angle::ColorGeneric", %"union.gl::SamplerState::Completeness" }
%"struct.angle::ColorGeneric" = type <{ %union.anon.254, i8, [3 x i8] }>
%union.anon.254 = type { %"struct.angle::Color" }
%"union.gl::SamplerState::Completeness" = type { i32 }
%"class.std::__1::vector.257" = type { %"class.std::__1::__vector_base.258" }
%"class.std::__1::__vector_base.258" = type { %"struct.gl::ImageDesc"*, %"struct.gl::ImageDesc"*, %"class.std::__1::__compressed_pair.259" }
%"struct.gl::ImageDesc" = type <{ %"struct.gl::Extents", [4 x i8], %"struct.gl::Format", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.gl::ImageDesc"* }
%"class.gl::OffsetBindingPointer" = type { %"class.gl::BindingPointer.264", i64, i64 }
%"class.gl::BindingPointer.264" = type { %"class.angle::BindingPointer.265" }
%"class.angle::BindingPointer.265" = type { i32 (...)**, %"class.gl::Buffer"* }
%"class.angle::BitSetT.266" = type { i64 }
%"class.rx::TextureImpl" = type opaque
%"class.egl::Surface" = type opaque
%"class.egl::Stream" = type { %"class.egl::LabeledObject", i8*, %"class.egl::Display"*, %"class.rx::StreamProducerImpl"*, %"class.gl::Context"*, i32, i64, i64, i32, i32, i32, %"struct.std::__1::array.267", i32, i32 }
%"class.rx::StreamProducerImpl" = type opaque
%"class.gl::Context" = type <{ %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::State", i8, i8, i8, i8, [4 x i8], %"class.gl::ErrorSet", %"class.angle::BitSetT.537", [4 x i8], %"class.std::__1::unique_ptr.538", i8*, %"struct.gl::Extensions", [4 x i8], %"class.gl::BindingPointer", %"struct.egl::Config"*, %"class.angle::PackedEnumMap.544", %"class.gl::ResourceMap.546", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.556", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.566", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.576", %"class.gl::HandleAllocator", i8*, i8*, i8*, i8*, %"class.std::__1::vector.586", i8*, %"class.std::__1::vector.586", %"class.std::__1::unique_ptr.593", i8, i8, i8, i8, i32, i8, i8, i8, [5 x i8], %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.egl::Display"*, i8, i8, i8, [5 x i8], %"class.gl::MemoryProgramCache"*, %"class.angle::BitSetT.536", %"class.gl::StateCache", %"class.angle::BitSetT.168", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %struct.Optional.607, %struct.Optional.607, %"class.std::__1::shared_ptr.608", %"class.std::__1::unique_ptr.609", %"class.std::__1::basic_string", i64, %"class.gl::MockOverlay", i8, i8, i8, [4 x i8] }>
%"class.gl::ErrorSet" = type { %"class.gl::Context"*, %"class.std::__1::set.35" }
%"class.angle::BitSetT.537" = type { i32 }
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.rx::ContextImpl"* }
%"struct.egl::Config" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.544" = type { %"struct.std::__1::array.545" }
%"struct.std::__1::array.545" = type { [11 x %"class.gl::BindingPointer.410"] }
%"class.gl::BindingPointer.410" = type { %"class.angle::BindingPointer.411" }
%"class.angle::BindingPointer.411" = type { i32 (...)**, %"class.gl::Texture"* }
%"class.gl::ResourceMap.546" = type { i64, %"class.gl::FenceNV"**, %"class.absl::flat_hash_map.547" }
%"class.gl::FenceNV" = type opaque
%"class.absl::flat_hash_map.547" = type { %"class.absl::container_internal::raw_hash_map.548" }
%"class.absl::container_internal::raw_hash_map.548" = type { %"class.absl::container_internal::raw_hash_set.549" }
%"class.absl::container_internal::raw_hash_set.549" = type { i8*, %"union.absl::container_internal::map_slot_type.550"*, i64, i64, %"class.absl::container_internal::CompressedTuple.551" }
%"union.absl::container_internal::map_slot_type.550" = type opaque
%"class.absl::container_internal::CompressedTuple.551" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.556" = type { i64, %"class.gl::Query"**, %"class.absl::flat_hash_map.557" }
%"class.gl::Query" = type opaque
%"class.absl::flat_hash_map.557" = type { %"class.absl::container_internal::raw_hash_map.558" }
%"class.absl::container_internal::raw_hash_map.558" = type { %"class.absl::container_internal::raw_hash_set.559" }
%"class.absl::container_internal::raw_hash_set.559" = type { i8*, %"union.absl::container_internal::map_slot_type.560"*, i64, i64, %"class.absl::container_internal::CompressedTuple.561" }
%"union.absl::container_internal::map_slot_type.560" = type opaque
%"class.absl::container_internal::CompressedTuple.561" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.566" = type { i64, %"class.gl::VertexArray"**, %"class.absl::flat_hash_map.567" }
%"class.absl::flat_hash_map.567" = type { %"class.absl::container_internal::raw_hash_map.568" }
%"class.absl::container_internal::raw_hash_map.568" = type { %"class.absl::container_internal::raw_hash_set.569" }
%"class.absl::container_internal::raw_hash_set.569" = type { i8*, %"union.absl::container_internal::map_slot_type.570"*, i64, i64, %"class.absl::container_internal::CompressedTuple.571" }
%"union.absl::container_internal::map_slot_type.570" = type opaque
%"class.absl::container_internal::CompressedTuple.571" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.576" = type { i64, %"class.gl::TransformFeedback"**, %"class.absl::flat_hash_map.577" }
%"class.gl::TransformFeedback" = type { %"class.gl::RefCountObject.base.452", %"class.gl::LabeledObject", %"class.gl::TransformFeedbackState", %"class.rx::TransformFeedbackImpl"* }
%"class.gl::RefCountObject.base.452" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TransformFeedbackID" }>
%"struct.gl::TransformFeedbackID" = type { i32 }
%"class.gl::TransformFeedbackState" = type { %"class.std::__1::basic_string", i8, i8, i8, i64, i64, %"class.gl::Program"*, %"class.std::__1::vector.440" }
%"class.rx::TransformFeedbackImpl" = type opaque
%"class.absl::flat_hash_map.577" = type { %"class.absl::container_internal::raw_hash_map.578" }
%"class.absl::container_internal::raw_hash_map.578" = type { %"class.absl::container_internal::raw_hash_set.579" }
%"class.absl::container_internal::raw_hash_set.579" = type { i8*, %"union.absl::container_internal::map_slot_type.580"*, i64, i64, %"class.absl::container_internal::CompressedTuple.581" }
%"union.absl::container_internal::map_slot_type.580" = type opaque
%"class.absl::container_internal::CompressedTuple.581" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::vector.586" = type { %"class.std::__1::__vector_base.587" }
%"class.std::__1::__vector_base.587" = type { i8**, i8**, %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { i8** }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.gl::GLES1Renderer"* }
%"class.gl::GLES1Renderer" = type opaque
%"class.gl::StateCache" = type <{ %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", i8, [7 x i8], i64, i64, i64, i64, i8, [7 x i8], %"class.angle::BitSetT.168", %"class.angle::BitSetArray", %"class.angle::PackedEnumMap.599", %"class.angle::PackedEnumMap.601", %"class.angle::PackedEnumMap.603", %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605", i8, [7 x i8] }>
%"class.angle::PackedEnumMap.599" = type { %"struct.std::__1::array.600" }
%"struct.std::__1::array.600" = type { [16 x i8] }
%"class.angle::PackedEnumMap.601" = type { %"struct.std::__1::array.602" }
%"struct.std::__1::array.602" = type { [12 x i8] }
%"class.angle::PackedEnumMap.603" = type { %"struct.std::__1::array.604" }
%"struct.std::__1::array.604" = type { [4 x i8] }
%"class.angle::PackedEnumMap.605" = type { %"struct.std::__1::array.606" }
%"struct.std::__1::array.606" = type { [19 x i32] }
%struct.Optional.607 = type { i8, %"class.angle::ScratchBuffer" }
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.angle::FrameCapture"* }
%"class.angle::FrameCapture" = type opaque
%"class.gl::MockOverlay" = type { %"class.gl::overlay::Mock" }
%"class.gl::overlay::Mock" = type { i8 }
%"struct.std::__1::array.267" = type { [3 x %"struct.egl::Stream::PlaneTexture"] }
%"struct.egl::Stream::PlaneTexture" = type { i32, %"class.gl::Texture"* }
%"class.angle::FastVector.268" = type { %"struct.std::__1::array.269", %"class.rx::Serial"*, i64, i64 }
%"struct.std::__1::array.269" = type { [8 x %"class.rx::Serial"] }
%"struct.gl::Texture::SamplerCompletenessCache" = type <{ %"struct.gl::ContextID", %"class.gl::SamplerState", i8, [3 x i8] }>
%"class.absl::flat_hash_map.270" = type { %"class.absl::container_internal::raw_hash_map.271" }
%"class.absl::container_internal::raw_hash_map.271" = type { %"class.absl::container_internal::raw_hash_set.272" }
%"class.absl::container_internal::raw_hash_set.272" = type { i8*, %"union.absl::container_internal::map_slot_type.273"*, i64, i64, %"class.absl::container_internal::CompressedTuple.274" }
%"union.absl::container_internal::map_slot_type.273" = type { %"struct.std::__1::pair.1322" }
%"struct.std::__1::pair.1322" = type { i32, %"class.gl::Texture"* }
%"class.absl::container_internal::CompressedTuple.274" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::RenderbufferManager" = type { %"class.gl::TypedResourceManager.279" }
%"class.gl::TypedResourceManager.279" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.280" }
%"class.gl::ResourceMap.280" = type { i64, %"class.gl::Renderbuffer"**, %"class.absl::flat_hash_map.281" }
%"class.gl::Renderbuffer" = type { %"class.gl::RefCountObject.base", %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::RenderbufferState", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::RenderbufferID" }>
%"struct.gl::RenderbufferID" = type { i32 }
%"class.gl::RenderbufferState" = type <{ i32, i32, %"struct.gl::Format", i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.rx::RenderbufferImpl"* }
%"class.rx::RenderbufferImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::RenderbufferState"* }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"class.absl::flat_hash_map.281" = type { %"class.absl::container_internal::raw_hash_map.282" }
%"class.absl::container_internal::raw_hash_map.282" = type { %"class.absl::container_internal::raw_hash_set.283" }
%"class.absl::container_internal::raw_hash_set.283" = type { i8*, %"union.absl::container_internal::map_slot_type.284"*, i64, i64, %"class.absl::container_internal::CompressedTuple.285" }
%"union.absl::container_internal::map_slot_type.284" = type { %"struct.std::__1::pair.1324" }
%"struct.std::__1::pair.1324" = type { i32, %"class.gl::Renderbuffer"* }
%"class.absl::container_internal::CompressedTuple.285" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SamplerManager" = type { %"class.gl::TypedResourceManager.290" }
%"class.gl::TypedResourceManager.290" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.291" }
%"class.gl::ResourceMap.291" = type { i64, %"class.gl::Sampler"**, %"class.absl::flat_hash_map.294" }
%"class.gl::Sampler" = type { %"class.gl::RefCountObject.base.293", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::SamplerState", i8, %"class.rx::SamplerImpl"*, %"class.std::__1::basic_string" }
%"class.gl::RefCountObject.base.293" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::SamplerID" }>
%"struct.gl::SamplerID" = type { i32 }
%"class.rx::SamplerImpl" = type opaque
%"class.absl::flat_hash_map.294" = type { %"class.absl::container_internal::raw_hash_map.295" }
%"class.absl::container_internal::raw_hash_map.295" = type { %"class.absl::container_internal::raw_hash_set.296" }
%"class.absl::container_internal::raw_hash_set.296" = type { i8*, %"union.absl::container_internal::map_slot_type.297"*, i64, i64, %"class.absl::container_internal::CompressedTuple.298" }
%"union.absl::container_internal::map_slot_type.297" = type { %"struct.std::__1::pair.1326" }
%"struct.std::__1::pair.1326" = type { i32, %"class.gl::Sampler"* }
%"class.absl::container_internal::CompressedTuple.298" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SyncManager" = type { %"class.gl::TypedResourceManager.303" }
%"class.gl::TypedResourceManager.303" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.304" }
%"class.gl::ResourceMap.304" = type { i64, %"class.gl::Sync"**, %"class.absl::flat_hash_map.305" }
%"class.gl::Sync" = type opaque
%"class.absl::flat_hash_map.305" = type { %"class.absl::container_internal::raw_hash_map.306" }
%"class.absl::container_internal::raw_hash_map.306" = type { %"class.absl::container_internal::raw_hash_set.307" }
%"class.absl::container_internal::raw_hash_set.307" = type { i8*, %"union.absl::container_internal::map_slot_type.308"*, i64, i64, %"class.absl::container_internal::CompressedTuple.309" }
%"union.absl::container_internal::map_slot_type.308" = type opaque
%"class.absl::container_internal::CompressedTuple.309" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::FramebufferManager" = type { %"class.gl::TypedResourceManager.314" }
%"class.gl::TypedResourceManager.314" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.315" }
%"class.gl::ResourceMap.315" = type { i64, %"class.gl::Framebuffer"**, %"class.absl::flat_hash_map.316" }
%"class.absl::flat_hash_map.316" = type { %"class.absl::container_internal::raw_hash_map.317" }
%"class.absl::container_internal::raw_hash_map.317" = type { %"class.absl::container_internal::raw_hash_set.318" }
%"class.absl::container_internal::raw_hash_set.318" = type { i8*, %"union.absl::container_internal::map_slot_type.319"*, i64, i64, %"class.absl::container_internal::CompressedTuple.320" }
%"union.absl::container_internal::map_slot_type.319" = type { %"struct.std::__1::pair.1328" }
%"struct.std::__1::pair.1328" = type { i32, %"class.gl::Framebuffer"* }
%"class.absl::container_internal::CompressedTuple.320" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramPipelineManager" = type { %"class.gl::TypedResourceManager.325" }
%"class.gl::TypedResourceManager.325" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.326" }
%"class.gl::ResourceMap.326" = type { i64, %"class.gl::ProgramPipeline"**, %"class.absl::flat_hash_map.344" }
%"class.gl::ProgramPipeline" = type { %"class.gl::RefCountObject.base.328", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::HasAttachedShaders", %"class.std::__1::unique_ptr.329", %"class.gl::ProgramPipelineState", %"class.std::__1::vector.337", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base.328" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::ProgramPipelineID" }>
%"struct.gl::ProgramPipelineID" = type { i32 }
%"class.gl::HasAttachedShaders" = type { i32 (...)** }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.rx::ProgramPipelineImpl"* }
%"class.rx::ProgramPipelineImpl" = type opaque
%"class.gl::ProgramPipelineState" = type <{ %"class.std::__1::basic_string", %"class.gl::Program"*, %"class.angle::PackedEnumMap.335", i8, [7 x i8], %"class.gl::ProgramExecutable"*, i8, [7 x i8] }>
%"class.angle::PackedEnumMap.335" = type { %"struct.std::__1::array.336" }
%"struct.std::__1::array.336" = type { [6 x %"class.gl::Program"*] }
%"class.absl::flat_hash_map.344" = type { %"class.absl::container_internal::raw_hash_map.345" }
%"class.absl::container_internal::raw_hash_map.345" = type { %"class.absl::container_internal::raw_hash_set.346" }
%"class.absl::container_internal::raw_hash_set.346" = type { i8*, %"union.absl::container_internal::map_slot_type.347"*, i64, i64, %"class.absl::container_internal::CompressedTuple.348" }
%"union.absl::container_internal::map_slot_type.347" = type { %"struct.std::__1::pair.1330" }
%"struct.std::__1::pair.1330" = type { i32, %"class.gl::ProgramPipeline"* }
%"class.absl::container_internal::CompressedTuple.348" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::MemoryObjectManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.353" }
%"class.gl::ResourceMap.353" = type { i64, %"class.gl::MemoryObject"**, %"class.absl::flat_hash_map.354" }
%"class.gl::MemoryObject" = type opaque
%"class.absl::flat_hash_map.354" = type { %"class.absl::container_internal::raw_hash_map.355" }
%"class.absl::container_internal::raw_hash_map.355" = type { %"class.absl::container_internal::raw_hash_set.356" }
%"class.absl::container_internal::raw_hash_set.356" = type { i8*, %"union.absl::container_internal::map_slot_type.357"*, i64, i64, %"class.absl::container_internal::CompressedTuple.358" }
%"union.absl::container_internal::map_slot_type.357" = type opaque
%"class.absl::container_internal::CompressedTuple.358" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SemaphoreManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.363" }
%"class.gl::ResourceMap.363" = type { i64, %"class.gl::Semaphore"**, %"class.absl::flat_hash_map.364" }
%"class.gl::Semaphore" = type opaque
%"class.absl::flat_hash_map.364" = type { %"class.absl::container_internal::raw_hash_map.365" }
%"class.absl::container_internal::raw_hash_map.365" = type { %"class.absl::container_internal::raw_hash_set.366" }
%"class.absl::container_internal::raw_hash_set.366" = type { i8*, %"union.absl::container_internal::map_slot_type.367"*, i64, i64, %"class.absl::container_internal::CompressedTuple.368" }
%"union.absl::container_internal::map_slot_type.367" = type opaque
%"class.absl::container_internal::CompressedTuple.368" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.gl::RasterizerState" = type { i8, i8, i32, i8, float, float, i8, i8, i8, i8 }
%"struct.gl::BlendState" = type { i8, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%"class.gl::BlendStateExt" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i64 }
%"struct.std::__1::array.373" = type { [2 x i32] }
%"struct.gl::DepthStencilState" = type { i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.gl::Framebuffer" = type { %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::FramebufferState", %"class.rx::FramebufferImpl"*, %struct.Optional.622, %"class.std::__1::vector.337", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::BitSetT.623", %"class.angle::BitSetT.147", %struct.Optional.624 }
%"class.gl::FramebufferState" = type { %"struct.gl::FramebufferID", %"class.rx::Serial", %"class.std::__1::basic_string", %"class.std::__1::vector.615", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.angle::BitSetT.147", %"class.std::__1::vector", i32, %"class.angle::BitSetT.147", %"class.angle::BitSetT.148", i32, i32, i32, i8, i32, %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", i8, %"class.angle::BitSetT.536", i8, %"class.gl::FramebufferAttachment", i32, %"struct.gl::Offset" }
%"struct.gl::FramebufferID" = type { i32 }
%"class.std::__1::vector.615" = type { %"class.std::__1::__vector_base.616" }
%"class.std::__1::__vector_base.616" = type { %"class.gl::FramebufferAttachment"*, %"class.gl::FramebufferAttachment"*, %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"class.gl::FramebufferAttachment"* }
%"class.gl::FramebufferAttachment" = type { i32, %"class.gl::FramebufferAttachment::Target", %"class.gl::FramebufferAttachmentObject"*, i32, i8, i32, i32 }
%"class.gl::FramebufferAttachment::Target" = type { i32, %"class.gl::ImageIndex" }
%"struct.gl::Offset" = type { i32, i32, i32 }
%"class.rx::FramebufferImpl" = type opaque
%struct.Optional.622 = type { i8, %"struct.gl::FramebufferStatus" }
%"struct.gl::FramebufferStatus" = type { i32, i8* }
%"class.angle::BitSetT.623" = type { i64 }
%struct.Optional.624 = type { i8, %"class.angle::BitSetT.623" }
%"class.gl::BindingPointer.374" = type { %"class.angle::BindingPointer.375" }
%"class.angle::BindingPointer.375" = type { i32 (...)**, %"class.gl::Renderbuffer"* }
%"class.gl::Program" = type { %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::HasAttachedShaders", %"class.rx::Serial", %"class.gl::ProgramState", %"class.rx::ProgramImpl"*, i8, %"class.gl::ProgramBindings", %"class.gl::ProgramAliasedBindings", %"class.gl::ProgramAliasedBindings", i8, %"class.std::__1::unique_ptr.235", i8, i32, %"class.gl::ShaderProgramManager"*, %"struct.gl::ShaderProgramID", %"class.angle::BitSetT.201" }
%"class.gl::ProgramState" = type { %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", %"class.angle::PackedEnumMap.123", i32, %"class.std::__1::vector.125", %"class.std::__1::vector.132", %"class.std::__1::vector.139", %"class.gl::Range", %"class.angle::BitSetT.147", %"class.std::__1::vector", %"class.angle::BitSetT.148", i8, i8, i8, i8, %"class.angle::BitSetT", i32, i32, i32, i32, i32, i32, %"class.gl::ProgramAliasedBindings", %"class.std::__1::shared_ptr" }
%"class.angle::PackedEnumMap.123" = type { %"struct.std::__1::array.124" }
%"struct.std::__1::array.124" = type { [6 x %"class.gl::Shader"*] }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"*, %"class.std::__1::__compressed_pair.134" }
%"struct.gl::VariableLocation" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.gl::VariableLocation"* }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"struct.gl::BufferVariable"*, %"struct.gl::BufferVariable"*, %"class.std::__1::__compressed_pair.142" }
%"struct.gl::BufferVariable" = type <{ %"struct.gl::ActiveVariable.base", [7 x i8], %"struct.sh::ShaderVariable", i32, %"struct.sh::BlockMemberInfo", i32, [4 x i8] }>
%"struct.gl::ActiveVariable.base" = type <{ i32 (...)**, %"class.angle::BitSetT.141" }>
%"class.angle::BitSetT.141" = type { i8 }
%"struct.sh::BlockMemberInfo" = type { i32, i32, i32, i8, i32 }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.gl::BufferVariable"* }
%"class.gl::Range" = type { i32, i32 }
%"class.std::__1::shared_ptr" = type { %"class.gl::ProgramExecutable"*, %"class.std::__1::__shared_weak_count"* }
%"class.rx::ProgramImpl" = type opaque
%"class.gl::ProgramBindings" = type { %"class.absl::flat_hash_map.226" }
%"class.absl::flat_hash_map.226" = type { %"class.absl::container_internal::raw_hash_map.227" }
%"class.absl::container_internal::raw_hash_map.227" = type { %"class.absl::container_internal::raw_hash_set.228" }
%"class.absl::container_internal::raw_hash_set.228" = type { i8*, %"union.absl::container_internal::map_slot_type.229"*, i64, i64, %"class.absl::container_internal::CompressedTuple.230" }
%"union.absl::container_internal::map_slot_type.229" = type opaque
%"class.absl::container_internal::CompressedTuple.230" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramAliasedBindings" = type { %"class.absl::flat_hash_map.149" }
%"class.absl::flat_hash_map.149" = type { %"class.absl::container_internal::raw_hash_map.150" }
%"class.absl::container_internal::raw_hash_map.150" = type { %"class.absl::container_internal::raw_hash_set.151" }
%"class.absl::container_internal::raw_hash_set.151" = type { i8*, %"union.absl::container_internal::map_slot_type.152"*, i64, i64, %"class.absl::container_internal::CompressedTuple.153" }
%"union.absl::container_internal::map_slot_type.152" = type opaque
%"class.absl::container_internal::CompressedTuple.153" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.gl::Program::LinkingState"* }
%"struct.gl::Program::LinkingState" = type opaque
%"class.angle::BitSetT.201" = type { i64 }
%"class.gl::BindingPointer.376" = type { %"class.angle::BindingPointer.377" }
%"class.angle::BindingPointer.377" = type { i32 (...)**, %"class.gl::ProgramPipeline"* }
%"class.gl::ProgramExecutable" = type <{ %"class.angle::Subject", %"class.gl::InfoLog", %"class.angle::BitSetT.141", %"class.angle::BitSetT.141", [6 x i8], %"class.angle::BitSetT.166", i32, [4 x i8], %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"struct.std::__1::array.169", %"struct.std::__1::array.170", %"class.angle::BitSetArray", %"struct.std::__1::array.171", %"struct.std::__1::array.172", %"class.angle::BitSetArray", %"struct.std::__1::array.172", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.132", %"class.std::__1::vector.132", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.173", %"class.std::__1::vector.180", i32, [4 x i8], %"class.std::__1::vector.187", %"class.gl::Range", %"class.gl::Range", %"class.std::__1::vector.194", %"class.angle::BitSetT.201", %"class.std::__1::vector.202", %"class.gl::Range", %"class.std::__1::vector.194", %"class.std::__1::vector.194", %"class.gl::Range", %"class.std::__1::vector.209", %"class.std::__1::vector.216", %"class.std::__1::vector.216", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap", i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, %struct.Optional.225, [6 x i8] }>
%"class.gl::InfoLog" = type { %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"struct.std::__1::array.169" = type { [96 x i32] }
%"struct.std::__1::array.170" = type { [96 x i8] }
%"struct.std::__1::array.171" = type { [96 x i8] }
%"struct.std::__1::array.172" = type { [96 x %"class.angle::BitSetT.141"] }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"*, %"class.std::__1::__compressed_pair.175" }
%"struct.gl::TransformFeedbackVarying" = type <{ %"struct.sh::ShaderVariable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.gl::TransformFeedbackVarying"* }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { i32*, i32*, %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { i32* }
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"*, %"class.std::__1::__compressed_pair.189" }
%"struct.gl::LinkedUniform" = type { %"struct.gl::ActiveVariable.base", %"struct.sh::ShaderVariable", %"struct.gl::UniformTypeInfo"*, i32, %"struct.sh::BlockMemberInfo", %"class.std::__1::vector" }
%"struct.gl::UniformTypeInfo" = type <{ i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, [4 x i8], i64, i64, i64, i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.gl::LinkedUniform"* }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"*, %"class.std::__1::__compressed_pair.204" }
%"struct.gl::ShaderVariableBuffer" = type { %"struct.gl::ActiveVariable.base", i32, i32, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.gl::ShaderVariableBuffer"* }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"*, %"class.std::__1::__compressed_pair.196" }
%"struct.gl::InterfaceBlock" = type <{ %"struct.gl::ShaderVariableBuffer", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.gl::InterfaceBlock"* }
%"class.std::__1::vector.209" = type { %"class.std::__1::__vector_base.210" }
%"class.std::__1::__vector_base.210" = type { %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"*, %"class.std::__1::__compressed_pair.211" }
%"struct.gl::SamplerBinding" = type { i8, i32, i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.gl::SamplerBinding"* }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"*, %"class.std::__1::__compressed_pair.218" }
%"struct.gl::ImageBinding" = type { i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.gl::ImageBinding"* }
%"class.angle::PackedEnumMap.223" = type { %"struct.std::__1::array.224" }
%"struct.std::__1::array.224" = type { [6 x %"class.std::__1::vector.70"] }
%struct.Optional.225 = type { i8, i8 }
%"class.std::__1::vector.378" = type { %"class.std::__1::__vector_base.379" }
%"class.std::__1::__vector_base.379" = type { %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"*, %"class.std::__1::__compressed_pair.381" }
%"struct.gl::VertexAttribCurrentValueData" = type { %union.anon.380, i32 }
%union.anon.380 = type { [4 x float] }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.gl::VertexAttribCurrentValueData"* }
%"class.gl::VertexArray" = type <{ %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"struct.gl::VertexArrayID", [4 x i8], %"class.gl::VertexArrayState", %"class.angle::BitSetT.400", %"struct.std::__1::array.401", %"struct.std::__1::array.403", %struct.Optional.405, %"class.rx::VertexArrayImpl"*, %"class.std::__1::vector.337", %"class.angle::BitSetT.166", %"class.gl::VertexArray::IndexRangeCache", i8, [7 x i8] }>
%"struct.gl::VertexArrayID" = type { i32 }
%"class.gl::VertexArrayState" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.386", %"class.gl::SubjectBindingPointer", %"class.std::__1::vector.393", %"class.angle::BitSetT.166", %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166" }
%"class.std::__1::vector.386" = type { %"class.std::__1::__vector_base.387" }
%"class.std::__1::__vector_base.387" = type { %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"*, %"class.std::__1::__compressed_pair.388" }
%"struct.gl::VertexAttribute" = type { i8, %"struct.angle::Format"*, i8*, i32, i32, i32, i64 }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"struct.gl::VertexAttribute"* }
%"class.gl::SubjectBindingPointer" = type { %"class.gl::BindingPointer.264", %"class.angle::ObserverBindingBase" }
%"class.std::__1::vector.393" = type { %"class.std::__1::__vector_base.394" }
%"class.std::__1::__vector_base.394" = type { %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"*, %"class.std::__1::__compressed_pair.395" }
%"class.gl::VertexBinding" = type { i32, i32, i64, %"class.gl::BindingPointer.264", %"class.angle::BitSetT.166" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.gl::VertexBinding"* }
%"class.angle::BitSetT.400" = type { i64 }
%"struct.std::__1::array.401" = type { [16 x %"class.angle::BitSetT.402"] }
%"class.angle::BitSetT.402" = type { i64 }
%"struct.std::__1::array.403" = type { [16 x %"class.angle::BitSetT.404"] }
%"class.angle::BitSetT.404" = type { i64 }
%struct.Optional.405 = type { i8, %"class.angle::BitSetT.400" }
%"class.rx::VertexArrayImpl" = type opaque
%"class.gl::VertexArray::IndexRangeCache" = type { i64, i32, i64, %"struct.gl::IndexRange" }
%"struct.gl::IndexRange" = type { i64, i64, i64 }
%"class.angle::BitSetT.148" = type { i64 }
%"class.angle::PackedEnumMap.406" = type { %"struct.std::__1::array.407" }
%"struct.std::__1::array.407" = type { [11 x %"class.std::__1::vector.408"] }
%"class.std::__1::vector.408" = type { %"class.std::__1::__vector_base.409" }
%"class.std::__1::__vector_base.409" = type { %"class.gl::BindingPointer.410"*, %"class.gl::BindingPointer.410"*, %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.gl::BindingPointer.410"* }
%"class.gl::ActiveTexturesCache" = type { %"struct.std::__1::array.417" }
%"struct.std::__1::array.417" = type { [96 x %"class.gl::Texture"*] }
%"class.std::__1::vector.337" = type { %"class.std::__1::__vector_base.338" }
%"class.std::__1::__vector_base.338" = type { %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"*, %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.angle::ObserverBinding"* }
%"class.std::__1::vector.418" = type { %"class.std::__1::__vector_base.419" }
%"class.std::__1::__vector_base.419" = type { %"class.gl::BindingPointer.420"*, %"class.gl::BindingPointer.420"*, %"class.std::__1::__compressed_pair.422" }
%"class.gl::BindingPointer.420" = type { %"class.angle::BindingPointer.421" }
%"class.angle::BindingPointer.421" = type { i32 (...)**, %"class.gl::Sampler"* }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.gl::BindingPointer.420"* }
%"class.std::__1::vector.427" = type { %"class.std::__1::__vector_base.428" }
%"class.std::__1::__vector_base.428" = type { %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"*, %"class.std::__1::__compressed_pair.429" }
%"struct.gl::ImageUnit" = type <{ %"class.gl::BindingPointer.410", i32, i8, [3 x i8], i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"struct.gl::ImageUnit"* }
%"class.angle::PackedEnumMap.434" = type { %"struct.std::__1::array.435" }
%"struct.std::__1::array.435" = type { [7 x %"class.gl::BindingPointer.436"] }
%"class.gl::BindingPointer.436" = type { %"class.angle::BindingPointer.437" }
%"class.angle::BindingPointer.437" = type { i32 (...)**, %"class.gl::Query"* }
%"class.angle::PackedEnumMap.438" = type { %"struct.std::__1::array.439" }
%"struct.std::__1::array.439" = type { [13 x %"class.gl::BindingPointer.264"] }
%"class.std::__1::vector.440" = type { %"class.std::__1::__vector_base.441" }
%"class.std::__1::__vector_base.441" = type { %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"*, %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.gl::OffsetBindingPointer"* }
%"class.angle::BitSetArray.447" = type { %"struct.std::__1::array.167" }
%"struct.std::__1::array.167" = type { [2 x %"class.angle::BitSetT.168"] }
%"class.angle::BitSetT.448" = type { i64 }
%"class.gl::BindingPointer.449" = type { %"class.angle::BindingPointer.450" }
%"class.angle::BindingPointer.450" = type { i32 (...)**, %"class.gl::TransformFeedback"* }
%"struct.gl::PixelUnpackState" = type { %"struct.gl::PixelStoreStateBase" }
%"struct.gl::PixelStoreStateBase" = type { i32, i32, i32, i32, i32, i32 }
%"struct.gl::PixelPackState" = type <{ %"struct.gl::PixelStoreStateBase", i8, [3 x i8] }>
%"class.gl::Debug" = type { i8, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*, %"class.std::__1::deque", i32, i8, %"class.std::__1::vector.462" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.458" }
%"struct.std::__1::__split_buffer" = type { %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"class.std::__1::__compressed_pair.453" }
%"struct.gl::Debug::Message" = type { i32, i32, i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"struct.gl::Debug::Message"** }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.462" = type { %"class.std::__1::__vector_base.463" }
%"class.std::__1::__vector_base.463" = type { %"struct.gl::Debug::Group"*, %"struct.gl::Debug::Group"*, %"class.std::__1::__compressed_pair.471" }
%"struct.gl::Debug::Group" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.464" }
%"class.std::__1::vector.464" = type { %"class.std::__1::__vector_base.465" }
%"class.std::__1::__vector_base.465" = type { %"struct.gl::Debug::Control"*, %"struct.gl::Debug::Control"*, %"class.std::__1::__compressed_pair.466" }
%"struct.gl::Debug::Control" = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"struct.gl::Debug::Control"* }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"struct.gl::Debug::Group"* }
%"class.angle::BitSetT.476" = type { i32 }
%"class.gl::GLES1State" = type <{ %"class.gl::State"*, %"class.angle::BitSetT.166", %"class.std::__1::vector.477", i8, i8, i8, i8, [4 x i8], %"class.std::__1::vector.485", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", %"class.angle::Vector", %"class.std::__1::vector.490", i32, i8, [3 x i8], %"class.angle::FixedVector", %"class.angle::FixedVector", %"class.std::__1::vector.505", %"class.std::__1::vector.512", %"struct.gl::MaterialParameters", %"struct.gl::LightModelParameters", %"class.std::__1::vector.519", %"struct.gl::FogParameters", i8, [3 x i8], %"struct.gl::PointParameters", i8, [3 x i8], float, i8, [7 x i8], %"class.std::__1::vector.528", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::vector.477" = type { %"class.std::__1::__vector_base.478" }
%"class.std::__1::__vector_base.478" = type { %"class.angle::BitSetT.479"*, %"class.angle::BitSetT.479"*, %"class.std::__1::__compressed_pair.480" }
%"class.angle::BitSetT.479" = type opaque
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.angle::BitSetT.479"* }
%"class.std::__1::vector.485" = type { i64*, i64, %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::Vector" = type { %"class.angle::VectorBase" }
%"class.angle::VectorBase" = type { [3 x float] }
%"class.std::__1::vector.490" = type { %"class.std::__1::__vector_base.491" }
%"class.std::__1::__vector_base.491" = type { %"struct.gl::TextureCoordF"*, %"struct.gl::TextureCoordF"*, %"class.std::__1::__compressed_pair.492" }
%"struct.gl::TextureCoordF" = type { float, float, float, float }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"struct.gl::TextureCoordF"* }
%"class.angle::FixedVector" = type { %"struct.std::__1::array.497", i64 }
%"struct.std::__1::array.497" = type { [16 x %"class.angle::Mat4"] }
%"class.angle::Mat4" = type { %"class.angle::Matrix" }
%"class.angle::Matrix" = type { %"class.std::__1::vector.498", i32, i32 }
%"class.std::__1::vector.498" = type { %"class.std::__1::__vector_base.499" }
%"class.std::__1::__vector_base.499" = type { float*, float*, %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { float* }
%"class.std::__1::vector.505" = type { %"class.std::__1::__vector_base.506" }
%"class.std::__1::__vector_base.506" = type { %"class.angle::FixedVector"*, %"class.angle::FixedVector"*, %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.angle::FixedVector"* }
%"class.std::__1::vector.512" = type { %"class.std::__1::__vector_base.513" }
%"class.std::__1::__vector_base.513" = type { %"struct.gl::TextureEnvironmentParameters"*, %"struct.gl::TextureEnvironmentParameters"*, %"class.std::__1::__compressed_pair.514" }
%"struct.gl::TextureEnvironmentParameters" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", float, float, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"struct.gl::TextureEnvironmentParameters"* }
%"struct.gl::MaterialParameters" = type { %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", float }
%"struct.gl::LightModelParameters" = type <{ %"struct.angle::Color", i8, [3 x i8] }>
%"class.std::__1::vector.519" = type { %"class.std::__1::__vector_base.520" }
%"class.std::__1::__vector_base.520" = type { %"struct.gl::LightParameters"*, %"struct.gl::LightParameters"*, %"class.std::__1::__compressed_pair.523" }
%"struct.gl::LightParameters" = type { i8, %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"class.angle::Vector.521", %"class.angle::Vector", float, float, float, float, float }
%"class.angle::Vector.521" = type { %"class.angle::VectorBase.522" }
%"class.angle::VectorBase.522" = type { [4 x float] }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"struct.gl::LightParameters"* }
%"struct.gl::FogParameters" = type { i8, float, float, float, %"struct.angle::Color" }
%"struct.gl::PointParameters" = type { float, float, float, %"class.angle::Vector", float }
%"class.std::__1::vector.528" = type { %"class.std::__1::__vector_base.529" }
%"class.std::__1::__vector_base.529" = type { %"struct.gl::ClipPlaneParameters"*, %"struct.gl::ClipPlaneParameters"*, %"class.std::__1::__compressed_pair.530" }
%"struct.gl::ClipPlaneParameters" = type { i8, %"class.angle::Vector.521" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"struct.gl::ClipPlaneParameters"* }
%"class.angle::BitSetT.535" = type { i32 }
%"class.angle::BitSetT.536" = type { i64 }
%"class.angle::BitSetArray" = type { %"struct.std::__1::array.167" }
%"class.gl::MemoryProgramCache" = type opaque
%"class.rx::MultisampleTextureInitializer" = type { i32 (...)** }
%"struct.std::__1::array.998" = type { [16 x { i64, i64 }] }
%"struct.std::__1::array.999" = type { [16 x { i64, i64 }] }
%"class.rx::vk::PipelineHelper" = type { %"class.std::__1::vector.1000", %"class.rx::Serial", %"class.rx::vk::Pipeline" }
%"class.std::__1::vector.1000" = type { %"class.std::__1::__vector_base.1001" }
%"class.std::__1::__vector_base.1001" = type { %"struct.rx::vk::GraphicsPipelineTransition"*, %"struct.rx::vk::GraphicsPipelineTransition"*, %"class.std::__1::__compressed_pair.1003" }
%"struct.rx::vk::GraphicsPipelineTransition" = type { %"class.angle::BitSetT.1002", %"class.rx::vk::GraphicsPipelineDesc"*, %"class.rx::vk::PipelineHelper"* }
%"class.rx::vk::GraphicsPipelineDesc" = type { %"struct.rx::vk::VertexInputAttributes", %"class.rx::vk::RenderPassDesc", %"struct.rx::vk::PackedRasterizationAndMultisampleStateInfo", %"struct.rx::vk::PackedDepthStencilStateInfo", %"struct.rx::vk::PackedInputAssemblyAndColorBlendStateInfo", %struct.VkViewport, %"struct.rx::vk::PackedScissor", %"struct.rx::vk::PackedExtent" }
%"struct.rx::vk::VertexInputAttributes" = type { [16 x %"struct.rx::vk::PackedAttribDesc"] }
%"struct.rx::vk::PackedAttribDesc" = type { i8, i8, i16, i16 }
%"struct.rx::vk::PackedRasterizationAndMultisampleStateInfo" = type { %"struct.rx::vk::RasterizationStateBits", float, [2 x i32], float, float, float, float }
%"struct.rx::vk::RasterizationStateBits" = type { i32 }
%"struct.rx::vk::PackedDepthStencilStateInfo" = type { %"struct.rx::vk::DepthStencilEnableFlags", i8, i8, %"struct.rx::vk::DepthCompareOpAndSurfaceRotation", float, float, %"struct.rx::vk::PackedStencilOpState", %"struct.rx::vk::PackedStencilOpState" }
%"struct.rx::vk::DepthStencilEnableFlags" = type { i8 }
%"struct.rx::vk::DepthCompareOpAndSurfaceRotation" = type { i8 }
%"struct.rx::vk::PackedStencilOpState" = type { %"struct.rx::vk::StencilOps", i8, i8 }
%"struct.rx::vk::StencilOps" = type { i16 }
%"struct.rx::vk::PackedInputAssemblyAndColorBlendStateInfo" = type { [4 x i8], [8 x %"struct.rx::vk::PackedColorBlendAttachmentState"], [4 x float], %"struct.rx::vk::LogicOpState", i8, %"struct.rx::vk::PrimitiveState" }
%"struct.rx::vk::PackedColorBlendAttachmentState" = type { i32 }
%"struct.rx::vk::LogicOpState" = type { i8 }
%"struct.rx::vk::PrimitiveState" = type { i16 }
%struct.VkViewport = type { float, float, float, float, float, float }
%"struct.rx::vk::PackedScissor" = type { i16, i16, i16, i16 }
%"struct.rx::vk::PackedExtent" = type { i16, i16 }
%"class.std::__1::__compressed_pair.1003" = type { %"struct.std::__1::__compressed_pair_elem.1004" }
%"struct.std::__1::__compressed_pair_elem.1004" = type { %"struct.rx::vk::GraphicsPipelineTransition"* }
%"class.rx::vk::Pipeline" = type { %"class.rx::vk::WrappedObject.1008" }
%"class.rx::vk::WrappedObject.1008" = type { %struct.VkPipeline_T* }
%"class.rx::vk::ObjectAndSerial.1009" = type { [8 x i8], %"class.rx::vk::Pipeline", %"class.rx::Serial" }
%"class.rx::WindowSurfaceVk" = type opaque
%"class.std::__1::unique_ptr.1010" = type { %"class.std::__1::__compressed_pair.1011" }
%"class.std::__1::__compressed_pair.1011" = type { %"struct.std::__1::__compressed_pair_elem.1012" }
%"struct.std::__1::__compressed_pair_elem.1012" = type { %"class.rx::vk::GraphicsPipelineDesc"* }
%"class.angle::BitSetT.1002" = type { i64 }
%"class.angle::PackedEnumMap.1016" = type { %"struct.std::__1::array.1017" }
%"struct.std::__1::array.1017" = type { [2 x %"class.rx::vk::DynamicDescriptorPool"] }
%"class.rx::vk::DynamicDescriptorPool" = type { i64, %"class.std::__1::vector.1018", %"class.std::__1::vector.1026", %struct.VkDescriptorSetLayout_T* }
%"class.std::__1::vector.1018" = type { %"class.std::__1::__vector_base.1019" }
%"class.std::__1::__vector_base.1019" = type { %"class.rx::vk::RefCounted.1020"**, %"class.rx::vk::RefCounted.1020"**, %"class.std::__1::__compressed_pair.1021" }
%"class.rx::vk::RefCounted.1020" = type opaque
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.1022" }
%"struct.std::__1::__compressed_pair_elem.1022" = type { %"class.rx::vk::RefCounted.1020"** }
%"class.std::__1::vector.1026" = type { %"class.std::__1::__vector_base.1027" }
%"class.std::__1::__vector_base.1027" = type { %struct.VkDescriptorPoolSize*, %struct.VkDescriptorPoolSize*, %"class.std::__1::__compressed_pair.1028" }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.1029" }
%"struct.std::__1::__compressed_pair_elem.1029" = type { %struct.VkDescriptorPoolSize* }
%"class.angle::PackedEnumMap.1033" = type { %"struct.std::__1::array.1034" }
%"struct.std::__1::array.1034" = type { [7 x %"class.rx::vk::DynamicQueryPool"] }
%"class.angle::PackedEnumMap.1050" = type { %"struct.std::__1::array.1051" }
%"struct.std::__1::array.1051" = type { [7 x %"class.rx::QueryVk"*] }
%"class.rx::QueryVk" = type <{ %"class.rx::QueryImpl.base", [7 x i8], %"class.rx::vk::Shared.1052", %"class.std::__1::vector.1054", %"class.rx::vk::QueryHelper", i64, i64, i8, [7 x i8] }>
%"class.rx::QueryImpl.base" = type <{ i32 (...)**, i8 }>
%"class.rx::vk::Shared.1052" = type { %"class.rx::vk::RefCounted.1053"* }
%"class.rx::vk::RefCounted.1053" = type { i32, [4 x i8], %"class.rx::vk::QueryHelper" }
%"class.std::__1::vector.1054" = type { %"class.std::__1::__vector_base.1055" }
%"class.std::__1::__vector_base.1055" = type { %"class.rx::vk::Shared.1052"*, %"class.rx::vk::Shared.1052"*, %"class.std::__1::__compressed_pair.1056" }
%"class.std::__1::__compressed_pair.1056" = type { %"struct.std::__1::__compressed_pair_elem.1057" }
%"struct.std::__1::__compressed_pair_elem.1057" = type { %"class.rx::vk::Shared.1052"* }
%"class.rx::vk::QueryHelper" = type <{ %"class.rx::vk::Resource", %"class.rx::vk::DynamicQueryPool"*, i64, i32, [4 x i8] }>
%"class.rx::VertexArrayVk" = type opaque
%"class.rx::FramebufferVk" = type opaque
%"class.rx::ProgramVk" = type opaque
%"class.rx::ProgramPipelineVk" = type opaque
%"class.rx::ProgramExecutableVk" = type opaque
%"class.angle::PackedEnumMap.1061" = type { %"struct.std::__1::array.1062" }
%"struct.std::__1::array.1062" = type { [3 x i32] }
%"class.rx::IncompleteTextureSet" = type { %"class.angle::PackedEnumMap.1063", %"class.gl::Buffer"* }
%"class.angle::PackedEnumMap.1063" = type { %"struct.std::__1::array.1064" }
%"struct.std::__1::array.1064" = type { [4 x %"class.angle::PackedEnumMap.544"] }
%"class.angle::PackedEnumMap.1065" = type { %"struct.std::__1::array.1066" }
%"struct.std::__1::array.1066" = type { [2 x %"struct.rx::ContextVk::DriverUniformsDescriptorSet"] }
%"struct.rx::ContextVk::DriverUniformsDescriptorSet" = type { %"class.rx::vk::DynamicBuffer", %struct.VkDescriptorSet_T*, i32, %"class.rx::vk::BindingPointer.1067", %"class.rx::vk::BindingPointer.1069", %"class.rx::DriverUniformsDescriptorSetCache" }
%struct.VkDescriptorSet_T = type opaque
%"class.rx::vk::BindingPointer.1067" = type { %"class.rx::vk::RefCounted.1068"* }
%"class.rx::vk::RefCounted.1068" = type opaque
%"class.rx::vk::BindingPointer.1069" = type { %"class.rx::vk::RefCounted.1020"* }
%"class.rx::DriverUniformsDescriptorSetCache" = type { %"class.rx::HasCacheStats.1070", %"class.angle::FastIntegerMap.1071" }
%"class.rx::HasCacheStats.1070" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.angle::FastIntegerMap.1071" = type { %"class.angle::FastIntegerSet", %"class.std::__1::vector.1072" }
%"class.std::__1::vector.1072" = type { %"class.std::__1::__vector_base.1073" }
%"class.std::__1::__vector_base.1073" = type { %struct.VkDescriptorSet_T**, %struct.VkDescriptorSet_T**, %"class.std::__1::__compressed_pair.1074" }
%"class.std::__1::__compressed_pair.1074" = type { %"struct.std::__1::__compressed_pair_elem.1075" }
%"struct.std::__1::__compressed_pair_elem.1075" = type { %struct.VkDescriptorSet_T** }
%"struct.std::__1::array.1079" = type { [96 x %"struct.rx::vk::TextureUnit"] }
%"struct.rx::vk::TextureUnit" = type { %"class.rx::TextureVk"*, %"class.rx::vk::SamplerHelper"*, i32 }
%"class.rx::TextureVk" = type opaque
%"class.rx::vk::SamplerHelper" = type <{ [8 x i8], %"class.rx::vk::Sampler", %"class.rx::vk::SamplerSerial", [4 x i8] }>
%"class.rx::vk::Sampler" = type { %"class.rx::vk::WrappedObject.1080" }
%"class.rx::vk::WrappedObject.1080" = type { %struct.VkSampler_T* }
%"class.rx::vk::SamplerSerial" = type { i32 }
%"class.rx::vk::TextureDescriptorDesc" = type { i32, %"struct.std::__1::array.1081" }
%"struct.std::__1::array.1081" = type { [96 x %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"] }
%"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials" = type { %"struct.rx::vk::ImageOrBufferViewSubresourceSerial", %"class.rx::vk::SamplerSerial" }
%"struct.rx::vk::ImageOrBufferViewSubresourceSerial" = type { %"class.rx::vk::ImageOrBufferViewSerial", %"struct.rx::vk::ImageSubresourceRange" }
%"class.rx::vk::ImageOrBufferViewSerial" = type { i32 }
%"struct.rx::vk::ImageSubresourceRange" = type { i32 }
%"class.rx::vk::ShaderBuffersDescriptorDesc" = type { %"class.angle::FastVector.1082" }
%"class.angle::FastVector.1082" = type { %"struct.std::__1::array.1083", i32*, i64, i64 }
%"struct.std::__1::array.1083" = type { [32 x i32] }
%"struct.std::__1::array.1084" = type { [96 x %"class.rx::TextureVk"*] }
%"class.angle::BitSetT.166" = type { i64 }
%"struct.std::__1::array.1085" = type { [16 x %"class.rx::vk::DynamicBuffer"] }
%"class.rx::RenderPassCache" = type { %"class.absl::flat_hash_map.1086", %"class.rx::CacheStats", %"class.rx::CacheStats" }
%"class.absl::flat_hash_map.1086" = type { %"class.absl::container_internal::raw_hash_map.1087" }
%"class.absl::container_internal::raw_hash_map.1087" = type { %"class.absl::container_internal::raw_hash_set.1088" }
%"class.absl::container_internal::raw_hash_set.1088" = type { i8*, %"union.absl::container_internal::map_slot_type.1089"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1090" }
%"union.absl::container_internal::map_slot_type.1089" = type { %"struct.std::__1::pair.1332" }
%"struct.std::__1::pair.1332" = type { %"class.rx::vk::RenderPassDesc", %"class.absl::flat_hash_map.1333" }
%"class.absl::flat_hash_map.1333" = type { %"class.absl::container_internal::raw_hash_map.1334" }
%"class.absl::container_internal::raw_hash_map.1334" = type { %"class.absl::container_internal::raw_hash_set.1335" }
%"class.absl::container_internal::raw_hash_set.1335" = type { i8*, %"union.absl::container_internal::map_slot_type.1336"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1337" }
%"union.absl::container_internal::map_slot_type.1336" = type { %"struct.std::__1::pair.1349" }
%"struct.std::__1::pair.1349" = type { %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::RenderPassHelper" }
%"class.rx::vk::RenderPassHelper" = type <{ [8 x i8], %"class.rx::vk::RenderPass", %"struct.rx::vk::RenderPassPerfCounters", [3 x i8] }>
%"struct.rx::vk::RenderPassPerfCounters" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.absl::container_internal::CompressedTuple.1337" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1338" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1338" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::container_internal::CompressedTuple.1090" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1091" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1091" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.angle::FastUnorderedSet" = type { %"class.angle::FastVector.1101" }
%"class.angle::FastVector.1101" = type { %"struct.std::__1::array.1102", %"class.rx::vk::BufferHelper"**, i64, i64 }
%"struct.std::__1::array.1102" = type { [4 x %"class.rx::vk::BufferHelper"*] }
%"class.rx::vk::ShaderLibrary" = type { [8 x i8], [24 x %"class.rx::vk::RefCounted.1103"], [4 x %"class.rx::vk::RefCounted.1103"], [4 x %"class.rx::vk::RefCounted.1103"], [3 x %"class.rx::vk::RefCounted.1103"], [1 x %"class.rx::vk::RefCounted.1103"], [8 x %"class.rx::vk::RefCounted.1103"], [1 x %"class.rx::vk::RefCounted.1103"], [10 x %"class.rx::vk::RefCounted.1103"], [48 x %"class.rx::vk::RefCounted.1103"], [43 x %"class.rx::vk::RefCounted.1103"], [6 x %"class.rx::vk::RefCounted.1103"], [2 x %"class.rx::vk::RefCounted.1103"] }
%"class.rx::vk::RefCounted.1103" = type { i32, %"class.rx::vk::ObjectAndSerial.1104" }
%"class.rx::vk::ObjectAndSerial.1104" = type { [8 x i8], %"class.rx::vk::ShaderModule", %"class.rx::Serial" }
%"class.rx::vk::ShaderModule" = type { %"class.rx::vk::WrappedObject.1105" }
%"class.rx::vk::WrappedObject.1105" = type { %struct.VkShaderModule_T* }
%"class.rx::UtilsVk" = type { [8 x i8], %"class.angle::PackedEnumMap.1106", %"class.angle::PackedEnumMap.1110", %"class.angle::PackedEnumMap.1114", [4 x %"class.rx::vk::ShaderProgramHelper"], [3 x %"class.rx::vk::ShaderProgramHelper"], [1 x %"class.rx::vk::ShaderProgramHelper"], [8 x %"class.rx::vk::ShaderProgramHelper"], %"class.rx::vk::ShaderProgramHelper", [48 x %"class.rx::vk::ShaderProgramHelper"], [43 x %"class.rx::vk::ShaderProgramHelper"], [24 x %"class.rx::vk::ShaderProgramHelper"], [4 x %"class.rx::vk::ShaderProgramHelper"], [6 x %"class.rx::vk::ShaderProgramHelper"], [2 x %"class.rx::vk::ShaderProgramHelper"], [10 x %"class.rx::vk::ShaderProgramHelper"], %"class.std::__1::unordered_map.1147", %"class.std::__1::unordered_map.1173", %"class.rx::vk::Sampler", %"class.rx::vk::Sampler", %"struct.rx::InternalShaderPerfCounters", %"struct.rx::InternalShaderPerfCounters" }
%"class.angle::PackedEnumMap.1106" = type { %"struct.std::__1::array.1107" }
%"struct.std::__1::array.1107" = type { [22 x %"class.angle::PackedEnumMap.1108"] }
%"class.angle::PackedEnumMap.1108" = type { %"struct.std::__1::array.1109" }
%"struct.std::__1::array.1109" = type { [4 x %"class.rx::vk::BindingPointer.1067"] }
%"class.angle::PackedEnumMap.1110" = type { %"struct.std::__1::array.1111" }
%"struct.std::__1::array.1111" = type { [22 x %"class.rx::vk::BindingPointer.1112"] }
%"class.rx::vk::BindingPointer.1112" = type { %"class.rx::vk::RefCounted.1113"* }
%"class.rx::vk::RefCounted.1113" = type opaque
%"class.angle::PackedEnumMap.1114" = type { %"struct.std::__1::array.1115" }
%"struct.std::__1::array.1115" = type { [22 x %"class.rx::vk::DynamicDescriptorPool"] }
%"class.rx::vk::ShaderProgramHelper" = type { [8 x i8], %"class.angle::PackedEnumMap.1116", %"class.rx::GraphicsPipelineCache", %"class.rx::vk::ObjectAndSerial.1009", %"struct.rx::vk::SpecializationConstants" }
%"class.angle::PackedEnumMap.1116" = type { %"struct.std::__1::array.1117" }
%"struct.std::__1::array.1117" = type { [6 x %"class.rx::vk::BindingPointer.1118"] }
%"class.rx::vk::BindingPointer.1118" = type { %"class.rx::vk::RefCounted.1103"* }
%"class.rx::GraphicsPipelineCache" = type { %"class.rx::HasCacheStats.1119", %"class.std::__1::unordered_map.1120" }
%"class.rx::HasCacheStats.1119" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1120" = type { %"class.std::__1::__hash_table.1121" }
%"class.std::__1::__hash_table.1121" = type <{ %"class.std::__1::unique_ptr.1122", %"class.std::__1::__compressed_pair.1132", %"class.std::__1::__compressed_pair.1137", %"class.std::__1::__compressed_pair.1141", [4 x i8] }>
%"class.std::__1::unique_ptr.1122" = type { %"class.std::__1::__compressed_pair.1123" }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124", %"struct.std::__1::__compressed_pair_elem.1126" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"struct.std::__1::__hash_node_base.1125"** }
%"struct.std::__1::__hash_node_base.1125" = type { %"struct.std::__1::__hash_node_base.1125"* }
%"struct.std::__1::__compressed_pair_elem.1126" = type { %"class.std::__1::__bucket_list_deallocator.1127" }
%"class.std::__1::__bucket_list_deallocator.1127" = type { %"class.std::__1::__compressed_pair.1128" }
%"class.std::__1::__compressed_pair.1128" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1132" = type { %"struct.std::__1::__compressed_pair_elem.1133" }
%"struct.std::__1::__compressed_pair_elem.1133" = type { %"struct.std::__1::__hash_node_base.1125" }
%"class.std::__1::__compressed_pair.1137" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1141" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.rx::vk::SpecializationConstants" = type { i32, i32, i32, i32 }
%"class.std::__1::unordered_map.1147" = type { %"class.std::__1::__hash_table.1148" }
%"class.std::__1::__hash_table.1148" = type <{ %"class.std::__1::unique_ptr.1149", %"class.std::__1::__compressed_pair.1159", %"class.std::__1::__compressed_pair.1164", %"class.std::__1::__compressed_pair.1169", [4 x i8] }>
%"class.std::__1::unique_ptr.1149" = type { %"class.std::__1::__compressed_pair.1150" }
%"class.std::__1::__compressed_pair.1150" = type { %"struct.std::__1::__compressed_pair_elem.1151", %"struct.std::__1::__compressed_pair_elem.1153" }
%"struct.std::__1::__compressed_pair_elem.1151" = type { %"struct.std::__1::__hash_node_base.1152"** }
%"struct.std::__1::__hash_node_base.1152" = type { %"struct.std::__1::__hash_node_base.1152"* }
%"struct.std::__1::__compressed_pair_elem.1153" = type { %"class.std::__1::__bucket_list_deallocator.1154" }
%"class.std::__1::__bucket_list_deallocator.1154" = type { %"class.std::__1::__compressed_pair.1155" }
%"class.std::__1::__compressed_pair.1155" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.1160" }
%"struct.std::__1::__compressed_pair_elem.1160" = type { %"struct.std::__1::__hash_node_base.1152" }
%"class.std::__1::__compressed_pair.1164" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1169" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"class.std::__1::unordered_map.1173" = type { %"class.std::__1::__hash_table.1174" }
%"class.std::__1::__hash_table.1174" = type <{ %"class.std::__1::unique_ptr.1175", %"class.std::__1::__compressed_pair.1185", %"class.std::__1::__compressed_pair.1190", %"class.std::__1::__compressed_pair.1193", [4 x i8] }>
%"class.std::__1::unique_ptr.1175" = type { %"class.std::__1::__compressed_pair.1176" }
%"class.std::__1::__compressed_pair.1176" = type { %"struct.std::__1::__compressed_pair_elem.1177", %"struct.std::__1::__compressed_pair_elem.1179" }
%"struct.std::__1::__compressed_pair_elem.1177" = type { %"struct.std::__1::__hash_node_base.1178"** }
%"struct.std::__1::__hash_node_base.1178" = type { %"struct.std::__1::__hash_node_base.1178"* }
%"struct.std::__1::__compressed_pair_elem.1179" = type { %"class.std::__1::__bucket_list_deallocator.1180" }
%"class.std::__1::__bucket_list_deallocator.1180" = type { %"class.std::__1::__compressed_pair.1181" }
%"class.std::__1::__compressed_pair.1181" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1185" = type { %"struct.std::__1::__compressed_pair_elem.1186" }
%"struct.std::__1::__compressed_pair_elem.1186" = type { %"struct.std::__1::__hash_node_base.1178" }
%"class.std::__1::__compressed_pair.1190" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1193" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.rx::InternalShaderPerfCounters" = type { i32 }
%"class.rx::vk::DynamicQueryPool" = type { %"class.rx::vk::DynamicallyGrowingPool.base", i32 }
%"class.rx::vk::DynamicallyGrowingPool.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.std::__1::vector.1035", %"class.std::__1::vector.1043", i64, i32 }>
%"class.std::__1::vector.1035" = type { %"class.std::__1::__vector_base.1036" }
%"class.std::__1::__vector_base.1036" = type { %"class.rx::vk::QueryPool"*, %"class.rx::vk::QueryPool"*, %"class.std::__1::__compressed_pair.1038" }
%"class.rx::vk::QueryPool" = type { %"class.rx::vk::WrappedObject.1037" }
%"class.rx::vk::WrappedObject.1037" = type { %struct.VkQueryPool_T* }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.1039" }
%"struct.std::__1::__compressed_pair_elem.1039" = type { %"class.rx::vk::QueryPool"* }
%"class.std::__1::vector.1043" = type { %"class.std::__1::__vector_base.1044" }
%"class.std::__1::__vector_base.1044" = type { %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"*, %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"*, %"class.std::__1::__compressed_pair.1045" }
%"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats" = type opaque
%"class.std::__1::__compressed_pair.1045" = type { %"struct.std::__1::__compressed_pair_elem.1046" }
%"struct.std::__1::__compressed_pair_elem.1046" = type { %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"* }
%"class.std::__1::vector.1197" = type { %"class.std::__1::__vector_base.1198" }
%"class.std::__1::__vector_base.1198" = type { %"struct.rx::ContextVk::GpuEventQuery"*, %"struct.rx::ContextVk::GpuEventQuery"*, %"class.std::__1::__compressed_pair.1200" }
%"struct.rx::ContextVk::GpuEventQuery" = type { %"struct.std::__1::array.1199", i8, [7 x i8], %"class.rx::vk::QueryHelper" }
%"struct.std::__1::array.1199" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.1200" = type { %"struct.std::__1::__compressed_pair_elem.1201" }
%"struct.std::__1::__compressed_pair_elem.1201" = type { %"struct.rx::ContextVk::GpuEventQuery"* }
%"class.std::__1::vector.1205" = type { %"class.std::__1::__vector_base.1206" }
%"class.std::__1::__vector_base.1206" = type { %"struct.rx::ContextVk::GpuEvent"*, %"struct.rx::ContextVk::GpuEvent"*, %"class.std::__1::__compressed_pair.1207" }
%"struct.rx::ContextVk::GpuEvent" = type { i64, %"struct.std::__1::array.1199", i8 }
%"class.std::__1::__compressed_pair.1207" = type { %"struct.std::__1::__compressed_pair_elem.1208" }
%"struct.std::__1::__compressed_pair_elem.1208" = type { %"struct.rx::ContextVk::GpuEvent"* }
%"struct.rx::ContextVk::GpuClockSyncInfo" = type { double, double }
%"struct.rx::vk::PerfCounters" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.rx::ContextVkPerfCounters" = type { %"class.angle::PackedEnumMap.1212" }
%"class.angle::PackedEnumMap.1212" = type { %"struct.std::__1::array.373" }
%"class.rx::vk::ResourceUseList" = type { i32 (...)**, %"class.std::__1::vector.1213" }
%"class.std::__1::vector.1213" = type { %"class.std::__1::__vector_base.1214" }
%"class.std::__1::__vector_base.1214" = type { %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"*, %"class.std::__1::__compressed_pair.1215" }
%"class.std::__1::__compressed_pair.1215" = type { %"struct.std::__1::__compressed_pair_elem.1216" }
%"struct.std::__1::__compressed_pair_elem.1216" = type { %"class.rx::vk::SharedResourceUse"* }
%"class.std::__1::vector.1220" = type { %"class.std::__1::__vector_base.1221" }
%"class.std::__1::__vector_base.1221" = type { %struct.VkDescriptorBufferInfo*, %struct.VkDescriptorBufferInfo*, %"class.std::__1::__compressed_pair.1222" }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%"class.std::__1::__compressed_pair.1222" = type { %"struct.std::__1::__compressed_pair_elem.1223" }
%"struct.std::__1::__compressed_pair_elem.1223" = type { %struct.VkDescriptorBufferInfo* }
%"class.std::__1::vector.1227" = type { %"class.std::__1::__vector_base.1228" }
%"class.std::__1::__vector_base.1228" = type { %struct.VkDescriptorImageInfo*, %struct.VkDescriptorImageInfo*, %"class.std::__1::__compressed_pair.1229" }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%"class.std::__1::__compressed_pair.1229" = type { %"struct.std::__1::__compressed_pair_elem.1230" }
%"struct.std::__1::__compressed_pair_elem.1230" = type { %struct.VkDescriptorImageInfo* }
%"class.std::__1::vector.1234" = type { %"class.std::__1::__vector_base.1235" }
%"class.std::__1::__vector_base.1235" = type { %struct.VkWriteDescriptorSet*, %struct.VkWriteDescriptorSet*, %"class.std::__1::__compressed_pair.1236" }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%"class.std::__1::__compressed_pair.1236" = type { %"struct.std::__1::__compressed_pair_elem.1237" }
%"struct.std::__1::__compressed_pair_elem.1237" = type { %struct.VkWriteDescriptorSet* }
%"class.rx::ShareGroupVk" = type <{ %"class.rx::ShareGroupImpl", %"class.rx::PipelineLayoutCache", %"class.rx::DescriptorSetLayoutCache", %"class.std::__1::set.1296", %"class.std::__1::vector.1306", i8, [7 x i8] }>
%"class.rx::ShareGroupImpl" = type { i32 (...)** }
%"class.rx::PipelineLayoutCache" = type { %"class.rx::HasCacheStats.1241", %"class.std::__1::unordered_map.1242" }
%"class.rx::HasCacheStats.1241" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1242" = type { %"class.std::__1::__hash_table.1243" }
%"class.std::__1::__hash_table.1243" = type <{ %"class.std::__1::unique_ptr.1244", %"class.std::__1::__compressed_pair.1254", %"class.std::__1::__compressed_pair.1259", %"class.std::__1::__compressed_pair.1263", [4 x i8] }>
%"class.std::__1::unique_ptr.1244" = type { %"class.std::__1::__compressed_pair.1245" }
%"class.std::__1::__compressed_pair.1245" = type { %"struct.std::__1::__compressed_pair_elem.1246", %"struct.std::__1::__compressed_pair_elem.1248" }
%"struct.std::__1::__compressed_pair_elem.1246" = type { %"struct.std::__1::__hash_node_base.1247"** }
%"struct.std::__1::__hash_node_base.1247" = type { %"struct.std::__1::__hash_node_base.1247"* }
%"struct.std::__1::__compressed_pair_elem.1248" = type { %"class.std::__1::__bucket_list_deallocator.1249" }
%"class.std::__1::__bucket_list_deallocator.1249" = type { %"class.std::__1::__compressed_pair.1250" }
%"class.std::__1::__compressed_pair.1250" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1254" = type { %"struct.std::__1::__compressed_pair_elem.1255" }
%"struct.std::__1::__compressed_pair_elem.1255" = type { %"struct.std::__1::__hash_node_base.1247" }
%"class.std::__1::__compressed_pair.1259" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1263" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"class.rx::DescriptorSetLayoutCache" = type { %"class.std::__1::unordered_map.1269", %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1269" = type { %"class.std::__1::__hash_table.1270" }
%"class.std::__1::__hash_table.1270" = type <{ %"class.std::__1::unique_ptr.1271", %"class.std::__1::__compressed_pair.1281", %"class.std::__1::__compressed_pair.1286", %"class.std::__1::__compressed_pair.1290", [4 x i8] }>
%"class.std::__1::unique_ptr.1271" = type { %"class.std::__1::__compressed_pair.1272" }
%"class.std::__1::__compressed_pair.1272" = type { %"struct.std::__1::__compressed_pair_elem.1273", %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1273" = type { %"struct.std::__1::__hash_node_base.1274"** }
%"struct.std::__1::__hash_node_base.1274" = type { %"struct.std::__1::__hash_node_base.1274"* }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.std::__1::__bucket_list_deallocator.1276" }
%"class.std::__1::__bucket_list_deallocator.1276" = type { %"class.std::__1::__compressed_pair.1277" }
%"class.std::__1::__compressed_pair.1277" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1281" = type { %"struct.std::__1::__compressed_pair_elem.1282" }
%"struct.std::__1::__compressed_pair_elem.1282" = type { %"struct.std::__1::__hash_node_base.1274" }
%"class.std::__1::__compressed_pair.1286" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1290" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"class.std::__1::set.1296" = type { %"class.std::__1::__tree.1297" }
%"class.std::__1::__tree.1297" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1298", %"class.std::__1::__compressed_pair.1302" }
%"class.std::__1::__compressed_pair.1298" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1302" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.1306" = type { %"class.std::__1::__vector_base.1307" }
%"class.std::__1::__vector_base.1307" = type { %"class.rx::vk::ResourceUseList"*, %"class.rx::vk::ResourceUseList"*, %"class.std::__1::__compressed_pair.1308" }
%"class.std::__1::__compressed_pair.1308" = type { %"struct.std::__1::__compressed_pair_elem.1309" }
%"struct.std::__1::__compressed_pair_elem.1309" = type { %"class.rx::vk::ResourceUseList"* }
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"class.gl::TraceEvent::TraceEndOnScopeClose" = type { %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"*, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data" }
%"struct.gl::TraceEvent::TraceEndOnScopeClose::Data" = type { %"struct.angle::PlatformMethods"*, i8*, i8* }
%"struct.angle::PlatformMethods" = type { i8*, double (%"struct.angle::PlatformMethods"*)*, double (%"struct.angle::PlatformMethods"*)*, void (%"struct.angle::PlatformMethods"*, i8*)*, void (%"struct.angle::PlatformMethods"*, i8*)*, void (%"struct.angle::PlatformMethods"*, i8*)*, {}*, i64 (%"struct.angle::PlatformMethods"*, i8, i8*, i8*, i64, double, i32, i8**, i8*, i64*, i8)*, void (%"struct.angle::PlatformMethods"*, i8*, i8*, i64)*, void (%"struct.angle::PlatformMethods"*, i8*, i32, i32, i32, i32)*, void (%"struct.angle::PlatformMethods"*, i8*, i32, i32)*, void (%"struct.angle::PlatformMethods"*, i8*, i32)*, void (%"struct.angle::PlatformMethods"*, i8*, i1)*, void (%"struct.angle::PlatformMethods"*, %"struct.angle::FeaturesD3D"*)*, void (%"struct.angle::PlatformMethods"*, %"struct.angle::FeaturesVk"*)*, void (%"struct.angle::PlatformMethods"*, %"struct.std::__1::array.1313"*, i64, i8*)*, void (%"struct.angle::PlatformMethods"*, %"struct.angle::FeaturesMtl"*)*, void (%"struct.angle::PlatformMethods"*, void (i8*)*, i8*)* }
%"struct.angle::FeaturesD3D" = type opaque
%"struct.std::__1::array.1313" = type { [20 x i8] }
%"struct.angle::FeaturesMtl" = type opaque
%struct.VkDebugUtilsLabelEXT = type { i32, i8*, i8*, [4 x float] }
%struct.VkOffset3D = type { i32, i32, i32 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__16vectorIN2rx2vk13SharedGarbageENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJNS2_17SharedResourceUseENS0_INS2_13GarbageObjectENS4_IS9_EEEEEEEvDpOT_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorIN2rx2vk13GarbageObjectENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZZNK2rx2vk12DeviceMemory3mapEP10VkDevice_TmmjPPhE32trace_event_unique_catstatic1397 = comdat any

$_ZGVZNK2rx2vk12DeviceMemory3mapEP10VkDevice_TmmjPPhE32trace_event_unique_catstatic1397 = comdat any

@.str = private unnamed_addr constant [31 x i8] c"Command successfully completed\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"A fence or query has not yet completed\00", align 1
@.str.2 = private unnamed_addr constant [57 x i8] c"A wait operation has not completed in the specified time\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"An event is signaled\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"An event is unsignaled\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"A return array was too small for the result\00", align 1
@.str.6 = private unnamed_addr constant [123 x i8] c"A swapchain no longer matches the surface properties exactly, but can still be used to present to the surface successfully\00", align 1
@.str.7 = private unnamed_addr constant [36 x i8] c"A host memory allocation has failed\00", align 1
@.str.8 = private unnamed_addr constant [38 x i8] c"A device memory allocation has failed\00", align 1
@.str.9 = private unnamed_addr constant [87 x i8] c"Initialization of an object could not be completed for implementation-specific reasons\00", align 1
@.str.10 = private unnamed_addr constant [45 x i8] c"The logical or physical device has been lost\00", align 1
@.str.11 = private unnamed_addr constant [38 x i8] c"Mapping of a memory object has failed\00", align 1
@.str.12 = private unnamed_addr constant [56 x i8] c"A requested layer is not present or could not be loaded\00", align 1
@.str.13 = private unnamed_addr constant [39 x i8] c"A requested extension is not supported\00", align 1
@.str.14 = private unnamed_addr constant [37 x i8] c"A requested feature is not supported\00", align 1
@.str.15 = private unnamed_addr constant [128 x i8] c"The requested version of Vulkan is not supported by the driver or is otherwise incompatible for implementation-specific reasons\00", align 1
@.str.16 = private unnamed_addr constant [55 x i8] c"Too many objects of the type have already been created\00", align 1
@.str.17 = private unnamed_addr constant [51 x i8] c"A requested format is not supported on this device\00", align 1
@.str.18 = private unnamed_addr constant [33 x i8] c"A surface is no longer available\00", align 1
@.str.19 = private unnamed_addr constant [93 x i8] c"The requested window is already connected to a VkSurfaceKHR, or to some other non-Vulkan API\00", align 1
@.str.20 = private unnamed_addr constant [87 x i8] c"A surface has changed in such a way that it is no longer compatible with the swapchain\00", align 1
@.str.21 = private unnamed_addr constant [139 x i8] c"The display used by a swapchain does not use the same presentable image layout, or is incompatible in a way that prevents sharing an image\00", align 1
@.str.22 = private unnamed_addr constant [49 x i8] c"The validation layers detected invalid API usage\00", align 1
@.str.23 = private unnamed_addr constant [36 x i8] c"Invalid Vulkan shader was generated\00", align 1
@.str.24 = private unnamed_addr constant [36 x i8] c"A pool memory allocation has failed\00", align 1
@.str.25 = private unnamed_addr constant [71 x i8] c"A pool allocation has failed due to fragmentation of the pool's memory\00", align 1
@.str.26 = private unnamed_addr constant [63 x i8] c"An external handle is not a valid handle of the specified type\00", align 1
@.str.27 = private unnamed_addr constant [26 x i8] c"Unknown vulkan error code\00", align 1
@_ZN2rx12_GLOBAL__N_129kVkKhronosValidationLayerNameE = internal constant [28 x i8] c"VK_LAYER_KHRONOS_validation\00", align 16
@_ZN2rx12_GLOBAL__N_130kVkStandardValidationLayerNameE = internal constant [36 x i8] c"VK_LAYER_LUNARG_standard_validation\00", align 16
@_ZN2rx12_GLOBAL__N_123kVkValidationLayerNamesE = internal global [5 x i8*] [i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.40, i32 0, i32 0)], align 16
@.str.28 = private unnamed_addr constant [66 x i8] c"../../third_party/angle/src/libANGLE/renderer/vulkan/vk_utils.cpp\00", align 1
@__FUNCTION__._ZN2rx28GetAvailableValidationLayersERKNSt3__16vectorI17VkLayerPropertiesNS0_9allocatorIS2_EEEEbPN5angle11FixedVectorIPKcLm20ENS0_5arrayISB_Lm20EEEEE = private unnamed_addr constant [29 x i8] c"GetAvailableValidationLayers\00", align 1
@.str.29 = private unnamed_addr constant [38 x i8] c"Vulkan validation layers are missing.\00", align 1
@.str.30 = private unnamed_addr constant [14 x i8] c"VK_LAYER_PATH\00", align 1
@_ZN2rx2vk20gLoaderLayersPathEnvE = hidden local_unnamed_addr global i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.30, i64 0, i64 0), align 8
@.str.31 = private unnamed_addr constant [17 x i8] c"VK_ICD_FILENAMES\00", align 1
@_ZN2rx2vk22gLoaderICDFilenamesEnvE = hidden local_unnamed_addr global i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.31, i64 0, i64 0), align 8
@.str.32 = private unnamed_addr constant [23 x i8] c"ANGLE_PREFERRED_DEVICE\00", align 1
@_ZN2rx2vk21gANGLEPreferredDeviceE = hidden local_unnamed_addr global i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.32, i64 0, i64 0), align 8
@_ZTVN2rx2vk7ContextE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::vk::Context"*)* @_ZN2rx2vk7ContextD2Ev to i8*), i8* bitcast (void (%"class.rx::vk::Context"*)* @_ZN2rx2vk7ContextD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@vkGetPhysicalDeviceMemoryProperties = external local_unnamed_addr global void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)*, align 8
@__func__._ZNK2rx2vk16MemoryProperties25findCompatibleMemoryIndexEPNS0_7ContextERK20VkMemoryRequirementsjbPjS7_ = private unnamed_addr constant [26 x i8] c"findCompatibleMemoryIndex\00", align 1
@__func__._ZN2rx2vk13StagingBuffer4initEPNS0_7ContextEmNS0_12StagingUsageE = private unnamed_addr constant [5 x i8] c"init\00", align 1
@__func__._ZN2rx2vk22InitMappableAllocationEPNS0_7ContextERKNS0_9AllocatorEPNS0_10AllocationEmij = private unnamed_addr constant [23 x i8] c"InitMappableAllocation\00", align 1
@__func__._ZN2rx2vk24InitMappableDeviceMemoryEPNS0_7ContextEPNS0_12DeviceMemoryEmij = private unnamed_addr constant [25 x i8] c"InitMappableDeviceMemory\00", align 1
@vkFlushMappedMemoryRanges = external local_unnamed_addr global i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)*, align 8
@__func__._ZN2rx2vk19InitShaderAndSerialEPNS0_7ContextEPNS0_15ObjectAndSerialINS0_12ShaderModuleEEEPKjm = private unnamed_addr constant [20 x i8] c"InitShaderAndSerial\00", align 1
@_ZZN2rx2vk13GarbageObject7destroyEPNS_10RendererVkEE31trace_event_unique_catstatic659 = internal unnamed_addr global i8* null, align 8
@_ZGVZN2rx2vk13GarbageObject7destroyEPNS_10RendererVkEE31trace_event_unique_catstatic659 = internal global i64 0, align 8
@.str.33 = private unnamed_addr constant [10 x i8] c"gpu.angle\00", align 1
@.str.34 = private unnamed_addr constant [23 x i8] c"GarbageObject::destroy\00", align 1
@vkDestroySemaphore = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)*, align 8
@vkDestroyEvent = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)*, align 8
@vkDestroyFence = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)*, align 8
@vkFreeMemory = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)*, align 8
@vkDestroyBuffer = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)*, align 8
@vkDestroyBufferView = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)*, align 8
@vkDestroyImage = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)*, align 8
@vkDestroyImageView = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)*, align 8
@vkDestroyShaderModule = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, align 8
@vkDestroyPipelineLayout = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)*, align 8
@vkDestroyRenderPass = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)*, align 8
@vkDestroyPipeline = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)*, align 8
@vkDestroyDescriptorSetLayout = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)*, align 8
@vkDestroySampler = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)*, align 8
@vkDestroyDescriptorPool = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)*, align 8
@vkDestroyFramebuffer = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)*, align 8
@vkDestroyCommandPool = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)*, align 8
@vkDestroyQueryPool = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)*, align 8
@_ZZN2rx2vk19MakeDebugUtilsLabelEjPKcP20VkDebugUtilsLabelEXTE12kLabelColors = internal unnamed_addr constant [6 x %"struct.angle::Color"] [%"struct.angle::Color" { float 1.000000e+00, float 5.000000e-01, float 5.000000e-01, float 1.000000e+00 }, %"struct.angle::Color" { float 5.000000e-01, float 1.000000e+00, float 5.000000e-01, float 1.000000e+00 }, %"struct.angle::Color" { float 5.000000e-01, float 5.000000e-01, float 1.000000e+00, float 1.000000e+00 }, %"struct.angle::Color" { float 0x3FE6666660000000, float 0x3FE6666660000000, float 0x3FE6666660000000, float 1.000000e+00 }, %"struct.angle::Color" { float 5.000000e-01, float 0x3FE99999A0000000, float 0x3FECCCCCC0000000, float 1.000000e+00 }, %"struct.angle::Color" { float 0x3FECCCCCC0000000, float 0x3FE99999A0000000, float 5.000000e-01, float 1.000000e+00 }], align 16
@_ZN2rx5gl_vkL15kShaderStageMapE = internal unnamed_addr constant %"class.angle::PackedEnumMap.1315" { %"struct.std::__1::array.1316" { [6 x i32] [i32 1, i32 2, i32 4, i32 8, i32 16, i32 32] } }, align 4
@.str.36 = private unnamed_addr constant [26 x i8] c"VK_LAYER_GOOGLE_threading\00", align 1
@.str.37 = private unnamed_addr constant [37 x i8] c"VK_LAYER_LUNARG_parameter_validation\00", align 1
@.str.38 = private unnamed_addr constant [31 x i8] c"VK_LAYER_LUNARG_object_tracker\00", align 1
@.str.39 = private unnamed_addr constant [32 x i8] c"VK_LAYER_LUNARG_core_validation\00", align 1
@.str.40 = private unnamed_addr constant [31 x i8] c"VK_LAYER_GOOGLE_unique_objects\00", align 1
@_ZZNK2rx2vk12DeviceMemory3mapEP10VkDevice_TmmjPPhE32trace_event_unique_catstatic1397 = linkonce_odr hidden local_unnamed_addr global i8* null, comdat, align 8
@_ZGVZNK2rx2vk12DeviceMemory3mapEP10VkDevice_TmmjPPhE32trace_event_unique_catstatic1397 = linkonce_odr hidden global i64 0, comdat, align 8
@.str.41 = private unnamed_addr constant [18 x i8] c"DeviceMemory::map\00", align 1
@vkMapMemory = external local_unnamed_addr global i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)*, align 8
@vkUnmapMemory = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)*, align 8
@vkCreateShaderModule = external local_unnamed_addr global i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)*, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@vkGetBufferMemoryRequirements = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)*, align 8
@vkGetImageMemoryRequirements = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)*, align 8
@__func__._ZN2rx12_GLOBAL__N_134AllocateAndBindBufferOrImageMemoryINS_2vk5ImageEEEN5angle6ResultEPNS2_7ContextEjPjRK20VkMemoryRequirementsPKvPT_PNS2_12DeviceMemoryE = private unnamed_addr constant [35 x i8] c"AllocateAndBindBufferOrImageMemory\00", align 1
@__func__._ZN2rx12_GLOBAL__N_131FindAndAllocateCompatibleMemoryEPNS_2vk7ContextERKNS1_16MemoryPropertiesEjPjRK20VkMemoryRequirementsPKvPNS1_12DeviceMemoryE = private unnamed_addr constant [32 x i8] c"FindAndAllocateCompatibleMemory\00", align 1
@vkAllocateMemory = external local_unnamed_addr global i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)*, align 8
@vkBindImageMemory = external local_unnamed_addr global i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)*, align 8
@vkBindBufferMemory = external local_unnamed_addr global i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)*, align 8
@switch.table._ZN2rx5gl_vk20GetPrimitiveTopologyEN2gl13PrimitiveModeE = private unnamed_addr constant [15 x i32] [i32 0, i32 1, i32 2, i32 2, i32 3, i32 4, i32 5, i32 0, i32 0, i32 0, i32 6, i32 7, i32 8, i32 9, i32 10], align 4
@switch.table._ZN2rx5gl_vk11GetCullModeERKN2gl15RasterizerStateE = private unnamed_addr constant [3 x i32] [i32 2, i32 1, i32 3], align 4
@switch.table._ZN2rx5gl_vk12GetImageTypeEN2gl11TextureTypeE = private unnamed_addr constant [9 x i32] [i32 1, i32 1, i32 1, i32 1, i32 2, i32 1, i32 2147483647, i32 1, i32 1], align 4
@switch.table._ZN2rx5gl_vk16GetImageViewTypeEN2gl11TextureTypeE = private unnamed_addr constant [9 x i32] [i32 1, i32 5, i32 1, i32 5, i32 2, i32 1, i32 2147483647, i32 3, i32 6], align 4

@_ZN2rx2vk7ContextD1Ev = hidden unnamed_addr alias void (%"class.rx::vk::Context"*), void (%"class.rx::vk::Context"*)* @_ZN2rx2vk7ContextD2Ev
@_ZN2rx2vk16MemoryPropertiesC1Ev = hidden unnamed_addr alias void (%"class.rx::vk::MemoryProperties"*), void (%"class.rx::vk::MemoryProperties"*)* @_ZN2rx2vk16MemoryPropertiesC2Ev
@_ZN2rx2vk13StagingBufferC1Ev = hidden unnamed_addr alias void (%"class.rx::vk::StagingBuffer"*), void (%"class.rx::vk::StagingBuffer"*)* @_ZN2rx2vk13StagingBufferC2Ev
@_ZN2rx2vk13GarbageObjectC1Ev = hidden unnamed_addr alias void (%"class.rx::vk::GarbageObject"*), void (%"class.rx::vk::GarbageObject"*)* @_ZN2rx2vk13GarbageObjectC2Ev
@_ZN2rx2vk13GarbageObjectC1ENS0_10HandleTypeEPNS0_15GarbageHandle_TE = hidden unnamed_addr alias void (%"class.rx::vk::GarbageObject"*, i32, %"struct.rx::vk::GarbageHandle_T"*), void (%"class.rx::vk::GarbageObject"*, i32, %"struct.rx::vk::GarbageHandle_T"*)* @_ZN2rx2vk13GarbageObjectC2ENS0_10HandleTypeEPNS0_15GarbageHandle_TE
@_ZN2rx2vk13GarbageObjectC1EOS1_ = hidden unnamed_addr alias void (%"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"*), void (%"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"*)* @_ZN2rx2vk13GarbageObjectC2EOS1_
@_ZN2rx2vk16ClearValuesArrayC1Ev = hidden unnamed_addr alias void (%"class.rx::vk::ClearValuesArray"*), void (%"class.rx::vk::ClearValuesArray"*)* @_ZN2rx2vk16ClearValuesArrayC2Ev
@_ZN2rx2vk16ClearValuesArrayD1Ev = hidden unnamed_addr alias void (%"class.rx::vk::ClearValuesArray"*), void (%"class.rx::vk::ClearValuesArray"*)* @_ZN2rx2vk16ClearValuesArrayD2Ev
@_ZN2rx2vk16ClearValuesArrayC1ERKS1_ = hidden unnamed_addr alias void (%"class.rx::vk::ClearValuesArray"*, %"class.rx::vk::ClearValuesArray"*), void (%"class.rx::vk::ClearValuesArray"*, %"class.rx::vk::ClearValuesArray"*)* @_ZN2rx2vk16ClearValuesArrayC2ERKS1_
@_ZN2rx2vk21ResourceSerialFactoryC1Ev = hidden unnamed_addr alias void (%"class.rx::vk::ResourceSerialFactory"*), void (%"class.rx::vk::ResourceSerialFactory"*)* @_ZN2rx2vk21ResourceSerialFactoryC2Ev
@_ZN2rx2vk21ResourceSerialFactoryD1Ev = hidden unnamed_addr alias void (%"class.rx::vk::ResourceSerialFactory"*), void (%"class.rx::vk::ResourceSerialFactory"*)* @_ZN2rx2vk21ResourceSerialFactoryD2Ev

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #0

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5angle5ToEGLENS_6ResultEPN2rx9DisplayVkEi(%"class.egl::Error"* noalias sret, i32, %"class.rx::DisplayVk"*, i32) local_unnamed_addr #1 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %4
  tail call void @_ZN2rx9DisplayVk11getEGLErrorEi(%"class.egl::Error"* sret %0, %"class.rx::DisplayVk"* %2, i32 %3) #20
  br label %12

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %8, align 8, !alias.scope !2
  %9 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %9, align 4, !alias.scope !2
  %10 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %11 = bitcast %"class.std::__1::unique_ptr.984"* %10 to i64*
  store i64 0, i64* %11, align 8, !alias.scope !2
  br label %12

12:                                               ; preds = %7, %6
  ret void
}

declare void @_ZN2rx9DisplayVk11getEGLErrorEi(%"class.egl::Error"* sret, %"class.rx::DisplayVk"*, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN2rx18VulkanResultStringE8VkResult(i32) local_unnamed_addr #3 {
  switch i32 %0, label %28 [
    i32 0, label %29
    i32 1, label %2
    i32 2, label %3
    i32 3, label %4
    i32 4, label %5
    i32 5, label %6
    i32 1000001003, label %7
    i32 -1, label %8
    i32 -2, label %9
    i32 -3, label %10
    i32 -4, label %11
    i32 -5, label %12
    i32 -6, label %13
    i32 -7, label %14
    i32 -8, label %15
    i32 -9, label %16
    i32 -10, label %17
    i32 -11, label %18
    i32 -1000000000, label %19
    i32 -1000000001, label %20
    i32 -1000001004, label %21
    i32 -1000003001, label %22
    i32 -1000011001, label %23
    i32 -1000012000, label %24
    i32 -1000069000, label %25
    i32 -12, label %26
    i32 -1000072003, label %27
  ]

2:                                                ; preds = %1
  br label %29

3:                                                ; preds = %1
  br label %29

4:                                                ; preds = %1
  br label %29

5:                                                ; preds = %1
  br label %29

6:                                                ; preds = %1
  br label %29

7:                                                ; preds = %1
  br label %29

8:                                                ; preds = %1
  br label %29

9:                                                ; preds = %1
  br label %29

10:                                               ; preds = %1
  br label %29

11:                                               ; preds = %1
  br label %29

12:                                               ; preds = %1
  br label %29

13:                                               ; preds = %1
  br label %29

14:                                               ; preds = %1
  br label %29

15:                                               ; preds = %1
  br label %29

16:                                               ; preds = %1
  br label %29

17:                                               ; preds = %1
  br label %29

18:                                               ; preds = %1
  br label %29

19:                                               ; preds = %1
  br label %29

20:                                               ; preds = %1
  br label %29

21:                                               ; preds = %1
  br label %29

22:                                               ; preds = %1
  br label %29

23:                                               ; preds = %1
  br label %29

24:                                               ; preds = %1
  br label %29

25:                                               ; preds = %1
  br label %29

26:                                               ; preds = %1
  br label %29

27:                                               ; preds = %1
  br label %29

28:                                               ; preds = %1
  br label %29

29:                                               ; preds = %1, %28, %27, %26, %25, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4, %3, %2
  %30 = phi i8* [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.27, i64 0, i64 0), %28 ], [ getelementptr inbounds ([63 x i8], [63 x i8]* @.str.26, i64 0, i64 0), %27 ], [ getelementptr inbounds ([71 x i8], [71 x i8]* @.str.25, i64 0, i64 0), %26 ], [ getelementptr inbounds ([36 x i8], [36 x i8]* @.str.24, i64 0, i64 0), %25 ], [ getelementptr inbounds ([36 x i8], [36 x i8]* @.str.23, i64 0, i64 0), %24 ], [ getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22, i64 0, i64 0), %23 ], [ getelementptr inbounds ([139 x i8], [139 x i8]* @.str.21, i64 0, i64 0), %22 ], [ getelementptr inbounds ([87 x i8], [87 x i8]* @.str.20, i64 0, i64 0), %21 ], [ getelementptr inbounds ([93 x i8], [93 x i8]* @.str.19, i64 0, i64 0), %20 ], [ getelementptr inbounds ([33 x i8], [33 x i8]* @.str.18, i64 0, i64 0), %19 ], [ getelementptr inbounds ([51 x i8], [51 x i8]* @.str.17, i64 0, i64 0), %18 ], [ getelementptr inbounds ([55 x i8], [55 x i8]* @.str.16, i64 0, i64 0), %17 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @.str.15, i64 0, i64 0), %16 ], [ getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14, i64 0, i64 0), %15 ], [ getelementptr inbounds ([39 x i8], [39 x i8]* @.str.13, i64 0, i64 0), %14 ], [ getelementptr inbounds ([56 x i8], [56 x i8]* @.str.12, i64 0, i64 0), %13 ], [ getelementptr inbounds ([38 x i8], [38 x i8]* @.str.11, i64 0, i64 0), %12 ], [ getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i64 0, i64 0), %11 ], [ getelementptr inbounds ([87 x i8], [87 x i8]* @.str.9, i64 0, i64 0), %10 ], [ getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0), %9 ], [ getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7, i64 0, i64 0), %8 ], [ getelementptr inbounds ([123 x i8], [123 x i8]* @.str.6, i64 0, i64 0), %7 ], [ getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), %6 ], [ getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), %5 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), %4 ], [ getelementptr inbounds ([57 x i8], [57 x i8]* @.str.2, i64 0, i64 0), %3 ], [ getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), %2 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), %1 ]
  ret i8* %30
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2rx28GetAvailableValidationLayersERKNSt3__16vectorI17VkLayerPropertiesNS0_9allocatorIS2_EEEEbPN5angle11FixedVectorIPKcLm20ENS0_5arrayISB_Lm20EEEEE(%"class.std::__1::vector.989"* nocapture readonly dereferenceable(24), i1 zeroext, %"class.angle::FixedVector.996"* nocapture) local_unnamed_addr #1 {
  %4 = alloca %"class.gl::LogMessage", align 8
  %5 = alloca %"class.gl::LogMessage", align 8
  %6 = tail call fastcc zeroext i1 @_ZN2rx12_GLOBAL__N_118HasValidationLayerERKNSt3__16vectorI17VkLayerPropertiesNS1_9allocatorIS3_EEEEPKc(%"class.std::__1::vector.989"* dereferenceable(24) %0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @_ZN2rx12_GLOBAL__N_129kVkKhronosValidationLayerNameE, i64 0, i64 0)) #20
  br i1 %6, label %7, label %14

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.angle::FixedVector.996", %"class.angle::FixedVector.996"* %2, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.angle::FixedVector.996", %"class.angle::FixedVector.996"* %2, i64 0, i32 0, i32 0, i64 %9
  %11 = bitcast i8** %10 to i64*
  store i64 ptrtoint ([28 x i8]* @_ZN2rx12_GLOBAL__N_129kVkKhronosValidationLayerNameE to i64), i64* %11, align 8
  %12 = load i64, i64* %8, align 8
  %13 = add i64 %12, 1
  store i64 %13, i64* %8, align 8
  br label %81

14:                                               ; preds = %3
  %15 = tail call fastcc zeroext i1 @_ZN2rx12_GLOBAL__N_118HasValidationLayerERKNSt3__16vectorI17VkLayerPropertiesNS1_9allocatorIS3_EEEEPKc(%"class.std::__1::vector.989"* dereferenceable(24) %0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @_ZN2rx12_GLOBAL__N_130kVkStandardValidationLayerNameE, i64 0, i64 0)) #20
  br i1 %15, label %16, label %23

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.angle::FixedVector.996", %"class.angle::FixedVector.996"* %2, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.angle::FixedVector.996", %"class.angle::FixedVector.996"* %2, i64 0, i32 0, i32 0, i64 %18
  %20 = bitcast i8** %19 to i64*
  store i64 ptrtoint ([36 x i8]* @_ZN2rx12_GLOBAL__N_130kVkStandardValidationLayerNameE to i64), i64* %20, align 8
  %21 = load i64, i64* %17, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %17, align 8
  br label %81

23:                                               ; preds = %14
  %24 = load i8*, i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @_ZN2rx12_GLOBAL__N_123kVkValidationLayerNamesE, i64 0, i64 0), align 16
  %25 = tail call fastcc zeroext i1 @_ZN2rx12_GLOBAL__N_118HasValidationLayerERKNSt3__16vectorI17VkLayerPropertiesNS1_9allocatorIS3_EEEEPKc(%"class.std::__1::vector.989"* dereferenceable(24) %0, i8* %24) #20
  br i1 %25, label %26, label %66

26:                                               ; preds = %23
  %27 = load i8*, i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @_ZN2rx12_GLOBAL__N_123kVkValidationLayerNamesE, i64 0, i64 1), align 8
  %28 = tail call fastcc zeroext i1 @_ZN2rx12_GLOBAL__N_118HasValidationLayerERKNSt3__16vectorI17VkLayerPropertiesNS1_9allocatorIS3_EEEEPKc(%"class.std::__1::vector.989"* dereferenceable(24) %0, i8* %27) #20
  br i1 %28, label %29, label %66

29:                                               ; preds = %26
  %30 = load i8*, i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @_ZN2rx12_GLOBAL__N_123kVkValidationLayerNamesE, i64 0, i64 2), align 16
  %31 = tail call fastcc zeroext i1 @_ZN2rx12_GLOBAL__N_118HasValidationLayerERKNSt3__16vectorI17VkLayerPropertiesNS1_9allocatorIS3_EEEEPKc(%"class.std::__1::vector.989"* dereferenceable(24) %0, i8* %30) #20
  br i1 %31, label %32, label %66

32:                                               ; preds = %29
  %33 = load i8*, i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @_ZN2rx12_GLOBAL__N_123kVkValidationLayerNamesE, i64 0, i64 3), align 8
  %34 = tail call fastcc zeroext i1 @_ZN2rx12_GLOBAL__N_118HasValidationLayerERKNSt3__16vectorI17VkLayerPropertiesNS1_9allocatorIS3_EEEEPKc(%"class.std::__1::vector.989"* dereferenceable(24) %0, i8* %33) #20
  br i1 %34, label %35, label %66

35:                                               ; preds = %32
  %36 = load i8*, i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @_ZN2rx12_GLOBAL__N_123kVkValidationLayerNamesE, i64 0, i64 4), align 16
  %37 = tail call fastcc zeroext i1 @_ZN2rx12_GLOBAL__N_118HasValidationLayerERKNSt3__16vectorI17VkLayerPropertiesNS1_9allocatorIS3_EEEEPKc(%"class.std::__1::vector.989"* dereferenceable(24) %0, i8* %36) #20
  br i1 %37, label %38, label %66

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.angle::FixedVector.996", %"class.angle::FixedVector.996"* %2, i64 0, i32 1
  %40 = load i64, i64* bitcast ([5 x i8*]* @_ZN2rx12_GLOBAL__N_123kVkValidationLayerNamesE to i64*), align 16
  %41 = load i64, i64* %39, align 8
  %42 = getelementptr inbounds %"class.angle::FixedVector.996", %"class.angle::FixedVector.996"* %2, i64 0, i32 0, i32 0, i64 %41
  %43 = bitcast i8** %42 to i64*
  store i64 %40, i64* %43, align 8
  %44 = load i64, i64* %39, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %39, align 8
  %46 = load i64, i64* bitcast (i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @_ZN2rx12_GLOBAL__N_123kVkValidationLayerNamesE, i64 0, i64 1) to i64*), align 8
  %47 = getelementptr inbounds %"class.angle::FixedVector.996", %"class.angle::FixedVector.996"* %2, i64 0, i32 0, i32 0, i64 %45
  %48 = bitcast i8** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = load i64, i64* %39, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %39, align 8
  %51 = load i64, i64* bitcast (i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @_ZN2rx12_GLOBAL__N_123kVkValidationLayerNamesE, i64 0, i64 2) to i64*), align 16
  %52 = getelementptr inbounds %"class.angle::FixedVector.996", %"class.angle::FixedVector.996"* %2, i64 0, i32 0, i32 0, i64 %50
  %53 = bitcast i8** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = load i64, i64* %39, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %39, align 8
  %56 = load i64, i64* bitcast (i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @_ZN2rx12_GLOBAL__N_123kVkValidationLayerNamesE, i64 0, i64 3) to i64*), align 8
  %57 = getelementptr inbounds %"class.angle::FixedVector.996", %"class.angle::FixedVector.996"* %2, i64 0, i32 0, i32 0, i64 %55
  %58 = bitcast i8** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = load i64, i64* %39, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %39, align 8
  %61 = load i64, i64* bitcast (i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @_ZN2rx12_GLOBAL__N_123kVkValidationLayerNamesE, i64 0, i64 4) to i64*), align 16
  %62 = getelementptr inbounds %"class.angle::FixedVector.996", %"class.angle::FixedVector.996"* %2, i64 0, i32 0, i32 0, i64 %60
  %63 = bitcast i8** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = load i64, i64* %39, align 8
  %65 = add i64 %64, 1
  store i64 %65, i64* %39, align 8
  br label %81

66:                                               ; preds = %23, %26, %29, %32, %35
  br i1 %1, label %67, label %74

67:                                               ; preds = %66
  %68 = tail call zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32 3) #20
  br i1 %68, label %69, label %81

69:                                               ; preds = %67
  %70 = bitcast %"class.gl::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %70) #20
  call void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"* nonnull %4, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__FUNCTION__._ZN2rx28GetAvailableValidationLayersERKNSt3__16vectorI17VkLayerPropertiesNS0_9allocatorIS2_EEEEbPN5angle11FixedVectorIPKcLm20ENS0_5arrayISB_Lm20EEEEE, i64 0, i64 0), i32 300, i32 3) #20
  %71 = getelementptr inbounds %"class.gl::LogMessage", %"class.gl::LogMessage"* %4, i64 0, i32 4
  %72 = bitcast %"class.std::__1::basic_ostringstream"* %71 to %"class.std::__1::basic_ostream"*
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %72, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29, i64 0, i64 0), i64 37) #20
  call void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"* nonnull %4) #20
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %70) #20
  br label %81

74:                                               ; preds = %66
  %75 = tail call zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32 2) #20
  br i1 %75, label %76, label %81

76:                                               ; preds = %74
  %77 = bitcast %"class.gl::LogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %77) #20
  call void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"* nonnull %5, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__FUNCTION__._ZN2rx28GetAvailableValidationLayersERKNSt3__16vectorI17VkLayerPropertiesNS0_9allocatorIS2_EEEEbPN5angle11FixedVectorIPKcLm20ENS0_5arrayISB_Lm20EEEEE, i64 0, i64 0), i32 304, i32 2) #20
  %78 = getelementptr inbounds %"class.gl::LogMessage", %"class.gl::LogMessage"* %5, i64 0, i32 4
  %79 = bitcast %"class.std::__1::basic_ostringstream"* %78 to %"class.std::__1::basic_ostream"*
  %80 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %79, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29, i64 0, i64 0), i64 37) #20
  call void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"* nonnull %5) #20
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %77) #20
  br label %81

81:                                               ; preds = %38, %76, %74, %69, %67, %7, %16
  %82 = phi i1 [ true, %16 ], [ true, %7 ], [ false, %67 ], [ false, %69 ], [ false, %74 ], [ false, %76 ], [ true, %38 ]
  ret i1 %82
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32) local_unnamed_addr #2

declare void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"*, i8*, i8*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"*) unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN2rx2vk26GetDepthStencilAspectFlagsERKN5angle6FormatE(%"struct.angle::Format"* nocapture readonly dereferenceable(104)) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %0, i64 0, i32 13
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  %5 = select i1 %4, i32 0, i32 2
  %6 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %0, i64 0, i32 14
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = select i1 %8, i32 0, i32 4
  %10 = or i32 %9, %5
  ret i32 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN2rx2vk20GetFormatAspectFlagsERKN5angle6FormatE(%"struct.angle::Format"* nocapture readonly dereferenceable(104)) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %0, i64 0, i32 13
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  %5 = select i1 %4, i32 0, i32 2
  %6 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %0, i64 0, i32 14
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = select i1 %8, i32 0, i32 4
  %10 = or i32 %9, %5
  %11 = icmp eq i32 %10, 0
  %12 = select i1 %11, i32 1, i32 %10
  ret i32 %12
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx2vk7ContextC2EPNS_10RendererVkE(%"class.rx::vk::Context"* nocapture, %"class.rx::RendererVk"*) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::Context", %"class.rx::vk::Context"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2rx2vk7ContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.rx::vk::Context", %"class.rx::vk::Context"* %0, i64 0, i32 1
  store %"class.rx::RendererVk"* %1, %"class.rx::RendererVk"** %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2rx2vk7ContextD2Ev(%"class.rx::vk::Context"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2rx2vk7ContextD0Ev(%"class.rx::vk::Context"* nocapture readnone) unnamed_addr #8 align 2 {
  tail call void @llvm.trap() #21
  unreachable
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.VkDevice_T* @_ZNK2rx2vk7Context9getDeviceEv(%"class.rx::vk::Context"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::Context", %"class.rx::vk::Context"* %0, i64 0, i32 1
  %3 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %2, align 8
  %4 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %3, i64 0, i32 43
  %5 = load %struct.VkDevice_T*, %struct.VkDevice_T** %4, align 8
  ret %struct.VkDevice_T* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk16MemoryPropertiesC2Ev(%"class.rx::vk::MemoryProperties"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.rx::vk::MemoryProperties"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 520, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk16MemoryProperties4initEP18VkPhysicalDevice_T(%"class.rx::vk::MemoryProperties"*, %struct.VkPhysicalDevice_T*) local_unnamed_addr #1 align 2 {
  %3 = load void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)** @vkGetPhysicalDeviceMemoryProperties, align 8
  %4 = getelementptr inbounds %"class.rx::vk::MemoryProperties", %"class.rx::vk::MemoryProperties"* %0, i64 0, i32 0
  tail call void %3(%struct.VkPhysicalDevice_T* %1, %struct.VkPhysicalDeviceMemoryProperties* %4) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk16MemoryProperties7destroyEv(%"class.rx::vk::MemoryProperties"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.rx::vk::MemoryProperties"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 520, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2rx2vk16MemoryProperties24hasLazilyAllocatedMemoryEv(%"class.rx::vk::MemoryProperties"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::MemoryProperties", %"class.rx::vk::MemoryProperties"* %0, i64 0, i32 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = zext i32 %3 to i64
  br label %9

7:                                                ; preds = %9
  %8 = icmp ult i64 %15, %6
  br i1 %8, label %9, label %16

9:                                                ; preds = %5, %7
  %10 = phi i64 [ 0, %5 ], [ %15, %7 ]
  %11 = getelementptr inbounds %"class.rx::vk::MemoryProperties", %"class.rx::vk::MemoryProperties"* %0, i64 0, i32 0, i32 1, i64 %10, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 16
  %14 = icmp eq i32 %13, 0
  %15 = add nuw nsw i64 %10, 1
  br i1 %14, label %7, label %16

16:                                               ; preds = %9, %7, %1
  %17 = phi i1 [ false, %1 ], [ false, %7 ], [ true, %9 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2rx2vk16MemoryProperties25findCompatibleMemoryIndexEPNS0_7ContextERK20VkMemoryRequirementsjbPjS7_(%"class.rx::vk::MemoryProperties"* nocapture readonly, %"class.rx::vk::Context"*, %struct.VkMemoryRequirements* nocapture readonly dereferenceable(24), i32, i1 zeroext, i32* nocapture, i32* nocapture) local_unnamed_addr #1 align 2 {
  %8 = getelementptr inbounds %struct.VkMemoryRequirements, %struct.VkMemoryRequirements* %2, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %35, label %11

11:                                               ; preds = %7
  %12 = tail call i32 @llvm.cttz.i32(i32 %9, i1 true) #20, !range !7
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.rx::vk::MemoryProperties", %"class.rx::vk::MemoryProperties"* %0, i64 0, i32 0, i32 1, i64 %13, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, %3
  %17 = icmp eq i32 %16, %3
  br i1 %17, label %32, label %18

18:                                               ; preds = %11, %25
  %19 = phi i32 [ %23, %25 ], [ %9, %11 ]
  %20 = phi i32 [ %26, %25 ], [ %12, %11 ]
  %21 = shl i32 1, %20
  %22 = xor i32 %21, -1
  %23 = and i32 %19, %22
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %35, label %25

25:                                               ; preds = %18
  %26 = tail call i32 @llvm.cttz.i32(i32 %23, i1 true) #20, !range !7
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.rx::vk::MemoryProperties", %"class.rx::vk::MemoryProperties"* %0, i64 0, i32 0, i32 1, i64 %27, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, %3
  %31 = icmp eq i32 %30, %3
  br i1 %31, label %32, label %18

32:                                               ; preds = %25, %11
  %33 = phi i32 [ %12, %11 ], [ %26, %25 ]
  %34 = phi i32 [ %15, %11 ], [ %29, %25 ]
  store i32 %34, i32* %5, align 4
  store i32 %33, i32* %6, align 4
  br label %95

35:                                               ; preds = %18, %7
  %36 = and i32 %3, 2
  %37 = icmp eq i32 %36, 0
  %38 = or i1 %37, %10
  br i1 %38, label %63, label %39

39:                                               ; preds = %35
  %40 = tail call i32 @llvm.cttz.i32(i32 %9, i1 true) #20, !range !7
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"class.rx::vk::MemoryProperties", %"class.rx::vk::MemoryProperties"* %0, i64 0, i32 0, i32 1, i64 %41, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, 6
  %45 = icmp eq i32 %44, 6
  br i1 %45, label %60, label %46

46:                                               ; preds = %39, %53
  %47 = phi i32 [ %51, %53 ], [ %9, %39 ]
  %48 = phi i32 [ %54, %53 ], [ %40, %39 ]
  %49 = shl i32 1, %48
  %50 = xor i32 %49, -1
  %51 = and i32 %47, %50
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %63, label %53

53:                                               ; preds = %46
  %54 = tail call i32 @llvm.cttz.i32(i32 %51, i1 true) #20, !range !7
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %"class.rx::vk::MemoryProperties", %"class.rx::vk::MemoryProperties"* %0, i64 0, i32 0, i32 1, i64 %55, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = and i32 %57, 6
  %59 = icmp eq i32 %58, 6
  br i1 %59, label %60, label %46

60:                                               ; preds = %53, %39
  %61 = phi i32 [ %40, %39 ], [ %54, %53 ]
  %62 = phi i32 [ %43, %39 ], [ %57, %53 ]
  store i32 %62, i32* %5, align 4
  store i32 %61, i32* %6, align 4
  br label %95

63:                                               ; preds = %46, %35
  %64 = xor i1 %4, true
  %65 = or i1 %10, %64
  br i1 %65, label %90, label %66

66:                                               ; preds = %63
  %67 = tail call i32 @llvm.cttz.i32(i32 %9, i1 true) #20, !range !7
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"class.rx::vk::MemoryProperties", %"class.rx::vk::MemoryProperties"* %0, i64 0, i32 0, i32 1, i64 %68, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = and i32 %70, 1
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %87

73:                                               ; preds = %66, %80
  %74 = phi i32 [ %78, %80 ], [ %9, %66 ]
  %75 = phi i32 [ %81, %80 ], [ %67, %66 ]
  %76 = shl i32 1, %75
  %77 = xor i32 %76, -1
  %78 = and i32 %74, %77
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %90, label %80

80:                                               ; preds = %73
  %81 = tail call i32 @llvm.cttz.i32(i32 %78, i1 true) #20, !range !7
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.rx::vk::MemoryProperties", %"class.rx::vk::MemoryProperties"* %0, i64 0, i32 0, i32 1, i64 %82, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = and i32 %84, 1
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %73, label %87

87:                                               ; preds = %80, %66
  %88 = phi i32 [ %67, %66 ], [ %81, %80 ]
  %89 = phi i32 [ %70, %66 ], [ %84, %80 ]
  store i32 %89, i32* %5, align 4
  store i32 %88, i32* %6, align 4
  br label %95

90:                                               ; preds = %73, %63
  %91 = bitcast %"class.rx::vk::Context"* %1 to void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)***
  %92 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)**, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %92, i64 2
  %94 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %93, align 8
  tail call void %94(%"class.rx::vk::Context"* %1, i32 -9, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__._ZNK2rx2vk16MemoryProperties25findCompatibleMemoryIndexEPNS0_7ContextERK20VkMemoryRequirementsjbPjS7_, i64 0, i64 0), i32 426) #20
  br label %95

95:                                               ; preds = %87, %60, %32, %90
  %96 = phi i32 [ 1, %90 ], [ 0, %60 ], [ 0, %32 ], [ 0, %87 ]
  ret i32 %96
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx2vk13StagingBufferC2Ev(%"class.rx::vk::StagingBuffer"* nocapture) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::StagingBuffer", %"class.rx::vk::StagingBuffer"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = bitcast %struct.VkBuffer_T** %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk13StagingBuffer7destroyEPNS_10RendererVkE(%"class.rx::vk::StagingBuffer"* nocapture, %"class.rx::RendererVk"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::StagingBuffer", %"class.rx::vk::StagingBuffer"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %struct.VkBuffer_T*, %struct.VkBuffer_T** %3, align 8
  %5 = icmp eq %struct.VkBuffer_T* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 43
  %8 = load %struct.VkDevice_T*, %struct.VkDevice_T** %7, align 8
  %9 = load void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)** @vkDestroyBuffer, align 8
  tail call void %9(%struct.VkDevice_T* %8, %struct.VkBuffer_T* nonnull %4, %struct.VkAllocationCallbacks* null) #20
  store %struct.VkBuffer_T* null, %struct.VkBuffer_T** %3, align 8
  br label %10

10:                                               ; preds = %2, %6
  %11 = getelementptr inbounds %"class.rx::vk::StagingBuffer", %"class.rx::vk::StagingBuffer"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = load %struct.VmaAllocation_T*, %struct.VmaAllocation_T** %11, align 8
  %13 = icmp eq %struct.VmaAllocation_T* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 67, i32 0, i32 0
  %16 = load %struct.VmaAllocator_T*, %struct.VmaAllocator_T** %15, align 8
  tail call void @_ZN3vma10FreeMemoryEP14VmaAllocator_TP15VmaAllocation_T(%struct.VmaAllocator_T* %16, %struct.VmaAllocation_T* nonnull %12) #20
  store %struct.VmaAllocation_T* null, %struct.VmaAllocation_T** %11, align 8
  br label %17

17:                                               ; preds = %10, %14
  %18 = getelementptr inbounds %"class.rx::vk::StagingBuffer", %"class.rx::vk::StagingBuffer"* %0, i64 0, i32 3
  store i64 0, i64* %18, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx2vk13StagingBuffer4initEPNS0_7ContextEmNS0_12StagingUsageE(%"class.rx::vk::StagingBuffer"*, %"class.rx::vk::Context"*, i64, i32) local_unnamed_addr #1 align 2 {
  %5 = alloca i8*, align 8
  %6 = alloca %struct.VkBufferCreateInfo, align 8
  %7 = alloca i32, align 4
  %8 = bitcast %struct.VkBufferCreateInfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 56, i1 false)
  %9 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %6, i64 0, i32 0
  store i32 12, i32* %9, align 8
  %10 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %6, i64 0, i32 2
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %6, i64 0, i32 3
  store i64 %2, i64* %11, align 8
  %12 = icmp ult i32 %3, 3
  br i1 %12, label %13, label %17

13:                                               ; preds = %4
  %14 = sext i32 %3 to i64
  %15 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN2rx5gl_vk11GetCullModeERKN2gl15RasterizerStateE, i64 0, i64 %14
  %16 = load i32, i32* %15, align 4
  br label %17

17:                                               ; preds = %4, %13
  %18 = phi i32 [ %16, %13 ], [ 0, %4 ]
  %19 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %6, i64 0, i32 4
  store i32 %18, i32* %19, align 8
  %20 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %6, i64 0, i32 5
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %6, i64 0, i32 6
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %6, i64 0, i32 7
  store i32* null, i32** %22, align 8
  %23 = getelementptr inbounds %"class.rx::vk::Context", %"class.rx::vk::Context"* %1, i64 0, i32 1
  %24 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %23, align 8
  %25 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #20
  store i32 0, i32* %7, align 4
  %26 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %24, i64 0, i32 7, i32 45, i32 4
  %27 = load i8, i8* %26, align 8, !range !8
  %28 = icmp ne i8 %27, 0
  %29 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %24, i64 0, i32 67, i32 0, i32 0
  %30 = load %struct.VmaAllocator_T*, %struct.VmaAllocator_T** %29, align 8
  %31 = getelementptr inbounds %"class.rx::vk::StagingBuffer", %"class.rx::vk::StagingBuffer"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = getelementptr inbounds %"class.rx::vk::StagingBuffer", %"class.rx::vk::StagingBuffer"* %0, i64 0, i32 2, i32 0, i32 0
  %33 = call i32 @_ZN3vma12CreateBufferEP14VmaAllocator_TPK18VkBufferCreateInfojjbPjPP10VkBuffer_TPP15VmaAllocation_T(%struct.VmaAllocator_T* %30, %struct.VkBufferCreateInfo* nonnull %6, i32 6, i32 0, i1 zeroext %28, i32* nonnull %7, %struct.VkBuffer_T** %31, %struct.VmaAllocation_T** %32) #20
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %40, label %35, !prof !9

35:                                               ; preds = %17
  %36 = bitcast %"class.rx::vk::Context"* %1 to void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)***
  %37 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)**, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %37, i64 2
  %39 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %38, align 8
  call void %39(%"class.rx::vk::Context"* %1, i32 %33, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__func__._ZN2rx2vk13StagingBuffer4initEPNS0_7ContextEmNS0_12StagingUsageE, i64 0, i64 0), i32 463) #20
  br label %60

40:                                               ; preds = %17
  %41 = getelementptr inbounds %"class.rx::vk::StagingBuffer", %"class.rx::vk::StagingBuffer"* %0, i64 0, i32 3
  store i64 %2, i64* %41, align 8
  %42 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %24, i64 0, i32 7, i32 41, i32 4
  %43 = load i8, i8* %42, align 8, !range !8
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %60, label %45

45:                                               ; preds = %40
  %46 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #20
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %47 = load %struct.VmaAllocator_T*, %struct.VmaAllocator_T** %29, align 8
  %48 = load %struct.VmaAllocation_T*, %struct.VmaAllocation_T** %32, align 8
  %49 = call i32 @_ZN3vma9MapMemoryEP14VmaAllocator_TP15VmaAllocation_TPPv(%struct.VmaAllocator_T* %47, %struct.VmaAllocation_T* %48, i8** nonnull %5) #20
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %55, !prof !9

51:                                               ; preds = %45
  %52 = load i8*, i8** %5, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %52, i8 63, i64 %2, i1 false) #20
  %53 = load %struct.VmaAllocator_T*, %struct.VmaAllocator_T** %29, align 8
  %54 = load %struct.VmaAllocation_T*, %struct.VmaAllocation_T** %32, align 8
  call void @_ZN3vma11UnmapMemoryEP14VmaAllocator_TP15VmaAllocation_T(%struct.VmaAllocator_T* %53, %struct.VmaAllocation_T* %54) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #20
  br label %60

55:                                               ; preds = %45
  %56 = bitcast %"class.rx::vk::Context"* %1 to void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)***
  %57 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)**, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %57, i64 2
  %59 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %58, align 8
  call void %59(%"class.rx::vk::Context"* %1, i32 %49, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__._ZN2rx2vk22InitMappableAllocationEPNS0_7ContextERKNS0_9AllocatorEPNS0_10AllocationEmij, i64 0, i64 0), i32 503) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #20
  br label %60

60:                                               ; preds = %40, %51, %55, %35
  %61 = phi i32 [ 1, %55 ], [ 1, %35 ], [ 0, %51 ], [ 0, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #20
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #20
  ret i32 %61
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx2vk22InitMappableAllocationEPNS0_7ContextERKNS0_9AllocatorEPNS0_10AllocationEmij(%"class.rx::vk::Context"*, %"class.rx::vk::Allocator"* nocapture readonly dereferenceable(8), %"class.rx::vk::Allocation"* nocapture readonly, i64, i32, i32) local_unnamed_addr #1 {
  %7 = alloca i8*, align 8
  %8 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #20
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %9 = getelementptr inbounds %"class.rx::vk::Allocator", %"class.rx::vk::Allocator"* %1, i64 0, i32 0, i32 0
  %10 = load %struct.VmaAllocator_T*, %struct.VmaAllocator_T** %9, align 8
  %11 = getelementptr inbounds %"class.rx::vk::Allocation", %"class.rx::vk::Allocation"* %2, i64 0, i32 0, i32 0
  %12 = load %struct.VmaAllocation_T*, %struct.VmaAllocation_T** %11, align 8
  %13 = call i32 @_ZN3vma9MapMemoryEP14VmaAllocator_TP15VmaAllocation_TPPv(%struct.VmaAllocator_T* %10, %struct.VmaAllocation_T* %12, i8** nonnull %7) #20
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %20, label %15, !prof !9

15:                                               ; preds = %6
  %16 = bitcast %"class.rx::vk::Context"* %0 to void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)***
  %17 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)**, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %17, i64 2
  %19 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %18, align 8
  call void %19(%"class.rx::vk::Context"* %0, i32 %13, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__._ZN2rx2vk22InitMappableAllocationEPNS0_7ContextERKNS0_9AllocatorEPNS0_10AllocationEmij, i64 0, i64 0), i32 503) #20
  br label %31

20:                                               ; preds = %6
  %21 = load i8*, i8** %7, align 8
  %22 = trunc i32 %4 to i8
  call void @llvm.memset.p0i8.i64(i8* align 1 %21, i8 %22, i64 %3, i1 false)
  %23 = and i32 %5, 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = load %struct.VmaAllocator_T*, %struct.VmaAllocator_T** %9, align 8
  %27 = load %struct.VmaAllocation_T*, %struct.VmaAllocation_T** %11, align 8
  call void @_ZN3vma15FlushAllocationEP14VmaAllocator_TP15VmaAllocation_Tmm(%struct.VmaAllocator_T* %26, %struct.VmaAllocation_T* %27, i64 0, i64 %3) #20
  br label %28

28:                                               ; preds = %25, %20
  %29 = load %struct.VmaAllocator_T*, %struct.VmaAllocator_T** %9, align 8
  %30 = load %struct.VmaAllocation_T*, %struct.VmaAllocation_T** %11, align 8
  call void @_ZN3vma11UnmapMemoryEP14VmaAllocator_TP15VmaAllocation_T(%struct.VmaAllocator_T* %29, %struct.VmaAllocation_T* %30) #20
  br label %31

31:                                               ; preds = %15, %28
  %32 = phi i32 [ 0, %28 ], [ 1, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #20
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk13StagingBuffer7releaseEPNS_9ContextVkE(%"class.rx::vk::StagingBuffer"* nocapture, %"class.rx::ContextVk"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.rx::vk::GarbageObject", align 8
  %4 = alloca %"class.rx::vk::GarbageObject", align 8
  %5 = getelementptr inbounds %"class.rx::vk::StagingBuffer", %"class.rx::vk::StagingBuffer"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %struct.VkBuffer_T*, %struct.VkBuffer_T** %5, align 8
  %7 = icmp eq %struct.VkBuffer_T* %6, null
  br i1 %7, label %32, label %8

8:                                                ; preds = %2
  %9 = ptrtoint %struct.VkBuffer_T* %6 to i64
  %10 = bitcast %"class.rx::vk::GarbageObject"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #20
  store %struct.VkBuffer_T* null, %struct.VkBuffer_T** %5, align 8, !noalias !10
  %11 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %4, i64 0, i32 0
  store i32 4, i32* %11, align 8, !alias.scope !10
  %12 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %4, i64 0, i32 1
  %13 = bitcast %"struct.rx::vk::GarbageHandle_T"** %12 to i64*
  store i64 %9, i64* %13, align 8, !alias.scope !10
  %14 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 51, i32 0, i32 1
  %15 = load %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"** %14, align 8
  %16 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 51, i32 0, i32 2, i32 0, i32 0
  %17 = load %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"** %16, align 8
  %18 = icmp ult %"class.rx::vk::GarbageObject"* %15, %17
  br i1 %18, label %19, label %29

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %15, i64 0, i32 0
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %15, i64 0, i32 1
  store %"struct.rx::vk::GarbageHandle_T"* null, %"struct.rx::vk::GarbageHandle_T"** %21, align 8
  %22 = bitcast %"struct.rx::vk::GarbageHandle_T"** %21 to i64*
  %23 = load i64, i64* %13, align 8
  store i64 %23, i64* %22, align 8
  store i64 0, i64* %13, align 8
  %24 = load i32, i32* %20, align 4
  %25 = load i32, i32* %11, align 8
  store i32 %25, i32* %20, align 4
  store i32 %24, i32* %11, align 8
  %26 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %15, i64 1
  %27 = ptrtoint %"class.rx::vk::GarbageObject"* %26 to i64
  %28 = bitcast %"class.rx::vk::GarbageObject"** %14 to i64*
  store i64 %27, i64* %28, align 8
  br label %31

29:                                               ; preds = %8
  %30 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 51
  call void @_ZNSt3__16vectorIN2rx2vk13GarbageObjectENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector.693"* %30, %"class.rx::vk::GarbageObject"* nonnull dereferenceable(16) %4) #20
  br label %31

31:                                               ; preds = %29, %19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #20
  br label %32

32:                                               ; preds = %2, %31
  %33 = getelementptr inbounds %"class.rx::vk::StagingBuffer", %"class.rx::vk::StagingBuffer"* %0, i64 0, i32 2, i32 0, i32 0
  %34 = load %struct.VmaAllocation_T*, %struct.VmaAllocation_T** %33, align 8
  %35 = icmp eq %struct.VmaAllocation_T* %34, null
  br i1 %35, label %60, label %36

36:                                               ; preds = %32
  %37 = ptrtoint %struct.VmaAllocation_T* %34 to i64
  %38 = bitcast %"class.rx::vk::GarbageObject"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #20
  store %struct.VmaAllocation_T* null, %struct.VmaAllocation_T** %33, align 8, !noalias !15
  %39 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %3, i64 0, i32 0
  store i32 2, i32* %39, align 8, !alias.scope !15
  %40 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %3, i64 0, i32 1
  %41 = bitcast %"struct.rx::vk::GarbageHandle_T"** %40 to i64*
  store i64 %37, i64* %41, align 8, !alias.scope !15
  %42 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 51, i32 0, i32 1
  %43 = load %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"** %42, align 8
  %44 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 51, i32 0, i32 2, i32 0, i32 0
  %45 = load %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"** %44, align 8
  %46 = icmp ult %"class.rx::vk::GarbageObject"* %43, %45
  br i1 %46, label %47, label %57

47:                                               ; preds = %36
  %48 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %43, i64 0, i32 0
  store i32 0, i32* %48, align 8
  %49 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %43, i64 0, i32 1
  store %"struct.rx::vk::GarbageHandle_T"* null, %"struct.rx::vk::GarbageHandle_T"** %49, align 8
  %50 = bitcast %"struct.rx::vk::GarbageHandle_T"** %49 to i64*
  %51 = load i64, i64* %41, align 8
  store i64 %51, i64* %50, align 8
  store i64 0, i64* %41, align 8
  %52 = load i32, i32* %48, align 4
  %53 = load i32, i32* %39, align 8
  store i32 %53, i32* %48, align 4
  store i32 %52, i32* %39, align 8
  %54 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %43, i64 1
  %55 = ptrtoint %"class.rx::vk::GarbageObject"* %54 to i64
  %56 = bitcast %"class.rx::vk::GarbageObject"** %42 to i64*
  store i64 %55, i64* %56, align 8
  br label %59

57:                                               ; preds = %36
  %58 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 51
  call void @_ZNSt3__16vectorIN2rx2vk13GarbageObjectENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector.693"* %58, %"class.rx::vk::GarbageObject"* nonnull dereferenceable(16) %3) #20
  br label %59

59:                                               ; preds = %57, %47
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #20
  br label %60

60:                                               ; preds = %32, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk13StagingBuffer14collectGarbageEPNS_10RendererVkENS_6SerialE(%"class.rx::vk::StagingBuffer"* nocapture, %"class.rx::RendererVk"*, i64) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::vector.693", align 8
  %5 = alloca %"class.rx::vk::GarbageObject", align 8
  %6 = alloca %"class.rx::vk::GarbageObject", align 8
  %7 = alloca %"class.rx::vk::SharedResourceUse", align 8
  %8 = bitcast %"class.std::__1::vector.693"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #20
  %9 = getelementptr inbounds %"class.std::__1::vector.693", %"class.std::__1::vector.693"* %4, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.693", %"class.std::__1::vector.693"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #20
  %11 = bitcast %"class.rx::vk::GarbageObject"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #20
  %12 = getelementptr inbounds %"class.rx::vk::StagingBuffer", %"class.rx::vk::StagingBuffer"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.rx::vk::Buffer", %"class.rx::vk::Buffer"* %12, i64 0, i32 0, i32 0
  %14 = bitcast %"class.rx::vk::Buffer"* %12 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !20
  store %struct.VkBuffer_T* null, %struct.VkBuffer_T** %13, align 8, !noalias !20
  %16 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %5, i64 0, i32 0
  store i32 4, i32* %16, align 8, !alias.scope !20
  %17 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %5, i64 0, i32 1
  %18 = bitcast %"struct.rx::vk::GarbageHandle_T"** %17 to i64*
  store i64 %15, i64* %18, align 8, !alias.scope !20
  %19 = getelementptr inbounds %"class.std::__1::vector.693", %"class.std::__1::vector.693"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @_ZNSt3__16vectorIN2rx2vk13GarbageObjectENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector.693"* nonnull %4, %"class.rx::vk::GarbageObject"* nonnull dereferenceable(16) %5) #20
  %20 = getelementptr inbounds %"class.rx::vk::StagingBuffer", %"class.rx::vk::StagingBuffer"* %0, i64 0, i32 2
  %21 = bitcast %"class.rx::vk::Allocation"* %20 to i64*
  %22 = load i64, i64* %21, align 8, !noalias !25
  %23 = load %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"** %10, align 8
  %24 = load %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #20
  %25 = bitcast %"class.rx::vk::GarbageObject"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #20
  %26 = getelementptr inbounds %"class.rx::vk::StagingBuffer", %"class.rx::vk::StagingBuffer"* %0, i64 0, i32 2, i32 0, i32 0
  store %struct.VmaAllocation_T* null, %struct.VmaAllocation_T** %26, align 8, !noalias !25
  %27 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %6, i64 0, i32 0
  store i32 2, i32* %27, align 8, !alias.scope !25
  %28 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %6, i64 0, i32 1
  %29 = bitcast %"struct.rx::vk::GarbageHandle_T"** %28 to i64*
  store i64 %22, i64* %29, align 8, !alias.scope !25
  %30 = icmp ult %"class.rx::vk::GarbageObject"* %23, %24
  br i1 %30, label %31, label %41

31:                                               ; preds = %3
  %32 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %23, i64 0, i32 0
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %23, i64 0, i32 1
  store %"struct.rx::vk::GarbageHandle_T"* null, %"struct.rx::vk::GarbageHandle_T"** %33, align 8
  %34 = bitcast %"struct.rx::vk::GarbageHandle_T"** %33 to i64*
  %35 = load i64, i64* %29, align 8
  store i64 %35, i64* %34, align 8
  store i64 0, i64* %29, align 8
  %36 = load i32, i32* %32, align 4
  %37 = load i32, i32* %27, align 8
  store i32 %37, i32* %32, align 4
  store i32 %36, i32* %27, align 8
  %38 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %23, i64 1
  %39 = ptrtoint %"class.rx::vk::GarbageObject"* %38 to i64
  %40 = bitcast %"class.rx::vk::GarbageObject"** %10 to i64*
  store i64 %39, i64* %40, align 8
  br label %43

41:                                               ; preds = %3
  call void @_ZNSt3__16vectorIN2rx2vk13GarbageObjectENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector.693"* nonnull %4, %"class.rx::vk::GarbageObject"* nonnull dereferenceable(16) %6) #20
  %42 = load %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"** %10, align 8
  br label %43

43:                                               ; preds = %31, %41
  %44 = phi %"class.rx::vk::GarbageObject"* [ %38, %31 ], [ %42, %41 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #20
  %45 = bitcast %"class.rx::vk::SharedResourceUse"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #20
  %46 = call i8* @_Znwm(i64 16) #22
  %47 = bitcast i8* %46 to i32*
  %48 = getelementptr inbounds i8, i8* %46, i64 8
  %49 = bitcast i8* %48 to i64*
  %50 = bitcast %"class.rx::vk::SharedResourceUse"* %7 to i8**
  store i8* %46, i8** %50, align 8
  store i32 1, i32* %47, align 8
  store i64 %2, i64* %49, align 8
  %51 = load %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"** %9, align 8
  %52 = icmp eq %"class.rx::vk::GarbageObject"* %51, %44
  br i1 %52, label %68, label %53

53:                                               ; preds = %43
  %54 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 46
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %54) #20
  %55 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 47, i32 0, i32 1
  %56 = load %"class.rx::vk::SharedGarbage"*, %"class.rx::vk::SharedGarbage"** %55, align 8
  %57 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 47, i32 0, i32 2, i32 0, i32 0
  %58 = load %"class.rx::vk::SharedGarbage"*, %"class.rx::vk::SharedGarbage"** %57, align 8
  %59 = icmp ult %"class.rx::vk::SharedGarbage"* %56, %58
  br i1 %59, label %60, label %64

60:                                               ; preds = %53
  call void @_ZN2rx2vk13SharedGarbageC1EONS0_17SharedResourceUseEONSt3__16vectorINS0_13GarbageObjectENS4_9allocatorIS6_EEEE(%"class.rx::vk::SharedGarbage"* %56, %"class.rx::vk::SharedResourceUse"* nonnull dereferenceable(8) %7, %"class.std::__1::vector.693"* nonnull dereferenceable(24) %4) #20
  %61 = getelementptr inbounds %"class.rx::vk::SharedGarbage", %"class.rx::vk::SharedGarbage"* %56, i64 1
  %62 = ptrtoint %"class.rx::vk::SharedGarbage"* %61 to i64
  %63 = bitcast %"class.rx::vk::SharedGarbage"** %55 to i64*
  store i64 %62, i64* %63, align 8
  br label %66

64:                                               ; preds = %53
  %65 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 47
  call void @_ZNSt3__16vectorIN2rx2vk13SharedGarbageENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJNS2_17SharedResourceUseENS0_INS2_13GarbageObjectENS4_IS9_EEEEEEEvDpOT_(%"class.std::__1::vector.691"* %65, %"class.rx::vk::SharedResourceUse"* nonnull dereferenceable(8) %7, %"class.std::__1::vector.693"* nonnull dereferenceable(24) %4) #20
  br label %66

66:                                               ; preds = %64, %60
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %54) #20
  %67 = load %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"** %9, align 8
  br label %68

68:                                               ; preds = %43, %66
  %69 = phi %"class.rx::vk::GarbageObject"* [ %44, %43 ], [ %67, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #20
  %70 = icmp eq %"class.rx::vk::GarbageObject"* %69, null
  br i1 %70, label %75, label %71

71:                                               ; preds = %68
  %72 = ptrtoint %"class.rx::vk::GarbageObject"* %69 to i64
  %73 = bitcast %"class.rx::vk::GarbageObject"** %10 to i64*
  store i64 %72, i64* %73, align 8
  %74 = bitcast %"class.rx::vk::GarbageObject"* %69 to i8*
  call void @_ZdlPv(i8* %74) #22
  br label %75

75:                                               ; preds = %68, %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx2vk24InitMappableDeviceMemoryEPNS0_7ContextEPNS0_12DeviceMemoryEmij(%"class.rx::vk::Context"*, %"class.rx::vk::DeviceMemory"* nocapture readonly, i64, i32, i32) local_unnamed_addr #1 {
  %6 = alloca %"class.gl::TraceEvent::TraceEndOnScopeClose", align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct.VkMappedMemoryRange, align 8
  %9 = getelementptr inbounds %"class.rx::vk::Context", %"class.rx::vk::Context"* %0, i64 0, i32 1
  %10 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %9, align 8
  %11 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %10, i64 0, i32 43
  %12 = load %struct.VkDevice_T*, %struct.VkDevice_T** %11, align 8
  %13 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #20
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %14 = load atomic i8, i8* bitcast (i64* @_ZGVZNK2rx2vk12DeviceMemory3mapEP10VkDevice_TmmjPPhE32trace_event_unique_catstatic1397 to i8*) acquire, align 8
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %22, !prof !30

16:                                               ; preds = %5
  %17 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK2rx2vk12DeviceMemory3mapEP10VkDevice_TmmjPPhE32trace_event_unique_catstatic1397) #20
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  %20 = tail call %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() #20
  %21 = tail call i8* @_ZN5angle27GetTraceCategoryEnabledFlagEPNS_15PlatformMethodsEPKc(%"struct.angle::PlatformMethods"* %20, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i64 0, i64 0)) #20
  store i8* %21, i8** @_ZZNK2rx2vk12DeviceMemory3mapEP10VkDevice_TmmjPPhE32trace_event_unique_catstatic1397, align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK2rx2vk12DeviceMemory3mapEP10VkDevice_TmmjPPhE32trace_event_unique_catstatic1397) #20
  br label %22

22:                                               ; preds = %19, %16, %5
  %23 = bitcast %"class.gl::TraceEvent::TraceEndOnScopeClose"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #20
  %24 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %6, i64 0, i32 0
  %25 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %6, i64 0, i32 1
  %26 = bitcast %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false) #20
  store %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* null, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"** %24, align 8
  %27 = load i8*, i8** @_ZZNK2rx2vk12DeviceMemory3mapEP10VkDevice_TmmjPPhE32trace_event_unique_catstatic1397, align 8
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %40, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %6, i64 0, i32 1, i32 2
  %32 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %6, i64 0, i32 1, i32 1
  %33 = tail call %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() #20
  %34 = load i8*, i8** @_ZZNK2rx2vk12DeviceMemory3mapEP10VkDevice_TmmjPPhE32trace_event_unique_catstatic1397, align 8
  %35 = tail call i64 @_ZN5angle13AddTraceEventEPNS_15PlatformMethodsEcPKhPKcyiPS5_S3_PKyh(%"struct.angle::PlatformMethods"* %33, i8 signext 66, i8* %34, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.41, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #20
  %36 = tail call %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() #20
  %37 = load i64, i64* bitcast (i8** @_ZZNK2rx2vk12DeviceMemory3mapEP10VkDevice_TmmjPPhE32trace_event_unique_catstatic1397 to i64*), align 8
  %38 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %25, i64 0, i32 0
  store %"struct.angle::PlatformMethods"* %36, %"struct.angle::PlatformMethods"** %38, align 8
  %39 = bitcast i8** %32 to i64*
  store i64 %37, i64* %39, align 8
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.41, i64 0, i64 0), i8** %31, align 8
  store %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %25, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"** %24, align 8
  br label %40

40:                                               ; preds = %30, %22
  %41 = load i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)*, i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)** @vkMapMemory, align 8
  %42 = getelementptr inbounds %"class.rx::vk::DeviceMemory", %"class.rx::vk::DeviceMemory"* %1, i64 0, i32 0, i32 0
  %43 = load %struct.VkDeviceMemory_T*, %struct.VkDeviceMemory_T** %42, align 8
  %44 = call i32 %41(%struct.VkDevice_T* %12, %struct.VkDeviceMemory_T* %43, i64 0, i64 -1, i32 0, i8** nonnull %7) #20
  %45 = load %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"*, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"** %24, align 8
  %46 = icmp eq %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %45, null
  br i1 %46, label %58, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %45, i64 0, i32 1
  %49 = load i8*, i8** %48, align 8
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %45, i64 0, i32 0
  %54 = load %"struct.angle::PlatformMethods"*, %"struct.angle::PlatformMethods"** %53, align 8
  %55 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %45, i64 0, i32 2
  %56 = load i8*, i8** %55, align 8
  %57 = call i64 @_ZN5angle13AddTraceEventEPNS_15PlatformMethodsEcPKhPKcyiPS5_S3_PKyh(%"struct.angle::PlatformMethods"* %54, i8 signext 69, i8* %49, i8* %56, i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #20
  br label %58

58:                                               ; preds = %40, %47, %52
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #20
  %59 = icmp eq i32 %44, 0
  br i1 %59, label %65, label %60, !prof !9

60:                                               ; preds = %58
  %61 = bitcast %"class.rx::vk::Context"* %0 to void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)***
  %62 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)**, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %62, i64 2
  %64 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %63, align 8
  call void %64(%"class.rx::vk::Context"* %0, i32 %44, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__._ZN2rx2vk24InitMappableDeviceMemoryEPNS0_7ContextEPNS0_12DeviceMemoryEmij, i64 0, i64 0), i32 525) #20
  br label %90

65:                                               ; preds = %58
  %66 = load i8*, i8** %7, align 8
  %67 = trunc i32 %3 to i8
  call void @llvm.memset.p0i8.i64(i8* align 1 %66, i8 %67, i64 %2, i1 false)
  %68 = and i32 %4, 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %87

70:                                               ; preds = %65
  %71 = bitcast %struct.VkMappedMemoryRange* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %71) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 32, i1 false)
  %72 = getelementptr inbounds %struct.VkMappedMemoryRange, %struct.VkMappedMemoryRange* %8, i64 0, i32 0
  store i32 6, i32* %72, align 8
  %73 = bitcast %"class.rx::vk::DeviceMemory"* %1 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %struct.VkMappedMemoryRange, %struct.VkMappedMemoryRange* %8, i64 0, i32 2
  %76 = bitcast %struct.VkDeviceMemory_T** %75 to i64*
  store i64 %74, i64* %76, align 8
  %77 = getelementptr inbounds %struct.VkMappedMemoryRange, %struct.VkMappedMemoryRange* %8, i64 0, i32 4
  store i64 -1, i64* %77, align 8
  %78 = load i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)** @vkFlushMappedMemoryRanges, align 8
  %79 = call i32 %78(%struct.VkDevice_T* %12, i32 1, %struct.VkMappedMemoryRange* nonnull %8) #20
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82, !prof !9

81:                                               ; preds = %70
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %71) #20
  br label %87

82:                                               ; preds = %70
  %83 = bitcast %"class.rx::vk::Context"* %0 to void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)***
  %84 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)**, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %84, i64 2
  %86 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %85, align 8
  call void %86(%"class.rx::vk::Context"* %0, i32 %79, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__._ZN2rx2vk24InitMappableDeviceMemoryEPNS0_7ContextEPNS0_12DeviceMemoryEmij, i64 0, i64 0), i32 535) #20
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %71) #20
  br label %90

87:                                               ; preds = %81, %65
  %88 = load void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)** @vkUnmapMemory, align 8
  %89 = load %struct.VkDeviceMemory_T*, %struct.VkDeviceMemory_T** %42, align 8
  call void %88(%struct.VkDevice_T* %12, %struct.VkDeviceMemory_T* %89) #20
  br label %90

90:                                               ; preds = %82, %60, %87
  %91 = phi i32 [ 0, %87 ], [ 1, %82 ], [ 1, %60 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #20
  ret i32 %91
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx2vk20AllocateBufferMemoryEPNS0_7ContextEjPjPKvPNS0_6BufferEPNS0_12DeviceMemoryEPm(%"class.rx::vk::Context"*, i32, i32* nocapture, i8*, %"class.rx::vk::Buffer"* nocapture readonly, %"class.rx::vk::DeviceMemory"*, i64* nocapture) local_unnamed_addr #1 {
  %8 = alloca %struct.VkMemoryRequirements, align 8
  %9 = bitcast %struct.VkMemoryRequirements* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false) #20
  %10 = getelementptr inbounds %"class.rx::vk::Context", %"class.rx::vk::Context"* %0, i64 0, i32 1
  %11 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %10, align 8
  %12 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %11, i64 0, i32 43
  %13 = load %struct.VkDevice_T*, %struct.VkDevice_T** %12, align 8
  %14 = load void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)** @vkGetBufferMemoryRequirements, align 8
  %15 = getelementptr inbounds %"class.rx::vk::Buffer", %"class.rx::vk::Buffer"* %4, i64 0, i32 0, i32 0
  %16 = load %struct.VkBuffer_T*, %struct.VkBuffer_T** %15, align 8
  call void %14(%struct.VkDevice_T* %13, %struct.VkBuffer_T* %16, %struct.VkMemoryRequirements* nonnull %8) #20
  %17 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %10, align 8
  %18 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %17, i64 0, i32 48
  %19 = call fastcc i32 @_ZN2rx12_GLOBAL__N_131FindAndAllocateCompatibleMemoryEPNS_2vk7ContextERKNS1_16MemoryPropertiesEjPjRK20VkMemoryRequirementsPKvPNS1_12DeviceMemoryE(%"class.rx::vk::Context"* %0, %"class.rx::vk::MemoryProperties"* dereferenceable(520) %18, i32 %1, i32* %2, %struct.VkMemoryRequirements* nonnull dereferenceable(24) %8, i8* %3, %"class.rx::vk::DeviceMemory"* %5) #20
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %39, label %21

21:                                               ; preds = %7
  %22 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %10, align 8
  %23 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %22, i64 0, i32 43
  %24 = load %struct.VkDevice_T*, %struct.VkDevice_T** %23, align 8
  %25 = load i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)*, i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)** @vkBindBufferMemory, align 8
  %26 = load %struct.VkBuffer_T*, %struct.VkBuffer_T** %15, align 8
  %27 = getelementptr inbounds %"class.rx::vk::DeviceMemory", %"class.rx::vk::DeviceMemory"* %5, i64 0, i32 0, i32 0
  %28 = load %struct.VkDeviceMemory_T*, %struct.VkDeviceMemory_T** %27, align 8
  %29 = call i32 %25(%struct.VkDevice_T* %24, %struct.VkBuffer_T* %26, %struct.VkDeviceMemory_T* %28, i64 0) #20
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31, !prof !9

31:                                               ; preds = %21
  %32 = bitcast %"class.rx::vk::Context"* %0 to void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)***
  %33 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)**, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %33, i64 2
  %35 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %34, align 8
  call void %35(%"class.rx::vk::Context"* %0, i32 %29, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__func__._ZN2rx12_GLOBAL__N_134AllocateAndBindBufferOrImageMemoryINS_2vk5ImageEEEN5angle6ResultEPNS2_7ContextEjPjRK20VkMemoryRequirementsPKvPT_PNS2_12DeviceMemoryE, i64 0, i64 0), i32 135) #20
  br label %39

36:                                               ; preds = %21
  %37 = getelementptr inbounds %struct.VkMemoryRequirements, %struct.VkMemoryRequirements* %8, i64 0, i32 0
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %6, align 8
  br label %39

39:                                               ; preds = %7, %31, %36
  %40 = phi i32 [ 0, %36 ], [ 1, %31 ], [ 1, %7 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #20
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx2vk19AllocateImageMemoryEPNS0_7ContextEjPjPKvPNS0_5ImageEPNS0_12DeviceMemoryEPm(%"class.rx::vk::Context"*, i32, i32* nocapture, i8*, %"class.rx::vk::Image"* nocapture readonly, %"class.rx::vk::DeviceMemory"*, i64* nocapture) local_unnamed_addr #1 {
  %8 = alloca %struct.VkMemoryRequirements, align 8
  %9 = bitcast %struct.VkMemoryRequirements* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false) #20
  %10 = getelementptr inbounds %"class.rx::vk::Context", %"class.rx::vk::Context"* %0, i64 0, i32 1
  %11 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %10, align 8
  %12 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %11, i64 0, i32 43
  %13 = load %struct.VkDevice_T*, %struct.VkDevice_T** %12, align 8
  %14 = load void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)** @vkGetImageMemoryRequirements, align 8
  %15 = getelementptr inbounds %"class.rx::vk::Image", %"class.rx::vk::Image"* %4, i64 0, i32 0, i32 0
  %16 = load %struct.VkImage_T*, %struct.VkImage_T** %15, align 8
  call void %14(%struct.VkDevice_T* %13, %struct.VkImage_T* %16, %struct.VkMemoryRequirements* nonnull %8) #20
  %17 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %10, align 8
  %18 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %17, i64 0, i32 48
  %19 = call fastcc i32 @_ZN2rx12_GLOBAL__N_131FindAndAllocateCompatibleMemoryEPNS_2vk7ContextERKNS1_16MemoryPropertiesEjPjRK20VkMemoryRequirementsPKvPNS1_12DeviceMemoryE(%"class.rx::vk::Context"* %0, %"class.rx::vk::MemoryProperties"* dereferenceable(520) %18, i32 %1, i32* %2, %struct.VkMemoryRequirements* nonnull dereferenceable(24) %8, i8* %3, %"class.rx::vk::DeviceMemory"* %5) #20
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %39, label %21

21:                                               ; preds = %7
  %22 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %10, align 8
  %23 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %22, i64 0, i32 43
  %24 = load %struct.VkDevice_T*, %struct.VkDevice_T** %23, align 8
  %25 = load i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)*, i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)** @vkBindImageMemory, align 8
  %26 = load %struct.VkImage_T*, %struct.VkImage_T** %15, align 8
  %27 = getelementptr inbounds %"class.rx::vk::DeviceMemory", %"class.rx::vk::DeviceMemory"* %5, i64 0, i32 0, i32 0
  %28 = load %struct.VkDeviceMemory_T*, %struct.VkDeviceMemory_T** %27, align 8
  %29 = call i32 %25(%struct.VkDevice_T* %24, %struct.VkImage_T* %26, %struct.VkDeviceMemory_T* %28, i64 0) #20
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31, !prof !9

31:                                               ; preds = %21
  %32 = bitcast %"class.rx::vk::Context"* %0 to void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)***
  %33 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)**, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %33, i64 2
  %35 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %34, align 8
  call void %35(%"class.rx::vk::Context"* %0, i32 %29, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__func__._ZN2rx12_GLOBAL__N_134AllocateAndBindBufferOrImageMemoryINS_2vk5ImageEEEN5angle6ResultEPNS2_7ContextEjPjRK20VkMemoryRequirementsPKvPT_PNS2_12DeviceMemoryE, i64 0, i64 0), i32 135) #20
  br label %39

36:                                               ; preds = %21
  %37 = getelementptr inbounds %struct.VkMemoryRequirements, %struct.VkMemoryRequirements* %8, i64 0, i32 0
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %6, align 8
  br label %39

39:                                               ; preds = %7, %31, %36
  %40 = phi i32 [ 0, %36 ], [ 1, %31 ], [ 1, %7 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #20
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx2vk35AllocateImageMemoryWithRequirementsEPNS0_7ContextEjRK20VkMemoryRequirementsPKvPNS0_5ImageEPNS0_12DeviceMemoryE(%"class.rx::vk::Context"*, i32, %struct.VkMemoryRequirements* nocapture readonly dereferenceable(24), i8*, %"class.rx::vk::Image"* nocapture readonly, %"class.rx::vk::DeviceMemory"*) local_unnamed_addr #1 {
  %7 = alloca i32, align 4
  %8 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #20
  store i32 0, i32* %7, align 4
  %9 = getelementptr inbounds %"class.rx::vk::Context", %"class.rx::vk::Context"* %0, i64 0, i32 1
  %10 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %9, align 8
  %11 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %10, i64 0, i32 48
  %12 = call fastcc i32 @_ZN2rx12_GLOBAL__N_131FindAndAllocateCompatibleMemoryEPNS_2vk7ContextERKNS1_16MemoryPropertiesEjPjRK20VkMemoryRequirementsPKvPNS1_12DeviceMemoryE(%"class.rx::vk::Context"* %0, %"class.rx::vk::MemoryProperties"* dereferenceable(520) %11, i32 %1, i32* nonnull %7, %struct.VkMemoryRequirements* dereferenceable(24) %2, i8* %3, %"class.rx::vk::DeviceMemory"* %5) #20
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %30, label %14

14:                                               ; preds = %6
  %15 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %9, align 8
  %16 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %15, i64 0, i32 43
  %17 = load %struct.VkDevice_T*, %struct.VkDevice_T** %16, align 8
  %18 = load i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)*, i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)** @vkBindImageMemory, align 8
  %19 = getelementptr inbounds %"class.rx::vk::Image", %"class.rx::vk::Image"* %4, i64 0, i32 0, i32 0
  %20 = load %struct.VkImage_T*, %struct.VkImage_T** %19, align 8
  %21 = getelementptr inbounds %"class.rx::vk::DeviceMemory", %"class.rx::vk::DeviceMemory"* %5, i64 0, i32 0, i32 0
  %22 = load %struct.VkDeviceMemory_T*, %struct.VkDeviceMemory_T** %21, align 8
  %23 = tail call i32 %18(%struct.VkDevice_T* %17, %struct.VkImage_T* %20, %struct.VkDeviceMemory_T* %22, i64 0) #20
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %30, label %25, !prof !9

25:                                               ; preds = %14
  %26 = bitcast %"class.rx::vk::Context"* %0 to void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)***
  %27 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)**, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %27, i64 2
  %29 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %28, align 8
  tail call void %29(%"class.rx::vk::Context"* %0, i32 %23, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__func__._ZN2rx12_GLOBAL__N_134AllocateAndBindBufferOrImageMemoryINS_2vk5ImageEEEN5angle6ResultEPNS2_7ContextEjPjRK20VkMemoryRequirementsPKvPT_PNS2_12DeviceMemoryE, i64 0, i64 0), i32 135) #20
  br label %30

30:                                               ; preds = %6, %14, %25
  %31 = phi i32 [ 1, %25 ], [ 0, %14 ], [ 1, %6 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #20
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx2vk36AllocateBufferMemoryWithRequirementsEPNS0_7ContextEjRK20VkMemoryRequirementsPKvPNS0_6BufferEPjPNS0_12DeviceMemoryE(%"class.rx::vk::Context"*, i32, %struct.VkMemoryRequirements* nocapture readonly dereferenceable(24), i8*, %"class.rx::vk::Buffer"* nocapture readonly, i32* nocapture, %"class.rx::vk::DeviceMemory"*) local_unnamed_addr #1 {
  %8 = getelementptr inbounds %"class.rx::vk::Context", %"class.rx::vk::Context"* %0, i64 0, i32 1
  %9 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %8, align 8
  %10 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %9, i64 0, i32 48
  %11 = tail call fastcc i32 @_ZN2rx12_GLOBAL__N_131FindAndAllocateCompatibleMemoryEPNS_2vk7ContextERKNS1_16MemoryPropertiesEjPjRK20VkMemoryRequirementsPKvPNS1_12DeviceMemoryE(%"class.rx::vk::Context"* %0, %"class.rx::vk::MemoryProperties"* dereferenceable(520) %10, i32 %1, i32* %5, %struct.VkMemoryRequirements* dereferenceable(24) %2, i8* %3, %"class.rx::vk::DeviceMemory"* %6) #20
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %29, label %13

13:                                               ; preds = %7
  %14 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %8, align 8
  %15 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %14, i64 0, i32 43
  %16 = load %struct.VkDevice_T*, %struct.VkDevice_T** %15, align 8
  %17 = load i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)*, i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)** @vkBindBufferMemory, align 8
  %18 = getelementptr inbounds %"class.rx::vk::Buffer", %"class.rx::vk::Buffer"* %4, i64 0, i32 0, i32 0
  %19 = load %struct.VkBuffer_T*, %struct.VkBuffer_T** %18, align 8
  %20 = getelementptr inbounds %"class.rx::vk::DeviceMemory", %"class.rx::vk::DeviceMemory"* %6, i64 0, i32 0, i32 0
  %21 = load %struct.VkDeviceMemory_T*, %struct.VkDeviceMemory_T** %20, align 8
  %22 = tail call i32 %17(%struct.VkDevice_T* %16, %struct.VkBuffer_T* %19, %struct.VkDeviceMemory_T* %21, i64 0) #20
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %29, label %24, !prof !9

24:                                               ; preds = %13
  %25 = bitcast %"class.rx::vk::Context"* %0 to void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)***
  %26 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)**, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %26, i64 2
  %28 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %27, align 8
  tail call void %28(%"class.rx::vk::Context"* %0, i32 %22, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__func__._ZN2rx12_GLOBAL__N_134AllocateAndBindBufferOrImageMemoryINS_2vk5ImageEEEN5angle6ResultEPNS2_7ContextEjPjRK20VkMemoryRequirementsPKvPT_PNS2_12DeviceMemoryE, i64 0, i64 0), i32 135) #20
  br label %29

29:                                               ; preds = %7, %13, %24
  %30 = phi i32 [ 1, %24 ], [ 0, %13 ], [ 1, %7 ]
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx2vk19InitShaderAndSerialEPNS0_7ContextEPNS0_15ObjectAndSerialINS0_12ShaderModuleEEEPKjm(%"class.rx::vk::Context"*, %"class.rx::vk::ObjectAndSerial.1104"*, i32*, i64) local_unnamed_addr #1 {
  %5 = alloca %struct.VkShaderModuleCreateInfo, align 8
  %6 = bitcast %struct.VkShaderModuleCreateInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false)
  %7 = getelementptr inbounds %struct.VkShaderModuleCreateInfo, %struct.VkShaderModuleCreateInfo* %5, i64 0, i32 0
  store i32 16, i32* %7, align 8
  %8 = getelementptr inbounds %struct.VkShaderModuleCreateInfo, %struct.VkShaderModuleCreateInfo* %5, i64 0, i32 2
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %struct.VkShaderModuleCreateInfo, %struct.VkShaderModuleCreateInfo* %5, i64 0, i32 3
  store i64 %3, i64* %9, align 8
  %10 = getelementptr inbounds %struct.VkShaderModuleCreateInfo, %struct.VkShaderModuleCreateInfo* %5, i64 0, i32 4
  store i32* %2, i32** %10, align 8
  %11 = getelementptr inbounds %"class.rx::vk::Context", %"class.rx::vk::Context"* %0, i64 0, i32 1
  %12 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %11, align 8
  %13 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %12, i64 0, i32 43
  %14 = load %struct.VkDevice_T*, %struct.VkDevice_T** %13, align 8
  %15 = load i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)*, i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)** @vkCreateShaderModule, align 8
  %16 = getelementptr inbounds %"class.rx::vk::ObjectAndSerial.1104", %"class.rx::vk::ObjectAndSerial.1104"* %1, i64 0, i32 1, i32 0, i32 0
  %17 = call i32 %15(%struct.VkDevice_T* %14, %struct.VkShaderModuleCreateInfo* nonnull %5, %struct.VkAllocationCallbacks* null, %struct.VkShaderModule_T** %16) #20
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %24, label %19, !prof !9

19:                                               ; preds = %4
  %20 = bitcast %"class.rx::vk::Context"* %0 to void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)***
  %21 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)**, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %21, i64 2
  %23 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %22, align 8
  call void %23(%"class.rx::vk::Context"* %0, i32 %17, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__._ZN2rx2vk19InitShaderAndSerialEPNS0_7ContextEPNS0_15ObjectAndSerialINS0_12ShaderModuleEEEPKjm, i64 0, i64 0), i32 605) #20
  br label %28

24:                                               ; preds = %4
  %25 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %11, align 8
  %26 = call i64 @_ZN2rx10RendererVk17issueShaderSerialEv(%"class.rx::RendererVk"* %25) #20
  %27 = getelementptr inbounds %"class.rx::vk::ObjectAndSerial.1104", %"class.rx::vk::ObjectAndSerial.1104"* %1, i64 0, i32 2, i32 0
  store i64 %26, i64* %27, align 8
  br label %28

28:                                               ; preds = %19, %24
  %29 = phi i32 [ 0, %24 ], [ 1, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #20
  ret i32 %29
}

declare i64 @_ZN2rx10RendererVk17issueShaderSerialEv(%"class.rx::RendererVk"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i8 @_ZN2rx2vk16Get2DTextureTypeEji(i32, i32) local_unnamed_addr #3 {
  %3 = icmp ugt i32 %0, 1
  %4 = icmp sgt i32 %1, 1
  %5 = select i1 %4, i8 3, i8 1
  %6 = select i1 %4, i8 2, i8 0
  %7 = select i1 %3, i8 %5, i8 %6
  ret i8 %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx2vk13GarbageObjectC2Ev(%"class.rx::vk::GarbageObject"* nocapture) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %0, i64 0, i32 1
  store %"struct.rx::vk::GarbageHandle_T"* null, %"struct.rx::vk::GarbageHandle_T"** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx2vk13GarbageObjectC2ENS0_10HandleTypeEPNS0_15GarbageHandle_TE(%"class.rx::vk::GarbageObject"* nocapture, i32, %"struct.rx::vk::GarbageHandle_T"*) unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %0, i64 0, i32 1
  store %"struct.rx::vk::GarbageHandle_T"* %2, %"struct.rx::vk::GarbageHandle_T"** %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx2vk13GarbageObjectC2EOS1_(%"class.rx::vk::GarbageObject"* nocapture, %"class.rx::vk::GarbageObject"* nocapture dereferenceable(16)) unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %0, i64 0, i32 0
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %0, i64 0, i32 1
  store %"struct.rx::vk::GarbageHandle_T"* null, %"struct.rx::vk::GarbageHandle_T"** %4, align 8
  %5 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %1, i64 0, i32 1
  %6 = bitcast %"struct.rx::vk::GarbageHandle_T"** %4 to i64*
  %7 = bitcast %"struct.rx::vk::GarbageHandle_T"** %5 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %6, align 8
  store i64 0, i64* %7, align 8
  %9 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %1, i64 0, i32 0
  %10 = load i32, i32* %3, align 4
  %11 = load i32, i32* %9, align 4
  store i32 %11, i32* %3, align 4
  store i32 %10, i32* %9, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(16) %"class.rx::vk::GarbageObject"* @_ZN2rx2vk13GarbageObjectaSEOS1_(%"class.rx::vk::GarbageObject"* returned, %"class.rx::vk::GarbageObject"* nocapture dereferenceable(16)) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %1, i64 0, i32 1
  %5 = bitcast %"struct.rx::vk::GarbageHandle_T"** %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"struct.rx::vk::GarbageHandle_T"** %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %5, align 8
  store i64 %6, i64* %7, align 8
  %9 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %1, i64 0, i32 0
  %11 = load i32, i32* %9, align 4
  %12 = load i32, i32* %10, align 4
  store i32 %12, i32* %9, align 4
  store i32 %11, i32* %10, align 4
  ret %"class.rx::vk::GarbageObject"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk13GarbageObject7destroyEPNS_10RendererVkE(%"class.rx::vk::GarbageObject"* nocapture readonly, %"class.rx::RendererVk"* nocapture) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.gl::TraceEvent::TraceEndOnScopeClose", align 8
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN2rx2vk13GarbageObject7destroyEPNS_10RendererVkEE31trace_event_unique_catstatic659 to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %12, !prof !30

6:                                                ; preds = %2
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2rx2vk13GarbageObject7destroyEPNS_10RendererVkEE31trace_event_unique_catstatic659) #20
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %6
  %10 = tail call %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() #20
  %11 = tail call i8* @_ZN5angle27GetTraceCategoryEnabledFlagEPNS_15PlatformMethodsEPKc(%"struct.angle::PlatformMethods"* %10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i64 0, i64 0)) #20
  store i8* %11, i8** @_ZZN2rx2vk13GarbageObject7destroyEPNS_10RendererVkEE31trace_event_unique_catstatic659, align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN2rx2vk13GarbageObject7destroyEPNS_10RendererVkEE31trace_event_unique_catstatic659) #20
  br label %12

12:                                               ; preds = %6, %9, %2
  %13 = bitcast %"class.gl::TraceEvent::TraceEndOnScopeClose"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #20
  %14 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %3, i64 0, i32 0
  %15 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %3, i64 0, i32 1
  %16 = bitcast %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  store %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* null, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"** %14, align 8
  %17 = load i8*, i8** @_ZZN2rx2vk13GarbageObject7destroyEPNS_10RendererVkEE31trace_event_unique_catstatic659, align 8
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %31, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %3, i64 0, i32 1, i32 2
  %22 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %3, i64 0, i32 1, i32 1
  %23 = tail call %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() #20
  %24 = load i8*, i8** @_ZZN2rx2vk13GarbageObject7destroyEPNS_10RendererVkEE31trace_event_unique_catstatic659, align 8
  %25 = tail call i64 @_ZN5angle13AddTraceEventEPNS_15PlatformMethodsEcPKhPKcyiPS5_S3_PKyh(%"struct.angle::PlatformMethods"* %23, i8 signext 66, i8* %24, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #20
  %26 = tail call %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() #20
  %27 = load i64, i64* bitcast (i8** @_ZZN2rx2vk13GarbageObject7destroyEPNS_10RendererVkEE31trace_event_unique_catstatic659 to i64*), align 8
  %28 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %3, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %28, i64 0, i32 0
  store %"struct.angle::PlatformMethods"* %26, %"struct.angle::PlatformMethods"** %29, align 8
  %30 = bitcast i8** %22 to i64*
  store i64 %27, i64* %30, align 8
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0), i8** %21, align 8
  store %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %28, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"** %14, align 8
  br label %31

31:                                               ; preds = %12, %20
  %32 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 43
  %33 = load %struct.VkDevice_T*, %struct.VkDevice_T** %32, align 8
  %34 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %0, i64 0, i32 0
  %35 = load i32, i32* %34, align 8
  switch i32 %35, label %132 [
    i32 22, label %36
    i32 2, label %126
    i32 10, label %41
    i32 11, label %46
    i32 9, label %51
    i32 4, label %56
    i32 5, label %61
    i32 13, label %66
    i32 14, label %71
    i32 23, label %76
    i32 17, label %81
    i32 19, label %86
    i32 15, label %91
    i32 8, label %96
    i32 20, label %101
    i32 7, label %106
    i32 12, label %111
    i32 6, label %116
    i32 18, label %121
  ]

36:                                               ; preds = %31
  %37 = load void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)** @vkDestroySemaphore, align 8
  %38 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %0, i64 0, i32 1
  %39 = bitcast %"struct.rx::vk::GarbageHandle_T"** %38 to %struct.VkSemaphore_T**
  %40 = load %struct.VkSemaphore_T*, %struct.VkSemaphore_T** %39, align 8
  call void %37(%struct.VkDevice_T* %33, %struct.VkSemaphore_T* %40, %struct.VkAllocationCallbacks* null) #20
  br label %132

41:                                               ; preds = %31
  %42 = load void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)** @vkDestroyEvent, align 8
  %43 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %0, i64 0, i32 1
  %44 = bitcast %"struct.rx::vk::GarbageHandle_T"** %43 to %struct.VkEvent_T**
  %45 = load %struct.VkEvent_T*, %struct.VkEvent_T** %44, align 8
  call void %42(%struct.VkDevice_T* %33, %struct.VkEvent_T* %45, %struct.VkAllocationCallbacks* null) #20
  br label %132

46:                                               ; preds = %31
  %47 = load void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)** @vkDestroyFence, align 8
  %48 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %0, i64 0, i32 1
  %49 = bitcast %"struct.rx::vk::GarbageHandle_T"** %48 to %struct.VkFence_T**
  %50 = load %struct.VkFence_T*, %struct.VkFence_T** %49, align 8
  call void %47(%struct.VkDevice_T* %33, %struct.VkFence_T* %50, %struct.VkAllocationCallbacks* null) #20
  br label %132

51:                                               ; preds = %31
  %52 = load void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)** @vkFreeMemory, align 8
  %53 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %0, i64 0, i32 1
  %54 = bitcast %"struct.rx::vk::GarbageHandle_T"** %53 to %struct.VkDeviceMemory_T**
  %55 = load %struct.VkDeviceMemory_T*, %struct.VkDeviceMemory_T** %54, align 8
  call void %52(%struct.VkDevice_T* %33, %struct.VkDeviceMemory_T* %55, %struct.VkAllocationCallbacks* null) #20
  br label %132

56:                                               ; preds = %31
  %57 = load void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)** @vkDestroyBuffer, align 8
  %58 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %0, i64 0, i32 1
  %59 = bitcast %"struct.rx::vk::GarbageHandle_T"** %58 to %struct.VkBuffer_T**
  %60 = load %struct.VkBuffer_T*, %struct.VkBuffer_T** %59, align 8
  call void %57(%struct.VkDevice_T* %33, %struct.VkBuffer_T* %60, %struct.VkAllocationCallbacks* null) #20
  br label %132

61:                                               ; preds = %31
  %62 = load void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)** @vkDestroyBufferView, align 8
  %63 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %0, i64 0, i32 1
  %64 = bitcast %"struct.rx::vk::GarbageHandle_T"** %63 to %struct.VkBufferView_T**
  %65 = load %struct.VkBufferView_T*, %struct.VkBufferView_T** %64, align 8
  call void %62(%struct.VkDevice_T* %33, %struct.VkBufferView_T* %65, %struct.VkAllocationCallbacks* null) #20
  br label %132

66:                                               ; preds = %31
  %67 = load void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)** @vkDestroyImage, align 8
  %68 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %0, i64 0, i32 1
  %69 = bitcast %"struct.rx::vk::GarbageHandle_T"** %68 to %struct.VkImage_T**
  %70 = load %struct.VkImage_T*, %struct.VkImage_T** %69, align 8
  call void %67(%struct.VkDevice_T* %33, %struct.VkImage_T* %70, %struct.VkAllocationCallbacks* null) #20
  br label %132

71:                                               ; preds = %31
  %72 = load void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)** @vkDestroyImageView, align 8
  %73 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %0, i64 0, i32 1
  %74 = bitcast %"struct.rx::vk::GarbageHandle_T"** %73 to %struct.VkImageView_T**
  %75 = load %struct.VkImageView_T*, %struct.VkImageView_T** %74, align 8
  call void %72(%struct.VkDevice_T* %33, %struct.VkImageView_T* %75, %struct.VkAllocationCallbacks* null) #20
  br label %132

76:                                               ; preds = %31
  %77 = load void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)** @vkDestroyShaderModule, align 8
  %78 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %0, i64 0, i32 1
  %79 = bitcast %"struct.rx::vk::GarbageHandle_T"** %78 to %struct.VkShaderModule_T**
  %80 = load %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %79, align 8
  call void %77(%struct.VkDevice_T* %33, %struct.VkShaderModule_T* %80, %struct.VkAllocationCallbacks* null) #20
  br label %132

81:                                               ; preds = %31
  %82 = load void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)** @vkDestroyPipelineLayout, align 8
  %83 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %0, i64 0, i32 1
  %84 = bitcast %"struct.rx::vk::GarbageHandle_T"** %83 to %struct.VkPipelineLayout_T**
  %85 = load %struct.VkPipelineLayout_T*, %struct.VkPipelineLayout_T** %84, align 8
  call void %82(%struct.VkDevice_T* %33, %struct.VkPipelineLayout_T* %85, %struct.VkAllocationCallbacks* null) #20
  br label %132

86:                                               ; preds = %31
  %87 = load void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)** @vkDestroyRenderPass, align 8
  %88 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %0, i64 0, i32 1
  %89 = bitcast %"struct.rx::vk::GarbageHandle_T"** %88 to %struct.VkRenderPass_T**
  %90 = load %struct.VkRenderPass_T*, %struct.VkRenderPass_T** %89, align 8
  call void %87(%struct.VkDevice_T* %33, %struct.VkRenderPass_T* %90, %struct.VkAllocationCallbacks* null) #20
  br label %132

91:                                               ; preds = %31
  %92 = load void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)** @vkDestroyPipeline, align 8
  %93 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %0, i64 0, i32 1
  %94 = bitcast %"struct.rx::vk::GarbageHandle_T"** %93 to %struct.VkPipeline_T**
  %95 = load %struct.VkPipeline_T*, %struct.VkPipeline_T** %94, align 8
  call void %92(%struct.VkDevice_T* %33, %struct.VkPipeline_T* %95, %struct.VkAllocationCallbacks* null) #20
  br label %132

96:                                               ; preds = %31
  %97 = load void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)** @vkDestroyDescriptorSetLayout, align 8
  %98 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %0, i64 0, i32 1
  %99 = bitcast %"struct.rx::vk::GarbageHandle_T"** %98 to %struct.VkDescriptorSetLayout_T**
  %100 = load %struct.VkDescriptorSetLayout_T*, %struct.VkDescriptorSetLayout_T** %99, align 8
  call void %97(%struct.VkDevice_T* %33, %struct.VkDescriptorSetLayout_T* %100, %struct.VkAllocationCallbacks* null) #20
  br label %132

101:                                              ; preds = %31
  %102 = load void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)** @vkDestroySampler, align 8
  %103 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %0, i64 0, i32 1
  %104 = bitcast %"struct.rx::vk::GarbageHandle_T"** %103 to %struct.VkSampler_T**
  %105 = load %struct.VkSampler_T*, %struct.VkSampler_T** %104, align 8
  call void %102(%struct.VkDevice_T* %33, %struct.VkSampler_T* %105, %struct.VkAllocationCallbacks* null) #20
  br label %132

106:                                              ; preds = %31
  %107 = load void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)** @vkDestroyDescriptorPool, align 8
  %108 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %0, i64 0, i32 1
  %109 = bitcast %"struct.rx::vk::GarbageHandle_T"** %108 to %struct.VkDescriptorPool_T**
  %110 = load %struct.VkDescriptorPool_T*, %struct.VkDescriptorPool_T** %109, align 8
  call void %107(%struct.VkDevice_T* %33, %struct.VkDescriptorPool_T* %110, %struct.VkAllocationCallbacks* null) #20
  br label %132

111:                                              ; preds = %31
  %112 = load void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)** @vkDestroyFramebuffer, align 8
  %113 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %0, i64 0, i32 1
  %114 = bitcast %"struct.rx::vk::GarbageHandle_T"** %113 to %struct.VkFramebuffer_T**
  %115 = load %struct.VkFramebuffer_T*, %struct.VkFramebuffer_T** %114, align 8
  call void %112(%struct.VkDevice_T* %33, %struct.VkFramebuffer_T* %115, %struct.VkAllocationCallbacks* null) #20
  br label %132

116:                                              ; preds = %31
  %117 = load void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)** @vkDestroyCommandPool, align 8
  %118 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %0, i64 0, i32 1
  %119 = bitcast %"struct.rx::vk::GarbageHandle_T"** %118 to %struct.VkCommandPool_T**
  %120 = load %struct.VkCommandPool_T*, %struct.VkCommandPool_T** %119, align 8
  call void %117(%struct.VkDevice_T* %33, %struct.VkCommandPool_T* %120, %struct.VkAllocationCallbacks* null) #20
  br label %132

121:                                              ; preds = %31
  %122 = load void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)** @vkDestroyQueryPool, align 8
  %123 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %0, i64 0, i32 1
  %124 = bitcast %"struct.rx::vk::GarbageHandle_T"** %123 to %struct.VkQueryPool_T**
  %125 = load %struct.VkQueryPool_T*, %struct.VkQueryPool_T** %124, align 8
  call void %122(%struct.VkDevice_T* %33, %struct.VkQueryPool_T* %125, %struct.VkAllocationCallbacks* null) #20
  br label %132

126:                                              ; preds = %31
  %127 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 67, i32 0, i32 0
  %128 = load %struct.VmaAllocator_T*, %struct.VmaAllocator_T** %127, align 8
  %129 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %0, i64 0, i32 1
  %130 = bitcast %"struct.rx::vk::GarbageHandle_T"** %129 to %struct.VmaAllocation_T**
  %131 = load %struct.VmaAllocation_T*, %struct.VmaAllocation_T** %130, align 8
  call void @_ZN3vma10FreeMemoryEP14VmaAllocator_TP15VmaAllocation_T(%struct.VmaAllocator_T* %128, %struct.VmaAllocation_T* %131) #20
  br label %132

132:                                              ; preds = %31, %126, %121, %116, %111, %106, %101, %96, %91, %86, %81, %76, %71, %66, %61, %56, %51, %46, %41, %36
  %133 = load i32, i32* %34, align 8
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 70, i32 0, i32 0, i32 0, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = add i32 %136, -1
  store i32 %137, i32* %135, align 4
  %138 = load %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"*, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"** %14, align 8
  %139 = icmp eq %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %138, null
  br i1 %139, label %151, label %140

140:                                              ; preds = %132
  %141 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %138, i64 0, i32 1
  %142 = load i8*, i8** %141, align 8
  %143 = load i8, i8* %142, align 1
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %151, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %138, i64 0, i32 0
  %147 = load %"struct.angle::PlatformMethods"*, %"struct.angle::PlatformMethods"** %146, align 8
  %148 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %138, i64 0, i32 2
  %149 = load i8*, i8** %148, align 8
  %150 = call i64 @_ZN5angle13AddTraceEventEPNS_15PlatformMethodsEcPKhPKcyiPS5_S3_PKyh(%"struct.angle::PlatformMethods"* %147, i8 signext 69, i8* %142, i8* %149, i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #20
  br label %151

151:                                              ; preds = %132, %140, %145
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #20
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #10

declare i8* @_ZN5angle27GetTraceCategoryEnabledFlagEPNS_15PlatformMethodsEPKc(%"struct.angle::PlatformMethods"*, i8*) local_unnamed_addr #2

declare %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #10

declare void @_ZN3vma10FreeMemoryEP14VmaAllocator_TP15VmaAllocation_T(%struct.VmaAllocator_T*, %struct.VmaAllocation_T*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx2vk19MakeDebugUtilsLabelEjPKcP20VkDebugUtilsLabelEXT(i32, i8*, %struct.VkDebugUtilsLabelEXT* nocapture) local_unnamed_addr #7 {
  %4 = add i32 %0, -33350
  %5 = getelementptr inbounds %struct.VkDebugUtilsLabelEXT, %struct.VkDebugUtilsLabelEXT* %2, i64 0, i32 0
  store i32 1000128002, i32* %5, align 8
  %6 = getelementptr inbounds %struct.VkDebugUtilsLabelEXT, %struct.VkDebugUtilsLabelEXT* %2, i64 0, i32 1
  store i8* null, i8** %6, align 8
  %7 = getelementptr inbounds %struct.VkDebugUtilsLabelEXT, %struct.VkDebugUtilsLabelEXT* %2, i64 0, i32 2
  store i8* %1, i8** %7, align 8
  %8 = sext i32 %4 to i64
  %9 = getelementptr inbounds [6 x %"struct.angle::Color"], [6 x %"struct.angle::Color"]* @_ZZN2rx2vk19MakeDebugUtilsLabelEjPKcP20VkDebugUtilsLabelEXTE12kLabelColors, i64 0, i64 %8
  %10 = getelementptr inbounds %struct.VkDebugUtilsLabelEXT, %struct.VkDebugUtilsLabelEXT* %2, i64 0, i32 3, i64 0
  %11 = bitcast %"struct.angle::Color"* %9 to <4 x i32>*
  %12 = load <4 x i32>, <4 x i32>* %11, align 16
  %13 = bitcast float* %10 to <4 x i32>*
  store <4 x i32> %12, <4 x i32>* %13, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk16ClearValuesArrayC2Ev(%"class.rx::vk::ClearValuesArray"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.rx::vk::ClearValuesArray"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 168, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2rx2vk16ClearValuesArrayD2Ev(%"class.rx::vk::ClearValuesArray"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk16ClearValuesArrayC2ERKS1_(%"class.rx::vk::ClearValuesArray"* nocapture, %"class.rx::vk::ClearValuesArray"* nocapture readonly dereferenceable(168)) unnamed_addr #1 align 2 {
  %3 = bitcast %"class.rx::vk::ClearValuesArray"* %0 to i8*
  %4 = bitcast %"class.rx::vk::ClearValuesArray"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 160, i1 false)
  %5 = getelementptr inbounds %"class.rx::vk::ClearValuesArray", %"class.rx::vk::ClearValuesArray"* %0, i64 0, i32 1, i32 0
  %6 = getelementptr inbounds %"class.rx::vk::ClearValuesArray", %"class.rx::vk::ClearValuesArray"* %1, i64 0, i32 1, i32 0
  %7 = load i64, i64* %6, align 8
  store i64 %7, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(168) %"class.rx::vk::ClearValuesArray"* @_ZN2rx2vk16ClearValuesArrayaSERKS1_(%"class.rx::vk::ClearValuesArray"* returned, %"class.rx::vk::ClearValuesArray"* nocapture readonly dereferenceable(168)) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"class.rx::vk::ClearValuesArray"* %0 to i8*
  %4 = bitcast %"class.rx::vk::ClearValuesArray"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 160, i1 false)
  %5 = getelementptr inbounds %"class.rx::vk::ClearValuesArray", %"class.rx::vk::ClearValuesArray"* %1, i64 0, i32 1, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.rx::vk::ClearValuesArray", %"class.rx::vk::ClearValuesArray"* %0, i64 0, i32 1, i32 0
  store i64 %6, i64* %7, align 8
  ret %"class.rx::vk::ClearValuesArray"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk16ClearValuesArray5storeEjjRK12VkClearValue(%"class.rx::vk::ClearValuesArray"* nocapture, i32, i32, %union.VkClearValue* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %5 = and i32 %2, 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.rx::vk::ClearValuesArray", %"class.rx::vk::ClearValuesArray"* %0, i64 0, i32 0, i32 0, i64 9
  %9 = bitcast %union.VkClearValue* %8 to i8*
  %10 = bitcast %union.VkClearValue* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 16, i1 false) #20
  %11 = getelementptr inbounds %"class.rx::vk::ClearValuesArray", %"class.rx::vk::ClearValuesArray"* %0, i64 0, i32 1, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = or i64 %12, 512
  store i64 %13, i64* %11, align 8
  br label %14

14:                                               ; preds = %4, %7
  %15 = icmp eq i32 %2, 4
  br i1 %15, label %26, label %16

16:                                               ; preds = %14
  %17 = zext i32 %1 to i64
  %18 = getelementptr inbounds %"class.rx::vk::ClearValuesArray", %"class.rx::vk::ClearValuesArray"* %0, i64 0, i32 0, i32 0, i64 %17
  %19 = bitcast %union.VkClearValue* %18 to i8*
  %20 = bitcast %union.VkClearValue* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %20, i64 16, i1 false) #20
  %21 = shl i64 1, %17
  %22 = and i64 %21, 1023
  %23 = getelementptr inbounds %"class.rx::vk::ClearValuesArray", %"class.rx::vk::ClearValuesArray"* %0, i64 0, i32 1, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = or i64 %24, %22
  store i64 %25, i64* %23, align 8
  br label %26

26:                                               ; preds = %14, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk16ClearValuesArray19storeNoDepthStencilEjRK12VkClearValue(%"class.rx::vk::ClearValuesArray"* nocapture, i32, %union.VkClearValue* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.rx::vk::ClearValuesArray", %"class.rx::vk::ClearValuesArray"* %0, i64 0, i32 0, i32 0, i64 %4
  %6 = bitcast %union.VkClearValue* %5 to i8*
  %7 = bitcast %union.VkClearValue* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 16, i1 false)
  %8 = shl i64 1, %4
  %9 = and i64 %8, 1023
  %10 = getelementptr inbounds %"class.rx::vk::ClearValuesArray", %"class.rx::vk::ClearValuesArray"* %0, i64 0, i32 1, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = or i64 %11, %9
  store i64 %12, i64* %10, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK2rx2vk16ClearValuesArray12getColorMaskEv(%"class.angle::BitSetT.147"* noalias nocapture sret, %"class.rx::vk::ClearValuesArray"* nocapture readonly) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::ClearValuesArray", %"class.rx::vk::ClearValuesArray"* %1, i64 0, i32 1, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %4 to i8
  %6 = getelementptr inbounds %"class.angle::BitSetT.147", %"class.angle::BitSetT.147"* %0, i64 0, i32 0
  store i8 %5, i8* %6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx2vk21ResourceSerialFactoryC2Ev(%"class.rx::vk::ResourceSerialFactory"* nocapture) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::ResourceSerialFactory", %"class.rx::vk::ResourceSerialFactory"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %2, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2rx2vk21ResourceSerialFactoryD2Ev(%"class.rx::vk::ResourceSerialFactory"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN2rx2vk21ResourceSerialFactory11issueSerialEv(%"class.rx::vk::ResourceSerialFactory"* nocapture) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::ResourceSerialFactory", %"class.rx::vk::ResourceSerialFactory"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw add i32* %2, i32 1 seq_cst
  %4 = add i32 %3, 1
  ret i32 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN2rx2vk21ResourceSerialFactory20generateBufferSerialEv(%"class.rx::vk::ResourceSerialFactory"* nocapture) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::ResourceSerialFactory", %"class.rx::vk::ResourceSerialFactory"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw add i32* %2, i32 1 seq_cst
  %4 = add i32 %3, 1
  ret i32 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN2rx2vk21ResourceSerialFactory19generateImageSerialEv(%"class.rx::vk::ResourceSerialFactory"* nocapture) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::ResourceSerialFactory", %"class.rx::vk::ResourceSerialFactory"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw add i32* %2, i32 1 seq_cst
  %4 = add i32 %3, 1
  ret i32 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN2rx2vk21ResourceSerialFactory31generateImageOrBufferViewSerialEv(%"class.rx::vk::ResourceSerialFactory"* nocapture) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::ResourceSerialFactory", %"class.rx::vk::ResourceSerialFactory"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw add i32* %2, i32 1 seq_cst
  %4 = add i32 %3, 1
  ret i32 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN2rx2vk21ResourceSerialFactory21generateSamplerSerialEv(%"class.rx::vk::ResourceSerialFactory"* nocapture) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::ResourceSerialFactory", %"class.rx::vk::ResourceSerialFactory"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw add i32* %2, i32 1 seq_cst
  %4 = add i32 %3, 1
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx29CalculateGenerateMipmapFilterEPNS_9ContextVkERKNS_2vk6FormatE(%"class.rx::ContextVk"* nocapture readonly, %"struct.rx::vk::Format"* nocapture readonly dereferenceable(64)) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %3, align 8
  %5 = getelementptr inbounds %"struct.rx::vk::Format", %"struct.rx::vk::Format"* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = tail call zeroext i1 @_ZNK2rx10RendererVk25hasImageFormatFeatureBitsEN5angle8FormatIDEj(%"class.rx::RendererVk"* %4, i32 %6, i32 4096) #20
  %8 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %0, i64 0, i32 0, i32 1
  %9 = load %"class.gl::State"*, %"class.gl::State"** %8, align 8
  %10 = tail call i32 @_ZNK2gl5State21getGenerateMipmapHintEv(%"class.gl::State"* %9) #20
  %11 = icmp eq i32 %10, 4353
  %12 = select i1 %11, i32 9728, i32 9729
  %13 = select i1 %7, i32 %12, i32 9728
  ret i32 %13
}

declare zeroext i1 @_ZNK2rx10RendererVk25hasImageFormatFeatureBitsEN5angle8FormatIDEj(%"class.rx::RendererVk"*, i32, i32) local_unnamed_addr #2

declare i32 @_ZNK2gl5State21getGenerateMipmapHintEv(%"class.gl::State"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone ssp uwtable
define hidden i64 @_ZN2rx15PackSampleCountEi(i32) local_unnamed_addr #11 {
  %2 = icmp eq i32 %0, 0
  %3 = select i1 %2, i32 1, i32 %0
  %4 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true) #20, !range !7
  %5 = zext i32 %4 to i64
  ret i64 %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2rx5gl_vk9GetFilterEj(i32) local_unnamed_addr #3 {
  switch i32 %0, label %3 [
    i32 9987, label %4
    i32 9985, label %4
    i32 9729, label %4
    i32 9986, label %2
    i32 9984, label %2
    i32 9728, label %2
  ]

2:                                                ; preds = %1, %1, %1
  br label %4

3:                                                ; preds = %1
  br label %4

4:                                                ; preds = %1, %1, %1, %3, %2
  %5 = phi i32 [ 2147483647, %3 ], [ 0, %2 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ]
  ret i32 %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2rx5gl_vk20GetSamplerMipmapModeEj(i32) local_unnamed_addr #3 {
  switch i32 %0, label %3 [
    i32 9987, label %4
    i32 9986, label %4
    i32 9729, label %2
    i32 9728, label %2
    i32 9984, label %2
    i32 9985, label %2
  ]

2:                                                ; preds = %1, %1, %1, %1
  br label %4

3:                                                ; preds = %1
  br label %4

4:                                                ; preds = %1, %1, %3, %2
  %5 = phi i32 [ 2147483647, %3 ], [ 0, %2 ], [ 1, %1 ], [ 1, %1 ]
  ret i32 %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2rx5gl_vk21GetSamplerAddressModeEj(i32) local_unnamed_addr #3 {
  switch i32 %0, label %5 [
    i32 10497, label %6
    i32 33648, label %2
    i32 33069, label %3
    i32 33071, label %4
  ]

2:                                                ; preds = %1
  br label %6

3:                                                ; preds = %1
  br label %6

4:                                                ; preds = %1
  br label %6

5:                                                ; preds = %1
  br label %6

6:                                                ; preds = %1, %5, %4, %3, %2
  %7 = phi i32 [ 2147483647, %5 ], [ 2, %4 ], [ 3, %3 ], [ 1, %2 ], [ 0, %1 ]
  ret i32 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN2rx5gl_vk7GetRectERKN2gl9RectangleE(%"struct.gl::Rectangle"* nocapture readonly dereferenceable(16)) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %5 to i64
  %11 = shl nuw i64 %10, 32
  %12 = zext i32 %3 to i64
  %13 = or i64 %11, %12
  %14 = insertvalue { i64, i64 } undef, i64 %13, 0
  %15 = zext i32 %9 to i64
  %16 = shl nuw i64 %15, 32
  %17 = zext i32 %7 to i64
  %18 = or i64 %16, %17
  %19 = insertvalue { i64, i64 } %14, i64 %18, 1
  ret { i64, i64 } %19
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2rx5gl_vk20GetPrimitiveTopologyEN2gl13PrimitiveModeE(i8 zeroext) local_unnamed_addr #3 {
  %2 = icmp ult i8 %0, 15
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i8 %0 to i64
  %5 = getelementptr inbounds [15 x i32], [15 x i32]* @switch.table._ZN2rx5gl_vk20GetPrimitiveTopologyEN2gl13PrimitiveModeE, i64 0, i64 %4
  %6 = load i32, i32* %5, align 4
  ret i32 %6

7:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN2rx5gl_vk11GetCullModeERKN2gl15RasterizerStateE(%"struct.gl::RasterizerState"* nocapture readonly dereferenceable(24)) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %"struct.gl::RasterizerState", %"struct.gl::RasterizerState"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.gl::RasterizerState", %"struct.gl::RasterizerState"* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp ult i8 %7, 3
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = sext i8 %7 to i64
  %11 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN2rx5gl_vk11GetCullModeERKN2gl15RasterizerStateE, i64 0, i64 %10
  %12 = load i32, i32* %11, align 4
  ret i32 %12

13:                                               ; preds = %5, %1
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2rx5gl_vk12GetFrontFaceEjb(i32, i1 zeroext) local_unnamed_addr #3 {
  switch i32 %0, label %5 [
    i32 2304, label %6
    i32 2305, label %3
  ]

3:                                                ; preds = %2
  %4 = xor i1 %1, true
  br label %6

5:                                                ; preds = %2
  br label %6

6:                                                ; preds = %2, %5, %3
  %7 = phi i1 [ true, %5 ], [ %4, %3 ], [ %1, %2 ]
  %8 = zext i1 %7 to i32
  ret i32 %8
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2rx5gl_vk10GetSamplesEi(i32) local_unnamed_addr #3 {
  switch i32 %0, label %7 [
    i32 0, label %8
    i32 1, label %8
    i32 2, label %2
    i32 4, label %3
    i32 8, label %4
    i32 16, label %5
    i32 32, label %6
  ]

2:                                                ; preds = %1
  br label %8

3:                                                ; preds = %1
  br label %8

4:                                                ; preds = %1
  br label %8

5:                                                ; preds = %1
  br label %8

6:                                                ; preds = %1
  br label %8

7:                                                ; preds = %1
  br label %8

8:                                                ; preds = %1, %1, %7, %6, %5, %4, %3, %2
  %9 = phi i32 [ 2147483647, %7 ], [ %0, %6 ], [ %0, %5 ], [ %0, %4 ], [ %0, %3 ], [ %0, %2 ], [ 1, %1 ], [ 1, %1 ]
  ret i32 %9
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2rx5gl_vk10GetSwizzleEj(i32) local_unnamed_addr #3 {
  switch i32 %0, label %7 [
    i32 6406, label %8
    i32 6403, label %2
    i32 6404, label %3
    i32 6405, label %4
    i32 0, label %5
    i32 1, label %6
  ]

2:                                                ; preds = %1
  br label %8

3:                                                ; preds = %1
  br label %8

4:                                                ; preds = %1
  br label %8

5:                                                ; preds = %1
  br label %8

6:                                                ; preds = %1
  br label %8

7:                                                ; preds = %1
  br label %8

8:                                                ; preds = %1, %7, %6, %5, %4, %3, %2
  %9 = phi i32 [ 0, %7 ], [ 2, %6 ], [ 1, %5 ], [ 5, %4 ], [ 4, %3 ], [ 3, %2 ], [ 6, %1 ]
  ret i32 %9
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2rx5gl_vk12GetCompareOpEj(i32) local_unnamed_addr #3 {
  %2 = add i32 %0, -512
  %3 = icmp ult i32 %2, 7
  %4 = select i1 %3, i32 %2, i32 7
  ret i32 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx5gl_vk9GetOffsetERKN2gl6OffsetEP10VkOffset3D(%"struct.gl::Offset"* nocapture readonly dereferenceable(12), %struct.VkOffset3D* nocapture) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %"struct.gl::Offset", %"struct.gl::Offset"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %struct.VkOffset3D, %struct.VkOffset3D* %1, i64 0, i32 0
  store i32 %4, i32* %5, align 4
  %6 = getelementptr inbounds %"struct.gl::Offset", %"struct.gl::Offset"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %struct.VkOffset3D, %struct.VkOffset3D* %1, i64 0, i32 1
  store i32 %7, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.gl::Offset", %"struct.gl::Offset"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %struct.VkOffset3D, %struct.VkOffset3D* %1, i64 0, i32 2
  store i32 %10, i32* %11, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx5gl_vk9GetExtentERKN2gl7ExtentsEP10VkExtent3D(%"struct.gl::Extents"* nocapture readonly dereferenceable(12), %struct.VkExtent3D* nocapture) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %struct.VkExtent3D, %struct.VkExtent3D* %1, i64 0, i32 0
  store i32 %4, i32* %5, align 4
  %6 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %struct.VkExtent3D, %struct.VkExtent3D* %1, i64 0, i32 1
  store i32 %7, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %struct.VkExtent3D, %struct.VkExtent3D* %1, i64 0, i32 2
  store i32 %10, i32* %11, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2rx5gl_vk12GetImageTypeEN2gl11TextureTypeE(i8 zeroext) local_unnamed_addr #3 {
  %2 = icmp ult i8 %0, 9
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i8 %0 to i64
  %5 = getelementptr inbounds [9 x i32], [9 x i32]* @switch.table._ZN2rx5gl_vk12GetImageTypeEN2gl11TextureTypeE, i64 0, i64 %4
  %6 = load i32, i32* %5, align 4
  ret i32 %6

7:                                                ; preds = %1
  ret i32 2147483647
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2rx5gl_vk16GetImageViewTypeEN2gl11TextureTypeE(i8 zeroext) local_unnamed_addr #3 {
  %2 = icmp ult i8 %0, 9
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i8 %0 to i64
  %5 = getelementptr inbounds [9 x i32], [9 x i32]* @switch.table._ZN2rx5gl_vk16GetImageViewTypeEN2gl11TextureTypeE, i64 0, i64 %4
  %6 = load i32, i32* %5, align 4
  ret i32 %6

7:                                                ; preds = %1
  ret i32 2147483647
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2rx5gl_vk22GetColorComponentFlagsEbbbb(i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #3 {
  %5 = zext i1 %0 to i32
  %6 = select i1 %1, i32 2, i32 0
  %7 = or i32 %6, %5
  %8 = select i1 %2, i32 4, i32 0
  %9 = or i32 %7, %8
  %10 = select i1 %3, i32 8, i32 0
  %11 = or i32 %9, %10
  ret i32 %11
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN2rx5gl_vk19GetShaderStageFlagsEN5angle7BitSetTILm6EhN2gl10ShaderTypeEEE(%"class.angle::BitSetT.141"* nocapture readonly) local_unnamed_addr #12 {
  %2 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 1, !noalias !31
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = zext i8 %3 to i32
  %7 = tail call i32 @llvm.cttz.i32(i32 %6, i1 true) #20, !range !7
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.angle::PackedEnumMap.1315", %"class.angle::PackedEnumMap.1315"* @_ZN2rx5gl_vkL15kShaderStageMapE, i64 0, i32 0, i32 0, i64 %8
  %10 = load i32, i32* %9, align 4
  %11 = shl i32 1, %7
  %12 = trunc i32 %11 to i8
  %13 = xor i8 %12, -1
  %14 = and i8 %3, %13
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %18, %5, %1
  %17 = phi i32 [ 0, %1 ], [ %10, %5 ], [ %26, %18 ]
  ret i32 %17

18:                                               ; preds = %5, %18
  %19 = phi i8 [ %30, %18 ], [ %14, %5 ]
  %20 = phi i32 [ %26, %18 ], [ %10, %5 ]
  %21 = zext i8 %19 to i32
  %22 = tail call i32 @llvm.cttz.i32(i32 %21, i1 true) #20, !range !7
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.angle::PackedEnumMap.1315", %"class.angle::PackedEnumMap.1315"* @_ZN2rx5gl_vkL15kShaderStageMapE, i64 0, i32 0, i32 0, i64 %23
  %25 = load i32, i32* %24, align 4
  %26 = or i32 %25, %20
  %27 = shl i32 1, %22
  %28 = trunc i32 %27 to i8
  %29 = xor i8 %28, -1
  %30 = and i8 %19, %29
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %16, label %18
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx5gl_vk11GetViewportERKN2gl9RectangleEffbbiP10VkViewport(%"struct.gl::Rectangle"* nocapture readonly dereferenceable(16), float, float, i1 zeroext, i1 zeroext, i32, %struct.VkViewport* nocapture) local_unnamed_addr #9 {
  %8 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = sitofp i32 %9 to float
  %11 = getelementptr inbounds %struct.VkViewport, %struct.VkViewport* %6, i64 0, i32 0
  store float %10, float* %11, align 4
  %12 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = sitofp i32 %13 to float
  %15 = getelementptr inbounds %struct.VkViewport, %struct.VkViewport* %6, i64 0, i32 1
  store float %14, float* %15, align 4
  %16 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %0, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = sitofp i32 %17 to float
  %19 = getelementptr inbounds %struct.VkViewport, %struct.VkViewport* %6, i64 0, i32 2
  store float %18, float* %19, align 4
  %20 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %0, i64 0, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = sitofp i32 %21 to float
  %23 = getelementptr inbounds %struct.VkViewport, %struct.VkViewport* %6, i64 0, i32 3
  store float %22, float* %23, align 4
  %24 = fcmp ogt float %1, 0.000000e+00
  %25 = fcmp ogt float %1, 1.000000e+00
  %26 = select i1 %25, float 1.000000e+00, float %1
  %27 = select i1 %24, float %26, float 0.000000e+00
  %28 = getelementptr inbounds %struct.VkViewport, %struct.VkViewport* %6, i64 0, i32 4
  store float %27, float* %28, align 4
  %29 = fcmp ogt float %2, 0.000000e+00
  %30 = fcmp ogt float %2, 1.000000e+00
  %31 = select i1 %30, float 1.000000e+00, float %2
  %32 = select i1 %29, float %31, float 0.000000e+00
  %33 = getelementptr inbounds %struct.VkViewport, %struct.VkViewport* %6, i64 0, i32 5
  store float %32, float* %33, align 4
  br i1 %4, label %34, label %44

34:                                               ; preds = %7
  %35 = load i32, i32* %20, align 4
  %36 = load i32, i32* %12, align 4
  %37 = add nsw i32 %36, %35
  br i1 %3, label %38, label %41

38:                                               ; preds = %34
  %39 = sub nsw i32 %5, %37
  %40 = sitofp i32 %39 to float
  store float %40, float* %15, align 4
  br label %50

41:                                               ; preds = %34
  %42 = sitofp i32 %37 to float
  store float %42, float* %15, align 4
  %43 = fsub float -0.000000e+00, %22
  store float %43, float* %23, align 4
  br label %50

44:                                               ; preds = %7
  br i1 %3, label %45, label %50

45:                                               ; preds = %44
  %46 = load i32, i32* %12, align 4
  %47 = sub nsw i32 %5, %46
  %48 = sitofp i32 %47 to float
  store float %48, float* %15, align 4
  %49 = fsub float -0.000000e+00, %22
  store float %49, float* %23, align 4
  br label %50

50:                                               ; preds = %44, %45, %38, %41
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx5gl_vk23GetExtentsAndLayerCountEN2gl11TextureTypeERKNS1_7ExtentsEP10VkExtent3DPj(i8 zeroext, %"struct.gl::Extents"* nocapture readonly dereferenceable(12), %struct.VkExtent3D* nocapture, i32* nocapture) local_unnamed_addr #9 {
  %5 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.VkExtent3D, %struct.VkExtent3D* %2, i64 0, i32 0
  store i32 %6, i32* %7, align 4
  %8 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %struct.VkExtent3D, %struct.VkExtent3D* %2, i64 0, i32 1
  store i32 %9, i32* %10, align 4
  switch i8 %0, label %17 [
    i8 7, label %11
    i8 1, label %13
    i8 3, label %13
    i8 8, label %13
  ]

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.VkExtent3D, %struct.VkExtent3D* %2, i64 0, i32 2
  store i32 1, i32* %12, align 4
  br label %21

13:                                               ; preds = %4, %4, %4
  %14 = getelementptr inbounds %struct.VkExtent3D, %struct.VkExtent3D* %2, i64 0, i32 2
  store i32 1, i32* %14, align 4
  %15 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %1, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  br label %21

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.VkExtent3D, %struct.VkExtent3D* %2, i64 0, i32 2
  store i32 %19, i32* %20, align 4
  br label %21

21:                                               ; preds = %17, %13, %11
  %22 = phi i32 [ 1, %17 ], [ %16, %13 ], [ 6, %11 ]
  store i32 %22, i32* %3, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2rx5gl_vk13GetLevelIndexEN2gl17LevelIndexWrapperIiEES3_(i32, i32) local_unnamed_addr #3 {
  %3 = sub nsw i32 %0, %1
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx5vk_gl15AddSampleCountsEjPNSt3__13setIjNS1_4lessIjEENS1_9allocatorIjEEEE(i32, %"class.std::__1::set.35"*) local_unnamed_addr #1 {
  %3 = and i32 %0, 30
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %14, label %5

5:                                                ; preds = %2
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true) #20, !range !34
  %7 = getelementptr inbounds %"class.std::__1::set.35", %"class.std::__1::set.35"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = getelementptr inbounds %"class.std::__1::set.35", %"class.std::__1::set.35"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::set.35", %"class.std::__1::set.35"* %1, i64 0, i32 0, i32 0
  %12 = bitcast %"class.std::__1::set.35"* %1 to i64*
  %13 = getelementptr inbounds %"class.std::__1::set.35", %"class.std::__1::set.35"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %15

14:                                               ; preds = %73, %2
  ret void

15:                                               ; preds = %5, %73
  %16 = phi i32 [ %6, %5 ], [ %77, %73 ]
  %17 = phi i32 [ %3, %5 ], [ %75, %73 ]
  %18 = shl i32 1, %16
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %47, label %21

21:                                               ; preds = %15, %43
  %22 = phi %"class.std::__1::__tree_node"* [ %46, %43 ], [ %19, %15 ]
  %23 = phi %"class.std::__1::__tree_node_base"** [ %45, %43 ], [ %9, %15 ]
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp ult i32 %18, %25
  br i1 %26, label %27, label %33

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %31, label %43

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  br label %47

33:                                               ; preds = %21
  %34 = icmp ult i32 %25, %18
  br i1 %34, label %35, label %41

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node_base"* %37, null
  br i1 %38, label %39, label %43

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  br label %47

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  br label %47

43:                                               ; preds = %35, %27
  %44 = phi %"class.std::__1::__tree_node_base"* [ %29, %27 ], [ %37, %35 ]
  %45 = phi %"class.std::__1::__tree_node_base"** [ %28, %27 ], [ %36, %35 ]
  %46 = bitcast %"class.std::__1::__tree_node_base"* %44 to %"class.std::__1::__tree_node"*
  br label %21

47:                                               ; preds = %15, %41, %39, %31
  %48 = phi %"class.std::__1::__tree_end_node"* [ %32, %31 ], [ %40, %39 ], [ %42, %41 ], [ %7, %15 ]
  %49 = phi %"class.std::__1::__tree_node_base"** [ %28, %31 ], [ %36, %39 ], [ %23, %41 ], [ %10, %15 ]
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %50, align 8
  %52 = icmp eq %"class.std::__1::__tree_node"* %51, null
  br i1 %52, label %53, label %73

53:                                               ; preds = %47
  %54 = tail call i8* @_Znwm(i64 32) #22, !noalias !35
  %55 = getelementptr inbounds i8, i8* %54, i64 28
  %56 = bitcast i8* %55 to i32*
  store i32 %18, i32* %56, align 4, !noalias !35
  %57 = bitcast i8* %54 to %"class.std::__1::__tree_node_base"*
  %58 = getelementptr inbounds i8, i8* %54, i64 16
  %59 = bitcast i8* %58 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 0, i64 16, i1 false) #20
  store %"class.std::__1::__tree_end_node"* %48, %"class.std::__1::__tree_end_node"** %59, align 8
  %60 = bitcast %"class.std::__1::__tree_node_base"** %49 to i8**
  store i8* %54, i8** %60, align 8
  %61 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %11, align 8
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %61, i64 0, i32 0
  %63 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node_base"* %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %53
  %66 = ptrtoint %"class.std::__1::__tree_node_base"* %63 to i64
  store i64 %66, i64* %12, align 8
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  br label %68

68:                                               ; preds = %65, %53
  %69 = phi %"class.std::__1::__tree_node_base"* [ %57, %53 ], [ %67, %65 ]
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %70, %"class.std::__1::__tree_node_base"* %69) #20
  %71 = load i64, i64* %13, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %13, align 8
  br label %73

73:                                               ; preds = %47, %68
  %74 = xor i32 %18, -1
  %75 = and i32 %17, %74
  %76 = icmp eq i32 %75, 0
  %77 = tail call i32 @llvm.cttz.i32(i32 %75, i1 true) #20, !range !7
  br i1 %76, label %14, label %15
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden i32 @_ZN2rx5vk_gl17GetMaxSampleCountEj(i32) local_unnamed_addr #11 {
  %2 = and i32 %0, 30
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = tail call i32 @llvm.cttz.i32(i32 %2, i1 true) #20, !range !34
  br label %8

6:                                                ; preds = %8, %1
  %7 = phi i32 [ 0, %1 ], [ %11, %8 ]
  ret i32 %7

8:                                                ; preds = %4, %8
  %9 = phi i32 [ %15, %8 ], [ %5, %4 ]
  %10 = phi i32 [ %13, %8 ], [ %2, %4 ]
  %11 = shl i32 1, %9
  %12 = xor i32 %11, -1
  %13 = and i32 %10, %12
  %14 = icmp eq i32 %13, 0
  %15 = tail call i32 @llvm.cttz.i32(i32 %13, i1 true) #20, !range !7
  br i1 %14, label %6, label %8
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden i32 @_ZN2rx5vk_gl14GetSampleCountEjj(i32, i32) local_unnamed_addr #11 {
  %3 = and i32 %0, 30
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %17, label %5

5:                                                ; preds = %2
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true) #20, !range !34
  br label %7

7:                                                ; preds = %5, %12
  %8 = phi i32 [ %16, %12 ], [ %6, %5 ]
  %9 = phi i32 [ %14, %12 ], [ %3, %5 ]
  %10 = shl i32 1, %8
  %11 = icmp ult i32 %10, %1
  br i1 %11, label %12, label %17

12:                                               ; preds = %7
  %13 = xor i32 %10, -1
  %14 = and i32 %9, %13
  %15 = icmp eq i32 %14, 0
  %16 = tail call i32 @llvm.cttz.i32(i32 %14, i1 true) #20, !range !7
  br i1 %15, label %17, label %7

17:                                               ; preds = %7, %12, %2
  %18 = phi i32 [ 0, %2 ], [ 0, %12 ], [ %10, %7 ]
  ret i32 %18
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2rx5vk_gl13GetLevelIndexEN2gl17LevelIndexWrapperIjEENS2_IiEE(i32, i32) local_unnamed_addr #3 {
  %3 = add i32 %1, %0
  ret i32 %3
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2rx12_GLOBAL__N_118HasValidationLayerERKNSt3__16vectorI17VkLayerPropertiesNS1_9allocatorIS3_EEEEPKc(%"class.std::__1::vector.989"* nocapture readonly dereferenceable(24), i8*) unnamed_addr #1 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.989", %"class.std::__1::vector.989"* %0, i64 0, i32 0, i32 0
  %5 = load %struct.VkLayerProperties*, %struct.VkLayerProperties** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.989", %"class.std::__1::vector.989"* %0, i64 0, i32 0, i32 1
  %7 = load %struct.VkLayerProperties*, %struct.VkLayerProperties** %6, align 8
  %8 = icmp eq %struct.VkLayerProperties* %5, %7
  br i1 %8, label %59, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  br label %18

16:                                               ; preds = %57
  %17 = icmp eq %struct.VkLayerProperties* %58, %7
  br i1 %17, label %59, label %18

18:                                               ; preds = %9, %16
  %19 = phi %struct.VkLayerProperties* [ %5, %9 ], [ %58, %16 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #20
  %20 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %19, i64 0, i32 0, i64 0
  %21 = call i64 @strlen(i8* %20) #20
  %22 = icmp ugt i64 %21, -17
  br i1 %22, label %23, label %25

23:                                               ; preds = %18
  %24 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %24) #21
  unreachable

25:                                               ; preds = %18
  %26 = icmp ult i64 %21, 23
  br i1 %26, label %32, label %27

27:                                               ; preds = %25
  %28 = add nuw i64 %21, 16
  %29 = and i64 %28, -16
  %30 = call i8* @_Znwm(i64 %29) #22
  store i8* %30, i8** %11, align 8
  %31 = or i64 %29, -9223372036854775808
  store i64 %31, i64* %12, align 8
  store i64 %21, i64* %13, align 8
  br label %35

32:                                               ; preds = %25
  %33 = trunc i64 %21 to i8
  store i8 %33, i8* %15, align 1
  %34 = icmp eq i64 %21, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %32, %27
  %36 = phi i8* [ %30, %27 ], [ %10, %32 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* align 1 %20, i64 %21, i1 false) #20
  br label %37

37:                                               ; preds = %32, %35
  %38 = phi i8* [ %10, %32 ], [ %36, %35 ]
  %39 = getelementptr inbounds i8, i8* %38, i64 %21
  store i8 0, i8* %39, align 1
  %40 = call i64 @strlen(i8* %1) #20
  %41 = load i8, i8* %15, align 1
  %42 = icmp slt i8 %41, 0
  %43 = load i64, i64* %13, align 8
  %44 = zext i8 %41 to i64
  %45 = select i1 %42, i64 %43, i64 %44
  %46 = icmp eq i64 %40, %45
  br i1 %46, label %47, label %51

47:                                               ; preds = %37
  %48 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* %1, i64 %40) #20
  %49 = icmp eq i32 %48, 0
  %50 = load i8, i8* %15, align 1
  br label %51

51:                                               ; preds = %37, %47
  %52 = phi i8 [ %50, %47 ], [ %41, %37 ]
  %53 = phi i1 [ %49, %47 ], [ false, %37 ]
  %54 = icmp slt i8 %52, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %51
  %56 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %56) #22
  br label %57

57:                                               ; preds = %51, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #20
  %58 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %19, i64 1
  br i1 %53, label %59, label %16

59:                                               ; preds = %16, %57, %2
  %60 = phi i1 [ false, %2 ], [ true, %57 ], [ false, %16 ]
  ret i1 %60
}

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #13

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #14

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #15

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #16

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #17

declare i32 @_ZN3vma12CreateBufferEP14VmaAllocator_TPK18VkBufferCreateInfojjbPjPP10VkBuffer_TPP15VmaAllocation_T(%struct.VmaAllocator_T*, %struct.VkBufferCreateInfo*, i32, i32, i1 zeroext, i32*, %struct.VkBuffer_T**, %struct.VmaAllocation_T**) local_unnamed_addr #2

declare void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2rx2vk13SharedGarbageENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJNS2_17SharedResourceUseENS0_INS2_13GarbageObjectENS4_IS9_EEEEEEEvDpOT_(%"class.std::__1::vector.691"*, %"class.rx::vk::SharedResourceUse"* dereferenceable(8), %"class.std::__1::vector.693"* dereferenceable(24)) local_unnamed_addr #18 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.691", %"class.std::__1::vector.691"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.rx::vk::SharedGarbage"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.691"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 5
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 576460752303423487
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.691"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #21
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.691", %"class.std::__1::vector.691"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.rx::vk::SharedGarbage"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = ashr exact i64 %19, 5
  %21 = icmp ult i64 %20, 288230376151711743
  br i1 %21, label %22, label %30

22:                                               ; preds = %15
  %23 = ashr exact i64 %19, 4
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = icmp ugt i64 %25, 576460752303423487
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  tail call void @abort() #21
  unreachable

30:                                               ; preds = %15, %27
  %31 = phi i64 [ %25, %27 ], [ 576460752303423487, %15 ]
  %32 = shl i64 %31, 5
  %33 = tail call i8* @_Znwm(i64 %32) #22
  %34 = bitcast i8* %33 to %"class.rx::vk::SharedGarbage"*
  br label %35

35:                                               ; preds = %22, %30
  %36 = phi i64 [ %31, %30 ], [ 0, %22 ]
  %37 = phi %"class.rx::vk::SharedGarbage"* [ %34, %30 ], [ null, %22 ]
  %38 = getelementptr inbounds %"class.rx::vk::SharedGarbage", %"class.rx::vk::SharedGarbage"* %37, i64 %10
  %39 = getelementptr inbounds %"class.rx::vk::SharedGarbage", %"class.rx::vk::SharedGarbage"* %37, i64 %36
  %40 = ptrtoint %"class.rx::vk::SharedGarbage"* %39 to i64
  tail call void @_ZN2rx2vk13SharedGarbageC1EONS0_17SharedResourceUseEONSt3__16vectorINS0_13GarbageObjectENS4_9allocatorIS6_EEEE(%"class.rx::vk::SharedGarbage"* %38, %"class.rx::vk::SharedResourceUse"* dereferenceable(8) %1, %"class.std::__1::vector.693"* dereferenceable(24) %2) #20
  %41 = getelementptr inbounds %"class.rx::vk::SharedGarbage", %"class.rx::vk::SharedGarbage"* %38, i64 1
  %42 = ptrtoint %"class.rx::vk::SharedGarbage"* %41 to i64
  %43 = getelementptr inbounds %"class.std::__1::vector.691", %"class.std::__1::vector.691"* %0, i64 0, i32 0, i32 0
  %44 = load %"class.rx::vk::SharedGarbage"*, %"class.rx::vk::SharedGarbage"** %43, align 8
  %45 = load %"class.rx::vk::SharedGarbage"*, %"class.rx::vk::SharedGarbage"** %4, align 8
  %46 = icmp eq %"class.rx::vk::SharedGarbage"* %45, %44
  br i1 %46, label %47, label %49

47:                                               ; preds = %35
  %48 = ptrtoint %"class.rx::vk::SharedGarbage"* %44 to i64
  br label %58

49:                                               ; preds = %35, %49
  %50 = phi %"class.rx::vk::SharedGarbage"* [ %52, %49 ], [ %38, %35 ]
  %51 = phi %"class.rx::vk::SharedGarbage"* [ %53, %49 ], [ %45, %35 ]
  %52 = getelementptr inbounds %"class.rx::vk::SharedGarbage", %"class.rx::vk::SharedGarbage"* %50, i64 -1
  %53 = getelementptr inbounds %"class.rx::vk::SharedGarbage", %"class.rx::vk::SharedGarbage"* %51, i64 -1
  tail call void @_ZN2rx2vk13SharedGarbageC1EOS1_(%"class.rx::vk::SharedGarbage"* %52, %"class.rx::vk::SharedGarbage"* dereferenceable(32) %53) #20
  %54 = icmp eq %"class.rx::vk::SharedGarbage"* %53, %44
  br i1 %54, label %55, label %49

55:                                               ; preds = %49
  %56 = load i64, i64* %7, align 8
  %57 = load %"class.rx::vk::SharedGarbage"*, %"class.rx::vk::SharedGarbage"** %4, align 8
  br label %58

58:                                               ; preds = %47, %55
  %59 = phi %"class.rx::vk::SharedGarbage"* [ %44, %47 ], [ %57, %55 ]
  %60 = phi %"class.rx::vk::SharedGarbage"* [ %38, %47 ], [ %52, %55 ]
  %61 = phi i64 [ %48, %47 ], [ %56, %55 ]
  %62 = ptrtoint %"class.rx::vk::SharedGarbage"* %60 to i64
  store i64 %62, i64* %7, align 8
  store i64 %42, i64* %5, align 8
  store i64 %40, i64* %17, align 8
  %63 = inttoptr i64 %61 to %"class.rx::vk::SharedGarbage"*
  %64 = icmp eq %"class.rx::vk::SharedGarbage"* %59, %63
  br i1 %64, label %69, label %65

65:                                               ; preds = %58, %65
  %66 = phi %"class.rx::vk::SharedGarbage"* [ %67, %65 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.rx::vk::SharedGarbage", %"class.rx::vk::SharedGarbage"* %66, i64 -1
  tail call void @_ZN2rx2vk13SharedGarbageD1Ev(%"class.rx::vk::SharedGarbage"* %67) #20
  %68 = icmp eq %"class.rx::vk::SharedGarbage"* %67, %63
  br i1 %68, label %69, label %65

69:                                               ; preds = %65, %58
  %70 = icmp eq i64 %61, 0
  br i1 %70, label %73, label %71

71:                                               ; preds = %69
  %72 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %72) #22
  br label %73

73:                                               ; preds = %69, %71
  ret void
}

declare void @_ZN2rx2vk13SharedGarbageC1EONS0_17SharedResourceUseEONSt3__16vectorINS0_13GarbageObjectENS4_9allocatorIS6_EEEE(%"class.rx::vk::SharedGarbage"*, %"class.rx::vk::SharedResourceUse"* dereferenceable(8), %"class.std::__1::vector.693"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #14

declare void @_ZN2rx2vk13SharedGarbageC1EOS1_(%"class.rx::vk::SharedGarbage"*, %"class.rx::vk::SharedGarbage"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2rx2vk13SharedGarbageD1Ev(%"class.rx::vk::SharedGarbage"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"*) local_unnamed_addr #5

declare i32 @_ZN3vma9MapMemoryEP14VmaAllocator_TP15VmaAllocation_TPPv(%struct.VmaAllocator_T*, %struct.VmaAllocation_T*, i8**) local_unnamed_addr #2

declare void @_ZN3vma15FlushAllocationEP14VmaAllocator_TP15VmaAllocation_Tmm(%struct.VmaAllocator_T*, %struct.VmaAllocation_T*, i64, i64) local_unnamed_addr #2

declare void @_ZN3vma11UnmapMemoryEP14VmaAllocator_TP15VmaAllocation_T(%struct.VmaAllocator_T*, %struct.VmaAllocation_T*) local_unnamed_addr #2

declare i64 @_ZN5angle13AddTraceEventEPNS_15PlatformMethodsEcPKhPKcyiPS5_S3_PKyh(%"struct.angle::PlatformMethods"*, i8 signext, i8*, i8*, i64, i32, i8**, i8*, i64*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #19

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #1 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #20
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #20
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #20
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #20
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #20
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #20
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #20
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #20
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #1 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #20
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #20
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #22
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #20
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #20
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #22
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #20
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #20
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #5

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #5

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2rx2vk13GarbageObjectENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector.693"*, %"class.rx::vk::GarbageObject"* dereferenceable(16)) local_unnamed_addr #18 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.693", %"class.std::__1::vector.693"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.rx::vk::GarbageObject"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.693"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.693"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #21
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.693", %"class.std::__1::vector.693"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.rx::vk::GarbageObject"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #21
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #22
  %33 = bitcast i8* %32 to %"class.rx::vk::GarbageObject"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.rx::vk::GarbageObject"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %36, i64 %9
  %38 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %36, i64 %35
  %39 = ptrtoint %"class.rx::vk::GarbageObject"* %38 to i64
  %40 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %37, i64 0, i32 0
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %36, i64 %9, i32 1
  store %"struct.rx::vk::GarbageHandle_T"* null, %"struct.rx::vk::GarbageHandle_T"** %41, align 8
  %42 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %1, i64 0, i32 1
  %43 = bitcast %"struct.rx::vk::GarbageHandle_T"** %41 to i64*
  %44 = bitcast %"struct.rx::vk::GarbageHandle_T"** %42 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %43, align 8
  store i64 0, i64* %44, align 8
  %46 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %1, i64 0, i32 0
  %47 = load i32, i32* %40, align 4
  %48 = load i32, i32* %46, align 4
  store i32 %48, i32* %40, align 4
  store i32 %47, i32* %46, align 4
  %49 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %37, i64 1
  %50 = ptrtoint %"class.rx::vk::GarbageObject"* %49 to i64
  %51 = getelementptr inbounds %"class.std::__1::vector.693", %"class.std::__1::vector.693"* %0, i64 0, i32 0, i32 0
  %52 = load %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"** %51, align 8
  %53 = ptrtoint %"class.rx::vk::GarbageObject"* %52 to i64
  %54 = load %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"** %3, align 8
  %55 = icmp eq %"class.rx::vk::GarbageObject"* %54, %52
  br i1 %55, label %106, label %56

56:                                               ; preds = %34
  %57 = getelementptr %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %54, i64 -1, i32 0
  %58 = ptrtoint i32* %57 to i64
  %59 = sub i64 %58, %53
  %60 = and i64 %59, 16
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %54, i64 -1
  %64 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %37, i64 -1, i32 0
  store i32 0, i32* %64, align 8
  %65 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %37, i64 -1, i32 1
  store %"struct.rx::vk::GarbageHandle_T"* null, %"struct.rx::vk::GarbageHandle_T"** %65, align 8
  %66 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %54, i64 -1, i32 1
  %67 = bitcast %"struct.rx::vk::GarbageHandle_T"** %65 to i64*
  %68 = bitcast %"struct.rx::vk::GarbageHandle_T"** %66 to i64*
  %69 = load i64, i64* %68, align 8
  store i64 %69, i64* %67, align 8
  store i64 0, i64* %68, align 8
  %70 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %63, i64 0, i32 0
  %71 = load i32, i32* %64, align 4
  %72 = load i32, i32* %70, align 4
  store i32 %72, i32* %64, align 4
  store i32 %71, i32* %70, align 4
  %73 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %37, i64 -1
  br label %74

74:                                               ; preds = %62, %56
  %75 = phi %"class.rx::vk::GarbageObject"* [ undef, %56 ], [ %73, %62 ]
  %76 = phi %"class.rx::vk::GarbageObject"* [ %37, %56 ], [ %73, %62 ]
  %77 = phi %"class.rx::vk::GarbageObject"* [ %54, %56 ], [ %63, %62 ]
  %78 = icmp ult i64 %59, 16
  br i1 %78, label %103, label %79

79:                                               ; preds = %74, %79
  %80 = phi %"class.rx::vk::GarbageObject"* [ %101, %79 ], [ %76, %74 ]
  %81 = phi %"class.rx::vk::GarbageObject"* [ %91, %79 ], [ %77, %74 ]
  %82 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %80, i64 -1, i32 0
  store i32 0, i32* %82, align 8
  %83 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %80, i64 -1, i32 1
  store %"struct.rx::vk::GarbageHandle_T"* null, %"struct.rx::vk::GarbageHandle_T"** %83, align 8
  %84 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %81, i64 -1, i32 1
  %85 = bitcast %"struct.rx::vk::GarbageHandle_T"** %83 to i64*
  %86 = bitcast %"struct.rx::vk::GarbageHandle_T"** %84 to i64*
  %87 = load i64, i64* %86, align 8
  store i64 %87, i64* %85, align 8
  store i64 0, i64* %86, align 8
  %88 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %81, i64 -1, i32 0
  %89 = load i32, i32* %82, align 4
  %90 = load i32, i32* %88, align 4
  store i32 %90, i32* %82, align 4
  store i32 %89, i32* %88, align 4
  %91 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %81, i64 -2
  %92 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %80, i64 -2, i32 0
  store i32 0, i32* %92, align 8
  %93 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %80, i64 -2, i32 1
  store %"struct.rx::vk::GarbageHandle_T"* null, %"struct.rx::vk::GarbageHandle_T"** %93, align 8
  %94 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %81, i64 -2, i32 1
  %95 = bitcast %"struct.rx::vk::GarbageHandle_T"** %93 to i64*
  %96 = bitcast %"struct.rx::vk::GarbageHandle_T"** %94 to i64*
  %97 = load i64, i64* %96, align 8
  store i64 %97, i64* %95, align 8
  store i64 0, i64* %96, align 8
  %98 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %91, i64 0, i32 0
  %99 = load i32, i32* %92, align 4
  %100 = load i32, i32* %98, align 4
  store i32 %100, i32* %92, align 4
  store i32 %99, i32* %98, align 4
  %101 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %80, i64 -2
  %102 = icmp eq %"class.rx::vk::GarbageObject"* %91, %52
  br i1 %102, label %103, label %79

103:                                              ; preds = %79, %74
  %104 = phi %"class.rx::vk::GarbageObject"* [ %75, %74 ], [ %101, %79 ]
  %105 = load i64, i64* %6, align 8
  br label %106

106:                                              ; preds = %34, %103
  %107 = phi %"class.rx::vk::GarbageObject"* [ %104, %103 ], [ %37, %34 ]
  %108 = phi i64 [ %105, %103 ], [ %53, %34 ]
  %109 = ptrtoint %"class.rx::vk::GarbageObject"* %107 to i64
  store i64 %109, i64* %6, align 8
  store i64 %50, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %110 = icmp eq i64 %108, 0
  br i1 %110, label %113, label %111

111:                                              ; preds = %106
  %112 = inttoptr i64 %108 to i8*
  tail call void @_ZdlPv(i8* %112) #22
  br label %113

113:                                              ; preds = %106, %111
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN2rx12_GLOBAL__N_131FindAndAllocateCompatibleMemoryEPNS_2vk7ContextERKNS1_16MemoryPropertiesEjPjRK20VkMemoryRequirementsPKvPNS1_12DeviceMemoryE(%"class.rx::vk::Context"*, %"class.rx::vk::MemoryProperties"* nocapture readonly dereferenceable(520), i32, i32* nocapture, %struct.VkMemoryRequirements* nocapture readonly dereferenceable(24), i8*, %"class.rx::vk::DeviceMemory"*) unnamed_addr #1 {
  %8 = alloca i32, align 4
  %9 = alloca %struct.VkMemoryAllocateInfo, align 8
  %10 = getelementptr inbounds %"class.rx::vk::Context", %"class.rx::vk::Context"* %0, i64 0, i32 1
  %11 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %10, align 8
  %12 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %11, i64 0, i32 43
  %13 = load %struct.VkDevice_T*, %struct.VkDevice_T** %12, align 8
  %14 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #20
  store i32 0, i32* %8, align 4
  %15 = icmp ne i8* %5, null
  %16 = call i32 @_ZNK2rx2vk16MemoryProperties25findCompatibleMemoryIndexEPNS0_7ContextERK20VkMemoryRequirementsjbPjS7_(%"class.rx::vk::MemoryProperties"* %1, %"class.rx::vk::Context"* %0, %struct.VkMemoryRequirements* dereferenceable(24) %4, i32 %2, i1 zeroext %15, i32* %3, i32* nonnull %8)
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %52, label %18

18:                                               ; preds = %7
  %19 = bitcast %struct.VkMemoryAllocateInfo* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 32, i1 false)
  %20 = getelementptr inbounds %struct.VkMemoryAllocateInfo, %struct.VkMemoryAllocateInfo* %9, i64 0, i32 0
  store i32 5, i32* %20, align 8
  %21 = getelementptr inbounds %struct.VkMemoryAllocateInfo, %struct.VkMemoryAllocateInfo* %9, i64 0, i32 1
  store i8* %5, i8** %21, align 8
  %22 = load i32, i32* %8, align 4
  %23 = getelementptr inbounds %struct.VkMemoryAllocateInfo, %struct.VkMemoryAllocateInfo* %9, i64 0, i32 3
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %struct.VkMemoryRequirements, %struct.VkMemoryRequirements* %4, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %struct.VkMemoryAllocateInfo, %struct.VkMemoryAllocateInfo* %9, i64 0, i32 2
  store i64 %25, i64* %26, align 8
  %27 = load i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)** @vkAllocateMemory, align 8
  %28 = getelementptr inbounds %"class.rx::vk::DeviceMemory", %"class.rx::vk::DeviceMemory"* %6, i64 0, i32 0, i32 0
  %29 = call i32 %27(%struct.VkDevice_T* %13, %struct.VkMemoryAllocateInfo* nonnull %9, %struct.VkAllocationCallbacks* null, %struct.VkDeviceMemory_T** %28) #20
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31, !prof !9

31:                                               ; preds = %18
  %32 = bitcast %"class.rx::vk::Context"* %0 to void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)***
  %33 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)**, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %33, i64 2
  %35 = load void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)*, void (%"class.rx::vk::Context"*, i32, i8*, i8*, i32)** %34, align 8
  call void %35(%"class.rx::vk::Context"* %0, i32 %29, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__func__._ZN2rx12_GLOBAL__N_131FindAndAllocateCompatibleMemoryEPNS_2vk7ContextERKNS1_16MemoryPropertiesEjPjRK20VkMemoryRequirementsPKvPNS1_12DeviceMemoryE, i64 0, i64 0), i32 102) #20
  br label %50

36:                                               ; preds = %18
  %37 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %10, align 8
  %38 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %37, i64 0, i32 7, i32 41, i32 4
  %39 = load i8, i8* %38, align 8, !range !8
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %36
  %42 = load i32, i32* %3, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = load i64, i64* %24, align 8
  %47 = call i32 @_ZN2rx2vk24InitMappableDeviceMemoryEPNS0_7ContextEPNS0_12DeviceMemoryEmij(%"class.rx::vk::Context"* %0, %"class.rx::vk::DeviceMemory"* %6, i64 %46, i32 63, i32 %42)
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %50, label %49

49:                                               ; preds = %45, %41, %36
  br label %50

50:                                               ; preds = %45, %31, %49
  %51 = phi i32 [ 1, %31 ], [ 0, %49 ], [ 1, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #20
  br label %52

52:                                               ; preds = %7, %50
  %53 = phi i32 [ %51, %50 ], [ 1, %7 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #20
  ret i32 %53
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #1 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !8
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

attributes #0 = { cold noreturn nounwind }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind }
attributes #11 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #19 = { nounwind readnone speculatable }
attributes #20 = { nounwind }
attributes #21 = { noreturn nounwind }
attributes #22 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!4 = distinct !{!4, !"_ZN3egl5Error7NoErrorEv"}
!5 = distinct !{!5, !6, !"_ZN3egl7NoErrorEv: argument 0"}
!6 = distinct !{!6, !"_ZN3egl7NoErrorEv"}
!7 = !{i32 0, i32 33}
!8 = !{i8 0, i8 2}
!9 = !{!"branch_weights", i32 2000, i32 1}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZN2rx2vk13GarbageObject3GetINS0_6BufferEP10VkBuffer_TEES1_PNS0_13WrappedObjectIT_T0_EE: argument 0"}
!12 = distinct !{!12, !"_ZN2rx2vk13GarbageObject3GetINS0_6BufferEP10VkBuffer_TEES1_PNS0_13WrappedObjectIT_T0_EE"}
!13 = distinct !{!13, !14, !"_ZN2rx2vk10GetGarbageINS0_6BufferEEENS0_13GarbageObjectEPT_: argument 0"}
!14 = distinct !{!14, !"_ZN2rx2vk10GetGarbageINS0_6BufferEEENS0_13GarbageObjectEPT_"}
!15 = !{!16, !18}
!16 = distinct !{!16, !17, !"_ZN2rx2vk13GarbageObject3GetINS0_10AllocationEP15VmaAllocation_TEES1_PNS0_13WrappedObjectIT_T0_EE: argument 0"}
!17 = distinct !{!17, !"_ZN2rx2vk13GarbageObject3GetINS0_10AllocationEP15VmaAllocation_TEES1_PNS0_13WrappedObjectIT_T0_EE"}
!18 = distinct !{!18, !19, !"_ZN2rx2vk10GetGarbageINS0_10AllocationEEENS0_13GarbageObjectEPT_: argument 0"}
!19 = distinct !{!19, !"_ZN2rx2vk10GetGarbageINS0_10AllocationEEENS0_13GarbageObjectEPT_"}
!20 = !{!21, !23}
!21 = distinct !{!21, !22, !"_ZN2rx2vk13GarbageObject3GetINS0_6BufferEP10VkBuffer_TEES1_PNS0_13WrappedObjectIT_T0_EE: argument 0"}
!22 = distinct !{!22, !"_ZN2rx2vk13GarbageObject3GetINS0_6BufferEP10VkBuffer_TEES1_PNS0_13WrappedObjectIT_T0_EE"}
!23 = distinct !{!23, !24, !"_ZN2rx2vk10GetGarbageINS0_6BufferEEENS0_13GarbageObjectEPT_: argument 0"}
!24 = distinct !{!24, !"_ZN2rx2vk10GetGarbageINS0_6BufferEEENS0_13GarbageObjectEPT_"}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZN2rx2vk13GarbageObject3GetINS0_10AllocationEP15VmaAllocation_TEES1_PNS0_13WrappedObjectIT_T0_EE: argument 0"}
!27 = distinct !{!27, !"_ZN2rx2vk13GarbageObject3GetINS0_10AllocationEP15VmaAllocation_TEES1_PNS0_13WrappedObjectIT_T0_EE"}
!28 = distinct !{!28, !29, !"_ZN2rx2vk10GetGarbageINS0_10AllocationEEENS0_13GarbageObjectEPT_: argument 0"}
!29 = distinct !{!29, !"_ZN2rx2vk10GetGarbageINS0_10AllocationEEENS0_13GarbageObjectEPT_"}
!30 = !{!"branch_weights", i32 1, i32 1048575}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!33 = distinct !{!33, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!34 = !{i32 1, i32 33}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_: argument 0"}
!37 = distinct !{!37, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_"}
