; ModuleID = '../../third_party/fontconfig/src/src/fchash.c'
source_filename = "../../third_party/fontconfig/src/src/fchash.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._FcHashTable = type { [227 x %struct._FcHashBucket*], i32 (i8*)*, i32 (i8*, i8*)*, i32 (i8*, i8**)*, i32 (i8*, i8**)*, void (i8*)*, void (i8*)* }
%struct._FcHashBucket = type { %struct._FcHashBucket*, i8*, i8* }

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @FcHashStrCopy(i8* nocapture readonly, i8** nocapture) local_unnamed_addr #0 {
  %3 = tail call noalias i8* @strdup(i8* %0) #5
  store i8* %3, i8** %1, align 8
  %4 = icmp ne i8* %3, null
  %5 = zext i1 %4 to i32
  ret i32 %5
}

; Function Attrs: nofree nounwind
declare noalias i8* @strdup(i8* nocapture readonly) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct._FcHashTable* @FcHashTableCreate(i32 (i8*)*, i32 (i8*, i8*)*, i32 (i8*, i8**)*, i32 (i8*, i8**)*, void (i8*)*, void (i8*)*) local_unnamed_addr #2 {
  %7 = tail call noalias i8* @malloc(i64 1864) #5
  %8 = bitcast i8* %7 to %struct._FcHashTable*
  %9 = icmp eq i8* %7, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %6
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 1816, i1 false)
  %11 = getelementptr inbounds i8, i8* %7, i64 1816
  %12 = bitcast i8* %11 to i32 (i8*)**
  store i32 (i8*)* %0, i32 (i8*)** %12, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 1824
  %14 = bitcast i8* %13 to i32 (i8*, i8*)**
  store i32 (i8*, i8*)* %1, i32 (i8*, i8*)** %14, align 8
  %15 = getelementptr inbounds i8, i8* %7, i64 1832
  %16 = bitcast i8* %15 to i32 (i8*, i8**)**
  store i32 (i8*, i8**)* %2, i32 (i8*, i8**)** %16, align 8
  %17 = getelementptr inbounds i8, i8* %7, i64 1840
  %18 = bitcast i8* %17 to i32 (i8*, i8**)**
  store i32 (i8*, i8**)* %3, i32 (i8*, i8**)** %18, align 8
  %19 = getelementptr inbounds i8, i8* %7, i64 1848
  %20 = bitcast i8* %19 to void (i8*)**
  store void (i8*)* %4, void (i8*)** %20, align 8
  %21 = getelementptr inbounds i8, i8* %7, i64 1856
  %22 = bitcast i8* %21 to void (i8*)**
  store void (i8*)* %5, void (i8*)** %22, align 8
  br label %23

23:                                               ; preds = %6, %10
  ret %struct._FcHashTable* %8
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @FcHashTableDestroy(%struct._FcHashTable* nocapture) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct._FcHashTable, %struct._FcHashTable* %0, i64 0, i32 5
  %3 = getelementptr inbounds %struct._FcHashTable, %struct._FcHashTable* %0, i64 0, i32 6
  br label %4

4:                                                ; preds = %27, %1
  %5 = phi i64 [ 0, %1 ], [ %28, %27 ]
  %6 = getelementptr inbounds %struct._FcHashTable, %struct._FcHashTable* %0, i64 0, i32 0, i64 %5
  %7 = load %struct._FcHashBucket*, %struct._FcHashBucket** %6, align 8
  %8 = icmp eq %struct._FcHashBucket* %7, null
  br i1 %8, label %27, label %9

9:                                                ; preds = %4, %23
  %10 = phi %struct._FcHashBucket* [ %25, %23 ], [ %7, %4 ]
  %11 = bitcast %struct._FcHashBucket* %10 to i8*
  %12 = load void (i8*)*, void (i8*)** %2, align 8
  %13 = icmp eq void (i8*)* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct._FcHashBucket, %struct._FcHashBucket* %10, i64 0, i32 1
  %16 = load i8*, i8** %15, align 8
  tail call void %12(i8* %16) #5
  br label %17

17:                                               ; preds = %9, %14
  %18 = load void (i8*)*, void (i8*)** %3, align 8
  %19 = icmp eq void (i8*)* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct._FcHashBucket, %struct._FcHashBucket* %10, i64 0, i32 2
  %22 = load i8*, i8** %21, align 8
  tail call void %18(i8* %22) #5
  br label %23

23:                                               ; preds = %17, %20
  %24 = getelementptr inbounds %struct._FcHashBucket, %struct._FcHashBucket* %10, i64 0, i32 0
  %25 = load %struct._FcHashBucket*, %struct._FcHashBucket** %24, align 8
  tail call void @free(i8* %11) #5
  %26 = icmp eq %struct._FcHashBucket* %25, null
  br i1 %26, label %27, label %9

27:                                               ; preds = %23, %4
  store %struct._FcHashBucket* null, %struct._FcHashBucket** %6, align 8
  %28 = add nuw nsw i64 %5, 1
  %29 = icmp eq i64 %28, 227
  br i1 %29, label %30, label %4

30:                                               ; preds = %27
  %31 = bitcast %struct._FcHashTable* %0 to i8*
  tail call void @free(i8* %31) #5
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcHashTableFind(%struct._FcHashTable* nocapture readonly, i8*, i8**) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %struct._FcHashTable, %struct._FcHashTable* %0, i64 0, i32 1
  %5 = load i32 (i8*)*, i32 (i8*)** %4, align 8
  %6 = tail call i32 %5(i8* %1) #5
  %7 = urem i32 %6, 227
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %struct._FcHashTable, %struct._FcHashTable* %0, i64 0, i32 0, i64 %8
  %10 = load %struct._FcHashBucket*, %struct._FcHashBucket** %9, align 8
  %11 = icmp eq %struct._FcHashBucket* %10, null
  br i1 %11, label %39, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct._FcHashTable, %struct._FcHashTable* %0, i64 0, i32 2
  br label %14

14:                                               ; preds = %12, %35
  %15 = phi %struct._FcHashBucket* [ %10, %12 ], [ %37, %35 ]
  %16 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %13, align 8
  %17 = getelementptr inbounds %struct._FcHashBucket, %struct._FcHashBucket* %15, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = tail call i32 %16(i8* %18, i8* %1) #5
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %35

21:                                               ; preds = %14
  %22 = getelementptr inbounds %struct._FcHashTable, %struct._FcHashTable* %0, i64 0, i32 4
  %23 = load i32 (i8*, i8**)*, i32 (i8*, i8**)** %22, align 8
  %24 = icmp eq i32 (i8*, i8**)* %23, null
  %25 = getelementptr inbounds %struct._FcHashBucket, %struct._FcHashBucket* %15, i64 0, i32 2
  br i1 %24, label %30, label %26

26:                                               ; preds = %21
  %27 = load i8*, i8** %25, align 8
  %28 = tail call i32 %23(i8* %27, i8** %2) #5
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %39, label %34

30:                                               ; preds = %21
  %31 = bitcast i8** %25 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %2 to i64*
  store i64 %32, i64* %33, align 8
  br label %34

34:                                               ; preds = %26, %30
  br label %39

35:                                               ; preds = %14
  %36 = getelementptr inbounds %struct._FcHashBucket, %struct._FcHashBucket* %15, i64 0, i32 0
  %37 = load %struct._FcHashBucket*, %struct._FcHashBucket** %36, align 8
  %38 = icmp eq %struct._FcHashBucket* %37, null
  br i1 %38, label %39, label %14

39:                                               ; preds = %35, %3, %26, %34
  %40 = phi i32 [ 1, %34 ], [ 0, %26 ], [ 0, %3 ], [ 0, %35 ]
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcHashTableAdd(%struct._FcHashTable* nocapture, i8*, i8*) local_unnamed_addr #2 {
  %4 = tail call fastcc i32 @FcHashTableAddInternal(%struct._FcHashTable* %0, i8* %1, i8* %2, i32 0)
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @FcHashTableAddInternal(%struct._FcHashTable* nocapture, i8*, i8*, i32) unnamed_addr #2 {
  %5 = getelementptr inbounds %struct._FcHashTable, %struct._FcHashTable* %0, i64 0, i32 1
  %6 = load i32 (i8*)*, i32 (i8*)** %5, align 8
  %7 = tail call i32 %6(i8* %1) #5
  %8 = tail call noalias i8* @malloc(i64 24) #5
  %9 = bitcast i8* %8 to %struct._FcHashBucket*
  %10 = icmp eq i8* %8, null
  br i1 %10, label %111, label %11

11:                                               ; preds = %4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false)
  %12 = getelementptr inbounds %struct._FcHashTable, %struct._FcHashTable* %0, i64 0, i32 3
  %13 = load i32 (i8*, i8**)*, i32 (i8*, i8**)** %12, align 8
  %14 = icmp eq i32 (i8*, i8**)* %13, null
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to i8**
  br i1 %14, label %21, label %17

17:                                               ; preds = %11
  %18 = tail call i32 %13(i8* %1, i8** %16) #5
  %19 = icmp eq i32 %18, 0
  %20 = zext i1 %19 to i32
  br label %22

21:                                               ; preds = %11
  store i8* %1, i8** %16, align 8
  br label %22

22:                                               ; preds = %21, %17
  %23 = phi i32 [ %20, %17 ], [ 0, %21 ]
  %24 = getelementptr inbounds %struct._FcHashTable, %struct._FcHashTable* %0, i64 0, i32 4
  %25 = load i32 (i8*, i8**)*, i32 (i8*, i8**)** %24, align 8
  %26 = icmp eq i32 (i8*, i8**)* %25, null
  %27 = getelementptr inbounds i8, i8* %8, i64 16
  %28 = bitcast i8* %27 to i8**
  br i1 %26, label %34, label %29

29:                                               ; preds = %22
  %30 = tail call i32 %25(i8* %2, i8** %28) #5
  %31 = icmp eq i32 %30, 0
  %32 = zext i1 %31 to i32
  %33 = or i32 %23, %32
  br label %35

34:                                               ; preds = %22
  store i8* %2, i8** %28, align 8
  br label %35

35:                                               ; preds = %34, %29
  %36 = phi i32 [ %33, %29 ], [ %23, %34 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %47

38:                                               ; preds = %35
  %39 = urem i32 %7, 227
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds %struct._FcHashTable, %struct._FcHashTable* %0, i64 0, i32 0, i64 %40
  %42 = getelementptr inbounds %struct._FcHashTable, %struct._FcHashTable* %0, i64 0, i32 2
  %43 = icmp eq i32 %3, 0
  %44 = bitcast i8* %8 to i64*
  %45 = ptrtoint i8* %8 to i64
  %46 = bitcast i8* %8 to %struct._FcHashBucket**
  br label %71

47:                                               ; preds = %88, %91, %35
  %48 = phi %struct._FcHashBucket* [ %9, %35 ], [ %9, %88 ], [ %89, %91 ]
  %49 = phi i32 [ %36, %35 ], [ 1, %88 ], [ 0, %91 ]
  %50 = getelementptr inbounds %struct._FcHashBucket, %struct._FcHashBucket* %48, i64 0, i32 1
  %51 = load i8*, i8** %50, align 8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %struct._FcHashTable, %struct._FcHashTable* %0, i64 0, i32 5
  %55 = load void (i8*)*, void (i8*)** %54, align 8
  %56 = icmp eq void (i8*)* %55, null
  br i1 %56, label %58, label %57

57:                                               ; preds = %53
  tail call void %55(i8* nonnull %51) #5
  br label %58

58:                                               ; preds = %53, %47, %57
  %59 = getelementptr inbounds %struct._FcHashBucket, %struct._FcHashBucket* %48, i64 0, i32 2
  %60 = load i8*, i8** %59, align 8
  %61 = icmp eq i8* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %struct._FcHashTable, %struct._FcHashTable* %0, i64 0, i32 6
  %64 = load void (i8*)*, void (i8*)** %63, align 8
  %65 = icmp eq void (i8*)* %64, null
  br i1 %65, label %67, label %66

66:                                               ; preds = %62
  tail call void %64(i8* nonnull %60) #5
  br label %67

67:                                               ; preds = %62, %58, %66
  %68 = bitcast %struct._FcHashBucket* %48 to i8*
  tail call void @free(i8* %68) #5
  %69 = icmp eq i32 %49, 0
  %70 = zext i1 %69 to i32
  br label %111

71:                                               ; preds = %98, %38
  fence seq_cst
  %72 = load %struct._FcHashBucket*, %struct._FcHashBucket** %41, align 8
  %73 = icmp eq %struct._FcHashBucket* %72, null
  br i1 %73, label %106, label %74

74:                                               ; preds = %71
  %75 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %42, align 8
  %76 = getelementptr inbounds %struct._FcHashBucket, %struct._FcHashBucket* %72, i64 0, i32 1
  %77 = load i8*, i8** %76, align 8
  %78 = tail call i32 %75(i8* %77, i8* %1) #5
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %88, label %99

80:                                               ; preds = %99
  %81 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %42, align 8
  %82 = getelementptr inbounds %struct._FcHashBucket, %struct._FcHashBucket* %102, i64 0, i32 1
  %83 = load i8*, i8** %82, align 8
  %84 = tail call i32 %81(i8* %83, i8* %1) #5
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %99

86:                                               ; preds = %80
  %87 = getelementptr inbounds %struct._FcHashBucket, %struct._FcHashBucket* %100, i64 0, i32 0
  br label %88

88:                                               ; preds = %86, %74
  %89 = phi %struct._FcHashBucket* [ %72, %74 ], [ %102, %86 ]
  %90 = phi %struct._FcHashBucket** [ %41, %74 ], [ %87, %86 ]
  br i1 %43, label %47, label %91

91:                                               ; preds = %88
  %92 = bitcast %struct._FcHashBucket* %89 to i64*
  %93 = load i64, i64* %92, align 8
  store i64 %93, i64* %44, align 8
  %94 = bitcast %struct._FcHashBucket** %90 to i64*
  %95 = ptrtoint %struct._FcHashBucket* %89 to i64
  %96 = cmpxchg i64* %94, i64 %95, i64 %45 seq_cst seq_cst
  %97 = extractvalue { i64, i1 } %96, 1
  br i1 %97, label %47, label %98

98:                                               ; preds = %91, %106
  br label %71

99:                                               ; preds = %74, %80
  %100 = phi %struct._FcHashBucket* [ %102, %80 ], [ %72, %74 ]
  %101 = getelementptr inbounds %struct._FcHashBucket, %struct._FcHashBucket* %100, i64 0, i32 0
  fence seq_cst
  %102 = load %struct._FcHashBucket*, %struct._FcHashBucket** %101, align 8
  %103 = icmp eq %struct._FcHashBucket* %102, null
  br i1 %103, label %104, label %80

104:                                              ; preds = %99
  %105 = getelementptr inbounds %struct._FcHashBucket, %struct._FcHashBucket* %100, i64 0, i32 0
  br label %106

106:                                              ; preds = %104, %71
  %107 = phi %struct._FcHashBucket** [ %41, %71 ], [ %105, %104 ]
  store %struct._FcHashBucket* null, %struct._FcHashBucket** %46, align 8
  %108 = bitcast %struct._FcHashBucket** %107 to i64*
  %109 = cmpxchg i64* %108, i64 0, i64 %45 seq_cst seq_cst
  %110 = extractvalue { i64, i1 } %109, 1
  br i1 %110, label %111, label %98

111:                                              ; preds = %106, %4, %67
  %112 = phi i32 [ %70, %67 ], [ 0, %4 ], [ 1, %106 ]
  ret i32 %112
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcHashTableReplace(%struct._FcHashTable* nocapture, i8*, i8*) local_unnamed_addr #2 {
  %4 = tail call fastcc i32 @FcHashTableAddInternal(%struct._FcHashTable* %0, i8* %1, i8* %2, i32 1)
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcHashTableRemove(%struct._FcHashTable* nocapture, i8*) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct._FcHashTable, %struct._FcHashTable* %0, i64 0, i32 1
  %4 = load i32 (i8*)*, i32 (i8*)** %3, align 8
  %5 = tail call i32 %4(i8* %1) #5
  %6 = urem i32 %5, 227
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %struct._FcHashTable, %struct._FcHashTable* %0, i64 0, i32 0, i64 %7
  %9 = getelementptr inbounds %struct._FcHashTable, %struct._FcHashTable* %0, i64 0, i32 2
  br label %10

10:                                               ; preds = %27, %2
  fence seq_cst
  %11 = load %struct._FcHashBucket*, %struct._FcHashBucket** %8, align 8
  %12 = icmp eq %struct._FcHashBucket* %11, null
  br i1 %12, label %57, label %13

13:                                               ; preds = %10
  %14 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %9, align 8
  %15 = getelementptr inbounds %struct._FcHashBucket, %struct._FcHashBucket* %11, i64 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = tail call i32 %14(i8* %16, i8* %1) #5
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %27, label %52

19:                                               ; preds = %52
  %20 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %9, align 8
  %21 = getelementptr inbounds %struct._FcHashBucket, %struct._FcHashBucket* %55, i64 0, i32 1
  %22 = load i8*, i8** %21, align 8
  %23 = tail call i32 %20(i8* %22, i8* %1) #5
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %52

25:                                               ; preds = %19
  %26 = getelementptr inbounds %struct._FcHashBucket, %struct._FcHashBucket* %53, i64 0, i32 0
  br label %27

27:                                               ; preds = %25, %13
  %28 = phi %struct._FcHashBucket* [ %11, %13 ], [ %55, %25 ]
  %29 = phi %struct._FcHashBucket** [ %8, %13 ], [ %26, %25 ]
  %30 = bitcast %struct._FcHashBucket** %29 to i64*
  %31 = ptrtoint %struct._FcHashBucket* %28 to i64
  %32 = bitcast %struct._FcHashBucket* %28 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = cmpxchg i64* %30, i64 %31, i64 %33 seq_cst seq_cst
  %35 = extractvalue { i64, i1 } %34, 1
  br i1 %35, label %36, label %10

36:                                               ; preds = %27
  %37 = bitcast %struct._FcHashBucket* %28 to i8*
  %38 = getelementptr inbounds %struct._FcHashTable, %struct._FcHashTable* %0, i64 0, i32 5
  %39 = load void (i8*)*, void (i8*)** %38, align 8
  %40 = icmp eq void (i8*)* %39, null
  br i1 %40, label %44, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct._FcHashBucket, %struct._FcHashBucket* %28, i64 0, i32 1
  %43 = load i8*, i8** %42, align 8
  tail call void %39(i8* %43) #5
  br label %44

44:                                               ; preds = %36, %41
  %45 = getelementptr inbounds %struct._FcHashTable, %struct._FcHashTable* %0, i64 0, i32 6
  %46 = load void (i8*)*, void (i8*)** %45, align 8
  %47 = icmp eq void (i8*)* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct._FcHashBucket, %struct._FcHashBucket* %28, i64 0, i32 2
  %50 = load i8*, i8** %49, align 8
  tail call void %46(i8* %50) #5
  br label %51

51:                                               ; preds = %44, %48
  tail call void @free(i8* %37) #5
  br label %57

52:                                               ; preds = %13, %19
  %53 = phi %struct._FcHashBucket* [ %55, %19 ], [ %11, %13 ]
  %54 = getelementptr inbounds %struct._FcHashBucket, %struct._FcHashBucket* %53, i64 0, i32 0
  fence seq_cst
  %55 = load %struct._FcHashBucket*, %struct._FcHashBucket** %54, align 8
  %56 = icmp eq %struct._FcHashBucket* %55, null
  br i1 %56, label %57, label %19

57:                                               ; preds = %10, %52, %51
  %58 = phi i32 [ 1, %51 ], [ 0, %52 ], [ 0, %10 ]
  ret i32 %58
}

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
