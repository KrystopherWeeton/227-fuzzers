; ModuleID = '../../third_party/pdfium/fxbarcode/datamatrix/BC_DataMatrixWriter.cpp'
source_filename = "../../third_party/pdfium/fxbarcode/datamatrix/BC_DataMatrixWriter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CBC_DataMatrixWriter = type { %class.CBC_TwoDimWriter.base, [3 x i8] }
%class.CBC_TwoDimWriter.base = type <{ %class.CBC_Writer.base, [2 x i8], %"class.std::__1::unique_ptr", i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }>
%class.CBC_Writer.base = type <{ i32 (...)**, i32, i32, i32, i32, i32, i16 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CBC_CommonBitMatrix* }
%class.CBC_CommonBitMatrix = type { i32, i32, i32, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { i32* }
%class.CBC_TwoDimWriter = type <{ %class.CBC_Writer.base, [2 x i8], %"class.std::__1::unique_ptr", i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8] }>
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { i8*, i8*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i8* }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.4" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%class.CBC_SymbolInfo = type { i32 (...)**, %"struct.CBC_SymbolInfo::Data"* }
%"struct.CBC_SymbolInfo::Data" = type { i16, i16, i16, i8, i8, i8, i8 }
%class.CBC_DefaultPlacement = type { %"class.fxcrt::WideString", i32, i32, %"class.std::__1::vector.8" }
%class.CBC_CommonByteMatrix = type { i32, i32, %"class.std::__1::vector.8" }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.CBC_Writer = type <{ i32 (...)**, i32, i32, i32, i32, i32, i16, [2 x i8] }>

@_ZTV20CBC_DataMatrixWriter = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CBC_DataMatrixWriter*)* @_ZN20CBC_DataMatrixWriterD2Ev to i8*), i8* bitcast (void (%class.CBC_DataMatrixWriter*)* @_ZN20CBC_DataMatrixWriterD0Ev to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer15SetCharEncodingEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer15SetModuleHeightEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer14SetModuleWidthEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer9SetHeightEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer8SetWidthEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i8)* @_ZN10CBC_Writer15SetTextLocationE11BC_TEXT_LOC to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i8)* @_ZN10CBC_Writer18SetWideNarrowRatioEa to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i8)* @_ZN10CBC_Writer12SetStartCharEc to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i8)* @_ZN10CBC_Writer10SetEndCharEc to i8*), i8* bitcast (i1 (%class.CBC_DataMatrixWriter*, i32)* @_ZN20CBC_DataMatrixWriter23SetErrorCorrectionLevelEi to i8*)] }, align 8

@_ZN20CBC_DataMatrixWriterC1Ev = hidden unnamed_addr alias void (%class.CBC_DataMatrixWriter*), void (%class.CBC_DataMatrixWriter*)* @_ZN20CBC_DataMatrixWriterC2Ev
@_ZN20CBC_DataMatrixWriterD1Ev = hidden unnamed_addr alias void (%class.CBC_DataMatrixWriter*), void (%class.CBC_DataMatrixWriter*)* @_ZN20CBC_DataMatrixWriterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CBC_DataMatrixWriterC2Ev(%class.CBC_DataMatrixWriter*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CBC_DataMatrixWriter* %0 to %class.CBC_TwoDimWriter*
  tail call void @_ZN16CBC_TwoDimWriterC2Eb(%class.CBC_TwoDimWriter* %2, i1 zeroext true) #10
  %3 = getelementptr inbounds %class.CBC_DataMatrixWriter, %class.CBC_DataMatrixWriter* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV20CBC_DataMatrixWriter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN16CBC_TwoDimWriterC2Eb(%class.CBC_TwoDimWriter*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN16CBC_TwoDimWriterD2Ev(%class.CBC_TwoDimWriter*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CBC_DataMatrixWriterD2Ev(%class.CBC_DataMatrixWriter*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CBC_DataMatrixWriter* %0 to %class.CBC_TwoDimWriter*
  tail call void @_ZN16CBC_TwoDimWriterD2Ev(%class.CBC_TwoDimWriter* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CBC_DataMatrixWriterD0Ev(%class.CBC_DataMatrixWriter*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CBC_DataMatrixWriter* %0 to %class.CBC_TwoDimWriter*
  tail call void @_ZN16CBC_TwoDimWriterD2Ev(%class.CBC_TwoDimWriter* %2) #10
  %3 = bitcast %class.CBC_DataMatrixWriter* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN20CBC_DataMatrixWriter23SetErrorCorrectionLevelEi(%class.CBC_DataMatrixWriter* nocapture, i32) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %class.CBC_DataMatrixWriter, %class.CBC_DataMatrixWriter* %0, i64 0, i32 0, i32 11
  store i32 %1, i32* %3, align 8
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CBC_DataMatrixWriter6EncodeERKN5fxcrt10WideStringEPiS4_(%"class.std::__1::vector.8"* noalias nocapture sret, %class.CBC_DataMatrixWriter* nocapture readnone, %"class.fxcrt::WideString"* dereferenceable(8), i32* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.fxcrt::WideString", align 8
  %7 = alloca %"class.fxcrt::WideString", align 8
  %8 = alloca %"class.fxcrt::WideString", align 8
  %9 = alloca %"class.std::__1::vector.8", align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast %"class.std::__1::vector.8"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #10
  %13 = bitcast %"class.fxcrt::WideString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %14, align 8
  call void @_ZN20CBC_HighLevelEncoder15EncodeHighLevelERKN5fxcrt10WideStringE(%"class.fxcrt::WideString"* nonnull sret %7, %"class.fxcrt::WideString"* dereferenceable(8) %2) #10
  %15 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %14, align 8
  %16 = icmp eq %"class.fxcrt::StringDataTemplate"* %15, null
  br i1 %16, label %173, label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %15, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %173, label %21

21:                                               ; preds = %17
  %22 = call %class.CBC_SymbolInfo* @_ZN14CBC_SymbolInfo6LookupEmb(i64 %19, i1 zeroext false) #10
  %23 = icmp eq %class.CBC_SymbolInfo* %22, null
  br i1 %23, label %173, label %24

24:                                               ; preds = %21
  %25 = bitcast %"class.fxcrt::WideString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #10
  %26 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %26, align 8
  call void @_ZN19CBC_ErrorCorrection12EncodeECC200ERKN5fxcrt10WideStringEPK14CBC_SymbolInfo(%"class.fxcrt::WideString"* nonnull sret %8, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %7, %class.CBC_SymbolInfo* nonnull %22) #10
  %27 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %26, align 8
  %28 = icmp eq %"class.fxcrt::StringDataTemplate"* %27, null
  br i1 %28, label %172, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %27, i64 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %172, label %33

33:                                               ; preds = %29
  %34 = call i32 @_ZNK14CBC_SymbolInfo18GetSymbolDataWidthEv(%class.CBC_SymbolInfo* nonnull %22) #10
  %35 = call i32 @_ZNK14CBC_SymbolInfo19GetSymbolDataHeightEv(%class.CBC_SymbolInfo* nonnull %22) #10
  %36 = bitcast %"class.fxcrt::WideString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  %37 = call i8* @_Znwm(i64 40) #11
  %38 = bitcast i8* %37 to %class.CBC_DefaultPlacement*
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* nonnull %6, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %8) #10
  call void @_ZN20CBC_DefaultPlacementC1EN5fxcrt10WideStringEii(%class.CBC_DefaultPlacement* nonnull %38, %"class.fxcrt::WideString"* nonnull %6, i32 %34, i32 %35) #10
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  call void @_ZN20CBC_DefaultPlacement5placeEv(%class.CBC_DefaultPlacement* nonnull %38) #10
  %39 = call i32 @_ZNK14CBC_SymbolInfo18GetSymbolDataWidthEv(%class.CBC_SymbolInfo* nonnull %22) #10
  %40 = call i32 @_ZNK14CBC_SymbolInfo19GetSymbolDataHeightEv(%class.CBC_SymbolInfo* nonnull %22) #10
  %41 = call i32 @_ZNK14CBC_SymbolInfo14GetSymbolWidthEv(%class.CBC_SymbolInfo* nonnull %22) #10
  %42 = call i32 @_ZNK14CBC_SymbolInfo15GetSymbolHeightEv(%class.CBC_SymbolInfo* nonnull %22) #10
  %43 = call i8* @_Znwm(i64 32) #11
  %44 = bitcast i8* %43 to %class.CBC_CommonByteMatrix*
  call void @_ZN20CBC_CommonByteMatrixC1Eii(%class.CBC_CommonByteMatrix* nonnull %44, i32 %41, i32 %42) #10
  %45 = icmp sgt i32 %40, 0
  br i1 %45, label %46, label %122

46:                                               ; preds = %33
  %47 = getelementptr inbounds %class.CBC_SymbolInfo, %class.CBC_SymbolInfo* %22, i64 0, i32 1
  %48 = icmp sgt i32 %41, 0
  %49 = icmp sgt i32 %39, 0
  br label %50

50:                                               ; preds = %118, %46
  %51 = phi i32 [ 0, %46 ], [ %120, %118 ]
  %52 = phi i32 [ 0, %46 ], [ %119, %118 ]
  %53 = load %"struct.CBC_SymbolInfo::Data"*, %"struct.CBC_SymbolInfo::Data"** %47, align 8
  %54 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %53, i64 0, i32 5
  %55 = load i8, i8* %54, align 2
  %56 = sext i8 %55 to i32
  %57 = srem i32 %51, %56
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %68

59:                                               ; preds = %50
  br i1 %48, label %62, label %60

60:                                               ; preds = %62, %59
  %61 = add nsw i32 %52, 1
  br label %68

62:                                               ; preds = %59, %62
  %63 = phi i32 [ %66, %62 ], [ 0, %59 ]
  %64 = and i32 %63, 1
  %65 = xor i32 %64, 1
  call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* nonnull %44, i32 %63, i32 %52, i32 %65) #10
  %66 = add nuw nsw i32 %63, 1
  %67 = icmp eq i32 %66, %41
  br i1 %67, label %60, label %62

68:                                               ; preds = %60, %50
  %69 = phi i32 [ %61, %60 ], [ %52, %50 ]
  br i1 %49, label %70, label %73

70:                                               ; preds = %68
  %71 = and i32 %51, 1
  %72 = xor i32 %71, 1
  br label %83

73:                                               ; preds = %108, %68
  %74 = add nsw i32 %69, 1
  %75 = load %"struct.CBC_SymbolInfo::Data"*, %"struct.CBC_SymbolInfo::Data"** %47, align 8
  %76 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %75, i64 0, i32 5
  %77 = load i8, i8* %76, align 2
  %78 = sext i8 %77 to i32
  %79 = srem i32 %51, %78
  %80 = add nsw i32 %78, -1
  %81 = icmp eq i32 %79, %80
  br i1 %81, label %82, label %118

82:                                               ; preds = %73
  br i1 %48, label %114, label %112

83:                                               ; preds = %108, %70
  %84 = phi i32 [ 0, %70 ], [ %110, %108 ]
  %85 = phi i32 [ 0, %70 ], [ %109, %108 ]
  %86 = load %"struct.CBC_SymbolInfo::Data"*, %"struct.CBC_SymbolInfo::Data"** %47, align 8
  %87 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %86, i64 0, i32 4
  %88 = load i8, i8* %87, align 1
  %89 = sext i8 %88 to i32
  %90 = srem i32 %84, %89
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %83
  call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* nonnull %44, i32 %85, i32 %69, i32 1) #10
  %93 = add nsw i32 %85, 1
  br label %94

94:                                               ; preds = %92, %83
  %95 = phi i32 [ %93, %92 ], [ %85, %83 ]
  %96 = call zeroext i1 @_ZN20CBC_DefaultPlacement6getBitEii(%class.CBC_DefaultPlacement* nonnull %38, i32 %84, i32 %51) #10
  %97 = zext i1 %96 to i32
  call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* nonnull %44, i32 %95, i32 %69, i32 %97) #10
  %98 = add nsw i32 %95, 1
  %99 = load %"struct.CBC_SymbolInfo::Data"*, %"struct.CBC_SymbolInfo::Data"** %47, align 8
  %100 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %99, i64 0, i32 4
  %101 = load i8, i8* %100, align 1
  %102 = sext i8 %101 to i32
  %103 = srem i32 %84, %102
  %104 = add nsw i32 %102, -1
  %105 = icmp eq i32 %103, %104
  br i1 %105, label %106, label %108

106:                                              ; preds = %94
  call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* nonnull %44, i32 %98, i32 %69, i32 %72) #10
  %107 = add nsw i32 %95, 2
  br label %108

108:                                              ; preds = %106, %94
  %109 = phi i32 [ %107, %106 ], [ %98, %94 ]
  %110 = add nuw nsw i32 %84, 1
  %111 = icmp eq i32 %110, %39
  br i1 %111, label %73, label %83

112:                                              ; preds = %114, %82
  %113 = add nsw i32 %69, 2
  br label %118

114:                                              ; preds = %82, %114
  %115 = phi i32 [ %116, %114 ], [ 0, %82 ]
  call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* nonnull %44, i32 %115, i32 %74, i32 1) #10
  %116 = add nuw nsw i32 %115, 1
  %117 = icmp eq i32 %116, %41
  br i1 %117, label %112, label %114

118:                                              ; preds = %112, %73
  %119 = phi i32 [ %113, %112 ], [ %74, %73 ]
  %120 = add nuw nsw i32 %51, 1
  %121 = icmp eq i32 %120, %40
  br i1 %121, label %122, label %50

122:                                              ; preds = %118, %33
  %123 = bitcast i8* %43 to i32*
  %124 = load i32, i32* %123, align 8
  store i32 %124, i32* %3, align 4
  %125 = getelementptr inbounds i8, i8* %43, i64 4
  %126 = bitcast i8* %125 to i32*
  %127 = load i32, i32* %126, align 4
  store i32 %127, i32* %4, align 4
  %128 = bitcast %"class.std::__1::vector.8"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %128) #10
  %129 = load i32, i32* %3, align 4
  %130 = sext i32 %129 to i64
  %131 = sext i32 %127 to i64
  %132 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %130, i64 %131) #10
  %133 = extractvalue { i64, i1 } %132, 1
  %134 = extractvalue { i64, i1 } %132, 0
  br i1 %133, label %135, label %136, !prof !2

135:                                              ; preds = %122
  call void @llvm.trap() #10
  unreachable

136:                                              ; preds = %122
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %128, i8 0, i64 24, i1 false) #10, !alias.scope !3
  %137 = icmp eq i64 %134, 0
  br i1 %137, label %154, label %138

138:                                              ; preds = %136
  %139 = icmp slt i64 %134, 0
  br i1 %139, label %140, label %142

140:                                              ; preds = %138
  %141 = bitcast %"class.std::__1::vector.8"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %141) #12
  unreachable

142:                                              ; preds = %138
  %143 = call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 %134, i64 1) #10
  %144 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %9, i64 0, i32 0, i32 1
  %145 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %9, i64 0, i32 0, i32 0
  store i8* %143, i8** %145, align 8, !alias.scope !3
  %146 = getelementptr inbounds i8, i8* %143, i64 %134
  %147 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8* %146, i8** %147, align 8, !alias.scope !3
  %148 = bitcast i8** %144 to i64*
  %149 = ptrtoint i8* %143 to i64
  %150 = sub i64 %134, %149
  %151 = getelementptr i8, i8* %143, i64 %150
  %152 = ptrtoint i8* %151 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %143, i8 0, i64 %152, i1 false) #10
  %153 = ptrtoint i8* %146 to i64
  store i64 %153, i64* %148, align 8, !alias.scope !3
  br label %154

154:                                              ; preds = %136, %142
  %155 = phi i64 [ 0, %136 ], [ %153, %142 ]
  %156 = bitcast %"class.std::__1::vector.8"* %9 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %159 = bitcast i8** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast i8** %10 to i64*
  %162 = bitcast %"class.std::__1::vector.8"* %0 to i64*
  store i64 %157, i64* %162, align 8
  store i64 %155, i64* %161, align 8
  %163 = bitcast i8** %11 to i64*
  store i64 %160, i64* %163, align 8
  %164 = inttoptr i64 %157 to i8*
  %165 = getelementptr inbounds i8, i8* %43, i64 8
  %166 = bitcast i8* %165 to i8**
  %167 = load i8*, i8** %166, align 8, !noalias !6
  %168 = load i32, i32* %3, align 4
  %169 = load i32, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %128) #10
  %170 = mul nsw i32 %169, %168
  %171 = sext i32 %170 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %164, i8* align 1 %167, i64 %171, i1 false)
  call void @_ZN20CBC_CommonByteMatrixD1Ev(%class.CBC_CommonByteMatrix* nonnull %44) #10
  call void @_ZdlPv(i8* nonnull %43) #11
  call void @_ZN20CBC_DefaultPlacementD1Ev(%class.CBC_DefaultPlacement* nonnull %38) #10
  call void @_ZdlPv(i8* nonnull %37) #11
  br label %172

172:                                              ; preds = %24, %29, %154
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #10
  br label %173

173:                                              ; preds = %5, %172, %21, %17
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN20CBC_HighLevelEncoder15EncodeHighLevelERKN5fxcrt10WideStringE(%"class.fxcrt::WideString"* sret, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #1

declare %class.CBC_SymbolInfo* @_ZN14CBC_SymbolInfo6LookupEmb(i64, i1 zeroext) local_unnamed_addr #1

declare void @_ZN19CBC_ErrorCorrection12EncodeECC200ERKN5fxcrt10WideStringEPK14CBC_SymbolInfo(%"class.fxcrt::WideString"* sret, %"class.fxcrt::WideString"* dereferenceable(8), %class.CBC_SymbolInfo*) local_unnamed_addr #1

declare i32 @_ZNK14CBC_SymbolInfo18GetSymbolDataWidthEv(%class.CBC_SymbolInfo*) local_unnamed_addr #1

declare i32 @_ZNK14CBC_SymbolInfo19GetSymbolDataHeightEv(%class.CBC_SymbolInfo*) local_unnamed_addr #1

declare void @_ZN20CBC_DefaultPlacement5placeEv(%class.CBC_DefaultPlacement*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #2

declare zeroext i1 @_ZN10CBC_Writer15SetCharEncodingEi(%class.CBC_Writer*, i32) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer15SetModuleHeightEi(%class.CBC_Writer*, i32) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer14SetModuleWidthEi(%class.CBC_Writer*, i32) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer9SetHeightEi(%class.CBC_Writer*, i32) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer8SetWidthEi(%class.CBC_Writer*, i32) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer15SetTextLocationE11BC_TEXT_LOC(%class.CBC_Writer*, i8 zeroext) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer18SetWideNarrowRatioEa(%class.CBC_Writer*, i8 signext) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer12SetStartCharEc(%class.CBC_Writer*, i8 signext) unnamed_addr #1

declare zeroext i1 @_ZN10CBC_Writer10SetEndCharEc(%class.CBC_Writer*, i8 signext) unnamed_addr #1

declare i32 @_ZNK14CBC_SymbolInfo14GetSymbolWidthEv(%class.CBC_SymbolInfo*) local_unnamed_addr #1

declare i32 @_ZNK14CBC_SymbolInfo15GetSymbolHeightEv(%class.CBC_SymbolInfo*) local_unnamed_addr #1

declare void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix*, i32, i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN20CBC_DefaultPlacement6getBitEii(%class.CBC_DefaultPlacement*, i32, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN20CBC_CommonByteMatrixC1Eii(%class.CBC_CommonByteMatrix*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN20CBC_CommonByteMatrixD1Ev(%class.CBC_CommonByteMatrix*) unnamed_addr #2

declare void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN20CBC_DefaultPlacementC1EN5fxcrt10WideStringEii(%class.CBC_DefaultPlacement*, %"class.fxcrt::WideString"*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN20CBC_DefaultPlacementD1Ev(%class.CBC_DefaultPlacement*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

declare i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN6pdfium8Vector2DIh16FxAllocAllocatorIhEEENSt3__16vectorIT_T0_EEmm: argument 0"}
!5 = distinct !{!5, !"_ZN6pdfium8Vector2DIh16FxAllocAllocatorIhEEENSt3__16vectorIT_T0_EEmm"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK20CBC_CommonByteMatrix8GetArrayEv: argument 0"}
!8 = distinct !{!8, !"_ZNK20CBC_CommonByteMatrix8GetArrayEv"}
