; ModuleID = '../../cc/paint/transfer_cache_entry.cc'
source_filename = "../../cc/paint/transfer_cache_entry.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::ServiceTransferCacheEntry" = type { i32 (...)** }
%"class.cc::ServiceRawMemoryTransferCacheEntry" = type { %"class.cc::TransferCacheEntryBase", %"class.std::__1::vector" }
%"class.cc::TransferCacheEntryBase" = type { %"class.cc::ServiceTransferCacheEntry" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i8* }
%"class.cc::ServiceImageTransferCacheEntry" = type <{ %"class.cc::TransferCacheEntryBase.13", %class.GrDirectContext*, %"class.std::__1::vector.14", i32, [4 x i8], %"class.std::__1::vector.28", %class.sk_sp, %"class.absl::optional", %"class.absl::optional.35", i8, [7 x i8], i64, i8, [7 x i8] }>
%"class.cc::TransferCacheEntryBase.13" = type { %"class.cc::ServiceTransferCacheEntry" }
%class.GrDirectContext = type opaque
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %class.sk_sp*, %class.sk_sp*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %class.sk_sp* }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { i64*, i64*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i64* }
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.17, i32, i32 }
%class.sk_sp.17 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.18" }
%"struct.std::__1::atomic.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl.21" }
%"struct.std::__1::__cxx_atomic_impl.21" = type { %"struct.std::__1::__cxx_atomic_base_impl.22" }
%"struct.std::__1::__cxx_atomic_base_impl.22" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.absl::optional.35" = type { %"class.absl::optional_internal::optional_data.36" }
%"class.absl::optional_internal::optional_data.36" = type { %"class.absl::optional_internal::optional_data_base.37" }
%"class.absl::optional_internal::optional_data_base.37" = type { %"class.absl::optional_internal::optional_data_dtor_base.38" }
%"class.absl::optional_internal::optional_data_dtor_base.38" = type { i8, %union.anon.39 }
%union.anon.39 = type { i32 }
%"class.cc::ServiceSkottieTransferCacheEntry" = type <{ %"class.cc::TransferCacheEntryBase.46", %class.scoped_refptr, i32, [4 x i8] }>
%"class.cc::TransferCacheEntryBase.46" = type { %"class.cc::ServiceTransferCacheEntry" }
%class.scoped_refptr = type { %"class.cc::SkottieWrapper"* }
%"class.cc::SkottieWrapper" = type opaque

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::ServiceTransferCacheEntry"* @_ZN2cc25ServiceTransferCacheEntry6CreateENS_22TransferCacheEntryTypeE(i32) local_unnamed_addr #0 align 2 {
  switch i32 %0, label %14 [
    i32 0, label %2
    i32 1, label %6
    i32 3, label %10
  ]

2:                                                ; preds = %1
  %3 = tail call i8* @_Znwm(i64 32) #5
  %4 = bitcast i8* %3 to %"class.cc::ServiceRawMemoryTransferCacheEntry"*
  tail call void @_ZN2cc34ServiceRawMemoryTransferCacheEntryC1Ev(%"class.cc::ServiceRawMemoryTransferCacheEntry"* nonnull %4) #6
  %5 = ptrtoint i8* %3 to i64
  br label %14

6:                                                ; preds = %1
  %7 = tail call i8* @_Znwm(i64 120) #5
  %8 = bitcast i8* %7 to %"class.cc::ServiceImageTransferCacheEntry"*
  tail call void @_ZN2cc30ServiceImageTransferCacheEntryC1Ev(%"class.cc::ServiceImageTransferCacheEntry"* nonnull %8) #6
  %9 = ptrtoint i8* %7 to i64
  br label %14

10:                                               ; preds = %1
  %11 = tail call i8* @_Znwm(i64 24) #5
  %12 = bitcast i8* %11 to %"class.cc::ServiceSkottieTransferCacheEntry"*
  tail call void @_ZN2cc32ServiceSkottieTransferCacheEntryC1Ev(%"class.cc::ServiceSkottieTransferCacheEntry"* nonnull %12) #6
  %13 = ptrtoint i8* %11 to i64
  br label %14

14:                                               ; preds = %1, %10, %6, %2
  %15 = phi i64 [ %13, %10 ], [ %9, %6 ], [ %5, %2 ], [ 0, %1 ]
  %16 = inttoptr i64 %15 to %"class.cc::ServiceTransferCacheEntry"*
  ret %"class.cc::ServiceTransferCacheEntry"* %16
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN2cc25ServiceTransferCacheEntry17SafeConvertToTypeEjPNS_22TransferCacheEntryTypeE(i32, i32* nocapture) local_unnamed_addr #1 align 2 {
  %3 = icmp ugt i32 %0, 3
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  store i32 %0, i32* %1, align 4
  br label %5

5:                                                ; preds = %2, %4
  %6 = phi i1 [ true, %4 ], [ false, %2 ]
  ret i1 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2cc25ServiceTransferCacheEntry13UsesGrContextENS_22TransferCacheEntryTypeE(i32) local_unnamed_addr #2 align 2 {
  %2 = icmp ult i32 %0, 4
  br i1 %2, label %3, label %6

3:                                                ; preds = %1
  %4 = trunc i32 %0 to i4
  %5 = icmp eq i4 %4, 1
  ret i1 %5

6:                                                ; preds = %1
  ret i1 true
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN2cc34ServiceRawMemoryTransferCacheEntryC1Ev(%"class.cc::ServiceRawMemoryTransferCacheEntry"*) unnamed_addr #4

declare void @_ZN2cc30ServiceImageTransferCacheEntryC1Ev(%"class.cc::ServiceImageTransferCacheEntry"*) unnamed_addr #4

declare void @_ZN2cc32ServiceSkottieTransferCacheEntryC1Ev(%"class.cc::ServiceSkottieTransferCacheEntry"*) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { builtin nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
