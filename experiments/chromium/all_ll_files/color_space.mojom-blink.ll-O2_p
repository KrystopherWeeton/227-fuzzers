; ModuleID = 'gen/ui/gfx/mojom/color_space.mojom-blink.cc'
source_filename = "gen/ui/gfx/mojom/color_space.mojom-blink.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::mojom::blink::ColorSpace" = type { i32, i32, i32, i32, %"class.WTF::Vector", %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { float*, i32, i32 }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.perfetto::TracedArray" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::TracedDictionary" = type <{ %"class.protozero::Message"*, i32, %"class.perfetto::internal::CheckedScope", [3 x i8] }>
%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.12", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.6"*, %"class.mojo::ScopedHandleBase.6"*, %"class.std::__1::__compressed_pair.7" }
%"class.mojo::ScopedHandleBase.6" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.mojo::ScopedHandleBase.6"* }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.14" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.19 }
%class.scoped_refptr.19 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.23, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.25", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.22", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.22" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.23 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.24" }>
%"class.base::RefCountedThreadSafe.24" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i32 }
%"class.gfx::mojom::internal::ColorSpace_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32, i32, i32, %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.gfx::mojom::blink::ColorSpace"* }
%"class.mojo::internal::Array_Data" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIfEEN3WTF6VectorIfLj0ENS4_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsIS7_EES7_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataIfEEPS7_PNS_7MessageE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm = comdat any

$_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [10 x i8] c"primaries\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"transfer\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"matrix\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"range\00", align 1
@.str.5 = private unnamed_addr constant [22 x i8] c"custom_primary_matrix\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"transfer_params\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.9 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv = private unnamed_addr constant [53 x i8] c"const char *WTF::GetStringWithTypeName() [T = float]\00", align 1
@.str.10 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

@_ZN3gfx5mojom5blink10ColorSpaceC1Ev = hidden unnamed_addr alias void (%"class.gfx::mojom::blink::ColorSpace"*), void (%"class.gfx::mojom::blink::ColorSpace"*)* @_ZN3gfx5mojom5blink10ColorSpaceC2Ev
@_ZN3gfx5mojom5blink10ColorSpaceC1ENS0_19ColorSpacePrimaryIDENS0_20ColorSpaceTransferIDENS0_18ColorSpaceMatrixIDENS0_17ColorSpaceRangeIDEN3WTF6VectorIfLj0ENS7_18PartitionAllocatorEEESA_ = hidden unnamed_addr alias void (%"class.gfx::mojom::blink::ColorSpace"*, i32, i32, i32, i32, %"class.WTF::Vector"*, %"class.WTF::Vector"*), void (%"class.gfx::mojom::blink::ColorSpace"*, i32, i32, i32, i32, %"class.WTF::Vector"*, %"class.WTF::Vector"*)* @_ZN3gfx5mojom5blink10ColorSpaceC2ENS0_19ColorSpacePrimaryIDENS0_20ColorSpaceTransferIDENS0_18ColorSpaceMatrixIDENS0_17ColorSpaceRangeIDEN3WTF6VectorIfLj0ENS7_18PartitionAllocatorEEESA_
@_ZN3gfx5mojom5blink10ColorSpaceD1Ev = hidden unnamed_addr alias void (%"class.gfx::mojom::blink::ColorSpace"*), void (%"class.gfx::mojom::blink::ColorSpace"*)* @_ZN3gfx5mojom5blink10ColorSpaceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx5mojom5blink10ColorSpaceC2Ev(%"class.gfx::mojom::blink::ColorSpace"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.gfx::mojom::blink::ColorSpace"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx5mojom5blink10ColorSpaceC2ENS0_19ColorSpacePrimaryIDENS0_20ColorSpaceTransferIDENS0_18ColorSpaceMatrixIDENS0_17ColorSpaceRangeIDEN3WTF6VectorIfLj0ENS7_18PartitionAllocatorEEESA_(%"class.gfx::mojom::blink::ColorSpace"* nocapture, i32, i32, i32, i32, %"class.WTF::Vector"* nocapture, %"class.WTF::Vector"* nocapture) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %0, i64 0, i32 0
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %0, i64 0, i32 1
  store i32 %2, i32* %9, align 4
  %10 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %0, i64 0, i32 2
  store i32 %3, i32* %10, align 8
  %11 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %0, i64 0, i32 3
  store i32 %4, i32* %11, align 4
  %12 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %15 = bitcast %"class.WTF::Vector"* %5 to i64*
  %16 = bitcast %"class.WTF::Vector"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #6
  %17 = load i64, i64* %15, align 8
  %18 = bitcast %"class.WTF::Vector"* %12 to i64*
  store atomic i64 0, i64* %15 monotonic, align 8
  store atomic i64 %17, i64* %18 monotonic, align 8
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %13, align 4
  %21 = load i32, i32* %19, align 4
  store i32 %21, i32* %13, align 4
  store i32 %20, i32* %19, align 4
  %22 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %14, align 4
  %24 = load i32, i32* %22, align 4
  store i32 %24, i32* %14, align 4
  store i32 %23, i32* %22, align 4
  %25 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %0, i64 0, i32 5
  %26 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %28 = bitcast %"class.WTF::Vector"* %6 to i64*
  %29 = bitcast %"class.WTF::Vector"* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #6
  %30 = load i64, i64* %28, align 8
  %31 = bitcast %"class.WTF::Vector"* %25 to i64*
  store atomic i64 0, i64* %28 monotonic, align 8
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 1
  %33 = load i32, i32* %26, align 4
  %34 = load i32, i32* %32, align 4
  store i32 %34, i32* %26, align 4
  store i32 %33, i32* %32, align 4
  %35 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 2
  %36 = load i32, i32* %27, align 4
  %37 = load i32, i32* %35, align 4
  store i32 %37, i32* %27, align 4
  store i32 %36, i32* %35, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx5mojom5blink10ColorSpaceD2Ev(%"class.gfx::mojom::blink::ColorSpace"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load float*, float** %2, align 8
  %4 = icmp eq float* %3, null
  %5 = bitcast float* %3 to i8*
  br i1 %4, label %12, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !3

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %5) #6
  store float* null, float** %2, align 8
  br label %12

12:                                               ; preds = %1, %11
  %13 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load float*, float** %13, align 8
  %15 = icmp eq float* %14, null
  %16 = bitcast float* %14 to i8*
  br i1 %15, label %23, label %17, !prof !2

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21, !prof !3

21:                                               ; preds = %17
  store i32 0, i32* %18, align 4
  br label %22

22:                                               ; preds = %21, %17
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %16) #6
  store float* null, float** %13, align 8
  br label %23

23:                                               ; preds = %12, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx5mojom5blink10ColorSpace14WriteIntoTraceEN8perfetto11TracedValueE(%"class.gfx::mojom::blink::ColorSpace"* nocapture readonly, %"class.perfetto::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedArray", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = alloca %"class.perfetto::TracedValue", align 8
  %9 = alloca %"class.perfetto::TracedValue", align 8
  %10 = alloca %"class.perfetto::TracedValue", align 8
  %11 = alloca %"class.perfetto::TracedValue", align 8
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedArray", align 8
  %14 = alloca %"class.perfetto::TracedValue", align 8
  %15 = alloca %"class.perfetto::TracedDictionary", align 8
  %16 = alloca %"class.perfetto::TracedValue", align 8
  %17 = alloca %"class.perfetto::TracedValue", align 8
  %18 = alloca %"class.perfetto::TracedValue", align 8
  %19 = alloca %"class.perfetto::TracedValue", align 8
  %20 = alloca %"class.perfetto::TracedValue", align 8
  %21 = alloca %"class.perfetto::TracedValue", align 8
  %22 = bitcast %"class.perfetto::TracedDictionary"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #6
  %23 = bitcast %"class.perfetto::TracedDictionary"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %15, %"class.perfetto::TracedValue"* %1) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %16, %"class.perfetto::TracedDictionary"* nonnull %15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)) #6
  %24 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %0, i64 0, i32 0
  %25 = bitcast %"class.perfetto::TracedValue"* %16 to i8*
  %26 = bitcast %"class.perfetto::TracedValue"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* nonnull align 8 %25, i64 16, i1 false) #6
  %27 = load i32, i32* %24, align 4
  call void @_ZN8perfetto17TraceFormatTraitsIN3gfx5mojom19ColorSpacePrimaryIDEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"* nonnull %10, i32 %27) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %17, %"class.perfetto::TracedDictionary"* nonnull %15, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0)) #6
  %28 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %0, i64 0, i32 1
  %29 = bitcast %"class.perfetto::TracedValue"* %17 to i8*
  %30 = bitcast %"class.perfetto::TracedValue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %29, i64 16, i1 false) #6
  %31 = load i32, i32* %28, align 4
  call void @_ZN8perfetto17TraceFormatTraitsIN3gfx5mojom20ColorSpaceTransferIDEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"* nonnull %9, i32 %31) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %18, %"class.perfetto::TracedDictionary"* nonnull %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0)) #6
  %32 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %0, i64 0, i32 2
  %33 = bitcast %"class.perfetto::TracedValue"* %18 to i8*
  %34 = bitcast %"class.perfetto::TracedValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* nonnull align 8 %33, i64 16, i1 false) #6
  %35 = load i32, i32* %32, align 4
  call void @_ZN8perfetto17TraceFormatTraitsIN3gfx5mojom18ColorSpaceMatrixIDEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"* nonnull %8, i32 %35) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %19, %"class.perfetto::TracedDictionary"* nonnull %15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0)) #6
  %36 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %0, i64 0, i32 3
  %37 = bitcast %"class.perfetto::TracedValue"* %19 to i8*
  %38 = bitcast %"class.perfetto::TracedValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* nonnull align 8 %37, i64 16, i1 false) #6
  %39 = load i32, i32* %36, align 4
  call void @_ZN8perfetto17TraceFormatTraitsIN3gfx5mojom17ColorSpaceRangeIDEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"* nonnull %7, i32 %39) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %20, %"class.perfetto::TracedDictionary"* nonnull %15, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0)) #6
  %40 = bitcast %"class.perfetto::TracedValue"* %20 to i8*
  %41 = bitcast %"class.perfetto::TracedValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* nonnull align 8 %40, i64 16, i1 false) #6
  %42 = bitcast %"class.perfetto::TracedArray"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 16, i1 false) #6
  call void @_ZNO8perfetto11TracedValue10WriteArrayEv(%"class.perfetto::TracedArray"* nonnull sret %5, %"class.perfetto::TracedValue"* nonnull %6) #6
  %43 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %44 = load float*, float** %43, align 8
  %45 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds float, float* %44, i64 %47
  %49 = icmp eq i32 %46, 0
  br i1 %49, label %59, label %50

50:                                               ; preds = %2
  %51 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  %52 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  br label %53

53:                                               ; preds = %53, %50
  %54 = phi float* [ %44, %50 ], [ %57, %53 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #6
  call void @_ZN8perfetto11TracedArray10AppendItemEv(%"class.perfetto::TracedValue"* nonnull sret %4, %"class.perfetto::TracedArray"* nonnull %5) #6
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* nonnull align 8 %51, i64 16, i1 false) #6
  %55 = load float, float* %54, align 4
  %56 = fpext float %55 to double
  call void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"* nonnull %3, double %56) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #6
  %57 = getelementptr inbounds float, float* %54, i64 1
  %58 = icmp eq float* %57, %48
  br i1 %58, label %59, label %53

59:                                               ; preds = %53, %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %21, %"class.perfetto::TracedDictionary"* nonnull %15, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0)) #6
  %60 = bitcast %"class.perfetto::TracedValue"* %21 to i8*
  %61 = bitcast %"class.perfetto::TracedValue"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %61, i8* nonnull align 8 %60, i64 16, i1 false) #6
  %62 = bitcast %"class.perfetto::TracedArray"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 16, i1 false) #6
  call void @_ZNO8perfetto11TracedValue10WriteArrayEv(%"class.perfetto::TracedArray"* nonnull sret %13, %"class.perfetto::TracedValue"* nonnull %14) #6
  %63 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %64 = load float*, float** %63, align 8
  %65 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds float, float* %64, i64 %67
  %69 = icmp eq i32 %66, 0
  br i1 %69, label %79, label %70

70:                                               ; preds = %59
  %71 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  %72 = bitcast %"class.perfetto::TracedValue"* %11 to i8*
  br label %73

73:                                               ; preds = %73, %70
  %74 = phi float* [ %64, %70 ], [ %77, %73 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #6
  call void @_ZN8perfetto11TracedArray10AppendItemEv(%"class.perfetto::TracedValue"* nonnull sret %12, %"class.perfetto::TracedArray"* nonnull %13) #6
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* nonnull align 8 %71, i64 16, i1 false) #6
  %75 = load float, float* %74, align 4
  %76 = fpext float %75 to double
  call void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"* nonnull %11, double %76) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #6
  %77 = getelementptr inbounds float, float* %74, i64 1
  %78 = icmp eq float* %77, %68
  br i1 %78, label %79, label %73

79:                                               ; preds = %73, %59
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #2

declare void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx5mojom5blink10ColorSpace8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN3gfx5mojom8internal15ColorSpace_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8* %0, %"class.mojo::internal::ValidationContext"* %1) #6
  ret i1 %3
}

declare zeroext i1 @_ZN3gfx5mojom8internal15ColorSpace_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN3gfx5mojom18ColorSpaceDataViewENS_9StructPtrINS2_5blink10ColorSpaceEEEE4ReadES3_PS7_(%"class.gfx::mojom::internal::ColorSpace_Data"*, %"class.mojo::Message"*, %"class.mojo::StructPtr"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 48) #7, !noalias !4
  %5 = getelementptr inbounds i8, i8* %4, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 32, i1 false) #6, !noalias !4
  %6 = ptrtoint i8* %4 to i64
  %7 = getelementptr inbounds %"class.gfx::mojom::internal::ColorSpace_Data", %"class.gfx::mojom::internal::ColorSpace_Data"* %0, i64 0, i32 1
  %8 = bitcast i32* %7 to <4 x i32>*
  %9 = load <4 x i32>, <4 x i32>* %8, align 1
  %10 = bitcast i8* %4 to <4 x i32>*
  store <4 x i32> %9, <4 x i32>* %10, align 4
  %11 = getelementptr inbounds %"class.gfx::mojom::internal::ColorSpace_Data", %"class.gfx::mojom::internal::ColorSpace_Data"* %0, i64 0, i32 5
  %12 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %11, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds i8, i8* %4, i64 16
  %17 = bitcast i8* %16 to %"class.WTF::Vector"*
  %18 = bitcast %"struct.mojo::internal::Pointer"* %11 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 %13
  %20 = bitcast i8* %19 to %"class.mojo::internal::Array_Data"*
  %21 = tail call zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIfEEN3WTF6VectorIfLj0ENS4_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsIS7_EES7_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataIfEEPS7_PNS_7MessageE(%"class.mojo::internal::Array_Data"* nonnull %20, %"class.WTF::Vector"* %17, %"class.mojo::Message"* %1) #6
  br i1 %21, label %22, label %50

22:                                               ; preds = %3, %15
  %23 = getelementptr inbounds i8, i8* %4, i64 32
  %24 = getelementptr inbounds %"class.gfx::mojom::internal::ColorSpace_Data", %"class.gfx::mojom::internal::ColorSpace_Data"* %0, i64 0, i32 6
  %25 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %24, i64 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %43

28:                                               ; preds = %22
  %29 = getelementptr inbounds i8, i8* %4, i64 40
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %49, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds i8, i8* %4, i64 44
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %33
  store i32 0, i32* %35, align 4
  br label %39

39:                                               ; preds = %38, %33
  %40 = bitcast i8* %23 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = bitcast i8* %23 to i64*
  store atomic i64 0, i64* %42 monotonic, align 8
  store i32 0, i32* %30, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %41) #6
  br label %49

43:                                               ; preds = %22
  %44 = bitcast i8* %23 to %"class.WTF::Vector"*
  %45 = bitcast %"struct.mojo::internal::Pointer"* %24 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 %26
  %47 = bitcast i8* %46 to %"class.mojo::internal::Array_Data"*
  %48 = tail call zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIfEEN3WTF6VectorIfLj0ENS4_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsIS7_EES7_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataIfEEPS7_PNS_7MessageE(%"class.mojo::internal::Array_Data"* nonnull %47, %"class.WTF::Vector"* %44, %"class.mojo::Message"* %1) #6
  br i1 %48, label %49, label %50

49:                                               ; preds = %39, %28, %43
  br label %50

50:                                               ; preds = %15, %49, %43
  %51 = phi i8 [ 1, %49 ], [ 0, %43 ], [ 0, %15 ]
  %52 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.gfx::mojom::blink::ColorSpace"*, %"class.gfx::mojom::blink::ColorSpace"** %52, align 8
  store %"class.gfx::mojom::blink::ColorSpace"* null, %"class.gfx::mojom::blink::ColorSpace"** %52, align 8
  %54 = icmp eq %"class.gfx::mojom::blink::ColorSpace"* %53, null
  br i1 %54, label %55, label %58

55:                                               ; preds = %50
  %56 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  store i64 %6, i64* %56, align 8
  %57 = icmp ne i8 %51, 0
  br label %110

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %53, i64 0, i32 5, i32 0, i32 0, i32 0
  %60 = load float*, float** %59, align 8
  %61 = icmp eq float* %60, null
  %62 = bitcast float* %60 to i8*
  br i1 %61, label %69, label %63, !prof !2

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %53, i64 0, i32 5, i32 0, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %68, label %67, !prof !3

67:                                               ; preds = %63
  store i32 0, i32* %64, align 4
  br label %68

68:                                               ; preds = %67, %63
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %62) #6
  store float* null, float** %59, align 8
  br label %69

69:                                               ; preds = %68, %58
  %70 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %53, i64 0, i32 4, i32 0, i32 0, i32 0
  %71 = load float*, float** %70, align 8
  %72 = icmp eq float* %71, null
  %73 = bitcast float* %71 to i8*
  br i1 %72, label %80, label %74, !prof !2

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %53, i64 0, i32 4, i32 0, i32 0, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %79, label %78, !prof !3

78:                                               ; preds = %74
  store i32 0, i32* %75, align 4
  br label %79

79:                                               ; preds = %78, %74
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %73) #6
  br label %80

80:                                               ; preds = %69, %79
  %81 = bitcast %"class.gfx::mojom::blink::ColorSpace"* %53 to i8*
  tail call void @_ZdlPv(i8* %81) #7
  %82 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %83 = load %"class.gfx::mojom::blink::ColorSpace"*, %"class.gfx::mojom::blink::ColorSpace"** %52, align 8
  store i64 %6, i64* %82, align 8
  %84 = icmp ne i8 %51, 0
  %85 = icmp eq %"class.gfx::mojom::blink::ColorSpace"* %83, null
  br i1 %85, label %110, label %86

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %83, i64 0, i32 5, i32 0, i32 0, i32 0
  %88 = load float*, float** %87, align 8
  %89 = icmp eq float* %88, null
  %90 = bitcast float* %88 to i8*
  br i1 %89, label %97, label %91, !prof !2

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %83, i64 0, i32 5, i32 0, i32 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %96, label %95, !prof !3

95:                                               ; preds = %91
  store i32 0, i32* %92, align 4
  br label %96

96:                                               ; preds = %95, %91
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %90) #6
  store float* null, float** %87, align 8
  br label %97

97:                                               ; preds = %96, %86
  %98 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %83, i64 0, i32 4, i32 0, i32 0, i32 0
  %99 = load float*, float** %98, align 8
  %100 = icmp eq float* %99, null
  %101 = bitcast float* %99 to i8*
  br i1 %100, label %108, label %102, !prof !2

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.gfx::mojom::blink::ColorSpace", %"class.gfx::mojom::blink::ColorSpace"* %83, i64 0, i32 4, i32 0, i32 0, i32 2
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %107, label %106, !prof !3

106:                                              ; preds = %102
  store i32 0, i32* %103, align 4
  br label %107

107:                                              ; preds = %106, %102
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %101) #6
  br label %108

108:                                              ; preds = %107, %97
  %109 = bitcast %"class.gfx::mojom::blink::ColorSpace"* %83 to i8*
  tail call void @_ZdlPv(i8* %109) #7
  br label %110

110:                                              ; preds = %55, %80, %108
  %111 = phi i1 [ %57, %55 ], [ %84, %80 ], [ %84, %108 ]
  ret i1 %111
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN8perfetto17TraceFormatTraitsIN3gfx5mojom19ColorSpacePrimaryIDEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN8perfetto17TraceFormatTraitsIN3gfx5mojom20ColorSpaceTransferIDEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"*, i32) local_unnamed_addr #2

declare void @_ZN8perfetto17TraceFormatTraitsIN3gfx5mojom18ColorSpaceMatrixIDEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"*, i32) local_unnamed_addr #2

declare void @_ZN8perfetto17TraceFormatTraitsIN3gfx5mojom17ColorSpaceRangeIDEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"*, i32) local_unnamed_addr #2

declare void @_ZNO8perfetto11TracedValue10WriteArrayEv(%"class.perfetto::TracedArray"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #2

declare void @_ZN8perfetto11TracedArray10AppendItemEv(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedArray"*) local_unnamed_addr #2

declare void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"*, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIfEEN3WTF6VectorIfLj0ENS4_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsIS7_EES7_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataIfEEPS7_PNS_7MessageE(%"class.mojo::internal::Array_Data"*, %"class.WTF::Vector"*, %"class.mojo::Message"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp ult i32 %7, %5
  br i1 %8, label %9, label %64

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ult i32 %11, %5
  br i1 %12, label %13, label %52

13:                                               ; preds = %9
  %14 = lshr i32 %11, 2
  %15 = add nuw i32 %11, 1
  %16 = add i32 %15, %14
  %17 = icmp ugt i32 %16, 4
  %18 = select i1 %17, i32 %16, i32 4
  %19 = icmp ugt i32 %18, %5
  %20 = select i1 %19, i32 %18, i32 %5
  %21 = icmp ult i32 %11, %20
  br i1 %21, label %22, label %52, !prof !2

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %24 = load float*, float** %23, align 8
  %25 = icmp eq float* %24, null
  %26 = zext i32 %20 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %26) #6
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #6
  br i1 %25, label %29, label %34

29:                                               ; preds = %22
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %1 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %10, align 8
  br label %52

34:                                               ; preds = %22
  %35 = lshr i64 %27, 2
  %36 = ptrtoint i8* %28 to i64
  %37 = load float*, float** %23, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne float* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast float* %37 to i8*
  br i1 %40, label %42, label %48, !prof !2

42:                                               ; preds = %34
  %43 = load i32, i32* %6, align 4
  %44 = zext i32 %43 to i64
  %45 = shl nuw nsw i64 %44, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %41, i64 %45, i1 false) #6
  %46 = bitcast %"class.WTF::Vector"* %1 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %42, %34
  %49 = phi i8* [ %47, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #6
  %50 = bitcast %"class.WTF::Vector"* %1 to i64*
  store atomic i64 %36, i64* %50 monotonic, align 8
  %51 = trunc i64 %35 to i32
  store i32 %51, i32* %10, align 8
  br label %52

52:                                               ; preds = %48, %29, %13, %9
  %53 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %54 = load float*, float** %53, align 8
  %55 = load i32, i32* %6, align 4
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds float, float* %54, i64 %56
  %58 = zext i32 %5 to i64
  %59 = getelementptr inbounds float, float* %54, i64 %58
  %60 = bitcast float* %57 to i8*
  %61 = ptrtoint float* %59 to i64
  %62 = ptrtoint float* %57 to i64
  %63 = sub i64 %61, %62
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %60, i8 0, i64 %63, i1 false) #6
  br label %64

64:                                               ; preds = %52, %3
  store i32 %5, i32* %6, align 4
  %65 = load i32, i32* %4, align 1
  %66 = zext i32 %65 to i64
  %67 = icmp eq i32 %65, 0
  br i1 %67, label %92, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %70 = load float*, float** %69, align 8
  %71 = icmp eq float* %70, null
  br i1 %71, label %72, label %75

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %0, i64 1
  %74 = bitcast %"class.mojo::internal::Array_Data"* %73 to float*
  br label %80

75:                                               ; preds = %68
  %76 = bitcast float* %70 to i8*
  %77 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %0, i64 1
  %78 = bitcast %"class.mojo::internal::Array_Data"* %77 to i8*
  %79 = shl nuw nsw i64 %66, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %76, i8* align 4 %78, i64 %79, i1 false)
  br label %92

80:                                               ; preds = %72, %80
  %81 = phi i64 [ 0, %72 ], [ %85, %80 ]
  %82 = getelementptr inbounds float, float* %74, i64 %81
  %83 = bitcast float* %82 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = add nuw nsw i64 %81, 1
  %86 = trunc i64 %81 to i32
  %87 = tail call dereferenceable(4) float* @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %1, i32 %86) #6
  %88 = bitcast float* %87 to i32*
  store i32 %84, i32* %88, align 4
  %89 = load i32, i32* %4, align 1
  %90 = zext i32 %89 to i64
  %91 = icmp ult i64 %85, %90
  br i1 %91, label %80, label %92

92:                                               ; preds = %80, %64, %75
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.9, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #6
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) float* @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #6
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* %14, i8* %15) #6
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #6
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load float*, float** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds float, float* %24, i64 %25
  ret float* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN3gfx5mojom5blink10ColorSpace3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!6 = distinct !{!6, !"_ZN3gfx5mojom5blink10ColorSpace3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
