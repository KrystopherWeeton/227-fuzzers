; ModuleID = '../../components/services/font/fontconfig_matching.cc'
source_filename = "../../components/services/font/fontconfig_matching.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon.1 }
%union.anon.1 = type { %"struct.font_service::FontConfigLocalMatching::FontConfigMatchResult" }
%"struct.font_service::FontConfigLocalMatching::FontConfigMatchResult" = type <{ %"class.base::FilePath", i32, [4 x i8] }>
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%struct._FcPattern = type opaque
%struct._FcObjectSet = type { i32, i32, i8** }
%struct._FcFontSet = type { i32, i32, %struct._FcPattern** }
%struct._FcConfig = type opaque
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

@.str = private unnamed_addr constant [15 x i8] c"postscriptname\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"fullname\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"scalable\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"index\00", align 1
@.str.5 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZZN12font_service23FontConfigLocalMatching23FindFontBySpecifiedNameEPKcRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEE15kSFNTExtensions = internal constant [7 x [5 x i8]] [[5 x i8] c".ttf\00", [5 x i8] c".otc\00", [5 x i8] c".TTF\00", [5 x i8] c".ttc\00", [5 x i8] c".otf\00", [5 x i8] c".OTF\00", [5 x i8] zeroinitializer], align 16
@.str.6 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"s\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12font_service23FontConfigLocalMatching38FindFontByPostscriptNameOrFullFontNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.absl::optional"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional", align 8
  %4 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 40, i1 false)
  call void @_ZN12font_service23FontConfigLocalMatching23FindFontBySpecifiedNameEPKcRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.absl::optional"* nonnull sret %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 40, i1 false) #8
  %9 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"* %9, %"class.base::FilePath"* dereferenceable(24) %10) #8
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %12 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  store i32 %13, i32* %11, align 8
  store i8 1, i8* %8, align 8
  br label %15

14:                                               ; preds = %2
  call void @_ZN12font_service23FontConfigLocalMatching23FindFontBySpecifiedNameEPKcRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.absl::optional"* sret %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), %"class.std::__1::basic_string"* dereferenceable(24) %1)
  br label %15

15:                                               ; preds = %14, %7
  %16 = load i8, i8* %4, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %19) #8
  store i8 0, i8* %4, align 8
  br label %20

20:                                               ; preds = %15, %18
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12font_service23FontConfigLocalMatching23FindFontBySpecifiedNameEPKcRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.absl::optional"* noalias sret, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca i8*, align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.base::FilePath", align 8
  %9 = alloca %"class.base::File", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"struct.font_service::FontConfigLocalMatching::FontConfigMatchResult", align 8
  %12 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %19 = select i1 %15, i8* %17, i8* %18
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %14 to i64
  %23 = select i1 %15, i64 %21, i64 %22
  %24 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %19, i64 %23) #8
  br i1 %24, label %29, label %25

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %26, align 8
  %27 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %28 = bitcast %union.anon.1* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 32, i1 false) #8
  br label %185

29:                                               ; preds = %3
  %30 = tail call %struct._FcPattern* @FcPatternCreate() #8
  %31 = load i8, i8* %13, align 1
  %32 = icmp slt i8 %31, 0
  %33 = load i8*, i8** %16, align 8
  %34 = select i1 %32, i8* %33, i8* %18
  %35 = tail call i32 @FcPatternAddString(%struct._FcPattern* %30, i8* %1, i8* %34) #8
  %36 = tail call i32 @FcPatternAddBool(%struct._FcPattern* %30, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32 1) #8
  %37 = tail call %struct._FcObjectSet* @FcObjectSetCreate() #8
  %38 = tail call i32 @FcObjectSetAdd(%struct._FcObjectSet* %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8
  %39 = tail call i32 @FcObjectSetAdd(%struct._FcObjectSet* %37, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0)) #8
  %40 = tail call %struct._FcFontSet* @FcFontList(%struct._FcConfig* null, %struct._FcPattern* %30, %struct._FcObjectSet* %37) #8
  %41 = icmp eq %struct._FcFontSet* %40, null
  br i1 %41, label %46, label %42

42:                                               ; preds = %29
  %43 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %40, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %50

46:                                               ; preds = %29, %42
  %47 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %47, align 8
  %48 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %49 = bitcast %union.anon.1* %48 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 32, i1 false) #8
  br label %177

50:                                               ; preds = %42
  %51 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %40, i64 0, i32 2
  %52 = load %struct._FcPattern**, %struct._FcPattern*** %51, align 8
  %53 = load %struct._FcPattern*, %struct._FcPattern** %52, align 8
  %54 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #8
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %55 = call i32 @FcPatternGetString(%struct._FcPattern* %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i32 0, i8** nonnull %5) #8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %58, align 8
  %59 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %60 = bitcast %union.anon.1* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 32, i1 false) #8
  br label %176

61:                                               ; preds = %50
  %62 = call i8* @FcConfigGetSysRoot(%struct._FcConfig* null) #8
  %63 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #8
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #8
  %67 = icmp eq i8* %62, null
  %68 = select i1 %67, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* %62
  %69 = call i64 @strlen(i8* %68) #8
  %70 = icmp ugt i64 %69, -17
  br i1 %70, label %71, label %73

71:                                               ; preds = %61
  %72 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %72) #9
  unreachable

73:                                               ; preds = %61
  %74 = icmp ult i64 %69, 23
  br i1 %74, label %84, label %75

75:                                               ; preds = %73
  %76 = add nuw i64 %69, 16
  %77 = and i64 %76, -16
  %78 = call i8* @_Znwm(i64 %77) #10
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %78, i8** %79, align 8
  %80 = or i64 %77, -9223372036854775808
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %69, i64* %82, align 8
  %83 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %89

84:                                               ; preds = %73
  %85 = trunc i64 %69 to i8
  %86 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  store i8 %85, i8* %87, align 1
  %88 = icmp eq i64 %69, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %84, %75
  %90 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %86, %84 ], [ %83, %75 ]
  %91 = phi i8* [ %66, %84 ], [ %78, %75 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %91, i8* align 1 %68, i64 %69, i1 false) #8
  br label %92

92:                                               ; preds = %84, %89
  %93 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %86, %84 ], [ %90, %89 ]
  %94 = phi i8* [ %66, %84 ], [ %91, %89 ]
  %95 = getelementptr inbounds i8, i8* %94, i64 %69
  store i8 0, i8* %95, align 1
  %96 = load i8*, i8** %5, align 8
  %97 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %7, i8* %96) #8, !noalias !3
  %98 = bitcast %"class.std::__1::basic_string"* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %63, i8* align 8 %98, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 24, i1 false) #8, !noalias !3
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %92
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load i8*, i8** %103, align 8
  call void @_ZdlPv(i8* %104) #10
  br label %105

105:                                              ; preds = %92, %102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #8
  %106 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = bitcast %"class.logging::CheckError"* %4 to i8*
  br label %111

109:                                              ; preds = %126
  %110 = icmp eq i64 %129, 6
  br i1 %110, label %130, label %111

111:                                              ; preds = %105, %109
  %112 = phi i64 [ 0, %105 ], [ %129, %109 ]
  %113 = getelementptr inbounds [7 x [5 x i8]], [7 x [5 x i8]]* @_ZZN12font_service23FontConfigLocalMatching23FindFontBySpecifiedNameEPKcRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEE15kSFNTExtensions, i64 0, i64 %112, i64 0
  %114 = load i8, i8* %107, align 1
  %115 = icmp slt i8 %114, 0
  %116 = load i8*, i8** %64, align 8
  %117 = select i1 %115, i8* %116, i8* %63
  %118 = load i64, i64* %65, align 8
  %119 = zext i8 %114 to i64
  %120 = select i1 %115, i64 %118, i64 %119
  %121 = icmp eq i8* %113, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %111
  %123 = call i64 @strlen(i8* nonnull %113) #8
  br label %126

124:                                              ; preds = %111
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #8
  %125 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #8
  br label %126

126:                                              ; preds = %122, %124
  %127 = phi i64 [ 0, %124 ], [ %123, %122 ]
  %128 = call zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %117, i64 %120, i8* %113, i64 %127, i32 0) #8
  %129 = add nuw nsw i64 %112, 1
  br i1 %128, label %134, label %109

130:                                              ; preds = %109
  %131 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %131, align 8
  %132 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %133 = bitcast %union.anon.1* %132 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 32, i1 false) #8
  br label %170

134:                                              ; preds = %126
  %135 = bitcast %"class.base::FilePath"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %135) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %135, i8 -86, i64 24, i1 false)
  %136 = load i8, i8* %107, align 1
  %137 = icmp slt i8 %136, 0
  %138 = load i8*, i8** %64, align 8
  %139 = select i1 %137, i8* %138, i8* %63
  %140 = load i64, i64* %65, align 8
  %141 = zext i8 %136 to i64
  %142 = select i1 %137, i64 %140, i64 %141
  call void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull %8, i8* %139, i64 %142) #8
  %143 = bitcast %"class.base::File"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %143) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %143, i8 -86, i64 56, i1 false)
  call void @_ZN4base4FileC1ERKNS_8FilePathEj(%"class.base::File"* nonnull %9, %"class.base::FilePath"* nonnull dereferenceable(24) %8, i32 33) #8
  %144 = call zeroext i1 @_ZNK4base4File7IsValidEv(%"class.base::File"* nonnull %9) #8
  br i1 %144, label %149, label %145

145:                                              ; preds = %134
  %146 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %146, align 8
  %147 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %148 = bitcast %union.anon.1* %147 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %148, i8 0, i64 32, i1 false) #8
  br label %169

149:                                              ; preds = %134
  %150 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %150) #8
  store i32 0, i32* %10, align 4
  %151 = call i32 @FcPatternGetInteger(%struct._FcPattern* %53, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i32 0, i32* nonnull %10) #8
  %152 = load i32, i32* %10, align 4
  %153 = icmp slt i32 %152, 0
  br i1 %153, label %154, label %158

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %155, align 8
  %156 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %157 = bitcast %union.anon.1* %156 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %157, i8 0, i64 32, i1 false) #8
  br label %168

158:                                              ; preds = %149
  %159 = bitcast %"struct.font_service::FontConfigLocalMatching::FontConfigMatchResult"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %159) #8
  %160 = getelementptr inbounds %"struct.font_service::FontConfigLocalMatching::FontConfigMatchResult", %"struct.font_service::FontConfigLocalMatching::FontConfigMatchResult"* %11, i64 0, i32 0
  %161 = getelementptr inbounds %"struct.font_service::FontConfigLocalMatching::FontConfigMatchResult", %"struct.font_service::FontConfigLocalMatching::FontConfigMatchResult"* %11, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %159, i8 -86, i64 32, i1 false)
  call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* nonnull %160) #8
  %162 = call dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSERKS0_(%"class.base::FilePath"* nonnull %160, %"class.base::FilePath"* nonnull dereferenceable(24) %8) #8
  %163 = load i32, i32* %10, align 4
  store i32 %163, i32* %161, align 8
  %164 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %164, align 8
  %165 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"* %165, %"class.base::FilePath"* nonnull dereferenceable(24) %160) #8
  %166 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %167 = load i32, i32* %161, align 8
  store i32 %167, i32* %166, align 8
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %160) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %159) #8
  br label %168

168:                                              ; preds = %158, %154
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %150) #8
  br label %169

169:                                              ; preds = %168, %145
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %143) #8
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #8
  br label %170

170:                                              ; preds = %169, %130
  %171 = load i8, i8* %107, align 1
  %172 = icmp slt i8 %171, 0
  br i1 %172, label %173, label %175

173:                                              ; preds = %170
  %174 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %174) #10
  br label %175

175:                                              ; preds = %170, %173
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #8
  br label %176

176:                                              ; preds = %175, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #8
  br label %177

177:                                              ; preds = %176, %46
  br i1 %41, label %179, label %178

178:                                              ; preds = %177
  call void @FcFontSetDestroy(%struct._FcFontSet* nonnull %40) #8
  br label %179

179:                                              ; preds = %177, %178
  %180 = icmp eq %struct._FcObjectSet* %37, null
  br i1 %180, label %182, label %181

181:                                              ; preds = %179
  call void @FcObjectSetDestroy(%struct._FcObjectSet* nonnull %37) #8
  br label %182

182:                                              ; preds = %179, %181
  %183 = icmp eq %struct._FcPattern* %30, null
  br i1 %183, label %185, label %184

184:                                              ; preds = %182
  call void @FcPatternDestroy(%struct._FcPattern* nonnull %30) #8
  br label %185

185:                                              ; preds = %184, %182, %25
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

declare %struct._FcPattern* @FcPatternCreate() local_unnamed_addr #2

declare void @FcPatternDestroy(%struct._FcPattern*) local_unnamed_addr #2

declare i32 @FcPatternAddString(%struct._FcPattern*, i8*, i8*) local_unnamed_addr #2

declare i32 @FcPatternAddBool(%struct._FcPattern*, i8*, i32) local_unnamed_addr #2

declare %struct._FcObjectSet* @FcObjectSetCreate() local_unnamed_addr #2

declare void @FcObjectSetDestroy(%struct._FcObjectSet*) local_unnamed_addr #2

declare i32 @FcObjectSetAdd(%struct._FcObjectSet*, i8*) local_unnamed_addr #2

declare %struct._FcFontSet* @FcFontList(%struct._FcConfig*, %struct._FcPattern*, %struct._FcObjectSet*) local_unnamed_addr #2

declare void @FcFontSetDestroy(%struct._FcFontSet*) local_unnamed_addr #2

declare i32 @FcPatternGetString(%struct._FcPattern*, i8*, i32, i8**) local_unnamed_addr #2

declare i8* @FcConfigGetSysRoot(%struct._FcConfig*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

declare void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"*, i8*, i64) unnamed_addr #2

declare void @_ZN4base4FileC1ERKNS_8FilePathEj(%"class.base::File"*, %"class.base::FilePath"* dereferenceable(24), i32) unnamed_addr #2

declare zeroext i1 @_ZNK4base4File7IsValidEv(%"class.base::File"*) local_unnamed_addr #2

declare i32 @FcPatternGetInteger(%struct._FcPattern*, i8*, i32, i32*) local_unnamed_addr #2

declare dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSERKS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base4FileD1Ev(%"class.base::File"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

declare void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
