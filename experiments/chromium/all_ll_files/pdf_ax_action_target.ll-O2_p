; ModuleID = '../../components/pdf/renderer/pdf_ax_action_target.cc'
source_filename = "../../components/pdf/renderer/pdf_ax_action_target.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.pdf::PdfAXActionTarget" = type { %"class.ui::AXActionTarget", %"class.ui::AXNode"*, %"class.pdf::PdfAccessibilityTree"* }
%"class.ui::AXActionTarget" = type { i32 (...)** }
%"class.ui::AXNode" = type { i32 (...)**, %"class.ui::AXNode::OwnerTree"*, i64, i64, i64, %"class.ui::AXNode"*, %"class.std::__1::vector", %"struct.ui::AXNodeData", %"struct.ui::AXHypertext", %"struct.ui::AXHypertext", %"class.std::__1::unique_ptr.79" }
%"class.ui::AXNode::OwnerTree" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.ui::AXNode"**, %"class.ui::AXNode"**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ui::AXNode"** }
%"struct.ui::AXNodeData" = type { i32 (...)**, i32, i32, i32, i64, %"class.std::__1::vector.1", %"class.std::__1::vector.8", %"class.std::__1::vector.16", %"class.std::__1::vector.24", %"class.std::__1::vector.32", %"class.std::__1::vector.40", %"class.std::__1::vector.48", %"class.std::__1::vector.56", %"struct.ui::AXRelativeBounds" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.3" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"struct.std::__1::pair.10"*, %"struct.std::__1::pair.10"*, %"class.std::__1::__compressed_pair.11" }
%"struct.std::__1::pair.10" = type opaque
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::pair.10"* }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"struct.std::__1::pair.18"*, %"struct.std::__1::pair.18"*, %"class.std::__1::__compressed_pair.19" }
%"struct.std::__1::pair.18" = type opaque
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::pair.18"* }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"struct.std::__1::pair.26"*, %"struct.std::__1::pair.26"*, %"class.std::__1::__compressed_pair.27" }
%"struct.std::__1::pair.26" = type opaque
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::pair.26"* }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"struct.std::__1::pair.34"*, %"struct.std::__1::pair.34"*, %"class.std::__1::__compressed_pair.35" }
%"struct.std::__1::pair.34" = type opaque
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::pair.34"* }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"struct.std::__1::pair.42"*, %"struct.std::__1::pair.42"*, %"class.std::__1::__compressed_pair.43" }
%"struct.std::__1::pair.42" = type opaque
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.std::__1::pair.42"* }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %"struct.std::__1::pair.50"*, %"struct.std::__1::pair.50"*, %"class.std::__1::__compressed_pair.51" }
%"struct.std::__1::pair.50" = type opaque
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.std::__1::pair.50"* }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { i32*, i32*, %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { i32* }
%"struct.ui::AXRelativeBounds" = type { i32 (...)**, i32, %"class.gfx::RectF", %"class.std::__1::unique_ptr" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.gfx::Transform"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"struct.ui::AXHypertext" = type { i8, %"class.std::__1::map", %"class.std::__1::basic_string" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.66", %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"struct.ui::AXLanguageInfo"* }
%"struct.ui::AXLanguageInfo" = type opaque
%"class.pdf::PdfAccessibilityTree" = type { %"class.content::PluginAXTreeSource", %"struct.ui::AXTreeData", %"class.ui::AXTree", %"class.content::RendererPpapiHost"*, i32, double, double, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", i32, i32, i32, i32, %struct.PP_PrivateAccessibilityDocInfo, %"struct.ui::AXNodeData"*, %"class.std::__1::vector.220", %"class.std::__1::map.228", %"class.std::__1::map.237", i8, i32 }
%"class.content::PluginAXTreeSource" = type { %"class.ui::AXTreeSource" }
%"class.ui::AXTreeSource" = type { i32 (...)** }
%"struct.ui::AXTreeData" = type <{ i32 (...)**, %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.std::__1::basic_string.86", i8, [3 x i8], float, %"class.std::__1::basic_string.86", %"class.std::__1::basic_string.86", %"class.std::__1::basic_string.86", i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.ui::AXTreeID" = type { i32, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.85 }
%union.anon.85 = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::basic_string.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.89 }
%union.anon.89 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.ui::AXTree" = type { %"class.ui::AXNode::OwnerTree", %"class.std::__1::unique_ptr.95", %"class.base::ObserverList", %"class.ui::AXNode"*, %"class.std::__1::unordered_map", %"class.std::__1::basic_string.86", %"struct.ui::AXTreeData", %"class.std::__1::map.132", %"class.std::__1::map.143", %"class.std::__1::map.154", %"class.std::__1::unordered_map.165", i32, [4 x i8], %"class.std::__1::unordered_map.189", i8, i8, %"class.std::__1::vector.213" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.ui::AXLanguageDetectionManager"* }
%"class.ui::AXLanguageDetectionManager" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.101", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.101" = type { %"class.std::__1::__vector_base.102" }
%"class.std::__1::__vector_base.102" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.109" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.103" }
%"struct.std::__1::__atomic_base.103" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.104" }
%"struct.std::__1::atomic.104" = type { %"struct.std::__1::__atomic_base.105" }
%"struct.std::__1::__atomic_base.105" = type { %"struct.std::__1::__atomic_base.106" }
%"struct.std::__1::__atomic_base.106" = type { %"struct.std::__1::__cxx_atomic_impl.107" }
%"struct.std::__1::__cxx_atomic_impl.107" = type { %"struct.std::__1::__cxx_atomic_base_impl.108" }
%"struct.std::__1::__cxx_atomic_base_impl.108" = type { i8 }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.114", %"class.std::__1::__compressed_pair.122", %"class.std::__1::__compressed_pair.127", %"class.std::__1::__compressed_pair.129", [4 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { float }
%"class.std::__1::map.132" = type { %"class.std::__1::__tree.133" }
%"class.std::__1::__tree.133" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.134", %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::map.143" = type { %"class.std::__1::__tree.144" }
%"class.std::__1::__tree.144" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.145", %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::map.154" = type { %"class.std::__1::__tree.155" }
%"class.std::__1::__tree.155" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.156", %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::unordered_map.165" = type { %"class.std::__1::__hash_table.166" }
%"class.std::__1::__hash_table.166" = type <{ %"class.std::__1::unique_ptr.167", %"class.std::__1::__compressed_pair.177", %"class.std::__1::__compressed_pair.182", %"class.std::__1::__compressed_pair.185", [4 x i8] }>
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169", %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.std::__1::__hash_node_base.170"** }
%"struct.std::__1::__hash_node_base.170" = type { %"struct.std::__1::__hash_node_base.170"* }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.std::__1::__bucket_list_deallocator.172" }
%"class.std::__1::__bucket_list_deallocator.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"struct.std::__1::__hash_node_base.170" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"class.std::__1::unordered_map.189" = type { %"class.std::__1::__hash_table.190" }
%"class.std::__1::__hash_table.190" = type <{ %"class.std::__1::unique_ptr.191", %"class.std::__1::__compressed_pair.201", %"class.std::__1::__compressed_pair.206", %"class.std::__1::__compressed_pair.209", [4 x i8] }>
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193", %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"struct.std::__1::__hash_node_base.194"** }
%"struct.std::__1::__hash_node_base.194" = type { %"struct.std::__1::__hash_node_base.194"* }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.std::__1::__bucket_list_deallocator.196" }
%"class.std::__1::__bucket_list_deallocator.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"struct.std::__1::__hash_node_base.194" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"struct.ui::AXEventIntent"*, %"struct.ui::AXEventIntent"*, %"class.std::__1::__compressed_pair.215" }
%"struct.ui::AXEventIntent" = type { i32 (...)**, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"struct.ui::AXEventIntent"* }
%"class.content::RendererPpapiHost" = type opaque
%"class.gfx::Vector2dF" = type { float, float }
%struct.PP_PrivateAccessibilityDocInfo = type { i32, i32, i32 }
%"class.std::__1::vector.220" = type { %"class.std::__1::__vector_base.221" }
%"class.std::__1::__vector_base.221" = type { %"class.std::__1::unique_ptr.222"*, %"class.std::__1::unique_ptr.222"*, %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::unique_ptr.222" = type opaque
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.std::__1::unique_ptr.222"* }
%"class.std::__1::map.228" = type { %"class.std::__1::__tree.229" }
%"class.std::__1::__tree.229" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.230", %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::map.237" = type { %"class.std::__1::__tree.238" }
%"class.std::__1::__tree.238" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.239", %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.ui::AXActionData" = type { i32, %"class.ui::AXTreeID", %"class.std::__1::basic_string.86", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.gfx::Rect", %"class.gfx::Point", %"class.std::__1::basic_string.86", i32, i32, i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%struct.PP_PdfAccessibilityActionData = type { i32, i32, %struct.PP_Point, %struct.PP_Rect, i32, i32, i32, i32, %struct.PP_PdfPageCharacterIndex, %struct.PP_PdfPageCharacterIndex }
%struct.PP_Point = type { i32, i32 }
%struct.PP_Rect = type { %struct.PP_Point, %struct.PP_Size }
%struct.PP_Size = type { i32, i32 }
%struct.PP_PdfPageCharacterIndex = type { i32, i32 }
%"class.absl::optional.246" = type { %"class.absl::optional_internal::optional_data.247" }
%"class.absl::optional_internal::optional_data.247" = type { %"class.absl::optional_internal::optional_data_base.248" }
%"class.absl::optional_internal::optional_data_base.248" = type { %"class.absl::optional_internal::optional_data_dtor_base.249" }
%"class.absl::optional_internal::optional_data_dtor_base.249" = type { i8, %union.anon.250 }
%union.anon.250 = type { %"struct.pdf::PdfAccessibilityTree::AnnotationInfo" }
%"struct.pdf::PdfAccessibilityTree::AnnotationInfo" = type { i32, i32 }

@_ZTVN3pdf17PdfAXActionTargetE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.pdf::PdfAXActionTarget"*)* @_ZN3pdf17PdfAXActionTargetD2Ev to i8*), i8* bitcast (void (%"class.pdf::PdfAXActionTarget"*)* @_ZN3pdf17PdfAXActionTargetD0Ev to i8*), i8* bitcast (i32 (%"class.pdf::PdfAXActionTarget"*)* @_ZNK3pdf17PdfAXActionTarget7GetTypeEv to i8*), i8* bitcast (i1 (%"class.pdf::PdfAXActionTarget"*, %"struct.ui::AXActionData"*)* @_ZNK3pdf17PdfAXActionTarget13PerformActionERKN2ui12AXActionDataE to i8*), i8* bitcast ({ i64, i64 } (%"class.pdf::PdfAXActionTarget"*)* @_ZNK3pdf17PdfAXActionTarget17GetRelativeBoundsEv to i8*), i8* bitcast (i64 (%"class.pdf::PdfAXActionTarget"*)* @_ZNK3pdf17PdfAXActionTarget15GetScrollOffsetEv to i8*), i8* bitcast (i64 (%"class.pdf::PdfAXActionTarget"*)* @_ZNK3pdf17PdfAXActionTarget19MinimumScrollOffsetEv to i8*), i8* bitcast (i64 (%"class.pdf::PdfAXActionTarget"*)* @_ZNK3pdf17PdfAXActionTarget19MaximumScrollOffsetEv to i8*), i8* bitcast (void (%"class.pdf::PdfAXActionTarget"*, %"class.gfx::Point"*)* @_ZNK3pdf17PdfAXActionTarget15SetScrollOffsetERKN3gfx5PointE to i8*), i8* bitcast (i1 (%"class.pdf::PdfAXActionTarget"*, i1)* @_ZNK3pdf17PdfAXActionTarget11SetSelectedEb to i8*), i8* bitcast (i1 (%"class.pdf::PdfAXActionTarget"*, %"class.ui::AXActionTarget"*, i32, %"class.ui::AXActionTarget"*, i32)* @_ZNK3pdf17PdfAXActionTarget12SetSelectionEPKN2ui14AXActionTargetEiS4_i to i8*), i8* bitcast (i1 (%"class.pdf::PdfAXActionTarget"*)* @_ZNK3pdf17PdfAXActionTarget19ScrollToMakeVisibleEv to i8*), i8* bitcast (i1 (%"class.pdf::PdfAXActionTarget"*, %"class.gfx::Rect"*, i32, i32, i32)* @_ZNK3pdf17PdfAXActionTarget31ScrollToMakeVisibleWithSubFocusERKN3gfx4RectEN2ax5mojom15ScrollAlignmentES7_NS6_14ScrollBehaviorE to i8*)] }, align 8

@_ZN3pdf17PdfAXActionTargetC1ERKN2ui6AXNodeEPNS_20PdfAccessibilityTreeE = hidden unnamed_addr alias void (%"class.pdf::PdfAXActionTarget"*, %"class.ui::AXNode"*, %"class.pdf::PdfAccessibilityTree"*), void (%"class.pdf::PdfAXActionTarget"*, %"class.ui::AXNode"*, %"class.pdf::PdfAccessibilityTree"*)* @_ZN3pdf17PdfAXActionTargetC2ERKN2ui6AXNodeEPNS_20PdfAccessibilityTreeE
@_ZN3pdf17PdfAXActionTargetD1Ev = hidden unnamed_addr alias void (%"class.pdf::PdfAXActionTarget"*), void (%"class.pdf::PdfAXActionTarget"*)* @_ZN3pdf17PdfAXActionTargetD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.pdf::PdfAXActionTarget"* @_ZN3pdf17PdfAXActionTarget18FromAXActionTargetEPKN2ui14AXActionTargetE(%"class.ui::AXActionTarget"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.ui::AXActionTarget"* %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.ui::AXActionTarget"* %0 to i32 (%"class.ui::AXActionTarget"*)***
  %5 = load i32 (%"class.ui::AXActionTarget"*)**, i32 (%"class.ui::AXActionTarget"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.ui::AXActionTarget"*)*, i32 (%"class.ui::AXActionTarget"*)** %5, i64 2
  %7 = load i32 (%"class.ui::AXActionTarget"*)*, i32 (%"class.ui::AXActionTarget"*)** %6, align 8
  %8 = tail call i32 %7(%"class.ui::AXActionTarget"* nonnull %0) #8
  %9 = icmp eq i32 %8, 2
  %10 = bitcast %"class.ui::AXActionTarget"* %0 to %"class.pdf::PdfAXActionTarget"*
  %11 = select i1 %9, %"class.pdf::PdfAXActionTarget"* %10, %"class.pdf::PdfAXActionTarget"* null
  ret %"class.pdf::PdfAXActionTarget"* %11

12:                                               ; preds = %1
  ret %"class.pdf::PdfAXActionTarget"* null
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3pdf17PdfAXActionTargetC2ERKN2ui6AXNodeEPNS_20PdfAccessibilityTreeE(%"class.pdf::PdfAXActionTarget"* nocapture, %"class.ui::AXNode"* dereferenceable(456), %"class.pdf::PdfAccessibilityTree"*) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.pdf::PdfAXActionTarget", %"class.pdf::PdfAXActionTarget"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN3pdf17PdfAXActionTargetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.pdf::PdfAXActionTarget", %"class.pdf::PdfAXActionTarget"* %0, i64 0, i32 1
  store %"class.ui::AXNode"* %1, %"class.ui::AXNode"** %5, align 8
  %6 = getelementptr inbounds %"class.pdf::PdfAXActionTarget", %"class.pdf::PdfAXActionTarget"* %0, i64 0, i32 2
  store %"class.pdf::PdfAccessibilityTree"* %2, %"class.pdf::PdfAccessibilityTree"** %6, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3pdf17PdfAXActionTargetD2Ev(%"class.pdf::PdfAXActionTarget"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3pdf17PdfAXActionTargetD0Ev(%"class.pdf::PdfAXActionTarget"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.pdf::PdfAXActionTarget"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK3pdf17PdfAXActionTarget7GetTypeEv(%"class.pdf::PdfAXActionTarget"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i32 2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3pdf17PdfAXActionTarget13PerformActionERKN2ui12AXActionDataE(%"class.pdf::PdfAXActionTarget"* nocapture readonly, %"struct.ui::AXActionData"* nocapture readonly dereferenceable(168)) unnamed_addr #0 align 2 {
  %3 = alloca %struct.PP_PdfAccessibilityActionData, align 4
  %4 = alloca %struct.PP_PdfAccessibilityActionData, align 4
  %5 = alloca %"class.absl::optional.246", align 4
  %6 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %66 [
    i32 7, label %8
    i32 31, label %41
    i32 25, label %45
  ]

8:                                                ; preds = %2
  %9 = bitcast %struct.PP_PdfAccessibilityActionData* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %9, i8 0, i64 64, i1 false) #8
  %10 = getelementptr inbounds %"class.pdf::PdfAXActionTarget", %"class.pdf::PdfAXActionTarget"* %0, i64 0, i32 1
  %11 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %10, align 8
  %12 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %11, i64 0, i32 7, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 111
  br i1 %14, label %15, label %39

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.absl::optional.246", %"class.absl::optional.246"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %16) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %16, i8 -86, i64 12, i1 false) #8
  %17 = getelementptr inbounds %"class.pdf::PdfAXActionTarget", %"class.pdf::PdfAXActionTarget"* %0, i64 0, i32 2
  %18 = load %"class.pdf::PdfAccessibilityTree"*, %"class.pdf::PdfAccessibilityTree"** %17, align 8
  %19 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %11, i64 0, i32 7, i32 1
  %20 = load i32, i32* %19, align 8
  call void @_ZNK3pdf20PdfAccessibilityTree30GetPdfAnnotationInfoFromAXNodeEi(%"class.absl::optional.246"* nonnull sret %5, %"class.pdf::PdfAccessibilityTree"* %18, i32 %20) #8
  %21 = load i8, i8* %16, align 4, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %37, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.absl::optional.246", %"class.absl::optional.246"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %struct.PP_PdfAccessibilityActionData, %struct.PP_PdfAccessibilityActionData* %4, i64 0, i32 5
  store i32 %25, i32* %26, align 4
  %27 = getelementptr inbounds %"class.absl::optional.246", %"class.absl::optional.246"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %struct.PP_PdfAccessibilityActionData, %struct.PP_PdfAccessibilityActionData* %4, i64 0, i32 4
  store i32 %28, i32* %29, align 4
  %30 = getelementptr inbounds %struct.PP_PdfAccessibilityActionData, %struct.PP_PdfAccessibilityActionData* %4, i64 0, i32 1
  store i32 1, i32* %30, align 4
  %31 = getelementptr inbounds %struct.PP_PdfAccessibilityActionData, %struct.PP_PdfAccessibilityActionData* %4, i64 0, i32 0
  store i32 2, i32* %31, align 4
  %32 = load %"class.pdf::PdfAccessibilityTree"*, %"class.pdf::PdfAccessibilityTree"** %17, align 8
  call void @_ZN3pdf20PdfAccessibilityTree12HandleActionERK29PP_PdfAccessibilityActionData(%"class.pdf::PdfAccessibilityTree"* %32, %struct.PP_PdfAccessibilityActionData* nonnull dereferenceable(64) %4) #8
  %33 = load i8, i8* %16, align 4, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %23
  %36 = getelementptr inbounds %"class.absl::optional.246", %"class.absl::optional.246"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3pdf20PdfAccessibilityTree14AnnotationInfoD1Ev(%"struct.pdf::PdfAccessibilityTree::AnnotationInfo"* %36) #8
  store i8 0, i8* %16, align 4
  br label %37

37:                                               ; preds = %35, %23, %15
  %38 = phi i1 [ true, %23 ], [ true, %35 ], [ false, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %16) #8
  br label %39

39:                                               ; preds = %8, %37
  %40 = phi i1 [ %38, %37 ], [ false, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #8
  br label %66

41:                                               ; preds = %2
  %42 = getelementptr inbounds %"class.pdf::PdfAXActionTarget", %"class.pdf::PdfAXActionTarget"* %0, i64 0, i32 2
  %43 = load %"class.pdf::PdfAccessibilityTree"*, %"class.pdf::PdfAccessibilityTree"** %42, align 8
  %44 = tail call zeroext i1 @_ZN3pdf20PdfAccessibilityTree15ShowContextMenuEv(%"class.pdf::PdfAccessibilityTree"* %43) #8
  br label %66

45:                                               ; preds = %2
  %46 = bitcast %struct.PP_PdfAccessibilityActionData* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %46) #8
  %47 = getelementptr inbounds %struct.PP_PdfAccessibilityActionData, %struct.PP_PdfAccessibilityActionData* %3, i64 0, i32 1
  %48 = bitcast i32* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %48, i8 0, i64 60, i1 false) #8
  %49 = getelementptr inbounds %struct.PP_PdfAccessibilityActionData, %struct.PP_PdfAccessibilityActionData* %3, i64 0, i32 0
  store i32 3, i32* %49, align 4
  %50 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %1, i64 0, i32 14, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %1, i64 0, i32 14, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %struct.PP_PdfAccessibilityActionData, %struct.PP_PdfAccessibilityActionData* %3, i64 0, i32 2, i32 0
  store i32 %51, i32* %54, align 4
  %55 = getelementptr inbounds %struct.PP_PdfAccessibilityActionData, %struct.PP_PdfAccessibilityActionData* %3, i64 0, i32 2, i32 1
  store i32 %53, i32* %55, align 4
  %56 = getelementptr inbounds %"class.pdf::PdfAXActionTarget", %"class.pdf::PdfAXActionTarget"* %0, i64 0, i32 1
  %57 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %56, align 8
  %58 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %57, i64 0, i32 7, i32 13, i32 2, i32 0, i32 0
  %59 = bitcast float* %58 to <4 x float>*
  %60 = load <4 x float>, <4 x float>* %59, align 4
  %61 = fptosi <4 x float> %60 to <4 x i32>
  %62 = getelementptr inbounds %struct.PP_PdfAccessibilityActionData, %struct.PP_PdfAccessibilityActionData* %3, i64 0, i32 3, i32 0, i32 0
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> %61, <4 x i32>* %63, align 4
  %64 = getelementptr inbounds %"class.pdf::PdfAXActionTarget", %"class.pdf::PdfAXActionTarget"* %0, i64 0, i32 2
  %65 = load %"class.pdf::PdfAccessibilityTree"*, %"class.pdf::PdfAccessibilityTree"** %64, align 8
  call void @_ZN3pdf20PdfAccessibilityTree12HandleActionERK29PP_PdfAccessibilityActionData(%"class.pdf::PdfAccessibilityTree"* %65, %struct.PP_PdfAccessibilityActionData* nonnull dereferenceable(64) %3) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %46) #8
  br label %66

66:                                               ; preds = %2, %45, %41, %39
  %67 = phi i1 [ true, %45 ], [ %44, %41 ], [ %40, %39 ], [ false, %2 ]
  ret i1 %67
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3pdf17PdfAXActionTarget5ClickEv(%"class.pdf::PdfAXActionTarget"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %struct.PP_PdfAccessibilityActionData, align 4
  %3 = alloca %"class.absl::optional.246", align 4
  %4 = bitcast %struct.PP_PdfAccessibilityActionData* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %4, i8 0, i64 64, i1 false)
  %5 = getelementptr inbounds %"class.pdf::PdfAXActionTarget", %"class.pdf::PdfAXActionTarget"* %0, i64 0, i32 1
  %6 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %5, align 8
  %7 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %6, i64 0, i32 7, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 111
  br i1 %9, label %10, label %34

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.absl::optional.246", %"class.absl::optional.246"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 -86, i64 12, i1 false)
  %12 = getelementptr inbounds %"class.pdf::PdfAXActionTarget", %"class.pdf::PdfAXActionTarget"* %0, i64 0, i32 2
  %13 = load %"class.pdf::PdfAccessibilityTree"*, %"class.pdf::PdfAccessibilityTree"** %12, align 8
  %14 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %6, i64 0, i32 7, i32 1
  %15 = load i32, i32* %14, align 8
  call void @_ZNK3pdf20PdfAccessibilityTree30GetPdfAnnotationInfoFromAXNodeEi(%"class.absl::optional.246"* nonnull sret %3, %"class.pdf::PdfAccessibilityTree"* %13, i32 %15) #8
  %16 = load i8, i8* %11, align 4, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.absl::optional.246", %"class.absl::optional.246"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %struct.PP_PdfAccessibilityActionData, %struct.PP_PdfAccessibilityActionData* %2, i64 0, i32 5
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %"class.absl::optional.246", %"class.absl::optional.246"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.PP_PdfAccessibilityActionData, %struct.PP_PdfAccessibilityActionData* %2, i64 0, i32 4
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %struct.PP_PdfAccessibilityActionData, %struct.PP_PdfAccessibilityActionData* %2, i64 0, i32 1
  store i32 1, i32* %25, align 4
  %26 = getelementptr inbounds %struct.PP_PdfAccessibilityActionData, %struct.PP_PdfAccessibilityActionData* %2, i64 0, i32 0
  store i32 2, i32* %26, align 4
  %27 = load %"class.pdf::PdfAccessibilityTree"*, %"class.pdf::PdfAccessibilityTree"** %12, align 8
  call void @_ZN3pdf20PdfAccessibilityTree12HandleActionERK29PP_PdfAccessibilityActionData(%"class.pdf::PdfAccessibilityTree"* %27, %struct.PP_PdfAccessibilityActionData* nonnull dereferenceable(64) %2) #8
  %28 = load i8, i8* %11, align 4, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %18
  %31 = getelementptr inbounds %"class.absl::optional.246", %"class.absl::optional.246"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3pdf20PdfAccessibilityTree14AnnotationInfoD1Ev(%"struct.pdf::PdfAccessibilityTree::AnnotationInfo"* %31) #8
  store i8 0, i8* %11, align 4
  br label %32

32:                                               ; preds = %10, %18, %30
  %33 = phi i1 [ true, %18 ], [ true, %30 ], [ false, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #8
  br label %34

34:                                               ; preds = %1, %32
  %35 = phi i1 [ %33, %32 ], [ false, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #8
  ret i1 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3pdf17PdfAXActionTarget15ShowContextMenuEv(%"class.pdf::PdfAXActionTarget"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.pdf::PdfAXActionTarget", %"class.pdf::PdfAXActionTarget"* %0, i64 0, i32 2
  %3 = load %"class.pdf::PdfAccessibilityTree"*, %"class.pdf::PdfAccessibilityTree"** %2, align 8
  %4 = tail call zeroext i1 @_ZN3pdf20PdfAccessibilityTree15ShowContextMenuEv(%"class.pdf::PdfAccessibilityTree"* %3) #8
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3pdf17PdfAXActionTarget19ScrollToGlobalPointERKN3gfx5PointE(%"class.pdf::PdfAXActionTarget"* nocapture readonly, %"class.gfx::Point"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.PP_PdfAccessibilityActionData, align 4
  %4 = bitcast %struct.PP_PdfAccessibilityActionData* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #8
  %5 = getelementptr inbounds %struct.PP_PdfAccessibilityActionData, %struct.PP_PdfAccessibilityActionData* %3, i64 0, i32 1
  %6 = bitcast i32* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %6, i8 0, i64 60, i1 false)
  %7 = getelementptr inbounds %struct.PP_PdfAccessibilityActionData, %struct.PP_PdfAccessibilityActionData* %3, i64 0, i32 0
  store i32 3, i32* %7, align 4
  %8 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct.PP_PdfAccessibilityActionData, %struct.PP_PdfAccessibilityActionData* %3, i64 0, i32 2, i32 0
  store i32 %9, i32* %12, align 4
  %13 = getelementptr inbounds %struct.PP_PdfAccessibilityActionData, %struct.PP_PdfAccessibilityActionData* %3, i64 0, i32 2, i32 1
  store i32 %11, i32* %13, align 4
  %14 = getelementptr inbounds %"class.pdf::PdfAXActionTarget", %"class.pdf::PdfAXActionTarget"* %0, i64 0, i32 1
  %15 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %14, align 8
  %16 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %15, i64 0, i32 7, i32 13, i32 2, i32 0, i32 0
  %17 = bitcast float* %16 to <4 x float>*
  %18 = load <4 x float>, <4 x float>* %17, align 4
  %19 = fptosi <4 x float> %18 to <4 x i32>
  %20 = getelementptr inbounds %struct.PP_PdfAccessibilityActionData, %struct.PP_PdfAccessibilityActionData* %3, i64 0, i32 3, i32 0, i32 0
  %21 = bitcast i32* %20 to <4 x i32>*
  store <4 x i32> %19, <4 x i32>* %21, align 4
  %22 = getelementptr inbounds %"class.pdf::PdfAXActionTarget", %"class.pdf::PdfAXActionTarget"* %0, i64 0, i32 2
  %23 = load %"class.pdf::PdfAccessibilityTree"*, %"class.pdf::PdfAccessibilityTree"** %22, align 8
  call void @_ZN3pdf20PdfAccessibilityTree12HandleActionERK29PP_PdfAccessibilityActionData(%"class.pdf::PdfAccessibilityTree"* %23, %struct.PP_PdfAccessibilityActionData* nonnull dereferenceable(64) %3) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #8
  ret i1 true
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZNK3pdf20PdfAccessibilityTree30GetPdfAnnotationInfoFromAXNodeEi(%"class.absl::optional.246"* sret, %"class.pdf::PdfAccessibilityTree"*, i32) local_unnamed_addr #5

declare void @_ZN3pdf20PdfAccessibilityTree12HandleActionERK29PP_PdfAccessibilityActionData(%"class.pdf::PdfAccessibilityTree"*, %struct.PP_PdfAccessibilityActionData* dereferenceable(64)) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind readnone ssp uwtable
define hidden { i64, i64 } @_ZNK3pdf17PdfAXActionTarget17GetRelativeBoundsEv(%"class.pdf::PdfAXActionTarget"* nocapture readnone) unnamed_addr #6 align 2 {
  ret { i64, i64 } zeroinitializer
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK3pdf17PdfAXActionTarget15GetScrollOffsetEv(%"class.pdf::PdfAXActionTarget"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK3pdf17PdfAXActionTarget19MinimumScrollOffsetEv(%"class.pdf::PdfAXActionTarget"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK3pdf17PdfAXActionTarget19MaximumScrollOffsetEv(%"class.pdf::PdfAXActionTarget"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK3pdf17PdfAXActionTarget15SetScrollOffsetERKN3gfx5PointE(%"class.pdf::PdfAXActionTarget"* nocapture, %"class.gfx::Point"* nocapture dereferenceable(8)) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK3pdf17PdfAXActionTarget11SetSelectedEb(%"class.pdf::PdfAXActionTarget"* nocapture readnone, i1 zeroext) unnamed_addr #2 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3pdf17PdfAXActionTarget12SetSelectionEPKN2ui14AXActionTargetEiS4_i(%"class.pdf::PdfAXActionTarget"* nocapture readonly, %"class.ui::AXActionTarget"*, i32, %"class.ui::AXActionTarget"*, i32) unnamed_addr #0 align 2 {
  %6 = alloca %struct.PP_PdfAccessibilityActionData, align 4
  %7 = icmp eq %"class.ui::AXActionTarget"* %1, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %5
  %9 = bitcast %"class.ui::AXActionTarget"* %1 to i32 (%"class.ui::AXActionTarget"*)***
  %10 = load i32 (%"class.ui::AXActionTarget"*)**, i32 (%"class.ui::AXActionTarget"*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.ui::AXActionTarget"*)*, i32 (%"class.ui::AXActionTarget"*)** %10, i64 2
  %12 = load i32 (%"class.ui::AXActionTarget"*)*, i32 (%"class.ui::AXActionTarget"*)** %11, align 8
  %13 = tail call i32 %12(%"class.ui::AXActionTarget"* nonnull %1) #8
  %14 = icmp eq i32 %13, 2
  %15 = bitcast %"class.ui::AXActionTarget"* %1 to %"class.pdf::PdfAXActionTarget"*
  %16 = select i1 %14, %"class.pdf::PdfAXActionTarget"* %15, %"class.pdf::PdfAXActionTarget"* null
  br label %17

17:                                               ; preds = %5, %8
  %18 = phi %"class.pdf::PdfAXActionTarget"* [ %16, %8 ], [ null, %5 ]
  %19 = icmp eq %"class.ui::AXActionTarget"* %3, null
  br i1 %19, label %62, label %20

20:                                               ; preds = %17
  %21 = bitcast %"class.ui::AXActionTarget"* %3 to i32 (%"class.ui::AXActionTarget"*)***
  %22 = load i32 (%"class.ui::AXActionTarget"*)**, i32 (%"class.ui::AXActionTarget"*)*** %21, align 8
  %23 = getelementptr inbounds i32 (%"class.ui::AXActionTarget"*)*, i32 (%"class.ui::AXActionTarget"*)** %22, i64 2
  %24 = load i32 (%"class.ui::AXActionTarget"*)*, i32 (%"class.ui::AXActionTarget"*)** %23, align 8
  %25 = tail call i32 %24(%"class.ui::AXActionTarget"* nonnull %3) #8
  %26 = icmp eq i32 %25, 2
  %27 = bitcast %"class.ui::AXActionTarget"* %3 to %"class.pdf::PdfAXActionTarget"*
  %28 = select i1 %26, %"class.pdf::PdfAXActionTarget"* %27, %"class.pdf::PdfAXActionTarget"* null
  %29 = icmp eq %"class.pdf::PdfAXActionTarget"* %18, null
  %30 = icmp eq %"class.pdf::PdfAXActionTarget"* %28, null
  %31 = or i1 %29, %30
  %32 = or i32 %4, %2
  %33 = icmp slt i32 %32, 0
  %34 = or i1 %33, %31
  br i1 %34, label %62, label %35

35:                                               ; preds = %20
  %36 = bitcast %struct.PP_PdfAccessibilityActionData* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %36) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %36, i8 0, i64 64, i1 false)
  %37 = getelementptr inbounds %"class.pdf::PdfAXActionTarget", %"class.pdf::PdfAXActionTarget"* %0, i64 0, i32 2
  %38 = load %"class.pdf::PdfAccessibilityTree"*, %"class.pdf::PdfAccessibilityTree"** %37, align 8
  %39 = getelementptr inbounds %"class.pdf::PdfAXActionTarget", %"class.pdf::PdfAXActionTarget"* %18, i64 0, i32 1
  %40 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %39, align 8
  %41 = getelementptr inbounds %struct.PP_PdfAccessibilityActionData, %struct.PP_PdfAccessibilityActionData* %6, i64 0, i32 8
  %42 = call zeroext i1 @_ZNK3pdf20PdfAccessibilityTree19FindCharacterOffsetERKN2ui6AXNodeEjP24PP_PdfPageCharacterIndex(%"class.pdf::PdfAccessibilityTree"* %38, %"class.ui::AXNode"* dereferenceable(456) %40, i32 %2, %struct.PP_PdfPageCharacterIndex* %41) #8
  br i1 %42, label %43, label %60

43:                                               ; preds = %35
  %44 = load %"class.pdf::PdfAccessibilityTree"*, %"class.pdf::PdfAccessibilityTree"** %37, align 8
  %45 = getelementptr inbounds %"class.pdf::PdfAXActionTarget", %"class.pdf::PdfAXActionTarget"* %28, i64 0, i32 1
  %46 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %45, align 8
  %47 = getelementptr inbounds %struct.PP_PdfAccessibilityActionData, %struct.PP_PdfAccessibilityActionData* %6, i64 0, i32 9
  %48 = call zeroext i1 @_ZNK3pdf20PdfAccessibilityTree19FindCharacterOffsetERKN2ui6AXNodeEjP24PP_PdfPageCharacterIndex(%"class.pdf::PdfAccessibilityTree"* %44, %"class.ui::AXNode"* dereferenceable(456) %46, i32 %4, %struct.PP_PdfPageCharacterIndex* %47) #8
  br i1 %48, label %49, label %60

49:                                               ; preds = %43
  %50 = getelementptr inbounds %struct.PP_PdfAccessibilityActionData, %struct.PP_PdfAccessibilityActionData* %6, i64 0, i32 0
  store i32 4, i32* %50, align 4
  %51 = getelementptr inbounds %"class.pdf::PdfAXActionTarget", %"class.pdf::PdfAXActionTarget"* %0, i64 0, i32 1
  %52 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %51, align 8
  %53 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %52, i64 0, i32 7, i32 13, i32 2, i32 0, i32 0
  %54 = bitcast float* %53 to <4 x float>*
  %55 = load <4 x float>, <4 x float>* %54, align 4
  %56 = fptosi <4 x float> %55 to <4 x i32>
  %57 = getelementptr inbounds %struct.PP_PdfAccessibilityActionData, %struct.PP_PdfAccessibilityActionData* %6, i64 0, i32 3, i32 0, i32 0
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> %56, <4 x i32>* %58, align 4
  %59 = load %"class.pdf::PdfAccessibilityTree"*, %"class.pdf::PdfAccessibilityTree"** %37, align 8
  call void @_ZN3pdf20PdfAccessibilityTree12HandleActionERK29PP_PdfAccessibilityActionData(%"class.pdf::PdfAccessibilityTree"* %59, %struct.PP_PdfAccessibilityActionData* nonnull dereferenceable(64) %6) #8
  br label %60

60:                                               ; preds = %35, %43, %49
  %61 = phi i1 [ true, %49 ], [ false, %43 ], [ false, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %36) #8
  br label %62

62:                                               ; preds = %17, %20, %60
  %63 = phi i1 [ %61, %60 ], [ false, %20 ], [ false, %17 ]
  ret i1 %63
}

declare zeroext i1 @_ZNK3pdf20PdfAccessibilityTree19FindCharacterOffsetERKN2ui6AXNodeEjP24PP_PdfPageCharacterIndex(%"class.pdf::PdfAccessibilityTree"*, %"class.ui::AXNode"* dereferenceable(456), i32, %struct.PP_PdfPageCharacterIndex*) local_unnamed_addr #5

declare zeroext i1 @_ZN3pdf20PdfAccessibilityTree15ShowContextMenuEv(%"class.pdf::PdfAccessibilityTree"*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK3pdf17PdfAXActionTarget19ScrollToMakeVisibleEv(%"class.pdf::PdfAXActionTarget"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3pdf17PdfAXActionTarget31ScrollToMakeVisibleWithSubFocusERKN3gfx4RectEN2ax5mojom15ScrollAlignmentES7_NS6_14ScrollBehaviorE(%"class.pdf::PdfAXActionTarget"* nocapture readonly, %"class.gfx::Rect"* nocapture readnone dereferenceable(16), i32, i32, i32) unnamed_addr #0 align 2 {
  %6 = alloca %struct.PP_PdfAccessibilityActionData, align 4
  %7 = bitcast %struct.PP_PdfAccessibilityActionData* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %7) #8
  %8 = getelementptr inbounds %struct.PP_PdfAccessibilityActionData, %struct.PP_PdfAccessibilityActionData* %6, i64 0, i32 1
  %9 = bitcast i32* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %9, i8 0, i64 60, i1 false)
  %10 = getelementptr inbounds %struct.PP_PdfAccessibilityActionData, %struct.PP_PdfAccessibilityActionData* %6, i64 0, i32 0
  store i32 1, i32* %10, align 4
  %11 = add i32 %2, -1
  %12 = icmp ult i32 %11, 6
  %13 = select i1 %12, i32 %2, i32 0
  %14 = getelementptr inbounds %struct.PP_PdfAccessibilityActionData, %struct.PP_PdfAccessibilityActionData* %6, i64 0, i32 6
  store i32 %13, i32* %14, align 4
  %15 = add i32 %3, -1
  %16 = icmp ult i32 %15, 6
  %17 = select i1 %16, i32 %3, i32 0
  %18 = getelementptr inbounds %struct.PP_PdfAccessibilityActionData, %struct.PP_PdfAccessibilityActionData* %6, i64 0, i32 7
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds %"class.pdf::PdfAXActionTarget", %"class.pdf::PdfAXActionTarget"* %0, i64 0, i32 1
  %20 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %19, align 8
  %21 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %20, i64 0, i32 7, i32 13, i32 2, i32 0, i32 0
  %22 = bitcast float* %21 to <4 x float>*
  %23 = load <4 x float>, <4 x float>* %22, align 4
  %24 = fptosi <4 x float> %23 to <4 x i32>
  %25 = getelementptr inbounds %struct.PP_PdfAccessibilityActionData, %struct.PP_PdfAccessibilityActionData* %6, i64 0, i32 3, i32 0, i32 0
  %26 = bitcast i32* %25 to <4 x i32>*
  store <4 x i32> %24, <4 x i32>* %26, align 4
  %27 = getelementptr inbounds %"class.pdf::PdfAXActionTarget", %"class.pdf::PdfAXActionTarget"* %0, i64 0, i32 2
  %28 = load %"class.pdf::PdfAccessibilityTree"*, %"class.pdf::PdfAccessibilityTree"** %27, align 8
  call void @_ZN3pdf20PdfAccessibilityTree12HandleActionERK29PP_PdfAccessibilityActionData(%"class.pdf::PdfAccessibilityTree"* %28, %struct.PP_PdfAccessibilityActionData* nonnull dereferenceable(64) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %7) #8
  ret i1 true
}

; Function Attrs: nounwind
declare void @_ZN3pdf20PdfAccessibilityTree14AnnotationInfoD1Ev(%"struct.pdf::PdfAccessibilityTree::AnnotationInfo"*) unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
